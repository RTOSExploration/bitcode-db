; ModuleID = './Build/minicli.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.flash_info_t = type { i8*, i8, i32, i32, i32, i8, i8, i8 }
%struct.log_control_block_t = type { i8*, i32, i32, void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* }
%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.hal_gpt_context_t = type { i32, %struct.hal_gpt_callback_context, i8 }
%struct.hal_gpt_callback_context = type { void (i8*)*, i8* }
%struct.uart_context_t = type { i8, %struct.hal_uart_config_t, i8, %struct.hal_uart_callback_config_t, i8, %struct.hal_uart_dma_config_t }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.hal_uart_callback_config_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.cli_s = type { i8, %struct.cmd_s*, i8, i32 ()*, i32 (i32)*, i8 (i8*, i8*)*, [20 x i8*], %struct.cli_history_s }
%struct.cmd_s = type { i8*, i8*, i8 (i8, i8**)*, %struct.cmd_s* }
%struct.cli_history_s = type { i8**, i8*, i8*, i16, i16, i16, i16, i8 }
%struct.DMA_SWCOPYMENU = type { i32, i32 }
%struct.tskTaskControlBlock = type { i32*, %struct.xLIST_ITEM, %struct.xLIST_ITEM, i32, i32*, [6 x i8], i32, i32, i32, i32, i32, i32 }
%struct.xLIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM*, i8*, i8* }
%struct.xLIST = type { i32, %struct.xLIST_ITEM*, %struct.xMINI_LIST_ITEM }
%struct.xMINI_LIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM* }
%struct.QUEUE_REGISTRY_ITEM = type { i8*, i8* }
%struct.A_BLOCK_LINK = type { %struct.A_BLOCK_LINK*, i32 }
%struct.exception_config_t = type { i32, [6 x %struct.exception_config_type] }
%struct.exception_config_type = type { void ()*, void ()* }
%struct.TaskContextType = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.memory_region_type = type { i8*, i32*, i32*, i32 }
%struct.syslog_buffer_t = type { i32, [292 x i8] }
%struct.syslog_config_s = type { {}*, %struct.log_control_block_t** }
%struct.DMA_INPUT = type { i32, i32, i32, i8*, void ()* }
%struct.DMA_FULLSIZE_HWMENU = type { %struct.DMA_TMODE, i32, i32, i32 }
%struct.DMA_TMODE = type { i8, i8 }
%struct.DMA_HWMENU = type { %struct.DMA_TMODE, i32, i32 }
%struct.DMA_FULLSIZE_HWRINGBUFF_MENU = type { %struct.DMA_TMODE, i32, i32, i32, i8*, i8* }
%struct.DMA_HWRINGBUFF_MENU = type { %struct.DMA_TMODE, i32, i32, i8*, i8* }
%struct.__va_list = type { i8* }
%struct.xMEMORY_REGION = type { i8*, i32, i32 }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.__tm*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct.__tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }
%struct.xTASK_STATUS = type { i8*, i8*, i32, i32, i32, i32, i32, i16 }
%struct.QueueDefinition = type { i8*, i8*, i8*, %struct.__va_list, %struct.xLIST, %struct.xLIST, i32, i32, i32, i32, i32, i32, i8 }
%struct.tmrTimerQueueMessage = type { i32, %union.anon }
%union.anon = type { %struct.tmrTimerParameters }
%struct.tmrTimerParameters = type { i32, %struct.tmrTimerControl* }
%struct.tmrTimerControl = type { i8*, %struct.xLIST_ITEM, i32, i32, i8*, void (i8*)*, i32 }
%struct.normal_log_message_t = type { i8*, i32, i8*, i32, i32, [257 x i8] }
%struct.hex_dump_message_t = type { i8*, i32, i8*, i32, i32, [129 x i8], i32, [128 x i8], i8* }
%struct.log_message_t = type { i32, %union.anon.22 }
%union.anon.22 = type { %struct.hex_dump_message_t }

@DMA_LISR_FUNC = dso_local local_unnamed_addr global <{ void ()*, [10 x void ()*] }> <{ void ()* @DMA_ERROR_LISR, [10 x void ()*] zeroinitializer }>, align 4, !dbg !0
@DMA_VFIFO_LISR_FUNC = dso_local local_unnamed_addr global <{ void ()*, [13 x void ()*] }> <{ void ()* @DMA_ERROR_LISR, [13 x void ()*] zeroinitializer }>, align 4, !dbg !176
@DMA_VFIFO_TO_LISR_FUNC = dso_local local_unnamed_addr global <{ void ()*, [13 x void ()*] }> <{ void ()* @DMA_ERROR_LISR, [13 x void ()*] zeroinitializer }>, align 4, !dbg !185
@DMA_Channel_Status = internal unnamed_addr global i32 65535, align 4, !dbg !192
@DMA_Owner = dso_local local_unnamed_addr global [11 x i32] zeroinitializer, align 4, !dbg !187
@.str = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1 = private unnamed_addr constant [52 x i8] c"../../../../..//driver/chip/mt7687/src/common/dma.c\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"%s: ERROR! Register invalid DMA CH(%d)\0A\00", align 1
@__FUNCTION__.DMA_Register = private unnamed_addr constant [13 x i8] c"DMA_Register\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"%s: ERROR! Unregister invalid DMA CH(%d)\0A\00", align 1
@__FUNCTION__.DMA_UnRegister = private unnamed_addr constant [15 x i8] c"DMA_UnRegister\00", align 1
@DMA_used_channel = internal unnamed_addr global [11 x i8] zeroinitializer, align 1, !dbg !194
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !198
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !255
@.str.4 = private unnamed_addr constant [58 x i8] c"../../../../..//driver/chip/mt7687/src/common/flash_sfc.c\00", align 1
@__func__.gpt_get_current_time = private unnamed_addr constant [21 x i8] c"gpt_get_current_time\00", align 1
@.str.1.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@sf_Mutex = internal unnamed_addr global i1 false, align 4, !dbg !267
@__func__.free_sf_lock = private unnamed_addr constant [13 x i8] c"free_sf_lock\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@.str.2.6 = private unnamed_addr constant [19 x i8] c"SF_DAL_FLAG_BUSY()\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@suspend_time = dso_local local_unnamed_addr global i32 0, align 4, !dbg !259
@resume_suspend_on_ready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !261
@resume_suspend_on_checkready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !263
@g_u4ClkCnt1ms = dso_local local_unnamed_addr global i32 0, align 4, !dbg !268
@.str.7 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.8 = private unnamed_addr constant [52 x i8] c"../../../../..//driver/chip/mt7687/src/common/gpt.c\00", align 1
@GPTTimer.0 = internal unnamed_addr global void ()* null, align 4, !dbg !290
@GPTTimer.1 = internal unnamed_addr global void ()* null, align 4, !dbg !291
@g_sfc_security_enable = dso_local local_unnamed_addr global i32 0, align 4, !dbg !292
@.str.13 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.14 = private unnamed_addr constant [52 x i8] c"../../../../..//driver/chip/mt7687/src/common/sfc.c\00", align 1
@switch.table.sfc_direct_read_setup = private unnamed_addr constant [3 x i32] [i32 16, i32 112, i32 113], align 4
@gSFC_max_data_size = dso_local local_unnamed_addr global i32 128, align 4, !dbg !311
@cmdlist_switchqpi_winbond = dso_local constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !342
@cmdlist_switchspi_winbond = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !347
@cmdlist_switchspiq_winbond = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !352
@cmdlist_suspend_winbond = dso_local global [4 x i8] c"\01\01u\00", align 1, !dbg !357
@cmdlist_resume_winbond = dso_local global [4 x i8] c"\01\01z\00", align 1, !dbg !360
@cmdlist_switchspiq_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !362
@cmdlist_switchqpi_mxic = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !367
@cmdlist_switchspi_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01\00\00", align 1, !dbg !369
@cmdlist_switchspiq_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !371
@cmdlist_switchqpi_gd = dso_local local_unnamed_addr constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !373
@cmdlist_switchspi_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\00\00", align 1, !dbg !375
@cmdlist_switchspi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\00\00", align 1, !dbg !377
@cmdlist_switchspiq_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !379
@cmdlist_switchqpi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !381
@cmdlist_switchspi_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\01\00", align 1, !dbg !383
@cmdlist_switchspiq_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !385
@cmdlist_switchqpi_micron = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !387
@cmdlist_flash_reset_spimode = dso_local constant [7 x i8] c"\01\01f\01\01\99\00", align 1, !dbg !389
@cmdlist_flash_reset_qpimode = dso_local constant [7 x i8] c"\03\01f\03\01\99\00", align 1, !dbg !394
@spi_chip_info = dso_local local_unnamed_addr global %struct.flash_info_t* null, align 4, !dbg !396
@gd_write_sr2_1 = dso_local local_unnamed_addr global i32 0, align 4, !dbg !398
@support_flash_id = dso_local local_unnamed_addr global i32 0, align 4, !dbg !400
@gucFlashSFCMode = dso_local local_unnamed_addr global i32 0, align 4, !dbg !257
@chips_data = internal constant [13 x %struct.flash_info_t] [%struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i8 -1, i32 -1, i32 4096, i32 256, i8 0, i8 0, i8 0 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), i8 -17, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8 -17, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8 -17, i32 1075052544, i32 4096, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13.27, i32 0, i32 0), i8 -62, i32 538312704, i32 16384, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8 -62, i32 538181632, i32 4096, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8 -62, i32 588578816, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0), i8 -56, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i8 -56, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8 -56, i32 1108738048, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0), i8 32, i32 -1172832256, i32 65536, i32 256, i8 50, i8 107, i8 -21 }], align 4, !dbg !403
@sf_drvier_status = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !252
@__FUNCTION__.flash_check_device = private unnamed_addr constant [19 x i8] c"flash_check_device\00", align 1
@.str.25 = private unnamed_addr constant [33 x i8] c" Check flash device Failed !! \0A\0D\00", align 1
@.str.1.26 = private unnamed_addr constant [31 x i8] c"spi device id: %x %x %x (%x)\0A\0D\00", align 1
@.str.2.28 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.3.29 = private unnamed_addr constant [58 x i8] c"../../../../..//driver/chip/mt7687/src/common/spi_flash.c\00", align 1
@__FUNCTION__.flash_config = private unnamed_addr constant [13 x i8] c"flash_config\00", align 1
@.str.4.30 = private unnamed_addr constant [30 x i8] c"spi device id: %x %x %x (%x)\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"find flash: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Don't support flash: %s\0A\00", align 1
@__FUNCTION__.flash_init = private unnamed_addr constant [11 x i8] c"flash_init\00", align 1
@__func__.flash_wait_ready = private unnamed_addr constant [17 x i8] c"flash_wait_ready\00", align 1
@.str.7.35 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__FUNCTION__.flash_read_sr2 = private unnamed_addr constant [15 x i8] c"flash_read_sr2\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"flash_read_sr2: no init flash !\0A\00", align 1
@__func__.flash_write = private unnamed_addr constant [12 x i8] c"flash_write\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"DEF_FLASH\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"W25Q32JV\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"W25Q16DV\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"W25Q80DV\00", align 1
@.str.13.27 = private unnamed_addr constant [11 x i8] c"MX25L3233F\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"MX25L1635F\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"MX25V1635F\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"MX25V8035F\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"KH25V1635F\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"GD25Q32CSIG\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"GD25Q16CSIG\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"GD25VE32C\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"N25Q128A\00", align 1
@gXtalFreq = internal unnamed_addr global i32 0, align 4, !dbg !408
@gCpuFrequency = internal unnamed_addr global i32 0, align 4, !dbg !418
@switch.table.top_xtal_init = private unnamed_addr constant [8 x i32] [i32 20000000, i32 40000000, i32 26000000, i32 52000000, i32 40000000, i32 40000000, i32 40000000, i32 40000000], align 4
@switch.table.top_xtal_init.1 = private unnamed_addr constant [8 x i32] [i32 16, i32 512, i32 64, i32 1024, i32 512, i32 512, i32 512, i32 512], align 4
@.str.60 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.61 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@__const.halUART_SetFormat.fraction_L_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 16, i16 68, i16 146, i16 41, i16 170, i16 182, i16 219, i16 173, i16 255, i16 255], align 2
@__const.halUART_SetFormat.fraction_M_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3], align 2
@gUartClkFreq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !420
@.str.62 = private unnamed_addr constant [4 x i8] c"hal\00", align 1
@log_control_block_hal = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !453
@g_cache_status = dso_local global i8 0, align 1, !dbg !490
@.str.71 = private unnamed_addr constant [51 x i8] c"../../../../..//driver/chip/mt7687/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1.72 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_cache_con = dso_local local_unnamed_addr global %union.CACHE_CON_Type zeroinitializer, align 4, !dbg !573
@g_cache_region_en = dso_local local_unnamed_addr global i32 0, align 4, !dbg !578
@g_cache_entry = dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type] zeroinitializer, align 4, !dbg !581
@nvic_function_table = dso_local local_unnamed_addr global [96 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !626
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.85 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@g_gpt_context = internal global [5 x %struct.hal_gpt_context_t] zeroinitializer, align 4, !dbg !718
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.88 = private unnamed_addr constant [18 x i8] c"Invalid port: %d.\00", align 1
@__FUNCTION__.hal_gpt_deinit = private unnamed_addr constant [15 x i8] c"hal_gpt_deinit\00", align 1
@.str.1.89 = private unnamed_addr constant [23 x i8] c"Should call  port: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_free_run_count = private unnamed_addr constant [27 x i8] c"hal_gpt_get_free_run_count\00", align 1
@.str.2.92 = private unnamed_addr constant [23 x i8] c"Invalid parameter: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_running_status = private unnamed_addr constant [27 x i8] c"hal_gpt_get_running_status\00", align 1
@.str.3.93 = private unnamed_addr constant [45 x i8] c"Invalid hal_gpt_stop_timer to stop port: %d.\00", align 1
@__FUNCTION__.hal_gpt_register_callback = private unnamed_addr constant [26 x i8] c"hal_gpt_register_callback\00", align 1
@.str.4.94 = private unnamed_addr constant [51 x i8] c"Invalid port: %d. Only port 0 or 1 works as timer.\00", align 1
@__FUNCTION__.hal_gpt_start_timer_ms = private unnamed_addr constant [23 x i8] c"hal_gpt_start_timer_ms\00", align 1
@__FUNCTION__.hal_gpt_stop_timer = private unnamed_addr constant [19 x i8] c"hal_gpt_stop_timer\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !757
@g_uart_context_table = internal global [2 x %struct.uart_context_t] zeroinitializer, align 4, !dbg !813
@g_uart_send_lock_status = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !859
@g_uart_sleep_handler = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !856
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.61, i32 0, i32 0)], align 4, !dbg !440
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [2 x i32] [i32 0, i32 5], align 4, !dbg !448
@hal_uart_map_receive_callback.func_tbl = internal unnamed_addr constant [2 x void ()*] [void ()* @hal_uart_receive_callback0, void ()* @hal_uart_receive_callback1], align 4, !dbg !862
@__const.hal_uart_translate_baudrate.baudrate_tbl = private unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4
@__const.hal_uart_translate_word_length.databit_tbl = private unnamed_addr constant [4 x i16] [i16 0, i16 1, i16 2, i16 3], align 2
@__const.hal_uart_translate_parity.parity_tbl = private unnamed_addr constant [5 x i16] [i16 0, i16 8, i16 24, i16 0, i16 0], align 2
@__const.hal_uart_translate_stopbit.stopbit_tbl = private unnamed_addr constant [3 x i16] [i16 0, i16 4, i16 4], align 2
@DWT_NUMCOMP = internal unnamed_addr global i32 0, align 4, !dbg !872
@cmdlist_switchqpi_default = dso_local local_unnamed_addr constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !922
@cmdlist_switchspi_default = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !942
@cmdlist_switchspiq_default = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !944
@customer_flash_info = dso_local local_unnamed_addr constant %struct.flash_info_t zeroinitializer, align 4, !dbg !946
@_cli_cb = internal global %struct.cli_s { i8 1, %struct.cmd_s* getelementptr inbounds ([2 x %struct.cmd_s], [2 x %struct.cmd_s]* @_cmds_normal, i32 0, i32 0), i8 0, i32 ()* @__io_getchar, i32 (i32)* @__io_putchar, i8 (i8*, i8*)* null, [20 x i8*] zeroinitializer, %struct.cli_history_s zeroinitializer }, align 4, !dbg !948
@s_history_lines = internal global [20 x [128 x i8]] zeroinitializer, align 1, !dbg !954
@s_history_ptrs = internal global [20 x i8*] zeroinitializer, align 4, !dbg !960
@s_history_input = internal global [128 x i8] zeroinitializer, align 1, !dbg !964
@s_history_parse_token = internal global [128 x i8] zeroinitializer, align 1, !dbg !968
@.str.107 = private unnamed_addr constant [4 x i8] c"cli\00", align 1
@_cmds_normal = internal global [2 x %struct.cmd_s] [%struct.cmd_s { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.108, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2.109, i32 0, i32 0), i8 (i8, i8**)* @cli_helloworld, %struct.cmd_s* null }, %struct.cmd_s zeroinitializer], align 4, !dbg !970
@.str.1.108 = private unnamed_addr constant [6 x i8] c"hello\00", align 1
@.str.2.109 = private unnamed_addr constant [12 x i8] c"hello world\00", align 1
@.str.3.110 = private unnamed_addr constant [19 x i8] c"Hello world Keil\0D\0A\00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"flash\00", align 1
@__FLASH_segment_start__ = external dso_local global [0 x i32], align 4
@__FLASH_segment_end__ = external dso_local global [0 x i32], align 4
@.str.1.112 = private unnamed_addr constant [5 x i8] c"sram\00", align 1
@__SRAM_segment_start__ = external dso_local global [0 x i32], align 4
@__SRAM_segment_end__ = external dso_local global [0 x i32], align 4
@.str.2.113 = private unnamed_addr constant [8 x i8] c"ramtext\00", align 1
@__ramtext_start__ = external dso_local global [0 x i32], align 4
@__ramtext_end__ = external dso_local global [0 x i32], align 4
@.str.3.114 = private unnamed_addr constant [7 x i8] c"tcmbss\00", align 1
@__tcmbss_start__ = external dso_local global [0 x i32], align 4
@__tcmbss_end__ = external dso_local global [0 x i32], align 4
@.str.4.115 = private unnamed_addr constant [4 x i8] c"scs\00", align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !1023
@__FUNCTION__.system_init = private unnamed_addr constant [12 x i8] c"system_init\00", align 1
@.str.126 = private unnamed_addr constant [17 x i8] c"FreeRTOS Running\00", align 1
@region_cfg_tbl = internal constant [1 x %struct.DMA_SWCOPYMENU] [%struct.DMA_SWCOPYMENU { i32 268435456, i32 16777216 }], align 4, !dbg !1083
@.str.2.127 = private unnamed_addr constant [18 x i8] c"trng init failed\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !1104
@end = external dso_local global i8, align 1
@.str.128 = private unnamed_addr constant [7 x i8] c"_exit\0A\00", align 1
@.str.1.129 = private unnamed_addr constant [10 x i8] c"_kill %d\0A\00", align 1
@.str.2.130 = private unnamed_addr constant [9 x i8] c"_getpid\0A\00", align 1
@__const.gpio_mode_init.mode_temp = private unnamed_addr constant [10 x i32] [i32 -2004322441, i32 -2004318072, i32 -2004318072, i32 -2004596600, i32 -2005464952, i32 -2004318072, i32 -2004318072, i32 -2004457336, i32 -2004318072, i32 8], align 4
@pxCurrentTCB = dso_local global %struct.tskTaskControlBlock* null, align 4, !dbg !1306
@.str.135 = private unnamed_addr constant [11 x i8] c"pxTaskCode\00", align 1
@.str.1.136 = private unnamed_addr constant [52 x i8] c"../../../../..//kernel/rtos/FreeRTOS/Source/tasks.c\00", align 1
@.str.2.137 = private unnamed_addr constant [67 x i8] c"( ( uxPriority & ( ~portPRIVILEGE_BIT ) ) < configMAX_PRIORITIES )\00", align 1
@uxCurrentNumberOfTasks = internal global i32 0, align 4, !dbg !1418
@xSchedulerRunning = internal global i32 0, align 4, !dbg !1421
@uxTaskNumber = internal unnamed_addr global i32 0, align 4, !dbg !1424
@uxTopReadyPriority = internal global i32 0, align 4, !dbg !1426
@pxReadyTasksLists = internal global [20 x %struct.xLIST] zeroinitializer, align 4, !dbg !1404
@xTasksWaitingTermination = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1414
@uxTasksDeleted = internal global i32 0, align 4, !dbg !1428
@uxSchedulerSuspended = internal global i32 0, align 4, !dbg !1430
@.str.4.138 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended == 0\00", align 1
@.str.5.139 = private unnamed_addr constant [19 x i8] c"pxPreviousWakeTime\00", align 1
@.str.6.140 = private unnamed_addr constant [24 x i8] c"( xTimeIncrement > 0U )\00", align 1
@xTickCount = internal global i32 0, align 4, !dbg !1432
@.str.7.143 = private unnamed_addr constant [41 x i8] c"( uxNewPriority < configMAX_PRIORITIES )\00", align 1
@xSuspendedTaskList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1416
@.str.8.145 = private unnamed_addr constant [14 x i8] c"xTaskToResume\00", align 1
@xPendingReadyList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1412
@.str.9.149 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.10.150 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.11.141 = private unnamed_addr constant [21 x i8] c"uxSchedulerSuspended\00", align 1
@xYieldPending = internal global i32 0, align 4, !dbg !1435
@uxPendedTicks = internal global i32 0, align 4, !dbg !1437
@.str.12.151 = private unnamed_addr constant [6 x i8] c"pxTCB\00", align 1
@pxDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !1407
@pxOverflowDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !1410
@.str.13.142 = private unnamed_addr constant [43 x i8] c"( listLIST_IS_EMPTY( pxDelayedTaskList ) )\00", align 1
@xNumOfOverflows = internal global i32 0, align 4, !dbg !1439
@xNextTaskUnblockTime = internal global i32 -1, align 4, !dbg !1441
@vTaskSwitchContext.ucExpectedStackBytes = internal constant [20 x i8] c"\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5", align 1, !dbg !1391
@.str.14.144 = private unnamed_addr constant [71 x i8] c"listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0\00", align 1
@.str.15.152 = private unnamed_addr constant [12 x i8] c"pxEventList\00", align 1
@.str.16.153 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended != 0\00", align 1
@.str.17.154 = private unnamed_addr constant [15 x i8] c"pxUnblockedTCB\00", align 1
@.str.18.155 = private unnamed_addr constant [32 x i8] c"uxSchedulerSuspended != pdFALSE\00", align 1
@.str.19.156 = private unnamed_addr constant [10 x i8] c"pxTimeOut\00", align 1
@.str.20.157 = private unnamed_addr constant [14 x i8] c"pxTicksToWait\00", align 1
@.str.21.158 = private unnamed_addr constant [21 x i8] c"pxTCB->uxMutexesHeld\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"\09%c\09%u\09%u\09%u\0D\0A\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"xTaskToNotify\00", align 1
@.str.24 = private unnamed_addr constant [62 x i8] c"listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL\00", align 1
@.str.25.146 = private unnamed_addr constant [6 x i8] c"xTask\00", align 1
@xDelayedTaskList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1443
@xDelayedTaskList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1445
@switch.table.vTaskList = private unnamed_addr constant [4 x i32] [i32 82, i32 66, i32 83, i32 68], align 4
@.str.169 = private unnamed_addr constant [8 x i8] c"pxQueue\00", align 1
@.str.1.170 = private unnamed_addr constant [52 x i8] c"../../../../..//kernel/rtos/FreeRTOS/Source/queue.c\00", align 1
@.str.2.171 = private unnamed_addr constant [34 x i8] c"uxQueueLength > ( UBaseType_t ) 0\00", align 1
@.str.3.172 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.4.173 = private unnamed_addr constant [11 x i8] c"pxNewQueue\00", align 1
@.str.5.177 = private unnamed_addr constant [8 x i8] c"pxMutex\00", align 1
@.str.6.179 = private unnamed_addr constant [16 x i8] c"uxMaxCount != 0\00", align 1
@.str.7.180 = private unnamed_addr constant [29 x i8] c"uxInitialCount <= uxMaxCount\00", align 1
@.str.8.181 = private unnamed_addr constant [8 x i8] c"xHandle\00", align 1
@.str.9.174 = private unnamed_addr constant [80 x i8] c"!( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.10.175 = private unnamed_addr constant [71 x i8] c"!( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) )\00", align 1
@.str.11.176 = private unnamed_addr constant [86 x i8] c"!( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) )\00", align 1
@.str.12.182 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize == 0\00", align 1
@.str.13.178 = private unnamed_addr constant [75 x i8] c"!( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.14.183 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize != 0\00", align 1
@.str.15.184 = private unnamed_addr constant [7 x i8] c"xQueue\00", align 1
@xQueueRegistry = dso_local local_unnamed_addr global [8 x %struct.QUEUE_REGISTRY_ITEM] zeroinitializer, align 4, !dbg !1448
@xTimerQueue = internal unnamed_addr global i8* null, align 4, !dbg !1511
@.str.187 = private unnamed_addr constant [8 x i8] c"Tmr Svc\00", align 1
@.str.1.188 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.2.189 = private unnamed_addr constant [53 x i8] c"../../../../..//kernel/rtos/FreeRTOS/Source/timers.c\00", align 1
@.str.3.194 = private unnamed_addr constant [28 x i8] c"( xTimerPeriodInTicks > 0 )\00", align 1
@pxCurrentTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !1544
@prvSampleTimeNow.xLastTime = internal unnamed_addr global i32 0, align 4, !dbg !1560
@.str.4.190 = private unnamed_addr constant [8 x i8] c"xResult\00", align 1
@pxOverflowTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !1570
@.str.5.191 = private unnamed_addr constant [37 x i8] c"( pxTimer->xTimerPeriodInTicks > 0 )\00", align 1
@xActiveTimerList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1572
@xActiveTimerList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1574
@.str.6.192 = private unnamed_addr constant [12 x i8] c"xTimerQueue\00", align 1
@.str.7.193 = private unnamed_addr constant [5 x i8] c"TmrQ\00", align 1
@ucMaxSysCallPriority = internal unnamed_addr global i8 0, align 1, !dbg !1576
@ulMaxPRIGROUPValue = internal unnamed_addr global i32 0, align 4, !dbg !1595
@uxCriticalNesting = internal unnamed_addr global i32 -1431655766, align 4, !dbg !1597
@.str.203 = private unnamed_addr constant [28 x i8] c"uxCriticalNesting == 1000UL\00", align 1
@.str.1.198 = private unnamed_addr constant [73 x i8] c"../../../../..//kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c\00", align 1
@.str.2.206 = private unnamed_addr constant [53 x i8] c"( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0\00", align 1
@.str.3.209 = private unnamed_addr constant [18 x i8] c"uxCriticalNesting\00", align 1
@.str.4.212 = private unnamed_addr constant [42 x i8] c"ucCurrentPriority >= ucMaxSysCallPriority\00", align 1
@.str.5.213 = private unnamed_addr constant [66 x i8] c"( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue\00", align 1
@.str.6.197 = private unnamed_addr constant [26 x i8] c"uxCriticalNesting == ~0UL\00", align 1
@pxEnd = internal unnamed_addr global %struct.A_BLOCK_LINK* null, align 4, !dbg !1599
@xBlockAllocatedBit = internal unnamed_addr global i1 false, align 4, !dbg !1628
@.str.1.217 = private unnamed_addr constant [70 x i8] c"../../../../..//kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c\00", align 1
@xFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !1619
@xStart = internal global %struct.A_BLOCK_LINK zeroinitializer, align 4, !dbg !1615
@.str.2.216 = private unnamed_addr constant [67 x i8] c"( ( ( uint32_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@xMinimumEverFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !1621
@.str.3.218 = private unnamed_addr constant [61 x i8] c"( ( ( uint32_t ) pvReturn ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@.str.4.221 = private unnamed_addr constant [49 x i8] c"( pxLink->xBlockSize & xBlockAllocatedBit ) != 0\00", align 1
@.str.5.222 = private unnamed_addr constant [32 x i8] c"pxLink->pxNextFreeBlock == NULL\00", align 1
@ucHeap = internal global [65536 x i8] zeroinitializer, align 1, !dbg !1623
@SystemCoreClock = dso_local local_unnamed_addr global i32 40000000, align 4, !dbg !1081
@xExceptionStack = internal global [192 x i32] zeroinitializer, align 4, !dbg !1629
@pxExceptionStack = dso_local local_unnamed_addr global i32* getelementptr inbounds ([192 x i32], [192 x i32]* @xExceptionStack, i32 0, i32 191), align 4, !dbg !1715
@assert_expr.0 = internal unnamed_addr global i1 false, align 4, !dbg !1809
@assert_expr.1 = internal unnamed_addr global i8* null, align 4, !dbg !1810
@assert_expr.2 = internal unnamed_addr global i8* null, align 4, !dbg !1811
@assert_expr.3 = internal unnamed_addr global i32 0, align 4, !dbg !1812
@reboot_flag = internal unnamed_addr global i32 0, align 4, !dbg !1787
@exception_config = internal unnamed_addr global %struct.exception_config_t zeroinitializer, align 4, !dbg !1789
@.str.227 = private unnamed_addr constant [40 x i8] c"assert failed: %s, file: %s, line: %d\0A\0D\00", align 1
@.str.1.228 = private unnamed_addr constant [14 x i8] c"Usage fault: \00", align 1
@.str.2.229 = private unnamed_addr constant [17 x i8] c"Divide by zero\0A\0D\00", align 1
@.str.3.230 = private unnamed_addr constant [19 x i8] c"Unaligned access\0A\0D\00", align 1
@.str.4.231 = private unnamed_addr constant [20 x i8] c"Coprocessor error\0A\0D\00", align 1
@.str.5.232 = private unnamed_addr constant [21 x i8] c"Invalid EXC_RETURN\0A\0D\00", align 1
@.str.6.233 = private unnamed_addr constant [16 x i8] c"Invalid state\0A\0D\00", align 1
@.str.7.234 = private unnamed_addr constant [24 x i8] c"Undefined instruction\0A\0D\00", align 1
@.str.8.235 = private unnamed_addr constant [26 x i8] c"Memory Management fault: \00", align 1
@.str.9.236 = private unnamed_addr constant [63 x i8] c"A MemManage fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.10.237 = private unnamed_addr constant [56 x i8] c"A derived MemManage fault occurred on exception entry\0A\0D\00", align 1
@.str.11.238 = private unnamed_addr constant [57 x i8] c"A derived MemManage fault occurred on exception return\0A\0D\00", align 1
@.str.12.239 = private unnamed_addr constant [32 x i8] c"Data access violation @0x%08x\0A\0D\00", align 1
@.str.13.240 = private unnamed_addr constant [64 x i8] c"MPU or Execute Never (XN) default memory map access violation\0A\0D\00", align 1
@.str.14.241 = private unnamed_addr constant [22 x i8] c"SCB->MMFAR = 0x%08x\0A\0D\00", align 1
@.str.15.242 = private unnamed_addr constant [12 x i8] c"Bus fault: \00", align 1
@.str.16.243 = private unnamed_addr constant [57 x i8] c"A bus fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.17.244 = private unnamed_addr constant [54 x i8] c"A derived bus fault has occurred on exception entry\0A\0D\00", align 1
@.str.18.245 = private unnamed_addr constant [55 x i8] c"A derived bus fault has occurred on exception return\0A\0D\00", align 1
@.str.19.246 = private unnamed_addr constant [43 x i8] c"Imprecise data access error has occurred\0A\0D\00", align 1
@.str.20.247 = private unnamed_addr constant [50 x i8] c"A precise data access error has occurred @x%08x\0A\0D\00", align 1
@.str.21.248 = private unnamed_addr constant [54 x i8] c"A bus fault on an instruction prefetch has occurred\0A\0D\00", align 1
@.str.22.249 = private unnamed_addr constant [21 x i8] c"SCB->BFAR = 0x%08x\0A\0D\00", align 1
@taskContext = internal global %struct.TaskContextType zeroinitializer, align 4, !dbg !1804
@pTaskContext = dso_local local_unnamed_addr global %struct.TaskContextType* @taskContext, align 4, !dbg !1718
@.str.23.250 = private unnamed_addr constant [15 x i8] c"r0  = 0x%08x\0A\0D\00", align 1
@.str.24.251 = private unnamed_addr constant [15 x i8] c"r1  = 0x%08x\0A\0D\00", align 1
@.str.25.252 = private unnamed_addr constant [15 x i8] c"r2  = 0x%08x\0A\0D\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"r3  = 0x%08x\0A\0D\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"r4  = 0x%08x\0A\0D\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"r5  = 0x%08x\0A\0D\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"r6  = 0x%08x\0A\0D\00", align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"r7  = 0x%08x\0A\0D\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"r8  = 0x%08x\0A\0D\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"r9  = 0x%08x\0A\0D\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"r10 = 0x%08x\0A\0D\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"r11 = 0x%08x\0A\0D\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"r12 = 0x%08x\0A\0D\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"lr  = 0x%08x\0A\0D\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"pc  = 0x%08x\0A\0D\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"psr = 0x%08x\0A\0D\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"EXC_RET = 0x%08x\0A\0D\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"s0  = 0x%08x\0A\0D\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"s1  = 0x%08x\0A\0D\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"s2  = 0x%08x\0A\0D\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"s3  = 0x%08x\0A\0D\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"s4  = 0x%08x\0A\0D\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"s5  = 0x%08x\0A\0D\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"s6  = 0x%08x\0A\0D\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"s7  = 0x%08x\0A\0D\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"s8  = 0x%08x\0A\0D\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"s9  = 0x%08x\0A\0D\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"s10 = 0x%08x\0A\0D\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"s11 = 0x%08x\0A\0D\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"s12 = 0x%08x\0A\0D\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"s13 = 0x%08x\0A\0D\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"s14 = 0x%08x\0A\0D\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"s15 = 0x%08x\0A\0D\00", align 1
@.str.56 = private unnamed_addr constant [15 x i8] c"s16 = 0x%08x\0A\0D\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"s17 = 0x%08x\0A\0D\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"s18 = 0x%08x\0A\0D\00", align 1
@.str.59 = private unnamed_addr constant [15 x i8] c"s19 = 0x%08x\0A\0D\00", align 1
@.str.60.253 = private unnamed_addr constant [15 x i8] c"s20 = 0x%08x\0A\0D\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"s21 = 0x%08x\0A\0D\00", align 1
@.str.62.254 = private unnamed_addr constant [15 x i8] c"s22 = 0x%08x\0A\0D\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"s23 = 0x%08x\0A\0D\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"s24 = 0x%08x\0A\0D\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"s25 = 0x%08x\0A\0D\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"s26 = 0x%08x\0A\0D\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"s27 = 0x%08x\0A\0D\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"s28 = 0x%08x\0A\0D\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"s29 = 0x%08x\0A\0D\00", align 1
@.str.70 = private unnamed_addr constant [15 x i8] c"s30 = 0x%08x\0A\0D\00", align 1
@.str.71.255 = private unnamed_addr constant [15 x i8] c"s31 = 0x%08x\0A\0D\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"fpscr = 0x%08x\0A\0D\00", align 1
@.str.73 = private unnamed_addr constant [19 x i8] c"CONTROL = 0x%08x\0A\0D\00", align 1
@.str.74 = private unnamed_addr constant [19 x i8] c"MSP     = 0x%08x\0A\0D\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"PSP     = 0x%08x\0A\0D\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"sp      = 0x%08x\0A\0D\00", align 1
@memory_regions = dso_local local_unnamed_addr constant [6 x %struct.memory_region_type] [%struct.memory_region_type { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_end__, i32 0, i32 0), i32 0 }, %struct.memory_region_type { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.112, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.113, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.114, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.115, i32 0, i32 0), i32* inttoptr (i32 -536813568 to i32*), i32* inttoptr (i32 -536809472 to i32*), i32 1 }, %struct.memory_region_type zeroinitializer], align 4, !dbg !1813
@.str.77 = private unnamed_addr constant [30 x i8] c"0x%08x: %08x %08x %08x %08x\0A\0D\00", align 1
@.str.78 = private unnamed_addr constant [27 x i8] c"\0A\0Dmemory dump completed.\0A\0D\00", align 1
@.str.79 = private unnamed_addr constant [26 x i8] c"\0A\0DIn Hard Fault Handler\0A\0D\00", align 1
@.str.80 = private unnamed_addr constant [21 x i8] c"SCB->HFSR = 0x%08x\0A\0D\00", align 1
@.str.81 = private unnamed_addr constant [20 x i8] c"Forced Hard Fault\0A\0D\00", align 1
@.str.82 = private unnamed_addr constant [21 x i8] c"SCB->CFSR = 0x%08x\0A\0D\00", align 1
@.str.83 = private unnamed_addr constant [31 x i8] c"\0A\0DIn MemManage Fault Handler\0A\0D\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"\0A\0DIn Bus Fault Handler\0A\0D\00", align 1
@.str.85.256 = private unnamed_addr constant [27 x i8] c"\0A\0DIn Usage Fault Handler\0A\0D\00", align 1
@.str.86 = private unnamed_addr constant [35 x i8] c"\0A\0DIn Debug Monitor Fault Handler\0D\0A\00", align 1
@.str.87 = private unnamed_addr constant [42 x i8] c"Task stack overflow:%c, stack end:0x%x \0D\0A\00", align 1
@.str.259 = private unnamed_addr constant [24 x i8] c"stack overflow: %x %s\0D\0A\00", align 1
@.str.1.260 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.261 = private unnamed_addr constant [54 x i8] c"../../../../..//kernel/service/src/os_port_callback.c\00", align 1
@.str.264 = private unnamed_addr constant [7 x i8] c"common\00", align 1
@log_control_block_common = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.264, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !1827
@g_log_uart_port = internal unnamed_addr global i32 0, align 4, !dbg !1936
@syslog_init_done = internal unnamed_addr global i32 0, align 4, !dbg !1938
@syslog_buffer_pool = internal global [16 x %struct.syslog_buffer_t] zeroinitializer, align 4, !dbg !1919
@syslog_drop_count = internal unnamed_addr global i32 0, align 4, !dbg !1940
@g_log_queue = internal unnamed_addr global i8* null, align 4, !dbg !1942
@.str.1.281 = private unnamed_addr constant [45 x i8] c"log_queue_create: create log queue failed.\0D\0A\00", align 1
@.str.2.272 = private unnamed_addr constant [34 x i8] c"[T: %u M: %s C: %s F: %s L: %d]: \00", align 1
@print_level_table = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.271, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.276, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20.277, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.278, i32 0, i32 0)], align 4, !dbg !1944
@.str.3.271 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.4.282 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1
@.str.5.274 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.6.273 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.7.275 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8.283 = private unnamed_addr constant [29 x i8] c"\09\09>>> log drop count = %u\0D\0A\0A\00", align 1
@syslog_task_ready = internal unnamed_addr global i1 false, align 4, !dbg !1954
@.str.9.286 = private unnamed_addr constant [7 x i8] c"SYSLOG\00", align 1
@syslog_task_handle = internal global i8* null, align 4, !dbg !1917
@.str.10.287 = private unnamed_addr constant [39 x i8] c"log_init: create syslog task failed.\0D\0A\00", align 1
@syslog_config = internal global %struct.syslog_config_s zeroinitializer, align 8, !dbg !1922
@__FUNCTION__.log_init = private unnamed_addr constant [9 x i8] c"log_init\00", align 1
@.str.11.288 = private unnamed_addr constant [27 x i8] c"load syslog config failed\0A\00", align 1
@.str.12.290 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.13.294 = private unnamed_addr constant [19 x i8] c"%s%s 0x%01x 0x%01x\00", align 1
@.str.14.293 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15.295 = private unnamed_addr constant [24 x i8] c"pos < SYSLOG_FILTER_LEN\00", align 1
@.str.16.296 = private unnamed_addr constant [44 x i8] c"../../../../..//kernel/service/src/syslog.c\00", align 1
@.str.17.297 = private unnamed_addr constant [43 x i8] c"log_switch - DEBUG_LOG_ON <= DEBUG_LOG_OFF\00", align 1
@log_switch_table = internal unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.291, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.292, i32 0, i32 0)], align 4, !dbg !1951
@.str.18.298 = private unnamed_addr constant [53 x i8] c"print_level - PRINT_LEVEL_DEBUG <= PRINT_LEVEL_ERROR\00", align 1
@.str.19.276 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.20.277 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.21.278 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.22.289 = private unnamed_addr constant [29 x i8] c"\0A\0D>>> dump syslog buffer\0A\0D\0A\0D\00", align 1
@.str.23.291 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.24.292 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@is_io_ready = internal unnamed_addr global i1 false, align 1, !dbg !1955
@_g_semaphore_tx = internal unnamed_addr global i8* null, align 4, !dbg !1996
@.str.301 = private unnamed_addr constant [2 x i8] c"\0D\00", align 1
@_g_semaphore_rx = internal unnamed_addr global i8* null, align 4, !dbg !2000
@g_tx_vfifo = internal global [512 x i8] zeroinitializer, align 4, !dbg !1987
@g_rx_vfifo = internal global [128 x i8] zeroinitializer, align 4, !dbg !1992
@__const.bsp_io_def_uart_init.dma_config = private unnamed_addr constant %struct.hal_uart_dma_config_t { i8* getelementptr inbounds ([512 x i8], [512 x i8]* @g_tx_vfifo, i32 0, i32 0), i32 512, i32 64, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @g_rx_vfifo, i32 0, i32 0), i32 128, i32 128, i32 0 }, align 4
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 07:57:39 GMT +00:00\00", align 1, !dbg !2002
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2007
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt7687_hdk\00", align 1, !dbg !2011

; Function Attrs: nofree noinline norecurse noreturn nosync nounwind optsize readnone
define dso_local void @DMA_ERROR_LISR() #0 !dbg !2134 {
  br label %1, !dbg !2136

1:                                                ; preds = %0, %1
  br label %1, !dbg !2136, !llvm.loop !2137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @DMA_Stop(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !2139 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2143, metadata !DIExpression()), !dbg !2144
  %2 = zext i8 %0 to i32, !dbg !2145
  %3 = shl nuw nsw i32 %2, 8, !dbg !2145
  %4 = or i32 %3, -2097086440, !dbg !2145
  %5 = inttoptr i32 %4 to i32*, !dbg !2145
  store volatile i32 0, i32* %5, align 8, !dbg !2145
  %6 = or i32 %3, -2097086432, !dbg !2146
  %7 = inttoptr i32 %6 to i32*, !dbg !2146
  store volatile i32 32768, i32* %7, align 32, !dbg !2146
  ret void, !dbg !2147
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @DMA_Run(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !2148 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2150, metadata !DIExpression()), !dbg !2151
  tail call void @DMA_Stop(i8 noundef zeroext %0) #19, !dbg !2152
  %2 = zext i8 %0 to i32, !dbg !2153
  %3 = shl nuw nsw i32 %2, 8, !dbg !2153
  %4 = or i32 %3, -2097086440, !dbg !2153
  %5 = inttoptr i32 %4 to i32*, !dbg !2153
  store volatile i32 32768, i32* %5, align 8, !dbg !2153
  ret void, !dbg !2154
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @DMA_GetChannel(i32 noundef %0) local_unnamed_addr #3 !dbg !2155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2159, metadata !DIExpression()), !dbg !2163
  call void @llvm.dbg.value(metadata i8 -1, metadata !2161, metadata !DIExpression()), !dbg !2163
  %2 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #20, !dbg !2164, !srcloc !2173
  call void @llvm.dbg.value(metadata i32 %2, metadata !2170, metadata !DIExpression()) #20, !dbg !2174
  call void @llvm.dbg.value(metadata i32 %2, metadata !2162, metadata !DIExpression()), !dbg !2163
  tail call void asm sideeffect "cpsid i", "~{memory}"() #20, !dbg !2175, !srcloc !2178
  call void @llvm.dbg.value(metadata i8 3, metadata !2160, metadata !DIExpression()), !dbg !2163
  %3 = load i32, i32* @DMA_Channel_Status, align 4
  call void @llvm.dbg.value(metadata i8 3, metadata !2160, metadata !DIExpression()), !dbg !2163
  br label %4, !dbg !2179

4:                                                ; preds = %1, %13
  %5 = phi i32 [ 3, %1 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !2160, metadata !DIExpression()), !dbg !2163
  %6 = shl nuw nsw i32 1, %5, !dbg !2181
  %7 = and i32 %3, %6, !dbg !2185
  %8 = icmp eq i32 %7, 0, !dbg !2186
  br i1 %8, label %13, label %9, !dbg !2187

9:                                                ; preds = %4
  %10 = trunc i32 %5 to i8, !dbg !2163
  call void @llvm.dbg.value(metadata i8 %10, metadata !2161, metadata !DIExpression()), !dbg !2163
  %11 = xor i32 %6, -1, !dbg !2188
  %12 = and i32 %3, %11, !dbg !2190
  store i32 %12, i32* @DMA_Channel_Status, align 4, !dbg !2190
  br label %16, !dbg !2191

13:                                               ; preds = %4
  %14 = add nuw nsw i32 %5, 1, !dbg !2192
  call void @llvm.dbg.value(metadata i32 %14, metadata !2160, metadata !DIExpression()), !dbg !2163
  %15 = icmp eq i32 %14, 12, !dbg !2193
  br i1 %15, label %16, label %4, !dbg !2179, !llvm.loop !2194

16:                                               ; preds = %13, %9
  %17 = phi i8 [ %10, %9 ], [ -1, %13 ], !dbg !2163
  call void @llvm.dbg.value(metadata i8 %17, metadata !2161, metadata !DIExpression()), !dbg !2163
  call void @llvm.dbg.value(metadata i32 %2, metadata !2196, metadata !DIExpression()) #20, !dbg !2201
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %2) #20, !dbg !2204, !srcloc !2205
  %18 = zext i8 %17 to i32, !dbg !2206
  %19 = add nsw i32 %18, -1, !dbg !2207
  %20 = getelementptr inbounds [11 x i32], [11 x i32]* @DMA_Owner, i32 0, i32 %19, !dbg !2208
  store i32 %0, i32* %20, align 4, !dbg !2209
  ret i8 %17, !dbg !2210
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DMA_FreeChannel(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !2211 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2213, metadata !DIExpression()), !dbg !2215
  %2 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #20, !dbg !2216, !srcloc !2173
  call void @llvm.dbg.value(metadata i32 %2, metadata !2170, metadata !DIExpression()) #20, !dbg !2219
  call void @llvm.dbg.value(metadata i32 %2, metadata !2214, metadata !DIExpression()), !dbg !2215
  tail call void asm sideeffect "cpsid i", "~{memory}"() #20, !dbg !2220, !srcloc !2178
  %3 = zext i8 %0 to i32, !dbg !2222
  %4 = shl nuw i32 1, %3, !dbg !2223
  %5 = load i32, i32* @DMA_Channel_Status, align 4, !dbg !2224
  %6 = or i32 %5, %4, !dbg !2224
  store i32 %6, i32* @DMA_Channel_Status, align 4, !dbg !2224
  tail call void @DMA_Stop(i8 noundef zeroext %0) #19, !dbg !2225
  %7 = add nsw i32 %3, -1, !dbg !2226
  %8 = getelementptr inbounds [11 x i32], [11 x i32]* @DMA_Owner, i32 0, i32 %7, !dbg !2227
  store i32 26, i32* %8, align 4, !dbg !2228
  call void @llvm.dbg.value(metadata i32 %2, metadata !2196, metadata !DIExpression()) #20, !dbg !2229
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %2) #20, !dbg !2232, !srcloc !2205
  ret void, !dbg !2233
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @DMA_FullSize_CheckIdleChannel(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #3 !dbg !2234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2238, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata i8 %1, metadata !2239, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata i8 -1, metadata !2241, metadata !DIExpression()), !dbg !2243
  %3 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #20, !dbg !2244, !srcloc !2173
  call void @llvm.dbg.value(metadata i32 %3, metadata !2170, metadata !DIExpression()) #20, !dbg !2247
  call void @llvm.dbg.value(metadata i32 %3, metadata !2242, metadata !DIExpression()), !dbg !2243
  tail call void asm sideeffect "cpsid i", "~{memory}"() #20, !dbg !2248, !srcloc !2178
  %4 = add i8 %1, 1, !dbg !2250
  call void @llvm.dbg.value(metadata i8 %4, metadata !2240, metadata !DIExpression()), !dbg !2243
  %5 = icmp ugt i8 %4, 2, !dbg !2251
  br i1 %5, label %20, label %6, !dbg !2253

6:                                                ; preds = %2
  %7 = zext i8 %4 to i32, !dbg !2254
  %8 = load i32, i32* @DMA_Channel_Status, align 4, !dbg !2255
  %9 = shl nuw nsw i32 1, %7, !dbg !2257
  %10 = and i32 %8, %9, !dbg !2258
  %11 = icmp eq i32 %10, 0, !dbg !2259
  br i1 %11, label %15, label %12, !dbg !2260

12:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8 %4, metadata !2241, metadata !DIExpression()), !dbg !2243
  %13 = xor i32 %9, -1, !dbg !2261
  %14 = and i32 %8, %13, !dbg !2263
  store i32 %14, i32* @DMA_Channel_Status, align 4, !dbg !2263
  br label %15, !dbg !2264

15:                                               ; preds = %6, %12
  %16 = phi i8 [ %4, %12 ], [ -1, %6 ], !dbg !2243
  call void @llvm.dbg.value(metadata i8 %16, metadata !2241, metadata !DIExpression()), !dbg !2243
  call void @llvm.dbg.value(metadata i32 %3, metadata !2196, metadata !DIExpression()) #20, !dbg !2265
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %3) #20, !dbg !2268, !srcloc !2205
  %17 = zext i8 %16 to i32, !dbg !2269
  %18 = add nsw i32 %17, -1, !dbg !2270
  %19 = getelementptr inbounds [11 x i32], [11 x i32]* @DMA_Owner, i32 0, i32 %18, !dbg !2271
  store i32 %0, i32* %19, align 4, !dbg !2272
  br label %20, !dbg !2273

20:                                               ; preds = %2, %15
  %21 = phi i8 [ %16, %15 ], [ -1, %2 ], !dbg !2243
  ret i8 %21, !dbg !2274
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DMA_FullSize_FreeChannel(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !2275 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2277, metadata !DIExpression()), !dbg !2279
  %2 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #20, !dbg !2280, !srcloc !2173
  call void @llvm.dbg.value(metadata i32 %2, metadata !2170, metadata !DIExpression()) #20, !dbg !2283
  call void @llvm.dbg.value(metadata i32 %2, metadata !2278, metadata !DIExpression()), !dbg !2279
  tail call void asm sideeffect "cpsid i", "~{memory}"() #20, !dbg !2284, !srcloc !2178
  %3 = zext i8 %0 to i32, !dbg !2286
  %4 = shl nuw i32 1, %3, !dbg !2287
  %5 = load i32, i32* @DMA_Channel_Status, align 4, !dbg !2288
  %6 = or i32 %5, %4, !dbg !2288
  store i32 %6, i32* @DMA_Channel_Status, align 4, !dbg !2288
  tail call void @DMA_Stop(i8 noundef zeroext %0) #19, !dbg !2289
  %7 = add nsw i32 %3, -1, !dbg !2290
  %8 = getelementptr inbounds [11 x i32], [11 x i32]* @DMA_Owner, i32 0, i32 %7, !dbg !2291
  store i32 26, i32* %8, align 4, !dbg !2292
  call void @llvm.dbg.value(metadata i32 %2, metadata !2196, metadata !DIExpression()) #20, !dbg !2293
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %2) #20, !dbg !2296, !srcloc !2205
  ret void, !dbg !2297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DMA_Config_Internal(i8 noundef zeroext %0, %struct.DMA_INPUT* noundef readonly %1, i1 noundef zeroext %2, i1 noundef zeroext %3, i8 noundef zeroext %4, i1 noundef zeroext %5) local_unnamed_addr #3 !dbg !2298 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2313, metadata !DIExpression()), !dbg !2321
  call void @llvm.dbg.value(metadata %struct.DMA_INPUT* %1, metadata !2314, metadata !DIExpression()), !dbg !2321
  call void @llvm.dbg.value(metadata i1 %2, metadata !2315, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2321
  call void @llvm.dbg.value(metadata i1 %3, metadata !2316, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2321
  call void @llvm.dbg.value(metadata i8 %4, metadata !2317, metadata !DIExpression()), !dbg !2321
  call void @llvm.dbg.value(metadata i1 %5, metadata !2318, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2321
  call void @llvm.dbg.value(metadata i32 0, metadata !2319, metadata !DIExpression()), !dbg !2321
  tail call void @DMA_Clock_Enable(i8 noundef zeroext %0) #19, !dbg !2322
  %7 = zext i8 %0 to i32, !dbg !2323
  %8 = icmp ugt i8 %0, 16, !dbg !2323
  br i1 %8, label %9, label %16, !dbg !2325

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -2097086460 to i32*), align 4, !dbg !2323
  %11 = shl nuw nsw i32 %7, 1, !dbg !2323
  %12 = add nsw i32 %11, -34, !dbg !2323
  %13 = shl nuw i32 1, %12, !dbg !2323
  %14 = and i32 %10, %13, !dbg !2323
  %15 = icmp eq i32 %14, 0, !dbg !2323
  br i1 %15, label %26, label %23, !dbg !2323

16:                                               ; preds = %6
  %17 = load volatile i32, i32* inttoptr (i32 -2097086464 to i32*), align 65536, !dbg !2323
  %18 = shl nuw nsw i32 %7, 1, !dbg !2323
  %19 = add nsw i32 %18, -2, !dbg !2323
  %20 = shl nuw i32 1, %19, !dbg !2323
  %21 = and i32 %17, %20, !dbg !2323
  %22 = icmp eq i32 %21, 0, !dbg !2323
  br i1 %22, label %31, label %23, !dbg !2325

23:                                               ; preds = %16, %9
  %24 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i32 0, i32 0), i32 noundef 187) #21, !dbg !2326
  br label %25, !dbg !2326

25:                                               ; preds = %25, %23
  br label %25, !dbg !2326, !llvm.loop !2330

26:                                               ; preds = %9
  %27 = load volatile i32, i32* inttoptr (i32 -2097086460 to i32*), align 4, !dbg !2331
  %28 = shl i32 2, %12, !dbg !2331
  %29 = and i32 %27, %28, !dbg !2331
  %30 = icmp eq i32 %29, 0, !dbg !2331
  br i1 %30, label %39, label %36, !dbg !2331

31:                                               ; preds = %16
  %32 = load volatile i32, i32* inttoptr (i32 -2097086464 to i32*), align 65536, !dbg !2331
  %33 = shl i32 2, %19, !dbg !2331
  %34 = and i32 %32, %33, !dbg !2331
  %35 = icmp eq i32 %34, 0, !dbg !2331
  br i1 %35, label %39, label %36, !dbg !2333

36:                                               ; preds = %31, %26
  %37 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i32 0, i32 0), i32 noundef 191) #21, !dbg !2334
  br label %38, !dbg !2334

38:                                               ; preds = %38, %36
  br label %38, !dbg !2334, !llvm.loop !2338

39:                                               ; preds = %31, %26
  %40 = add nsw i32 %7, -1, !dbg !2339
  %41 = getelementptr inbounds [11 x i32], [11 x i32]* @DMA_Owner, i32 0, i32 %40, !dbg !2339
  %42 = load i32, i32* %41, align 4, !dbg !2339
  %43 = icmp eq i32 %42, 26, !dbg !2339
  br i1 %43, label %44, label %47, !dbg !2341

44:                                               ; preds = %39
  %45 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i32 0, i32 0), i32 noundef 194) #21, !dbg !2342
  br label %46, !dbg !2342

46:                                               ; preds = %46, %44
  br label %46, !dbg !2342, !llvm.loop !2344

47:                                               ; preds = %39
  %48 = and i1 %2, %3, !dbg !2345
  br i1 %48, label %49, label %52, !dbg !2345

49:                                               ; preds = %47
  %50 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i32 0, i32 0), i32 noundef 197) #21, !dbg !2346
  br label %51, !dbg !2346

51:                                               ; preds = %51, %49
  br label %51, !dbg !2346, !llvm.loop !2351

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 2, !dbg !2352
  %54 = load i32, i32* %53, align 4, !dbg !2352
  %55 = icmp ugt i32 %54, 65535, !dbg !2352
  br i1 %55, label %56, label %59, !dbg !2354

56:                                               ; preds = %52
  %57 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i32 0, i32 0), i32 noundef 200) #21, !dbg !2355
  br label %58, !dbg !2355

58:                                               ; preds = %58, %56
  br label %58, !dbg !2355, !llvm.loop !2357

59:                                               ; preds = %52
  tail call void @DMA_Stop(i8 noundef zeroext %0) #19, !dbg !2358
  %60 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 0, !dbg !2359
  %61 = load i32, i32* %60, align 4, !dbg !2359
  switch i32 %61, label %252 [
    i32 0, label %62
    i32 1, label %94
    i32 2, label %126
    i32 3, label %140
    i32 4, label %196
  ], !dbg !2360

62:                                               ; preds = %59
  %63 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 3, !dbg !2361
  br i1 %2, label %64, label %81, !dbg !2364

64:                                               ; preds = %62
  %65 = bitcast i8** %63 to %struct.DMA_FULLSIZE_HWMENU**, !dbg !2365
  %66 = load %struct.DMA_FULLSIZE_HWMENU*, %struct.DMA_FULLSIZE_HWMENU** %65, align 4, !dbg !2365
  %67 = getelementptr inbounds %struct.DMA_FULLSIZE_HWMENU, %struct.DMA_FULLSIZE_HWMENU* %66, i32 0, i32 1, !dbg !2367
  call void @llvm.dbg.value(metadata i32 undef, metadata !2320, metadata !DIExpression()), !dbg !2321
  %68 = load i32, i32* %67, align 4, !dbg !2361
  call void @llvm.dbg.value(metadata i32 %85, metadata !2320, metadata !DIExpression()), !dbg !2321
  %69 = shl i32 %68, 20, !dbg !2368
  call void @llvm.dbg.value(metadata i32 %86, metadata !2319, metadata !DIExpression(DW_OP_constu, 4, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %70 = or i32 %69, 20, !dbg !2369
  call void @llvm.dbg.value(metadata i32 %86, metadata !2319, metadata !DIExpression(DW_OP_constu, 20, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %71 = getelementptr inbounds %struct.DMA_FULLSIZE_HWMENU, %struct.DMA_FULLSIZE_HWMENU* %66, i32 0, i32 2, !dbg !2370
  %72 = load i32, i32* %71, align 4, !dbg !2370
  %73 = shl nuw nsw i32 %7, 8, !dbg !2370
  %74 = or i32 %73, -2097086464, !dbg !2370
  %75 = inttoptr i32 %74 to i32*, !dbg !2370
  store volatile i32 %72, i32* %75, align 256, !dbg !2370
  %76 = load %struct.DMA_FULLSIZE_HWMENU*, %struct.DMA_FULLSIZE_HWMENU** %65, align 4, !dbg !2373
  %77 = getelementptr inbounds %struct.DMA_FULLSIZE_HWMENU, %struct.DMA_FULLSIZE_HWMENU* %76, i32 0, i32 3, !dbg !2373
  %78 = load i32, i32* %77, align 4, !dbg !2373
  %79 = or i32 %73, -2097086460, !dbg !2373
  %80 = inttoptr i32 %79 to i32*, !dbg !2373
  store volatile i32 %78, i32* %80, align 4, !dbg !2373
  br label %255, !dbg !2374

81:                                               ; preds = %62
  %82 = bitcast i8** %63 to %struct.DMA_HWMENU**, !dbg !2375
  %83 = load %struct.DMA_HWMENU*, %struct.DMA_HWMENU** %82, align 4, !dbg !2375
  %84 = getelementptr inbounds %struct.DMA_HWMENU, %struct.DMA_HWMENU* %83, i32 0, i32 1, !dbg !2377
  call void @llvm.dbg.value(metadata i32 undef, metadata !2320, metadata !DIExpression()), !dbg !2321
  %85 = load i32, i32* %84, align 4, !dbg !2361
  call void @llvm.dbg.value(metadata i32 %85, metadata !2320, metadata !DIExpression()), !dbg !2321
  %86 = shl i32 %85, 20, !dbg !2368
  call void @llvm.dbg.value(metadata i32 %86, metadata !2319, metadata !DIExpression(DW_OP_constu, 4, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  call void @llvm.dbg.value(metadata i32 %86, metadata !2319, metadata !DIExpression(DW_OP_constu, 20, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %87 = getelementptr inbounds %struct.DMA_HWMENU, %struct.DMA_HWMENU* %83, i32 0, i32 2, !dbg !2378
  %88 = load i32, i32* %87, align 4, !dbg !2378
  %89 = shl nuw nsw i32 %7, 8, !dbg !2378
  %90 = or i32 %89, -2097086420, !dbg !2378
  %91 = inttoptr i32 %90 to i32*, !dbg !2378
  store volatile i32 %88, i32* %91, align 4, !dbg !2378
  %92 = select i1 %3, i32 52, i32 20, !dbg !2380
  %93 = or i32 %86, %92, !dbg !2380
  br label %255, !dbg !2380

94:                                               ; preds = %59
  %95 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 3, !dbg !2381
  br i1 %2, label %96, label %113, !dbg !2383

96:                                               ; preds = %94
  %97 = bitcast i8** %95 to %struct.DMA_FULLSIZE_HWMENU**, !dbg !2384
  %98 = load %struct.DMA_FULLSIZE_HWMENU*, %struct.DMA_FULLSIZE_HWMENU** %97, align 4, !dbg !2384
  %99 = getelementptr inbounds %struct.DMA_FULLSIZE_HWMENU, %struct.DMA_FULLSIZE_HWMENU* %98, i32 0, i32 1, !dbg !2386
  call void @llvm.dbg.value(metadata i32 undef, metadata !2319, metadata !DIExpression(DW_OP_constu, 20, DW_OP_shl, DW_OP_stack_value)), !dbg !2321
  %100 = load i32, i32* %99, align 4, !dbg !2381
  %101 = shl i32 %100, 20, !dbg !2381
  call void @llvm.dbg.value(metadata i32 %118, metadata !2319, metadata !DIExpression(DW_OP_constu, 262152, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %102 = or i32 %101, 262168, !dbg !2387
  call void @llvm.dbg.value(metadata i32 %118, metadata !2319, metadata !DIExpression(DW_OP_constu, 262168, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %103 = getelementptr inbounds %struct.DMA_FULLSIZE_HWMENU, %struct.DMA_FULLSIZE_HWMENU* %98, i32 0, i32 2, !dbg !2388
  %104 = load i32, i32* %103, align 4, !dbg !2388
  %105 = shl nuw nsw i32 %7, 8, !dbg !2388
  %106 = or i32 %105, -2097086464, !dbg !2388
  %107 = inttoptr i32 %106 to i32*, !dbg !2388
  store volatile i32 %104, i32* %107, align 256, !dbg !2388
  %108 = load %struct.DMA_FULLSIZE_HWMENU*, %struct.DMA_FULLSIZE_HWMENU** %97, align 4, !dbg !2391
  %109 = getelementptr inbounds %struct.DMA_FULLSIZE_HWMENU, %struct.DMA_FULLSIZE_HWMENU* %108, i32 0, i32 3, !dbg !2391
  %110 = load i32, i32* %109, align 4, !dbg !2391
  %111 = or i32 %105, -2097086460, !dbg !2391
  %112 = inttoptr i32 %111 to i32*, !dbg !2391
  store volatile i32 %110, i32* %112, align 4, !dbg !2391
  br label %255, !dbg !2392

113:                                              ; preds = %94
  %114 = bitcast i8** %95 to %struct.DMA_HWMENU**, !dbg !2393
  %115 = load %struct.DMA_HWMENU*, %struct.DMA_HWMENU** %114, align 4, !dbg !2393
  %116 = getelementptr inbounds %struct.DMA_HWMENU, %struct.DMA_HWMENU* %115, i32 0, i32 1, !dbg !2395
  call void @llvm.dbg.value(metadata i32 undef, metadata !2319, metadata !DIExpression(DW_OP_constu, 20, DW_OP_shl, DW_OP_stack_value)), !dbg !2321
  %117 = load i32, i32* %116, align 4, !dbg !2381
  %118 = shl i32 %117, 20, !dbg !2381
  call void @llvm.dbg.value(metadata i32 %118, metadata !2319, metadata !DIExpression(DW_OP_constu, 262152, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  call void @llvm.dbg.value(metadata i32 %118, metadata !2319, metadata !DIExpression(DW_OP_constu, 262168, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %119 = getelementptr inbounds %struct.DMA_HWMENU, %struct.DMA_HWMENU* %115, i32 0, i32 2, !dbg !2396
  %120 = load i32, i32* %119, align 4, !dbg !2396
  %121 = shl nuw nsw i32 %7, 8, !dbg !2396
  %122 = or i32 %121, -2097086420, !dbg !2396
  %123 = inttoptr i32 %122 to i32*, !dbg !2396
  store volatile i32 %120, i32* %123, align 4, !dbg !2396
  %124 = select i1 %3, i32 262200, i32 262168, !dbg !2398
  %125 = or i32 %118, %124, !dbg !2398
  br label %255, !dbg !2398

126:                                              ; preds = %59
  %127 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 3, !dbg !2399
  %128 = bitcast i8** %127 to %struct.DMA_SWCOPYMENU**, !dbg !2399
  %129 = load %struct.DMA_SWCOPYMENU*, %struct.DMA_SWCOPYMENU** %128, align 4, !dbg !2399
  %130 = getelementptr inbounds %struct.DMA_SWCOPYMENU, %struct.DMA_SWCOPYMENU* %129, i32 0, i32 0, !dbg !2399
  %131 = load i32, i32* %130, align 4, !dbg !2399
  %132 = shl nuw nsw i32 %7, 8, !dbg !2399
  %133 = or i32 %132, -2097086464, !dbg !2399
  %134 = inttoptr i32 %133 to i32*, !dbg !2399
  store volatile i32 %131, i32* %134, align 256, !dbg !2399
  %135 = load %struct.DMA_SWCOPYMENU*, %struct.DMA_SWCOPYMENU** %128, align 4, !dbg !2400
  %136 = getelementptr inbounds %struct.DMA_SWCOPYMENU, %struct.DMA_SWCOPYMENU* %135, i32 0, i32 1, !dbg !2400
  %137 = load i32, i32* %136, align 4, !dbg !2400
  %138 = or i32 %132, -2097086460, !dbg !2400
  %139 = inttoptr i32 %138 to i32*, !dbg !2400
  store volatile i32 %137, i32* %139, align 4, !dbg !2400
  call void @llvm.dbg.value(metadata i32 12, metadata !2319, metadata !DIExpression()), !dbg !2321
  br label %255, !dbg !2401

140:                                              ; preds = %59
  %141 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 3, !dbg !2402
  br i1 %2, label %142, label %171, !dbg !2404

142:                                              ; preds = %140
  %143 = bitcast i8** %141 to %struct.DMA_FULLSIZE_HWRINGBUFF_MENU**, !dbg !2405
  %144 = load %struct.DMA_FULLSIZE_HWRINGBUFF_MENU*, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU** %143, align 4, !dbg !2405
  %145 = getelementptr inbounds %struct.DMA_FULLSIZE_HWRINGBUFF_MENU, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU* %144, i32 0, i32 1, !dbg !2407
  call void @llvm.dbg.value(metadata i32 undef, metadata !2319, metadata !DIExpression(DW_OP_constu, 20, DW_OP_shl, DW_OP_stack_value)), !dbg !2321
  %146 = load i32, i32* %145, align 4, !dbg !2402
  %147 = shl i32 %146, 20, !dbg !2402
  call void @llvm.dbg.value(metadata i32 %176, metadata !2319, metadata !DIExpression(DW_OP_constu, 20, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %148 = or i32 %147, 131092, !dbg !2408
  call void @llvm.dbg.value(metadata i32 %176, metadata !2319, metadata !DIExpression(DW_OP_constu, 131092, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %149 = getelementptr inbounds %struct.DMA_FULLSIZE_HWRINGBUFF_MENU, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU* %144, i32 0, i32 4, !dbg !2409
  %150 = load i8*, i8** %149, align 4, !dbg !2409
  %151 = ptrtoint i8* %150 to i32, !dbg !2409
  %152 = shl nuw nsw i32 %7, 8, !dbg !2409
  %153 = or i32 %152, -2097086456, !dbg !2409
  %154 = inttoptr i32 %153 to i32*, !dbg !2409
  store volatile i32 %151, i32* %154, align 8, !dbg !2409
  %155 = load %struct.DMA_FULLSIZE_HWRINGBUFF_MENU*, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU** %143, align 4, !dbg !2412
  %156 = getelementptr inbounds %struct.DMA_FULLSIZE_HWRINGBUFF_MENU, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU* %155, i32 0, i32 5, !dbg !2412
  %157 = load i8*, i8** %156, align 4, !dbg !2412
  %158 = ptrtoint i8* %157 to i32, !dbg !2412
  %159 = or i32 %152, -2097086452, !dbg !2412
  %160 = inttoptr i32 %159 to i32*, !dbg !2412
  store volatile i32 %158, i32* %160, align 4, !dbg !2412
  %161 = load %struct.DMA_FULLSIZE_HWRINGBUFF_MENU*, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU** %143, align 4, !dbg !2413
  %162 = getelementptr inbounds %struct.DMA_FULLSIZE_HWRINGBUFF_MENU, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU* %161, i32 0, i32 2, !dbg !2413
  %163 = load i32, i32* %162, align 4, !dbg !2413
  %164 = or i32 %152, -2097086464, !dbg !2413
  %165 = inttoptr i32 %164 to i32*, !dbg !2413
  store volatile i32 %163, i32* %165, align 256, !dbg !2413
  %166 = load %struct.DMA_FULLSIZE_HWRINGBUFF_MENU*, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU** %143, align 4, !dbg !2414
  %167 = getelementptr inbounds %struct.DMA_FULLSIZE_HWRINGBUFF_MENU, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU* %166, i32 0, i32 3, !dbg !2414
  %168 = load i32, i32* %167, align 4, !dbg !2414
  %169 = or i32 %152, -2097086460, !dbg !2414
  %170 = inttoptr i32 %169 to i32*, !dbg !2414
  store volatile i32 %168, i32* %170, align 4, !dbg !2414
  br label %255, !dbg !2415

171:                                              ; preds = %140
  %172 = bitcast i8** %141 to %struct.DMA_HWRINGBUFF_MENU**, !dbg !2416
  %173 = load %struct.DMA_HWRINGBUFF_MENU*, %struct.DMA_HWRINGBUFF_MENU** %172, align 4, !dbg !2416
  %174 = getelementptr inbounds %struct.DMA_HWRINGBUFF_MENU, %struct.DMA_HWRINGBUFF_MENU* %173, i32 0, i32 1, !dbg !2418
  call void @llvm.dbg.value(metadata i32 undef, metadata !2319, metadata !DIExpression(DW_OP_constu, 20, DW_OP_shl, DW_OP_stack_value)), !dbg !2321
  %175 = load i32, i32* %174, align 4, !dbg !2402
  %176 = shl i32 %175, 20, !dbg !2402
  call void @llvm.dbg.value(metadata i32 %176, metadata !2319, metadata !DIExpression(DW_OP_constu, 20, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  call void @llvm.dbg.value(metadata i32 %176, metadata !2319, metadata !DIExpression(DW_OP_constu, 131092, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %177 = getelementptr inbounds %struct.DMA_HWRINGBUFF_MENU, %struct.DMA_HWRINGBUFF_MENU* %173, i32 0, i32 3, !dbg !2419
  %178 = load i8*, i8** %177, align 4, !dbg !2419
  %179 = ptrtoint i8* %178 to i32, !dbg !2419
  %180 = shl nuw nsw i32 %7, 8, !dbg !2419
  %181 = or i32 %180, -2097086456, !dbg !2419
  %182 = inttoptr i32 %181 to i32*, !dbg !2419
  store volatile i32 %179, i32* %182, align 8, !dbg !2419
  %183 = load %struct.DMA_HWRINGBUFF_MENU*, %struct.DMA_HWRINGBUFF_MENU** %172, align 4, !dbg !2421
  %184 = getelementptr inbounds %struct.DMA_HWRINGBUFF_MENU, %struct.DMA_HWRINGBUFF_MENU* %183, i32 0, i32 4, !dbg !2421
  %185 = load i8*, i8** %184, align 4, !dbg !2421
  %186 = ptrtoint i8* %185 to i32, !dbg !2421
  %187 = or i32 %180, -2097086452, !dbg !2421
  %188 = inttoptr i32 %187 to i32*, !dbg !2421
  store volatile i32 %186, i32* %188, align 4, !dbg !2421
  %189 = load %struct.DMA_HWRINGBUFF_MENU*, %struct.DMA_HWRINGBUFF_MENU** %172, align 4, !dbg !2422
  %190 = getelementptr inbounds %struct.DMA_HWRINGBUFF_MENU, %struct.DMA_HWRINGBUFF_MENU* %189, i32 0, i32 2, !dbg !2422
  %191 = load i32, i32* %190, align 4, !dbg !2422
  %192 = or i32 %180, -2097086420, !dbg !2422
  %193 = inttoptr i32 %192 to i32*, !dbg !2422
  store volatile i32 %191, i32* %193, align 4, !dbg !2422
  %194 = select i1 %3, i32 131124, i32 131092, !dbg !2423
  %195 = or i32 %176, %194, !dbg !2423
  br label %255, !dbg !2423

196:                                              ; preds = %59
  %197 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 3, !dbg !2424
  br i1 %2, label %198, label %227, !dbg !2426

198:                                              ; preds = %196
  %199 = bitcast i8** %197 to %struct.DMA_FULLSIZE_HWRINGBUFF_MENU**, !dbg !2427
  %200 = load %struct.DMA_FULLSIZE_HWRINGBUFF_MENU*, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU** %199, align 4, !dbg !2427
  %201 = getelementptr inbounds %struct.DMA_FULLSIZE_HWRINGBUFF_MENU, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU* %200, i32 0, i32 1, !dbg !2429
  call void @llvm.dbg.value(metadata i32 undef, metadata !2319, metadata !DIExpression(DW_OP_constu, 20, DW_OP_shl, DW_OP_stack_value)), !dbg !2321
  %202 = load i32, i32* %201, align 4, !dbg !2424
  %203 = shl i32 %202, 20, !dbg !2424
  call void @llvm.dbg.value(metadata i32 %232, metadata !2319, metadata !DIExpression(DW_OP_constu, 327704, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %204 = or i32 %203, 458776, !dbg !2430
  call void @llvm.dbg.value(metadata i32 %232, metadata !2319, metadata !DIExpression(DW_OP_constu, 458776, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %205 = getelementptr inbounds %struct.DMA_FULLSIZE_HWRINGBUFF_MENU, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU* %200, i32 0, i32 4, !dbg !2431
  %206 = load i8*, i8** %205, align 4, !dbg !2431
  %207 = ptrtoint i8* %206 to i32, !dbg !2431
  %208 = shl nuw nsw i32 %7, 8, !dbg !2431
  %209 = or i32 %208, -2097086456, !dbg !2431
  %210 = inttoptr i32 %209 to i32*, !dbg !2431
  store volatile i32 %207, i32* %210, align 8, !dbg !2431
  %211 = load %struct.DMA_FULLSIZE_HWRINGBUFF_MENU*, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU** %199, align 4, !dbg !2434
  %212 = getelementptr inbounds %struct.DMA_FULLSIZE_HWRINGBUFF_MENU, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU* %211, i32 0, i32 5, !dbg !2434
  %213 = load i8*, i8** %212, align 4, !dbg !2434
  %214 = ptrtoint i8* %213 to i32, !dbg !2434
  %215 = or i32 %208, -2097086452, !dbg !2434
  %216 = inttoptr i32 %215 to i32*, !dbg !2434
  store volatile i32 %214, i32* %216, align 4, !dbg !2434
  %217 = load %struct.DMA_FULLSIZE_HWRINGBUFF_MENU*, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU** %199, align 4, !dbg !2435
  %218 = getelementptr inbounds %struct.DMA_FULLSIZE_HWRINGBUFF_MENU, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU* %217, i32 0, i32 2, !dbg !2435
  %219 = load i32, i32* %218, align 4, !dbg !2435
  %220 = or i32 %208, -2097086464, !dbg !2435
  %221 = inttoptr i32 %220 to i32*, !dbg !2435
  store volatile i32 %219, i32* %221, align 256, !dbg !2435
  %222 = load %struct.DMA_FULLSIZE_HWRINGBUFF_MENU*, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU** %199, align 4, !dbg !2436
  %223 = getelementptr inbounds %struct.DMA_FULLSIZE_HWRINGBUFF_MENU, %struct.DMA_FULLSIZE_HWRINGBUFF_MENU* %222, i32 0, i32 3, !dbg !2436
  %224 = load i32, i32* %223, align 4, !dbg !2436
  %225 = or i32 %208, -2097086460, !dbg !2436
  %226 = inttoptr i32 %225 to i32*, !dbg !2436
  store volatile i32 %224, i32* %226, align 4, !dbg !2436
  br label %255, !dbg !2437

227:                                              ; preds = %196
  %228 = bitcast i8** %197 to %struct.DMA_HWRINGBUFF_MENU**, !dbg !2438
  %229 = load %struct.DMA_HWRINGBUFF_MENU*, %struct.DMA_HWRINGBUFF_MENU** %228, align 4, !dbg !2438
  %230 = getelementptr inbounds %struct.DMA_HWRINGBUFF_MENU, %struct.DMA_HWRINGBUFF_MENU* %229, i32 0, i32 1, !dbg !2440
  call void @llvm.dbg.value(metadata i32 undef, metadata !2319, metadata !DIExpression(DW_OP_constu, 20, DW_OP_shl, DW_OP_stack_value)), !dbg !2321
  %231 = load i32, i32* %230, align 4, !dbg !2424
  %232 = shl i32 %231, 20, !dbg !2424
  call void @llvm.dbg.value(metadata i32 %232, metadata !2319, metadata !DIExpression(DW_OP_constu, 327704, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  call void @llvm.dbg.value(metadata i32 %232, metadata !2319, metadata !DIExpression(DW_OP_constu, 458776, DW_OP_or, DW_OP_stack_value)), !dbg !2321
  %233 = getelementptr inbounds %struct.DMA_HWRINGBUFF_MENU, %struct.DMA_HWRINGBUFF_MENU* %229, i32 0, i32 3, !dbg !2441
  %234 = load i8*, i8** %233, align 4, !dbg !2441
  %235 = ptrtoint i8* %234 to i32, !dbg !2441
  %236 = shl nuw nsw i32 %7, 8, !dbg !2441
  %237 = or i32 %236, -2097086456, !dbg !2441
  %238 = inttoptr i32 %237 to i32*, !dbg !2441
  store volatile i32 %235, i32* %238, align 8, !dbg !2441
  %239 = load %struct.DMA_HWRINGBUFF_MENU*, %struct.DMA_HWRINGBUFF_MENU** %228, align 4, !dbg !2443
  %240 = getelementptr inbounds %struct.DMA_HWRINGBUFF_MENU, %struct.DMA_HWRINGBUFF_MENU* %239, i32 0, i32 4, !dbg !2443
  %241 = load i8*, i8** %240, align 4, !dbg !2443
  %242 = ptrtoint i8* %241 to i32, !dbg !2443
  %243 = or i32 %236, -2097086452, !dbg !2443
  %244 = inttoptr i32 %243 to i32*, !dbg !2443
  store volatile i32 %242, i32* %244, align 4, !dbg !2443
  %245 = load %struct.DMA_HWRINGBUFF_MENU*, %struct.DMA_HWRINGBUFF_MENU** %228, align 4, !dbg !2444
  %246 = getelementptr inbounds %struct.DMA_HWRINGBUFF_MENU, %struct.DMA_HWRINGBUFF_MENU* %245, i32 0, i32 2, !dbg !2444
  %247 = load i32, i32* %246, align 4, !dbg !2444
  %248 = or i32 %236, -2097086420, !dbg !2444
  %249 = inttoptr i32 %248 to i32*, !dbg !2444
  store volatile i32 %247, i32* %249, align 4, !dbg !2444
  %250 = select i1 %3, i32 458808, i32 458776, !dbg !2445
  %251 = or i32 %232, %250, !dbg !2445
  br label %255, !dbg !2445

252:                                              ; preds = %59
  %253 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i32 0, i32 0), i32 noundef 410) #21, !dbg !2446
  br label %254, !dbg !2446

254:                                              ; preds = %254, %252
  br label %254, !dbg !2446, !llvm.loop !2449

255:                                              ; preds = %227, %171, %113, %81, %198, %142, %96, %64, %126
  %256 = phi i32 [ %204, %198 ], [ %148, %142 ], [ 12, %126 ], [ %102, %96 ], [ %70, %64 ], [ %93, %81 ], [ %125, %113 ], [ %195, %171 ], [ %251, %227 ], !dbg !2450
  call void @llvm.dbg.value(metadata i32 %256, metadata !2319, metadata !DIExpression()), !dbg !2321
  %257 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 1, !dbg !2451
  %258 = load i32, i32* %257, align 4, !dbg !2451
  switch i32 %258, label %328 [
    i32 0, label %259
    i32 1, label %285
    i32 2, label %309
  ], !dbg !2452

259:                                              ; preds = %255
  %260 = load i32, i32* %60, align 4, !dbg !2453
  %261 = icmp eq i32 %260, 2, !dbg !2456
  br i1 %261, label %331, label %262, !dbg !2457

262:                                              ; preds = %259
  %263 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 3, !dbg !2458
  %264 = bitcast i8** %263 to %struct.DMA_TMODE**, !dbg !2458
  %265 = load %struct.DMA_TMODE*, %struct.DMA_TMODE** %264, align 4, !dbg !2458
  %266 = getelementptr inbounds %struct.DMA_TMODE, %struct.DMA_TMODE* %265, i32 0, i32 0, !dbg !2461
  %267 = load i8, i8* %266, align 1, !dbg !2461, !range !2462
  %268 = icmp eq i8 %267, 0, !dbg !2461
  br i1 %268, label %331, label %269, !dbg !2463

269:                                              ; preds = %262
  %270 = getelementptr inbounds %struct.DMA_TMODE, %struct.DMA_TMODE* %265, i32 0, i32 1, !dbg !2464
  %271 = load i8, i8* %270, align 1, !dbg !2464
  %272 = icmp ult i8 %271, 16, !dbg !2465
  br i1 %272, label %275, label %273, !dbg !2466

273:                                              ; preds = %269
  %274 = or i32 %256, 1536, !dbg !2467
  call void @llvm.dbg.value(metadata i32 %274, metadata !2319, metadata !DIExpression()), !dbg !2321
  br label %331, !dbg !2469

275:                                              ; preds = %269
  %276 = and i8 %271, 8, !dbg !2470
  %277 = icmp eq i8 %276, 0, !dbg !2470
  br i1 %277, label %280, label %278, !dbg !2472

278:                                              ; preds = %275
  %279 = or i32 %256, 1024, !dbg !2473
  call void @llvm.dbg.value(metadata i32 %279, metadata !2319, metadata !DIExpression()), !dbg !2321
  br label %331, !dbg !2475

280:                                              ; preds = %275
  %281 = and i8 %271, 4, !dbg !2476
  %282 = zext i8 %281 to i32, !dbg !2478
  %283 = shl nuw nsw i32 %282, 7, !dbg !2478
  %284 = or i32 %283, %256, !dbg !2478
  br label %331, !dbg !2478

285:                                              ; preds = %255
  %286 = load i32, i32* %60, align 4, !dbg !2479
  %287 = icmp eq i32 %286, 2, !dbg !2481
  br i1 %287, label %306, label %288, !dbg !2482

288:                                              ; preds = %285
  %289 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 3, !dbg !2483
  %290 = bitcast i8** %289 to %struct.DMA_TMODE**, !dbg !2483
  %291 = load %struct.DMA_TMODE*, %struct.DMA_TMODE** %290, align 4, !dbg !2483
  %292 = getelementptr inbounds %struct.DMA_TMODE, %struct.DMA_TMODE* %291, i32 0, i32 0, !dbg !2486
  %293 = load i8, i8* %292, align 1, !dbg !2486, !range !2462
  %294 = icmp eq i8 %293, 0, !dbg !2486
  br i1 %294, label %306, label %295, !dbg !2487

295:                                              ; preds = %288
  %296 = getelementptr inbounds %struct.DMA_TMODE, %struct.DMA_TMODE* %291, i32 0, i32 1, !dbg !2488
  %297 = load i8, i8* %296, align 1, !dbg !2488
  %298 = icmp ult i8 %297, 8, !dbg !2489
  br i1 %298, label %301, label %299, !dbg !2490

299:                                              ; preds = %295
  %300 = or i32 %256, 1024, !dbg !2491
  call void @llvm.dbg.value(metadata i32 %300, metadata !2319, metadata !DIExpression()), !dbg !2321
  br label %306, !dbg !2493

301:                                              ; preds = %295
  %302 = and i8 %297, 4, !dbg !2494
  %303 = zext i8 %302 to i32, !dbg !2496
  %304 = shl nuw nsw i32 %303, 7, !dbg !2496
  %305 = or i32 %304, %256, !dbg !2496
  br label %306, !dbg !2496

306:                                              ; preds = %288, %301, %299, %285
  %307 = phi i32 [ %300, %299 ], [ %256, %285 ], [ %305, %301 ], [ %256, %288 ], !dbg !2321
  call void @llvm.dbg.value(metadata i32 %307, metadata !2319, metadata !DIExpression()), !dbg !2321
  %308 = or i32 %307, 1, !dbg !2497
  call void @llvm.dbg.value(metadata i32 %308, metadata !2319, metadata !DIExpression()), !dbg !2321
  br label %331, !dbg !2498

309:                                              ; preds = %255
  %310 = load i32, i32* %60, align 4, !dbg !2499
  %311 = icmp eq i32 %310, 2, !dbg !2501
  br i1 %311, label %325, label %312, !dbg !2502

312:                                              ; preds = %309
  %313 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 3, !dbg !2503
  %314 = bitcast i8** %313 to %struct.DMA_TMODE**, !dbg !2503
  %315 = load %struct.DMA_TMODE*, %struct.DMA_TMODE** %314, align 4, !dbg !2503
  %316 = getelementptr inbounds %struct.DMA_TMODE, %struct.DMA_TMODE* %315, i32 0, i32 0, !dbg !2506
  %317 = load i8, i8* %316, align 1, !dbg !2506, !range !2462
  %318 = icmp eq i8 %317, 0, !dbg !2506
  br i1 %318, label %325, label %319, !dbg !2507

319:                                              ; preds = %312
  %320 = getelementptr inbounds %struct.DMA_TMODE, %struct.DMA_TMODE* %315, i32 0, i32 1, !dbg !2508
  %321 = load i8, i8* %320, align 1, !dbg !2508
  %322 = icmp ult i8 %321, 4, !dbg !2509
  %323 = or i32 %256, 512
  %324 = select i1 %322, i32 %256, i32 %323, !dbg !2510
  br label %325, !dbg !2510

325:                                              ; preds = %319, %312, %309
  %326 = phi i32 [ %256, %312 ], [ %256, %309 ], [ %324, %319 ], !dbg !2321
  call void @llvm.dbg.value(metadata i32 %326, metadata !2319, metadata !DIExpression()), !dbg !2321
  %327 = or i32 %326, 2, !dbg !2511
  call void @llvm.dbg.value(metadata i32 %327, metadata !2319, metadata !DIExpression()), !dbg !2321
  br label %331, !dbg !2512

328:                                              ; preds = %255
  %329 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i32 0, i32 0), i32 noundef 486) #21, !dbg !2513
  br label %330, !dbg !2513

330:                                              ; preds = %330, %328
  br label %330, !dbg !2513, !llvm.loop !2516

331:                                              ; preds = %262, %280, %259, %278, %273, %325, %306
  %332 = phi i32 [ %327, %325 ], [ %308, %306 ], [ %274, %273 ], [ %279, %278 ], [ %256, %259 ], [ %284, %280 ], [ %256, %262 ], !dbg !2321
  call void @llvm.dbg.value(metadata i32 %332, metadata !2319, metadata !DIExpression()), !dbg !2321
  %333 = getelementptr inbounds %struct.DMA_INPUT, %struct.DMA_INPUT* %1, i32 0, i32 4, !dbg !2517
  %334 = load void ()*, void ()** %333, align 4, !dbg !2517
  %335 = icmp eq void ()* %334, null, !dbg !2519
  br i1 %335, label %339, label %336, !dbg !2520

336:                                              ; preds = %331
  %337 = or i32 %332, 32768, !dbg !2521
  call void @llvm.dbg.value(metadata i32 %337, metadata !2319, metadata !DIExpression()), !dbg !2321
  %338 = getelementptr inbounds [11 x void ()*], [11 x void ()*]* bitcast (<{ void ()*, [10 x void ()*] }>* @DMA_LISR_FUNC to [11 x void ()*]*), i32 0, i32 %40, !dbg !2523
  store void ()* %334, void ()** %338, align 4, !dbg !2524
  br label %339, !dbg !2525

339:                                              ; preds = %336, %331
  %340 = phi i32 [ %337, %336 ], [ %332, %331 ], !dbg !2321
  call void @llvm.dbg.value(metadata i32 %340, metadata !2319, metadata !DIExpression()), !dbg !2321
  %341 = shl nuw nsw i32 %7, 8, !dbg !2526
  %342 = or i32 %341, -2097086444, !dbg !2526
  %343 = inttoptr i32 %342 to i32*, !dbg !2526
  store volatile i32 %340, i32* %343, align 4, !dbg !2526
  %344 = load i32, i32* %53, align 4, !dbg !2527
  %345 = or i32 %341, -2097086448, !dbg !2527
  %346 = inttoptr i32 %345 to i32*, !dbg !2527
  store volatile i32 %344, i32* %346, align 16, !dbg !2527
  br i1 %5, label %347, label %350, !dbg !2528

347:                                              ; preds = %339
  %348 = or i32 %341, -2097086440, !dbg !2529
  %349 = inttoptr i32 %348 to i32*, !dbg !2529
  store volatile i32 32768, i32* %349, align 8, !dbg !2529
  br label %350, !dbg !2532

350:                                              ; preds = %347, %339
  ret void, !dbg !2533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @DMA_Clock_Enable(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !2534 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2536, metadata !DIExpression()), !dbg !2537
  %2 = zext i8 %0 to i32, !dbg !2538
  %3 = add nsw i32 %2, -1, !dbg !2539
  %4 = shl nuw i32 1, %3, !dbg !2540
  store volatile i32 %4, i32* inttoptr (i32 -2097151976 to i32*), align 8, !dbg !2541
  ret void, !dbg !2542
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define dso_local i32 @DMA_Register(i8 noundef zeroext %0, void ()* noundef %1) local_unnamed_addr #3 !dbg !2543 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2547, metadata !DIExpression()), !dbg !2549
  call void @llvm.dbg.value(metadata void ()* %1, metadata !2548, metadata !DIExpression()), !dbg !2549
  %3 = zext i8 %0 to i32, !dbg !2550
  %4 = add i8 %0, -12, !dbg !2552
  %5 = icmp ult i8 %4, -11, !dbg !2552
  br i1 %5, label %6, label %8, !dbg !2552

6:                                                ; preds = %2
  %7 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.DMA_Register, i32 0, i32 0), i32 noundef %3) #21, !dbg !2553
  br label %11, !dbg !2555

8:                                                ; preds = %2
  %9 = add nsw i32 %3, -1, !dbg !2556
  %10 = getelementptr inbounds [11 x void ()*], [11 x void ()*]* bitcast (<{ void ()*, [10 x void ()*] }>* @DMA_LISR_FUNC to [11 x void ()*]*), i32 0, i32 %9, !dbg !2557
  store void ()* %1, void ()** %10, align 4, !dbg !2558
  br label %11, !dbg !2559

11:                                               ; preds = %8, %6
  %12 = phi i32 [ -1, %6 ], [ 0, %8 ], !dbg !2549
  ret i32 %12, !dbg !2560
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @DMA_UnRegister(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !2561 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2565, metadata !DIExpression()), !dbg !2566
  %2 = zext i8 %0 to i32, !dbg !2567
  %3 = add i8 %0, -12, !dbg !2569
  %4 = icmp ult i8 %3, -11, !dbg !2569
  br i1 %4, label %5, label %7, !dbg !2569

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.DMA_UnRegister, i32 0, i32 0), i32 noundef %2) #21, !dbg !2570
  br label %10, !dbg !2572

7:                                                ; preds = %1
  %8 = add nsw i32 %2, -1, !dbg !2573
  %9 = getelementptr inbounds [11 x void ()*], [11 x void ()*]* bitcast (<{ void ()*, [10 x void ()*] }>* @DMA_LISR_FUNC to [11 x void ()*]*), i32 0, i32 %8, !dbg !2574
  store void ()* @DMA_ERROR_LISR, void ()** %9, align 4, !dbg !2575
  br label %10, !dbg !2576

10:                                               ; preds = %7, %5
  %11 = phi i32 [ -1, %5 ], [ 0, %7 ], !dbg !2566
  ret i32 %11, !dbg !2577
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DMA_LISR(i32 %0) #3 !dbg !2578 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2580, metadata !DIExpression()), !dbg !2583
  %2 = tail call i32 @hal_nvic_disable_irq(i32 noundef 1) #21, !dbg !2584
  call void @llvm.dbg.value(metadata i8 0, metadata !2581, metadata !DIExpression()), !dbg !2583
  br label %3, !dbg !2585

3:                                                ; preds = %1, %25
  %4 = phi i32 [ 0, %1 ], [ %5, %25 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !2581, metadata !DIExpression()), !dbg !2583
  %5 = add nuw nsw i32 %4, 1, !dbg !2587
  %6 = shl nuw nsw i32 %5, 8, !dbg !2587
  %7 = add nuw nsw i32 %6, -2097086436, !dbg !2587
  %8 = inttoptr i32 %7 to i32*, !dbg !2587
  %9 = load volatile i32, i32* %8, align 4, !dbg !2587
  %10 = and i32 %9, 32768, !dbg !2591
  %11 = icmp eq i32 %10, 0, !dbg !2591
  br i1 %11, label %25, label %12, !dbg !2592

12:                                               ; preds = %3
  %13 = trunc i32 %5 to i8, !dbg !2593
  tail call void @DMA_Stop(i8 noundef zeroext %13) #19, !dbg !2595
  %14 = add nuw nsw i32 %6, -2097086432, !dbg !2596
  %15 = inttoptr i32 %14 to i32*, !dbg !2596
  store volatile i32 32768, i32* %15, align 32, !dbg !2596
  %16 = shl nuw nsw i32 %4, 1
  %17 = shl nuw i32 1, %16
  br label %18, !dbg !2597

18:                                               ; preds = %18, %12
  %19 = load volatile i32, i32* inttoptr (i32 -2097086464 to i32*), align 65536, !dbg !2598
  %20 = and i32 %19, %17, !dbg !2597
  %21 = icmp eq i32 %20, 0, !dbg !2597
  br i1 %21, label %22, label %18, !dbg !2597, !llvm.loop !2599

22:                                               ; preds = %18
  tail call void @DMA_Clock_Disable(i8 noundef zeroext %13) #19, !dbg !2601
  %23 = getelementptr inbounds [11 x void ()*], [11 x void ()*]* bitcast (<{ void ()*, [10 x void ()*] }>* @DMA_LISR_FUNC to [11 x void ()*]*), i32 0, i32 %4, !dbg !2602
  %24 = load void ()*, void ()** %23, align 4, !dbg !2602
  tail call void %24() #21, !dbg !2602
  br label %25, !dbg !2603

25:                                               ; preds = %3, %22
  call void @llvm.dbg.value(metadata i32 %5, metadata !2581, metadata !DIExpression()), !dbg !2583
  %26 = icmp eq i32 %5, 11, !dbg !2604
  br i1 %26, label %27, label %3, !dbg !2585, !llvm.loop !2605

27:                                               ; preds = %25, %87
  %28 = phi i32 [ %88, %87 ], [ 12, %25 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !2581, metadata !DIExpression()), !dbg !2583
  %29 = shl nuw nsw i32 %28, 8, !dbg !2607
  %30 = or i32 %29, -2097086444, !dbg !2607
  %31 = inttoptr i32 %30 to i32*, !dbg !2607
  %32 = load volatile i32, i32* %31, align 4, !dbg !2607
  call void @llvm.dbg.value(metadata i32 %32, metadata !2582, metadata !DIExpression()), !dbg !2583
  %33 = or i32 %29, -2097086436, !dbg !2611
  %34 = inttoptr i32 %33 to i32*, !dbg !2611
  %35 = load volatile i32, i32* %34, align 4, !dbg !2611
  %36 = and i32 %35, 32768, !dbg !2613
  %37 = icmp eq i32 %36, 0, !dbg !2613
  br i1 %37, label %87, label %38, !dbg !2614

38:                                               ; preds = %27
  %39 = lshr i32 %32, 20, !dbg !2615
  switch i32 %39, label %84 [
    i32 6, label %40
    i32 7, label %43
    i32 8, label %46
    i32 9, label %49
    i32 10, label %52
    i32 11, label %55
    i32 12, label %58
    i32 13, label %61
    i32 15, label %64
    i32 16, label %67
    i32 17, label %70
    i32 18, label %73
    i32 19, label %76
    i32 20, label %79
  ], !dbg !2617

40:                                               ; preds = %38
  %41 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 0), align 4, !dbg !2618
  %42 = icmp eq void ()* %41, null, !dbg !2621
  br i1 %42, label %84, label %82, !dbg !2622

43:                                               ; preds = %38
  %44 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 0), align 4, !dbg !2623
  %45 = icmp eq void ()* %44, null, !dbg !2625
  br i1 %45, label %84, label %82, !dbg !2626

46:                                               ; preds = %38
  %47 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 1), align 4, !dbg !2627
  %48 = icmp eq void ()* %47, null, !dbg !2629
  br i1 %48, label %84, label %82, !dbg !2630

49:                                               ; preds = %38
  %50 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 2), align 4, !dbg !2631
  %51 = icmp eq void ()* %50, null, !dbg !2633
  br i1 %51, label %84, label %82, !dbg !2634

52:                                               ; preds = %38
  %53 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 3), align 4, !dbg !2635
  %54 = icmp eq void ()* %53, null, !dbg !2637
  br i1 %54, label %84, label %82, !dbg !2638

55:                                               ; preds = %38
  %56 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 4), align 4, !dbg !2639
  %57 = icmp eq void ()* %56, null, !dbg !2641
  br i1 %57, label %84, label %82, !dbg !2642

58:                                               ; preds = %38
  %59 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 5), align 4, !dbg !2643
  %60 = icmp eq void ()* %59, null, !dbg !2645
  br i1 %60, label %84, label %82, !dbg !2646

61:                                               ; preds = %38
  %62 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 6), align 4, !dbg !2647
  %63 = icmp eq void ()* %62, null, !dbg !2649
  br i1 %63, label %84, label %82, !dbg !2650

64:                                               ; preds = %38
  %65 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 7), align 4, !dbg !2651
  %66 = icmp eq void ()* %65, null, !dbg !2653
  br i1 %66, label %84, label %82, !dbg !2654

67:                                               ; preds = %38
  %68 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 8), align 4, !dbg !2655
  %69 = icmp eq void ()* %68, null, !dbg !2657
  br i1 %69, label %84, label %82, !dbg !2658

70:                                               ; preds = %38
  %71 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 9), align 4, !dbg !2659
  %72 = icmp eq void ()* %71, null, !dbg !2661
  br i1 %72, label %84, label %82, !dbg !2662

73:                                               ; preds = %38
  %74 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 10), align 4, !dbg !2663
  %75 = icmp eq void ()* %74, null, !dbg !2665
  br i1 %75, label %84, label %82, !dbg !2666

76:                                               ; preds = %38
  %77 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 11), align 4, !dbg !2667
  %78 = icmp eq void ()* %77, null, !dbg !2669
  br i1 %78, label %84, label %82, !dbg !2670

79:                                               ; preds = %38
  %80 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC, i32 0, i32 1, i32 12), align 4, !dbg !2671
  %81 = icmp eq void ()* %80, null, !dbg !2673
  br i1 %81, label %84, label %82, !dbg !2674

82:                                               ; preds = %79, %76, %73, %70, %67, %64, %61, %58, %55, %52, %49, %46, %43, %40
  %83 = phi void ()* [ %41, %40 ], [ %44, %43 ], [ %47, %46 ], [ %50, %49 ], [ %53, %52 ], [ %56, %55 ], [ %59, %58 ], [ %62, %61 ], [ %65, %64 ], [ %68, %67 ], [ %71, %70 ], [ %74, %73 ], [ %77, %76 ], [ %80, %79 ]
  tail call void %83() #21, !dbg !2675
  br label %84, !dbg !2676

84:                                               ; preds = %82, %79, %76, %73, %70, %67, %64, %61, %58, %55, %52, %49, %46, %43, %40, %38
  %85 = or i32 %29, -2097086432, !dbg !2676
  %86 = inttoptr i32 %85 to i32*, !dbg !2676
  store volatile i32 32768, i32* %86, align 32, !dbg !2676
  br label %87, !dbg !2677

87:                                               ; preds = %27, %84
  %88 = add nuw nsw i32 %28, 1, !dbg !2678
  call void @llvm.dbg.value(metadata i32 %88, metadata !2581, metadata !DIExpression()), !dbg !2583
  %89 = icmp eq i32 %88, 26, !dbg !2679
  br i1 %89, label %90, label %27, !dbg !2680, !llvm.loop !2681

90:                                               ; preds = %87, %150
  %91 = phi i32 [ %151, %150 ], [ 12, %87 ]
  call void @llvm.dbg.value(metadata i32 %91, metadata !2581, metadata !DIExpression()), !dbg !2583
  %92 = shl nuw nsw i32 %91, 8, !dbg !2683
  %93 = or i32 %92, -2097086444, !dbg !2683
  %94 = inttoptr i32 %93 to i32*, !dbg !2683
  %95 = load volatile i32, i32* %94, align 4, !dbg !2683
  call void @llvm.dbg.value(metadata i32 %95, metadata !2582, metadata !DIExpression()), !dbg !2583
  %96 = or i32 %92, -2097086436, !dbg !2687
  %97 = inttoptr i32 %96 to i32*, !dbg !2687
  %98 = load volatile i32, i32* %97, align 4, !dbg !2687
  %99 = and i32 %98, 65536, !dbg !2689
  %100 = icmp eq i32 %99, 0, !dbg !2689
  br i1 %100, label %150, label %101, !dbg !2690

101:                                              ; preds = %90
  %102 = lshr i32 %95, 20, !dbg !2691
  switch i32 %102, label %147 [
    i32 6, label %103
    i32 7, label %106
    i32 8, label %109
    i32 9, label %112
    i32 10, label %115
    i32 11, label %118
    i32 12, label %121
    i32 13, label %124
    i32 15, label %127
    i32 16, label %130
    i32 17, label %133
    i32 18, label %136
    i32 19, label %139
    i32 20, label %142
  ], !dbg !2693

103:                                              ; preds = %101
  %104 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 0), align 4, !dbg !2694
  %105 = icmp eq void ()* %104, null, !dbg !2697
  br i1 %105, label %147, label %145, !dbg !2698

106:                                              ; preds = %101
  %107 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 0), align 4, !dbg !2699
  %108 = icmp eq void ()* %107, null, !dbg !2701
  br i1 %108, label %147, label %145, !dbg !2702

109:                                              ; preds = %101
  %110 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 1), align 4, !dbg !2703
  %111 = icmp eq void ()* %110, null, !dbg !2705
  br i1 %111, label %147, label %145, !dbg !2706

112:                                              ; preds = %101
  %113 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 2), align 4, !dbg !2707
  %114 = icmp eq void ()* %113, null, !dbg !2709
  br i1 %114, label %147, label %145, !dbg !2710

115:                                              ; preds = %101
  %116 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 3), align 4, !dbg !2711
  %117 = icmp eq void ()* %116, null, !dbg !2713
  br i1 %117, label %147, label %145, !dbg !2714

118:                                              ; preds = %101
  %119 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 4), align 4, !dbg !2715
  %120 = icmp eq void ()* %119, null, !dbg !2717
  br i1 %120, label %147, label %145, !dbg !2718

121:                                              ; preds = %101
  %122 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 5), align 4, !dbg !2719
  %123 = icmp eq void ()* %122, null, !dbg !2721
  br i1 %123, label %147, label %145, !dbg !2722

124:                                              ; preds = %101
  %125 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 6), align 4, !dbg !2723
  %126 = icmp eq void ()* %125, null, !dbg !2725
  br i1 %126, label %147, label %145, !dbg !2726

127:                                              ; preds = %101
  %128 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 7), align 4, !dbg !2727
  %129 = icmp eq void ()* %128, null, !dbg !2729
  br i1 %129, label %147, label %145, !dbg !2730

130:                                              ; preds = %101
  %131 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 8), align 4, !dbg !2731
  %132 = icmp eq void ()* %131, null, !dbg !2733
  br i1 %132, label %147, label %145, !dbg !2734

133:                                              ; preds = %101
  %134 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 9), align 4, !dbg !2735
  %135 = icmp eq void ()* %134, null, !dbg !2737
  br i1 %135, label %147, label %145, !dbg !2738

136:                                              ; preds = %101
  %137 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 10), align 4, !dbg !2739
  %138 = icmp eq void ()* %137, null, !dbg !2741
  br i1 %138, label %147, label %145, !dbg !2742

139:                                              ; preds = %101
  %140 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 11), align 4, !dbg !2743
  %141 = icmp eq void ()* %140, null, !dbg !2745
  br i1 %141, label %147, label %145, !dbg !2746

142:                                              ; preds = %101
  %143 = load void ()*, void ()** getelementptr inbounds (<{ void ()*, [13 x void ()*] }>, <{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC, i32 0, i32 1, i32 12), align 4, !dbg !2747
  %144 = icmp eq void ()* %143, null, !dbg !2749
  br i1 %144, label %147, label %145, !dbg !2750

145:                                              ; preds = %142, %139, %136, %133, %130, %127, %124, %121, %118, %115, %112, %109, %106, %103
  %146 = phi void ()* [ %104, %103 ], [ %107, %106 ], [ %110, %109 ], [ %113, %112 ], [ %116, %115 ], [ %119, %118 ], [ %122, %121 ], [ %125, %124 ], [ %128, %127 ], [ %131, %130 ], [ %134, %133 ], [ %137, %136 ], [ %140, %139 ], [ %143, %142 ]
  tail call void %146() #21, !dbg !2751
  br label %147, !dbg !2752

147:                                              ; preds = %145, %142, %139, %136, %133, %130, %127, %124, %121, %118, %115, %112, %109, %106, %103, %101
  %148 = or i32 %92, -2097086432, !dbg !2752
  %149 = inttoptr i32 %148 to i32*, !dbg !2752
  store volatile i32 65536, i32* %149, align 32, !dbg !2752
  br label %150, !dbg !2753

150:                                              ; preds = %90, %147
  %151 = add nuw nsw i32 %91, 1, !dbg !2754
  call void @llvm.dbg.value(metadata i32 %151, metadata !2581, metadata !DIExpression()), !dbg !2583
  %152 = icmp eq i32 %151, 26, !dbg !2755
  br i1 %152, label %153, label %90, !dbg !2756, !llvm.loop !2757

153:                                              ; preds = %150
  %154 = tail call i32 @hal_nvic_enable_irq(i32 noundef 1) #21, !dbg !2759
  ret void, !dbg !2760
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @DMA_Clock_Disable(i8 noundef zeroext %0) local_unnamed_addr #1 !dbg !2761 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2763, metadata !DIExpression()), !dbg !2764
  %2 = zext i8 %0 to i32, !dbg !2765
  %3 = add nsw i32 %2, -1, !dbg !2766
  %4 = shl nuw i32 1, %3, !dbg !2767
  store volatile i32 %4, i32* inttoptr (i32 -2097151980 to i32*), align 4, !dbg !2768
  ret void, !dbg !2769
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DMA_Init() local_unnamed_addr #3 !dbg !2770 {
  call void @llvm.dbg.value(metadata i8 0, metadata !2772, metadata !DIExpression()), !dbg !2773
  %1 = load i32, i32* @DMA_Channel_Status, align 4
  call void @llvm.dbg.value(metadata i8 0, metadata !2772, metadata !DIExpression()), !dbg !2773
  br label %2, !dbg !2774

2:                                                ; preds = %0, %9
  %3 = phi i32 [ 0, %0 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2772, metadata !DIExpression()), !dbg !2773
  %4 = shl nuw i32 1, %3, !dbg !2776
  %5 = and i32 %1, %4, !dbg !2780
  %6 = icmp eq i32 %5, 0, !dbg !2781
  br i1 %6, label %9, label %7, !dbg !2782

7:                                                ; preds = %2
  %8 = getelementptr inbounds [11 x i32], [11 x i32]* @DMA_Owner, i32 0, i32 %3, !dbg !2783
  store i32 26, i32* %8, align 4, !dbg !2785
  br label %9, !dbg !2786

9:                                                ; preds = %2, %7
  %10 = add nuw nsw i32 %3, 1, !dbg !2787
  call void @llvm.dbg.value(metadata i32 %10, metadata !2772, metadata !DIExpression()), !dbg !2773
  %11 = icmp eq i32 %10, 11, !dbg !2788
  br i1 %11, label %12, label %2, !dbg !2774, !llvm.loop !2789

12:                                               ; preds = %9, %12
  %13 = phi i8 [ %14, %12 ], [ 0, %9 ]
  call void @llvm.dbg.value(metadata i8 %13, metadata !2772, metadata !DIExpression()), !dbg !2773
  %14 = add nuw nsw i8 %13, 1, !dbg !2791
  tail call void @DMA_Clock_Enable(i8 noundef zeroext %14) #19, !dbg !2795
  call void @llvm.dbg.value(metadata i8 %14, metadata !2772, metadata !DIExpression()), !dbg !2773
  %15 = icmp ult i8 %13, 10, !dbg !2796
  br i1 %15, label %12, label %16, !dbg !2797, !llvm.loop !2798

16:                                               ; preds = %12
  %17 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 1, void (i32)* noundef nonnull @DMA_LISR) #21, !dbg !2800
  %18 = tail call i32 @hal_nvic_set_priority(i32 noundef 1, i32 noundef 5) #21, !dbg !2801
  %19 = tail call i32 @hal_nvic_enable_irq(i32 noundef 1) #21, !dbg !2802
  ret void, !dbg !2803
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @dma_set_channel_busy(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !2804 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2808, metadata !DIExpression()), !dbg !2812
  call void @llvm.dbg.value(metadata i8 -1, metadata !2809, metadata !DIExpression()), !dbg !2812
  %2 = add i8 %0, 1, !dbg !2813
  call void @llvm.dbg.value(metadata i8 %2, metadata !2811, metadata !DIExpression()), !dbg !2812
  %3 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #20, !dbg !2814, !srcloc !2173
  call void @llvm.dbg.value(metadata i32 %3, metadata !2170, metadata !DIExpression()) #20, !dbg !2817
  call void @llvm.dbg.value(metadata i32 %3, metadata !2810, metadata !DIExpression()), !dbg !2812
  tail call void asm sideeffect "cpsid i", "~{memory}"() #20, !dbg !2818, !srcloc !2178
  %4 = zext i8 %2 to i32, !dbg !2820
  %5 = getelementptr inbounds [11 x i8], [11 x i8]* @DMA_used_channel, i32 0, i32 %4, !dbg !2820
  %6 = load i8, i8* %5, align 1, !dbg !2820, !range !2462
  %7 = icmp eq i8 %6, 0, !dbg !2822
  br i1 %7, label %8, label %12, !dbg !2823

8:                                                ; preds = %1
  store i8 1, i8* %5, align 1, !dbg !2824
  tail call void @DMA_Clock_Enable(i8 noundef zeroext %2) #19, !dbg !2826
  call void @llvm.dbg.value(metadata i32 %3, metadata !2196, metadata !DIExpression()) #20, !dbg !2827
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %3) #20, !dbg !2830, !srcloc !2205
  %9 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 1, void (i32)* noundef nonnull @DMA_LISR) #21, !dbg !2831
  %10 = tail call i32 @hal_nvic_set_priority(i32 noundef 1, i32 noundef 5) #21, !dbg !2832
  %11 = tail call i32 @hal_nvic_enable_irq(i32 noundef 1) #21, !dbg !2833
  br label %12, !dbg !2834

12:                                               ; preds = %1, %8
  %13 = phi i8 [ %0, %8 ], [ -1, %1 ], !dbg !2812
  ret i8 %13, !dbg !2835
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @dma_set_channel_idle(i8 noundef returned zeroext %0) local_unnamed_addr #3 !dbg !2836 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !2838, metadata !DIExpression()), !dbg !2841
  %2 = add i8 %0, 1, !dbg !2842
  call void @llvm.dbg.value(metadata i8 %2, metadata !2840, metadata !DIExpression()), !dbg !2841
  tail call void @DMA_Stop(i8 noundef zeroext %2) #19, !dbg !2843
  %3 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #20, !dbg !2844, !srcloc !2173
  call void @llvm.dbg.value(metadata i32 %3, metadata !2170, metadata !DIExpression()) #20, !dbg !2847
  call void @llvm.dbg.value(metadata i32 %3, metadata !2839, metadata !DIExpression()), !dbg !2841
  tail call void asm sideeffect "cpsid i", "~{memory}"() #20, !dbg !2848, !srcloc !2178
  %4 = zext i8 %2 to i32, !dbg !2850
  %5 = getelementptr inbounds [11 x i8], [11 x i8]* @DMA_used_channel, i32 0, i32 %4, !dbg !2850
  store i8 0, i8* %5, align 1, !dbg !2851
  %6 = shl nuw i32 1, %4, !dbg !2852
  %7 = load i32, i32* @DMA_Channel_Status, align 4, !dbg !2853
  %8 = or i32 %7, %6, !dbg !2853
  store i32 %8, i32* @DMA_Channel_Status, align 4, !dbg !2853
  %9 = add nsw i32 %4, -1, !dbg !2854
  %10 = getelementptr inbounds [11 x i32], [11 x i32]* @DMA_Owner, i32 0, i32 %9, !dbg !2855
  store i32 26, i32* %10, align 4, !dbg !2856
  call void @llvm.dbg.value(metadata i32 %3, metadata !2196, metadata !DIExpression()) #20, !dbg !2857
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %3) #20, !dbg !2860, !srcloc !2205
  ret i8 %0, !dbg !2861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @DMA_Vfifo_init() local_unnamed_addr #1 !dbg !2862 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2864, metadata !DIExpression()), !dbg !2865
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 12) #19, !dbg !2866
  call void @llvm.dbg.value(metadata i32 6293010, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 6293010, i32* inttoptr (i32 -2097083372 to i32*), align 4, !dbg !2867
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 13) #19, !dbg !2868
  call void @llvm.dbg.value(metadata i32 7603730, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 7603730, i32* inttoptr (i32 -2097083116 to i32*), align 4, !dbg !2869
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 14) #19, !dbg !2870
  call void @llvm.dbg.value(metadata i32 8388624, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 8388624, i32* inttoptr (i32 -2097082860 to i32*), align 4, !dbg !2871
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 15) #19, !dbg !2872
  call void @llvm.dbg.value(metadata i32 9748496, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 9748496, i32* inttoptr (i32 -2097082604 to i32*), align 4, !dbg !2873
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 16) #19, !dbg !2874
  call void @llvm.dbg.value(metadata i32 10485776, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 10485776, i32* inttoptr (i32 -2097082348 to i32*), align 4, !dbg !2875
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 17) #19, !dbg !2876
  call void @llvm.dbg.value(metadata i32 11845648, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 11845648, i32* inttoptr (i32 -2097082092 to i32*), align 4, !dbg !2877
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 18) #19, !dbg !2878
  call void @llvm.dbg.value(metadata i32 12582928, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 12582928, i32* inttoptr (i32 -2097081836 to i32*), align 4, !dbg !2879
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 19) #19, !dbg !2880
  call void @llvm.dbg.value(metadata i32 13942800, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 13942800, i32* inttoptr (i32 -2097081580 to i32*), align 4, !dbg !2881
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 20) #19, !dbg !2882
  call void @llvm.dbg.value(metadata i32 16023568, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 16023568, i32* inttoptr (i32 -2097081324 to i32*), align 4, !dbg !2883
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 21) #19, !dbg !2884
  call void @llvm.dbg.value(metadata i32 17072144, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 17072144, i32* inttoptr (i32 -2097081068 to i32*), align 4, !dbg !2885
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 22) #19, !dbg !2886
  call void @llvm.dbg.value(metadata i32 18120720, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 18120720, i32* inttoptr (i32 -2097080812 to i32*), align 4, !dbg !2887
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 23) #19, !dbg !2888
  call void @llvm.dbg.value(metadata i32 19169296, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 19169296, i32* inttoptr (i32 -2097080556 to i32*), align 4, !dbg !2889
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 24) #19, !dbg !2890
  call void @llvm.dbg.value(metadata i32 20217872, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 20217872, i32* inttoptr (i32 -2097080300 to i32*), align 4, !dbg !2891
  tail call void @DMA_Clock_Enable(i8 noundef zeroext 25) #19, !dbg !2892
  call void @llvm.dbg.value(metadata i32 21282834, metadata !2864, metadata !DIExpression()), !dbg !2865
  store volatile i32 21282834, i32* inttoptr (i32 -2097080044 to i32*), align 4, !dbg !2893
  ret void, !dbg !2894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @DMA_Vfifo_SetAdrs(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #1 !dbg !2895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2900, metadata !DIExpression()), !dbg !2906
  call void @llvm.dbg.value(metadata i32 %1, metadata !2901, metadata !DIExpression()), !dbg !2906
  call void @llvm.dbg.value(metadata i32 %2, metadata !2902, metadata !DIExpression()), !dbg !2906
  call void @llvm.dbg.value(metadata i32 %3, metadata !2903, metadata !DIExpression()), !dbg !2906
  call void @llvm.dbg.value(metadata i32 %4, metadata !2904, metadata !DIExpression()), !dbg !2906
  call void @llvm.dbg.value(metadata i32 %5, metadata !2905, metadata !DIExpression()), !dbg !2906
  %7 = shl i32 %2, 8, !dbg !2907
  %8 = add i32 %7, -2097086420, !dbg !2907
  %9 = inttoptr i32 %8 to i32*, !dbg !2907
  store volatile i32 %0, i32* %9, align 4, !dbg !2907
  %10 = add i32 %7, -2097086396, !dbg !2908
  %11 = inttoptr i32 %10 to i32*, !dbg !2908
  store volatile i32 %1, i32* %11, align 4, !dbg !2908
  %12 = add i32 %7, -2097086400, !dbg !2909
  %13 = inttoptr i32 %12 to i32*, !dbg !2909
  store volatile i32 %3, i32* %13, align 64, !dbg !2909
  %14 = add i32 %7, -2097086448, !dbg !2910
  %15 = inttoptr i32 %14 to i32*, !dbg !2910
  store volatile i32 %4, i32* %15, align 16, !dbg !2911
  %16 = add i32 %7, -2097086384, !dbg !2912
  %17 = inttoptr i32 %16 to i32*, !dbg !2912
  store volatile i32 %5, i32* %17, align 16, !dbg !2913
  ret void, !dbg !2914
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @DMA_Vfifo_Set_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !2915 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2919, metadata !DIExpression()), !dbg !2921
  call void @llvm.dbg.value(metadata i32 %1, metadata !2920, metadata !DIExpression()), !dbg !2921
  %3 = shl i32 %0, 8, !dbg !2922
  %4 = add i32 %3, -2097086384, !dbg !2922
  %5 = inttoptr i32 %4 to i32*, !dbg !2922
  store volatile i32 %1, i32* %5, align 16, !dbg !2923
  ret void, !dbg !2924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @DMA_Vfifo_enable_interrupt(i32 noundef %0) local_unnamed_addr #1 !dbg !2925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2929, metadata !DIExpression()), !dbg !2930
  %2 = shl i32 %0, 8, !dbg !2931
  %3 = add i32 %2, -2097086444, !dbg !2931
  %4 = inttoptr i32 %3 to i32*, !dbg !2931
  %5 = load volatile i32, i32* %4, align 4, !dbg !2931
  %6 = or i32 %5, 32768, !dbg !2931
  store volatile i32 %6, i32* %4, align 4, !dbg !2931
  ret void, !dbg !2932
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @DMA_Vfifo_disable_interrupt(i32 noundef %0) local_unnamed_addr #1 !dbg !2933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2935, metadata !DIExpression()), !dbg !2936
  %2 = shl i32 %0, 8, !dbg !2937
  %3 = add i32 %2, -2097086444, !dbg !2937
  %4 = inttoptr i32 %3 to i32*, !dbg !2937
  %5 = load volatile i32, i32* %4, align 4, !dbg !2937
  %6 = and i32 %5, -32769, !dbg !2937
  store volatile i32 %6, i32* %4, align 4, !dbg !2937
  ret void, !dbg !2938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @DMA_Vfifo_Flush(i32 noundef %0) local_unnamed_addr #1 !dbg !2939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2941, metadata !DIExpression()), !dbg !2942
  %2 = trunc i32 %0 to i8, !dbg !2943
  tail call void @DMA_Stop(i8 noundef zeroext %2) #19, !dbg !2944
  %3 = shl i32 %0, 8, !dbg !2945
  %4 = add i32 %3, -2097086440, !dbg !2945
  %5 = inttoptr i32 %4 to i32*, !dbg !2945
  store volatile i32 32768, i32* %5, align 8, !dbg !2945
  ret void, !dbg !2946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @DMA_Vfifo_Register_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #5 !dbg !2947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2951, metadata !DIExpression()), !dbg !2953
  call void @llvm.dbg.value(metadata void ()* %1, metadata !2952, metadata !DIExpression()), !dbg !2953
  %3 = add i32 %0, -12, !dbg !2954
  %4 = getelementptr inbounds [14 x void ()*], [14 x void ()*]* bitcast (<{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_LISR_FUNC to [14 x void ()*]*), i32 0, i32 %3, !dbg !2955
  store void ()* %1, void ()** %4, align 4, !dbg !2956
  ret void, !dbg !2957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @DMA_Vfifo_Register_TO_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #5 !dbg !2958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2960, metadata !DIExpression()), !dbg !2962
  call void @llvm.dbg.value(metadata void ()* %1, metadata !2961, metadata !DIExpression()), !dbg !2962
  %3 = add i32 %0, -12, !dbg !2963
  %4 = getelementptr inbounds [14 x void ()*], [14 x void ()*]* bitcast (<{ void ()*, [13 x void ()*] }>* @DMA_VFIFO_TO_LISR_FUNC to [14 x void ()*]*), i32 0, i32 %3, !dbg !2964
  store void ()* %1, void ()** %4, align 4, !dbg !2965
  ret void, !dbg !2966
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_get_current_time() local_unnamed_addr #3 section ".ramTEXT" !dbg !2967 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !2972
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #20, !dbg !2972
  call void @llvm.dbg.value(metadata i32 0, metadata !2969, metadata !DIExpression()), !dbg !2973
  store i32 0, i32* %1, align 4, !dbg !2974
  call void @llvm.dbg.value(metadata i32* %1, metadata !2969, metadata !DIExpression(DW_OP_deref)), !dbg !2973
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #21, !dbg !2975
  call void @llvm.dbg.value(metadata i32 %3, metadata !2970, metadata !DIExpression()), !dbg !2973
  %4 = icmp eq i32 %3, 0, !dbg !2976
  br i1 %4, label %6, label %5, !dbg !2978

5:                                                ; preds = %0
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i32 0, i32 0), i32 noundef 92, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpt_get_current_time, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.5, i32 0, i32 0)) #22, !dbg !2979
  unreachable, !dbg !2979

6:                                                ; preds = %0
  %7 = load i32, i32* %1, align 4, !dbg !2981
  call void @llvm.dbg.value(metadata i32 %7, metadata !2969, metadata !DIExpression()), !dbg !2973
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #20, !dbg !2982
  ret i32 %7, !dbg !2983
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #5 section ".ramTEXT" !dbg !2984 {
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !2985
  ret void, !dbg !2986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #5 section ".ramTEXT" !dbg !2987 {
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !2988
  ret void, !dbg !2989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #5 section ".ramTEXT" !dbg !2990 {
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2991
  ret void, !dbg !2992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #5 section ".ramTEXT" !dbg !2993 {
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2994
  ret void, !dbg !2995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_sf_lock() local_unnamed_addr #3 !dbg !2996 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3001
  call void @llvm.dbg.value(metadata i32 %1, metadata !3000, metadata !DIExpression()), !dbg !3002
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !3003
  br i1 %2, label %4, label %3, !dbg !3005

3:                                                ; preds = %0
  store i1 true, i1* @sf_Mutex, align 4, !dbg !3006
  br label %4, !dbg !3008

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !3009
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !3009
  ret i32 %5, !dbg !3010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @free_sf_lock() local_unnamed_addr #3 !dbg !3011 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3014
  call void @llvm.dbg.value(metadata i32 %1, metadata !3013, metadata !DIExpression()), !dbg !3015
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !3016
  br i1 %2, label %3, label %4, !dbg !3018

3:                                                ; preds = %0
  store i1 false, i1* @sf_Mutex, align 4, !dbg !3019
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !3021
  ret void, !dbg !3022

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !3023
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.free_sf_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.5, i32 0, i32 0)) #22, !dbg !3025
  unreachable, !dbg !3025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_sf_lock() local_unnamed_addr #3 !dbg !3026 {
  br label %1, !dbg !3029

1:                                                ; preds = %1, %0
  %2 = tail call i32 @get_sf_lock() #19, !dbg !3030
  call void @llvm.dbg.value(metadata i32 %2, metadata !3028, metadata !DIExpression()), !dbg !3032
  %3 = icmp eq i32 %2, 0, !dbg !3033
  br i1 %3, label %4, label %1, !dbg !3034, !llvm.loop !3035

4:                                                ; preds = %1
  ret void, !dbg !3037
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_sf_lock() local_unnamed_addr #3 !dbg !3038 {
  tail call void @free_sf_lock() #19, !dbg !3039
  ret void, !dbg !3040
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_config(i8 noundef zeroext %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !3041 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3045, metadata !DIExpression()), !dbg !3048
  call void @llvm.dbg.value(metadata i32 0, metadata !3046, metadata !DIExpression()), !dbg !3048
  tail call fastcc void @sfc_pad_config() #19, !dbg !3049
  %2 = tail call i32 @gpt_get_current_time() #19, !dbg !3050
  %3 = tail call %struct.flash_info_t* @customer_flash_register() #21, !dbg !3051
  %4 = icmp eq %struct.flash_info_t* %3, null, !dbg !3053
  br i1 %4, label %6, label %5, !dbg !3054

5:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !3055
  br label %6, !dbg !3057

6:                                                ; preds = %5, %1
  %7 = tail call i32 @flash_check_device() #21, !dbg !3058
  ret i32 0, !dbg !3059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_pad_config() unnamed_addr #1 !dbg !3060 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3062, metadata !DIExpression()), !dbg !3063
  %1 = load volatile i32, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !3064
  call void @llvm.dbg.value(metadata i32 %1, metadata !3062, metadata !DIExpression()), !dbg !3063
  %2 = or i32 %1, 32256, !dbg !3065
  call void @llvm.dbg.value(metadata i32 %2, metadata !3062, metadata !DIExpression()), !dbg !3063
  store volatile i32 %2, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !3066
  ret void, !dbg !3067
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_flash_direct_read(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !3068 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3072, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i8* %1, metadata !3073, metadata !DIExpression()), !dbg !3075
  call void @llvm.dbg.value(metadata i32 %2, metadata !3074, metadata !DIExpression()), !dbg !3075
  tail call void @retrieve_sf_lock() #19, !dbg !3076
  %4 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %0, i32 noundef %2) #21, !dbg !3077
  tail call void @release_sf_lock() #19, !dbg !3078
  ret void, !dbg !3079
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_read(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #3 section ".ramTEXT" !dbg !3080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3084, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 %1, metadata !3085, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i8* %2, metadata !3086, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 0, metadata !3087, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 %1, metadata !3088, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 0, metadata !3089, metadata !DIExpression()), !dbg !3090
  tail call void @retrieve_sf_lock() #19, !dbg !3091
  call void @llvm.dbg.value(metadata i32 %1, metadata !3088, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 %0, metadata !3084, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i8* %2, metadata !3086, metadata !DIExpression()), !dbg !3090
  %4 = icmp ugt i32 %1, 127, !dbg !3092
  br i1 %4, label %5, label %19, !dbg !3093

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %1, %3 ]
  %7 = phi i32 [ %16, %14 ], [ %0, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3088, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 %7, metadata !3084, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i8* %8, metadata !3086, metadata !DIExpression()), !dbg !3090
  call void @llvm.dbg.value(metadata i32 128, metadata !3089, metadata !DIExpression()), !dbg !3090
  %9 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !3094
  switch i32 %9, label %14 [
    i32 0, label %10
    i32 1, label %12
  ], !dbg !3097

10:                                               ; preds = %5
  %11 = tail call i32 @flash_read(i8* noundef %8, i32 noundef %7, i32 noundef 128) #21, !dbg !3098
  br label %14, !dbg !3100

12:                                               ; preds = %5
  %13 = tail call i32 @flash_fast_read(i8* noundef %8, i32 noundef %7, i32 noundef 128, i32 noundef 1) #21, !dbg !3101
  br label %14, !dbg !3104

14:                                               ; preds = %5, %12, %10
  %15 = getelementptr inbounds i8, i8* %8, i32 128, !dbg !3105
  call void @llvm.dbg.value(metadata i8* %15, metadata !3086, metadata !DIExpression()), !dbg !3090
  %16 = add i32 %7, 128, !dbg !3106
  call void @llvm.dbg.value(metadata i32 %16, metadata !3084, metadata !DIExpression()), !dbg !3090
  %17 = add i32 %6, -128, !dbg !3107
  call void @llvm.dbg.value(metadata i32 %17, metadata !3088, metadata !DIExpression()), !dbg !3090
  %18 = icmp ugt i32 %17, 127, !dbg !3092
  br i1 %18, label %5, label %19, !dbg !3093, !llvm.loop !3108

19:                                               ; preds = %14, %3
  %20 = phi i8* [ %2, %3 ], [ %15, %14 ]
  %21 = phi i32 [ %0, %3 ], [ %16, %14 ]
  %22 = phi i32 [ %1, %3 ], [ %17, %14 ], !dbg !3090
  %23 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !3110
  switch i32 %23, label %28 [
    i32 0, label %24
    i32 1, label %26
  ], !dbg !3112

24:                                               ; preds = %19
  %25 = tail call i32 @flash_read(i8* noundef %20, i32 noundef %21, i32 noundef %22) #21, !dbg !3113
  br label %28, !dbg !3115

26:                                               ; preds = %19
  %27 = tail call i32 @flash_fast_read(i8* noundef %20, i32 noundef %21, i32 noundef %22, i32 noundef 1) #21, !dbg !3116
  br label %28, !dbg !3119

28:                                               ; preds = %19, %26, %24
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3120
  tail call void @release_sf_lock() #19, !dbg !3121
  ret i32 0, !dbg !3122
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_write(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #3 !dbg !3123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3128, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.value(metadata i32 %1, metadata !3129, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.value(metadata i8* %2, metadata !3130, metadata !DIExpression()), !dbg !3132
  call void @llvm.dbg.value(metadata i32 0, metadata !3131, metadata !DIExpression()), !dbg !3132
  tail call void @retrieve_sf_lock() #19, !dbg !3133
  %4 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !3134
  %5 = tail call i32 @hal_cache_disable() #21, !dbg !3135
  %6 = tail call i32 @flash_write(i8* noundef %2, i32 noundef %0, i32 noundef %1) #21, !dbg !3136
  call void @llvm.dbg.value(metadata i32 %6, metadata !3131, metadata !DIExpression()), !dbg !3132
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3137
  %7 = tail call i32 @hal_cache_enable() #21, !dbg !3138
  tail call void @release_sf_lock() #19, !dbg !3139
  ret i32 %6, !dbg !3140
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 section ".ramTEXT" !dbg !3141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3145, metadata !DIExpression()), !dbg !3148
  call void @llvm.dbg.value(metadata i32 %1, metadata !3146, metadata !DIExpression()), !dbg !3148
  call void @llvm.dbg.value(metadata i32 0, metadata !3147, metadata !DIExpression()), !dbg !3148
  tail call void @retrieve_sf_lock() #19, !dbg !3149
  %3 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !3150
  %4 = tail call i32 @hal_cache_disable() #21, !dbg !3151
  %5 = tail call i32 @flash_write_enable() #21, !dbg !3152
  %6 = tail call i32 @flash_unprotect() #21, !dbg !3153
  switch i32 %1, label %22 [
    i32 0, label %7
    i32 1, label %12
    i32 2, label %17
  ], !dbg !3154

7:                                                ; preds = %2
  %8 = and i32 %0, 4095, !dbg !3155
  %9 = icmp eq i32 %8, 0, !dbg !3159
  br i1 %9, label %10, label %22, !dbg !3160

10:                                               ; preds = %7
  %11 = tail call i32 @flash_erase_page(i32 noundef %0) #21, !dbg !3161
  call void @llvm.dbg.value(metadata i32 %11, metadata !3147, metadata !DIExpression()), !dbg !3148
  br label %22, !dbg !3162

12:                                               ; preds = %2
  %13 = and i32 %0, 32767, !dbg !3163
  %14 = icmp eq i32 %13, 0, !dbg !3167
  br i1 %14, label %15, label %22, !dbg !3168

15:                                               ; preds = %12
  %16 = tail call i32 @flash_erase_sector_32k(i32 noundef %0) #21, !dbg !3169
  call void @llvm.dbg.value(metadata i32 %16, metadata !3147, metadata !DIExpression()), !dbg !3148
  br label %22, !dbg !3170

17:                                               ; preds = %2
  %18 = and i32 %0, 65535, !dbg !3171
  %19 = icmp eq i32 %18, 0, !dbg !3175
  br i1 %19, label %20, label %22, !dbg !3176

20:                                               ; preds = %17
  %21 = tail call i32 @flash_erase_sector(i32 noundef %0) #21, !dbg !3177
  call void @llvm.dbg.value(metadata i32 %21, metadata !3147, metadata !DIExpression()), !dbg !3148
  br label %22, !dbg !3178

22:                                               ; preds = %10, %20, %15, %2, %17, %12, %7
  %23 = phi i32 [ -3, %7 ], [ -3, %12 ], [ -3, %17 ], [ %11, %10 ], [ %16, %15 ], [ %21, %20 ], [ 0, %2 ], !dbg !3148
  %24 = tail call i32 @hal_cache_enable() #21, !dbg !3148
  tail call void @release_sf_lock() #19, !dbg !3148
  ret i32 %23, !dbg !3179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #3 section ".ramTEXT" !dbg !3180 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #20, !dbg !3184
  call void @llvm.dbg.value(metadata i8 0, metadata !3182, metadata !DIExpression()), !dbg !3185
  store i8 0, i8* %1, align 1, !dbg !3186
  call void @llvm.dbg.value(metadata i32 0, metadata !3183, metadata !DIExpression()), !dbg !3185
  %2 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3187
  call void @llvm.dbg.value(metadata i32 %2, metadata !3183, metadata !DIExpression()), !dbg !3185
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !3188, !range !2462
  %4 = icmp ne i8 %3, 0, !dbg !3188
  %5 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %4, i1 true, i1 %6, !dbg !3190
  br i1 %7, label %27, label %8, !dbg !3190

8:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i8* %1, metadata !3182, metadata !DIExpression(DW_OP_deref)), !dbg !3185
  %9 = call i32 @flash_read_sr(i8* noundef nonnull %1) #21, !dbg !3191
  %10 = icmp slt i32 %9, 0, !dbg !3194
  br i1 %10, label %11, label %12, !dbg !3195

11:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i32 0, i32 0), i32 noundef 333, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.5, i32 0, i32 0)) #22, !dbg !3196
  unreachable, !dbg !3196

12:                                               ; preds = %8
  %13 = load i8, i8* %1, align 1, !dbg !3198
  call void @llvm.dbg.value(metadata i8 %13, metadata !3182, metadata !DIExpression()), !dbg !3185
  %14 = and i8 %13, 1, !dbg !3200
  %15 = icmp eq i8 %14, 0, !dbg !3201
  br i1 %15, label %26, label %16, !dbg !3202

16:                                               ; preds = %12
  call void @flash_suspend_Winbond() #21, !dbg !3203
  br label %17, !dbg !3205

17:                                               ; preds = %21, %16
  call void @llvm.dbg.value(metadata i8* %1, metadata !3182, metadata !DIExpression(DW_OP_deref)), !dbg !3185
  %18 = call i32 @flash_read_sr(i8* noundef nonnull %1) #21, !dbg !3206
  %19 = icmp slt i32 %18, 0, !dbg !3209
  br i1 %19, label %20, label %21, !dbg !3210

20:                                               ; preds = %17
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i32 0, i32 0), i32 noundef 344, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.5, i32 0, i32 0)) #22, !dbg !3211
  unreachable, !dbg !3211

21:                                               ; preds = %17
  %22 = load i8, i8* %1, align 1, !dbg !3213
  call void @llvm.dbg.value(metadata i8 %22, metadata !3182, metadata !DIExpression()), !dbg !3185
  %23 = and i8 %22, 1, !dbg !3215
  %24 = icmp eq i8 %23, 0, !dbg !3216
  br i1 %24, label %25, label %17, !dbg !3217, !llvm.loop !3218

25:                                               ; preds = %21
  call void @SF_DAL_FLAG_SUS_SET() #19, !dbg !3220
  br label %27, !dbg !3221

26:                                               ; preds = %12
  call void @SF_DAL_FLAG_BUSY_CLR() #19, !dbg !3222
  br label %27

27:                                               ; preds = %25, %26, %0
  call void @restore_interrupt_mask(i32 noundef %2) #21, !dbg !3224
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #20, !dbg !3225
  ret void, !dbg !3225
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 section ".ramTEXT" !dbg !3226 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3230, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.value(metadata i32 %1, metadata !3231, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.value(metadata i32 0, metadata !3233, metadata !DIExpression()), !dbg !3241
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #20, !dbg !3242
  call void @llvm.dbg.value(metadata i8 0, metadata !3236, metadata !DIExpression()), !dbg !3241
  store i8 0, i8* %3, align 1, !dbg !3243
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #20, !dbg !3244
  call void @llvm.dbg.value(metadata i8 0, metadata !3237, metadata !DIExpression()), !dbg !3241
  store i8 0, i8* %4, align 1, !dbg !3245
  call void @llvm.dbg.value(metadata i8* %3, metadata !3236, metadata !DIExpression(DW_OP_deref)), !dbg !3241
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %3) #21, !dbg !3246
  %6 = icmp slt i32 %5, 0, !dbg !3248
  br i1 %6, label %7, label %8, !dbg !3249

7:                                                ; preds = %2
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i32 0, i32 0), i32 noundef 368, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.5, i32 0, i32 0)) #22, !dbg !3250
  unreachable, !dbg !3250

8:                                                ; preds = %2
  %9 = load i8, i8* %3, align 1, !dbg !3252
  call void @llvm.dbg.value(metadata i8 %9, metadata !3236, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.value(metadata i8 %9, metadata !3234, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.value(metadata i8* %4, metadata !3237, metadata !DIExpression(DW_OP_deref)), !dbg !3241
  %10 = call i32 @flash_read_sr2(i8* noundef nonnull %4) #21, !dbg !3254
  %11 = icmp slt i32 %10, 0, !dbg !3256
  br i1 %11, label %12, label %13, !dbg !3257

12:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i32 0, i32 0), i32 noundef 374, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.5, i32 0, i32 0)) #22, !dbg !3258
  unreachable, !dbg !3258

13:                                               ; preds = %8
  %14 = load i8, i8* %4, align 1, !dbg !3260
  call void @llvm.dbg.value(metadata i8 %14, metadata !3237, metadata !DIExpression()), !dbg !3241
  call void @llvm.dbg.value(metadata i8 %14, metadata !3235, metadata !DIExpression()), !dbg !3241
  %15 = call i32 @save_and_set_interrupt_mask() #21, !dbg !3262
  call void @llvm.dbg.value(metadata i32 %15, metadata !3233, metadata !DIExpression()), !dbg !3241
  %16 = and i8 %9, 1, !dbg !3263
  %17 = icmp eq i8 %16, 0, !dbg !3264
  br i1 %17, label %18, label %46, !dbg !3265

18:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8 12, metadata !3238, metadata !DIExpression()), !dbg !3266
  %19 = load i32, i32* @support_flash_id, align 4, !dbg !3267
  switch i32 %19, label %28 [
    i32 239, label %20
    i32 200, label %20
    i32 255, label %25
    i32 32, label %24
  ], !dbg !3269

20:                                               ; preds = %18, %18
  call void @llvm.dbg.value(metadata i8 -128, metadata !3238, metadata !DIExpression()), !dbg !3266
  %21 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3270
  %22 = icmp eq i32 %21, 49, !dbg !3273
  %23 = select i1 %22, i32 132, i32 128, !dbg !3274
  br label %28, !dbg !3274

24:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i8 66, metadata !3238, metadata !DIExpression()), !dbg !3266
  br label %28, !dbg !3275

25:                                               ; preds = %18
  %26 = call zeroext i8 @customer_flash_suspend_bit() #21, !dbg !3279
  call void @llvm.dbg.value(metadata i8 %26, metadata !3238, metadata !DIExpression()), !dbg !3266
  %27 = zext i8 %26 to i32, !dbg !3282
  br label %28, !dbg !3282

28:                                               ; preds = %20, %18, %25, %24
  %29 = phi i32 [ 66, %24 ], [ %27, %25 ], [ %23, %20 ], [ 12, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !3238, metadata !DIExpression()), !dbg !3266
  %30 = zext i8 %14 to i32, !dbg !3283
  %31 = and i32 %29, %30, !dbg !3285
  %32 = icmp eq i32 %31, 0, !dbg !3286
  br i1 %32, label %33, label %38, !dbg !3287

33:                                               ; preds = %28
  %34 = icmp ne i32 %29, 0, !dbg !3288
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %34, i1 true, i1 %36, !dbg !3289
  br i1 %37, label %43, label %38, !dbg !3289

38:                                               ; preds = %33, %28
  %39 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !3290, !range !2462
  %40 = icmp eq i8 %39, 0, !dbg !3290
  br i1 %40, label %41, label %42, !dbg !3290

41:                                               ; preds = %38
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i32 0, i32 0), i32 noundef 407, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.6, i32 0, i32 0)) #22, !dbg !3290
  unreachable, !dbg !3290

42:                                               ; preds = %38
  call void @flash_resume_Winbond() #21, !dbg !3292
  call void @llvm.dbg.value(metadata i32 -121, metadata !3232, metadata !DIExpression()), !dbg !3241
  br label %44, !dbg !3293

43:                                               ; preds = %33
  call void @SF_DAL_FLAG_BUSY_CLR() #19, !dbg !3294
  call void @llvm.dbg.value(metadata i32 0, metadata !3232, metadata !DIExpression()), !dbg !3241
  br label %44

44:                                               ; preds = %43, %42
  %45 = phi i32 [ 0, %43 ], [ -121, %42 ]
  call void @SF_DAL_FLAG_SUS_CLR() #19, !dbg !3296
  br label %46, !dbg !3297

46:                                               ; preds = %44, %13
  %47 = phi i32 [ -121, %13 ], [ %45, %44 ], !dbg !3298
  call void @llvm.dbg.value(metadata i32 %47, metadata !3232, metadata !DIExpression()), !dbg !3241
  call void @restore_interrupt_mask(i32 noundef %15) #21, !dbg !3297
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #20, !dbg !3299
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #20, !dbg !3299
  ret i32 %47, !dbg !3300
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readnone %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #3 section ".ramTEXT" !dbg !3301 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3305, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 %1, metadata !3306, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i8 %2, metadata !3307, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 0, metadata !3309, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i16 0, metadata !3311, metadata !DIExpression()), !dbg !3313
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #20, !dbg !3314
  call void @llvm.dbg.value(metadata i8 0, metadata !3312, metadata !DIExpression()), !dbg !3313
  store i8 0, i8* %4, align 1, !dbg !3315
  call void @llvm.dbg.value(metadata i8* %4, metadata !3312, metadata !DIExpression(DW_OP_deref)), !dbg !3313
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %4) #21, !dbg !3316
  %6 = icmp slt i32 %5, 0, !dbg !3318
  br i1 %6, label %7, label %8, !dbg !3319

7:                                                ; preds = %3
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i32 0, i32 0), i32 noundef 449, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.5, i32 0, i32 0)) #22, !dbg !3320
  unreachable, !dbg !3320

8:                                                ; preds = %3
  %9 = load i8, i8* %4, align 1, !dbg !3322
  call void @llvm.dbg.value(metadata i8 %9, metadata !3312, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i8 %9, metadata !3311, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3313
  %10 = call i32 @save_and_set_interrupt_mask() #21, !dbg !3324
  call void @llvm.dbg.value(metadata i32 %10, metadata !3308, metadata !DIExpression()), !dbg !3313
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !3325, !range !2462
  %12 = icmp eq i8 %11, 0, !dbg !3325
  br i1 %12, label %18, label %13, !dbg !3327

13:                                               ; preds = %8
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !3328, !range !2462
  %15 = icmp eq i8 %14, 0, !dbg !3328
  br i1 %15, label %16, label %17, !dbg !3328

16:                                               ; preds = %13
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.6, i32 0, i32 0)) #22, !dbg !3328
  unreachable, !dbg !3328

17:                                               ; preds = %13
  call void @flash_resume_Winbond() #21, !dbg !3330
  call void @SF_DAL_FLAG_SUS_CLR() #19, !dbg !3331
  call void @restore_interrupt_mask(i32 noundef %10) #21, !dbg !3332
  br label %26, !dbg !3333

18:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 %9, metadata !3311, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3313
  %19 = and i8 %9, 1, !dbg !3334
  %20 = icmp eq i8 %19, 0, !dbg !3336
  br i1 %20, label %21, label %26, !dbg !3337

21:                                               ; preds = %18
  call void @SF_DAL_FLAG_BUSY_CLR() #19, !dbg !3338
  %22 = inttoptr i32 %1 to i8*, !dbg !3340
  %23 = load volatile i8, i8* %22, align 1, !dbg !3341
  call void @llvm.dbg.value(metadata i8 %23, metadata !3310, metadata !DIExpression()), !dbg !3313
  %24 = icmp eq i8 %23, %2, !dbg !3342
  %25 = select i1 %24, i32 1, i32 -1
  br label %26

26:                                               ; preds = %21, %18, %17
  %27 = phi i32 [ 0, %17 ], [ 0, %18 ], [ %25, %21 ], !dbg !3313
  call void @llvm.dbg.value(metadata i32 %27, metadata !3309, metadata !DIExpression()), !dbg !3313
  call void @restore_interrupt_mask(i32 noundef %10) #21, !dbg !3344
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #20, !dbg !3345
  ret i32 %27, !dbg !3346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #3 !dbg !3347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3351, metadata !DIExpression()), !dbg !3354
  call void @llvm.dbg.value(metadata i32 %1, metadata !3352, metadata !DIExpression()), !dbg !3354
  call void @llvm.dbg.value(metadata i1 %2, metadata !3353, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3354
  %4 = icmp ugt i32 %0, 1, !dbg !3355
  br i1 %4, label %5, label %8, !dbg !3357

5:                                                ; preds = %3
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.8, i32 0, i32 0), i32 noundef 75) #21, !dbg !3358
  br label %7, !dbg !3358

7:                                                ; preds = %5, %7
  br label %7, !dbg !3358, !llvm.loop !3360

8:                                                ; preds = %3
  switch i32 %0, label %21 [
    i32 0, label %9
    i32 1, label %15
  ], !dbg !3361

9:                                                ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824300 to i32*), align 4, !dbg !3362
  %10 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !3365
  br i1 %2, label %11, label %13, !dbg !3367

11:                                               ; preds = %9
  %12 = or i32 %10, 2, !dbg !3368
  store volatile i32 %12, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !3368
  br label %21, !dbg !3370

13:                                               ; preds = %9
  %14 = and i32 %10, -3, !dbg !3371
  store volatile i32 %14, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !3371
  br label %21

15:                                               ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824284 to i32*), align 4, !dbg !3373
  %16 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !3376
  br i1 %2, label %17, label %19, !dbg !3378

17:                                               ; preds = %15
  %18 = or i32 %16, 2, !dbg !3379
  store volatile i32 %18, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !3379
  br label %21, !dbg !3381

19:                                               ; preds = %15
  %20 = and i32 %16, -3, !dbg !3382
  store volatile i32 %20, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !3382
  br label %21

21:                                               ; preds = %8, %19, %17, %11, %13
  ret void, !dbg !3384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_Start(i32 noundef %0) local_unnamed_addr #3 !dbg !3385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3389, metadata !DIExpression()), !dbg !3390
  switch i32 %0, label %2 [
    i32 0, label %5
    i32 1, label %9
    i32 4, label %13
  ], !dbg !3391

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.8, i32 0, i32 0), i32 noundef 96) #21, !dbg !3392
  br label %4, !dbg !3392

4:                                                ; preds = %2, %4
  br label %4, !dbg !3392, !llvm.loop !3395

5:                                                ; preds = %1
  %6 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !3396
  %7 = or i32 %6, 1, !dbg !3396
  store volatile i32 %7, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !3396
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #21, !dbg !3399
  br label %16, !dbg !3400

9:                                                ; preds = %1
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !3401
  %11 = or i32 %10, 1, !dbg !3401
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !3401
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #21, !dbg !3404
  br label %16, !dbg !3405

13:                                               ; preds = %1
  %14 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !3406
  %15 = or i32 %14, 1, !dbg !3406
  store volatile i32 %15, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !3406
  br label %16, !dbg !3409

16:                                               ; preds = %9, %13, %5
  ret void, !dbg !3410
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPT_Stop(i32 noundef %0) local_unnamed_addr #1 !dbg !3411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3413, metadata !DIExpression()), !dbg !3414
  switch i32 %0, label %18 [
    i32 0, label %2
    i32 1, label %7
    i32 2, label %12
    i32 4, label %15
  ], !dbg !3415

2:                                                ; preds = %1
  %3 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3416
  %4 = and i32 %3, -2, !dbg !3416
  store volatile i32 %4, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3416
  %5 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !3419
  %6 = and i32 %5, -2, !dbg !3419
  store volatile i32 %6, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !3419
  store volatile i32 1, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !3420
  br label %18, !dbg !3421

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3422
  %9 = and i32 %8, -3, !dbg !3422
  store volatile i32 %9, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3422
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !3425
  %11 = and i32 %10, -2, !dbg !3425
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !3425
  store volatile i32 2, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !3426
  br label %18, !dbg !3427

12:                                               ; preds = %1
  %13 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !3428
  %14 = and i32 %13, -2, !dbg !3428
  store volatile i32 %14, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !3428
  br label %18, !dbg !3431

15:                                               ; preds = %1
  %16 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !3432
  %17 = and i32 %16, -2, !dbg !3432
  store volatile i32 %17, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !3432
  br label %18, !dbg !3435

18:                                               ; preds = %1, %7, %15, %12, %2
  ret void, !dbg !3436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_INT_Handler(i32 %0) #3 !dbg !3437 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3439, metadata !DIExpression()), !dbg !3441
  call void @llvm.dbg.value(metadata i32 undef, metadata !3439, metadata !DIExpression()), !dbg !3441
  %2 = load volatile i32, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !3442
  %3 = and i32 %2, 65535, !dbg !3443
  call void @llvm.dbg.value(metadata i32 %2, metadata !3440, metadata !DIExpression()), !dbg !3441
  store volatile i32 %3, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !3444
  %4 = and i32 %2, 1, !dbg !3445
  %5 = icmp eq i32 %4, 0, !dbg !3445
  br i1 %5, label %6, label %9, !dbg !3447

6:                                                ; preds = %1
  %7 = and i32 %2, 2, !dbg !3448
  %8 = icmp eq i32 %7, 0, !dbg !3448
  br i1 %8, label %13, label %9, !dbg !3450

9:                                                ; preds = %6, %1
  %10 = phi i32 [ 0, %1 ], [ 1, %6 ]
  %11 = phi void ()** [ @GPTTimer.0, %1 ], [ @GPTTimer.1, %6 ]
  tail call void @clear_TMR_INT_status_bit(i32 noundef %10) #21, !dbg !3451
  %12 = load void ()*, void ()** %11, align 4, !dbg !3451
  tail call void %12() #21, !dbg !3451
  br label %13, !dbg !3452

13:                                               ; preds = %9, %6
  ret void, !dbg !3452
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_init(i32 noundef %0, i32 noundef %1, void ()* noundef %2) local_unnamed_addr #3 !dbg !3453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3457, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata i32 %1, metadata !3458, metadata !DIExpression()), !dbg !3460
  call void @llvm.dbg.value(metadata void ()* %2, metadata !3459, metadata !DIExpression()), !dbg !3460
  switch i32 %0, label %4 [
    i32 4, label %7
    i32 2, label %7
    i32 1, label %7
    i32 0, label %7
  ], !dbg !3461

4:                                                ; preds = %3
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.8, i32 0, i32 0), i32 noundef 149) #21, !dbg !3462
  br label %6, !dbg !3462

6:                                                ; preds = %4, %6
  br label %6, !dbg !3462, !llvm.loop !3465

7:                                                ; preds = %3, %3, %3, %3
  %8 = icmp ult i32 %0, 2, !dbg !3466
  br i1 %8, label %9, label %13, !dbg !3467

9:                                                ; preds = %7
  %10 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 24, void (i32)* noundef nonnull @GPT_INT_Handler) #21, !dbg !3469
  %11 = tail call i32 @hal_nvic_set_priority(i32 noundef 24, i32 noundef 5) #21, !dbg !3471
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #21, !dbg !3472
  br label %13, !dbg !3473

13:                                               ; preds = %7, %9
  switch i32 %0, label %36 [
    i32 0, label %14
    i32 1, label %20
    i32 2, label %26
    i32 4, label %31
  ], !dbg !3474

14:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.0, align 4, !dbg !3475
  %15 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3478
  %16 = or i32 %15, 1, !dbg !3478
  store volatile i32 %16, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3478
  %17 = shl i32 %1, 2, !dbg !3479
  %18 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !3480
  %19 = or i32 %18, %17, !dbg !3480
  store volatile i32 %19, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !3480
  br label %36, !dbg !3481

20:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.1, align 4, !dbg !3482
  %21 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3485
  %22 = or i32 %21, 2, !dbg !3485
  store volatile i32 %22, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !3485
  %23 = shl i32 %1, 2, !dbg !3486
  %24 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !3487
  %25 = or i32 %24, %23, !dbg !3487
  store volatile i32 %25, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !3487
  br label %36, !dbg !3488

26:                                               ; preds = %13
  %27 = shl i32 %1, 1, !dbg !3489
  %28 = or i32 %27, 1, !dbg !3492
  %29 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !3493
  %30 = or i32 %29, %28, !dbg !3493
  store volatile i32 %30, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !3493
  br label %36, !dbg !3494

31:                                               ; preds = %13
  %32 = shl i32 %1, 1, !dbg !3495
  %33 = or i32 %32, 1, !dbg !3498
  %34 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !3499
  %35 = or i32 %34, %33, !dbg !3499
  store volatile i32 %35, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !3499
  store volatile i32 0, i32* inttoptr (i32 -2096824220 to i32*), align 4, !dbg !3500
  br label %36, !dbg !3501

36:                                               ; preds = %13, %20, %31, %26, %14
  ret void, !dbg !3502
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GPT_return_current_count(i32 noundef %0) local_unnamed_addr #3 !dbg !3503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3507, metadata !DIExpression()), !dbg !3509
  switch i32 %0, label %2 [
    i32 0, label %8
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
  ], !dbg !3510

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.8, i32 0, i32 0), i32 noundef 177) #21, !dbg !3511
  br label %4, !dbg !3511

4:                                                ; preds = %4, %2
  br label %4, !dbg !3511, !llvm.loop !3514

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3509
  br label %8, !dbg !3515

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3509
  br label %8, !dbg !3519

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !3508, metadata !DIExpression()), !dbg !3509
  br label %8, !dbg !3522

8:                                                ; preds = %1, %5, %7, %6
  %9 = phi i32* [ inttoptr (i32 -2096824252 to i32*), %5 ], [ inttoptr (i32 -2096824268 to i32*), %6 ], [ inttoptr (i32 -2096824216 to i32*), %7 ], [ inttoptr (i32 -2096824256 to i32*), %1 ]
  %10 = load volatile i32, i32* %9, align 4, !dbg !3525
  call void @llvm.dbg.value(metadata i32 %10, metadata !3508, metadata !DIExpression()), !dbg !3509
  ret i32 %10, !dbg !3526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT2Init() local_unnamed_addr #3 !dbg !3527 {
  tail call void @GPT_init(i32 noundef 2, i32 noundef 1, void ()* noundef null) #19, !dbg !3528
  ret void, !dbg !3529
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT4Init() local_unnamed_addr #3 !dbg !3530 {
  tail call void @GPT_init(i32 noundef 4, i32 noundef 1, void ()* noundef null) #19, !dbg !3531
  ret void, !dbg !3532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_init() local_unnamed_addr #8 !dbg !3533 {
  ret i32 0, !dbg !3537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_deinit() local_unnamed_addr #8 !dbg !3538 {
  ret i32 0, !dbg !3539
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_trng_get_generated_random_number(i32* nocapture noundef writeonly %0) local_unnamed_addr #3 !dbg !3540 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3545, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.value(metadata i16 0, metadata !3546, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !3548, metadata !DIExpression()), !dbg !3555
  %2 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !3556
  %3 = or i32 %2, 1, !dbg !3556
  store volatile i32 %3, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !3556
  call void @llvm.dbg.value(metadata i16 0, metadata !3546, metadata !DIExpression()), !dbg !3554
  br label %4, !dbg !3557

4:                                                ; preds = %1, %9
  %5 = phi i16 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i16 %5, metadata !3546, metadata !DIExpression()), !dbg !3554
  %6 = load volatile i32, i32* inttoptr (i32 -2096107504 to i32*), align 16, !dbg !3558
  %7 = and i32 %6, 1, !dbg !3558
  %8 = icmp eq i32 %7, 0, !dbg !3561
  br i1 %8, label %9, label %12, !dbg !3562

9:                                                ; preds = %4
  tail call void @delay_time(i32 noundef 32) #21, !dbg !3563
  %10 = add nuw nsw i16 %5, 1, !dbg !3564
  call void @llvm.dbg.value(metadata i16 %10, metadata !3546, metadata !DIExpression()), !dbg !3554
  %11 = icmp ult i16 %5, 99, !dbg !3565
  br i1 %11, label %4, label %12, !dbg !3557, !llvm.loop !3566

12:                                               ; preds = %4, %9
  %13 = phi i16 [ %5, %4 ], [ 100, %9 ], !dbg !3554
  %14 = load volatile i32, i32* inttoptr (i32 -2096107512 to i32*), align 8, !dbg !3568
  store i32 %14, i32* %0, align 4, !dbg !3569
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107500 to i32*), metadata !3550, metadata !DIExpression()), !dbg !3570
  %15 = load volatile i32, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !3571
  store volatile i32 1, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !3571
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !3552, metadata !DIExpression()), !dbg !3572
  %16 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !3573
  %17 = and i32 %16, -2, !dbg !3573
  store volatile i32 %17, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !3573
  %18 = icmp ugt i16 %13, 99, !dbg !3574
  br i1 %18, label %19, label %20, !dbg !3576

19:                                               ; preds = %12
  store i32 0, i32* %0, align 4, !dbg !3577
  br label %20, !dbg !3579

20:                                               ; preds = %12, %19
  %21 = phi i32 [ -2, %19 ], [ 0, %12 ], !dbg !3580
  ret i32 %21, !dbg !3581
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NVIC_SetupVectorTable(i32 noundef %0) local_unnamed_addr #3 !dbg !3582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3584, metadata !DIExpression()), !dbg !3585
  store volatile i32 %0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !3586
  tail call void asm sideeffect "dsb", ""() #20, !dbg !3587, !srcloc !3588
  tail call void asm sideeffect "isb", ""() #20, !dbg !3589, !srcloc !3590
  ret void, !dbg !3591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @NVIC_SWInt(i32 noundef %0) local_unnamed_addr #1 !dbg !3592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3596, metadata !DIExpression()), !dbg !3597
  store volatile i32 %0, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !3598
  ret void, !dbg !3599
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #3 section ".ramTEXT" !dbg !3600 {
  %1 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #20, !dbg !3603, !srcloc !3609
  call void @llvm.dbg.value(metadata i32 %1, metadata !3606, metadata !DIExpression()) #20, !dbg !3610
  call void @llvm.dbg.value(metadata i32 %1, metadata !3602, metadata !DIExpression()), !dbg !3611
  tail call void asm sideeffect "cpsid i", "~{memory}"() #20, !dbg !3612, !srcloc !3615
  ret i32 %1, !dbg !3616
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !3617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3619, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.value(metadata i32 %0, metadata !3621, metadata !DIExpression()) #20, !dbg !3624
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %0) #20, !dbg !3627, !srcloc !3628
  ret void, !dbg !3629
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GPT_return_current_count() local_unnamed_addr #9 section ".ramTEXT" !dbg !3630 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096824268 to i32*), align 4, !dbg !3635
  call void @llvm.dbg.value(metadata i32 %1, metadata !3634, metadata !DIExpression()), !dbg !3636
  ret i32 %1, !dbg !3637
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_get_systime() local_unnamed_addr #9 section ".ramTEXT" !dbg !3638 {
  %1 = tail call i32 @sfc_GPT_return_current_count() #19, !dbg !3639
  ret i32 %1, !dbg !3640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_time(i32 noundef %0) local_unnamed_addr #1 section ".ramTEXT" !dbg !3641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3643, metadata !DIExpression()), !dbg !3646
  %2 = tail call i32 @sfc_get_systime() #19, !dbg !3647
  %3 = add i32 %2, %0, !dbg !3648
  %4 = xor i32 %3, -1, !dbg !3649
  call void @llvm.dbg.value(metadata i32 %3, metadata !3644, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3646
  %5 = tail call i32 @sfc_get_systime() #19, !dbg !3650
  call void @llvm.dbg.value(metadata i32 %5, metadata !3645, metadata !DIExpression()), !dbg !3646
  %6 = add i32 %5, %4, !dbg !3651
  %7 = icmp slt i32 %6, 0, !dbg !3651
  br i1 %7, label %8, label %12, !dbg !3652

8:                                                ; preds = %1, %8
  %9 = tail call i32 @sfc_get_systime() #19, !dbg !3653
  call void @llvm.dbg.value(metadata i32 %9, metadata !3645, metadata !DIExpression()), !dbg !3646
  %10 = add i32 %9, %4, !dbg !3651
  %11 = icmp slt i32 %10, 0, !dbg !3651
  br i1 %11, label %8, label %12, !dbg !3652, !llvm.loop !3655

12:                                               ; preds = %8, %1
  ret void, !dbg !3657
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_ms(i32 noundef %0) local_unnamed_addr #1 section ".ramTEXT" !dbg !3658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3660, metadata !DIExpression()), !dbg !3661
  %2 = shl i32 %0, 5, !dbg !3662
  tail call void @sfc_delay_time(i32 noundef %2) #19, !dbg !3663
  ret void, !dbg !3664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfc_getMaxGPRamSize() local_unnamed_addr #8 section ".ramTEXT" !dbg !3665 {
  ret i32 128, !dbg !3666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_Init(i32 noundef %0) local_unnamed_addr #1 section ".ramTEXT" !dbg !3667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3669, metadata !DIExpression()), !dbg !3671
  store i32 0, i32* @g_sfc_security_enable, align 4, !dbg !3672
  store volatile i32 65536, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3673
  store volatile i32 185300880, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3674
  store volatile i32 -1296039920, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3675
  store volatile i32 0, i32* inttoptr (i32 -2096693236 to i32*), align 4, !dbg !3676
  store volatile i32 0, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !3677
  store volatile i32 0, i32* inttoptr (i32 -2096693220 to i32*), align 4, !dbg !3678
  %2 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3679
  call void @llvm.dbg.value(metadata i32 %2, metadata !3670, metadata !DIExpression()), !dbg !3671
  %3 = and i32 %2, -4194305, !dbg !3680
  call void @llvm.dbg.value(metadata i32 %3, metadata !3670, metadata !DIExpression()), !dbg !3671
  store volatile i32 %3, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3681
  tail call void @sfc_delay_ms(i32 noundef 1) #19, !dbg !3682
  %4 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3683
  call void @llvm.dbg.value(metadata i32 %4, metadata !3670, metadata !DIExpression()), !dbg !3671
  %5 = or i32 %4, 4194304, !dbg !3684
  call void @llvm.dbg.value(metadata i32 %5, metadata !3670, metadata !DIExpression()), !dbg !3671
  store volatile i32 %5, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3685
  tail call void @sfc_delay_ms(i32 noundef 1) #19, !dbg !3686
  %6 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3687
  call void @llvm.dbg.value(metadata i32 %6, metadata !3670, metadata !DIExpression()), !dbg !3671
  %7 = and i32 %6, -4194305, !dbg !3688
  call void @llvm.dbg.value(metadata i32 %7, metadata !3670, metadata !DIExpression()), !dbg !3671
  store volatile i32 %7, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3689
  tail call void @sfc_delay_ms(i32 noundef 1) #19, !dbg !3690
  %8 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3691
  call void @llvm.dbg.value(metadata i32 %8, metadata !3670, metadata !DIExpression()), !dbg !3671
  %9 = or i32 %8, 4194304, !dbg !3692
  call void @llvm.dbg.value(metadata i32 %9, metadata !3670, metadata !DIExpression()), !dbg !3671
  store volatile i32 %9, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3693
  tail call void @sfc_delay_ms(i32 noundef 1) #19, !dbg !3694
  %10 = icmp eq i32 %0, 0, !dbg !3695
  br i1 %10, label %12, label %11, !dbg !3697

11:                                               ; preds = %1
  store i32 1, i32* @g_sfc_security_enable, align 4, !dbg !3698
  store volatile i32 268435456, i32* inttoptr (i32 -2096660480 to i32*), align 32768, !dbg !3700
  store volatile i32 268435456, i32* inttoptr (i32 -2096660476 to i32*), align 4, !dbg !3701
  store volatile i32 3, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !3702
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !3703
  store volatile i32 135, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !3704
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !3705
  store volatile i32 69632, i32* inttoptr (i32 -2096660460 to i32*), align 4, !dbg !3706
  br label %12, !dbg !3707

12:                                               ; preds = %11, %1
  ret void, !dbg !3708
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GetDirectMode() local_unnamed_addr #9 section ".ramTEXT" !dbg !3709 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3713
  call void @llvm.dbg.value(metadata i32 %1, metadata !3711, metadata !DIExpression(DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !3714
  %2 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3715
  %3 = lshr i32 %2, 4, !dbg !3716
  %4 = and i32 %3, 7, !dbg !3716
  call void @llvm.dbg.value(metadata i32 %4, metadata !3712, metadata !DIExpression()), !dbg !3714
  %5 = icmp ne i32 %4, 7, !dbg !3717
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %5, i1 %7, i1 false, !dbg !3719
  call void @llvm.dbg.value(metadata i32 %6, metadata !3711, metadata !DIExpression()), !dbg !3714
  %9 = icmp ult i32 %4, 2, !dbg !3719
  %10 = zext i1 %9 to i32, !dbg !3719
  %11 = select i1 %8, i32 %10, i32 3, !dbg !3719
  ret i32 %11, !dbg !3720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_direct_read_setup(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 section ".ramTEXT" !dbg !3721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3725, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata i32 %1, metadata !3726, metadata !DIExpression()), !dbg !3728
  call void @llvm.dbg.value(metadata i32 0, metadata !3727, metadata !DIExpression()), !dbg !3728
  %3 = add i32 %1, -1, !dbg !3729
  %4 = icmp ult i32 %3, 3, !dbg !3729
  br i1 %4, label %5, label %8, !dbg !3729

5:                                                ; preds = %2
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.sfc_direct_read_setup, i32 0, i32 %3, !dbg !3729
  %7 = load i32, i32* %6, align 4, !dbg !3729
  br label %8, !dbg !3729

8:                                                ; preds = %5, %2
  %9 = phi i32 [ 0, %2 ], [ %7, %5 ], !dbg !3728
  call void @llvm.dbg.value(metadata i32 %9, metadata !3727, metadata !DIExpression()), !dbg !3728
  %10 = or i32 %9, %0, !dbg !3730
  call void @llvm.dbg.value(metadata i32 %10, metadata !3727, metadata !DIExpression()), !dbg !3728
  store volatile i32 %10, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3731
  ret void, !dbg !3732
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sfc_Command_List(i8* noundef readonly %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !3733 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3737, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i32 0, metadata !3738, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i32 0, metadata !3740, metadata !DIExpression()), !dbg !3741
  %2 = icmp eq i8* %0, null, !dbg !3742
  br i1 %2, label %25, label %3, !dbg !3744

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3745
  call void @llvm.dbg.value(metadata i32 %4, metadata !3739, metadata !DIExpression()), !dbg !3741
  br label %5, !dbg !3746

5:                                                ; preds = %12, %3
  %6 = phi i32 [ 0, %3 ], [ %23, %12 ], !dbg !3741
  %7 = phi i32 [ 0, %3 ], [ %13, %12 ], !dbg !3741
  call void @llvm.dbg.value(metadata i32 %7, metadata !3740, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i32 %6, metadata !3738, metadata !DIExpression()), !dbg !3741
  %8 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !3747
  %9 = load i8, i8* %8, align 1, !dbg !3747
  switch i8 %9, label %11 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %10
  ], !dbg !3749

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 1, metadata !3740, metadata !DIExpression()), !dbg !3741
  br label %12, !dbg !3750

11:                                               ; preds = %5
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3752
  br label %25, !dbg !3753

12:                                               ; preds = %5, %5, %10
  %13 = phi i32 [ 1, %10 ], [ %7, %5 ], [ %7, %5 ], !dbg !3741
  call void @llvm.dbg.value(metadata i32 %13, metadata !3740, metadata !DIExpression()), !dbg !3741
  %14 = add i32 %6, 2, !dbg !3754
  %15 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !3755
  %16 = add i32 %6, 1, !dbg !3756
  %17 = getelementptr inbounds i8, i8* %0, i32 %16, !dbg !3757
  %18 = load i8, i8* %17, align 1, !dbg !3757
  %19 = zext i8 %18 to i32, !dbg !3757
  %20 = tail call i32 @sfc_transfer(i8* noundef nonnull %15, i32 noundef %19, i8* noundef null, i32 noundef 0, i32 noundef %13) #19, !dbg !3758
  %21 = load i8, i8* %17, align 1, !dbg !3759
  %22 = zext i8 %21 to i32, !dbg !3759
  %23 = add i32 %14, %22, !dbg !3760
  call void @llvm.dbg.value(metadata i32 %23, metadata !3738, metadata !DIExpression()), !dbg !3741
  %24 = tail call i32 @flash_wait_ready(i32 noundef 1) #21, !dbg !3761
  br label %5, !dbg !3746, !llvm.loop !3762

25:                                               ; preds = %1, %11
  ret void, !dbg !3764
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_transfer(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #3 section ".ramTEXT" !dbg !3765 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3770, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %1, metadata !3771, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i8* %2, metadata !3772, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %3, metadata !3773, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %4, metadata !3774, metadata !DIExpression()), !dbg !3781
  %7 = bitcast i32* %6 to i8*, !dbg !3782
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #20, !dbg !3782
  %8 = add i32 %3, %1, !dbg !3783
  %9 = icmp ugt i32 %8, 160, !dbg !3785
  br i1 %9, label %59, label %10, !dbg !3786

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !3778, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 0, metadata !3776, metadata !DIExpression()), !dbg !3781
  %11 = icmp eq i32 %1, 0, !dbg !3787
  br i1 %11, label %41, label %12, !dbg !3790

12:                                               ; preds = %10, %38
  %13 = phi i8* [ %39, %38 ], [ inttoptr (i32 -2096691200 to i8*), %10 ]
  %14 = phi i32 [ %31, %38 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !3778, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %14, metadata !3776, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 0, metadata !3777, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 0, metadata !3775, metadata !DIExpression()), !dbg !3781
  store i32 0, i32* %6, align 4, !dbg !3791
  call void @llvm.dbg.value(metadata i32 0, metadata !3777, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %14, metadata !3776, metadata !DIExpression()), !dbg !3781
  %15 = icmp ult i32 %14, %1, !dbg !3794
  br i1 %15, label %16, label %29, !dbg !3796

16:                                               ; preds = %12, %16
  %17 = phi i32 [ %23, %16 ], [ 0, %12 ]
  %18 = phi i32 [ %22, %16 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !3777, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %18, metadata !3776, metadata !DIExpression()), !dbg !3781
  %19 = getelementptr inbounds i8, i8* %0, i32 %18, !dbg !3797
  %20 = load i8, i8* %19, align 1, !dbg !3797
  %21 = getelementptr inbounds i8, i8* %7, i32 %17, !dbg !3799
  store i8 %20, i8* %21, align 1, !dbg !3800
  %22 = add nuw i32 %18, 1, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %22, metadata !3776, metadata !DIExpression()), !dbg !3781
  %23 = add nuw nsw i32 %17, 1, !dbg !3802
  call void @llvm.dbg.value(metadata i32 %23, metadata !3777, metadata !DIExpression()), !dbg !3781
  %24 = icmp ult i32 %22, %1, !dbg !3794
  %25 = icmp ult i32 %17, 3, !dbg !3803
  %26 = select i1 %24, i1 %25, i1 false, !dbg !3803
  br i1 %26, label %16, label %27, !dbg !3796, !llvm.loop !3804

27:                                               ; preds = %16
  %28 = load i32, i32* %6, align 4, !dbg !3806
  br label %29, !dbg !3806

29:                                               ; preds = %27, %12
  %30 = phi i32 [ 0, %12 ], [ %28, %27 ], !dbg !3806
  %31 = phi i32 [ %14, %12 ], [ %22, %27 ], !dbg !3807
  call void @llvm.dbg.value(metadata i32 %30, metadata !3775, metadata !DIExpression()), !dbg !3781
  %32 = bitcast i8* %13 to i32*, !dbg !3806
  store volatile i32 %30, i32* %32, align 4, !dbg !3806
  %33 = icmp eq i32 %31, 4, !dbg !3808
  %34 = load i32, i32* @g_sfc_security_enable, align 4
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %33, i1 %35, i1 false, !dbg !3810
  br i1 %36, label %37, label %38, !dbg !3810

37:                                               ; preds = %29
  store volatile i32 64, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !3811
  store volatile i32 256, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !3813
  br label %38, !dbg !3814

38:                                               ; preds = %29, %37
  %39 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !3815
  call void @llvm.dbg.value(metadata i8* %39, metadata !3778, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %31, metadata !3776, metadata !DIExpression()), !dbg !3781
  %40 = icmp ult i32 %31, %1, !dbg !3787
  br i1 %40, label %12, label %41, !dbg !3790, !llvm.loop !3816

41:                                               ; preds = %38, %10
  %42 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %42, metadata !3780, metadata !DIExpression()), !dbg !3781
  %43 = load i32, i32* @g_sfc_security_enable, align 4, !dbg !3819
  %44 = icmp eq i32 %43, 0, !dbg !3819
  br i1 %44, label %46, label %45, !dbg !3821

45:                                               ; preds = %41
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !3822
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !3824
  br label %46, !dbg !3825

46:                                               ; preds = %45, %41
  store volatile i32 %1, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !3826
  store volatile i32 %3, i32* inttoptr (i32 -2096693228 to i32*), align 4, !dbg !3827
  tail call fastcc void @sfc_MacEnable(i32 noundef %4) #19, !dbg !3828
  tail call fastcc void @sfc_MacWaitReady() #19, !dbg !3829
  tail call void @restore_interrupt_mask(i32 noundef %42) #21, !dbg !3830
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -2096691200 to i8*), i32 %1), metadata !3778, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3781
  call void @llvm.dbg.value(metadata i8* %2, metadata !3772, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 0, metadata !3776, metadata !DIExpression()), !dbg !3781
  %47 = icmp eq i32 %3, 0, !dbg !3831
  br i1 %47, label %59, label %48, !dbg !3834

48:                                               ; preds = %46
  %49 = getelementptr inbounds i8, i8* inttoptr (i32 -2096691200 to i8*), i32 %1, !dbg !3835
  call void @llvm.dbg.value(metadata i8* %49, metadata !3778, metadata !DIExpression()), !dbg !3781
  br label %50, !dbg !3834

50:                                               ; preds = %48, %50
  %51 = phi i8* [ %56, %50 ], [ %2, %48 ]
  %52 = phi i8* [ %57, %50 ], [ %49, %48 ]
  %53 = phi i32 [ %55, %50 ], [ 0, %48 ]
  call void @llvm.dbg.value(metadata i8* %51, metadata !3772, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i8* %52, metadata !3778, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %53, metadata !3776, metadata !DIExpression()), !dbg !3781
  %54 = load volatile i8, i8* %52, align 1, !dbg !3836
  store i8 %54, i8* %51, align 1, !dbg !3838
  %55 = add nuw i32 %53, 1, !dbg !3839
  call void @llvm.dbg.value(metadata i32 %55, metadata !3776, metadata !DIExpression()), !dbg !3781
  %56 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !3840
  call void @llvm.dbg.value(metadata i8* %56, metadata !3772, metadata !DIExpression()), !dbg !3781
  %57 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !3841
  call void @llvm.dbg.value(metadata i8* %57, metadata !3778, metadata !DIExpression()), !dbg !3781
  %58 = icmp eq i32 %55, %3, !dbg !3831
  br i1 %58, label %59, label %50, !dbg !3834, !llvm.loop !3842

59:                                               ; preds = %50, %46, %5
  %60 = phi i32 [ -1, %5 ], [ 0, %46 ], [ %3, %50 ], !dbg !3781
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #20, !dbg !3844
  ret i32 %60, !dbg !3844
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacEnable(i32 noundef %0) unnamed_addr #1 section ".ramTEXT" !dbg !3845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3847, metadata !DIExpression()), !dbg !3849
  %2 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3850
  call void @llvm.dbg.value(metadata i32 %2, metadata !3848, metadata !DIExpression()), !dbg !3849
  %3 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3851
  %4 = and i32 %3, 1, !dbg !3851
  %5 = or i32 %4, %0, !dbg !3853
  %6 = icmp eq i32 %5, 0, !dbg !3853
  %7 = or i32 %2, 16
  %8 = select i1 %6, i32 %2, i32 %7, !dbg !3853
  call void @llvm.dbg.value(metadata i32 %8, metadata !3848, metadata !DIExpression()), !dbg !3849
  %9 = or i32 %8, 8, !dbg !3854
  call void @llvm.dbg.value(metadata i32 %9, metadata !3848, metadata !DIExpression()), !dbg !3849
  store volatile i32 %9, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3855
  ret void, !dbg !3856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacWaitReady() unnamed_addr #1 section ".ramTEXT" !dbg !3857 {
  tail call fastcc void @sfc_MacTrigger() #19, !dbg !3858
  tail call fastcc void @sfc_MacLeave() #19, !dbg !3859
  ret void, !dbg !3860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacTrigger() unnamed_addr #1 section ".ramTEXT" !dbg !3861 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3865, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 0, metadata !3866, metadata !DIExpression()), !dbg !3867
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3868
  call void @llvm.dbg.value(metadata i32 %1, metadata !3865, metadata !DIExpression()), !dbg !3867
  %2 = or i32 %1, 12, !dbg !3869
  call void @llvm.dbg.value(metadata i32 %2, metadata !3865, metadata !DIExpression()), !dbg !3867
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3870
  br label %3, !dbg !3871

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3872
  %5 = and i32 %4, 2, !dbg !3873
  %6 = icmp eq i32 %5, 0, !dbg !3874
  br i1 %6, label %3, label %7, !dbg !3871, !llvm.loop !3875

7:                                                ; preds = %3, %7
  %8 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3877
  %9 = and i32 %8, 1, !dbg !3878
  %10 = icmp eq i32 %9, 0, !dbg !3879
  br i1 %10, label %11, label %7, !dbg !3879, !llvm.loop !3880

11:                                               ; preds = %7
  ret void, !dbg !3882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacLeave() unnamed_addr #1 section ".ramTEXT" !dbg !3883 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3886
  call void @llvm.dbg.value(metadata i32 %1, metadata !3885, metadata !DIExpression()), !dbg !3887
  %2 = and i32 %1, -268435477, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %2, metadata !3885, metadata !DIExpression()), !dbg !3887
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3889
  %3 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3890
  call void @llvm.dbg.value(metadata i32 %3, metadata !3885, metadata !DIExpression()), !dbg !3887
  %4 = and i32 %3, -9, !dbg !3891
  call void @llvm.dbg.value(metadata i32 %4, metadata !3885, metadata !DIExpression()), !dbg !3887
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3892
  ret void, !dbg !3893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_clear_gpram() local_unnamed_addr #1 section ".ramTEXT" !dbg !3894 {
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !3897, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata i32 0, metadata !3896, metadata !DIExpression()), !dbg !3898
  br label %1, !dbg !3899

1:                                                ; preds = %0, %1
  %2 = phi i8* [ inttoptr (i32 -2096691200 to i8*), %0 ], [ %5, %1 ]
  %3 = phi i32 [ 0, %0 ], [ %6, %1 ]
  call void @llvm.dbg.value(metadata i8* %2, metadata !3897, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata i32 %3, metadata !3896, metadata !DIExpression()), !dbg !3898
  %4 = bitcast i8* %2 to i32*, !dbg !3901
  store volatile i32 0, i32* %4, align 4, !dbg !3901
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3904
  call void @llvm.dbg.value(metadata i8* %5, metadata !3897, metadata !DIExpression()), !dbg !3898
  %6 = add nuw nsw i32 %3, 1, !dbg !3905
  call void @llvm.dbg.value(metadata i32 %6, metadata !3896, metadata !DIExpression()), !dbg !3898
  %7 = icmp eq i32 %6, 40, !dbg !3906
  br i1 %7, label %8, label %1, !dbg !3899, !llvm.loop !3907

8:                                                ; preds = %1
  ret void, !dbg !3909
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_read(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3) local_unnamed_addr #3 section ".ramTEXT" !dbg !3910 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3914, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i32 %1, metadata !3915, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i8* %2, metadata !3916, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i32 %3, metadata !3917, metadata !DIExpression()), !dbg !3918
  %5 = tail call i32 @sfc_transfer(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef 0) #19, !dbg !3919
  ret i32 %5, !dbg !3920
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #3 section ".ramTEXT" !dbg !3921 {
  %5 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3925, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i32 %1, metadata !3926, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i8* %2, metadata !3927, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i32 %3, metadata !3928, metadata !DIExpression()), !dbg !3934
  %6 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 0, !dbg !3935
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #20, !dbg !3935
  call void @llvm.dbg.declare(metadata [160 x i8]* %5, metadata !3929, metadata !DIExpression()), !dbg !3936
  %7 = add i32 %3, %1, !dbg !3937
  call void @llvm.dbg.value(metadata i32 %7, metadata !3933, metadata !DIExpression()), !dbg !3934
  %8 = icmp ugt i32 %7, 159, !dbg !3938
  br i1 %8, label %9, label %12, !dbg !3940

9:                                                ; preds = %4
  %10 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.14, i32 0, i32 0), i32 noundef 496) #21, !dbg !3941
  br label %11, !dbg !3941

11:                                               ; preds = %11, %9
  br label %11, !dbg !3941, !llvm.loop !3945

12:                                               ; preds = %4
  %13 = call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %0, i32 noundef %1) #21, !dbg !3946
  %14 = icmp ne i8* %2, null, !dbg !3947
  %15 = icmp ne i32 %3, 0
  %16 = and i1 %14, %15, !dbg !3949
  br i1 %16, label %17, label %20, !dbg !3949

17:                                               ; preds = %12
  %18 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 %1, !dbg !3950
  %19 = call i8* @memcpy(i8* noundef nonnull %18, i8* noundef nonnull %2, i32 noundef %3) #21, !dbg !3952
  br label %20, !dbg !3953

20:                                               ; preds = %17, %12
  %21 = call i32 @sfc_transfer(i8* noundef nonnull %6, i32 noundef %7, i8* noundef null, i32 noundef 0, i32 noundef 0) #19, !dbg !3954
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #20, !dbg !3955
  ret i32 %21, !dbg !3956
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_security_write_crc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #3 section ".ramTEXT" !dbg !3957 {
  %3 = alloca [160 x i8], align 1
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3961, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %1, metadata !3962, metadata !DIExpression()), !dbg !3966
  %5 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 0, !dbg !3967
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #20, !dbg !3967
  call void @llvm.dbg.declare(metadata [160 x i8]* %3, metadata !3963, metadata !DIExpression()), !dbg !3968
  %6 = bitcast i32* %4 to i8*, !dbg !3969
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #20, !dbg !3969
  %7 = load volatile i32, i32* inttoptr (i32 -2096660420 to i32*), align 4, !dbg !3970
  call void @llvm.dbg.value(metadata i32 %7, metadata !3964, metadata !DIExpression()), !dbg !3966
  store i32 %7, i32* %4, align 4, !dbg !3971
  %8 = add i32 %1, 4, !dbg !3972
  call void @llvm.dbg.value(metadata i32 %8, metadata !3965, metadata !DIExpression()), !dbg !3966
  %9 = call i8* @memcpy(i8* noundef nonnull %5, i8* noundef %0, i32 noundef %1) #21, !dbg !3973
  %10 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 %1, !dbg !3974
  call void @llvm.dbg.value(metadata i32* %4, metadata !3964, metadata !DIExpression(DW_OP_deref)), !dbg !3966
  %11 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef nonnull %6, i32 noundef 4) #21, !dbg !3975
  %12 = call i32 @sfc_transfer(i8* noundef nonnull %5, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #19, !dbg !3976
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #20, !dbg !3977
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #20, !dbg !3977
  ret i32 %12, !dbg !3978
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #3 section ".ramTEXT" !dbg !3979 {
  %6 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3981, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %1, metadata !3982, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i8* %2, metadata !3983, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %3, metadata !3984, metadata !DIExpression()), !dbg !3988
  call void @llvm.dbg.value(metadata i32 %4, metadata !3985, metadata !DIExpression()), !dbg !3988
  %7 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 0, !dbg !3989
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #20, !dbg !3989
  call void @llvm.dbg.declare(metadata [160 x i8]* %6, metadata !3986, metadata !DIExpression()), !dbg !3990
  %8 = add i32 %3, %1, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %8, metadata !3987, metadata !DIExpression()), !dbg !3988
  %9 = icmp ugt i32 %8, 160, !dbg !3992
  br i1 %9, label %10, label %13, !dbg !3994

10:                                               ; preds = %5
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.14, i32 0, i32 0), i32 noundef 544) #21, !dbg !3995
  br label %12, !dbg !3995

12:                                               ; preds = %12, %10
  br label %12, !dbg !3995, !llvm.loop !3999

13:                                               ; preds = %5
  %14 = call i8* @memcpy(i8* noundef nonnull %7, i8* noundef %0, i32 noundef %1) #21, !dbg !4000
  %15 = icmp ne i8* %2, null, !dbg !4001
  %16 = icmp ne i32 %3, 0
  %17 = and i1 %15, %16, !dbg !4003
  br i1 %17, label %18, label %21, !dbg !4003

18:                                               ; preds = %13
  %19 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 %1, !dbg !4004
  %20 = call i8* @memcpy(i8* noundef nonnull %19, i8* noundef nonnull %2, i32 noundef %3) #21, !dbg !4006
  br label %21, !dbg !4007

21:                                               ; preds = %18, %13
  %22 = call i32 @sfc_transfer(i8* noundef nonnull %7, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #19, !dbg !4008
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #20, !dbg !4009
  ret i32 %22, !dbg !4010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_suspend_Winbond() local_unnamed_addr #3 section ".ramTEXT" !dbg !4011 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_suspend_winbond, i32 0, i32 0)) #21, !dbg !4012
  ret void, !dbg !4013
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_resume_Winbond() local_unnamed_addr #3 section ".ramTEXT" !dbg !4014 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_resume_winbond, i32 0, i32 0)) #21, !dbg !4015
  ret void, !dbg !4016
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_check_device() local_unnamed_addr #3 section ".ramTEXT" !dbg !4017 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !4024
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #20, !dbg !4024
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !4021, metadata !DIExpression()), !dbg !4025
  %3 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #19, !dbg !4026
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !4027
  %5 = load i8, i8* %4, align 1, !dbg !4027
  %6 = zext i8 %5 to i32, !dbg !4028
  %7 = shl nuw i32 %6, 24, !dbg !4029
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !4030
  %9 = load i8, i8* %8, align 1, !dbg !4030
  %10 = zext i8 %9 to i32, !dbg !4031
  %11 = shl nuw nsw i32 %10, 16, !dbg !4032
  %12 = or i32 %11, %7, !dbg !4033
  call void @llvm.dbg.value(metadata i32 %12, metadata !4020, metadata !DIExpression()), !dbg !4034
  %13 = call i32 @sfc_GetDirectMode() #21, !dbg !4035
  store i32 %13, i32* @gucFlashSFCMode, align 4, !dbg !4036
  call void @llvm.dbg.value(metadata i32 1, metadata !4019, metadata !DIExpression()), !dbg !4034
  %14 = load i8, i8* %2, align 1
  call void @llvm.dbg.value(metadata i32 1, metadata !4019, metadata !DIExpression()), !dbg !4034
  br label %15, !dbg !4037

15:                                               ; preds = %0, %44
  %16 = phi i32 [ 1, %0 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4019, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.value(metadata !DIArgList([13 x %struct.flash_info_t]* @chips_data, i32 %16), metadata !4023, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 24, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4034
  %17 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 1, !dbg !4039
  %18 = load i8, i8* %17, align 4, !dbg !4039
  %19 = icmp eq i8 %18, %14, !dbg !4043
  br i1 %19, label %20, label %44, !dbg !4044

20:                                               ; preds = %15
  %21 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 2, !dbg !4045
  %22 = load i32, i32* %21, align 4, !dbg !4045
  %23 = icmp eq i32 %22, %12, !dbg !4046
  br i1 %23, label %24, label %44, !dbg !4047

24:                                               ; preds = %20
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, !dbg !4048
  store %struct.flash_info_t* %25, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4049
  %26 = add nsw i32 %16, -4, !dbg !4051
  %27 = icmp ult i32 %26, 5, !dbg !4051
  br i1 %27, label %42, label %28, !dbg !4053

28:                                               ; preds = %24
  %29 = add nsw i32 %16, -1, !dbg !4054
  %30 = icmp ult i32 %29, 3, !dbg !4054
  br i1 %30, label %42, label %31, !dbg !4056

31:                                               ; preds = %28
  %32 = add nsw i32 %16, -9, !dbg !4057
  %33 = icmp ult i32 %32, 3, !dbg !4057
  br i1 %33, label %34, label %40, !dbg !4059

34:                                               ; preds = %31
  %35 = and i32 %16, 2147483639, !dbg !4060
  %36 = icmp eq i32 %35, 1, !dbg !4060
  %37 = icmp eq i32 %16, 11
  %38 = or i1 %37, %36, !dbg !4063
  %39 = select i1 %38, i32 49, i32 1, !dbg !4063
  store i32 %39, i32* @gd_write_sr2_1, align 4, !dbg !4064
  br label %42, !dbg !4065

40:                                               ; preds = %31
  %41 = icmp eq i32 %16, 12, !dbg !4066
  br i1 %41, label %42, label %67, !dbg !4068

42:                                               ; preds = %40, %28, %24, %34
  %43 = phi i32 [ 200, %34 ], [ 194, %24 ], [ 239, %28 ], [ 32, %40 ]
  store i32 %43, i32* @support_flash_id, align 4, !dbg !4069
  br label %67, !dbg !4070

44:                                               ; preds = %15, %20
  %45 = add nuw nsw i32 %16, 1, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %45, metadata !4019, metadata !DIExpression()), !dbg !4034
  %46 = icmp eq i32 %45, 13, !dbg !4072
  br i1 %46, label %47, label %15, !dbg !4037, !llvm.loop !4073

47:                                               ; preds = %44
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4075
  %48 = load i32, i32* @support_flash_id, align 4, !dbg !4076
  %49 = icmp eq i32 %48, 255, !dbg !4078
  br i1 %49, label %50, label %67, !dbg !4079

50:                                               ; preds = %47
  %51 = call %struct.flash_info_t* @customer_flash_register() #21, !dbg !4080
  store %struct.flash_info_t* %51, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4082
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !4023, metadata !DIExpression()), !dbg !4034
  %52 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 1, !dbg !4083
  %53 = load i8, i8* %52, align 4, !dbg !4083
  %54 = load i8, i8* %2, align 1, !dbg !4085
  %55 = icmp eq i8 %53, %54, !dbg !4086
  br i1 %55, label %56, label %60, !dbg !4087

56:                                               ; preds = %50
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !4023, metadata !DIExpression()), !dbg !4034
  %57 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 2, !dbg !4088
  %58 = load i32, i32* %57, align 4, !dbg !4088
  %59 = icmp eq i32 %58, %12, !dbg !4089
  br i1 %59, label %67, label %60, !dbg !4090

60:                                               ; preds = %56, %50
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 322, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i32 0, i32 0)) #21, !dbg !4091
  %61 = load i8, i8* %2, align 1, !dbg !4093
  %62 = zext i8 %61 to i32, !dbg !4093
  %63 = load i8, i8* %4, align 1, !dbg !4093
  %64 = zext i8 %63 to i32, !dbg !4093
  %65 = load i8, i8* %8, align 1, !dbg !4093
  %66 = zext i8 %65 to i32, !dbg !4093
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 323, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.26, i32 0, i32 0), i32 noundef %62, i32 noundef %64, i32 noundef %66, i32 noundef %12) #21, !dbg !4093
  br label %67, !dbg !4094

67:                                               ; preds = %47, %60, %56, %40, %42
  %68 = phi i32 [ 0, %42 ], [ 0, %40 ], [ 0, %56 ], [ -1, %60 ], [ -1, %47 ]
  %69 = phi i32 [ 1, %42 ], [ 1, %40 ], [ 1, %56 ], [ 0, %60 ], [ 0, %47 ], !dbg !4034
  store i32 %68, i32* @sf_drvier_status, align 4, !dbg !4034
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #20, !dbg !4095
  ret i32 %69, !dbg !4095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_jedec_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #3 section ".ramTEXT" !dbg !4096 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4100, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.value(metadata i32 %1, metadata !4101, metadata !DIExpression()), !dbg !4104
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #20, !dbg !4105
  call void @llvm.dbg.value(metadata i8 -97, metadata !4102, metadata !DIExpression()), !dbg !4104
  store i8 -97, i8* %3, align 1, !dbg !4106
  call void @llvm.dbg.value(metadata i8* %3, metadata !4102, metadata !DIExpression(DW_OP_deref)), !dbg !4104
  %4 = call i32 @sfc_read(i8* noundef nonnull %3, i32 noundef 1, i8* noundef %0, i32 noundef %1) #21, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %4, metadata !4103, metadata !DIExpression()), !dbg !4104
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #20, !dbg !4108
  ret i32 %4, !dbg !4109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_switch_mode(i32 noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !4110 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4114, metadata !DIExpression()), !dbg !4115
  %2 = tail call %struct.flash_info_t* @customer_flash_register() #21, !dbg !4116
  %3 = icmp eq %struct.flash_info_t* %2, null, !dbg !4118
  br i1 %3, label %5, label %4, !dbg !4119

4:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !4120
  br label %5, !dbg !4122

5:                                                ; preds = %4, %1
  %6 = tail call i32 @flash_check_device() #19, !dbg !4123
  tail call fastcc void @flash_Switch_Device_Mode(i32 noundef %0) #19, !dbg !4124
  switch i32 %0, label %14 [
    i32 1, label %7
    i32 2, label %8
    i32 3, label %13
  ], !dbg !4125

7:                                                ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 185298944, i32 noundef 1) #21, !dbg !4126
  br label %17, !dbg !4129

8:                                                ; preds = %5
  %9 = load i32, i32* @support_flash_id, align 4, !dbg !4130
  %10 = icmp eq i32 %9, 32, !dbg !4134
  br i1 %10, label %11, label %12, !dbg !4135

11:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335572992, i32 noundef 2) #21, !dbg !4136
  br label %17, !dbg !4138

12:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335589376, i32 noundef 2) #21, !dbg !4139
  br label %17

13:                                               ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 201265152, i32 noundef 3) #21, !dbg !4141
  br label %17

14:                                               ; preds = %5
  %15 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 352) #21, !dbg !4144
  br label %16, !dbg !4144

16:                                               ; preds = %14, %16
  br label %16, !dbg !4144, !llvm.loop !4148

17:                                               ; preds = %13, %12, %11, %7
  store i32 %0, i32* @gucFlashSFCMode, align 4, !dbg !4149
  ret void, !dbg !4150
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_Switch_Device_Mode(i32 noundef %0) unnamed_addr #3 section ".ramTEXT" !dbg !4151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4153, metadata !DIExpression()), !dbg !4155
  switch i32 %0, label %29 [
    i32 1, label %2
    i32 2, label %11
    i32 3, label %20
  ], !dbg !4156

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), metadata !4154, metadata !DIExpression()), !dbg !4155
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !4157
  switch i32 %3, label %32 [
    i32 194, label %35
    i32 200, label %4
    i32 32, label %8
    i32 255, label %9
  ], !dbg !4160

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), metadata !4154, metadata !DIExpression()), !dbg !4155
  %5 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !4161
  %6 = icmp eq i32 %5, 49, !dbg !4165
  %7 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), !dbg !4166
  call void @llvm.dbg.value(metadata i8* %7, metadata !4154, metadata !DIExpression()), !dbg !4155
  br label %35, !dbg !4167

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), metadata !4154, metadata !DIExpression()), !dbg !4155
  br label %35, !dbg !4168

9:                                                ; preds = %2
  %10 = tail call i8* @customer_switch_spi_mode_command() #21, !dbg !4171
  call void @llvm.dbg.value(metadata i8* %10, metadata !4154, metadata !DIExpression()), !dbg !4155
  br label %35, !dbg !4174

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), metadata !4154, metadata !DIExpression()), !dbg !4155
  %12 = load i32, i32* @support_flash_id, align 4, !dbg !4175
  switch i32 %12, label %33 [
    i32 194, label %35
    i32 200, label %13
    i32 32, label %17
    i32 255, label %18
  ], !dbg !4177

13:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !4154, metadata !DIExpression()), !dbg !4155
  %14 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !4178
  %15 = icmp eq i32 %14, 49, !dbg !4182
  %16 = select i1 %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !4183
  call void @llvm.dbg.value(metadata i8* %16, metadata !4154, metadata !DIExpression()), !dbg !4155
  br label %35, !dbg !4184

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !4154, metadata !DIExpression()), !dbg !4155
  br label %35, !dbg !4185

18:                                               ; preds = %11
  %19 = tail call i8* @customer_switch_spiq_mode_command() #21, !dbg !4188
  call void @llvm.dbg.value(metadata i8* %19, metadata !4154, metadata !DIExpression()), !dbg !4155
  br label %35, !dbg !4191

20:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), metadata !4154, metadata !DIExpression()), !dbg !4155
  %21 = load i32, i32* @support_flash_id, align 4, !dbg !4192
  switch i32 %21, label %34 [
    i32 194, label %35
    i32 200, label %22
    i32 32, label %26
    i32 255, label %27
  ], !dbg !4194

22:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !4154, metadata !DIExpression()), !dbg !4155
  %23 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !4195
  %24 = icmp eq i32 %23, 49, !dbg !4199
  %25 = select i1 %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchqpi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !4200
  call void @llvm.dbg.value(metadata i8* %25, metadata !4154, metadata !DIExpression()), !dbg !4155
  br label %35, !dbg !4201

26:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !4154, metadata !DIExpression()), !dbg !4155
  br label %35, !dbg !4202

27:                                               ; preds = %20
  %28 = tail call i8* @customer_switch_spiq_mode_command() #21, !dbg !4205
  call void @llvm.dbg.value(metadata i8* %28, metadata !4154, metadata !DIExpression()), !dbg !4155
  br label %35, !dbg !4208

29:                                               ; preds = %1
  %30 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 268) #21, !dbg !4209
  br label %31, !dbg !4209

31:                                               ; preds = %31, %29
  br label %31, !dbg !4209, !llvm.loop !4212

32:                                               ; preds = %2
  br label %35, !dbg !4213

33:                                               ; preds = %11
  br label %35, !dbg !4213

34:                                               ; preds = %20
  br label %35, !dbg !4213

35:                                               ; preds = %20, %34, %11, %33, %2, %32, %26, %27, %22, %17, %18, %13, %8, %9, %4
  %36 = phi i8* [ %25, %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %26 ], [ %28, %27 ], [ %16, %13 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %17 ], [ %19, %18 ], [ %7, %4 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), %8 ], [ %10, %9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_mxic, i32 0, i32 0), %2 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), %32 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %11 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), %33 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %20 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), %34 ], !dbg !4214
  call void @llvm.dbg.value(metadata i8* %36, metadata !4154, metadata !DIExpression()), !dbg !4155
  tail call void @sfc_Command_List(i8* noundef %36) #21, !dbg !4213
  ret void, !dbg !4215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_config() local_unnamed_addr #3 section ".ramTEXT" !dbg !4216 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !4222
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #20, !dbg !4222
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !4220, metadata !DIExpression()), !dbg !4223
  %3 = tail call i32 @sfc_getMaxGPRamSize() #21, !dbg !4224
  store i32 %3, i32* @gSFC_max_data_size, align 4, !dbg !4225
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4226
  %4 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #19, !dbg !4227
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !4228
  %6 = load i8, i8* %5, align 1, !dbg !4228
  %7 = zext i8 %6 to i32, !dbg !4229
  %8 = shl nuw i32 %7, 24, !dbg !4230
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !4231
  %10 = load i8, i8* %9, align 1, !dbg !4231
  %11 = zext i8 %10 to i32, !dbg !4232
  %12 = shl nuw nsw i32 %11, 16, !dbg !4233
  %13 = or i32 %12, %8, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %13, metadata !4219, metadata !DIExpression()), !dbg !4235
  %14 = load i8, i8* %2, align 1, !dbg !4236
  %15 = zext i8 %14 to i32, !dbg !4236
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 385, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.30, i32 0, i32 0), i32 noundef %15, i32 noundef %7, i32 noundef %11, i32 noundef %13) #21, !dbg !4236
  call void @llvm.dbg.value(metadata i32 1, metadata !4218, metadata !DIExpression()), !dbg !4235
  br label %16, !dbg !4237

16:                                               ; preds = %0, %43
  %17 = phi i32 [ 1, %0 ], [ %44, %43 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !4218, metadata !DIExpression()), !dbg !4235
  %18 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, !dbg !4239
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %18, metadata !4221, metadata !DIExpression()), !dbg !4235
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 1, !dbg !4242
  %20 = load i8, i8* %19, align 4, !dbg !4242
  %21 = load i8, i8* %2, align 1, !dbg !4244
  %22 = icmp eq i8 %20, %21, !dbg !4245
  br i1 %22, label %23, label %43, !dbg !4246

23:                                               ; preds = %16
  %24 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 2, !dbg !4247
  %25 = load i32, i32* %24, align 4, !dbg !4247
  %26 = icmp eq i32 %25, %13, !dbg !4248
  br i1 %26, label %27, label %43, !dbg !4249

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %18, i32 0, i32 0, !dbg !4250
  %29 = load i8*, i8** %28, align 4, !dbg !4250
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 390, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %29) #21, !dbg !4250
  store %struct.flash_info_t* %18, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4252
  %30 = add nsw i32 %17, -4, !dbg !4253
  %31 = icmp ult i32 %30, 5, !dbg !4253
  br i1 %31, label %41, label %32, !dbg !4255

32:                                               ; preds = %27
  %33 = add nsw i32 %17, -1, !dbg !4256
  %34 = icmp ult i32 %33, 3, !dbg !4256
  br i1 %34, label %41, label %35, !dbg !4258

35:                                               ; preds = %32
  %36 = add nsw i32 %17, -9, !dbg !4259
  %37 = icmp ult i32 %36, 3, !dbg !4259
  br i1 %37, label %41, label %38, !dbg !4261

38:                                               ; preds = %35
  %39 = icmp eq i32 %17, 12, !dbg !4262
  br i1 %39, label %40, label %43, !dbg !4264

40:                                               ; preds = %38
  store i32 32, i32* @support_flash_id, align 4, !dbg !4265
  call void @llvm.dbg.value(metadata i32 %44, metadata !4218, metadata !DIExpression()), !dbg !4235
  br label %66, !dbg !4267

41:                                               ; preds = %35, %32, %27
  %42 = phi i32 [ 194, %27 ], [ 239, %32 ], [ 200, %35 ]
  store i32 %42, i32* @support_flash_id, align 4, !dbg !4268
  br label %43, !dbg !4269

43:                                               ; preds = %41, %16, %23, %38
  %44 = add nuw nsw i32 %17, 1, !dbg !4269
  call void @llvm.dbg.value(metadata i32 %44, metadata !4218, metadata !DIExpression()), !dbg !4235
  %45 = icmp eq i32 %44, 13, !dbg !4270
  br i1 %45, label %46, label %16, !dbg !4237, !llvm.loop !4271

46:                                               ; preds = %43
  %47 = load i32, i32* @support_flash_id, align 4, !dbg !4273
  %48 = icmp eq i32 %47, 255, !dbg !4275
  br i1 %48, label %49, label %66, !dbg !4267

49:                                               ; preds = %46
  %50 = call %struct.flash_info_t* @customer_flash_register() #21, !dbg !4276
  store %struct.flash_info_t* %50, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4278
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !4221, metadata !DIExpression()), !dbg !4235
  %51 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 1, !dbg !4279
  %52 = load i8, i8* %51, align 4, !dbg !4279
  %53 = load i8, i8* %2, align 1, !dbg !4281
  %54 = icmp eq i8 %52, %53, !dbg !4282
  br i1 %54, label %55, label %59, !dbg !4283

55:                                               ; preds = %49
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !4221, metadata !DIExpression()), !dbg !4235
  %56 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 2, !dbg !4284
  %57 = load i32, i32* %56, align 4, !dbg !4284
  %58 = icmp eq i32 %57, %13, !dbg !4285
  br i1 %58, label %71, label %59, !dbg !4286

59:                                               ; preds = %55, %49
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 411, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i32 0, i32 0)) #21, !dbg !4287
  %60 = load i8, i8* %2, align 1, !dbg !4289
  %61 = zext i8 %60 to i32, !dbg !4289
  %62 = load i8, i8* %5, align 1, !dbg !4289
  %63 = zext i8 %62 to i32, !dbg !4289
  %64 = load i8, i8* %9, align 1, !dbg !4289
  %65 = zext i8 %64 to i32, !dbg !4289
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 412, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.26, i32 0, i32 0), i32 noundef %61, i32 noundef %63, i32 noundef %65, i32 noundef %13) #21, !dbg !4289
  br label %66, !dbg !4290

66:                                               ; preds = %40, %59, %46
  %67 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4291
  %68 = icmp eq %struct.flash_info_t* %67, null, !dbg !4291
  br i1 %68, label %69, label %71, !dbg !4293

69:                                               ; preds = %66
  %70 = inttoptr i32 %13 to i8*, !dbg !4294
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 417, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %70) #21, !dbg !4294
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4296
  br label %71, !dbg !4297

71:                                               ; preds = %66, %69, %55
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4235
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #20, !dbg !4298
  ret void, !dbg !4298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_init(i32 noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !4299 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4301, metadata !DIExpression()), !dbg !4306
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !4307
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #20, !dbg !4307
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !4304, metadata !DIExpression()), !dbg !4308
  tail call void @sfc_Init(i32 noundef %0) #21, !dbg !4309
  %4 = tail call i32 @sfc_getMaxGPRamSize() #21, !dbg !4310
  store i32 %4, i32* @gSFC_max_data_size, align 4, !dbg !4311
  tail call fastcc void @flash_reset() #19, !dbg !4312
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4313
  %5 = call i32 @flash_read_jedec_id(i8* noundef nonnull %3, i32 noundef 3) #19, !dbg !4314
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4315
  %7 = load i8, i8* %6, align 1, !dbg !4315
  %8 = zext i8 %7 to i32, !dbg !4316
  %9 = shl nuw i32 %8, 24, !dbg !4317
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4318
  %11 = load i8, i8* %10, align 1, !dbg !4318
  %12 = zext i8 %11 to i32, !dbg !4319
  %13 = shl nuw nsw i32 %12, 16, !dbg !4320
  %14 = or i32 %13, %9, !dbg !4321
  call void @llvm.dbg.value(metadata i32 %14, metadata !4303, metadata !DIExpression()), !dbg !4306
  %15 = load i8, i8* %3, align 1, !dbg !4322
  %16 = zext i8 %15 to i32, !dbg !4322
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 447, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.30, i32 0, i32 0), i32 noundef %16, i32 noundef %8, i32 noundef %12, i32 noundef %14) #21, !dbg !4322
  call void @llvm.dbg.value(metadata i32 1, metadata !4302, metadata !DIExpression()), !dbg !4306
  br label %17, !dbg !4323

17:                                               ; preds = %1, %31
  %18 = phi i32 [ 1, %1 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !4302, metadata !DIExpression()), !dbg !4306
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, !dbg !4325
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %19, metadata !4305, metadata !DIExpression()), !dbg !4306
  %20 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 1, !dbg !4328
  %21 = load i8, i8* %20, align 4, !dbg !4328
  %22 = load i8, i8* %3, align 1, !dbg !4330
  %23 = icmp eq i8 %21, %22, !dbg !4331
  br i1 %23, label %24, label %31, !dbg !4332

24:                                               ; preds = %17
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 2, !dbg !4333
  %26 = load i32, i32* %25, align 4, !dbg !4333
  %27 = icmp eq i32 %26, %14, !dbg !4334
  br i1 %27, label %28, label %31, !dbg !4335

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %19, i32 0, i32 0, !dbg !4336
  %30 = load i8*, i8** %29, align 4, !dbg !4336
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 452, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %30) #21, !dbg !4336
  store %struct.flash_info_t* %19, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4338
  br label %31, !dbg !4339

31:                                               ; preds = %17, %24, %28
  %32 = add nuw nsw i32 %18, 1, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %32, metadata !4302, metadata !DIExpression()), !dbg !4306
  %33 = icmp eq i32 %32, 13, !dbg !4341
  br i1 %33, label %34, label %17, !dbg !4323, !llvm.loop !4342

34:                                               ; preds = %31
  %35 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4344
  %36 = icmp eq %struct.flash_info_t* %35, null, !dbg !4344
  br i1 %36, label %37, label %39, !dbg !4346

37:                                               ; preds = %34
  %38 = inttoptr i32 %14 to i8*, !dbg !4347
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %38) #21, !dbg !4347
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4349
  br label %39, !dbg !4350

39:                                               ; preds = %37, %34
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #20, !dbg !4351
  ret void, !dbg !4351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_reset() unnamed_addr #3 section ".ramTEXT" !dbg !4352 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_qpimode, i32 0, i32 0)) #21, !dbg !4353
  tail call void @sfc_delay_ms(i32 noundef 1) #21, !dbg !4354
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_spimode, i32 0, i32 0)) #21, !dbg !4355
  tail call void @sfc_delay_ms(i32 noundef 1) #21, !dbg !4356
  ret void, !dbg !4357
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_wait_ready(i32 noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !4358 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4360, metadata !DIExpression()), !dbg !4363
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #20, !dbg !4364
  call void @llvm.dbg.value(metadata i8 0, metadata !4362, metadata !DIExpression()), !dbg !4363
  store i8 0, i8* %2, align 1, !dbg !4365
  call void @llvm.dbg.value(metadata i32 0, metadata !4361, metadata !DIExpression()), !dbg !4363
  %3 = mul i32 %0, 1000
  %4 = add i32 %3, 1000
  call void @llvm.dbg.value(metadata i32 0, metadata !4361, metadata !DIExpression()), !dbg !4363
  %5 = icmp sgt i32 %4, 0, !dbg !4366
  br i1 %5, label %6, label %18, !dbg !4369

6:                                                ; preds = %1, %15
  %7 = phi i32 [ %16, %15 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !4361, metadata !DIExpression()), !dbg !4363
  call void @llvm.dbg.value(metadata i8* %2, metadata !4362, metadata !DIExpression(DW_OP_deref)), !dbg !4363
  %8 = call i32 @flash_read_sr(i8* noundef nonnull %2) #19, !dbg !4370
  %9 = icmp slt i32 %8, 0, !dbg !4373
  br i1 %9, label %18, label %10, !dbg !4374

10:                                               ; preds = %6
  %11 = load i8, i8* %2, align 1, !dbg !4375
  call void @llvm.dbg.value(metadata i8 %11, metadata !4362, metadata !DIExpression()), !dbg !4363
  %12 = and i8 %11, 1, !dbg !4377
  %13 = icmp eq i8 %12, 0, !dbg !4377
  br i1 %13, label %14, label %15, !dbg !4378

14:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #20, !dbg !4379
  ret i32 0, !dbg !4380

15:                                               ; preds = %10
  call void @sfc_delay_ms(i32 noundef 1) #21, !dbg !4382
  %16 = add nuw nsw i32 %7, 1, !dbg !4383
  call void @llvm.dbg.value(metadata i32 %16, metadata !4361, metadata !DIExpression()), !dbg !4363
  %17 = icmp eq i32 %16, %4, !dbg !4366
  br i1 %17, label %18, label %6, !dbg !4369, !llvm.loop !4384

18:                                               ; preds = %15, %6, %1
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 491, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.flash_wait_ready, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.35, i32 0, i32 0)) #22, !dbg !4386
  unreachable, !dbg !4386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr(i8* noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !4387 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4391, metadata !DIExpression()), !dbg !4394
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #20, !dbg !4395
  call void @llvm.dbg.value(metadata i8 5, metadata !4393, metadata !DIExpression()), !dbg !4394
  store i8 5, i8* %2, align 1, !dbg !4396
  call void @llvm.dbg.value(metadata i8* %2, metadata !4393, metadata !DIExpression(DW_OP_deref)), !dbg !4394
  %3 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #21, !dbg !4397
  call void @llvm.dbg.value(metadata i32 %3, metadata !4392, metadata !DIExpression()), !dbg !4394
  %4 = icmp ne i32 %3, 1, !dbg !4398
  %5 = sext i1 %4 to i32, !dbg !4394
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #20, !dbg !4400
  ret i32 %5, !dbg !4400
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #3 section ".ramTEXT" !dbg !4401 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4403, metadata !DIExpression()), !dbg !4407
  call void @llvm.dbg.value(metadata i32 %1, metadata !4404, metadata !DIExpression()), !dbg !4407
  %4 = bitcast i32* %3 to i8*, !dbg !4408
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !4408
  call void @llvm.dbg.value(metadata i32 0, metadata !4405, metadata !DIExpression()), !dbg !4407
  store i32 144, i32* %3, align 4, !dbg !4409
  call void @llvm.dbg.value(metadata i8 undef, metadata !4405, metadata !DIExpression()), !dbg !4407
  call void @llvm.dbg.value(metadata i32* %3, metadata !4405, metadata !DIExpression(DW_OP_deref)), !dbg !4407
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #21, !dbg !4410
  call void @llvm.dbg.value(metadata i32 %5, metadata !4406, metadata !DIExpression()), !dbg !4407
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !4411
  ret i32 %5, !dbg !4412
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id_quad(i8* noundef %0, i32 noundef %1) local_unnamed_addr #3 section ".ramTEXT" !dbg !4413 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4415, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i32 %1, metadata !4416, metadata !DIExpression()), !dbg !4419
  %4 = bitcast i32* %3 to i8*, !dbg !4420
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !4420
  call void @llvm.dbg.value(metadata i32 0, metadata !4417, metadata !DIExpression()), !dbg !4419
  store i32 144, i32* %3, align 4, !dbg !4421
  call void @llvm.dbg.value(metadata i8 undef, metadata !4417, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i32* %3, metadata !4417, metadata !DIExpression(DW_OP_deref)), !dbg !4419
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #21, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %5, metadata !4418, metadata !DIExpression()), !dbg !4419
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !4423
  ret i32 %5, !dbg !4424
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 section ".ramTEXT" !dbg !4425 {
  %4 = alloca [4 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4429, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata i32 %1, metadata !4430, metadata !DIExpression()), !dbg !4434
  call void @llvm.dbg.value(metadata i32 %2, metadata !4431, metadata !DIExpression()), !dbg !4434
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 0, !dbg !4435
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !4435
  call void @llvm.dbg.declare(metadata [4 x i8]* %4, metadata !4432, metadata !DIExpression()), !dbg !4436
  %6 = icmp eq i32 %2, 0, !dbg !4437
  br i1 %6, label %18, label %7, !dbg !4439

7:                                                ; preds = %3
  %8 = tail call i32 @flash_wait_ready(i32 noundef 1) #19, !dbg !4440
  store i32 1, i32* @sf_drvier_status, align 4, !dbg !4442
  store i8 3, i8* %5, align 1, !dbg !4443
  %9 = lshr i32 %1, 16, !dbg !4444
  %10 = trunc i32 %9 to i8, !dbg !4445
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 1, !dbg !4446
  store i8 %10, i8* %11, align 1, !dbg !4447
  %12 = lshr i32 %1, 8, !dbg !4448
  %13 = trunc i32 %12 to i8, !dbg !4449
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 2, !dbg !4450
  store i8 %13, i8* %14, align 1, !dbg !4451
  %15 = trunc i32 %1 to i8, !dbg !4452
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 3, !dbg !4453
  store i8 %15, i8* %16, align 1, !dbg !4454
  %17 = call i32 @sfc_read(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %0, i32 noundef %2) #21, !dbg !4455
  call void @llvm.dbg.value(metadata i32 %17, metadata !4433, metadata !DIExpression()), !dbg !4434
  br label %18, !dbg !4456

18:                                               ; preds = %3, %7
  %19 = phi i32 [ %17, %7 ], [ 0, %3 ], !dbg !4434
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !4457
  ret i32 %19, !dbg !4457
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_fast_read(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 section ".ramTEXT" !dbg !4458 {
  %5 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4462, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata i32 %1, metadata !4463, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata i32 %2, metadata !4464, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata i32 %3, metadata !4465, metadata !DIExpression()), !dbg !4471
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0, !dbg !4472
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #20, !dbg !4472
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !4466, metadata !DIExpression()), !dbg !4473
  %7 = icmp eq i32 %2, 0, !dbg !4474
  br i1 %7, label %33, label %8, !dbg !4476

8:                                                ; preds = %4
  %9 = tail call i32 @flash_wait_ready(i32 noundef 1) #19, !dbg !4477
  store i8 11, i8* %6, align 1, !dbg !4479
  %10 = lshr i32 %1, 16, !dbg !4480
  %11 = trunc i32 %10 to i8, !dbg !4481
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 1, !dbg !4482
  store i8 %11, i8* %12, align 1, !dbg !4483
  %13 = lshr i32 %1, 8, !dbg !4484
  %14 = trunc i32 %13 to i8, !dbg !4485
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 2, !dbg !4486
  store i8 %14, i8* %15, align 1, !dbg !4487
  %16 = trunc i32 %1 to i8, !dbg !4488
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 3, !dbg !4489
  store i8 %16, i8* %17, align 1, !dbg !4490
  call void @llvm.dbg.value(metadata i32 4, metadata !4468, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata i32 0, metadata !4470, metadata !DIExpression()), !dbg !4471
  %18 = icmp sgt i32 %3, 0, !dbg !4491
  br i1 %18, label %19, label %30, !dbg !4494

19:                                               ; preds = %8
  %20 = add nsw i32 %3, -1, !dbg !4494
  %21 = call i32 @llvm.umin.i32(i32 %20, i32 27), !dbg !4494
  br label %22, !dbg !4494

22:                                               ; preds = %19, %22
  %23 = phi i32 [ %26, %22 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4470, metadata !DIExpression()), !dbg !4471
  call void @llvm.dbg.value(metadata i32 undef, metadata !4468, metadata !DIExpression()), !dbg !4471
  %24 = add nuw nsw i32 %23, 4, !dbg !4495
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 %24, !dbg !4497
  store i8 0, i8* %25, align 1, !dbg !4498
  call void @llvm.dbg.value(metadata i32 undef, metadata !4468, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4471
  %26 = add nuw nsw i32 %23, 1, !dbg !4499
  call void @llvm.dbg.value(metadata i32 %26, metadata !4470, metadata !DIExpression()), !dbg !4471
  %27 = icmp eq i32 %23, %21, !dbg !4500
  br i1 %27, label %28, label %22, !dbg !4494, !llvm.loop !4501

28:                                               ; preds = %22
  %29 = add nuw nsw i32 %21, 5, !dbg !4494
  br label %30, !dbg !4503

30:                                               ; preds = %28, %8
  %31 = phi i32 [ 4, %8 ], [ %29, %28 ], !dbg !4471
  %32 = call i32 @sfc_read(i8* noundef nonnull %6, i32 noundef %31, i8* noundef %0, i32 noundef %2) #21, !dbg !4503
  call void @llvm.dbg.value(metadata i32 %32, metadata !4469, metadata !DIExpression()), !dbg !4471
  br label %33, !dbg !4504

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !4471
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #20, !dbg !4505
  ret i32 %34, !dbg !4505
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr2(i8* noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !4506 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4508, metadata !DIExpression()), !dbg !4511
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #20, !dbg !4512
  call void @llvm.dbg.value(metadata i8 53, metadata !4510, metadata !DIExpression()), !dbg !4511
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !4513
  switch i32 %3, label %9 [
    i32 239, label %4
    i32 200, label %4
    i32 194, label %5
    i32 32, label %6
    i32 255, label %7
  ], !dbg !4515

4:                                                ; preds = %1, %1
  call void @llvm.dbg.value(metadata i8 53, metadata !4510, metadata !DIExpression()), !dbg !4511
  store i8 53, i8* %2, align 1, !dbg !4516
  br label %10, !dbg !4518

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 43, metadata !4510, metadata !DIExpression()), !dbg !4511
  store i8 43, i8* %2, align 1, !dbg !4519
  br label %10, !dbg !4522

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 112, metadata !4510, metadata !DIExpression()), !dbg !4511
  store i8 112, i8* %2, align 1, !dbg !4523
  br label %10, !dbg !4526

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @customer_flash_read_SR2_comand() #21, !dbg !4527
  call void @llvm.dbg.value(metadata i8 %8, metadata !4510, metadata !DIExpression()), !dbg !4511
  store i8 %8, i8* %2, align 1, !dbg !4530
  br label %10, !dbg !4531

9:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.flash_read_sr2, i32 0, i32 0), i32 noundef 655, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0)) #21, !dbg !4532
  call void @llvm.dbg.value(metadata i8 5, metadata !4510, metadata !DIExpression()), !dbg !4511
  store i8 5, i8* %2, align 1, !dbg !4534
  br label %10

10:                                               ; preds = %5, %7, %9, %6, %4
  call void @llvm.dbg.value(metadata i8* %2, metadata !4510, metadata !DIExpression(DW_OP_deref)), !dbg !4511
  %11 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #21, !dbg !4535
  call void @llvm.dbg.value(metadata i32 %11, metadata !4509, metadata !DIExpression()), !dbg !4511
  %12 = icmp ne i32 %11, 1, !dbg !4536
  %13 = sext i1 %12 to i32, !dbg !4511
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #20, !dbg !4538
  ret i32 %13, !dbg !4538
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_unprotect() local_unnamed_addr #3 section ".ramTEXT" !dbg !4539 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #20, !dbg !4542
  call void @llvm.dbg.value(metadata i8 0, metadata !4541, metadata !DIExpression()), !dbg !4543
  store i8 0, i8* %1, align 1, !dbg !4544
  call void @llvm.dbg.value(metadata i8* %1, metadata !4541, metadata !DIExpression(DW_OP_deref)), !dbg !4543
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #19, !dbg !4545
  %3 = icmp slt i32 %2, 0, !dbg !4547
  br i1 %3, label %9, label %4, !dbg !4548

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !4549
  call void @llvm.dbg.value(metadata i8 %5, metadata !4541, metadata !DIExpression()), !dbg !4543
  %6 = and i8 %5, 28, !dbg !4551
  %7 = icmp eq i8 %6, 0, !dbg !4552
  br i1 %7, label %9, label %8, !dbg !4553

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 0, metadata !4541, metadata !DIExpression()), !dbg !4543
  store i8 0, i8* %1, align 1, !dbg !4554
  call void @llvm.dbg.value(metadata i8* %1, metadata !4541, metadata !DIExpression(DW_OP_deref)), !dbg !4543
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #19, !dbg !4556
  br label %9, !dbg !4557

9:                                                ; preds = %4, %8, %0
  %10 = phi i32 [ -1, %0 ], [ 0, %8 ], [ 0, %4 ], !dbg !4543
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #20, !dbg !4558
  ret i32 %10, !dbg !4558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_write_sr(i8* noundef %0) unnamed_addr #3 section ".ramTEXT" !dbg !4559 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4561, metadata !DIExpression()), !dbg !4564
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #20, !dbg !4565
  call void @llvm.dbg.value(metadata i8 1, metadata !4563, metadata !DIExpression()), !dbg !4564
  store i8 1, i8* %2, align 1, !dbg !4566
  call void @llvm.dbg.value(metadata i8* %2, metadata !4563, metadata !DIExpression(DW_OP_deref)), !dbg !4564
  %3 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #21, !dbg !4567
  call void @llvm.dbg.value(metadata i32 %3, metadata !4562, metadata !DIExpression()), !dbg !4564
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #20, !dbg !4568
  ret void, !dbg !4568
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_protect() local_unnamed_addr #3 section ".ramTEXT" !dbg !4569 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #20, !dbg !4572
  call void @llvm.dbg.value(metadata i8 0, metadata !4571, metadata !DIExpression()), !dbg !4573
  store i8 0, i8* %1, align 1, !dbg !4574
  call void @llvm.dbg.value(metadata i8* %1, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4573
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #19, !dbg !4575
  %3 = icmp slt i32 %2, 0, !dbg !4577
  br i1 %3, label %7, label %4, !dbg !4578

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !4579
  call void @llvm.dbg.value(metadata i8 %5, metadata !4571, metadata !DIExpression()), !dbg !4573
  %6 = or i8 %5, 28, !dbg !4579
  call void @llvm.dbg.value(metadata i8 %6, metadata !4571, metadata !DIExpression()), !dbg !4573
  store i8 %6, i8* %1, align 1, !dbg !4579
  call void @llvm.dbg.value(metadata i8* %1, metadata !4571, metadata !DIExpression(DW_OP_deref)), !dbg !4573
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #19, !dbg !4580
  br label %7, !dbg !4581

7:                                                ; preds = %0, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %0 ], !dbg !4573
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #20, !dbg !4582
  ret i32 %8, !dbg !4582
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_enable() local_unnamed_addr #3 section ".ramTEXT" !dbg !4583 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #20, !dbg !4586
  call void @llvm.dbg.value(metadata i8 6, metadata !4585, metadata !DIExpression()), !dbg !4587
  store i8 6, i8* %1, align 1, !dbg !4588
  call void @llvm.dbg.value(metadata i8* %1, metadata !4585, metadata !DIExpression(DW_OP_deref)), !dbg !4587
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #21, !dbg !4589
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #20, !dbg !4590
  ret i32 %2, !dbg !4591
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_disable() local_unnamed_addr #3 section ".ramTEXT" !dbg !4592 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #20, !dbg !4595
  call void @llvm.dbg.value(metadata i8 4, metadata !4594, metadata !DIExpression()), !dbg !4596
  store i8 4, i8* %1, align 1, !dbg !4597
  call void @llvm.dbg.value(metadata i8* %1, metadata !4594, metadata !DIExpression(DW_OP_deref)), !dbg !4596
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #21, !dbg !4598
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #20, !dbg !4599
  ret i32 %2, !dbg !4600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector(i32 noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !4601 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4605, metadata !DIExpression()), !dbg !4609
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !4610
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #20, !dbg !4610
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !4606, metadata !DIExpression()), !dbg !4611
  call void @llvm.dbg.value(metadata i32 0, metadata !4608, metadata !DIExpression()), !dbg !4609
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #19, !dbg !4612
  store i32 8, i32* @sf_drvier_status, align 4, !dbg !4614
  br label %5, !dbg !4615

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #21, !dbg !4616
  call void @llvm.dbg.value(metadata i32 %6, metadata !4608, metadata !DIExpression()), !dbg !4609
  %7 = icmp eq i32 %6, -121, !dbg !4618
  br i1 %7, label %5, label %8, !dbg !4619, !llvm.loop !4620

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4622
  call void @llvm.dbg.value(metadata i32 %9, metadata !4607, metadata !DIExpression()), !dbg !4609
  store i8 -40, i8* %3, align 1, !dbg !4623
  %10 = lshr i32 %0, 16, !dbg !4624
  %11 = trunc i32 %10 to i8, !dbg !4625
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4626
  store i8 %11, i8* %12, align 1, !dbg !4627
  %13 = lshr i32 %0, 8, !dbg !4628
  %14 = trunc i32 %13 to i8, !dbg !4629
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4630
  store i8 %14, i8* %15, align 1, !dbg !4631
  %16 = trunc i32 %0 to i8, !dbg !4632
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !4633
  store i8 %16, i8* %17, align 1, !dbg !4634
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !4635
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #21, !dbg !4636
  call void @restore_interrupt_mask(i32 noundef %9) #21, !dbg !4637
  br label %19, !dbg !4638

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #21, !dbg !4639
  call void @llvm.dbg.value(metadata i32 %20, metadata !4608, metadata !DIExpression()), !dbg !4609
  %21 = icmp eq i32 %20, -121, !dbg !4641
  br i1 %21, label %19, label %22, !dbg !4642, !llvm.loop !4643

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #19, !dbg !4645
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #20, !dbg !4646
  ret i32 0, !dbg !4646
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector_32k(i32 noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !4647 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4649, metadata !DIExpression()), !dbg !4653
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !4654
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #20, !dbg !4654
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !4650, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i32 0, metadata !4652, metadata !DIExpression()), !dbg !4653
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #19, !dbg !4656
  store i32 7, i32* @sf_drvier_status, align 4, !dbg !4658
  br label %5, !dbg !4659

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #21, !dbg !4660
  call void @llvm.dbg.value(metadata i32 %6, metadata !4652, metadata !DIExpression()), !dbg !4653
  %7 = icmp eq i32 %6, -121, !dbg !4662
  br i1 %7, label %5, label %8, !dbg !4663, !llvm.loop !4664

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4666
  call void @llvm.dbg.value(metadata i32 %9, metadata !4651, metadata !DIExpression()), !dbg !4653
  store i8 82, i8* %3, align 1, !dbg !4667
  %10 = lshr i32 %0, 16, !dbg !4668
  %11 = trunc i32 %10 to i8, !dbg !4669
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4670
  store i8 %11, i8* %12, align 1, !dbg !4671
  %13 = lshr i32 %0, 8, !dbg !4672
  %14 = trunc i32 %13 to i8, !dbg !4673
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4674
  store i8 %14, i8* %15, align 1, !dbg !4675
  %16 = trunc i32 %0 to i8, !dbg !4676
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !4677
  store i8 %16, i8* %17, align 1, !dbg !4678
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !4679
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #21, !dbg !4680
  br label %19, !dbg !4681

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #21, !dbg !4682
  call void @llvm.dbg.value(metadata i32 %20, metadata !4652, metadata !DIExpression()), !dbg !4653
  %21 = icmp eq i32 %20, -121, !dbg !4684
  br i1 %21, label %19, label %22, !dbg !4685, !llvm.loop !4686

22:                                               ; preds = %19
  call void @restore_interrupt_mask(i32 noundef %9) #21, !dbg !4688
  %23 = call i32 @flash_write_disable() #19, !dbg !4689
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #20, !dbg !4690
  ret i32 0, !dbg !4690
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_page(i32 noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !4691 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4693, metadata !DIExpression()), !dbg !4697
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !4698
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #20, !dbg !4698
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !4694, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata i32 0, metadata !4696, metadata !DIExpression()), !dbg !4697
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #19, !dbg !4700
  store i32 6, i32* @sf_drvier_status, align 4, !dbg !4702
  br label %5, !dbg !4703

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #21, !dbg !4704
  call void @llvm.dbg.value(metadata i32 %6, metadata !4696, metadata !DIExpression()), !dbg !4697
  %7 = icmp eq i32 %6, -121, !dbg !4706
  br i1 %7, label %5, label %8, !dbg !4707, !llvm.loop !4708

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !4710
  call void @llvm.dbg.value(metadata i32 %9, metadata !4695, metadata !DIExpression()), !dbg !4697
  store i8 32, i8* %3, align 1, !dbg !4711
  %10 = lshr i32 %0, 16, !dbg !4712
  %11 = trunc i32 %10 to i8, !dbg !4713
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4714
  store i8 %11, i8* %12, align 1, !dbg !4715
  %13 = lshr i32 %0, 8, !dbg !4716
  %14 = trunc i32 %13 to i8, !dbg !4717
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4718
  store i8 %14, i8* %15, align 1, !dbg !4719
  %16 = trunc i32 %0 to i8, !dbg !4720
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !4721
  store i8 %16, i8* %17, align 1, !dbg !4722
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !4723
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #21, !dbg !4724
  call void @restore_interrupt_mask(i32 noundef %9) #21, !dbg !4725
  br label %19, !dbg !4726

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #21, !dbg !4727
  call void @llvm.dbg.value(metadata i32 %20, metadata !4696, metadata !DIExpression()), !dbg !4697
  %21 = icmp eq i32 %20, -121, !dbg !4729
  br i1 %21, label %19, label %22, !dbg !4730, !llvm.loop !4731

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #19, !dbg !4733
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #20, !dbg !4734
  ret i32 0, !dbg !4734
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_chip() local_unnamed_addr #3 section ".ramTEXT" !dbg !4735 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !4738
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #20, !dbg !4738
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !4737, metadata !DIExpression()), !dbg !4739
  %3 = tail call i32 @flash_wait_ready(i32 noundef 3) #19, !dbg !4740
  store i32 9, i32* @sf_drvier_status, align 4, !dbg !4742
  %4 = tail call i32 @flash_write_enable() #19, !dbg !4743
  %5 = tail call i32 @flash_unprotect() #19, !dbg !4744
  store i8 96, i8* %2, align 1, !dbg !4745
  %6 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef null, i32 noundef 0) #21, !dbg !4746
  %7 = call i32 @flash_wait_ready(i32 noundef 30000) #19, !dbg !4747
  %8 = call i32 @flash_write_disable() #19, !dbg !4749
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4750
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #20, !dbg !4751
  ret i32 0, !dbg !4751
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 section ".ramTEXT" !dbg !4752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4756, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.value(metadata i32 %1, metadata !4757, metadata !DIExpression()), !dbg !4758
  %3 = icmp sgt i32 %1, 0
  call void @llvm.dbg.value(metadata i32 %1, metadata !4757, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.value(metadata i32 %0, metadata !4756, metadata !DIExpression()), !dbg !4758
  br i1 %3, label %4, label %14, !dbg !4759

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %12, %4 ], [ %1, %2 ]
  %6 = phi i32 [ %11, %4 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4757, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.value(metadata i32 %6, metadata !4756, metadata !DIExpression()), !dbg !4758
  %7 = tail call i32 @flash_erase_page(i32 noundef %6) #19, !dbg !4760
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4763
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !4764
  %10 = load i32, i32* %9, align 4, !dbg !4764
  %11 = add i32 %10, %6, !dbg !4765
  call void @llvm.dbg.value(metadata i32 %11, metadata !4756, metadata !DIExpression()), !dbg !4758
  %12 = sub i32 %5, %10, !dbg !4766
  call void @llvm.dbg.value(metadata i32 %12, metadata !4757, metadata !DIExpression()), !dbg !4758
  %13 = icmp sgt i32 %12, 0, !dbg !4767
  br i1 %13, label %4, label %14, !dbg !4768, !llvm.loop !4769

14:                                               ; preds = %4, %2
  ret i32 0, !dbg !4771
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 section ".ramTEXT" !dbg !4772 {
  %4 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4776, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 %1, metadata !4777, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 %2, metadata !4778, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 0, metadata !4781, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 0, metadata !4782, metadata !DIExpression()), !dbg !4790
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 0, !dbg !4791
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %5) #20, !dbg !4791
  call void @llvm.dbg.declare(metadata [5 x i8]* %4, metadata !4784, metadata !DIExpression()), !dbg !4792
  call void @llvm.dbg.value(metadata i32 %1, metadata !4787, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i8* %0, metadata !4788, metadata !DIExpression()), !dbg !4790
  %6 = icmp eq i32 %2, 0, !dbg !4793
  br i1 %6, label %86, label %7, !dbg !4795

7:                                                ; preds = %3
  %8 = add i32 %2, %1, !dbg !4796
  %9 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4798
  %10 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 3, !dbg !4799
  %11 = load i32, i32* %10, align 4, !dbg !4799
  %12 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 4, !dbg !4800
  %13 = load i32, i32* %12, align 4, !dbg !4800
  %14 = mul i32 %13, %11, !dbg !4801
  %15 = icmp ugt i32 %8, %14, !dbg !4802
  br i1 %15, label %86, label %16, !dbg !4803

16:                                               ; preds = %7
  %17 = tail call i32 @flash_wait_ready(i32 noundef 2) #19, !dbg !4804
  br label %18

18:                                               ; preds = %16, %18
  %19 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #21, !dbg !4806
  call void @llvm.dbg.value(metadata i32 %19, metadata !4785, metadata !DIExpression()), !dbg !4790
  %20 = icmp eq i32 %19, -121, !dbg !4808
  br i1 %20, label %18, label %21, !dbg !4809, !llvm.loop !4810

21:                                               ; preds = %18
  store i32 3, i32* @sf_drvier_status, align 4, !dbg !4813
  %22 = tail call i32 @sfc_GetDirectMode() #21, !dbg !4814
  call void @llvm.dbg.value(metadata i32 %22, metadata !4783, metadata !DIExpression()), !dbg !4790
  %23 = icmp eq i32 %22, 2, !dbg !4815
  br i1 %23, label %24, label %29, !dbg !4817

24:                                               ; preds = %21
  %25 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4818
  %26 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %25, i32 0, i32 5, !dbg !4819
  %27 = load i8, i8* %26, align 4, !dbg !4819
  %28 = icmp eq i8 %27, 0, !dbg !4818
  br i1 %28, label %29, label %30, !dbg !4820

29:                                               ; preds = %24, %21
  br label %30

30:                                               ; preds = %24, %29
  %31 = phi i8 [ 2, %29 ], [ %27, %24 ], !dbg !4821
  store i8 %31, i8* %5, align 1, !dbg !4821
  call void @llvm.dbg.value(metadata i32 undef, metadata !4779, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i8* %0, metadata !4788, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 %1, metadata !4787, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 %2, metadata !4778, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 0, metadata !4782, metadata !DIExpression()), !dbg !4790
  %32 = icmp sgt i32 %2, 0, !dbg !4822
  br i1 %32, label %33, label %41, !dbg !4823

33:                                               ; preds = %30
  %34 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !4824
  %35 = urem i32 %1, %34, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %35, metadata !4779, metadata !DIExpression()), !dbg !4790
  %36 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 1
  %37 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 2
  %38 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 3
  %39 = add i32 %1, -1
  %40 = getelementptr inbounds i8, i8* %0, i32 -1
  br label %43, !dbg !4823

41:                                               ; preds = %73, %30
  %42 = phi i32 [ 0, %30 ], [ %74, %73 ], !dbg !4790
  br label %81, !dbg !4826

43:                                               ; preds = %77, %33
  %44 = phi i32 [ %34, %33 ], [ %80, %77 ], !dbg !4827
  %45 = phi i8* [ %0, %33 ], [ %78, %77 ]
  %46 = phi i32 [ %1, %33 ], [ %79, %77 ]
  %47 = phi i32 [ %2, %33 ], [ %75, %77 ]
  %48 = phi i32 [ %35, %33 ], [ 0, %77 ]
  %49 = phi i32 [ 0, %33 ], [ %74, %77 ]
  call void @llvm.dbg.value(metadata i8* %45, metadata !4788, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 %46, metadata !4787, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 %47, metadata !4778, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 %48, metadata !4779, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 %49, metadata !4782, metadata !DIExpression()), !dbg !4790
  %50 = sub i32 %44, %48, !dbg !4827
  %51 = icmp ugt i32 %47, %50, !dbg !4827
  %52 = select i1 %51, i32 %50, i32 %47, !dbg !4827
  call void @llvm.dbg.value(metadata i32 %52, metadata !4780, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i32 0, metadata !4779, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata i8* %45, metadata !4789, metadata !DIExpression()), !dbg !4790
  %53 = lshr i32 %46, 16, !dbg !4829
  %54 = trunc i32 %53 to i8, !dbg !4830
  store i8 %54, i8* %36, align 1, !dbg !4831
  %55 = lshr i32 %46, 8, !dbg !4832
  %56 = trunc i32 %55 to i8, !dbg !4833
  store i8 %56, i8* %37, align 1, !dbg !4834
  %57 = trunc i32 %46 to i8, !dbg !4835
  store i8 %57, i8* %38, align 1, !dbg !4836
  %58 = call i32 @flash_wait_ready(i32 noundef 3) #19, !dbg !4837
  %59 = call i32 @flash_write_enable() #19, !dbg !4839
  %60 = call i32 @save_and_set_interrupt_mask() #21, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %60, metadata !4786, metadata !DIExpression()), !dbg !4790
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !4841
  %61 = call i32 @sfc_write(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %45, i32 noundef %52) #21, !dbg !4842
  call void @llvm.dbg.value(metadata i32 %61, metadata !4781, metadata !DIExpression()), !dbg !4790
  call void @restore_interrupt_mask(i32 noundef %60) #21, !dbg !4843
  br label %62, !dbg !4844

62:                                               ; preds = %62, %43
  %63 = load i8, i8* %40, align 1, !dbg !4845
  %64 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef null, i32 noundef %39, i8 noundef zeroext %63) #21, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %64, metadata !4785, metadata !DIExpression()), !dbg !4790
  %65 = icmp eq i32 %64, 0, !dbg !4848
  br i1 %65, label %62, label %66, !dbg !4849, !llvm.loop !4850

66:                                               ; preds = %62
  %67 = icmp sgt i32 %61, 0, !dbg !4852
  br i1 %67, label %68, label %73, !dbg !4854

68:                                               ; preds = %66
  %69 = add nsw i32 %61, %49, !dbg !4855
  call void @llvm.dbg.value(metadata i32 %69, metadata !4782, metadata !DIExpression()), !dbg !4790
  %70 = icmp ult i32 %61, %52, !dbg !4857
  br i1 %70, label %71, label %73, !dbg !4859

71:                                               ; preds = %68
  %72 = call i32 @flash_write_disable() #19, !dbg !4860
  call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 942, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.flash_write, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.35, i32 0, i32 0)) #22, !dbg !4862
  unreachable, !dbg !4862

73:                                               ; preds = %68, %66
  %74 = phi i32 [ %69, %68 ], [ %49, %66 ], !dbg !4790
  call void @llvm.dbg.value(metadata i32 %74, metadata !4782, metadata !DIExpression()), !dbg !4790
  %75 = sub i32 %47, %52, !dbg !4863
  call void @llvm.dbg.value(metadata i32 %75, metadata !4778, metadata !DIExpression()), !dbg !4790
  call void @llvm.dbg.value(metadata !DIArgList(i32 %52, i32 %46), metadata !4787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4790
  call void @llvm.dbg.value(metadata !DIArgList(i8* %45, i32 %52), metadata !4788, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4790
  call void @llvm.dbg.value(metadata i32 0, metadata !4779, metadata !DIExpression()), !dbg !4790
  %76 = icmp sgt i32 %75, 0, !dbg !4822
  br i1 %76, label %77, label %41, !dbg !4823, !llvm.loop !4864

77:                                               ; preds = %73
  %78 = getelementptr inbounds i8, i8* %45, i32 %52, !dbg !4866
  call void @llvm.dbg.value(metadata i8* %78, metadata !4788, metadata !DIExpression()), !dbg !4790
  %79 = add i32 %52, %46, !dbg !4867
  call void @llvm.dbg.value(metadata i32 %79, metadata !4787, metadata !DIExpression()), !dbg !4790
  %80 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !4827
  br label %43, !dbg !4823

81:                                               ; preds = %41, %81
  %82 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #21, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %82, metadata !4785, metadata !DIExpression()), !dbg !4790
  %83 = icmp eq i32 %82, -121, !dbg !4870
  br i1 %83, label %81, label %84, !dbg !4871, !llvm.loop !4872

84:                                               ; preds = %81
  %85 = call i32 @flash_write_disable() #19, !dbg !4874
  br label %86, !dbg !4875

86:                                               ; preds = %7, %3, %84
  %87 = phi i32 [ %42, %84 ], [ 0, %3 ], [ -1, %7 ], !dbg !4790
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %5) #20, !dbg !4876
  ret i32 %87, !dbg !4876
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write_security_crc(i32 noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !4877 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4879, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata i32 4, metadata !4880, metadata !DIExpression()), !dbg !4883
  call void @llvm.dbg.value(metadata i32 0, metadata !4881, metadata !DIExpression()), !dbg !4883
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !4884
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #20, !dbg !4884
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !4882, metadata !DIExpression()), !dbg !4885
  %4 = and i32 %0, 4095, !dbg !4886
  %5 = icmp eq i32 %4, 0, !dbg !4886
  br i1 %5, label %6, label %29, !dbg !4888

6:                                                ; preds = %1
  %7 = add nuw i32 %0, 4, !dbg !4889
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4891
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !4892
  %10 = load i32, i32* %9, align 4, !dbg !4892
  %11 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 4, !dbg !4893
  %12 = load i32, i32* %11, align 4, !dbg !4893
  %13 = mul i32 %12, %10, !dbg !4894
  %14 = icmp ugt i32 %7, %13, !dbg !4895
  br i1 %14, label %29, label %15, !dbg !4896

15:                                               ; preds = %6
  store i32 5, i32* @sf_drvier_status, align 4, !dbg !4897
  %16 = tail call i32 @flash_wait_ready(i32 noundef 2) #19, !dbg !4898
  %17 = tail call i32 @flash_erase_page(i32 noundef %0) #19, !dbg !4900
  store i8 2, i8* %3, align 1, !dbg !4901
  %18 = lshr i32 %0, 16, !dbg !4902
  %19 = trunc i32 %18 to i8, !dbg !4903
  %20 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4904
  store i8 %19, i8* %20, align 1, !dbg !4905
  %21 = lshr i32 %0, 8, !dbg !4906
  %22 = trunc i32 %21 to i8, !dbg !4907
  %23 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4908
  store i8 %22, i8* %23, align 1, !dbg !4909
  %24 = trunc i32 %0 to i8, !dbg !4910
  %25 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !4911
  store i8 %24, i8* %25, align 1, !dbg !4912
  %26 = tail call i32 @flash_write_enable() #19, !dbg !4913
  %27 = tail call i32 @flash_unprotect() #19, !dbg !4914
  %28 = call i32 @sfc_security_write_crc(i8* noundef nonnull %3, i32 noundef 4) #21, !dbg !4915
  call void @llvm.dbg.value(metadata i32 %28, metadata !4881, metadata !DIExpression()), !dbg !4883
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4916
  br label %29, !dbg !4917

29:                                               ; preds = %6, %1, %15
  %30 = phi i32 [ %28, %15 ], [ -1, %1 ], [ -1, %6 ], !dbg !4883
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #20, !dbg !4918
  ret i32 %30, !dbg !4918
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 section ".ramTEXT" !dbg !4919 {
  %4 = alloca [4096 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4921, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %1, metadata !4922, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %2, metadata !4923, metadata !DIExpression()), !dbg !4938
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 0, !dbg !4939
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %5) #20, !dbg !4939
  call void @llvm.dbg.declare(metadata [4096 x i8]* %4, metadata !4924, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.value(metadata i32 4096, metadata !4928, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 4095, metadata !4929, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i8* %0, metadata !4921, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %1, metadata !4922, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %2, metadata !4923, metadata !DIExpression()), !dbg !4938
  %6 = icmp sgt i32 %2, 0, !dbg !4941
  br i1 %6, label %7, label %43, !dbg !4942

7:                                                ; preds = %3, %37
  %8 = phi i8* [ %40, %37 ], [ %0, %3 ]
  %9 = phi i32 [ %41, %37 ], [ %1, %3 ]
  %10 = phi i32 [ %38, %37 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !4921, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %9, metadata !4922, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %10, metadata !4923, metadata !DIExpression()), !dbg !4938
  %11 = and i32 %9, 4095, !dbg !4943
  %12 = icmp ne i32 %11, 0, !dbg !4943
  %13 = icmp ult i32 %10, 4096
  %14 = select i1 %12, i1 true, i1 %13, !dbg !4944
  br i1 %14, label %15, label %30, !dbg !4944

15:                                               ; preds = %7
  %16 = and i32 %9, -4096, !dbg !4945
  call void @llvm.dbg.value(metadata i32 %16, metadata !4934, metadata !DIExpression()), !dbg !4946
  %17 = call i32 @flash_direct_read_nocache(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #19, !dbg !4947
  %18 = icmp eq i32 %17, 4096, !dbg !4949
  br i1 %18, label %19, label %45, !dbg !4950

19:                                               ; preds = %15
  store i32 4, i32* @sf_drvier_status, align 4, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %11, metadata !4930, metadata !DIExpression()), !dbg !4946
  %20 = sub nuw nsw i32 4096, %11, !dbg !4952
  %21 = icmp ugt i32 %10, %20, !dbg !4952
  %22 = select i1 %21, i32 %20, i32 %10, !dbg !4952
  call void @llvm.dbg.value(metadata i32 %22, metadata !4935, metadata !DIExpression()), !dbg !4946
  %23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 %11, !dbg !4953
  %24 = call i8* @memcpy(i8* noundef nonnull %23, i8* noundef %8, i32 noundef %22) #21, !dbg !4954
  %25 = call i32 @flash_erase(i32 noundef %16, i32 noundef 4096) #19, !dbg !4955
  %26 = call i32 @flash_write(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #19, !dbg !4957
  %27 = icmp eq i32 %26, 4096, !dbg !4959
  br i1 %27, label %28, label %45, !dbg !4960

28:                                               ; preds = %19
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %22), metadata !4921, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4938
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %22), metadata !4922, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4938
  %29 = sub nsw i32 %10, %22, !dbg !4961
  call void @llvm.dbg.value(metadata i32 %29, metadata !4923, metadata !DIExpression()), !dbg !4938
  br label %37

30:                                               ; preds = %7
  %31 = and i32 %10, -4096, !dbg !4962
  call void @llvm.dbg.value(metadata i32 %31, metadata !4936, metadata !DIExpression()), !dbg !4963
  %32 = call i32 @flash_erase(i32 noundef %9, i32 noundef %31) #19, !dbg !4964
  %33 = call i32 @flash_write(i8* noundef %8, i32 noundef %9, i32 noundef %31) #19, !dbg !4966
  %34 = icmp eq i32 %33, %31, !dbg !4968
  br i1 %34, label %35, label %43, !dbg !4969

35:                                               ; preds = %30
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %31), metadata !4921, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4938
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %31), metadata !4922, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4938
  %36 = and i32 %10, 4095, !dbg !4970
  call void @llvm.dbg.value(metadata i8* %8, metadata !4921, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %9, metadata !4922, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %10, metadata !4923, metadata !DIExpression()), !dbg !4938
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %29, %28 ], [ %36, %35 ]
  %39 = phi i32 [ %22, %28 ], [ %31, %35 ]
  %40 = getelementptr inbounds i8, i8* %8, i32 %39, !dbg !4971
  %41 = add i32 %39, %9, !dbg !4971
  call void @llvm.dbg.value(metadata i8* %40, metadata !4921, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %41, metadata !4922, metadata !DIExpression()), !dbg !4938
  call void @llvm.dbg.value(metadata i32 %38, metadata !4923, metadata !DIExpression()), !dbg !4938
  %42 = icmp sgt i32 %38, 0, !dbg !4941
  br i1 %42, label %7, label %43, !dbg !4942, !llvm.loop !4972

43:                                               ; preds = %37, %30, %3
  %44 = phi i32 [ 0, %3 ], [ -1, %30 ], [ 0, %37 ]
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4938
  br label %45, !dbg !4974

45:                                               ; preds = %19, %15, %43
  %46 = phi i32 [ %44, %43 ], [ -2, %15 ], [ -4, %19 ], !dbg !4938
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %5) #20, !dbg !4974
  ret i32 %46, !dbg !4974
}

; Function Attrs: noinline nounwind optsize
declare dso_local i32 @flash_direct_read_nocache(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3 section ".ramTEXT"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @query_spi_flash_status() local_unnamed_addr #10 section ".ramTEXT" !dbg !4975 {
  %1 = load i32, i32* @sf_drvier_status, align 4, !dbg !4979
  switch i32 %1, label %3 [
    i32 -1, label %7
    i32 0, label %2
  ], !dbg !4981

2:                                                ; preds = %0
  br label %7, !dbg !4982

3:                                                ; preds = %0
  %4 = add i32 %1, -3, !dbg !4985
  %5 = icmp ult i32 %4, 3, !dbg !4985
  %6 = select i1 %5, i32 1, i32 2, !dbg !4987
  br label %7, !dbg !4987

7:                                                ; preds = %3, %0, %2
  %8 = phi i32 [ 0, %2 ], [ %1, %0 ], [ %6, %3 ], !dbg !4988
  ret i32 %8, !dbg !4989
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_count() local_unnamed_addr #3 !dbg !4990 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 2) #21, !dbg !4991
  ret i32 %1, !dbg !4992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time(i32 noundef %0) local_unnamed_addr #3 !dbg !4993 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4995, metadata !DIExpression()), !dbg !4998
  %2 = tail call i32 @get_current_count() #19, !dbg !4999
  %3 = add i32 %2, %0, !dbg !5000
  %4 = xor i32 %3, -1, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %3, metadata !4996, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4998
  %5 = tail call i32 @get_current_count() #19, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %5, metadata !4997, metadata !DIExpression()), !dbg !4998
  %6 = add i32 %5, %4, !dbg !5003
  %7 = icmp slt i32 %6, 0, !dbg !5003
  br i1 %7, label %8, label %12, !dbg !5004

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_count() #19, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %9, metadata !4997, metadata !DIExpression()), !dbg !4998
  %10 = add i32 %9, %4, !dbg !5003
  %11 = icmp slt i32 %10, 0, !dbg !5003
  br i1 %11, label %8, label %12, !dbg !5004, !llvm.loop !5007

12:                                               ; preds = %8, %1
  ret void, !dbg !5009
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time_for_gpt4(i32 noundef %0) local_unnamed_addr #3 !dbg !5010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5012, metadata !DIExpression()), !dbg !5015
  %2 = tail call i32 @get_current_gpt4_count() #19, !dbg !5016
  %3 = add i32 %2, %0, !dbg !5017
  %4 = xor i32 %3, -1, !dbg !5018
  call void @llvm.dbg.value(metadata i32 %3, metadata !5013, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5015
  %5 = tail call i32 @get_current_gpt4_count() #19, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %5, metadata !5014, metadata !DIExpression()), !dbg !5015
  %6 = add i32 %5, %4, !dbg !5020
  %7 = icmp slt i32 %6, 0, !dbg !5020
  br i1 %7, label %8, label %12, !dbg !5021

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_gpt4_count() #19, !dbg !5022
  call void @llvm.dbg.value(metadata i32 %9, metadata !5014, metadata !DIExpression()), !dbg !5015
  %10 = add i32 %9, %4, !dbg !5020
  %11 = icmp slt i32 %10, 0, !dbg !5020
  br i1 %11, label %8, label %12, !dbg !5021, !llvm.loop !5024

12:                                               ; preds = %8, %1
  ret void, !dbg !5026
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_gpt4_count() local_unnamed_addr #3 !dbg !5027 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 4) #21, !dbg !5028
  ret i32 %1, !dbg !5029
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_ms(i32 noundef %0) local_unnamed_addr #3 !dbg !5030 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5032, metadata !DIExpression()), !dbg !5034
  %2 = shl i32 %0, 5, !dbg !5035
  call void @llvm.dbg.value(metadata i32 %2, metadata !5033, metadata !DIExpression()), !dbg !5034
  %3 = mul i32 %0, 7, !dbg !5036
  %4 = udiv i32 %3, 10, !dbg !5037
  %5 = add i32 %4, %2, !dbg !5038
  call void @llvm.dbg.value(metadata i32 %5, metadata !5033, metadata !DIExpression()), !dbg !5034
  %6 = mul i32 %0, 6, !dbg !5039
  %7 = udiv i32 %6, 100, !dbg !5040
  %8 = add i32 %5, %7, !dbg !5041
  call void @llvm.dbg.value(metadata i32 %8, metadata !5033, metadata !DIExpression()), !dbg !5034
  %9 = shl i32 %0, 3, !dbg !5042
  %10 = udiv i32 %9, 1000, !dbg !5043
  %11 = add i32 %8, %10, !dbg !5044
  call void @llvm.dbg.value(metadata i32 %11, metadata !5033, metadata !DIExpression()), !dbg !5034
  tail call void @delay_time(i32 noundef %11) #19, !dbg !5045
  ret void, !dbg !5046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_us(i32 noundef %0) local_unnamed_addr #3 !dbg !5047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5049, metadata !DIExpression()), !dbg !5052
  %2 = tail call i32 @top_mcu_freq_get() #21, !dbg !5053
  %3 = udiv i32 %2, 1000000, !dbg !5054
  call void @llvm.dbg.value(metadata i32 %3, metadata !5051, metadata !DIExpression()), !dbg !5052
  %4 = mul i32 %3, %0, !dbg !5055
  call void @llvm.dbg.value(metadata i32 %4, metadata !5050, metadata !DIExpression()), !dbg !5052
  tail call void @delay_time_for_gpt4(i32 noundef %4) #19, !dbg !5056
  ret void, !dbg !5057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvTMR_init(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2, void ()* noundef %3) local_unnamed_addr #3 !dbg !5058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5062, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i32 %1, metadata !5063, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.value(metadata i1 %2, metadata !5064, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5066
  call void @llvm.dbg.value(metadata void ()* %3, metadata !5065, metadata !DIExpression()), !dbg !5066
  tail call void @GPT_Stop(i32 noundef %0) #21, !dbg !5067
  %5 = icmp eq i32 %0, 0, !dbg !5068
  br i1 %5, label %6, label %7, !dbg !5070

6:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !5071
  br label %8, !dbg !5073

7:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !5074
  br label %8

8:                                                ; preds = %7, %6
  %9 = phi i32 [ %0, %7 ], [ 0, %6 ]
  tail call void @GPT_init(i32 noundef %9, i32 noundef 1, void ()* noundef %3) #21, !dbg !5076
  tail call void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) #21, !dbg !5077
  ret void, !dbg !5078
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Start(i32 noundef %0) local_unnamed_addr #3 !dbg !5079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5081, metadata !DIExpression()), !dbg !5082
  tail call void @GPT_Start(i32 noundef %0) #21, !dbg !5083
  ret void, !dbg !5084
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Stop(i32 noundef %0) local_unnamed_addr #3 !dbg !5085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5087, metadata !DIExpression()), !dbg !5088
  tail call void @GPT_Stop(i32 noundef %0) #21, !dbg !5089
  ret void, !dbg !5090
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT2Init() local_unnamed_addr #3 !dbg !5091 {
  tail call void @CM4_GPT2Init() #21, !dbg !5092
  ret void, !dbg !5093
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT4Init() local_unnamed_addr #3 !dbg !5094 {
  tail call void @CM4_GPT4Init() #21, !dbg !5095
  ret void, !dbg !5096
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @clear_TMR_INT_status_bit(i32 noundef %0) local_unnamed_addr #1 !dbg !5097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5099, metadata !DIExpression()), !dbg !5100
  switch i32 %0, label %5 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !5101

2:                                                ; preds = %1
  br label %3, !dbg !5102

3:                                                ; preds = %1, %2
  %4 = phi i32 [ 2, %2 ], [ 1, %1 ]
  store volatile i32 %4, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !5100
  br label %5, !dbg !5105

5:                                                ; preds = %3, %1
  ret void, !dbg !5105
}

; Function Attrs: noinline nounwind optsize
define dso_local void @top_xtal_init() local_unnamed_addr #3 !dbg !5106 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5108, metadata !DIExpression()), !dbg !5110
  %1 = load volatile i32, i32* inttoptr (i32 -2097118784 to i32*), align 64, !dbg !5111
  call void @llvm.dbg.value(metadata i32 %1, metadata !5109, metadata !DIExpression()), !dbg !5110
  %2 = lshr i32 %1, 13, !dbg !5112
  %3 = and i32 %2, 7, !dbg !5113
  call void @llvm.dbg.value(metadata i32 %3, metadata !5109, metadata !DIExpression()), !dbg !5110
  %4 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !5114
  call void @llvm.dbg.value(metadata i32 %4, metadata !5108, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i32 %4, metadata !5108, metadata !DIExpression(DW_OP_constu, 18446744073709549568, DW_OP_and, DW_OP_stack_value)), !dbg !5110
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init, i32 0, i32 %3, !dbg !5115
  %6 = load i32, i32* %5, align 4, !dbg !5115
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init.1, i32 0, i32 %3, !dbg !5115
  %8 = load i32, i32* %7, align 4, !dbg !5115
  %9 = and i32 %4, -2048, !dbg !5116
  call void @llvm.dbg.value(metadata i32 %9, metadata !5108, metadata !DIExpression()), !dbg !5110
  store i32 %6, i32* @gXtalFreq, align 4, !dbg !5117
  %10 = or i32 %9, %8, !dbg !5117
  call void @llvm.dbg.value(metadata i32 %10, metadata !5108, metadata !DIExpression()), !dbg !5110
  store volatile i32 %10, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !5119
  %11 = load i32, i32* @gXtalFreq, align 4, !dbg !5120
  store i32 %11, i32* @gCpuFrequency, align 4, !dbg !5121
  tail call void @SystemCoreClockUpdate() #21, !dbg !5122
  %12 = load i32, i32* @SystemCoreClock, align 4, !dbg !5123
  %13 = udiv i32 %12, 1000, !dbg !5124
  %14 = tail call i32 @SysTick_Set(i32 noundef %13) #21, !dbg !5125
  ret void, !dbg !5126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_xtal_freq_get() local_unnamed_addr #10 !dbg !5127 {
  %1 = load i32, i32* @gXtalFreq, align 4, !dbg !5128
  ret i32 %1, !dbg !5129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_mcu_freq_get() local_unnamed_addr #10 !dbg !5130 {
  %1 = load i32, i32* @gCpuFrequency, align 4, !dbg !5131
  ret i32 %1, !dbg !5132
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON() local_unnamed_addr #11 !dbg !5133 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5137
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5137
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5135, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !5136, metadata !DIExpression()), !dbg !5139
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #19, !dbg !5140
  store volatile i32 %3, i32* %1, align 4, !dbg !5141
  %4 = load volatile i32, i32* %1, align 4, !dbg !5142
  %5 = lshr i32 %4, 28, !dbg !5143
  %6 = and i32 %5, 3, !dbg !5144
  store volatile i32 %6, i32* %1, align 4, !dbg !5145
  %7 = load volatile i32, i32* %1, align 4, !dbg !5146
  %8 = icmp eq i32 %7, 0, !dbg !5148
  br i1 %8, label %9, label %22, !dbg !5149

9:                                                ; preds = %0
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #19, !dbg !5150
  store volatile i32 %10, i32* %1, align 4, !dbg !5152
  %11 = load volatile i32, i32* %1, align 4, !dbg !5153
  %12 = and i32 %11, -16777217, !dbg !5154
  store volatile i32 %12, i32* %1, align 4, !dbg !5155
  %13 = load volatile i32, i32* %1, align 4, !dbg !5156
  %14 = or i32 %13, 536870912, !dbg !5157
  store volatile i32 %14, i32* %1, align 4, !dbg !5158
  %15 = load volatile i32, i32* %1, align 4, !dbg !5159
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %15) #19, !dbg !5160
  br label %16, !dbg !5161

16:                                               ; preds = %16, %9
  %17 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #19, !dbg !5162
  store volatile i32 %17, i32* %1, align 4, !dbg !5164
  %18 = load volatile i32, i32* %1, align 4, !dbg !5165
  %19 = and i32 %18, 134217728, !dbg !5166
  store volatile i32 %19, i32* %1, align 4, !dbg !5167
  %20 = load volatile i32, i32* %1, align 4, !dbg !5168
  %21 = icmp eq i32 %20, 0, !dbg !5169
  br i1 %21, label %16, label %22, !dbg !5170, !llvm.loop !5171

22:                                               ; preds = %16, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5173
  ret void, !dbg !5173
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @cmnReadRegister32(i8* noundef %0) unnamed_addr #9 !dbg !5174 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5181, metadata !DIExpression()), !dbg !5182
  %2 = bitcast i8* %0 to i32*, !dbg !5183
  %3 = load volatile i32, i32* %2, align 4, !dbg !5184
  ret i32 %3, !dbg !5185
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @cmnWriteRegister32(i8* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !5186 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5190, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata i32 %1, metadata !5191, metadata !DIExpression()), !dbg !5192
  %3 = bitcast i8* %0 to i32*, !dbg !5193
  store volatile i32 %1, i32* %3, align 4, !dbg !5194
  ret void, !dbg !5195
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON_PLL2ON(i8 noundef zeroext %0) local_unnamed_addr #11 !dbg !5196 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5198, metadata !DIExpression()), !dbg !5201
  %3 = bitcast i32* %2 to i8*, !dbg !5202
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5202
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5199, metadata !DIExpression()), !dbg !5203
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !5200, metadata !DIExpression()), !dbg !5201
  %4 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #19, !dbg !5204
  store volatile i32 %4, i32* %2, align 4, !dbg !5205
  %5 = load volatile i32, i32* %2, align 4, !dbg !5206
  %6 = lshr i32 %5, 28, !dbg !5207
  %7 = and i32 %6, 3, !dbg !5208
  store volatile i32 %7, i32* %2, align 4, !dbg !5209
  %8 = load volatile i32, i32* %2, align 4, !dbg !5210
  %9 = icmp eq i32 %8, 3, !dbg !5212
  br i1 %9, label %38, label %10, !dbg !5213

10:                                               ; preds = %1
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #19, !dbg !5214
  store volatile i32 %11, i32* %2, align 4, !dbg !5216
  %12 = load volatile i32, i32* %2, align 4, !dbg !5217
  %13 = and i32 %12, -262145, !dbg !5218
  store volatile i32 %13, i32* %2, align 4, !dbg !5219
  %14 = load volatile i32, i32* %2, align 4, !dbg !5220
  %15 = and i32 %14, -16777217, !dbg !5221
  store volatile i32 %15, i32* %2, align 4, !dbg !5222
  %16 = load volatile i32, i32* %2, align 4, !dbg !5223
  store volatile i32 %16, i32* %2, align 4, !dbg !5224
  %17 = load volatile i32, i32* %2, align 4, !dbg !5225
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %17) #19, !dbg !5226
  %18 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #19, !dbg !5227
  store volatile i32 %18, i32* %2, align 4, !dbg !5228
  %19 = load volatile i32, i32* %2, align 4, !dbg !5229
  %20 = and i32 %19, -805306369, !dbg !5230
  store volatile i32 %20, i32* %2, align 4, !dbg !5231
  %21 = load volatile i32, i32* %2, align 4, !dbg !5232
  %22 = and i32 %21, -16777217, !dbg !5233
  store volatile i32 %22, i32* %2, align 4, !dbg !5234
  %23 = load volatile i32, i32* %2, align 4, !dbg !5235
  %24 = or i32 %23, 805306368, !dbg !5236
  store volatile i32 %24, i32* %2, align 4, !dbg !5237
  %25 = load volatile i32, i32* %2, align 4, !dbg !5238
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %25) #19, !dbg !5239
  br label %26, !dbg !5240

26:                                               ; preds = %26, %10
  %27 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #19, !dbg !5241
  store volatile i32 %27, i32* %2, align 4, !dbg !5243
  %28 = load volatile i32, i32* %2, align 4, !dbg !5244
  %29 = and i32 %28, 67108864, !dbg !5245
  store volatile i32 %29, i32* %2, align 4, !dbg !5246
  %30 = load volatile i32, i32* %2, align 4, !dbg !5247
  %31 = icmp eq i32 %30, 0, !dbg !5248
  br i1 %31, label %26, label %32, !dbg !5249, !llvm.loop !5250

32:                                               ; preds = %26
  %33 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #19, !dbg !5252
  store volatile i32 %33, i32* %2, align 4, !dbg !5253
  %34 = load volatile i32, i32* %2, align 4, !dbg !5254
  %35 = and i32 %34, -262145, !dbg !5255
  store volatile i32 %35, i32* %2, align 4, !dbg !5256
  %36 = load volatile i32, i32* %2, align 4, !dbg !5257
  %37 = and i32 %36, -16777217, !dbg !5258
  store volatile i32 %37, i32* %2, align 4, !dbg !5259
  br label %38, !dbg !5260

38:                                               ; preds = %32, %1
  %39 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #19, !dbg !5261
  store volatile i32 %39, i32* %2, align 4, !dbg !5262
  %40 = icmp eq i8 %0, 0, !dbg !5263
  %41 = load volatile i32, i32* %2, align 4, !dbg !5265
  br i1 %40, label %44, label %42, !dbg !5266

42:                                               ; preds = %38
  %43 = or i32 %41, 262144, !dbg !5267
  store volatile i32 %43, i32* %2, align 4, !dbg !5269
  br label %45, !dbg !5270

44:                                               ; preds = %38
  store volatile i32 %41, i32* %2, align 4, !dbg !5271
  br label %45

45:                                               ; preds = %44, %42
  %46 = load volatile i32, i32* %2, align 4, !dbg !5273
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %46) #19, !dbg !5274
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5275
  ret void, !dbg !5275
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1OFF_PLL2OFF() local_unnamed_addr #11 !dbg !5276 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5280
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5280
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5278, metadata !DIExpression()), !dbg !5281
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !5279, metadata !DIExpression()), !dbg !5282
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #19, !dbg !5283
  store volatile i32 %3, i32* %1, align 4, !dbg !5284
  %4 = load volatile i32, i32* %1, align 4, !dbg !5285
  %5 = and i32 %4, -805306369, !dbg !5286
  store volatile i32 %5, i32* %1, align 4, !dbg !5287
  %6 = load volatile i32, i32* %1, align 4, !dbg !5288
  %7 = and i32 %6, -16777217, !dbg !5289
  store volatile i32 %7, i32* %1, align 4, !dbg !5290
  %8 = load volatile i32, i32* %1, align 4, !dbg !5291
  store volatile i32 %8, i32* %1, align 4, !dbg !5292
  %9 = load volatile i32, i32* %1, align 4, !dbg !5293
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %9) #19, !dbg !5294
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #19, !dbg !5295
  store volatile i32 %10, i32* %1, align 4, !dbg !5296
  %11 = load volatile i32, i32* %1, align 4, !dbg !5297
  %12 = and i32 %11, -262145, !dbg !5298
  store volatile i32 %12, i32* %1, align 4, !dbg !5299
  %13 = load volatile i32, i32* %1, align 4, !dbg !5300
  %14 = and i32 %13, -16777217, !dbg !5301
  store volatile i32 %14, i32* %1, align 4, !dbg !5302
  %15 = load volatile i32, i32* %1, align 4, !dbg !5303
  store volatile i32 %15, i32* %1, align 4, !dbg !5304
  %16 = load volatile i32, i32* %1, align 4, !dbg !5305
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %16) #19, !dbg !5306
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5307
  ret void, !dbg !5307
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureToXtal() local_unnamed_addr #3 !dbg !5308 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5310, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !5311, metadata !DIExpression()), !dbg !5314
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5315
  store volatile i32 %3, i32* %1, align 4, !dbg !5316
  %4 = load volatile i32, i32* %1, align 4, !dbg !5317
  %5 = and i32 %4, -8, !dbg !5318
  store volatile i32 %5, i32* %1, align 4, !dbg !5319
  %6 = load volatile i32, i32* %1, align 4, !dbg !5320
  store volatile i32 %6, i32* %1, align 4, !dbg !5321
  %7 = load volatile i32, i32* %1, align 4, !dbg !5322
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #19, !dbg !5323
  %8 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5324
  store volatile i32 %8, i32* %1, align 4, !dbg !5325
  %9 = load volatile i32, i32* %1, align 4, !dbg !5326
  %10 = and i32 %9, -49153, !dbg !5327
  store volatile i32 %10, i32* %1, align 4, !dbg !5328
  %11 = load volatile i32, i32* %1, align 4, !dbg !5329
  store volatile i32 %11, i32* %1, align 4, !dbg !5330
  %12 = load volatile i32, i32* %1, align 4, !dbg !5331
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %12) #19, !dbg !5332
  br label %13, !dbg !5333

13:                                               ; preds = %13, %0
  %14 = load volatile i32, i32* %1, align 4, !dbg !5334
  %15 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5335
  %16 = icmp eq i32 %14, %15, !dbg !5336
  br i1 %16, label %17, label %13, !dbg !5333, !llvm.loop !5337

17:                                               ; preds = %13
  %18 = tail call i32 @top_xtal_freq_get() #19, !dbg !5339
  store i32 %18, i32* @gCpuFrequency, align 4, !dbg !5340
  tail call void @SystemCoreClockUpdate() #21, !dbg !5341
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !5342
  %20 = udiv i32 %19, 1000, !dbg !5343
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #21, !dbg !5344
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5345
  ret void, !dbg !5345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo192M() local_unnamed_addr #3 !dbg !5346 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5350
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5350
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5348, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !5349, metadata !DIExpression()), !dbg !5352
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 1) #19, !dbg !5353
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5354
  store volatile i32 %3, i32* %1, align 4, !dbg !5355
  %4 = load volatile i32, i32* %1, align 4, !dbg !5356
  %5 = and i32 %4, -49153, !dbg !5357
  store volatile i32 %5, i32* %1, align 4, !dbg !5358
  %6 = load volatile i32, i32* %1, align 4, !dbg !5359
  %7 = or i32 %6, 16384, !dbg !5360
  store volatile i32 %7, i32* %1, align 4, !dbg !5361
  %8 = load volatile i32, i32* %1, align 4, !dbg !5362
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #19, !dbg !5363
  br label %9, !dbg !5364

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !5365
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5366
  %12 = icmp eq i32 %10, %11, !dbg !5367
  br i1 %12, label %13, label %9, !dbg !5364, !llvm.loop !5368

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5370
  store volatile i32 %14, i32* %1, align 4, !dbg !5371
  %15 = load volatile i32, i32* %1, align 4, !dbg !5372
  %16 = and i32 %15, -1009, !dbg !5373
  store volatile i32 %16, i32* %1, align 4, !dbg !5374
  %17 = load volatile i32, i32* %1, align 4, !dbg !5375
  %18 = or i32 %17, 128, !dbg !5376
  store volatile i32 %18, i32* %1, align 4, !dbg !5377
  %19 = load volatile i32, i32* %1, align 4, !dbg !5378
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #19, !dbg !5379
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5380
  store volatile i32 %20, i32* %1, align 4, !dbg !5381
  %21 = load volatile i32, i32* %1, align 4, !dbg !5382
  %22 = and i32 %21, -8, !dbg !5383
  store volatile i32 %22, i32* %1, align 4, !dbg !5384
  %23 = load volatile i32, i32* %1, align 4, !dbg !5385
  %24 = or i32 %23, 4, !dbg !5386
  store volatile i32 %24, i32* %1, align 4, !dbg !5387
  %25 = load volatile i32, i32* %1, align 4, !dbg !5388
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #19, !dbg !5389
  store i32 192000000, i32* @gCpuFrequency, align 4, !dbg !5390
  tail call void @SystemCoreClockUpdate() #21, !dbg !5391
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !5392
  %27 = udiv i32 %26, 1000, !dbg !5393
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #21, !dbg !5394
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5395
  ret void, !dbg !5395
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo160M() local_unnamed_addr #3 !dbg !5396 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5400
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5400
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5398, metadata !DIExpression()), !dbg !5401
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !5399, metadata !DIExpression()), !dbg !5402
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 0) #19, !dbg !5403
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5404
  store volatile i32 %3, i32* %1, align 4, !dbg !5405
  %4 = load volatile i32, i32* %1, align 4, !dbg !5406
  %5 = and i32 %4, -49153, !dbg !5407
  store volatile i32 %5, i32* %1, align 4, !dbg !5408
  %6 = load volatile i32, i32* %1, align 4, !dbg !5409
  %7 = or i32 %6, 32768, !dbg !5410
  store volatile i32 %7, i32* %1, align 4, !dbg !5411
  %8 = load volatile i32, i32* %1, align 4, !dbg !5412
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #19, !dbg !5413
  br label %9, !dbg !5414

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !5415
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5416
  %12 = icmp eq i32 %10, %11, !dbg !5417
  br i1 %12, label %13, label %9, !dbg !5414, !llvm.loop !5418

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5420
  store volatile i32 %14, i32* %1, align 4, !dbg !5421
  %15 = load volatile i32, i32* %1, align 4, !dbg !5422
  %16 = and i32 %15, -1009, !dbg !5423
  store volatile i32 %16, i32* %1, align 4, !dbg !5424
  %17 = load volatile i32, i32* %1, align 4, !dbg !5425
  %18 = or i32 %17, 32, !dbg !5426
  store volatile i32 %18, i32* %1, align 4, !dbg !5427
  %19 = load volatile i32, i32* %1, align 4, !dbg !5428
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #19, !dbg !5429
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5430
  store volatile i32 %20, i32* %1, align 4, !dbg !5431
  %21 = load volatile i32, i32* %1, align 4, !dbg !5432
  %22 = and i32 %21, -8, !dbg !5433
  store volatile i32 %22, i32* %1, align 4, !dbg !5434
  %23 = load volatile i32, i32* %1, align 4, !dbg !5435
  %24 = or i32 %23, 4, !dbg !5436
  store volatile i32 %24, i32* %1, align 4, !dbg !5437
  %25 = load volatile i32, i32* %1, align 4, !dbg !5438
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #19, !dbg !5439
  store i32 160000000, i32* @gCpuFrequency, align 4, !dbg !5440
  tail call void @SystemCoreClockUpdate() #21, !dbg !5441
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !5442
  %27 = udiv i32 %26, 1000, !dbg !5443
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #21, !dbg !5444
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5445
  ret void, !dbg !5445
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo64M() local_unnamed_addr #3 !dbg !5446 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5450
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5450
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5448, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !5449, metadata !DIExpression()), !dbg !5452
  tail call void @cmnPLL1ON() #19, !dbg !5453
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5454
  store volatile i32 %3, i32* %1, align 4, !dbg !5455
  %4 = load volatile i32, i32* %1, align 4, !dbg !5456
  %5 = and i32 %4, -49153, !dbg !5457
  store volatile i32 %5, i32* %1, align 4, !dbg !5458
  %6 = load volatile i32, i32* %1, align 4, !dbg !5459
  store volatile i32 %6, i32* %1, align 4, !dbg !5460
  %7 = load volatile i32, i32* %1, align 4, !dbg !5461
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #19, !dbg !5462
  br label %8, !dbg !5463

8:                                                ; preds = %8, %0
  %9 = load volatile i32, i32* %1, align 4, !dbg !5464
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5465
  %11 = icmp eq i32 %9, %10, !dbg !5466
  br i1 %11, label %12, label %8, !dbg !5463, !llvm.loop !5467

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #19, !dbg !5469
  store volatile i32 %13, i32* %1, align 4, !dbg !5470
  %14 = load volatile i32, i32* %1, align 4, !dbg !5471
  %15 = and i32 %14, -8, !dbg !5472
  store volatile i32 %15, i32* %1, align 4, !dbg !5473
  %16 = load volatile i32, i32* %1, align 4, !dbg !5474
  %17 = or i32 %16, 2, !dbg !5475
  store volatile i32 %17, i32* %1, align 4, !dbg !5476
  %18 = load volatile i32, i32* %1, align 4, !dbg !5477
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %18) #19, !dbg !5478
  store i32 64000000, i32* @gCpuFrequency, align 4, !dbg !5479
  tail call void @SystemCoreClockUpdate() #21, !dbg !5480
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !5481
  %20 = udiv i32 %19, 1000, !dbg !5482
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #21, !dbg !5483
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5484
  ret void, !dbg !5484
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfToXtal() local_unnamed_addr #11 section ".ramTEXT" !dbg !5485 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5489
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5489
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5487, metadata !DIExpression()), !dbg !5490
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !5488, metadata !DIExpression()), !dbg !5491
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #19, !dbg !5492
  store volatile i32 %3, i32* %1, align 4, !dbg !5493
  %4 = load volatile i32, i32* %1, align 4, !dbg !5494
  %5 = and i32 %4, -24577, !dbg !5495
  store volatile i32 %5, i32* %1, align 4, !dbg !5496
  %6 = load volatile i32, i32* %1, align 4, !dbg !5497
  store volatile i32 %6, i32* %1, align 4, !dbg !5498
  %7 = load volatile i32, i32* %1, align 4, !dbg !5499
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %7) #19, !dbg !5500
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5501
  ret void, !dbg !5501
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfTo64M() local_unnamed_addr #11 section ".ramTEXT" !dbg !5502 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5512
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5512
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5504, metadata !DIExpression()), !dbg !5513
  store volatile i32 0, i32* %1, align 4, !dbg !5513
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !5505, metadata !DIExpression()), !dbg !5514
  tail call void @cmnPLL1ON() #19, !dbg !5515
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #19, !dbg !5516
  store volatile i32 %3, i32* %1, align 4, !dbg !5517
  %4 = load volatile i32, i32* %1, align 4, !dbg !5518
  %5 = and i32 %4, -24577, !dbg !5519
  store volatile i32 %5, i32* %1, align 4, !dbg !5520
  %6 = load volatile i32, i32* %1, align 4, !dbg !5521
  %7 = or i32 %6, 8192, !dbg !5522
  store volatile i32 %7, i32* %1, align 4, !dbg !5523
  %8 = load volatile i32, i32* %1, align 4, !dbg !5524
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %8) #19, !dbg !5525
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !5506, metadata !DIExpression()), !dbg !5526
  %9 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !5527
  %10 = and i32 %9, -4, !dbg !5527
  store volatile i32 %10, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !5527
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !5508, metadata !DIExpression()), !dbg !5528
  %11 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !5529
  %12 = or i32 %11, 16, !dbg !5529
  store volatile i32 %12, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !5529
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693208 to i32*), metadata !5510, metadata !DIExpression()), !dbg !5530
  %13 = load volatile i32, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !5531
  %14 = and i32 %13, -64, !dbg !5531
  %15 = or i32 %14, 24, !dbg !5531
  store volatile i32 %15, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !5531
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5532
  ret void, !dbg !5532
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc() local_unnamed_addr #9 !dbg !5533 {
  %1 = tail call i32 @getc_nowait() #19, !dbg !5536
  call void @llvm.dbg.value(metadata i32 %1, metadata !5535, metadata !DIExpression()), !dbg !5537
  ret i32 %1, !dbg !5538
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc_nowait() local_unnamed_addr #9 !dbg !5539 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096955372 to i32*), align 4, !dbg !5542
  %2 = and i32 %1, 1, !dbg !5544
  %3 = icmp eq i32 %2, 0, !dbg !5544
  br i1 %3, label %7, label %4, !dbg !5545

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -2096955392 to i32*), align 65536, !dbg !5546
  %6 = and i32 %5, 255, !dbg !5548
  call void @llvm.dbg.value(metadata i32 %5, metadata !5541, metadata !DIExpression()), !dbg !5549
  br label %7, !dbg !5550

7:                                                ; preds = %0, %4
  %8 = phi i32 [ %6, %4 ], [ -1, %0 ], !dbg !5551
  ret i32 %8, !dbg !5552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_output_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !5553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5558, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata i8 %1, metadata !5559, metadata !DIExpression()), !dbg !5561
  %3 = icmp eq i32 %0, 0, !dbg !5562
  %4 = select i1 %3, i32 -2096955392, i32 -2096889856, !dbg !5562
  call void @llvm.dbg.value(metadata i32 %4, metadata !5560, metadata !DIExpression()), !dbg !5561
  %5 = or i32 %4, 20
  %6 = inttoptr i32 %5 to i32*
  br label %7, !dbg !5563

7:                                                ; preds = %7, %2
  %8 = load volatile i32, i32* %6, align 4, !dbg !5564
  %9 = and i32 %8, 32, !dbg !5565
  %10 = icmp eq i32 %9, 0, !dbg !5566
  br i1 %10, label %7, label %11, !dbg !5563, !llvm.loop !5567

11:                                               ; preds = %7
  %12 = zext i8 %1 to i32, !dbg !5569
  %13 = inttoptr i32 %4 to i32*, !dbg !5570
  store volatile i32 %12, i32* %13, align 65536, !dbg !5571
  ret void, !dbg !5572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_input_char(i32 noundef %0) local_unnamed_addr #1 !dbg !5573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5577, metadata !DIExpression()), !dbg !5580
  %2 = icmp eq i32 %0, 0, !dbg !5581
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5581
  call void @llvm.dbg.value(metadata i32 %3, metadata !5578, metadata !DIExpression()), !dbg !5580
  %4 = or i32 %3, 20
  %5 = inttoptr i32 %4 to i32*
  br label %6, !dbg !5582

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* %5, align 4, !dbg !5583
  %8 = and i32 %7, 1, !dbg !5584
  %9 = icmp eq i32 %8, 0, !dbg !5585
  br i1 %9, label %6, label %10, !dbg !5582, !llvm.loop !5586

10:                                               ; preds = %6
  %11 = inttoptr i32 %3 to i32*, !dbg !5588
  %12 = load volatile i32, i32* %11, align 65536, !dbg !5588
  %13 = trunc i32 %12 to i8, !dbg !5588
  call void @llvm.dbg.value(metadata i8 %13, metadata !5579, metadata !DIExpression()), !dbg !5580
  ret i8 %13, !dbg !5589
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_input_char_unblocking(i32 noundef %0) local_unnamed_addr #9 !dbg !5590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5594, metadata !DIExpression()), !dbg !5597
  %2 = icmp eq i32 %0, 0, !dbg !5598
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5598
  call void @llvm.dbg.value(metadata i32 %3, metadata !5595, metadata !DIExpression()), !dbg !5597
  %4 = or i32 %3, 20, !dbg !5599
  %5 = inttoptr i32 %4 to i32*, !dbg !5599
  %6 = load volatile i32, i32* %5, align 4, !dbg !5599
  %7 = and i32 %6, 1, !dbg !5601
  %8 = icmp eq i32 %7, 0, !dbg !5601
  br i1 %8, label %13, label %9, !dbg !5602

9:                                                ; preds = %1
  %10 = inttoptr i32 %3 to i32*, !dbg !5603
  %11 = load volatile i32, i32* %10, align 65536, !dbg !5603
  %12 = and i32 %11, 255, !dbg !5605
  call void @llvm.dbg.value(metadata i32 %11, metadata !5596, metadata !DIExpression()), !dbg !5597
  br label %13, !dbg !5606

13:                                               ; preds = %1, %9
  %14 = phi i32 [ %12, %9 ], [ -1, %1 ], !dbg !5607
  ret i32 %14, !dbg !5608
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_HWInit(i32 noundef %0) local_unnamed_addr #3 !dbg !5609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5613, metadata !DIExpression()), !dbg !5614
  tail call void @halUART_SetFormat(i32 noundef %0, i32 noundef 115200, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 0) #19, !dbg !5615
  switch i32 %0, label %7 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !5616

2:                                                ; preds = %1
  br label %3, !dbg !5617

3:                                                ; preds = %1, %2
  %4 = phi i32* [ inttoptr (i32 -2096889780 to i32*), %2 ], [ inttoptr (i32 -2096955316 to i32*), %1 ]
  %5 = load volatile i32, i32* %4, align 4, !dbg !5621
  %6 = or i32 %5, 1, !dbg !5621
  store volatile i32 %6, i32* %4, align 4, !dbg !5621
  br label %7, !dbg !5622

7:                                                ; preds = %3, %1
  ret void, !dbg !5622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_SetFormat(i32 noundef %0, i32 noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #3 !dbg !5623 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5627, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata i32 %1, metadata !5628, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata i16 %2, metadata !5629, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata i16 %3, metadata !5630, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata i16 %4, metadata !5631, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata i32 -2096955392, metadata !5633, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, metadata !5640, metadata !DIExpression()), !dbg !5645
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, metadata !5642, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.value(metadata i32 0, metadata !5643, metadata !DIExpression()), !dbg !5644
  %6 = tail call i32 @top_xtal_freq_get() #21, !dbg !5647
  store i32 %6, i32* @gUartClkFreq, align 4, !dbg !5648
  %7 = icmp eq i32 %0, 1, !dbg !5649
  %8 = select i1 %7, i32 -2096889856, i32 -2096955392, !dbg !5649
  call void @llvm.dbg.value(metadata i32 %8, metadata !5633, metadata !DIExpression()), !dbg !5644
  %9 = or i32 %8, 36, !dbg !5650
  %10 = inttoptr i32 %9 to i32*, !dbg !5650
  store volatile i32 3, i32* %10, align 4, !dbg !5651
  %11 = or i32 %8, 12, !dbg !5652
  %12 = inttoptr i32 %11 to i32*, !dbg !5652
  %13 = load volatile i32, i32* %12, align 4, !dbg !5652
  call void @llvm.dbg.value(metadata i32 %13, metadata !5635, metadata !DIExpression()), !dbg !5644
  %14 = or i32 %13, 128, !dbg !5653
  store volatile i32 %14, i32* %12, align 4, !dbg !5654
  %15 = load i32, i32* @gUartClkFreq, align 4, !dbg !5655
  %16 = udiv i32 %15, %1, !dbg !5656
  call void @llvm.dbg.value(metadata i32 %16, metadata !5634, metadata !DIExpression()), !dbg !5644
  %17 = lshr i32 %16, 8, !dbg !5657
  %18 = add nuw nsw i32 %17, 1, !dbg !5658
  call void @llvm.dbg.value(metadata i32 %18, metadata !5636, metadata !DIExpression()), !dbg !5644
  %19 = udiv i32 %16, %18, !dbg !5659
  %20 = add i32 %19, -1, !dbg !5661
  call void @llvm.dbg.value(metadata i32 %20, metadata !5637, metadata !DIExpression()), !dbg !5644
  %21 = icmp eq i32 %20, 3, !dbg !5662
  %22 = lshr i32 %20, 1, !dbg !5664
  %23 = add nsw i32 %22, -1, !dbg !5664
  %24 = select i1 %21, i32 0, i32 %23, !dbg !5664
  call void @llvm.dbg.value(metadata i32 %24, metadata !5638, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata i32 undef, metadata !5643, metadata !DIExpression()), !dbg !5644
  %25 = mul i32 %15, 10, !dbg !5665
  %26 = udiv i32 %25, %1, !dbg !5666
  %27 = udiv i32 %26, %16, !dbg !5667
  %28 = mul i32 %19, -10, !dbg !5668
  %29 = add i32 %27, %28, !dbg !5669
  %30 = urem i32 %29, 10, !dbg !5670
  call void @llvm.dbg.value(metadata i32 %30, metadata !5639, metadata !DIExpression()), !dbg !5644
  %31 = and i32 %18, 255, !dbg !5671
  %32 = inttoptr i32 %8 to i32*, !dbg !5672
  store volatile i32 %31, i32* %32, align 65536, !dbg !5673
  %33 = lshr i32 %18, 8, !dbg !5674
  %34 = and i32 %33, 255, !dbg !5675
  %35 = or i32 %8, 4, !dbg !5676
  %36 = inttoptr i32 %35 to i32*, !dbg !5676
  store volatile i32 %34, i32* %36, align 4, !dbg !5677
  %37 = or i32 %8, 40, !dbg !5678
  %38 = inttoptr i32 %37 to i32*, !dbg !5678
  store volatile i32 %20, i32* %38, align 8, !dbg !5679
  %39 = or i32 %8, 44, !dbg !5680
  %40 = inttoptr i32 %39 to i32*, !dbg !5680
  store volatile i32 %24, i32* %40, align 4, !dbg !5681
  %41 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, i32 0, i32 %30, !dbg !5682
  %42 = load i16, i16* %41, align 2, !dbg !5682
  %43 = zext i16 %42 to i32, !dbg !5682
  %44 = or i32 %8, 88, !dbg !5683
  %45 = inttoptr i32 %44 to i32*, !dbg !5683
  store volatile i32 %43, i32* %45, align 8, !dbg !5684
  %46 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, i32 0, i32 %30, !dbg !5685
  %47 = load i16, i16* %46, align 2, !dbg !5685
  %48 = zext i16 %47 to i32, !dbg !5685
  %49 = or i32 %8, 84, !dbg !5686
  %50 = inttoptr i32 %49 to i32*, !dbg !5686
  store volatile i32 %48, i32* %50, align 4, !dbg !5687
  store volatile i32 %13, i32* %12, align 4, !dbg !5688
  %51 = or i32 %8, 8, !dbg !5689
  %52 = inttoptr i32 %51 to i32*, !dbg !5689
  store volatile i32 71, i32* %52, align 8, !dbg !5690
  %53 = inttoptr i32 %11 to i16*, !dbg !5691
  %54 = load volatile i16, i16* %53, align 4, !dbg !5691
  call void @llvm.dbg.value(metadata i16 %54, metadata !5632, metadata !DIExpression()), !dbg !5644
  %55 = and i16 %54, -64, !dbg !5692
  call void @llvm.dbg.value(metadata i16 %54, metadata !5632, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !5644
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %2), metadata !5632, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5644
  %56 = and i16 %2, -61, !dbg !5693
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %56), metadata !5632, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5644
  call void @llvm.dbg.value(metadata !DIArgList(i16 %55, i16 %4, i16 %56), metadata !5632, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5644
  %57 = and i16 %4, -57, !dbg !5694
  call void @llvm.dbg.value(metadata i16 undef, metadata !5632, metadata !DIExpression()), !dbg !5644
  %58 = or i16 %56, %3, !dbg !5693
  %59 = or i16 %58, %57, !dbg !5694
  %60 = or i16 %59, %55, !dbg !5695
  call void @llvm.dbg.value(metadata i16 %60, metadata !5632, metadata !DIExpression()), !dbg !5644
  store volatile i16 %60, i16* %53, align 4, !dbg !5696
  ret void, !dbg !5697
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #9 !dbg !5698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5702, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i32 %1, metadata !5703, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.value(metadata i32* %2, metadata !5704, metadata !DIExpression()), !dbg !5705
  %4 = icmp eq i32 %0, 0, !dbg !5706
  %5 = icmp eq i32 %1, 0, !dbg !5708
  br i1 %4, label %6, label %16, !dbg !5709

6:                                                ; preds = %3
  br i1 %5, label %10, label %7, !dbg !5710

7:                                                ; preds = %6
  %8 = load volatile i16, i16* inttoptr (i32 -2097082568 to i16*), align 8, !dbg !5712
  %9 = zext i16 %8 to i32, !dbg !5712
  br label %26, !dbg !5715

10:                                               ; preds = %6
  %11 = load volatile i16, i16* inttoptr (i32 -2097082812 to i16*), align 4, !dbg !5716
  %12 = zext i16 %11 to i32, !dbg !5716
  store i32 %12, i32* %2, align 4, !dbg !5718
  %13 = load volatile i16, i16* inttoptr (i32 -2097082824 to i16*), align 8, !dbg !5719
  %14 = zext i16 %13 to i32, !dbg !5719
  %15 = sub nsw i32 %12, %14, !dbg !5720
  br label %26

16:                                               ; preds = %3
  br i1 %5, label %20, label %17, !dbg !5721

17:                                               ; preds = %16
  %18 = load volatile i16, i16* inttoptr (i32 -2097082056 to i16*), align 8, !dbg !5723
  %19 = zext i16 %18 to i32, !dbg !5723
  br label %26, !dbg !5726

20:                                               ; preds = %16
  %21 = load volatile i16, i16* inttoptr (i32 -2097082300 to i16*), align 4, !dbg !5727
  %22 = zext i16 %21 to i32, !dbg !5727
  store i32 %22, i32* %2, align 4, !dbg !5729
  %23 = load volatile i16, i16* inttoptr (i32 -2097082312 to i16*), align 8, !dbg !5730
  %24 = zext i16 %23 to i32, !dbg !5730
  %25 = sub nsw i32 %22, %24, !dbg !5731
  br label %26

26:                                               ; preds = %17, %20, %7, %10
  %27 = phi i32 [ %19, %17 ], [ %25, %20 ], [ %9, %7 ], [ %15, %10 ]
  store i32 %27, i32* %2, align 4, !dbg !5708
  ret void, !dbg !5732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Read_VFIFO_Data(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5737, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata i8* %1, metadata !5738, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata i32 %2, metadata !5739, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata i32 0, metadata !5740, metadata !DIExpression()), !dbg !5741
  call void @llvm.dbg.value(metadata i32 0, metadata !5740, metadata !DIExpression()), !dbg !5741
  %4 = icmp eq i32 %2, 0, !dbg !5742
  br i1 %4, label %15, label %5, !dbg !5745

5:                                                ; preds = %3, %12
  %6 = phi i32 [ %13, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5740, metadata !DIExpression()), !dbg !5741
  switch i32 %0, label %12 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !5746

7:                                                ; preds = %5
  br label %8, !dbg !5748

8:                                                ; preds = %5, %7
  %9 = phi i8* [ inttoptr (i32 2030044416 to i8*), %7 ], [ inttoptr (i32 2030043904 to i8*), %5 ]
  %10 = load volatile i8, i8* %9, align 256, !dbg !5752
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !5752
  store i8 %10, i8* %11, align 1, !dbg !5752
  br label %12, !dbg !5753

12:                                               ; preds = %8, %5
  %13 = add nuw i32 %6, 1, !dbg !5753
  call void @llvm.dbg.value(metadata i32 %13, metadata !5740, metadata !DIExpression()), !dbg !5741
  %14 = icmp eq i32 %13, %2, !dbg !5742
  br i1 %14, label %15, label %5, !dbg !5745, !llvm.loop !5754

15:                                               ; preds = %12, %3
  ret void, !dbg !5756
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Write_VFIFO_Data(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5761, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata i8* %1, metadata !5762, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata i32 %2, metadata !5763, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata i32 0, metadata !5764, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.value(metadata i32 0, metadata !5764, metadata !DIExpression()), !dbg !5765
  %4 = icmp eq i32 %2, 0, !dbg !5766
  br i1 %4, label %16, label %5, !dbg !5769

5:                                                ; preds = %3, %13
  %6 = phi i32 [ %14, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5764, metadata !DIExpression()), !dbg !5765
  switch i32 %0, label %13 [
    i32 0, label %7
    i32 1, label %10
  ], !dbg !5770

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !5772
  %9 = load i8, i8* %8, align 1, !dbg !5772
  store volatile i8 %9, i8* inttoptr (i32 2030043648 to i8*), align 512, !dbg !5775
  br label %13, !dbg !5776

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !5777
  %12 = load i8, i8* %11, align 1, !dbg !5777
  store volatile i8 %12, i8* inttoptr (i32 2030044160 to i8*), align 1024, !dbg !5780
  br label %13, !dbg !5781

13:                                               ; preds = %5, %7, %10
  %14 = add nuw i32 %6, 1, !dbg !5782
  call void @llvm.dbg.value(metadata i32 %14, metadata !5764, metadata !DIExpression()), !dbg !5765
  %15 = icmp eq i32 %14, %2, !dbg !5766
  br i1 %15, label %16, label %5, !dbg !5769, !llvm.loop !5783

16:                                               ; preds = %13, %3
  ret void, !dbg !5785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Tx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !5786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5790, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.value(metadata i8* %1, metadata !5791, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.value(metadata i32 %2, metadata !5792, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.value(metadata i32 %3, metadata !5793, metadata !DIExpression()), !dbg !5794
  switch i32 %0, label %9 [
    i32 0, label %6
    i32 1, label %5
  ], !dbg !5795

5:                                                ; preds = %4
  br label %6, !dbg !5796

6:                                                ; preds = %4, %5
  %7 = phi i32 [ 16, %5 ], [ 14, %4 ]
  %8 = ptrtoint i8* %1 to i32, !dbg !5800
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %8, i32 noundef %2, i32 noundef %7, i32 noundef 0, i32 noundef %3, i32 noundef 0) #21, !dbg !5800
  tail call void @DMA_Vfifo_Flush(i32 noundef %7) #21, !dbg !5800
  br label %9, !dbg !5801

9:                                                ; preds = %6, %4
  ret void, !dbg !5801
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Rx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #3 !dbg !5802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5806, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i8* %1, metadata !5807, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 %2, metadata !5808, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 %3, metadata !5809, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 %4, metadata !5810, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.value(metadata i32 %5, metadata !5811, metadata !DIExpression()), !dbg !5812
  switch i32 %0, label %11 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !5813

7:                                                ; preds = %6
  br label %8, !dbg !5814

8:                                                ; preds = %6, %7
  %9 = phi i32 [ 17, %7 ], [ 15, %6 ]
  %10 = ptrtoint i8* %1 to i32, !dbg !5818
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %10, i32 noundef %2, i32 noundef %9, i32 noundef %3, i32 noundef %4, i32 noundef %5) #21, !dbg !5818
  tail call void @DMA_Vfifo_Flush(i32 noundef %9) #21, !dbg !5818
  br label %11, !dbg !5819

11:                                               ; preds = %8, %6
  ret void, !dbg !5819
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #3 !dbg !5820 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5824, metadata !DIExpression()), !dbg !5826
  call void @llvm.dbg.value(metadata void ()* %1, metadata !5825, metadata !DIExpression()), !dbg !5826
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !5827

3:                                                ; preds = %2
  br label %4, !dbg !5828

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef %5, void ()* noundef %1) #21, !dbg !5832
  br label %6, !dbg !5833

6:                                                ; preds = %4, %2
  ret void, !dbg !5833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #3 !dbg !5834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5836, metadata !DIExpression()), !dbg !5838
  call void @llvm.dbg.value(metadata void ()* %1, metadata !5837, metadata !DIExpression()), !dbg !5838
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !5839

3:                                                ; preds = %2
  br label %4, !dbg !5840

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_TO_Callback(i32 noundef %5, void ()* noundef %1) #21, !dbg !5844
  br label %6, !dbg !5845

6:                                                ; preds = %4, %2
  ret void, !dbg !5845
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #1 !dbg !5846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5848, metadata !DIExpression()), !dbg !5852
  %2 = icmp eq i32 %0, 0, !dbg !5853
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5853
  call void @llvm.dbg.value(metadata i32 %3, metadata !5849, metadata !DIExpression()), !dbg !5852
  %4 = or i32 %3, 12, !dbg !5854
  %5 = inttoptr i32 %4 to i32*, !dbg !5854
  %6 = load volatile i32, i32* %5, align 4, !dbg !5854
  call void @llvm.dbg.value(metadata i32 %6, metadata !5851, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5852
  store volatile i32 191, i32* %5, align 4, !dbg !5855
  %7 = or i32 %3, 8, !dbg !5856
  %8 = inttoptr i32 %7 to i32*, !dbg !5856
  %9 = load volatile i32, i32* %8, align 8, !dbg !5856
  call void @llvm.dbg.value(metadata i32 %9, metadata !5850, metadata !DIExpression()), !dbg !5852
  %10 = and i32 %9, 65327, !dbg !5857
  %11 = or i32 %10, 208, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %9, metadata !5850, metadata !DIExpression(DW_OP_constu, 208, DW_OP_or, DW_OP_stack_value)), !dbg !5852
  store volatile i32 %11, i32* %8, align 8, !dbg !5858
  %12 = or i32 %3, 68, !dbg !5859
  %13 = inttoptr i32 %12 to i32*, !dbg !5859
  store volatile i32 0, i32* %13, align 4, !dbg !5860
  store volatile i32 0, i32* %5, align 4, !dbg !5861
  %14 = or i32 %3, 16, !dbg !5862
  %15 = inttoptr i32 %14 to i32*, !dbg !5862
  store volatile i32 2, i32* %15, align 16, !dbg !5863
  %16 = and i32 %6, 65535, !dbg !5864
  store volatile i32 %16, i32* %5, align 4, !dbg !5865
  ret void, !dbg !5866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #1 !dbg !5867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5871, metadata !DIExpression()), !dbg !5878
  call void @llvm.dbg.value(metadata i8 %1, metadata !5872, metadata !DIExpression()), !dbg !5878
  call void @llvm.dbg.value(metadata i8 %2, metadata !5873, metadata !DIExpression()), !dbg !5878
  call void @llvm.dbg.value(metadata i8 %3, metadata !5874, metadata !DIExpression()), !dbg !5878
  %5 = icmp eq i32 %0, 0, !dbg !5879
  %6 = select i1 %5, i32 -2096955392, i32 -2096889856, !dbg !5879
  call void @llvm.dbg.value(metadata i32 %6, metadata !5875, metadata !DIExpression()), !dbg !5878
  %7 = or i32 %6, 12, !dbg !5880
  %8 = inttoptr i32 %7 to i32*, !dbg !5880
  %9 = load volatile i32, i32* %8, align 4, !dbg !5880
  call void @llvm.dbg.value(metadata i32 %9, metadata !5877, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5878
  store volatile i32 191, i32* %8, align 4, !dbg !5881
  %10 = zext i8 %1 to i32, !dbg !5882
  %11 = or i32 %6, 16, !dbg !5883
  %12 = inttoptr i32 %11 to i32*, !dbg !5883
  store volatile i32 %10, i32* %12, align 16, !dbg !5884
  %13 = or i32 %6, 20, !dbg !5885
  %14 = inttoptr i32 %13 to i32*, !dbg !5885
  store volatile i32 %10, i32* %14, align 4, !dbg !5886
  %15 = zext i8 %2 to i32, !dbg !5887
  %16 = or i32 %6, 24, !dbg !5888
  %17 = inttoptr i32 %16 to i32*, !dbg !5888
  store volatile i32 %15, i32* %17, align 8, !dbg !5889
  %18 = or i32 %6, 28, !dbg !5890
  %19 = inttoptr i32 %18 to i32*, !dbg !5890
  store volatile i32 %15, i32* %19, align 4, !dbg !5891
  %20 = or i32 %6, 8, !dbg !5892
  %21 = inttoptr i32 %20 to i32*, !dbg !5892
  %22 = load volatile i32, i32* %21, align 8, !dbg !5892
  call void @llvm.dbg.value(metadata i32 %22, metadata !5876, metadata !DIExpression()), !dbg !5878
  %23 = and i32 %22, 65525, !dbg !5893
  %24 = or i32 %23, 10, !dbg !5893
  call void @llvm.dbg.value(metadata i32 %22, metadata !5876, metadata !DIExpression(DW_OP_constu, 10, DW_OP_or, DW_OP_stack_value)), !dbg !5878
  store volatile i32 %24, i32* %21, align 8, !dbg !5894
  %25 = and i32 %9, 65535, !dbg !5895
  store volatile i32 %25, i32* %8, align 4, !dbg !5896
  %26 = zext i8 %3 to i32, !dbg !5897
  %27 = or i32 %6, 64, !dbg !5898
  %28 = inttoptr i32 %27 to i32*, !dbg !5898
  store volatile i32 %26, i32* %28, align 64, !dbg !5899
  %29 = or i32 %6, 68, !dbg !5900
  %30 = inttoptr i32 %29 to i32*, !dbg !5900
  store volatile i32 1, i32* %30, align 4, !dbg !5901
  ret void, !dbg !5902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #1 !dbg !5903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5905, metadata !DIExpression()), !dbg !5908
  %2 = icmp eq i32 %0, 0, !dbg !5909
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5909
  call void @llvm.dbg.value(metadata i32 %3, metadata !5906, metadata !DIExpression()), !dbg !5908
  %4 = or i32 %3, 12, !dbg !5910
  %5 = inttoptr i32 %4 to i32*, !dbg !5910
  %6 = load volatile i32, i32* %5, align 4, !dbg !5910
  call void @llvm.dbg.value(metadata i32 %6, metadata !5907, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5908
  store volatile i32 191, i32* %5, align 4, !dbg !5911
  %7 = or i32 %3, 8, !dbg !5912
  %8 = inttoptr i32 %7 to i32*, !dbg !5912
  store volatile i32 0, i32* %8, align 8, !dbg !5913
  store volatile i32 0, i32* %5, align 4, !dbg !5914
  %9 = and i32 %6, 65535, !dbg !5915
  store volatile i32 %9, i32* %5, align 4, !dbg !5916
  ret void, !dbg !5917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(i32 noundef %0) local_unnamed_addr #1 !dbg !5918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5920, metadata !DIExpression()), !dbg !5922
  %2 = icmp eq i32 %0, 0, !dbg !5923
  call void @llvm.dbg.value(metadata i32 undef, metadata !5921, metadata !DIExpression()), !dbg !5922
  %3 = select i1 %2, i32 -2096955320, i32 -2096889784, !dbg !5924
  %4 = inttoptr i32 %3 to i32*, !dbg !5924
  store volatile i32 1, i32* %4, align 8, !dbg !5925
  ret void, !dbg !5926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(i32 noundef %0) local_unnamed_addr #1 !dbg !5927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5929, metadata !DIExpression()), !dbg !5933
  %2 = icmp eq i32 %0, 0, !dbg !5934
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5934
  call void @llvm.dbg.value(metadata i32 %3, metadata !5930, metadata !DIExpression()), !dbg !5933
  %4 = or i32 %3, 12, !dbg !5935
  %5 = inttoptr i32 %4 to i32*, !dbg !5935
  %6 = load volatile i32, i32* %5, align 4, !dbg !5935
  call void @llvm.dbg.value(metadata i32 %6, metadata !5932, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5933
  store volatile i32 0, i32* %5, align 4, !dbg !5936
  %7 = or i32 %3, 4, !dbg !5937
  %8 = inttoptr i32 %7 to i32*, !dbg !5937
  %9 = load volatile i32, i32* %8, align 4, !dbg !5937
  call void @llvm.dbg.value(metadata i32 %9, metadata !5931, metadata !DIExpression()), !dbg !5933
  %10 = and i32 %9, 65533, !dbg !5938
  %11 = or i32 %10, 2, !dbg !5938
  call void @llvm.dbg.value(metadata i32 %9, metadata !5931, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !5933
  store volatile i32 %11, i32* %8, align 4, !dbg !5939
  %12 = and i32 %6, 65535, !dbg !5940
  store volatile i32 %12, i32* %5, align 4, !dbg !5941
  %13 = or i32 %3, 72, !dbg !5942
  %14 = inttoptr i32 %13 to i32*, !dbg !5942
  store volatile i32 1, i32* %14, align 8, !dbg !5943
  ret void, !dbg !5944
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_mask_send_interrupt(i32 noundef %0) local_unnamed_addr #1 !dbg !5945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5947, metadata !DIExpression()), !dbg !5951
  %2 = icmp eq i32 %0, 0, !dbg !5952
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5952
  call void @llvm.dbg.value(metadata i32 %3, metadata !5948, metadata !DIExpression()), !dbg !5951
  %4 = or i32 %3, 12, !dbg !5953
  %5 = inttoptr i32 %4 to i32*, !dbg !5953
  %6 = load volatile i32, i32* %5, align 4, !dbg !5953
  call void @llvm.dbg.value(metadata i32 %6, metadata !5950, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5951
  store volatile i32 0, i32* %5, align 4, !dbg !5954
  %7 = or i32 %3, 4, !dbg !5955
  %8 = inttoptr i32 %7 to i32*, !dbg !5955
  %9 = load volatile i32, i32* %8, align 4, !dbg !5955
  call void @llvm.dbg.value(metadata i32 %9, metadata !5949, metadata !DIExpression()), !dbg !5951
  %10 = and i32 %9, 65533, !dbg !5956
  call void @llvm.dbg.value(metadata i32 %10, metadata !5949, metadata !DIExpression()), !dbg !5951
  store volatile i32 %10, i32* %8, align 4, !dbg !5957
  %11 = and i32 %6, 65535, !dbg !5958
  store volatile i32 %11, i32* %5, align 4, !dbg !5959
  %12 = or i32 %3, 72, !dbg !5960
  %13 = inttoptr i32 %12 to i32*, !dbg !5960
  store volatile i32 0, i32* %13, align 8, !dbg !5961
  ret void, !dbg !5962
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #3 !dbg !5963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5965, metadata !DIExpression()), !dbg !5969
  %2 = icmp eq i32 %0, 0, !dbg !5970
  %3 = select i1 %2, i32* inttoptr (i32 -2096955384 to i32*), i32* inttoptr (i32 -2096889848 to i32*)
  call void @llvm.dbg.value(metadata i32 undef, metadata !5966, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.value(metadata i32 undef, metadata !5967, metadata !DIExpression()), !dbg !5969
  %4 = load volatile i32, i32* %3, align 8, !dbg !5972
  call void @llvm.dbg.value(metadata i32 %4, metadata !5968, metadata !DIExpression()), !dbg !5969
  %5 = and i32 %4, 63, !dbg !5973
  %6 = icmp eq i32 %5, 2, !dbg !5974
  br i1 %6, label %7, label %10, !dbg !5974

7:                                                ; preds = %1
  %8 = xor i1 %2, true
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !5966, metadata !DIExpression()), !dbg !5969
  tail call void @uart_send_handler(i32 noundef %9) #21, !dbg !5975
  br label %10, !dbg !5977

10:                                               ; preds = %1, %7
  ret void, !dbg !5978
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(i32 noundef %0) local_unnamed_addr #1 !dbg !5979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5981, metadata !DIExpression()), !dbg !5983
  %2 = icmp eq i32 %0, 0, !dbg !5984
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5984
  call void @llvm.dbg.value(metadata i32 %3, metadata !5982, metadata !DIExpression()), !dbg !5983
  %4 = or i32 %3, 12, !dbg !5985
  %5 = inttoptr i32 %4 to i32*, !dbg !5985
  store volatile i32 191, i32* %5, align 4, !dbg !5986
  %6 = or i32 %3, 8, !dbg !5987
  %7 = inttoptr i32 %6 to i32*, !dbg !5987
  store volatile i32 16, i32* %7, align 8, !dbg !5988
  %8 = or i32 %3, 16, !dbg !5989
  %9 = inttoptr i32 %8 to i32*, !dbg !5989
  store volatile i32 0, i32* %9, align 16, !dbg !5990
  %10 = or i32 %3, 24, !dbg !5991
  %11 = inttoptr i32 %10 to i32*, !dbg !5991
  store volatile i32 0, i32* %11, align 8, !dbg !5992
  store volatile i32 128, i32* %5, align 4, !dbg !5993
  %12 = inttoptr i32 %3 to i32*, !dbg !5994
  store volatile i32 0, i32* %12, align 65536, !dbg !5995
  %13 = or i32 %3, 4, !dbg !5996
  %14 = inttoptr i32 %13 to i32*, !dbg !5996
  store volatile i32 0, i32* %14, align 4, !dbg !5997
  store volatile i32 0, i32* %5, align 4, !dbg !5998
  store volatile i32 0, i32* %14, align 4, !dbg !5999
  store volatile i32 0, i32* %7, align 8, !dbg !6000
  store volatile i32 191, i32* %5, align 4, !dbg !6001
  store volatile i32 0, i32* %7, align 8, !dbg !6002
  store volatile i32 0, i32* %5, align 4, !dbg !6003
  store volatile i32 0, i32* %9, align 16, !dbg !6004
  %15 = or i32 %3, 28, !dbg !6005
  %16 = inttoptr i32 %15 to i32*, !dbg !6005
  store volatile i32 0, i32* %16, align 4, !dbg !6006
  %17 = or i32 %3, 36, !dbg !6007
  %18 = inttoptr i32 %17 to i32*, !dbg !6007
  store volatile i32 0, i32* %18, align 4, !dbg !6008
  %19 = or i32 %3, 40, !dbg !6009
  %20 = inttoptr i32 %19 to i32*, !dbg !6009
  store volatile i32 0, i32* %20, align 8, !dbg !6010
  %21 = or i32 %3, 44, !dbg !6011
  %22 = inttoptr i32 %21 to i32*, !dbg !6011
  store volatile i32 0, i32* %22, align 4, !dbg !6012
  %23 = or i32 %3, 52, !dbg !6013
  %24 = inttoptr i32 %23 to i32*, !dbg !6013
  store volatile i32 0, i32* %24, align 4, !dbg !6014
  %25 = or i32 %3, 60, !dbg !6015
  %26 = inttoptr i32 %25 to i32*, !dbg !6015
  store volatile i32 0, i32* %26, align 4, !dbg !6016
  %27 = or i32 %3, 64, !dbg !6017
  %28 = inttoptr i32 %27 to i32*, !dbg !6017
  store volatile i32 0, i32* %28, align 64, !dbg !6018
  %29 = or i32 %3, 68, !dbg !6019
  %30 = inttoptr i32 %29 to i32*, !dbg !6019
  store volatile i32 0, i32* %30, align 4, !dbg !6020
  %31 = or i32 %3, 72, !dbg !6021
  %32 = inttoptr i32 %31 to i32*, !dbg !6021
  store volatile i32 0, i32* %32, align 8, !dbg !6022
  %33 = or i32 %3, 76, !dbg !6023
  %34 = inttoptr i32 %33 to i32*, !dbg !6023
  store volatile i32 0, i32* %34, align 4, !dbg !6024
  %35 = or i32 %3, 80, !dbg !6025
  %36 = inttoptr i32 %35 to i32*, !dbg !6025
  store volatile i32 0, i32* %36, align 16, !dbg !6026
  %37 = or i32 %3, 84, !dbg !6027
  %38 = inttoptr i32 %37 to i32*, !dbg !6027
  store volatile i32 0, i32* %38, align 4, !dbg !6028
  %39 = or i32 %3, 88, !dbg !6029
  %40 = inttoptr i32 %39 to i32*, !dbg !6029
  store volatile i32 0, i32* %40, align 8, !dbg !6030
  %41 = or i32 %3, 96, !dbg !6031
  %42 = inttoptr i32 %41 to i32*, !dbg !6031
  store volatile i32 0, i32* %42, align 32, !dbg !6032
  ret void, !dbg !6033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(i32 noundef %0) local_unnamed_addr #1 !dbg !6034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6036, metadata !DIExpression()), !dbg !6038
  %2 = icmp eq i32 %0, 0, !dbg !6039
  call void @llvm.dbg.value(metadata i32 undef, metadata !6037, metadata !DIExpression()), !dbg !6038
  %3 = select i1 %2, i32 -2096955372, i32 -2096889836
  %4 = inttoptr i32 %3 to i32*
  br label %5, !dbg !6040

5:                                                ; preds = %5, %1
  %6 = load volatile i32, i32* %4, align 4, !dbg !6041
  %7 = and i32 %6, 64, !dbg !6042
  %8 = icmp eq i32 %7, 0, !dbg !6043
  br i1 %8, label %5, label %9, !dbg !6040, !llvm.loop !6044

9:                                                ; preds = %5
  ret void, !dbg !6046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_fatal_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #3 !dbg !6047 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6051, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.value(metadata i32 %1, metadata !6052, metadata !DIExpression()), !dbg !6063
  call void @llvm.dbg.value(metadata i8* %2, metadata !6053, metadata !DIExpression()), !dbg !6063
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !6064
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !6064
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !6054, metadata !DIExpression()), !dbg !6065
  call void @llvm.va_start(i8* nonnull %5), !dbg !6066
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !6067
  %7 = load i32, i32* %6, align 4, !dbg !6067
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !6067
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #21, !dbg !6067
  call void @llvm.va_end(i8* nonnull %5), !dbg !6068
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !6069
  ret void, !dbg !6069
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #12

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #12

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #3 !dbg !6070 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6072, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata i32 %1, metadata !6073, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata i8* %2, metadata !6074, metadata !DIExpression()), !dbg !6076
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !6077
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !6077
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !6075, metadata !DIExpression()), !dbg !6078
  call void @llvm.va_start(i8* nonnull %5), !dbg !6079
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !6080
  %7 = load i32, i32* %6, align 4, !dbg !6080
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !6080
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #21, !dbg !6080
  call void @llvm.va_end(i8* nonnull %5), !dbg !6081
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !6082
  ret void, !dbg !6082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #3 !dbg !6083 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6085, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i32 %1, metadata !6086, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.value(metadata i8* %2, metadata !6087, metadata !DIExpression()), !dbg !6089
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !6090
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !6090
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !6088, metadata !DIExpression()), !dbg !6091
  call void @llvm.va_start(i8* nonnull %5), !dbg !6092
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !6093
  %7 = load i32, i32* %6, align 4, !dbg !6093
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !6093
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 2, i8* noundef %2, [1 x i32] %8) #21, !dbg !6093
  call void @llvm.va_end(i8* nonnull %5), !dbg !6094
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !6095
  ret void, !dbg !6095
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #3 !dbg !6096 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6098, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.value(metadata i32 %1, metadata !6099, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.value(metadata i8* %2, metadata !6100, metadata !DIExpression()), !dbg !6102
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !6103
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !6103
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !6101, metadata !DIExpression()), !dbg !6104
  call void @llvm.va_start(i8* nonnull %5), !dbg !6105
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !6106
  %7 = load i32, i32* %6, align 4, !dbg !6106
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !6106
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %2, [1 x i32] %8) #21, !dbg !6106
  call void @llvm.va_end(i8* nonnull %5), !dbg !6107
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !6108
  ret void, !dbg !6108
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_dump_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, i8* noundef %3, i32 noundef %4, ...) local_unnamed_addr #3 !dbg !6109 {
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6113, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i32 %1, metadata !6114, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i8* %2, metadata !6115, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i8* %3, metadata !6116, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i32 %4, metadata !6117, metadata !DIExpression()), !dbg !6119
  %7 = bitcast %struct.__va_list* %6 to i8*, !dbg !6120
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #20, !dbg !6120
  call void @llvm.dbg.declare(metadata %struct.__va_list* %6, metadata !6118, metadata !DIExpression()), !dbg !6121
  call void @llvm.va_start(i8* nonnull %7), !dbg !6122
  %8 = bitcast %struct.__va_list* %6 to i32*, !dbg !6123
  %9 = load i32, i32* %8, align 4, !dbg !6123
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !6123
  call void @vdump_module_buffer(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %3, i32 noundef %4, i8* noundef %2, [1 x i32] %10) #21, !dbg !6123
  call void @llvm.va_end(i8* nonnull %7), !dbg !6124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #20, !dbg !6125
  ret void, !dbg !6125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #3 !dbg !6126 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6133
  call void @llvm.dbg.value(metadata i32 %1, metadata !6132, metadata !DIExpression()), !dbg !6134
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !6135, !range !2462
  %3 = icmp eq i8 %2, 0, !dbg !6135
  br i1 %3, label %5, label %4, !dbg !6137

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6138
  br label %15, !dbg !6140

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !6141
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6143
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #19, !dbg !6144
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6145
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !6146
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !6147
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !6148
  call void @llvm.dbg.value(metadata i32 0, metadata !6131, metadata !DIExpression()), !dbg !6134
  br label %7, !dbg !6149

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6131, metadata !DIExpression()), !dbg !6134
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %8, !dbg !6151
  store volatile i32 0, i32* %9, align 4, !dbg !6154
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %8, !dbg !6155
  store volatile i32 0, i32* %10, align 4, !dbg !6156
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !6157
  store i32 0, i32* %11, align 4, !dbg !6158
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !6159
  store i32 0, i32* %12, align 4, !dbg !6160
  %13 = add nuw nsw i32 %8, 1, !dbg !6161
  call void @llvm.dbg.value(metadata i32 %13, metadata !6131, metadata !DIExpression()), !dbg !6134
  %14 = icmp eq i32 %13, 16, !dbg !6162
  br i1 %14, label %15, label %7, !dbg !6149, !llvm.loop !6163

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !6134
  ret i32 %16, !dbg !6165
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #3 section ".ramTEXT" !dbg !6166 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6169
  call void @llvm.dbg.value(metadata i32 %1, metadata !6168, metadata !DIExpression()), !dbg !6170
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6171
  %3 = and i32 %2, -31, !dbg !6171
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6171
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6172
  %5 = or i32 %4, 19, !dbg !6172
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6172
  %6 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6173
  %7 = and i32 %6, -31, !dbg !6173
  store volatile i32 %7, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6173
  %8 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6174
  %9 = or i32 %8, 3, !dbg !6174
  store volatile i32 %9, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6174
  tail call void asm sideeffect "isb", ""() #20, !dbg !6175, !srcloc !6179
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6180
  ret i32 0, !dbg !6181
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #3 !dbg !6182 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #19, !dbg !6185
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6186
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !6187
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !6188
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !6189
  call void @llvm.dbg.value(metadata i32 0, metadata !6184, metadata !DIExpression()), !dbg !6190
  br label %2, !dbg !6191

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6184, metadata !DIExpression()), !dbg !6190
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %3, !dbg !6193
  store volatile i32 0, i32* %4, align 4, !dbg !6196
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %3, !dbg !6197
  store volatile i32 0, i32* %5, align 4, !dbg !6198
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !6199
  store i32 0, i32* %6, align 4, !dbg !6200
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !6201
  store i32 0, i32* %7, align 4, !dbg !6202
  %8 = add nuw nsw i32 %3, 1, !dbg !6203
  call void @llvm.dbg.value(metadata i32 %8, metadata !6184, metadata !DIExpression()), !dbg !6190
  %9 = icmp eq i32 %8, 16, !dbg !6204
  br i1 %9, label %10, label %2, !dbg !6191, !llvm.loop !6205

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !6207
  ret i32 0, !dbg !6208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #1 !dbg !6209 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !6210
  %2 = and i32 %1, 768, !dbg !6212
  %3 = icmp eq i32 %2, 0, !dbg !6212
  br i1 %3, label %8, label %4, !dbg !6213

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6214
  %6 = or i32 %5, 13, !dbg !6214
  store volatile i32 %6, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6214
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6215
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !6216
  br label %8, !dbg !6217

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !6218
  ret i32 %9, !dbg !6219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #3 !dbg !6220 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6223
  call void @llvm.dbg.value(metadata i32 %1, metadata !6222, metadata !DIExpression()), !dbg !6224
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6225
  %3 = and i32 %2, 1, !dbg !6227
  %4 = icmp eq i32 %3, 0, !dbg !6227
  br i1 %4, label %7, label %5, !dbg !6228

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #19, !dbg !6229
  br label %7, !dbg !6231

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6232
  %9 = and i32 %8, -2, !dbg !6232
  store volatile i32 %9, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6232
  %10 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6233
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !6234
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6235
  ret i32 0, !dbg !6236
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6241, metadata !DIExpression()), !dbg !6242
  %2 = icmp ugt i32 %0, 15, !dbg !6243
  br i1 %2, label %13, label %3, !dbg !6245

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !6246
  %5 = load volatile i32, i32* %4, align 4, !dbg !6246
  %6 = and i32 %5, 256, !dbg !6248
  %7 = icmp eq i32 %6, 0, !dbg !6248
  br i1 %7, label %13, label %8, !dbg !6249

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !6250
  %10 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !6252
  %11 = or i32 %10, %9, !dbg !6252
  store volatile i32 %11, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !6252
  %12 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !6253
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !6254
  br label %13, !dbg !6255

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !6242
  ret i32 %14, !dbg !6256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6259, metadata !DIExpression()), !dbg !6260
  %2 = icmp ugt i32 %0, 15, !dbg !6261
  br i1 %2, label %11, label %3, !dbg !6263

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !6264
  %5 = xor i32 %4, -1, !dbg !6265
  %6 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !6266
  %7 = and i32 %6, %5, !dbg !6266
  store volatile i32 %7, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !6266
  %8 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !6267
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !6268
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !6269
  store i32 0, i32* %9, align 4, !dbg !6270
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !6271
  store i32 0, i32* %10, align 4, !dbg !6272
  br label %11, !dbg !6273

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !6260
  ret i32 %12, !dbg !6274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #1 !dbg !6275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6280, metadata !DIExpression()), !dbg !6281
  %2 = icmp ugt i32 %0, 3, !dbg !6282
  br i1 %2, label %13, label %3, !dbg !6284

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6285
  %5 = and i32 %4, -769, !dbg !6285
  store volatile i32 %5, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6285
  %6 = shl nuw nsw i32 %0, 8, !dbg !6286
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6287
  %8 = or i32 %7, %6, !dbg !6287
  store volatile i32 %8, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6287
  %9 = icmp eq i32 %0, 0, !dbg !6288
  br i1 %9, label %10, label %11, !dbg !6290

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6291
  br label %11, !dbg !6293

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6294
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !6295
  br label %13, !dbg !6296

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !6281
  ret i32 %14, !dbg !6297
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.DMA_SWCOPYMENU* noundef readonly %1) local_unnamed_addr #3 !dbg !6298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6309, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata %struct.DMA_SWCOPYMENU* %1, metadata !6310, metadata !DIExpression()), !dbg !6311
  %3 = icmp ugt i32 %0, 15, !dbg !6312
  br i1 %3, label %30, label %4, !dbg !6314

4:                                                ; preds = %2
  %5 = icmp eq %struct.DMA_SWCOPYMENU* %1, null, !dbg !6315
  br i1 %5, label %30, label %6, !dbg !6317

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.DMA_SWCOPYMENU, %struct.DMA_SWCOPYMENU* %1, i32 0, i32 0, !dbg !6318
  %8 = load i32, i32* %7, align 4, !dbg !6318
  %9 = and i32 %8, 4095, !dbg !6320
  %10 = icmp eq i32 %9, 0, !dbg !6320
  br i1 %10, label %12, label %11, !dbg !6321

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.71, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.72, i32 0, i32 0)) #22, !dbg !6322
  unreachable, !dbg !6322

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.DMA_SWCOPYMENU, %struct.DMA_SWCOPYMENU* %1, i32 0, i32 1, !dbg !6324
  %14 = load i32, i32* %13, align 4, !dbg !6324
  %15 = and i32 %14, 4095, !dbg !6326
  %16 = icmp eq i32 %15, 0, !dbg !6326
  br i1 %16, label %18, label %17, !dbg !6327

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.71, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.72, i32 0, i32 0)) #22, !dbg !6328
  unreachable, !dbg !6328

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !6330
  store volatile i32 %8, i32* %19, align 4, !dbg !6331
  %20 = load i32, i32* %7, align 4, !dbg !6332
  %21 = load i32, i32* %13, align 4, !dbg !6333
  %22 = add i32 %21, %20, !dbg !6334
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %0, !dbg !6335
  store volatile i32 %22, i32* %23, align 4, !dbg !6336
  %24 = load volatile i32, i32* %19, align 4, !dbg !6337
  %25 = or i32 %24, 256, !dbg !6337
  store volatile i32 %25, i32* %19, align 4, !dbg !6337
  %26 = load volatile i32, i32* %19, align 4, !dbg !6338
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !6339
  store i32 %26, i32* %27, align 4, !dbg !6340
  %28 = load volatile i32, i32* %23, align 4, !dbg !6341
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !6342
  store i32 %28, i32* %29, align 4, !dbg !6343
  br label %30, !dbg !6344

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !6311
  ret i32 %31, !dbg !6345
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !6346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6350, metadata !DIExpression()), !dbg !6352
  %2 = and i32 %0, 31, !dbg !6353
  %3 = icmp eq i32 %2, 0, !dbg !6353
  br i1 %3, label %4, label %9, !dbg !6355

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6356
  call void @llvm.dbg.value(metadata i32 %5, metadata !6351, metadata !DIExpression()), !dbg !6352
  %6 = and i32 %0, -32, !dbg !6357
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6358
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6359
  %8 = or i32 %7, 5, !dbg !6359
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6359
  tail call void asm sideeffect "isb", ""() #20, !dbg !6360, !srcloc !6179
  tail call void @restore_interrupt_mask(i32 noundef %5) #21, !dbg !6362
  br label %9, !dbg !6363

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !6352
  ret i32 %10, !dbg !6364
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 section ".ramTEXT" !dbg !6365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6369, metadata !DIExpression()), !dbg !6373
  call void @llvm.dbg.value(metadata i32 %1, metadata !6370, metadata !DIExpression()), !dbg !6373
  %3 = add i32 %1, %0, !dbg !6374
  call void @llvm.dbg.value(metadata i32 %3, metadata !6372, metadata !DIExpression()), !dbg !6373
  %4 = or i32 %1, %0, !dbg !6375
  %5 = and i32 %4, 31, !dbg !6375
  %6 = icmp eq i32 %5, 0, !dbg !6375
  br i1 %6, label %7, label %16, !dbg !6375

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6377
  call void @llvm.dbg.value(metadata i32 %8, metadata !6371, metadata !DIExpression()), !dbg !6373
  call void @llvm.dbg.value(metadata i32 %0, metadata !6369, metadata !DIExpression()), !dbg !6373
  %9 = icmp ugt i32 %3, %0, !dbg !6378
  br i1 %9, label %10, label %15, !dbg !6379

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6369, metadata !DIExpression()), !dbg !6373
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #19, !dbg !6380
  %13 = add i32 %11, 32, !dbg !6382
  call void @llvm.dbg.value(metadata i32 %13, metadata !6369, metadata !DIExpression()), !dbg !6373
  %14 = icmp ult i32 %13, %3, !dbg !6378
  br i1 %14, label %10, label %15, !dbg !6379, !llvm.loop !6383

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #20, !dbg !6385, !srcloc !6179
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !6387
  br label %16, !dbg !6388

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !6373
  ret i32 %17, !dbg !6389
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #3 section ".ramTEXT" !dbg !6390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6392, metadata !DIExpression()), !dbg !6394
  %2 = and i32 %0, 31, !dbg !6395
  %3 = icmp eq i32 %2, 0, !dbg !6395
  br i1 %3, label %4, label %9, !dbg !6397

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6398
  call void @llvm.dbg.value(metadata i32 %5, metadata !6393, metadata !DIExpression()), !dbg !6394
  %6 = and i32 %0, -32, !dbg !6399
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6400
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6401
  %8 = or i32 %7, 21, !dbg !6401
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6401
  tail call void asm sideeffect "isb", ""() #20, !dbg !6402, !srcloc !6179
  tail call void @restore_interrupt_mask(i32 noundef %5) #21, !dbg !6404
  br label %9, !dbg !6405

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !6394
  ret i32 %10, !dbg !6406
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 section ".ramTEXT" !dbg !6407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6409, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata i32 %1, metadata !6410, metadata !DIExpression()), !dbg !6413
  %3 = add i32 %1, %0, !dbg !6414
  call void @llvm.dbg.value(metadata i32 %3, metadata !6412, metadata !DIExpression()), !dbg !6413
  %4 = or i32 %1, %0, !dbg !6415
  %5 = and i32 %4, 31, !dbg !6415
  %6 = icmp eq i32 %5, 0, !dbg !6415
  br i1 %6, label %7, label %16, !dbg !6415

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6417
  call void @llvm.dbg.value(metadata i32 %8, metadata !6411, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata i32 %0, metadata !6409, metadata !DIExpression()), !dbg !6413
  %9 = icmp ugt i32 %3, %0, !dbg !6418
  br i1 %9, label %10, label %15, !dbg !6419

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6409, metadata !DIExpression()), !dbg !6413
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #19, !dbg !6420
  %13 = add i32 %11, 32, !dbg !6422
  call void @llvm.dbg.value(metadata i32 %13, metadata !6409, metadata !DIExpression()), !dbg !6413
  %14 = icmp ult i32 %13, %3, !dbg !6418
  br i1 %14, label %10, label %15, !dbg !6419, !llvm.loop !6423

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #20, !dbg !6425, !srcloc !6179
  tail call void @restore_interrupt_mask(i32 noundef %8) #21, !dbg !6427
  br label %16, !dbg !6428

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !6413
  ret i32 %17, !dbg !6429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #3 section ".ramTEXT" !dbg !6430 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6433
  call void @llvm.dbg.value(metadata i32 %1, metadata !6432, metadata !DIExpression()), !dbg !6434
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6435
  %3 = and i32 %2, -31, !dbg !6435
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6435
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6436
  %5 = or i32 %4, 19, !dbg !6436
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6436
  tail call void asm sideeffect "isb", ""() #20, !dbg !6437, !srcloc !6179
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6439
  ret i32 0, !dbg !6440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #1 !dbg !6441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6445, metadata !DIExpression()), !dbg !6447
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6448
  %3 = and i32 %2, 8, !dbg !6450
  %4 = icmp eq i32 %3, 0, !dbg !6450
  br i1 %4, label %23, label %5, !dbg !6451

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6446, metadata !DIExpression()), !dbg !6447
  %7 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !6452
  %8 = shl nuw nsw i32 1, %6, !dbg !6457
  %9 = and i32 %7, %8, !dbg !6458
  %10 = icmp eq i32 %9, 0, !dbg !6458
  br i1 %10, label %20, label %11, !dbg !6459

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %6, !dbg !6460
  %13 = load volatile i32, i32* %12, align 4, !dbg !6460
  %14 = and i32 %13, -257, !dbg !6463
  %15 = icmp ugt i32 %14, %0, !dbg !6464
  br i1 %15, label %20, label %16, !dbg !6465

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %6, !dbg !6466
  %18 = load volatile i32, i32* %17, align 4, !dbg !6466
  %19 = icmp ugt i32 %18, %0, !dbg !6467
  br i1 %19, label %23, label %20, !dbg !6468

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !6469
  call void @llvm.dbg.value(metadata i32 %21, metadata !6446, metadata !DIExpression()), !dbg !6447
  %22 = icmp eq i32 %21, 16, !dbg !6470
  br i1 %22, label %23, label %5, !dbg !6471, !llvm.loop !6472

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !6447
  ret i1 %24, !dbg !6474
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_nvic_init() local_unnamed_addr #8 !dbg !6475 {
  ret i32 0, !dbg !6479
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #1 !dbg !6480 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6484, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.value(metadata i32 -1, metadata !6485, metadata !DIExpression()), !dbg !6486
  %2 = icmp ugt i32 %0, 95, !dbg !6487
  br i1 %2, label %4, label %3, !dbg !6487

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #19, !dbg !6489
  call void @llvm.dbg.value(metadata i32 0, metadata !6485, metadata !DIExpression()), !dbg !6486
  br label %4, !dbg !6491

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6486
  ret i32 %5, !dbg !6492
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6497, metadata !DIExpression()), !dbg !6498
  %2 = and i32 %0, 31, !dbg !6499
  %3 = shl nuw i32 1, %2, !dbg !6500
  %4 = lshr i32 %0, 5, !dbg !6501
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6502
  store volatile i32 %3, i32* %5, align 4, !dbg !6503
  ret void, !dbg !6504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #1 !dbg !6505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6507, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 -1, metadata !6508, metadata !DIExpression()), !dbg !6509
  %2 = icmp ugt i32 %0, 95, !dbg !6510
  br i1 %2, label %4, label %3, !dbg !6510

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #19, !dbg !6512
  call void @llvm.dbg.value(metadata i32 0, metadata !6508, metadata !DIExpression()), !dbg !6509
  br label %4, !dbg !6514

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6509
  ret i32 %5, !dbg !6515
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6518, metadata !DIExpression()), !dbg !6519
  %2 = and i32 %0, 31, !dbg !6520
  %3 = shl nuw i32 1, %2, !dbg !6521
  %4 = lshr i32 %0, 5, !dbg !6522
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6523
  store volatile i32 %3, i32* %5, align 4, !dbg !6524
  ret void, !dbg !6525
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #9 !dbg !6526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6530, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.value(metadata i32 255, metadata !6531, metadata !DIExpression()), !dbg !6532
  %2 = icmp ugt i32 %0, 95, !dbg !6533
  br i1 %2, label %5, label %3, !dbg !6533

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #19, !dbg !6535
  call void @llvm.dbg.value(metadata i32 %4, metadata !6531, metadata !DIExpression()), !dbg !6532
  br label %5, !dbg !6537

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !6532
  ret i32 %6, !dbg !6538
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #9 !dbg !6539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6543, metadata !DIExpression()), !dbg !6544
  %2 = lshr i32 %0, 5, !dbg !6545
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !6546
  %4 = load volatile i32, i32* %3, align 4, !dbg !6546
  %5 = and i32 %0, 31, !dbg !6547
  %6 = lshr i32 %4, %5, !dbg !6548
  %7 = and i32 %6, 1, !dbg !6548
  ret i32 %7, !dbg !6549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #1 !dbg !6550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6552, metadata !DIExpression()), !dbg !6554
  call void @llvm.dbg.value(metadata i32 -1, metadata !6553, metadata !DIExpression()), !dbg !6554
  %2 = icmp ugt i32 %0, 95, !dbg !6555
  br i1 %2, label %4, label %3, !dbg !6555

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #19, !dbg !6557
  call void @llvm.dbg.value(metadata i32 0, metadata !6553, metadata !DIExpression()), !dbg !6554
  br label %4, !dbg !6559

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6554
  ret i32 %5, !dbg !6560
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6563, metadata !DIExpression()), !dbg !6564
  %2 = and i32 %0, 31, !dbg !6565
  %3 = shl nuw i32 1, %2, !dbg !6566
  %4 = lshr i32 %0, 5, !dbg !6567
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !6568
  store volatile i32 %3, i32* %5, align 4, !dbg !6569
  ret void, !dbg !6570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #1 !dbg !6571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6573, metadata !DIExpression()), !dbg !6575
  call void @llvm.dbg.value(metadata i32 -1, metadata !6574, metadata !DIExpression()), !dbg !6575
  %2 = icmp ugt i32 %0, 95, !dbg !6576
  br i1 %2, label %4, label %3, !dbg !6576

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #19, !dbg !6578
  call void @llvm.dbg.value(metadata i32 0, metadata !6574, metadata !DIExpression()), !dbg !6575
  br label %4, !dbg !6580

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6575
  ret i32 %5, !dbg !6581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6584, metadata !DIExpression()), !dbg !6585
  %2 = and i32 %0, 31, !dbg !6586
  %3 = shl nuw i32 1, %2, !dbg !6587
  %4 = lshr i32 %0, 5, !dbg !6588
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6589
  store volatile i32 %3, i32* %5, align 4, !dbg !6590
  ret void, !dbg !6591
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6596, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.value(metadata i32 %1, metadata !6597, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.value(metadata i32 -1, metadata !6598, metadata !DIExpression()), !dbg !6599
  %3 = icmp ugt i32 %0, 95, !dbg !6600
  br i1 %3, label %5, label %4, !dbg !6600

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #19, !dbg !6602
  call void @llvm.dbg.value(metadata i32 0, metadata !6598, metadata !DIExpression()), !dbg !6599
  br label %5, !dbg !6604

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !6599
  ret i32 %6, !dbg !6605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !6606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6610, metadata !DIExpression()), !dbg !6612
  call void @llvm.dbg.value(metadata i32 %1, metadata !6611, metadata !DIExpression()), !dbg !6612
  %3 = trunc i32 %1 to i8, !dbg !6613
  %4 = shl i8 %3, 5, !dbg !6613
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6616
  store volatile i8 %4, i8* %5, align 1, !dbg !6617
  ret void, !dbg !6618
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #9 !dbg !6619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6621, metadata !DIExpression()), !dbg !6623
  call void @llvm.dbg.value(metadata i32 68, metadata !6622, metadata !DIExpression()), !dbg !6623
  %2 = icmp ugt i32 %0, 95, !dbg !6624
  br i1 %2, label %5, label %3, !dbg !6624

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #19, !dbg !6626
  call void @llvm.dbg.value(metadata i32 %4, metadata !6622, metadata !DIExpression()), !dbg !6623
  br label %5, !dbg !6628

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !6623
  ret i32 %6, !dbg !6629
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #9 !dbg !6630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6632, metadata !DIExpression()), !dbg !6633
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6634
  %3 = load volatile i8, i8* %2, align 1, !dbg !6634
  %4 = lshr i8 %3, 5, !dbg !6637
  %5 = zext i8 %4 to i32, !dbg !6637
  ret i32 %5, !dbg !6638
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #3 section ".ramTEXT" !dbg !6639 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !6641, metadata !DIExpression()), !dbg !6643
  tail call void @Flash_ReturnReady() #21, !dbg !6644
  %1 = tail call fastcc i32 @get_current_irq() #19, !dbg !6645
  call void @llvm.dbg.value(metadata i32 %1, metadata !6642, metadata !DIExpression()), !dbg !6643
  %2 = icmp ugt i32 %1, 95, !dbg !6646
  br i1 %2, label %12, label %3, !dbg !6646

3:                                                ; preds = %0
  %4 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !6648
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !6648
  %6 = icmp eq void (i32)* %5, null, !dbg !6650
  br i1 %6, label %7, label %8, !dbg !6651

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !6641, metadata !DIExpression()), !dbg !6643
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 194, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.85, i32 0, i32 0)) #21, !dbg !6652
  br label %12, !dbg !6654

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #19, !dbg !6655
  %10 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !6657
  store i32 %9, i32* %10, align 4, !dbg !6658
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !6659
  tail call void %11(i32 noundef %1) #21, !dbg !6660
  call void @llvm.dbg.value(metadata i32 0, metadata !6641, metadata !DIExpression()), !dbg !6643
  br label %12, !dbg !6661

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !6643
  ret i32 %13, !dbg !6662
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #9 !dbg !6663 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6666
  %2 = and i32 %1, 511, !dbg !6667
  call void @llvm.dbg.value(metadata i32 %2, metadata !6665, metadata !DIExpression()), !dbg !6668
  %3 = add nsw i32 %2, -16, !dbg !6669
  ret i32 %3, !dbg !6670
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #9 !dbg !6671 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6672
  %2 = lshr i32 %1, 22, !dbg !6673
  %3 = and i32 %2, 1, !dbg !6673
  ret i32 %3, !dbg !6674
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #3 !dbg !6675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6680, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !6681, metadata !DIExpression()), !dbg !6683
  %3 = icmp ugt i32 %0, 95, !dbg !6684
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !6684
  br i1 %5, label %10, label %6, !dbg !6684

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6686
  call void @llvm.dbg.value(metadata i32 %7, metadata !6682, metadata !DIExpression()), !dbg !6683
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #19, !dbg !6687
  %8 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !6688
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !6689
  %9 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !6690
  store i32 0, i32* %9, align 4, !dbg !6691
  tail call void @restore_interrupt_mask(i32 noundef %7) #21, !dbg !6692
  br label %10, !dbg !6693

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !6683
  ret i32 %11, !dbg !6694
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #3 !dbg !6695 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6699, metadata !DIExpression()), !dbg !6700
  %2 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6701
  store i32 %2, i32* %0, align 4, !dbg !6702
  ret i32 0, !dbg !6703
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #3 !dbg !6704 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6708, metadata !DIExpression()), !dbg !6709
  tail call void @restore_interrupt_mask(i32 noundef %0) #21, !dbg !6710
  ret i32 0, !dbg !6711
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #3 !dbg !6712 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !6717, metadata !DIExpression()), !dbg !6718
  %1 = tail call i32 @flash_sfc_config(i8 noundef zeroext 0) #21, !dbg !6719
  call void @llvm.dbg.value(metadata i32 %1, metadata !6717, metadata !DIExpression()), !dbg !6718
  %2 = ashr i32 %1, 31, !dbg !6720
  ret i32 %2, !dbg !6721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #8 !dbg !6722 {
  ret i32 0, !dbg !6723
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !6724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6729, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i32 %1, metadata !6730, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i32 -1, metadata !6731, metadata !DIExpression()), !dbg !6732
  %3 = tail call i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) #21, !dbg !6733
  call void @llvm.dbg.value(metadata i32 %3, metadata !6731, metadata !DIExpression()), !dbg !6732
  %4 = ashr i32 %3, 31, !dbg !6734
  ret i32 %4, !dbg !6735
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !6736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6740, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.value(metadata i8* %1, metadata !6741, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.value(metadata i32 %2, metadata !6742, metadata !DIExpression()), !dbg !6743
  %4 = add i32 %0, 268435456, !dbg !6744
  %5 = inttoptr i32 %4 to i8*, !dbg !6745
  tail call void @hal_flash_direct_read(i8* noundef %5, i8* noundef %1, i32 noundef %2) #21, !dbg !6746
  ret i32 0, !dbg !6747
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !6748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6752, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.value(metadata i8* %1, metadata !6753, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.value(metadata i32 %2, metadata !6754, metadata !DIExpression()), !dbg !6756
  %4 = tail call i32 @flash_sfc_write(i32 noundef %0, i32 noundef %2, i8* noundef %1) #21, !dbg !6757
  call void @llvm.dbg.value(metadata i32 %4, metadata !6755, metadata !DIExpression()), !dbg !6756
  %5 = ashr i32 %4, 31, !dbg !6758
  ret i32 %5, !dbg !6759
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #3 !dbg !6760 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6765, metadata !DIExpression()), !dbg !6766
  %2 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !6767
  %3 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6769
  %4 = load i8, i8* %3, align 4, !dbg !6769, !range !2462
  %5 = icmp eq i8 %4, 0, !dbg !6769
  br i1 %5, label %6, label %12, !dbg !6770

6:                                                ; preds = %1
  %7 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #19, !dbg !6771
  br i1 %7, label %9, label %8, !dbg !6773

8:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 89, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.88, i32 0, i32 0), i32 noundef %0) #21, !dbg !6774
  br label %12, !dbg !6776

9:                                                ; preds = %6
  %10 = bitcast %struct.hal_gpt_context_t* %2 to i8*, !dbg !6777
  %11 = tail call i8* @memset(i8* noundef nonnull %10, i32 noundef 0, i32 noundef 16) #21, !dbg !6778
  store i8 1, i8* %3, align 4, !dbg !6779
  br label %12, !dbg !6780

12:                                               ; preds = %1, %9, %8
  %13 = phi i32 [ -2, %8 ], [ 0, %9 ], [ -3, %1 ], !dbg !6766
  ret i32 %13, !dbg !6781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #8 !dbg !6782 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6786, metadata !DIExpression()), !dbg !6787
  %2 = icmp ult i32 %0, 5, !dbg !6788
  %3 = icmp ne i32 %0, 2
  %4 = and i1 %2, %3, !dbg !6790
  ret i1 %4, !dbg !6791
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #3 !dbg !6792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6794, metadata !DIExpression()), !dbg !6795
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #19, !dbg !6796
  br i1 %2, label %4, label %3, !dbg !6798

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 104, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.88, i32 0, i32 0), i32 noundef %0) #21, !dbg !6799
  br label %14, !dbg !6801

4:                                                ; preds = %1
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !6802
  %6 = getelementptr inbounds %struct.hal_gpt_context_t, %struct.hal_gpt_context_t* %5, i32 0, i32 0, !dbg !6804
  %7 = load i32, i32* %6, align 4, !dbg !6804
  %8 = icmp eq i32 %7, 0, !dbg !6805
  br i1 %8, label %10, label %9, !dbg !6806

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 109, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.89, i32 0, i32 0), i32 noundef %0) #21, !dbg !6807
  br label %14, !dbg !6809

10:                                               ; preds = %4
  %11 = bitcast %struct.hal_gpt_context_t* %5 to i8*, !dbg !6810
  %12 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 0, i32 noundef 16) #21, !dbg !6811
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6812
  store i8 0, i8* %13, align 4, !dbg !6813
  br label %14, !dbg !6814

14:                                               ; preds = %10, %9, %3
  %15 = phi i32 [ -2, %3 ], [ -3, %9 ], [ 0, %10 ], !dbg !6795
  ret i32 %15, !dbg !6815
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #3 !dbg !6816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6821, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32* %1, metadata !6822, metadata !DIExpression()), !dbg !6823
  switch i32 %0, label %24 [
    i32 0, label %3
    i32 1, label %9
    i32 2, label %18
  ], !dbg !6824

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6825
  %5 = icmp eq i32 %4, 1, !dbg !6829
  br i1 %5, label %7, label %6, !dbg !6830

6:                                                ; preds = %3
  tail call void @CM4_GPT2Init() #21, !dbg !6831
  br label %7, !dbg !6833

7:                                                ; preds = %6, %3
  %8 = tail call i32 @get_current_count() #21, !dbg !6834
  store i32 %8, i32* %1, align 4, !dbg !6835
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6836
  br label %25, !dbg !6837

9:                                                ; preds = %2
  %10 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6838
  %11 = icmp eq i32 %10, 1, !dbg !6842
  br i1 %11, label %13, label %12, !dbg !6843

12:                                               ; preds = %9
  tail call void @CM4_GPT4Init() #21, !dbg !6844
  br label %13, !dbg !6846

13:                                               ; preds = %12, %9
  %14 = tail call i32 @get_current_gpt4_count() #21, !dbg !6847
  %15 = tail call i32 @top_mcu_freq_get() #21, !dbg !6848
  %16 = udiv i32 %15, 1000000, !dbg !6849
  %17 = udiv i32 %14, %16, !dbg !6850
  store i32 %17, i32* %1, align 4, !dbg !6851
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6852
  br label %25, !dbg !6853

18:                                               ; preds = %2
  %19 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6854
  %20 = icmp eq i32 %19, 1, !dbg !6858
  br i1 %20, label %22, label %21, !dbg !6859

21:                                               ; preds = %18
  tail call void @CM4_GPT4Init() #21, !dbg !6860
  br label %22, !dbg !6862

22:                                               ; preds = %21, %18
  %23 = tail call i32 @get_current_gpt4_count() #21, !dbg !6863
  store i32 %23, i32* %1, align 4, !dbg !6864
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6865
  br label %25

24:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_free_run_count, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef %0) #21, !dbg !6866
  br label %25, !dbg !6868

25:                                               ; preds = %7, %22, %13, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %13 ], [ 0, %22 ], [ 0, %7 ], !dbg !6823
  ret i32 %26, !dbg !6869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #5 !dbg !6870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6874, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i32 %1, metadata !6875, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.value(metadata i32* %2, metadata !6876, metadata !DIExpression()), !dbg !6877
  %4 = icmp eq i32* %2, null, !dbg !6878
  br i1 %4, label %7, label %5, !dbg !6880

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !6881
  store i32 %6, i32* %2, align 4, !dbg !6881
  br label %7, !dbg !6883

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !6877
  ret i32 %8, !dbg !6884
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #3 !dbg !6885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6890, metadata !DIExpression()), !dbg !6892
  call void @llvm.dbg.value(metadata i32* %1, metadata !6891, metadata !DIExpression()), !dbg !6892
  %3 = icmp ugt i32 %0, 4, !dbg !6893
  br i1 %3, label %4, label %5, !dbg !6895

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_running_status, i32 0, i32 0), i32 noundef 167, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.93, i32 0, i32 0), i32 noundef %0) #21, !dbg !6896
  br label %8, !dbg !6898

5:                                                ; preds = %2
  %6 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6899
  %7 = load i32, i32* %6, align 4, !dbg !6899
  store i32 %7, i32* %1, align 4, !dbg !6900
  br label %8, !dbg !6901

8:                                                ; preds = %5, %4
  %9 = phi i32 [ -2, %4 ], [ 0, %5 ], !dbg !6892
  ret i32 %9, !dbg !6902
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #3 !dbg !6903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6907, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !6908, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i8* %2, metadata !6909, metadata !DIExpression()), !dbg !6910
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #19, !dbg !6911
  br i1 %4, label %6, label %5, !dbg !6913

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_gpt_register_callback, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.94, i32 0, i32 0), i32 noundef %0) #21, !dbg !6914
  br label %15, !dbg !6916

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6917
  %8 = load i8, i8* %7, align 4, !dbg !6917, !range !2462
  %9 = icmp eq i8 %8, 1, !dbg !6919
  br i1 %9, label %10, label %15, !dbg !6920

10:                                               ; preds = %6
  %11 = icmp eq void (i8*)* %1, null, !dbg !6921
  br i1 %11, label %15, label %12, !dbg !6923

12:                                               ; preds = %10
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !6924
  store void (i8*)* %1, void (i8*)** %13, align 4, !dbg !6925
  %14 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !6926
  store i8* %2, i8** %14, align 4, !dbg !6927
  br label %15, !dbg !6928

15:                                               ; preds = %10, %6, %12, %5
  %16 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !6910
  ret i32 %16, !dbg !6929
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !6930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6935, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i32 %1, metadata !6936, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i32 %2, metadata !6937, metadata !DIExpression()), !dbg !6938
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #19, !dbg !6939
  br i1 %4, label %6, label %5, !dbg !6941

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_gpt_start_timer_ms, i32 0, i32 0), i32 noundef 221, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.94, i32 0, i32 0), i32 noundef %0) #21, !dbg !6942
  br label %17, !dbg !6944

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6945
  %8 = load i8, i8* %7, align 4, !dbg !6945, !range !2462
  %9 = icmp eq i8 %8, 1, !dbg !6947
  br i1 %9, label %10, label %17, !dbg !6948

10:                                               ; preds = %6
  %11 = icmp ugt i32 %1, 130150523, !dbg !6949
  br i1 %11, label %17, label %12, !dbg !6951

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %1) #19, !dbg !6952
  %14 = tail call fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %2) #19, !dbg !6953
  %15 = tail call fastcc void ()* @hal_gpt_map_callback(i32 noundef %0) #19, !dbg !6954
  tail call void @drvTMR_init(i32 noundef %0, i32 noundef %13, i1 noundef zeroext %14, void ()* noundef nonnull %15) #21, !dbg !6955
  tail call void @TMR_Start(i32 noundef %0) #21, !dbg !6956
  %16 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6957
  store i32 1, i32* %16, align 4, !dbg !6958
  br label %17, !dbg !6959

17:                                               ; preds = %10, %6, %12, %5
  %18 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !6938
  ret i32 %18, !dbg !6960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %0) unnamed_addr #8 !dbg !6961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6965, metadata !DIExpression()), !dbg !6966
  %2 = shl i32 %0, 5, !dbg !6967
  %3 = mul i32 %0, 7, !dbg !6968
  %4 = udiv i32 %3, 10, !dbg !6969
  %5 = add i32 %4, %2, !dbg !6970
  %6 = mul i32 %0, 6, !dbg !6971
  %7 = udiv i32 %6, 100, !dbg !6972
  %8 = add i32 %5, %7, !dbg !6973
  %9 = shl i32 %0, 3, !dbg !6974
  %10 = udiv i32 %9, 1000, !dbg !6975
  %11 = add i32 %8, %10, !dbg !6976
  ret i32 %11, !dbg !6977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %0) unnamed_addr #8 !dbg !6978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6982, metadata !DIExpression()), !dbg !6983
  %2 = icmp eq i32 %0, 1, !dbg !6984
  ret i1 %2, !dbg !6985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull void ()* @hal_gpt_map_callback(i32 noundef %0) unnamed_addr #8 !dbg !6986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6991, metadata !DIExpression()), !dbg !6992
  %2 = icmp eq i32 %0, 0, !dbg !6993
  %3 = select i1 %2, void ()* @hal_gpt_callback0, void ()* @hal_gpt_callback1, !dbg !6994
  ret void ()* %3, !dbg !6995
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback0() #3 !dbg !6996 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 0), align 4, !dbg !7000
  %2 = icmp eq void (i8*)* %1, null, !dbg !7002
  br i1 %2, label %5, label %3, !dbg !7003

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 1), align 4, !dbg !7004
  tail call void %1(i8* noundef %4) #21, !dbg !7006
  br label %5, !dbg !7007

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 0), align 4, !dbg !7008
  ret void, !dbg !7009
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback1() #3 !dbg !7010 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 0), align 4, !dbg !7013
  %2 = icmp eq void (i8*)* %1, null, !dbg !7015
  br i1 %2, label %5, label %3, !dbg !7016

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 1), align 4, !dbg !7017
  tail call void %1(i8* noundef %4) #21, !dbg !7019
  br label %5, !dbg !7020

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 0), align 4, !dbg !7021
  ret void, !dbg !7022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #3 !dbg !7023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7025, metadata !DIExpression()), !dbg !7026
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #19, !dbg !7027
  br i1 %2, label %4, label %3, !dbg !7029

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_gpt_stop_timer, i32 0, i32 0), i32 noundef 245, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.94, i32 0, i32 0), i32 noundef %0) #21, !dbg !7030
  br label %6, !dbg !7032

4:                                                ; preds = %1
  tail call void @TMR_Stop(i32 noundef %0) #21, !dbg !7033
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !7034
  store i32 0, i32* %5, align 4, !dbg !7035
  br label %6, !dbg !7036

6:                                                ; preds = %4, %3
  %7 = phi i32 [ -2, %3 ], [ 0, %4 ], !dbg !7026
  ret i32 %7, !dbg !7037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #3 !dbg !7038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7042, metadata !DIExpression()), !dbg !7043
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !7044
  %3 = icmp eq i32 %2, 1, !dbg !7046
  br i1 %3, label %5, label %4, !dbg !7047

4:                                                ; preds = %1
  tail call void @CM4_GPT2Init() #21, !dbg !7048
  br label %5, !dbg !7050

5:                                                ; preds = %4, %1
  tail call void @delay_ms(i32 noundef %0) #21, !dbg !7051
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !7052
  ret i32 0, !dbg !7053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #3 !dbg !7054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7056, metadata !DIExpression()), !dbg !7057
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !7058
  %3 = icmp eq i32 %2, 1, !dbg !7060
  br i1 %3, label %5, label %4, !dbg !7061

4:                                                ; preds = %1
  tail call void @CM4_GPT4Init() #21, !dbg !7062
  br label %5, !dbg !7064

5:                                                ; preds = %4, %1
  tail call void @delay_us(i32 noundef %0) #21, !dbg !7065
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !7066
  ret i32 0, !dbg !7067
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0) local_unnamed_addr #3 !dbg !7068 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7070, metadata !DIExpression()), !dbg !7073
  %4 = bitcast i32* %2 to i8*, !dbg !7074
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !7074
  %5 = bitcast i32* %3 to i8*, !dbg !7075
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !7075
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !7076
  %7 = load i8, i8* %6, align 1, !dbg !7076, !range !2462
  %8 = icmp eq i8 %7, 0, !dbg !7078
  br i1 %8, label %9, label %26, !dbg !7079

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32* %3, metadata !7072, metadata !DIExpression(DW_OP_deref)), !dbg !7073
  %10 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %3) #21, !dbg !7080
  call void @llvm.dbg.value(metadata i32* %2, metadata !7071, metadata !DIExpression(DW_OP_deref)), !dbg !7073
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %2) #21, !dbg !7082
  %11 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !7083
  %12 = load i32, i32* %11, align 4, !dbg !7083
  %13 = load i32, i32* %2, align 4, !dbg !7085
  call void @llvm.dbg.value(metadata i32 %13, metadata !7071, metadata !DIExpression()), !dbg !7073
  %14 = icmp eq i32 %12, %13, !dbg !7086
  br i1 %14, label %15, label %23, !dbg !7087

15:                                               ; preds = %9
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !7088
  %17 = load i8, i8* %16, align 1, !dbg !7088, !range !2462
  %18 = icmp eq i8 %17, 0, !dbg !7088
  br i1 %18, label %23, label %19, !dbg !7091

19:                                               ; preds = %15
  %20 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !7092
  %21 = load i8, i8* %20, align 1, !dbg !7092
  %22 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %21) #21, !dbg !7094
  store i8 0, i8* %16, align 1, !dbg !7095
  br label %23, !dbg !7096

23:                                               ; preds = %15, %19, %9
  %24 = load i32, i32* %3, align 4, !dbg !7097
  call void @llvm.dbg.value(metadata i32 %24, metadata !7072, metadata !DIExpression()), !dbg !7073
  %25 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %24) #21, !dbg !7098
  br label %27, !dbg !7099

26:                                               ; preds = %1
  store i8 0, i8* %6, align 1, !dbg !7100
  br label %27

27:                                               ; preds = %26, %23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !7102
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !7102
  ret void, !dbg !7102
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #3 !dbg !7103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7109, metadata !DIExpression()), !dbg !7111
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !7110, metadata !DIExpression()), !dbg !7111
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #19, !dbg !7112
  br i1 %3, label %4, label %24, !dbg !7114

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !7115
  %6 = load i8, i8* %5, align 4, !dbg !7115, !range !2462
  %7 = icmp eq i8 %6, 0, !dbg !7115
  br i1 %7, label %8, label %24, !dbg !7117

8:                                                ; preds = %4
  %9 = tail call i8* @memset(i8* noundef nonnull %5, i32 noundef 0, i32 noundef 64) #21, !dbg !7118
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !7119
  %11 = bitcast %struct.hal_uart_config_t* %10 to i8*, !dbg !7120
  %12 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !7121
  %13 = tail call i8* @memcpy(i8* noundef nonnull %11, i8* noundef %12, i32 noundef 16) #21, !dbg !7122
  store i8 1, i8* %5, align 4, !dbg !7123
  %14 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #19, !dbg !7124, !range !7125
  tail call void @uart_reset_default_value(i32 noundef %14) #21, !dbg !7126
  tail call void @halUART_HWInit(i32 noundef %14) #21, !dbg !7127
  %15 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #19, !dbg !7128
  %16 = icmp eq i32 %15, 0, !dbg !7130
  br i1 %16, label %17, label %24, !dbg !7131

17:                                               ; preds = %8
  tail call void @uart_set_sleep_mode(i32 noundef %14) #21, !dbg !7132
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !7133
  store i8 0, i8* %18, align 1, !dbg !7134
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !7135
  store i8 0, i8* %19, align 1, !dbg !7136
  %20 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([2 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !7137
  %21 = load i8*, i8** %20, align 4, !dbg !7137
  %22 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %21) #21, !dbg !7138
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !7139
  store i8 %22, i8* %23, align 1, !dbg !7140
  br label %24, !dbg !7141

24:                                               ; preds = %8, %4, %2, %17
  %25 = phi i32 [ 0, %17 ], [ -4, %2 ], [ -3, %4 ], [ -4, %8 ], !dbg !7111
  ret i32 %25, !dbg !7142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef readonly %1) unnamed_addr #10 !dbg !7143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7149, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !7150, metadata !DIExpression()), !dbg !7151
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7152
  %4 = icmp ne %struct.hal_uart_config_t* %1, null
  %5 = and i1 %4, %3, !dbg !7154
  br i1 %5, label %6, label %22, !dbg !7154

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !7155
  %8 = load i32, i32* %7, align 4, !dbg !7155
  %9 = icmp ugt i32 %8, 12, !dbg !7157
  br i1 %9, label %22, label %10, !dbg !7158

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !7159
  %12 = load i32, i32* %11, align 4, !dbg !7159
  %13 = icmp ugt i32 %12, 2, !dbg !7160
  br i1 %13, label %22, label %14, !dbg !7161

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !7162
  %16 = load i32, i32* %15, align 4, !dbg !7162
  %17 = icmp ugt i32 %16, 1, !dbg !7163
  br i1 %17, label %22, label %18, !dbg !7164

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !7165
  %20 = load i32, i32* %19, align 4, !dbg !7165
  %21 = icmp ult i32 %20, 4, !dbg !7166
  br label %22, !dbg !7167

22:                                               ; preds = %18, %6, %10, %14, %2
  %23 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %10 ], [ false, %6 ], [ %21, %18 ], !dbg !7151
  ret i1 %23, !dbg !7168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_port(i32 noundef %0) unnamed_addr #8 !dbg !7169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7173, metadata !DIExpression()), !dbg !7174
  %2 = icmp ne i32 %0, 0, !dbg !7175
  %3 = zext i1 %2 to i32, !dbg !7176
  ret i32 %3, !dbg !7177
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #3 !dbg !7178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7182, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !7183, metadata !DIExpression()), !dbg !7184
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #19, !dbg !7185
  br i1 %3, label %4, label %22, !dbg !7187

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !7188
  %6 = bitcast %struct.hal_uart_config_t* %5 to i8*, !dbg !7189
  %7 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !7190
  %8 = tail call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %7, i32 noundef 16) #21, !dbg !7191
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #19, !dbg !7192
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !7193
  %11 = load i32, i32* %10, align 4, !dbg !7193
  %12 = tail call fastcc i32 @hal_uart_translate_baudrate(i32 noundef %11) #19, !dbg !7194
  %13 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !7195
  %14 = load i32, i32* %13, align 4, !dbg !7195
  %15 = tail call fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %14) #19, !dbg !7196
  %16 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !7197
  %17 = load i32, i32* %16, align 4, !dbg !7197
  %18 = tail call fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %17) #19, !dbg !7198
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !7199
  %20 = load i32, i32* %19, align 4, !dbg !7199
  %21 = tail call fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %20) #19, !dbg !7200
  tail call void @halUART_SetFormat(i32 noundef %9, i32 noundef %12, i16 noundef zeroext %15, i16 noundef zeroext %18, i16 noundef zeroext %21) #21, !dbg !7201
  br label %22, !dbg !7202

22:                                               ; preds = %2, %4
  %23 = phi i32 [ 0, %4 ], [ -4, %2 ], !dbg !7184
  ret i32 %23, !dbg !7203
}

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_baudrate(i32 noundef %0) unnamed_addr #8 !dbg !7204 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7208, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.declare(metadata [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, metadata !7209, metadata !DIExpression()), !dbg !7212
  %2 = getelementptr inbounds [13 x i32], [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, i32 0, i32 %0, !dbg !7213
  %3 = load i32, i32* %2, align 4, !dbg !7213
  ret i32 %3, !dbg !7214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %0) unnamed_addr #8 !dbg !7215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7219, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.declare(metadata [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, metadata !7220, metadata !DIExpression()), !dbg !7223
  %2 = getelementptr inbounds [4 x i16], [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, i32 0, i32 %0, !dbg !7224
  %3 = load i16, i16* %2, align 2, !dbg !7224
  ret i16 %3, !dbg !7225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %0) unnamed_addr #8 !dbg !7226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7230, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.declare(metadata [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, metadata !7231, metadata !DIExpression()), !dbg !7234
  %2 = getelementptr inbounds [5 x i16], [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, i32 0, i32 %0, !dbg !7235
  %3 = load i16, i16* %2, align 2, !dbg !7235
  ret i16 %3, !dbg !7236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %0) unnamed_addr #8 !dbg !7237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7241, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.declare(metadata [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, metadata !7242, metadata !DIExpression()), !dbg !7245
  %2 = getelementptr inbounds [3 x i16], [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, i32 0, i32 %0, !dbg !7246
  %3 = load i16, i16* %2, align 2, !dbg !7246
  ret i16 %3, !dbg !7247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) unnamed_addr #8 !dbg !7248 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7252, metadata !DIExpression()), !dbg !7253
  %2 = icmp ult i32 %0, 2, !dbg !7254
  ret i1 %2, !dbg !7255
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #3 !dbg !7256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7260, metadata !DIExpression()), !dbg !7261
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7262
  br i1 %2, label %3, label %18, !dbg !7264

3:                                                ; preds = %1
  %4 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !7265
  %5 = load i8, i8* %4, align 4, !dbg !7265, !range !2462
  %6 = icmp eq i8 %5, 0, !dbg !7267
  br i1 %6, label %18, label %7, !dbg !7268

7:                                                ; preds = %3
  %8 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef 64) #21, !dbg !7269
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #19, !dbg !7270, !range !7125
  tail call void @uart_query_empty(i32 noundef %9) #21, !dbg !7271
  %10 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !7272
  %11 = load i32, i32* %10, align 4, !dbg !7272
  %12 = tail call i32 @hal_nvic_disable_irq(i32 noundef %11) #21, !dbg !7273
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !7274
  store i8 0, i8* %13, align 1, !dbg !7275
  %14 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !7276
  store i8 0, i8* %14, align 1, !dbg !7277
  tail call void @uart_mask_send_interrupt(i32 noundef %9) #21, !dbg !7278
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !7279
  %16 = load i8, i8* %15, align 1, !dbg !7279
  %17 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %16) #21, !dbg !7280
  tail call void @uart_reset_default_value(i32 noundef %9) #21, !dbg !7281
  br label %18, !dbg !7282

18:                                               ; preds = %3, %1, %7
  %19 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !7261
  ret i32 %19, !dbg !7283
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #3 !dbg !7284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7288, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i8 %1, metadata !7289, metadata !DIExpression()), !dbg !7291
  %3 = icmp eq i32 %0, 0, !dbg !7292
  %4 = icmp eq i32 %0, 1, !dbg !7292
  %5 = select i1 %4, i32 1, i32 2, !dbg !7292
  %6 = select i1 %3, i32 0, i32 %5, !dbg !7292
  call void @llvm.dbg.value(metadata i32 %6, metadata !7290, metadata !DIExpression()), !dbg !7291
  %7 = icmp eq i32 %6, 2, !dbg !7293
  br i1 %7, label %9, label %8, !dbg !7295

8:                                                ; preds = %2
  tail call void @uart_output_char(i32 noundef %6, i8 noundef zeroext %1) #21, !dbg !7296
  br label %9, !dbg !7298

9:                                                ; preds = %2, %8
  ret void, !dbg !7299
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #3 !dbg !7300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7304, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata i8* %1, metadata !7305, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata i32 %2, metadata !7306, metadata !DIExpression()), !dbg !7309
  %4 = icmp eq i32 %0, 0, !dbg !7310
  %5 = icmp eq i32 %0, 1, !dbg !7310
  %6 = select i1 %5, i32 1, i32 2, !dbg !7310
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7310
  call void @llvm.dbg.value(metadata i32 %7, metadata !7307, metadata !DIExpression()), !dbg !7309
  %8 = icmp eq i8* %1, null, !dbg !7311
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !7313
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !7313
  call void @llvm.dbg.value(metadata i32 0, metadata !7308, metadata !DIExpression()), !dbg !7309
  br i1 %12, label %19, label %13, !dbg !7313

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !7308, metadata !DIExpression()), !dbg !7309
  %15 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !7314
  %16 = load i8, i8* %15, align 1, !dbg !7314
  tail call void @uart_output_char(i32 noundef %7, i8 noundef zeroext %16) #21, !dbg !7320
  %17 = add nuw i32 %14, 1, !dbg !7321
  call void @llvm.dbg.value(metadata i32 %17, metadata !7308, metadata !DIExpression()), !dbg !7309
  %18 = icmp eq i32 %17, %2, !dbg !7322
  br i1 %18, label %19, label %13, !dbg !7323, !llvm.loop !7324

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !7309
  ret i32 %20, !dbg !7326
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !7327 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7329, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i8* %1, metadata !7330, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i32 %2, metadata !7331, metadata !DIExpression()), !dbg !7336
  %6 = bitcast i32* %4 to i8*, !dbg !7337
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #20, !dbg !7337
  %7 = bitcast i32* %5 to i8*, !dbg !7338
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #20, !dbg !7338
  %8 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7339
  br i1 %8, label %9, label %37, !dbg !7341

9:                                                ; preds = %3
  %10 = icmp eq i8* %1, null, !dbg !7342
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !7344
  br i1 %12, label %37, label %13, !dbg !7344

13:                                               ; preds = %9
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !7345
  %15 = load i8, i8* %14, align 4, !dbg !7345, !range !2462
  %16 = icmp eq i8 %15, 0, !dbg !7345
  br i1 %16, label %37, label %17, !dbg !7347

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32* %5, metadata !7335, metadata !DIExpression(DW_OP_deref)), !dbg !7336
  %18 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #21, !dbg !7348
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !7349
  %20 = load i8, i8* %19, align 1, !dbg !7349, !range !2462
  %21 = icmp eq i8 %20, 0, !dbg !7351
  br i1 %21, label %22, label %26, !dbg !7352

22:                                               ; preds = %17
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !7353
  %24 = load i8, i8* %23, align 1, !dbg !7353
  %25 = call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %24) #21, !dbg !7355
  store i8 1, i8* %19, align 1, !dbg !7356
  br label %26, !dbg !7357

26:                                               ; preds = %22, %17
  %27 = load i32, i32* %5, align 4, !dbg !7358
  call void @llvm.dbg.value(metadata i32 %27, metadata !7335, metadata !DIExpression()), !dbg !7336
  %28 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %27) #21, !dbg !7359
  %29 = call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #19, !dbg !7360, !range !7125
  call void @llvm.dbg.value(metadata i32* %4, metadata !7332, metadata !DIExpression(DW_OP_deref)), !dbg !7336
  call void @halUART_Get_VFIFO_Length(i32 noundef %29, i32 noundef 0, i32* noundef nonnull %4) #21, !dbg !7361
  %30 = load i32, i32* %4, align 4, !dbg !7362
  call void @llvm.dbg.value(metadata i32 %30, metadata !7332, metadata !DIExpression()), !dbg !7336
  %31 = icmp ult i32 %30, %2, !dbg !7364
  %32 = select i1 %31, i32 %30, i32 %2
  call void @llvm.dbg.value(metadata i32 %32, metadata !7333, metadata !DIExpression()), !dbg !7336
  call void @halUART_Write_VFIFO_Data(i32 noundef %29, i8* noundef nonnull %1, i32 noundef %32) #21, !dbg !7365
  %33 = load i32, i32* %4, align 4, !dbg !7366
  call void @llvm.dbg.value(metadata i32 %33, metadata !7332, metadata !DIExpression()), !dbg !7336
  %34 = icmp eq i32 %32, %33, !dbg !7368
  br i1 %34, label %35, label %37, !dbg !7369

35:                                               ; preds = %26
  %36 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %29, i1 noundef zeroext false) #19, !dbg !7370, !range !7372
  call void @llvm.dbg.value(metadata i32 %36, metadata !7334, metadata !DIExpression()), !dbg !7336
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %36) #21, !dbg !7373
  br label %37, !dbg !7374

37:                                               ; preds = %26, %35, %13, %9, %3
  %38 = phi i32 [ 0, %3 ], [ 0, %9 ], [ 0, %13 ], [ %32, %35 ], [ %32, %26 ], !dbg !7336
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #20, !dbg !7375
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #20, !dbg !7375
  ret i32 %38, !dbg !7375
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #8 !dbg !7376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7380, metadata !DIExpression()), !dbg !7383
  call void @llvm.dbg.value(metadata i1 %1, metadata !7381, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7383
  %3 = icmp eq i32 %0, 0, !dbg !7384
  %4 = select i1 %1, i32 15, i32 14, !dbg !7386
  %5 = select i1 %1, i32 17, i32 16, !dbg !7386
  %6 = select i1 %3, i32 %4, i32 %5, !dbg !7386
  call void @llvm.dbg.value(metadata i32 %6, metadata !7382, metadata !DIExpression()), !dbg !7383
  ret i32 %6, !dbg !7387
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #3 !dbg !7388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7392, metadata !DIExpression()), !dbg !7394
  %2 = icmp eq i32 %0, 0, !dbg !7395
  %3 = icmp eq i32 %0, 1, !dbg !7395
  %4 = select i1 %3, i32 1, i32 2, !dbg !7395
  %5 = select i1 %2, i32 0, i32 %4, !dbg !7395
  call void @llvm.dbg.value(metadata i32 %5, metadata !7393, metadata !DIExpression()), !dbg !7394
  %6 = icmp ult i32 %5, 2, !dbg !7396
  br i1 %6, label %7, label %9, !dbg !7398

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @uart_input_char(i32 noundef %5) #21, !dbg !7399
  br label %9, !dbg !7401

9:                                                ; preds = %1, %7
  %10 = phi i8 [ %8, %7 ], [ 0, %1 ], !dbg !7402
  ret i8 %10, !dbg !7403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #3 !dbg !7404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7408, metadata !DIExpression()), !dbg !7410
  %2 = icmp eq i32 %0, 0, !dbg !7411
  %3 = icmp eq i32 %0, 1, !dbg !7411
  %4 = select i1 %3, i32 1, i32 2, !dbg !7411
  %5 = select i1 %2, i32 0, i32 %4, !dbg !7411
  call void @llvm.dbg.value(metadata i32 %5, metadata !7409, metadata !DIExpression()), !dbg !7410
  %6 = icmp ult i32 %5, 2, !dbg !7412
  br i1 %6, label %7, label %9, !dbg !7414

7:                                                ; preds = %1
  %8 = tail call i32 @uart_input_char_unblocking(i32 noundef %5) #21, !dbg !7415
  br label %9, !dbg !7417

9:                                                ; preds = %1, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %1 ], !dbg !7418
  ret i32 %10, !dbg !7419
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #3 !dbg !7420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7424, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.value(metadata i8* %1, metadata !7425, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.value(metadata i32 %2, metadata !7426, metadata !DIExpression()), !dbg !7429
  %4 = icmp eq i32 %0, 0, !dbg !7430
  %5 = icmp eq i32 %0, 1, !dbg !7430
  %6 = select i1 %5, i32 1, i32 2, !dbg !7430
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7430
  call void @llvm.dbg.value(metadata i32 %7, metadata !7427, metadata !DIExpression()), !dbg !7429
  %8 = icmp eq i8* %1, null, !dbg !7431
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !7433
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !7433
  call void @llvm.dbg.value(metadata i32 0, metadata !7428, metadata !DIExpression()), !dbg !7429
  br i1 %12, label %19, label %13, !dbg !7433

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !7428, metadata !DIExpression()), !dbg !7429
  %15 = tail call zeroext i8 @uart_input_char(i32 noundef %7) #21, !dbg !7434
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !7440
  store i8 %15, i8* %16, align 1, !dbg !7441
  %17 = add nuw i32 %14, 1, !dbg !7442
  call void @llvm.dbg.value(metadata i32 %17, metadata !7428, metadata !DIExpression()), !dbg !7429
  %18 = icmp eq i32 %17, %2, !dbg !7443
  br i1 %18, label %19, label %13, !dbg !7444, !llvm.loop !7445

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !7429
  ret i32 %20, !dbg !7447
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !7448 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7450, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i8* %1, metadata !7451, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.value(metadata i32 %2, metadata !7452, metadata !DIExpression()), !dbg !7456
  %5 = bitcast i32* %4 to i8*, !dbg !7457
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !7457
  %6 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7458
  br i1 %6, label %7, label %20, !dbg !7460

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !7461
  %9 = icmp eq i32 %2, 0
  %10 = or i1 %8, %9, !dbg !7463
  br i1 %10, label %20, label %11, !dbg !7463

11:                                               ; preds = %7
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #19, !dbg !7464, !range !7125
  call void @llvm.dbg.value(metadata i32* %4, metadata !7453, metadata !DIExpression(DW_OP_deref)), !dbg !7456
  call void @halUART_Get_VFIFO_Length(i32 noundef %12, i32 noundef 1, i32* noundef nonnull %4) #21, !dbg !7465
  %13 = load i32, i32* %4, align 4, !dbg !7466
  call void @llvm.dbg.value(metadata i32 %13, metadata !7453, metadata !DIExpression()), !dbg !7456
  %14 = icmp ult i32 %13, %2, !dbg !7468
  %15 = select i1 %14, i32 %13, i32 %2
  call void @llvm.dbg.value(metadata i32 %15, metadata !7454, metadata !DIExpression()), !dbg !7456
  call void @halUART_Read_VFIFO_Data(i32 noundef %12, i8* noundef nonnull %1, i32 noundef %15) #21, !dbg !7469
  %16 = load i32, i32* %4, align 4, !dbg !7470
  call void @llvm.dbg.value(metadata i32 %16, metadata !7453, metadata !DIExpression()), !dbg !7456
  %17 = icmp eq i32 %15, %16, !dbg !7472
  br i1 %17, label %18, label %20, !dbg !7473

18:                                               ; preds = %11
  %19 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %12, i1 noundef zeroext true) #19, !dbg !7474, !range !7372
  call void @llvm.dbg.value(metadata i32 %19, metadata !7455, metadata !DIExpression()), !dbg !7456
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %19) #21, !dbg !7476
  br label %20, !dbg !7477

20:                                               ; preds = %11, %18, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %15, %18 ], [ %15, %11 ], !dbg !7456
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !7478
  ret i32 %21, !dbg !7478
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #3 !dbg !7479 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7481, metadata !DIExpression()), !dbg !7483
  %3 = bitcast i32* %2 to i8*, !dbg !7484
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !7484
  call void @llvm.dbg.value(metadata i32 0, metadata !7482, metadata !DIExpression()), !dbg !7483
  store i32 0, i32* %2, align 4, !dbg !7485
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7486
  br i1 %4, label %5, label %8, !dbg !7488

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #19, !dbg !7489, !range !7125
  call void @llvm.dbg.value(metadata i32* %2, metadata !7482, metadata !DIExpression(DW_OP_deref)), !dbg !7483
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 0, i32* noundef nonnull %2) #21, !dbg !7490
  %7 = load i32, i32* %2, align 4, !dbg !7491
  call void @llvm.dbg.value(metadata i32 %7, metadata !7482, metadata !DIExpression()), !dbg !7483
  br label %8, !dbg !7492

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !7483
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !7493
  ret i32 %9, !dbg !7493
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #3 !dbg !7494 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7496, metadata !DIExpression()), !dbg !7498
  %3 = bitcast i32* %2 to i8*, !dbg !7499
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !7499
  call void @llvm.dbg.value(metadata i32 0, metadata !7497, metadata !DIExpression()), !dbg !7498
  store i32 0, i32* %2, align 4, !dbg !7500
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7501
  br i1 %4, label %5, label %8, !dbg !7503

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #19, !dbg !7504, !range !7125
  call void @llvm.dbg.value(metadata i32* %2, metadata !7497, metadata !DIExpression(DW_OP_deref)), !dbg !7498
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 1, i32* noundef nonnull %2) #21, !dbg !7505
  %7 = load i32, i32* %2, align 4, !dbg !7506
  call void @llvm.dbg.value(metadata i32 %7, metadata !7497, metadata !DIExpression()), !dbg !7498
  br label %8, !dbg !7507

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !7498
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !7508
  ret i32 %9, !dbg !7508
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #3 !dbg !7509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7513, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7514, metadata !DIExpression()), !dbg !7517
  call void @llvm.dbg.value(metadata i8* %2, metadata !7515, metadata !DIExpression()), !dbg !7517
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7518
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !7520
  br i1 %6, label %7, label %24, !dbg !7520

7:                                                ; preds = %3
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 0, !dbg !7521
  store void (i32, i8*)* %1, void (i32, i8*)** %8, align 4, !dbg !7522
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 1, !dbg !7523
  store i8* %2, i8** %9, align 4, !dbg !7524
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 2, !dbg !7525
  store i8 1, i8* %10, align 4, !dbg !7526
  %11 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #19, !dbg !7527
  %12 = tail call fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) #19, !dbg !7528
  tail call void @halUART_VDMA_Rx_Register_Callback(i32 noundef %11, void ()* noundef %12) #21, !dbg !7529
  tail call void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %11, void ()* noundef %12) #21, !dbg !7530
  %13 = icmp eq i32 %11, 0, !dbg !7531
  br i1 %13, label %14, label %15, !dbg !7533

14:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 14, void ()* noundef nonnull @hal_uart_send_callback0) #21, !dbg !7534
  br label %16, !dbg !7536

15:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 16, void ()* noundef nonnull @hal_uart_send_callback1) #21, !dbg !7537
  br label %16

16:                                               ; preds = %15, %14
  %17 = tail call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %11, i1 noundef zeroext false) #19, !dbg !7539, !range !7372
  call void @llvm.dbg.value(metadata i32 %17, metadata !7516, metadata !DIExpression()), !dbg !7517
  tail call void @DMA_Vfifo_enable_interrupt(i32 noundef %17) #21, !dbg !7540
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !7541
  store i8 1, i8* %18, align 1, !dbg !7542
  %19 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !7543
  %20 = load i32, i32* %19, align 4, !dbg !7543
  %21 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %20, void (i32)* noundef nonnull @uart_interrupt_handler) #21, !dbg !7544
  tail call void @uart_unmask_send_interrupt(i32 noundef %11) #21, !dbg !7545
  %22 = load i32, i32* %19, align 4, !dbg !7546
  %23 = tail call i32 @hal_nvic_enable_irq(i32 noundef %22) #21, !dbg !7547
  br label %24, !dbg !7548

24:                                               ; preds = %3, %16
  %25 = phi i32 [ 0, %16 ], [ -4, %3 ], !dbg !7517
  ret i32 %25, !dbg !7549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) unnamed_addr #8 !dbg !864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !869, metadata !DIExpression()), !dbg !7550
  %2 = getelementptr inbounds [2 x void ()*], [2 x void ()*]* @hal_uart_map_receive_callback.func_tbl, i32 0, i32 %0, !dbg !7551
  %3 = load void ()*, void ()** %2, align 4, !dbg !7551
  ret void ()* %3, !dbg !7552
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback0() #3 !dbg !7553 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !7559, !range !2462
  %2 = icmp eq i8 %1, 0, !dbg !7559
  br i1 %2, label %8, label %3, !dbg !7560

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !7561
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !7563
  br i1 %5, label %8, label %6, !dbg !7564

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !7565
  tail call void %4(i32 noundef 2, i8* noundef %7) #21, !dbg !7567
  br label %8, !dbg !7568

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #19, !dbg !7569, !range !7125
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #19, !dbg !7570
  ret void, !dbg !7571
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback1() #3 !dbg !7572 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !7577, !range !2462
  %2 = icmp eq i8 %1, 0, !dbg !7577
  br i1 %2, label %8, label %3, !dbg !7578

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !7579
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !7581
  br i1 %5, label %8, label %6, !dbg !7582

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !7583
  tail call void %4(i32 noundef 2, i8* noundef %7) #21, !dbg !7585
  br label %8, !dbg !7586

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #19, !dbg !7587, !range !7125
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #19, !dbg !7588
  ret void, !dbg !7589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_uart_check_irq_disable(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #3 !dbg !7590 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7594, metadata !DIExpression()), !dbg !7601
  call void @llvm.dbg.value(metadata i1 %1, metadata !7595, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7601
  %5 = bitcast i32* %3 to i8*, !dbg !7602
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !7602
  %6 = bitcast i32* %4 to i8*, !dbg !7602
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #20, !dbg !7602
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !7598, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !7601
  br i1 %1, label %7, label %12, !dbg !7603

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !7598, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !7601
  call void @llvm.dbg.value(metadata i32* %3, metadata !7596, metadata !DIExpression(DW_OP_deref)), !dbg !7601
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 1, i32* noundef nonnull %3) #21, !dbg !7604
  %8 = load i32, i32* %3, align 4, !dbg !7607
  call void @llvm.dbg.value(metadata i32 %8, metadata !7596, metadata !DIExpression()), !dbg !7601
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 5, !dbg !7609
  %10 = load i32, i32* %9, align 4, !dbg !7609
  %11 = icmp ult i32 %8, %10, !dbg !7610
  br i1 %11, label %22, label %20, !dbg !7611

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32* %4, metadata !7597, metadata !DIExpression(DW_OP_deref)), !dbg !7601
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %4) #21, !dbg !7612
  %13 = load i32, i32* %4, align 4, !dbg !7614
  call void @llvm.dbg.value(metadata i32 %13, metadata !7597, metadata !DIExpression()), !dbg !7601
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !7616
  %15 = load i32, i32* %14, align 4, !dbg !7616
  %16 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 2, !dbg !7617
  %17 = load i32, i32* %16, align 4, !dbg !7617
  %18 = sub i32 %15, %17, !dbg !7618
  %19 = icmp ult i32 %13, %18, !dbg !7619
  br i1 %19, label %22, label %20, !dbg !7620

20:                                               ; preds = %12, %7
  %21 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) #19, !dbg !7621, !range !7372
  call void @DMA_Vfifo_disable_interrupt(i32 noundef %21) #21, !dbg !7621
  br label %22, !dbg !7622

22:                                               ; preds = %20, %12, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #20, !dbg !7622
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !7622
  ret void, !dbg !7622
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback0() #3 !dbg !7623 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !7628, !range !2462
  %2 = icmp eq i8 %1, 0, !dbg !7628
  br i1 %2, label %11, label %3, !dbg !7629

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 0) #19, !dbg !7630
  %5 = icmp eq i32 %4, 0, !dbg !7631
  br i1 %5, label %11, label %6, !dbg !7632

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !7633
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !7635
  br i1 %8, label %11, label %9, !dbg !7636

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !7637
  tail call void %7(i32 noundef 1, i8* noundef %10) #21, !dbg !7639
  br label %11, !dbg !7640

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #19, !dbg !7641, !range !7125
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #19, !dbg !7642
  ret void, !dbg !7643
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback1() #3 !dbg !7644 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !7649, !range !2462
  %2 = icmp eq i8 %1, 0, !dbg !7649
  br i1 %2, label %11, label %3, !dbg !7650

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 1) #19, !dbg !7651
  %5 = icmp eq i32 %4, 0, !dbg !7652
  br i1 %5, label %11, label %6, !dbg !7653

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !7654
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !7656
  br i1 %8, label %11, label %9, !dbg !7657

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !7658
  tail call void %7(i32 noundef 1, i8* noundef %10) #21, !dbg !7660
  br label %11, !dbg !7661

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #19, !dbg !7662, !range !7125
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #19, !dbg !7663
  ret void, !dbg !7664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !7665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7669, metadata !DIExpression()), !dbg !7671
  call void @llvm.dbg.value(metadata i32 %1, metadata !7670, metadata !DIExpression()), !dbg !7671
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7672
  %4 = icmp ult i32 %1, 13
  %5 = and i1 %4, %3, !dbg !7674
  br i1 %5, label %6, label %10, !dbg !7674

6:                                                ; preds = %2
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !7675
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %7, i32 0, i32 0, !dbg !7676
  store i32 %1, i32* %8, align 4, !dbg !7677
  %9 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %7) #19, !dbg !7678
  br label %10, !dbg !7679

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ -4, %2 ], !dbg !7671
  ret i32 %11, !dbg !7680
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* noundef %1) local_unnamed_addr #3 !dbg !7681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7687, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !7688, metadata !DIExpression()), !dbg !7689
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7690
  br i1 %3, label %4, label %28, !dbg !7692

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef %1) #19, !dbg !7693
  br i1 %5, label %6, label %28, !dbg !7695

6:                                                ; preds = %4
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !7696
  store i8 1, i8* %7, align 4, !dbg !7697
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, !dbg !7698
  %9 = bitcast %struct.hal_uart_dma_config_t* %8 to i8*, !dbg !7699
  %10 = bitcast %struct.hal_uart_dma_config_t* %1 to i8*, !dbg !7700
  %11 = tail call i8* @memcpy(i8* noundef nonnull %9, i8* noundef %10, i32 noundef 28) #21, !dbg !7701
  tail call void @DMA_Init() #21, !dbg !7702
  tail call void @DMA_Vfifo_init() #21, !dbg !7703
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #19, !dbg !7704
  %13 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !7705
  %14 = load i8*, i8** %13, align 4, !dbg !7705
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !7706
  %16 = load i32, i32* %15, align 4, !dbg !7706
  %17 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !7707
  %18 = load i32, i32* %17, align 4, !dbg !7707
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !7708
  %20 = load i32, i32* %19, align 4, !dbg !7708
  %21 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef 5000) #19, !dbg !7709
  tail call void @halUART_Rx_VFIFO_Initialize(i32 noundef %12, i8* noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %21) #21, !dbg !7710
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !7711
  %23 = load i8*, i8** %22, align 4, !dbg !7711
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !7712
  %25 = load i32, i32* %24, align 4, !dbg !7712
  %26 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !7713
  %27 = load i32, i32* %26, align 4, !dbg !7713
  tail call void @halUART_Tx_VFIFO_Initialize(i32 noundef %12, i8* noundef %23, i32 noundef %25, i32 noundef %27) #21, !dbg !7714
  br label %28, !dbg !7715

28:                                               ; preds = %4, %2, %6
  %29 = phi i32 [ 0, %6 ], [ -4, %2 ], [ -4, %4 ], !dbg !7689
  ret i32 %29, !dbg !7716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef readonly %0) unnamed_addr #10 !dbg !7717 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %0, metadata !7721, metadata !DIExpression()), !dbg !7722
  %2 = icmp eq %struct.hal_uart_dma_config_t* %0, null, !dbg !7723
  br i1 %2, label %27, label %3, !dbg !7725

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 3, !dbg !7726
  %5 = load i8*, i8** %4, align 4, !dbg !7726
  %6 = icmp eq i8* %5, null, !dbg !7728
  br i1 %6, label %27, label %7, !dbg !7729

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 4, !dbg !7730
  %9 = load i32, i32* %8, align 4, !dbg !7730
  %10 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 5, !dbg !7732
  %11 = load i32, i32* %10, align 4, !dbg !7732
  %12 = icmp ult i32 %9, %11, !dbg !7733
  br i1 %12, label %27, label %13, !dbg !7734

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 6, !dbg !7735
  %15 = load i32, i32* %14, align 4, !dbg !7735
  %16 = icmp ult i32 %9, %15, !dbg !7737
  br i1 %16, label %27, label %17, !dbg !7738

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 0, !dbg !7739
  %19 = load i8*, i8** %18, align 4, !dbg !7739
  %20 = icmp eq i8* %19, null, !dbg !7741
  br i1 %20, label %27, label %21, !dbg !7742

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 1, !dbg !7743
  %23 = load i32, i32* %22, align 4, !dbg !7743
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 2, !dbg !7745
  %25 = load i32, i32* %24, align 4, !dbg !7745
  %26 = icmp uge i32 %23, %25, !dbg !7746
  br label %27, !dbg !7747

27:                                               ; preds = %21, %17, %13, %7, %3, %1
  %28 = phi i1 [ false, %1 ], [ false, %3 ], [ false, %7 ], [ false, %13 ], [ false, %17 ], [ %26, %21 ], !dbg !7722
  ret i1 %28, !dbg !7748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hal_uart_translate_timeout(i32 noundef %0) unnamed_addr #3 !dbg !7749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7751, metadata !DIExpression()), !dbg !7753
  %2 = tail call i32 @top_mcu_freq_get() #21, !dbg !7754
  %3 = udiv i32 %2, 1000000, !dbg !7755
  call void @llvm.dbg.value(metadata i32 %3, metadata !7752, metadata !DIExpression()), !dbg !7753
  %4 = mul i32 %3, %0, !dbg !7756
  ret i32 %4, !dbg !7757
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #3 !dbg !7758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7760, metadata !DIExpression()), !dbg !7762
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7763
  br i1 %2, label %3, label %8, !dbg !7765

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !7766
  %5 = icmp eq i32 %0, 1, !dbg !7766
  %6 = select i1 %5, i32 1, i32 2, !dbg !7766
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7766
  call void @llvm.dbg.value(metadata i32 %7, metadata !7761, metadata !DIExpression()), !dbg !7762
  tail call void @uart_set_hardware_flowcontrol(i32 noundef %7) #21, !dbg !7767
  br label %8, !dbg !7768

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !7762
  ret i32 %9, !dbg !7769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #3 !dbg !7770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7774, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8 %1, metadata !7775, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8 %2, metadata !7776, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8 %3, metadata !7777, metadata !DIExpression()), !dbg !7779
  %5 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7780
  br i1 %5, label %6, label %11, !dbg !7782

6:                                                ; preds = %4
  %7 = icmp eq i32 %0, 0, !dbg !7783
  %8 = icmp eq i32 %0, 1, !dbg !7783
  %9 = select i1 %8, i32 1, i32 2, !dbg !7783
  %10 = select i1 %7, i32 0, i32 %9, !dbg !7783
  call void @llvm.dbg.value(metadata i32 %10, metadata !7778, metadata !DIExpression()), !dbg !7779
  tail call void @uart_set_software_flowcontrol(i32 noundef %10, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #21, !dbg !7784
  br label %11, !dbg !7785

11:                                               ; preds = %4, %6
  %12 = phi i32 [ 0, %6 ], [ -4, %4 ], !dbg !7779
  ret i32 %12, !dbg !7786
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #3 !dbg !7787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7789, metadata !DIExpression()), !dbg !7791
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7792
  br i1 %2, label %3, label %8, !dbg !7794

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !7795
  %5 = icmp eq i32 %0, 1, !dbg !7795
  %6 = select i1 %5, i32 1, i32 2, !dbg !7795
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7795
  call void @llvm.dbg.value(metadata i32 %7, metadata !7790, metadata !DIExpression()), !dbg !7791
  tail call void @uart_disable_flowcontrol(i32 noundef %7) #21, !dbg !7796
  br label %8, !dbg !7797

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !7791
  ret i32 %9, !dbg !7798
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !7799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7803, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i32 %1, metadata !7804, metadata !DIExpression()), !dbg !7805
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #19, !dbg !7806
  br i1 %3, label %4, label %8, !dbg !7808

4:                                                ; preds = %2
  %5 = icmp eq i32 %0, 0, !dbg !7809
  %6 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef %1) #19, !dbg !7811
  %7 = select i1 %5, i32 15, i32 17
  tail call void @DMA_Vfifo_Set_timeout(i32 noundef %7, i32 noundef %6) #21, !dbg !7811
  br label %8, !dbg !7812

8:                                                ; preds = %4, %2
  %9 = phi i32 [ -4, %2 ], [ 0, %4 ], !dbg !7805
  ret i32 %9, !dbg !7812
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_reset() local_unnamed_addr #1 !dbg !7813 {
  store volatile i32 0, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !7814
  store volatile i32 0, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !7815
  store volatile i32 0, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !7816
  store volatile i32 0, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !7817
  store volatile i32 0, i32* inttoptr (i32 -536866784 to i32*), align 32, !dbg !7818
  store volatile i32 0, i32* inttoptr (i32 -536866768 to i32*), align 16, !dbg !7819
  store volatile i32 0, i32* inttoptr (i32 -536866752 to i32*), align 64, !dbg !7820
  store volatile i32 0, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !7821
  %1 = load volatile i32, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !7822
  %2 = and i32 %1, -16, !dbg !7822
  store volatile i32 %2, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !7822
  %3 = load volatile i32, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !7823
  %4 = and i32 %3, -16, !dbg !7823
  store volatile i32 %4, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !7823
  %5 = load volatile i32, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !7824
  %6 = and i32 %5, -16, !dbg !7824
  store volatile i32 %6, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !7824
  %7 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !7825
  %8 = and i32 %7, -16, !dbg !7825
  store volatile i32 %8, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !7825
  ret void, !dbg !7826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_init() local_unnamed_addr #1 !dbg !7827 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !7828
  %2 = and i32 %1, 1, !dbg !7830
  %3 = icmp eq i32 %2, 0, !dbg !7830
  br i1 %3, label %4, label %22, !dbg !7831

4:                                                ; preds = %0
  tail call void @hal_dwt_reset() #19, !dbg !7832
  %5 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !7834
  %6 = and i32 %5, 65536, !dbg !7836
  %7 = icmp eq i32 %6, 0, !dbg !7836
  br i1 %7, label %8, label %11, !dbg !7837

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !7838
  %10 = or i32 %9, 16842752, !dbg !7838
  store volatile i32 %10, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !7838
  br label %11, !dbg !7840

11:                                               ; preds = %8, %4
  %12 = load volatile i32, i32* inttoptr (i32 -536866816 to i32*), align 4096, !dbg !7841
  %13 = lshr i32 %12, 28, !dbg !7842
  store i32 %13, i32* @DWT_NUMCOMP, align 4, !dbg !7843
  %14 = load volatile i32, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !7844
  %15 = or i32 %14, 31, !dbg !7844
  store volatile i32 %15, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !7844
  %16 = load volatile i32, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !7845
  %17 = or i32 %16, 31, !dbg !7845
  store volatile i32 %17, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !7845
  %18 = load volatile i32, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !7846
  %19 = or i32 %18, 31, !dbg !7846
  store volatile i32 %19, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !7846
  %20 = load volatile i32, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !7847
  %21 = or i32 %20, 31, !dbg !7847
  store volatile i32 %21, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !7847
  br label %22, !dbg !7848

22:                                               ; preds = %11, %0
  ret void, !dbg !7849
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_dwt_request_watchpoint(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7855, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata i32 %1, metadata !7856, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata i32 %2, metadata !7857, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata i32 %3, metadata !7858, metadata !DIExpression()), !dbg !7860
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !7861
  %6 = and i32 %5, 1, !dbg !7863
  %7 = icmp eq i32 %6, 0, !dbg !7863
  br i1 %7, label %8, label %23, !dbg !7864

8:                                                ; preds = %4
  %9 = load i32, i32* @DWT_NUMCOMP, align 4, !dbg !7865
  %10 = icmp ugt i32 %9, %0, !dbg !7868
  %11 = and i32 %2, %1
  %12 = icmp eq i32 %11, 0
  %13 = and i1 %12, %10, !dbg !7869
  br i1 %13, label %14, label %23, !dbg !7869

14:                                               ; preds = %8
  %15 = shl i32 %0, 2, !dbg !7870
  %16 = and i32 %15, 1073741820, !dbg !7870
  call void @llvm.dbg.value(metadata i32 %16, metadata !7859, metadata !DIExpression()), !dbg !7860
  %17 = getelementptr inbounds i32, i32* inttoptr (i32 -536866784 to i32*), i32 %16, !dbg !7871
  store volatile i32 %1, i32* %17, align 16, !dbg !7872
  %18 = getelementptr inbounds i32, i32* inttoptr (i32 -536866780 to i32*), i32 %16, !dbg !7873
  store volatile i32 %2, i32* %18, align 4, !dbg !7874
  %19 = getelementptr inbounds i32, i32* inttoptr (i32 -536866776 to i32*), i32 %16, !dbg !7875
  %20 = load volatile i32, i32* %19, align 8, !dbg !7876
  %21 = and i32 %20, 15, !dbg !7877
  %22 = or i32 %21, %3, !dbg !7878
  store volatile i32 %22, i32* %19, align 8, !dbg !7879
  br label %23, !dbg !7880

23:                                               ; preds = %4, %8, %14
  %24 = phi i32 [ 0, %14 ], [ -1, %8 ], [ -1, %4 ], !dbg !7881
  ret i32 %24, !dbg !7882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_suspend_bit() local_unnamed_addr #8 !dbg !7883 {
  call void @llvm.dbg.value(metadata i8 5, metadata !7887, metadata !DIExpression()), !dbg !7888
  ret i8 5, !dbg !7889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spi_mode_command() local_unnamed_addr #8 !dbg !7890 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_default, i32 0, i32 0), !dbg !7893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spiq_mode_command() local_unnamed_addr #8 !dbg !7894 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_default, i32 0, i32 0), !dbg !7895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_read_SR2_comand() local_unnamed_addr #8 !dbg !7896 {
  call void @llvm.dbg.value(metadata i8 5, metadata !7898, metadata !DIExpression()), !dbg !7899
  ret i8 5, !dbg !7900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias %struct.flash_info_t* @customer_flash_register() local_unnamed_addr #8 !dbg !7901 {
  ret %struct.flash_info_t* null, !dbg !7904
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #13 !dbg !7905 {
  tail call void @system_init() #21, !dbg !7910
  call void @llvm.dbg.value(metadata i32 0, metadata !7909, metadata !DIExpression()), !dbg !7911
  br label %1, !dbg !7912

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %5, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7909, metadata !DIExpression()), !dbg !7911
  %3 = getelementptr inbounds [20 x [128 x i8]], [20 x [128 x i8]]* @s_history_lines, i32 0, i32 %2, i32 0, !dbg !7914
  %4 = getelementptr inbounds [20 x i8*], [20 x i8*]* @s_history_ptrs, i32 0, i32 %2, !dbg !7917
  store i8* %3, i8** %4, align 4, !dbg !7918
  %5 = add nuw nsw i32 %2, 1, !dbg !7919
  call void @llvm.dbg.value(metadata i32 %5, metadata !7909, metadata !DIExpression()), !dbg !7911
  %6 = icmp eq i32 %5, 20, !dbg !7920
  br i1 %6, label %7, label %1, !dbg !7912, !llvm.loop !7921

7:                                                ; preds = %1
  store i8** getelementptr inbounds ([20 x i8*], [20 x i8*]* @s_history_ptrs, i32 0, i32 0), i8*** getelementptr inbounds (%struct.cli_s, %struct.cli_s* @_cli_cb, i32 0, i32 7, i32 0), align 4, !dbg !7923
  store i8* getelementptr inbounds ([128 x i8], [128 x i8]* @s_history_input, i32 0, i32 0), i8** getelementptr inbounds (%struct.cli_s, %struct.cli_s* @_cli_cb, i32 0, i32 7, i32 1), align 4, !dbg !7924
  store i8* getelementptr inbounds ([128 x i8], [128 x i8]* @s_history_parse_token, i32 0, i32 0), i8** getelementptr inbounds (%struct.cli_s, %struct.cli_s* @_cli_cb, i32 0, i32 7, i32 2), align 4, !dbg !7925
  store i16 20, i16* getelementptr inbounds (%struct.cli_s, %struct.cli_s* @_cli_cb, i32 0, i32 7, i32 3), align 4, !dbg !7926
  store i16 128, i16* getelementptr inbounds (%struct.cli_s, %struct.cli_s* @_cli_cb, i32 0, i32 7, i32 4), align 2, !dbg !7927
  store i16 0, i16* getelementptr inbounds (%struct.cli_s, %struct.cli_s* @_cli_cb, i32 0, i32 7, i32 5), align 4, !dbg !7928
  store i16 0, i16* getelementptr inbounds (%struct.cli_s, %struct.cli_s* @_cli_cb, i32 0, i32 7, i32 6), align 2, !dbg !7929
  store i8 0, i8* getelementptr inbounds (%struct.cli_s, %struct.cli_s* @_cli_cb, i32 0, i32 7, i32 7), align 4, !dbg !7930
  tail call void @cli_init(%struct.cli_s* noundef nonnull @_cli_cb) #21, !dbg !7931
  %8 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @cli_def_task, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i32 0, i32 0), i16 noundef zeroext 1024, i8* noundef null, i32 noundef 4, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #21, !dbg !7932
  tail call void @SysInitStatus_Set() #21, !dbg !7933
  tail call void @vTaskStartScheduler() #21, !dbg !7934
  br label %9, !dbg !7935

9:                                                ; preds = %9, %7
  br label %9, !dbg !7936, !llvm.loop !7939
}

; Function Attrs: optsize
declare dso_local void @cli_init(%struct.cli_s* noundef) local_unnamed_addr #4

; Function Attrs: noinline noreturn nounwind optsize
define internal void @cli_def_task(i8* nocapture noundef readnone %0) #13 !dbg !7942 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7944, metadata !DIExpression()), !dbg !7945
  br label %2, !dbg !7946

2:                                                ; preds = %2, %1
  tail call void @cli_task() #21, !dbg !7947
  br label %2, !dbg !7951, !llvm.loop !7952
}

; Function Attrs: optsize
declare dso_local void @cli_task() local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define internal zeroext i8 @cli_helloworld(i8 noundef zeroext %0, i8** nocapture noundef readnone %1) #3 !dbg !7955 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7957, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.value(metadata i8** %1, metadata !7958, metadata !DIExpression()), !dbg !7959
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.110, i32 0, i32 0)) #21, !dbg !7960
  ret i8 0, !dbg !7961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #1 !dbg !7962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7964, metadata !DIExpression()), !dbg !7966
  %2 = add i32 %0, -1, !dbg !7967
  %3 = icmp ugt i32 %2, 16777215, !dbg !7969
  br i1 %3, label %8, label %4, !dbg !7970

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7971
  call void @llvm.dbg.value(metadata i32 %5, metadata !7965, metadata !DIExpression()), !dbg !7966
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7972
  %7 = and i32 %6, -4, !dbg !7972
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7972
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !7973
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7974
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7975
  br label %8, !dbg !7976

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !7966
  ret i32 %9, !dbg !7977
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #1 !dbg !7978 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !7979
  ret void, !dbg !7980
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #9 !dbg !7981 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !7982
  ret i32 %1, !dbg !7983
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #3 !dbg !7984 {
  %1 = tail call i32 @top_mcu_freq_get() #21, !dbg !7985
  store i32 %1, i32* @SystemCoreClock, align 4, !dbg !7986
  ret void, !dbg !7987
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #1 !dbg !7988 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7989
  %2 = or i32 %1, 15728640, !dbg !7989
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7989
  store volatile i32 536870912, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7990
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7991
  %4 = or i32 %3, 458752, !dbg !7991
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7991
  ret void, !dbg !7992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #1 !dbg !7993 {
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7994
  store volatile i32 19, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7995
  store volatile i32 3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7996
  store volatile i32 268931328, i32* inttoptr (i32 22282240 to i32*), align 262144, !dbg !7997
  store volatile i32 269713408, i32* inttoptr (i32 22282304 to i32*), align 64, !dbg !7998
  store volatile i32 1, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7999
  store volatile i32 781, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !8000
  ret void, !dbg !8001
}

; Function Attrs: noinline nounwind optsize
define dso_local void @system_init() local_unnamed_addr #3 !dbg !8002 {
  %1 = alloca i64, align 8
  %2 = bitcast i64* %1 to i8*, !dbg !8009
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #20, !dbg !8009
  call void @llvm.dbg.value(metadata i64 12345, metadata !8004, metadata !DIExpression()), !dbg !8010
  store i64 12345, i64* %1, align 8, !dbg !8011
  tail call fastcc void @SystemClock_Config() #19, !dbg !8012
  tail call fastcc void @prvSetupHardware() #19, !dbg !8013
  tail call void @log_init(void (%struct.syslog_config_s*)* noundef null, i32 (%struct.syslog_config_s*)* noundef null, %struct.log_control_block_t** noundef null) #21, !dbg !8014
  call void @llvm.dbg.value(metadata i64* %1, metadata !8004, metadata !DIExpression(DW_OP_deref)), !dbg !8010
  %3 = call i8* @ctime(i64* noundef nonnull %1) #21, !dbg !8015
  call fastcc void @_main_sys_random_init() #19, !dbg !8016
  %4 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !8017
  call void (i8*, i8*, i32, i32, i8*, ...) %4(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.system_init, i32 0, i32 0), i32 noundef 225, i32 noundef 1, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i32 0, i32 0)) #21, !dbg !8017
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #20, !dbg !8019
  ret void, !dbg !8019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #3 !dbg !8020 {
  tail call void @top_xtal_init() #21, !dbg !8021
  ret void, !dbg !8022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #3 !dbg !8023 {
  tail call void @cmnCpuClkConfigureTo192M() #21, !dbg !8024
  tail call void @cmnSerialFlashClkConfTo64M() #21, !dbg !8025
  tail call void @bsp_ept_gpio_setting_init() #21, !dbg !8026
  tail call void @bsp_io_def_uart_init() #21, !dbg !8027
  tail call fastcc void @cache_enable() #19, !dbg !8028
  %1 = tail call i32 @hal_flash_init() #21, !dbg !8030
  ret void, !dbg !8031
}

; Function Attrs: optsize
declare dso_local i8* @ctime(i64* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_main_sys_random_init() unnamed_addr #3 !dbg !8032 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !8036
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #20, !dbg !8036
  %3 = tail call i32 @hal_trng_init() #21, !dbg !8037
  call void @llvm.dbg.value(metadata i32 %3, metadata !8035, metadata !DIExpression()), !dbg !8038
  %4 = icmp eq i32 %3, 0, !dbg !8039
  br i1 %4, label %5, label %10, !dbg !8041

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !8034, metadata !DIExpression(DW_OP_deref)), !dbg !8038
  %6 = call i32 @hal_trng_get_generated_random_number(i32* noundef nonnull %1) #21, !dbg !8042
  call void @llvm.dbg.value(metadata i32 %6, metadata !8035, metadata !DIExpression()), !dbg !8038
  %7 = icmp eq i32 %6, 0, !dbg !8044
  br i1 %7, label %8, label %10, !dbg !8044

8:                                                ; preds = %5
  %9 = load i32, i32* %1, align 4, !dbg !8045
  call void @llvm.dbg.value(metadata i32 %9, metadata !8034, metadata !DIExpression()), !dbg !8038
  call void @srand(i32 noundef %9) #21, !dbg !8048
  br label %12, !dbg !8049

10:                                               ; preds = %0, %5
  %11 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.127, i32 0, i32 0)) #21, !dbg !8050
  br label %12, !dbg !8053

12:                                               ; preds = %8, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #20, !dbg !8054
  ret void, !dbg !8054
}

; Function Attrs: optsize
declare dso_local void @srand(i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cache_enable() unnamed_addr #3 !dbg !8055 {
  call void @llvm.dbg.value(metadata i32 3, metadata !8059, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i32 1, metadata !8061, metadata !DIExpression()), !dbg !8062
  %1 = tail call i32 @hal_cache_init() #21, !dbg !8063
  %2 = tail call i32 @hal_cache_set_size(i32 noundef 3) #21, !dbg !8064
  call void @llvm.dbg.value(metadata i32 0, metadata !8060, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i32 undef, metadata !8060, metadata !DIExpression()), !dbg !8062
  %3 = tail call i32 @hal_cache_region_config(i32 noundef 0, %struct.DMA_SWCOPYMENU* noundef getelementptr inbounds ([1 x %struct.DMA_SWCOPYMENU], [1 x %struct.DMA_SWCOPYMENU]* @region_cfg_tbl, i32 0, i32 0)) #21, !dbg !8065
  %4 = tail call i32 @hal_cache_region_enable(i32 noundef 0) #21, !dbg !8069
  call void @llvm.dbg.value(metadata i32 1, metadata !8060, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i32 undef, metadata !8060, metadata !DIExpression()), !dbg !8062
  br label %5, !dbg !8070

5:                                                ; preds = %0, %5
  %6 = phi i32 [ 1, %0 ], [ %8, %5 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8060, metadata !DIExpression()), !dbg !8062
  %7 = tail call i32 @hal_cache_region_disable(i32 noundef %6) #21, !dbg !8072
  %8 = add nuw nsw i32 %6, 1, !dbg !8075
  call void @llvm.dbg.value(metadata i32 %8, metadata !8060, metadata !DIExpression()), !dbg !8062
  %9 = icmp eq i32 %8, 16, !dbg !8076
  br i1 %9, label %10, label %5, !dbg !8070, !llvm.loop !8077

10:                                               ; preds = %5
  %11 = tail call i32 @hal_cache_enable() #21, !dbg !8079
  ret void, !dbg !8080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #8 !dbg !8081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8083, metadata !DIExpression()), !dbg !8084
  ret i32 0, !dbg !8085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #8 !dbg !8086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8132, metadata !DIExpression()), !dbg !8134
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !8133, metadata !DIExpression()), !dbg !8134
  ret i32 0, !dbg !8135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #8 !dbg !8136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8138, metadata !DIExpression()), !dbg !8139
  ret i32 1, !dbg !8140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8145, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.value(metadata i32 %1, metadata !8146, metadata !DIExpression()), !dbg !8148
  call void @llvm.dbg.value(metadata i32 %2, metadata !8147, metadata !DIExpression()), !dbg !8148
  ret i32 0, !dbg !8149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8150 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8154, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i32 %1, metadata !8155, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.value(metadata i32 %2, metadata !8156, metadata !DIExpression()), !dbg !8157
  ret i32 -1, !dbg !8158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #8 !dbg !8159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8163, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i8* %1, metadata !8164, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.value(metadata i32 %2, metadata !8165, metadata !DIExpression()), !dbg !8166
  ret i32 0, !dbg !8167
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #3 !dbg !8168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8170, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i8* %1, metadata !8171, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i32 %2, metadata !8172, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i32 0, metadata !8173, metadata !DIExpression()), !dbg !8174
  %4 = icmp sgt i32 %2, 0, !dbg !8175
  br i1 %4, label %5, label %14, !dbg !8178

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8173, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i8* %7, metadata !8171, metadata !DIExpression()), !dbg !8174
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8179
  call void @llvm.dbg.value(metadata i8* %8, metadata !8171, metadata !DIExpression()), !dbg !8174
  %9 = load i8, i8* %7, align 1, !dbg !8181
  %10 = zext i8 %9 to i32, !dbg !8181
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #21, !dbg !8182
  %12 = add nuw nsw i32 %6, 1, !dbg !8183
  call void @llvm.dbg.value(metadata i32 %12, metadata !8173, metadata !DIExpression()), !dbg !8174
  %13 = icmp eq i32 %12, %2, !dbg !8175
  br i1 %13, label %14, label %5, !dbg !8178, !llvm.loop !8184

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !8186
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !1106 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !1302, metadata !DIExpression()), !dbg !8187
  call void @llvm.dbg.value(metadata i32 %1, metadata !1303, metadata !DIExpression()), !dbg !8187
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #20, !dbg !8188, !srcloc !8189
  call void @llvm.dbg.value(metadata i8* %3, metadata !1305, metadata !DIExpression()), !dbg !8187
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !8190
  %5 = icmp eq i8* %4, null, !dbg !8192
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !8193
  call void @llvm.dbg.value(metadata i8* %6, metadata !1304, metadata !DIExpression()), !dbg !8187
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !8194
  %8 = icmp ult i8* %3, %7, !dbg !8196
  %9 = xor i1 %8, true, !dbg !8197
  %10 = or i1 %5, %9, !dbg !8197
  br i1 %10, label %11, label %13, !dbg !8197

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !8198
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !8197
  br label %13, !dbg !8197

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !8198
  ret i8* %14, !dbg !8197
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @_exit(i32 noundef %0) local_unnamed_addr #13 !dbg !8199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8201, metadata !DIExpression()), !dbg !8202
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.128, i32 0, i32 0)) #21, !dbg !8203
  br label %3, !dbg !8204

3:                                                ; preds = %1, %3
  br label %3, !dbg !8204, !llvm.loop !8205
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !8207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8211, metadata !DIExpression()), !dbg !8213
  call void @llvm.dbg.value(metadata i32 %1, metadata !8212, metadata !DIExpression()), !dbg !8213
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.129, i32 0, i32 0), i32 noundef %1) #21, !dbg !8214
  ret i32 -1, !dbg !8215
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_getpid() local_unnamed_addr #3 !dbg !8216 {
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.130, i32 0, i32 0)) #21, !dbg !8221
  ret i32 0, !dbg !8222
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_mode_init() local_unnamed_addr #1 !dbg !8223 {
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.gpio_mode_init.mode_temp, metadata !8226, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 0, metadata !8225, metadata !DIExpression()), !dbg !8231
  br label %1, !dbg !8232

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8225, metadata !DIExpression()), !dbg !8231
  %3 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.gpio_mode_init.mode_temp, i32 0, i32 %2, !dbg !8234
  %4 = load i32, i32* %3, align 4, !dbg !8234
  %5 = shl nuw nsw i32 %2, 2, !dbg !8234
  %6 = add nuw nsw i32 %5, -2130563040, !dbg !8234
  %7 = inttoptr i32 %6 to i32*, !dbg !8234
  store volatile i32 %4, i32* %7, align 4, !dbg !8234
  %8 = add nuw nsw i32 %2, 1, !dbg !8237
  call void @llvm.dbg.value(metadata i32 %8, metadata !8225, metadata !DIExpression()), !dbg !8231
  %9 = icmp eq i32 %8, 10, !dbg !8238
  br i1 %9, label %10, label %1, !dbg !8232, !llvm.loop !8239

10:                                               ; preds = %1
  ret void, !dbg !8241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_oe_init() local_unnamed_addr #1 !dbg !8242 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8244, metadata !DIExpression()), !dbg !8247
  call void @llvm.dbg.value(metadata i32 0, metadata !8244, metadata !DIExpression()), !dbg !8247
  store volatile i32 -419430160, i32* inttoptr (i32 -2097106800 to i32*), align 16, !dbg !8248
  call void @llvm.dbg.value(metadata i32 1, metadata !8244, metadata !DIExpression()), !dbg !8247
  call void @llvm.dbg.value(metadata i32 1, metadata !8244, metadata !DIExpression()), !dbg !8247
  store volatile i32 100663495, i32* inttoptr (i32 -2097106784 to i32*), align 32, !dbg !8248
  call void @llvm.dbg.value(metadata i32 2, metadata !8244, metadata !DIExpression()), !dbg !8247
  call void @llvm.dbg.value(metadata i32 2, metadata !8244, metadata !DIExpression()), !dbg !8247
  store volatile i32 0, i32* inttoptr (i32 -2097106768 to i32*), align 16, !dbg !8248
  call void @llvm.dbg.value(metadata i32 3, metadata !8244, metadata !DIExpression()), !dbg !8247
  ret void, !dbg !8252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_ies_init() local_unnamed_addr #1 !dbg !8253 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8255, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.value(metadata i32 0, metadata !8255, metadata !DIExpression()), !dbg !8257
  store volatile i32 419430159, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !8258
  call void @llvm.dbg.value(metadata i32 1, metadata !8255, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.value(metadata i32 1, metadata !8255, metadata !DIExpression()), !dbg !8257
  store volatile i32 -100663496, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !8258
  call void @llvm.dbg.value(metadata i32 2, metadata !8255, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.value(metadata i32 2, metadata !8255, metadata !DIExpression()), !dbg !8257
  store volatile i32 511, i32* inttoptr (i32 -2097106680 to i32*), align 8, !dbg !8258
  call void @llvm.dbg.value(metadata i32 3, metadata !8255, metadata !DIExpression()), !dbg !8257
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !8262
  %2 = and i32 %1, -3, !dbg !8262
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !8262
  %3 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !8263
  %4 = or i32 %3, 2, !dbg !8263
  store volatile i32 %4, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !8263
  %5 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !8264
  %6 = or i32 %5, 2048, !dbg !8264
  store volatile i32 %6, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !8264
  %7 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !8265
  %8 = and i32 %7, -3, !dbg !8265
  store volatile i32 %8, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !8265
  %9 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !8266
  %10 = or i32 %9, 2, !dbg !8266
  store volatile i32 %10, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !8266
  %11 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !8267
  %12 = or i32 %11, 2048, !dbg !8267
  store volatile i32 %12, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !8267
  %13 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !8268
  %14 = and i32 %13, -3, !dbg !8268
  store volatile i32 %14, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !8268
  %15 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !8269
  store volatile i32 %15, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !8269
  %16 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !8270
  %17 = or i32 %16, 2048, !dbg !8270
  store volatile i32 %17, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !8270
  %18 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !8271
  %19 = and i32 %18, -3, !dbg !8271
  store volatile i32 %19, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !8271
  %20 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !8272
  store volatile i32 %20, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !8272
  %21 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !8273
  %22 = or i32 %21, 2048, !dbg !8273
  store volatile i32 %22, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !8273
  %23 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !8274
  %24 = and i32 %23, -3, !dbg !8274
  store volatile i32 %24, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !8274
  %25 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !8275
  store volatile i32 %25, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !8275
  %26 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !8276
  %27 = or i32 %26, 2048, !dbg !8276
  store volatile i32 %27, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !8276
  %28 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !8277
  %29 = and i32 %28, -3, !dbg !8277
  store volatile i32 %29, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !8277
  %30 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !8278
  store volatile i32 %30, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !8278
  %31 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !8279
  %32 = or i32 %31, 2048, !dbg !8279
  store volatile i32 %32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !8279
  ret void, !dbg !8280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_up_init() local_unnamed_addr #1 !dbg !8281 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8283, metadata !DIExpression()), !dbg !8285
  call void @llvm.dbg.value(metadata i32 0, metadata !8283, metadata !DIExpression()), !dbg !8285
  store volatile i32 4, i32* inttoptr (i32 -2097106944 to i32*), align 4096, !dbg !8286
  call void @llvm.dbg.value(metadata i32 1, metadata !8283, metadata !DIExpression()), !dbg !8285
  call void @llvm.dbg.value(metadata i32 1, metadata !8283, metadata !DIExpression()), !dbg !8285
  store volatile i32 16, i32* inttoptr (i32 -2097106928 to i32*), align 16, !dbg !8286
  call void @llvm.dbg.value(metadata i32 2, metadata !8283, metadata !DIExpression()), !dbg !8285
  call void @llvm.dbg.value(metadata i32 2, metadata !8283, metadata !DIExpression()), !dbg !8285
  store volatile i32 0, i32* inttoptr (i32 -2097106912 to i32*), align 32, !dbg !8286
  call void @llvm.dbg.value(metadata i32 3, metadata !8283, metadata !DIExpression()), !dbg !8285
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !8290
  %2 = and i32 %1, -29, !dbg !8290
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !8290
  %3 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !8291
  %4 = and i32 %3, -29, !dbg !8291
  store volatile i32 %4, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !8291
  %5 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !8292
  %6 = and i32 %5, -29, !dbg !8292
  store volatile i32 %6, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !8292
  %7 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !8293
  %8 = and i32 %7, -29, !dbg !8293
  store volatile i32 %8, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !8293
  %9 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !8294
  %10 = and i32 %9, -29, !dbg !8294
  store volatile i32 %10, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !8294
  %11 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !8295
  %12 = and i32 %11, -29, !dbg !8295
  store volatile i32 %12, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !8295
  ret void, !dbg !8296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_down_init() local_unnamed_addr #1 !dbg !8297 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8299, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.value(metadata i32 0, metadata !8299, metadata !DIExpression()), !dbg !8301
  store volatile i32 16776960, i32* inttoptr (i32 -2097106896 to i32*), align 16, !dbg !8302
  call void @llvm.dbg.value(metadata i32 1, metadata !8299, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.value(metadata i32 1, metadata !8299, metadata !DIExpression()), !dbg !8301
  store volatile i32 -100663544, i32* inttoptr (i32 -2097106880 to i32*), align 64, !dbg !8302
  call void @llvm.dbg.value(metadata i32 2, metadata !8299, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.value(metadata i32 2, metadata !8299, metadata !DIExpression()), !dbg !8301
  store volatile i32 511, i32* inttoptr (i32 -2097106864 to i32*), align 16, !dbg !8302
  call void @llvm.dbg.value(metadata i32 3, metadata !8299, metadata !DIExpression()), !dbg !8301
  ret void, !dbg !8306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_output_init() local_unnamed_addr #1 !dbg !8307 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8309, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.value(metadata i32 0, metadata !8309, metadata !DIExpression()), !dbg !8311
  store volatile i32 64, i32* inttoptr (i32 -2097106848 to i32*), align 32, !dbg !8312
  call void @llvm.dbg.value(metadata i32 1, metadata !8309, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.value(metadata i32 1, metadata !8309, metadata !DIExpression()), !dbg !8311
  store volatile i32 64, i32* inttoptr (i32 -2097106832 to i32*), align 16, !dbg !8312
  call void @llvm.dbg.value(metadata i32 2, metadata !8309, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.value(metadata i32 2, metadata !8309, metadata !DIExpression()), !dbg !8311
  store volatile i32 0, i32* inttoptr (i32 -2097106816 to i32*), align 128, !dbg !8312
  call void @llvm.dbg.value(metadata i32 3, metadata !8309, metadata !DIExpression()), !dbg !8311
  ret void, !dbg !8316
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bsp_ept_gpio_set_control_by_cm4() local_unnamed_addr #1 !dbg !8317 {
  store volatile i32 -1, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !8318
  store volatile i32 -1, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !8319
  store volatile i32 50397183, i32* inttoptr (i32 -2130571128 to i32*), align 8, !dbg !8320
  ret void, !dbg !8321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bsp_ept_gpio_setting_init() local_unnamed_addr #1 !dbg !8322 {
  tail call void @gpio_mode_init() #19, !dbg !8323
  tail call void @gpio_oe_init() #19, !dbg !8324
  tail call void @gpio_ies_init() #19, !dbg !8325
  tail call void @gpio_pull_up_init() #19, !dbg !8326
  tail call void @gpio_pull_down_init() #19, !dbg !8327
  tail call void @gpio_output_init() #19, !dbg !8328
  ret void, !dbg !8329
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGenericCreate(void (i8*)* noundef %0, i8* nocapture noundef readonly %1, i16 noundef zeroext %2, i8* noundef %3, i32 noundef %4, i8** noundef writeonly %5, i32* noundef %6, %struct.xMEMORY_REGION* nocapture readnone %7) local_unnamed_addr #3 !dbg !8330 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !8350, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata i8* %1, metadata !8351, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata i16 %2, metadata !8352, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata i8* %3, metadata !8353, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata i32 %4, metadata !8354, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata i8** %5, metadata !8355, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata i32* %6, metadata !8356, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !8357, metadata !DIExpression()), !dbg !8361
  %9 = icmp eq void (i8*)* %0, null, !dbg !8362
  br i1 %9, label %10, label %11, !dbg !8364

10:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 553) #21, !dbg !8365
  br label %11, !dbg !8365

11:                                               ; preds = %10, %8
  %12 = icmp ugt i32 %4, 19, !dbg !8367
  br i1 %12, label %13, label %14, !dbg !8369

13:                                               ; preds = %11
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 554) #21, !dbg !8370
  br label %14, !dbg !8370

14:                                               ; preds = %13, %11
  %15 = tail call fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %2, i32* noundef %6) #19, !dbg !8372
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %15, metadata !8359, metadata !DIExpression()), !dbg !8361
  %16 = icmp eq %struct.tskTaskControlBlock* %15, null, !dbg !8373
  br i1 %16, label %68, label %17, !dbg !8375

17:                                               ; preds = %14
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i16 %2), metadata !8360, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !8361
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 4, !dbg !8376
  %19 = load i32*, i32** %18, align 4, !dbg !8376
  call void @llvm.dbg.value(metadata !DIArgList(i32* %19, i16 %2), metadata !8360, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !8361
  %20 = zext i16 %2 to i32, !dbg !8379
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %20), metadata !8360, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !8361
  %21 = add nsw i32 %20, -1, !dbg !8380
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %21), metadata !8360, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !8361
  %22 = getelementptr inbounds i32, i32* %19, i32 %21, !dbg !8381
  call void @llvm.dbg.value(metadata i32* %22, metadata !8360, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !8361
  %23 = ptrtoint i32* %22 to i32, !dbg !8382
  call void @llvm.dbg.value(metadata i32 %23, metadata !8360, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !8361
  %24 = and i32 %23, -8, !dbg !8383
  call void @llvm.dbg.value(metadata i32 %24, metadata !8360, metadata !DIExpression()), !dbg !8361
  %25 = inttoptr i32 %24 to i32*, !dbg !8384
  call void @llvm.dbg.value(metadata i32* %25, metadata !8360, metadata !DIExpression()), !dbg !8361
  tail call fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef nonnull %15, i8* noundef %1, i32 noundef %4) #19, !dbg !8385
  %26 = tail call i32* @pxPortInitialiseStack(i32* noundef %25, void (i8*)* noundef %0, i8* noundef %3) #21, !dbg !8386
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 0, !dbg !8388
  store i32* %26, i32** %27, align 4, !dbg !8389
  %28 = icmp eq i8** %5, null, !dbg !8390
  br i1 %28, label %31, label %29, !dbg !8392

29:                                               ; preds = %17
  %30 = bitcast i8** %5 to %struct.tskTaskControlBlock**, !dbg !8393
  store %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** %30, align 4, !dbg !8393
  br label %31, !dbg !8395

31:                                               ; preds = %17, %29
  tail call void @vPortEnterCritical() #21, !dbg !8396
  %32 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8397
  %33 = add i32 %32, 1, !dbg !8397
  store volatile i32 %33, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8397
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8399
  %35 = icmp eq %struct.tskTaskControlBlock* %34, null, !dbg !8401
  br i1 %35, label %36, label %40, !dbg !8402

36:                                               ; preds = %31
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8403
  %37 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8405
  %38 = icmp eq i32 %37, 1, !dbg !8407
  br i1 %38, label %39, label %49, !dbg !8408

39:                                               ; preds = %36
  tail call fastcc void @prvInitialiseTaskLists() #19, !dbg !8409
  br label %49, !dbg !8411

40:                                               ; preds = %31
  %41 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !8412
  %42 = icmp eq i32 %41, 0, !dbg !8415
  br i1 %42, label %43, label %49, !dbg !8416

43:                                               ; preds = %40
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8417
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !8420
  %46 = load i32, i32* %45, align 4, !dbg !8420
  %47 = icmp ugt i32 %46, %4, !dbg !8421
  br i1 %47, label %49, label %48, !dbg !8422

48:                                               ; preds = %43
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8423
  br label %49, !dbg !8425

49:                                               ; preds = %43, %48, %40, %39, %36
  %50 = load i32, i32* @uxTaskNumber, align 4, !dbg !8426
  %51 = add i32 %50, 1, !dbg !8426
  store i32 %51, i32* @uxTaskNumber, align 4, !dbg !8426
  %52 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 6, !dbg !8427
  store i32 %51, i32* %52, align 4, !dbg !8429
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !8430
  %54 = load i32, i32* %53, align 4, !dbg !8430
  %55 = shl nuw i32 1, %54, !dbg !8430
  %56 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8430
  %57 = or i32 %56, %55, !dbg !8430
  store volatile i32 %57, i32* @uxTopReadyPriority, align 4, !dbg !8430
  %58 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %54, !dbg !8430
  %59 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 1, !dbg !8430
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %58, %struct.xLIST_ITEM* noundef nonnull %59) #21, !dbg !8430
  call void @llvm.dbg.value(metadata i32 1, metadata !8358, metadata !DIExpression()), !dbg !8361
  tail call void @vPortExitCritical() #21, !dbg !8431
  %60 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !8432
  %61 = icmp eq i32 %60, 0, !dbg !8436
  br i1 %61, label %68, label %62, !dbg !8437

62:                                               ; preds = %49
  %63 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8438
  %64 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %63, i32 0, i32 3, !dbg !8441
  %65 = load i32, i32* %64, align 4, !dbg !8441
  %66 = icmp ult i32 %65, %4, !dbg !8442
  br i1 %66, label %67, label %68, !dbg !8443

67:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8444
  tail call void asm sideeffect "dsb", ""() #20, !dbg !8444, !srcloc !8447
  tail call void asm sideeffect "isb", ""() #20, !dbg !8444, !srcloc !8448
  br label %68, !dbg !8449

68:                                               ; preds = %14, %62, %67, %49
  %69 = phi i32 [ 1, %62 ], [ 1, %67 ], [ 1, %49 ], [ -1, %14 ]
  ret i32 %69, !dbg !8450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %0, i32* noundef %1) unnamed_addr #3 !dbg !8451 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8455, metadata !DIExpression()), !dbg !8460
  call void @llvm.dbg.value(metadata i32* %1, metadata !8456, metadata !DIExpression()), !dbg !8460
  %3 = icmp eq i32* %1, null, !dbg !8461
  br i1 %3, label %4, label %8, !dbg !8461

4:                                                ; preds = %2
  %5 = zext i16 %0 to i32, !dbg !8461
  %6 = shl nuw nsw i32 %5, 2, !dbg !8461
  %7 = tail call i8* @pvPortMalloc(i32 noundef %6) #21, !dbg !8461
  br label %10, !dbg !8461

8:                                                ; preds = %2
  %9 = bitcast i32* %1 to i8*, !dbg !8461
  br label %10, !dbg !8461

10:                                               ; preds = %8, %4
  %11 = phi i8* [ %7, %4 ], [ %9, %8 ], !dbg !8461
  call void @llvm.dbg.value(metadata i8* %11, metadata !8458, metadata !DIExpression()), !dbg !8462
  %12 = icmp eq i8* %11, null, !dbg !8463
  br i1 %12, label %24, label %13, !dbg !8465

13:                                               ; preds = %10
  %14 = tail call i8* @pvPortMalloc(i32 noundef 84) #21, !dbg !8466
  call void @llvm.dbg.value(metadata i8* %14, metadata !8457, metadata !DIExpression()), !dbg !8460
  %15 = icmp eq i8* %14, null, !dbg !8468
  br i1 %15, label %16, label %17, !dbg !8470

16:                                               ; preds = %13
  tail call void @vPortFree(i8* noundef nonnull %11) #21, !dbg !8471
  br label %24

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8* %14, metadata !8457, metadata !DIExpression()), !dbg !8460
  %18 = getelementptr inbounds i8, i8* %14, i32 48, !dbg !8473
  %19 = bitcast i8* %18 to i8**, !dbg !8475
  store i8* %11, i8** %19, align 4, !dbg !8475
  %20 = bitcast i8* %14 to %struct.tskTaskControlBlock*, !dbg !8476
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %20, metadata !8457, metadata !DIExpression()), !dbg !8460
  %21 = zext i16 %0 to i32, !dbg !8477
  %22 = shl nuw nsw i32 %21, 2, !dbg !8481
  %23 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 165, i32 noundef %22) #21, !dbg !8482
  br label %24, !dbg !8483

24:                                               ; preds = %10, %16, %17
  %25 = phi %struct.tskTaskControlBlock* [ %20, %17 ], [ null, %16 ], [ null, %10 ]
  ret %struct.tskTaskControlBlock* %25, !dbg !8484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #3 !dbg !8485 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !8490, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata i8* %1, metadata !8491, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata i32 %2, metadata !8492, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !8493, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata i16 undef, metadata !8494, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata i32 0, metadata !8495, metadata !DIExpression()), !dbg !8496
  br label %4, !dbg !8497

4:                                                ; preds = %4, %3
  %5 = phi i32 [ 0, %3 ], [ %11, %4 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8495, metadata !DIExpression()), !dbg !8496
  %6 = getelementptr inbounds i8, i8* %1, i32 %5, !dbg !8499
  %7 = load i8, i8* %6, align 1, !dbg !8499
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 %5, !dbg !8502
  store i8 %7, i8* %8, align 1, !dbg !8503
  %9 = load i8, i8* %6, align 1, !dbg !8504
  %10 = icmp eq i8 %9, 0, !dbg !8506
  call void @llvm.dbg.value(metadata i32 %5, metadata !8495, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8496
  %11 = add nuw nsw i32 %5, 1
  %12 = icmp eq i32 %11, 6
  %13 = select i1 %10, i1 true, i1 %12, !dbg !8507
  call void @llvm.dbg.value(metadata i32 %11, metadata !8495, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.value(metadata i32 %5, metadata !8495, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8496
  br i1 %13, label %14, label %4, !dbg !8507, !llvm.loop !8508

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 5, !dbg !8510
  store i8 0, i8* %15, align 1, !dbg !8511
  %16 = icmp ult i32 %2, 19, !dbg !8512
  %17 = select i1 %16, i32 %2, i32 19, !dbg !8512
  call void @llvm.dbg.value(metadata i32 %17, metadata !8492, metadata !DIExpression()), !dbg !8496
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !8513
  store i32 %17, i32* %18, align 4, !dbg !8514
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 8, !dbg !8515
  store i32 %17, i32* %19, align 4, !dbg !8517
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 9, !dbg !8518
  store i32 0, i32* %20, align 4, !dbg !8519
  %21 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !8520
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %21) #21, !dbg !8521
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, !dbg !8522
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %22) #21, !dbg !8523
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, i32 3, !dbg !8524
  %24 = bitcast i8** %23 to %struct.tskTaskControlBlock**, !dbg !8524
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %24, align 4, !dbg !8524
  %25 = sub nuw nsw i32 20, %17, !dbg !8525
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 0, !dbg !8525
  store i32 %25, i32* %26, align 4, !dbg !8525
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 3, !dbg !8526
  %28 = bitcast i8** %27 to %struct.tskTaskControlBlock**, !dbg !8526
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %28, align 4, !dbg !8526
  %29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !8527
  store volatile i32 0, i32* %29, align 4, !dbg !8529
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 11, !dbg !8530
  store volatile i32 0, i32* %30, align 4, !dbg !8531
  ret void, !dbg !8532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTaskLists() unnamed_addr #3 !dbg !8533 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8535, metadata !DIExpression()), !dbg !8536
  br label %1, !dbg !8537

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8535, metadata !DIExpression()), !dbg !8536
  %3 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, !dbg !8539
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %3) #21, !dbg !8542
  %4 = add nuw nsw i32 %2, 1, !dbg !8543
  call void @llvm.dbg.value(metadata i32 %4, metadata !8535, metadata !DIExpression()), !dbg !8536
  %5 = icmp eq i32 %4, 20, !dbg !8544
  br i1 %5, label %6, label %1, !dbg !8537, !llvm.loop !8545

6:                                                ; preds = %1
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList1) #21, !dbg !8547
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList2) #21, !dbg !8548
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xPendingReadyList) #21, !dbg !8549
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xTasksWaitingTermination) #21, !dbg !8550
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xSuspendedTaskList) #21, !dbg !8552
  store volatile %struct.xLIST* @xDelayedTaskList1, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8554
  store volatile %struct.xLIST* @xDelayedTaskList2, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !8555
  ret void, !dbg !8556
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelete(i8* noundef %0) local_unnamed_addr #3 !dbg !8557 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8561, metadata !DIExpression()), !dbg !8563
  tail call void @vPortEnterCritical() #21, !dbg !8564
  %2 = icmp eq i8* %0, null, !dbg !8565
  br i1 %2, label %3, label %5, !dbg !8565

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8565
  br label %7, !dbg !8565

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8565
  br label %7, !dbg !8565

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !8565
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !8562, metadata !DIExpression()), !dbg !8563
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !8567
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #21, !dbg !8569
  %11 = icmp eq i32 %10, 0, !dbg !8570
  br i1 %11, label %12, label %23, !dbg !8571

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !8572
  %14 = load i32, i32* %13, align 4, !dbg !8572
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !8572
  %16 = load i32, i32* %15, align 4, !dbg !8572
  %17 = icmp eq i32 %16, 0, !dbg !8572
  br i1 %17, label %18, label %23, !dbg !8576

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !8577
  %20 = xor i32 %19, -1, !dbg !8577
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8577
  %22 = and i32 %21, %20, !dbg !8577
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !8577
  br label %23, !dbg !8577

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !8579
  %25 = load i8*, i8** %24, align 4, !dbg !8579
  %26 = icmp eq i8* %25, null, !dbg !8581
  br i1 %26, label %30, label %27, !dbg !8582

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !8579
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #21, !dbg !8583
  br label %30, !dbg !8585

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xTasksWaitingTermination, %struct.xLIST_ITEM* noundef nonnull %9) #21, !dbg !8586
  %31 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !8587
  %32 = add i32 %31, 1, !dbg !8587
  store volatile i32 %32, i32* @uxTasksDeleted, align 4, !dbg !8587
  %33 = load i32, i32* @uxTaskNumber, align 4, !dbg !8588
  %34 = add i32 %33, 1, !dbg !8588
  store i32 %34, i32* @uxTaskNumber, align 4, !dbg !8588
  tail call void @vPortExitCritical() #21, !dbg !8589
  %35 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !8590
  %36 = icmp eq i32 %35, 0, !dbg !8592
  br i1 %36, label %46, label %37, !dbg !8593

37:                                               ; preds = %30
  %38 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8594
  %39 = icmp eq %struct.tskTaskControlBlock* %8, %38, !dbg !8597
  br i1 %39, label %40, label %45, !dbg !8598

40:                                               ; preds = %37
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8599
  %42 = icmp eq i32 %41, 0, !dbg !8599
  br i1 %42, label %44, label %43, !dbg !8602

43:                                               ; preds = %40
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 794) #21, !dbg !8603
  br label %44, !dbg !8603

44:                                               ; preds = %43, %40
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8605
  tail call void asm sideeffect "dsb", ""() #20, !dbg !8605, !srcloc !8607
  tail call void asm sideeffect "isb", ""() #20, !dbg !8605, !srcloc !8608
  br label %46, !dbg !8609

45:                                               ; preds = %37
  tail call void @vPortEnterCritical() #21, !dbg !8610
  tail call fastcc void @prvResetNextTaskUnblockTime() #19, !dbg !8612
  tail call void @vPortExitCritical() #21, !dbg !8614
  br label %46

46:                                               ; preds = %44, %45, %30
  ret void, !dbg !8615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @prvResetNextTaskUnblockTime() unnamed_addr #1 !dbg !8616 {
  %1 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8619
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !8619
  %3 = load i32, i32* %2, align 4, !dbg !8619
  %4 = icmp eq i32 %3, 0, !dbg !8619
  br i1 %4, label %14, label %5, !dbg !8621

5:                                                ; preds = %0
  %6 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8622
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !8622
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !8622
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !8622
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !8622
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !8622
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !8618, metadata !DIExpression()), !dbg !8624
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, i32 0, !dbg !8625
  %13 = load i32, i32* %12, align 4, !dbg !8625
  br label %14

14:                                               ; preds = %0, %5
  %15 = phi i32 [ %13, %5 ], [ -1, %0 ]
  store volatile i32 %15, i32* @xNextTaskUnblockTime, align 4, !dbg !8626
  ret void, !dbg !8627
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelayUntil(i32* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !8628 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !8635, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 %1, metadata !8636, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.value(metadata i32 0, metadata !8639, metadata !DIExpression()), !dbg !8642
  %3 = icmp eq i32* %0, null, !dbg !8643
  br i1 %3, label %4, label %5, !dbg !8645

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 827) #21, !dbg !8646
  br label %5, !dbg !8646

5:                                                ; preds = %4, %2
  %6 = icmp eq i32 %1, 0, !dbg !8648
  br i1 %6, label %7, label %8, !dbg !8650

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 828) #21, !dbg !8651
  br label %8, !dbg !8651

8:                                                ; preds = %7, %5
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8653
  %10 = icmp eq i32 %9, 0, !dbg !8653
  br i1 %10, label %12, label %11, !dbg !8655

11:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 829) #21, !dbg !8656
  br label %12, !dbg !8656

12:                                               ; preds = %11, %8
  tail call void @vTaskSuspendAll() #19, !dbg !8658
  %13 = load volatile i32, i32* @xTickCount, align 4, !dbg !8659
  call void @llvm.dbg.value(metadata i32 %13, metadata !8640, metadata !DIExpression()), !dbg !8660
  %14 = load i32, i32* %0, align 4, !dbg !8661
  %15 = add i32 %14, %1, !dbg !8662
  call void @llvm.dbg.value(metadata i32 %15, metadata !8637, metadata !DIExpression()), !dbg !8642
  %16 = icmp ult i32 %13, %14, !dbg !8663
  %17 = icmp ult i32 %15, %14, !dbg !8665
  %18 = icmp ugt i32 %15, %13
  br i1 %16, label %19, label %21, !dbg !8666

19:                                               ; preds = %12
  %20 = select i1 %17, i1 %18, i1 false, !dbg !8667
  br i1 %20, label %24, label %23, !dbg !8667

21:                                               ; preds = %12
  %22 = select i1 %17, i1 true, i1 %18, !dbg !8670
  br i1 %22, label %24, label %23, !dbg !8670

23:                                               ; preds = %21, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !8639, metadata !DIExpression()), !dbg !8642
  store i32 %15, i32* %0, align 4, !dbg !8673
  br label %38, !dbg !8674

24:                                               ; preds = %19, %21
  store i32 %15, i32* %0, align 4, !dbg !8673
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8675
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 1, !dbg !8679
  %27 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %26) #21, !dbg !8680
  %28 = icmp eq i32 %27, 0, !dbg !8681
  br i1 %28, label %29, label %37, !dbg !8682

29:                                               ; preds = %24
  %30 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8683
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %30, i32 0, i32 3, !dbg !8683
  %32 = load i32, i32* %31, align 4, !dbg !8683
  %33 = shl nuw i32 1, %32, !dbg !8683
  %34 = xor i32 %33, -1, !dbg !8683
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8683
  %36 = and i32 %35, %34, !dbg !8683
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !8683
  br label %37, !dbg !8685

37:                                               ; preds = %24, %29
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %15) #19, !dbg !8686
  br label %38, !dbg !8687

38:                                               ; preds = %23, %37
  %39 = tail call i32 @xTaskResumeAll() #19, !dbg !8688
  call void @llvm.dbg.value(metadata i32 %39, metadata !8638, metadata !DIExpression()), !dbg !8642
  %40 = icmp eq i32 %39, 0, !dbg !8689
  br i1 %40, label %41, label %42, !dbg !8691

41:                                               ; preds = %38
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8692
  tail call void asm sideeffect "dsb", ""() #20, !dbg !8692, !srcloc !8695
  tail call void asm sideeffect "isb", ""() #20, !dbg !8692, !srcloc !8696
  br label %42, !dbg !8697

42:                                               ; preds = %38, %41
  ret void, !dbg !8698
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskSuspendAll() local_unnamed_addr #1 !dbg !8699 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8700
  %2 = add i32 %1, 1, !dbg !8700
  store volatile i32 %2, i32* @uxSchedulerSuspended, align 4, !dbg !8700
  ret void, !dbg !8701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0) unnamed_addr #3 !dbg !8702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8706, metadata !DIExpression()), !dbg !8707
  %2 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8708
  %3 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 1, i32 0, !dbg !8708
  store i32 %0, i32* %3, align 4, !dbg !8708
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !8709
  %5 = icmp ugt i32 %4, %0, !dbg !8711
  br i1 %5, label %6, label %10, !dbg !8712

6:                                                ; preds = %1
  %7 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !8713
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8715
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !8716
  tail call void @vListInsert(%struct.xLIST* noundef %7, %struct.xLIST_ITEM* noundef nonnull %9) #21, !dbg !8717
  br label %17, !dbg !8718

10:                                               ; preds = %1
  %11 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8719
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8721
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !8722
  tail call void @vListInsert(%struct.xLIST* noundef %11, %struct.xLIST_ITEM* noundef nonnull %13) #21, !dbg !8723
  %14 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !8724
  %15 = icmp ugt i32 %14, %0, !dbg !8726
  br i1 %15, label %16, label %17, !dbg !8727

16:                                               ; preds = %10
  store volatile i32 %0, i32* @xNextTaskUnblockTime, align 4, !dbg !8728
  br label %17, !dbg !8730

17:                                               ; preds = %16, %10, %6
  ret void, !dbg !8731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeAll() local_unnamed_addr #3 !dbg !8732 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8737, metadata !DIExpression()), !dbg !8738
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8739
  %2 = icmp eq i32 %1, 0, !dbg !8739
  br i1 %2, label %3, label %4, !dbg !8741

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 1673) #21, !dbg !8742
  br label %4, !dbg !8742

4:                                                ; preds = %3, %0
  tail call void @vPortEnterCritical() #21, !dbg !8744
  %5 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8745
  %6 = add i32 %5, -1, !dbg !8745
  store volatile i32 %6, i32* @uxSchedulerSuspended, align 4, !dbg !8745
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8747
  %8 = icmp eq i32 %7, 0, !dbg !8749
  br i1 %8, label %9, label %58, !dbg !8750

9:                                                ; preds = %4
  %10 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8751
  %11 = icmp eq i32 %10, 0, !dbg !8754
  br i1 %11, label %58, label %12, !dbg !8755

12:                                               ; preds = %9
  %13 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !8756
  %14 = icmp eq i32 %13, 0, !dbg !8756
  br i1 %14, label %39, label %15, !dbg !8758

15:                                               ; preds = %12, %36
  %16 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 2, i32 1), align 4, !dbg !8759
  %17 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %16, i32 0, i32 3, !dbg !8759
  %18 = bitcast i8** %17 to %struct.tskTaskControlBlock**, !dbg !8759
  %19 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %18, align 4, !dbg !8759
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %19, metadata !8736, metadata !DIExpression()), !dbg !8738
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 2, !dbg !8761
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #21, !dbg !8762
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !8763
  %23 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %22) #21, !dbg !8764
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 3, !dbg !8765
  %25 = load i32, i32* %24, align 4, !dbg !8765
  %26 = shl nuw i32 1, %25, !dbg !8765
  %27 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8765
  %28 = or i32 %27, %26, !dbg !8765
  store volatile i32 %28, i32* @uxTopReadyPriority, align 4, !dbg !8765
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %25, !dbg !8765
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %29, %struct.xLIST_ITEM* noundef nonnull %22) #21, !dbg !8765
  %30 = load i32, i32* %24, align 4, !dbg !8766
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8768
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 3, !dbg !8769
  %33 = load i32, i32* %32, align 4, !dbg !8769
  %34 = icmp ult i32 %30, %33, !dbg !8770
  br i1 %34, label %36, label %35, !dbg !8771

35:                                               ; preds = %15
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8772
  br label %36, !dbg !8774

36:                                               ; preds = %15, %35
  %37 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !8756
  %38 = icmp eq i32 %37, 0, !dbg !8756
  br i1 %38, label %39, label %15, !dbg !8758, !llvm.loop !8775

39:                                               ; preds = %36, %12
  %40 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !8777
  %41 = icmp eq i32 %40, 0, !dbg !8779
  br i1 %41, label %54, label %42, !dbg !8780

42:                                               ; preds = %39
  %43 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !8781
  %44 = icmp eq i32 %43, 0, !dbg !8783
  br i1 %44, label %54, label %45, !dbg !8784

45:                                               ; preds = %42, %49
  %46 = tail call i32 @xTaskIncrementTick() #19, !dbg !8785
  %47 = icmp eq i32 %46, 0, !dbg !8788
  br i1 %47, label %49, label %48, !dbg !8789

48:                                               ; preds = %45
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8790
  br label %49, !dbg !8792

49:                                               ; preds = %45, %48
  %50 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !8793
  %51 = add i32 %50, -1, !dbg !8793
  store volatile i32 %51, i32* @uxPendedTicks, align 4, !dbg !8793
  %52 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !8781
  %53 = icmp eq i32 %52, 0, !dbg !8783
  br i1 %53, label %54, label %45, !dbg !8784, !llvm.loop !8794

54:                                               ; preds = %49, %42, %39
  %55 = load volatile i32, i32* @xYieldPending, align 4, !dbg !8796
  %56 = icmp eq i32 %55, 1, !dbg !8798
  br i1 %56, label %57, label %58, !dbg !8799

57:                                               ; preds = %54
  call void @llvm.dbg.value(metadata i32 1, metadata !8737, metadata !DIExpression()), !dbg !8738
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8800
  tail call void asm sideeffect "dsb", ""() #20, !dbg !8800, !srcloc !8803
  tail call void asm sideeffect "isb", ""() #20, !dbg !8800, !srcloc !8804
  br label %58, !dbg !8805

58:                                               ; preds = %4, %9, %54, %57
  %59 = phi i32 [ 1, %57 ], [ 0, %54 ], [ 0, %9 ], [ 0, %4 ], !dbg !8738
  call void @llvm.dbg.value(metadata i32 %59, metadata !8737, metadata !DIExpression()), !dbg !8738
  tail call void @vPortExitCritical() #21, !dbg !8806
  ret i32 %59, !dbg !8807
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskIncrementTick() local_unnamed_addr #3 !dbg !8808 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8812, metadata !DIExpression()), !dbg !8821
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8822
  %2 = icmp eq i32 %1, 0, !dbg !8823
  br i1 %2, label %3, label %76, !dbg !8824

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !8825
  %5 = add i32 %4, 1, !dbg !8825
  store volatile i32 %5, i32* @xTickCount, align 4, !dbg !8825
  %6 = load volatile i32, i32* @xTickCount, align 4, !dbg !8826
  call void @llvm.dbg.value(metadata i32 %6, metadata !8813, metadata !DIExpression()), !dbg !8827
  %7 = icmp eq i32 %6, 0, !dbg !8828
  br i1 %7, label %8, label %19, !dbg !8829

8:                                                ; preds = %3
  %9 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8830
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %9, i32 0, i32 0, !dbg !8830
  %11 = load i32, i32* %10, align 4, !dbg !8830
  %12 = icmp eq i32 %11, 0, !dbg !8830
  br i1 %12, label %14, label %13, !dbg !8832

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.142, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 1957) #21, !dbg !8833
  br label %14, !dbg !8833

14:                                               ; preds = %13, %8
  %15 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8832
  call void @llvm.dbg.value(metadata %struct.xLIST* %15, metadata !8817, metadata !DIExpression()), !dbg !8835
  %16 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !8832
  store volatile %struct.xLIST* %16, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8832
  store volatile %struct.xLIST* %15, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !8832
  %17 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !8832
  %18 = add nsw i32 %17, 1, !dbg !8832
  store volatile i32 %18, i32* @xNumOfOverflows, align 4, !dbg !8832
  tail call fastcc void @prvResetNextTaskUnblockTime() #19, !dbg !8832
  br label %19, !dbg !8836

19:                                               ; preds = %3, %14
  %20 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !8837
  %21 = icmp ult i32 %6, %20, !dbg !8839
  br i1 %21, label %67, label %22, !dbg !8840

22:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 0, metadata !8812, metadata !DIExpression()), !dbg !8821
  %23 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8841
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %23, i32 0, i32 0, !dbg !8841
  %25 = load i32, i32* %24, align 4, !dbg !8841
  %26 = icmp eq i32 %25, 0, !dbg !8841
  br i1 %26, label %64, label %27, !dbg !8847

27:                                               ; preds = %22, %47
  %28 = phi i32 [ %59, %47 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !8812, metadata !DIExpression()), !dbg !8821
  %29 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8848
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %29, i32 0, i32 2, i32 1, !dbg !8848
  %31 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %30, align 4, !dbg !8848
  %32 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %31, i32 0, i32 3, !dbg !8848
  %33 = bitcast i8** %32 to %struct.tskTaskControlBlock**, !dbg !8848
  %34 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %33, align 4, !dbg !8848
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %34, metadata !8810, metadata !DIExpression()), !dbg !8821
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !8850
  %36 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %35, i32 0, i32 0, !dbg !8850
  %37 = load i32, i32* %36, align 4, !dbg !8850
  call void @llvm.dbg.value(metadata i32 %37, metadata !8811, metadata !DIExpression()), !dbg !8821
  %38 = icmp ult i32 %6, %37, !dbg !8851
  br i1 %38, label %64, label %39, !dbg !8853

39:                                               ; preds = %27
  %40 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %35) #21, !dbg !8854
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, i32 4, !dbg !8855
  %42 = load i8*, i8** %41, align 4, !dbg !8855
  %43 = icmp eq i8* %42, null, !dbg !8857
  br i1 %43, label %47, label %44, !dbg !8858

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, !dbg !8855
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #21, !dbg !8859
  br label %47, !dbg !8861

47:                                               ; preds = %39, %44
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 3, !dbg !8862
  %49 = load i32, i32* %48, align 4, !dbg !8862
  %50 = shl nuw i32 1, %49, !dbg !8862
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8862
  %52 = or i32 %51, %50, !dbg !8862
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !8862
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !8862
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %35) #21, !dbg !8862
  %54 = load i32, i32* %48, align 4, !dbg !8863
  %55 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8866
  %56 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %55, i32 0, i32 3, !dbg !8867
  %57 = load i32, i32* %56, align 4, !dbg !8867
  %58 = icmp ult i32 %54, %57, !dbg !8868
  %59 = select i1 %58, i32 %28, i32 1, !dbg !8869
  call void @llvm.dbg.value(metadata i32 %59, metadata !8812, metadata !DIExpression()), !dbg !8821
  %60 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8841
  %61 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %60, i32 0, i32 0, !dbg !8841
  %62 = load i32, i32* %61, align 4, !dbg !8841
  %63 = icmp eq i32 %62, 0, !dbg !8841
  br i1 %63, label %64, label %27, !dbg !8847, !llvm.loop !8870

64:                                               ; preds = %27, %47, %22
  %65 = phi i32 [ -1, %22 ], [ -1, %47 ], [ %37, %27 ]
  %66 = phi i32 [ 0, %22 ], [ %59, %47 ], [ %28, %27 ]
  store volatile i32 %65, i32* @xNextTaskUnblockTime, align 4, !dbg !8873
  br label %67, !dbg !8874

67:                                               ; preds = %64, %19
  %68 = phi i32 [ 0, %19 ], [ %66, %64 ], !dbg !8877
  call void @llvm.dbg.value(metadata i32 %68, metadata !8812, metadata !DIExpression()), !dbg !8821
  %69 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8874
  %70 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %69, i32 0, i32 3, !dbg !8874
  %71 = load i32, i32* %70, align 4, !dbg !8874
  %72 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %71, i32 0, !dbg !8874
  %73 = load i32, i32* %72, align 4, !dbg !8874
  %74 = icmp ugt i32 %73, 1, !dbg !8878
  %75 = select i1 %74, i32 1, i32 %68, !dbg !8879
  br label %79, !dbg !8879

76:                                               ; preds = %0
  %77 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !8880
  %78 = add i32 %77, 1, !dbg !8880
  store volatile i32 %78, i32* @uxPendedTicks, align 4, !dbg !8880
  br label %79

79:                                               ; preds = %67, %76
  %80 = phi i32 [ 0, %76 ], [ %75, %67 ], !dbg !8821
  call void @llvm.dbg.value(metadata i32 %80, metadata !8812, metadata !DIExpression()), !dbg !8821
  %81 = load volatile i32, i32* @xYieldPending, align 4, !dbg !8882
  %82 = icmp eq i32 %81, 0, !dbg !8885
  %83 = select i1 %82, i32 %80, i32 1, !dbg !8886
  call void @llvm.dbg.value(metadata i32 %83, metadata !8812, metadata !DIExpression()), !dbg !8821
  ret i32 %83, !dbg !8887
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelay(i32 noundef %0) local_unnamed_addr #3 !dbg !8888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8890, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata i32 0, metadata !8892, metadata !DIExpression()), !dbg !8893
  %2 = icmp eq i32 %0, 0, !dbg !8894
  br i1 %2, label %25, label %3, !dbg !8896

3:                                                ; preds = %1
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8897
  %5 = icmp eq i32 %4, 0, !dbg !8897
  br i1 %5, label %7, label %6, !dbg !8900

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 927) #21, !dbg !8901
  br label %7, !dbg !8901

7:                                                ; preds = %6, %3
  tail call void @vTaskSuspendAll() #19, !dbg !8903
  %8 = load volatile i32, i32* @xTickCount, align 4, !dbg !8904
  %9 = add i32 %8, %0, !dbg !8906
  call void @llvm.dbg.value(metadata i32 %9, metadata !8891, metadata !DIExpression()), !dbg !8893
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8907
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 1, !dbg !8909
  %12 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %11) #21, !dbg !8910
  %13 = icmp eq i32 %12, 0, !dbg !8911
  br i1 %13, label %14, label %22, !dbg !8912

14:                                               ; preds = %7
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8913
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !8913
  %17 = load i32, i32* %16, align 4, !dbg !8913
  %18 = shl nuw i32 1, %17, !dbg !8913
  %19 = xor i32 %18, -1, !dbg !8913
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8913
  %21 = and i32 %20, %19, !dbg !8913
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !8913
  br label %22, !dbg !8915

22:                                               ; preds = %7, %14
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %9) #19, !dbg !8916
  %23 = tail call i32 @xTaskResumeAll() #19, !dbg !8917
  call void @llvm.dbg.value(metadata i32 %23, metadata !8892, metadata !DIExpression()), !dbg !8893
  %24 = icmp eq i32 %23, 0, !dbg !8918
  call void @llvm.dbg.value(metadata i32 undef, metadata !8892, metadata !DIExpression()), !dbg !8893
  br i1 %24, label %25, label %26, !dbg !8919

25:                                               ; preds = %1, %22
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8920
  tail call void asm sideeffect "dsb", ""() #20, !dbg !8920, !srcloc !8924
  tail call void asm sideeffect "isb", ""() #20, !dbg !8920, !srcloc !8925
  br label %26, !dbg !8926

26:                                               ; preds = %22, %25
  ret void, !dbg !8927
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGet(i8* noundef readonly %0) local_unnamed_addr #3 !dbg !8928 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8932, metadata !DIExpression()), !dbg !8935
  tail call void @vPortEnterCritical() #21, !dbg !8936
  %2 = icmp eq i8* %0, null, !dbg !8937
  br i1 %2, label %3, label %5, !dbg !8937

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8937
  br label %7, !dbg !8937

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8937
  br label %7, !dbg !8937

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !8937
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !8933, metadata !DIExpression()), !dbg !8935
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !8939
  %10 = load i32, i32* %9, align 4, !dbg !8939
  call void @llvm.dbg.value(metadata i32 %10, metadata !8934, metadata !DIExpression()), !dbg !8935
  tail call void @vPortExitCritical() #21, !dbg !8940
  ret i32 %10, !dbg !8941
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGetFromISR(i8* noundef readonly %0) local_unnamed_addr #3 !dbg !8942 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8944, metadata !DIExpression()), !dbg !8948
  tail call void @vPortValidateInterruptPriority() #21, !dbg !8949
  %2 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !8950, !srcloc !8956
  call void @llvm.dbg.value(metadata i32 undef, metadata !8953, metadata !DIExpression()) #20, !dbg !8957
  call void @llvm.dbg.value(metadata i32 undef, metadata !8954, metadata !DIExpression()) #20, !dbg !8957
  call void @llvm.dbg.value(metadata i32 undef, metadata !8947, metadata !DIExpression()), !dbg !8948
  %3 = icmp eq i8* %0, null, !dbg !8958
  br i1 %3, label %4, label %6, !dbg !8958

4:                                                ; preds = %1
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8958
  br label %8, !dbg !8958

6:                                                ; preds = %1
  %7 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8958
  br label %8, !dbg !8958

8:                                                ; preds = %6, %4
  %9 = phi %struct.tskTaskControlBlock* [ %5, %4 ], [ %7, %6 ], !dbg !8958
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !8950
  call void @llvm.dbg.value(metadata i32 %10, metadata !8953, metadata !DIExpression()) #20, !dbg !8957
  call void @llvm.dbg.value(metadata i32 %10, metadata !8947, metadata !DIExpression()), !dbg !8948
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %9, metadata !8945, metadata !DIExpression()), !dbg !8948
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 3, !dbg !8960
  %12 = load i32, i32* %11, align 4, !dbg !8960
  call void @llvm.dbg.value(metadata i32 %12, metadata !8946, metadata !DIExpression()), !dbg !8948
  call void @llvm.dbg.value(metadata i32 undef, metadata !8961, metadata !DIExpression()) #20, !dbg !8964
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %10) #20, !dbg !8966, !srcloc !8967
  ret i32 %12, !dbg !8968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPrioritySet(i8* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !8969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8973, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i32 %1, metadata !8974, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.value(metadata i32 0, metadata !8978, metadata !DIExpression()), !dbg !8979
  %3 = icmp ugt i32 %1, 19, !dbg !8980
  br i1 %3, label %4, label %5, !dbg !8982

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 1122) #21, !dbg !8983
  br label %5, !dbg !8983

5:                                                ; preds = %4, %2
  %6 = icmp ult i32 %1, 19, !dbg !8985
  %7 = select i1 %6, i32 %1, i32 19, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %7, metadata !8974, metadata !DIExpression()), !dbg !8979
  tail call void @vPortEnterCritical() #21, !dbg !8986
  %8 = icmp eq i8* %0, null, !dbg !8987
  br i1 %8, label %9, label %11, !dbg !8987

9:                                                ; preds = %5
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8987
  br label %13, !dbg !8987

11:                                               ; preds = %5
  %12 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8987
  br label %13, !dbg !8987

13:                                               ; preds = %11, %9
  %14 = phi %struct.tskTaskControlBlock* [ %10, %9 ], [ %12, %11 ], !dbg !8987
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %14, metadata !8975, metadata !DIExpression()), !dbg !8979
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 8, !dbg !8989
  %16 = load i32, i32* %15, align 4, !dbg !8989
  call void @llvm.dbg.value(metadata i32 %16, metadata !8976, metadata !DIExpression()), !dbg !8979
  %17 = icmp eq i32 %16, %7, !dbg !8991
  br i1 %17, label %64, label %18, !dbg !8993

18:                                               ; preds = %13
  %19 = icmp ule i32 %7, %16, !dbg !8994
  %20 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8997
  %21 = icmp eq %struct.tskTaskControlBlock* %14, %20, !dbg !8997
  %22 = select i1 %19, i1 true, i1 %21, !dbg !8998
  %23 = select i1 %19, i1 %21, i1 false, !dbg !8998
  br i1 %22, label %29, label %24, !dbg !8998

24:                                               ; preds = %18
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8999
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !9004
  %27 = load i32, i32* %26, align 4, !dbg !9004
  %28 = icmp uge i32 %7, %27, !dbg !9005
  br label %29, !dbg !9006

29:                                               ; preds = %18, %24
  %30 = phi i1 [ %28, %24 ], [ %23, %18 ], !dbg !8979
  call void @llvm.dbg.value(metadata i32 undef, metadata !8978, metadata !DIExpression()), !dbg !8979
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !9007
  %32 = load i32, i32* %31, align 4, !dbg !9007
  call void @llvm.dbg.value(metadata i32 %32, metadata !8977, metadata !DIExpression()), !dbg !8979
  %33 = icmp eq i32 %16, %32, !dbg !9008
  br i1 %33, label %34, label %35, !dbg !9011

34:                                               ; preds = %29
  store i32 %7, i32* %31, align 4, !dbg !9012
  br label %35, !dbg !9014

35:                                               ; preds = %29, %34
  store i32 %7, i32* %15, align 4, !dbg !9015
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, i32 0, !dbg !9016
  %37 = load i32, i32* %36, align 4, !dbg !9016
  %38 = icmp sgt i32 %37, -1, !dbg !9018
  br i1 %38, label %39, label %41, !dbg !9019

39:                                               ; preds = %35
  %40 = sub nuw nsw i32 20, %7, !dbg !9020
  store i32 %40, i32* %36, align 4, !dbg !9020
  br label %41, !dbg !9022

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, !dbg !9023
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, i32 4, !dbg !9023
  %44 = load i8*, i8** %43, align 4, !dbg !9023
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !9023
  %46 = bitcast %struct.xLIST* %45 to i8*, !dbg !9023
  %47 = icmp eq i8* %44, %46, !dbg !9023
  br i1 %47, label %48, label %62, !dbg !9025

48:                                               ; preds = %41
  %49 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %42) #21, !dbg !9026
  %50 = icmp eq i32 %49, 0, !dbg !9029
  br i1 %50, label %51, label %56, !dbg !9030

51:                                               ; preds = %48
  %52 = shl nuw i32 1, %32, !dbg !9031
  %53 = xor i32 %52, -1, !dbg !9031
  %54 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9031
  %55 = and i32 %54, %53, !dbg !9031
  store volatile i32 %55, i32* @uxTopReadyPriority, align 4, !dbg !9031
  br label %56, !dbg !9033

56:                                               ; preds = %48, %51
  %57 = load i32, i32* %31, align 4, !dbg !9034
  %58 = shl nuw i32 1, %57, !dbg !9034
  %59 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9034
  %60 = or i32 %59, %58, !dbg !9034
  store volatile i32 %60, i32* @uxTopReadyPriority, align 4, !dbg !9034
  %61 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %57, !dbg !9034
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %61, %struct.xLIST_ITEM* noundef nonnull %42) #21, !dbg !9034
  br label %62, !dbg !9035

62:                                               ; preds = %41, %56
  br i1 %30, label %63, label %64, !dbg !9036

63:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9037
  tail call void asm sideeffect "dsb", ""() #20, !dbg !9037, !srcloc !9041
  tail call void asm sideeffect "isb", ""() #20, !dbg !9037, !srcloc !9042
  br label %64, !dbg !9043

64:                                               ; preds = %63, %62, %13
  tail call void @vPortExitCritical() #21, !dbg !9044
  ret void, !dbg !9045
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSuspend(i8* noundef %0) local_unnamed_addr #3 !dbg !9046 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9048, metadata !DIExpression()), !dbg !9050
  tail call void @vPortEnterCritical() #21, !dbg !9051
  %2 = icmp eq i8* %0, null, !dbg !9052
  br i1 %2, label %3, label %5, !dbg !9052

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9052
  br label %7, !dbg !9052

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !9052
  br label %7, !dbg !9052

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !9052
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !9049, metadata !DIExpression()), !dbg !9050
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !9054
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #21, !dbg !9056
  %11 = icmp eq i32 %10, 0, !dbg !9057
  br i1 %11, label %12, label %23, !dbg !9058

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !9059
  %14 = load i32, i32* %13, align 4, !dbg !9059
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !9059
  %16 = load i32, i32* %15, align 4, !dbg !9059
  %17 = icmp eq i32 %16, 0, !dbg !9059
  br i1 %17, label %18, label %23, !dbg !9063

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !9064
  %20 = xor i32 %19, -1, !dbg !9064
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9064
  %22 = and i32 %21, %20, !dbg !9064
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !9064
  br label %23, !dbg !9064

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !9066
  %25 = load i8*, i8** %24, align 4, !dbg !9066
  %26 = icmp eq i8* %25, null, !dbg !9068
  br i1 %26, label %30, label %27, !dbg !9069

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !9066
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #21, !dbg !9070
  br label %30, !dbg !9072

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %9) #21, !dbg !9073
  tail call void @vPortExitCritical() #21, !dbg !9074
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9075
  %32 = icmp eq %struct.tskTaskControlBlock* %8, %31, !dbg !9077
  %33 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !9078
  %34 = icmp eq i32 %33, 0, !dbg !9078
  br i1 %32, label %35, label %47, !dbg !9079

35:                                               ; preds = %30
  br i1 %34, label %41, label %36, !dbg !9080

36:                                               ; preds = %35
  %37 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9082
  %38 = icmp eq i32 %37, 0, !dbg !9082
  br i1 %38, label %40, label %39, !dbg !9086

39:                                               ; preds = %36
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 1322) #21, !dbg !9087
  br label %40, !dbg !9087

40:                                               ; preds = %39, %36
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9089
  tail call void asm sideeffect "dsb", ""() #20, !dbg !9089, !srcloc !9091
  tail call void asm sideeffect "isb", ""() #20, !dbg !9089, !srcloc !9092
  br label %49, !dbg !9093

41:                                               ; preds = %35
  %42 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xSuspendedTaskList, i32 0, i32 0), align 4, !dbg !9094
  %43 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !9097
  %44 = icmp eq i32 %42, %43, !dbg !9098
  br i1 %44, label %45, label %46, !dbg !9099

45:                                               ; preds = %41
  store volatile %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9100
  br label %49, !dbg !9102

46:                                               ; preds = %41
  tail call void @vTaskSwitchContext() #19, !dbg !9103
  br label %49

47:                                               ; preds = %30
  br i1 %34, label %49, label %48, !dbg !9105

48:                                               ; preds = %47
  tail call void @vPortEnterCritical() #21, !dbg !9107
  tail call fastcc void @prvResetNextTaskUnblockTime() #19, !dbg !9110
  tail call void @vPortExitCritical() #21, !dbg !9112
  br label %49, !dbg !9113

49:                                               ; preds = %48, %47, %40, %46, %45
  ret void, !dbg !9114
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSwitchContext() local_unnamed_addr #3 !dbg !1393 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9115
  %2 = icmp eq i32 %1, 0, !dbg !9116
  br i1 %2, label %4, label %3, !dbg !9117

3:                                                ; preds = %0
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !9118
  br label %62, !dbg !9120

4:                                                ; preds = %0
  store volatile i32 0, i32* @xYieldPending, align 4, !dbg !9121
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !9122
  %6 = and i32 %5, 1, !dbg !9122
  %7 = icmp eq i32 %6, 0, !dbg !9122
  br i1 %7, label %21, label %8, !dbg !9125

8:                                                ; preds = %4
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9126
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 0, !dbg !9126
  %11 = load i32*, i32** %10, align 4, !dbg !9126
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9126
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 4, !dbg !9126
  %14 = load i32*, i32** %13, align 4, !dbg !9126
  %15 = icmp ugt i32* %11, %14, !dbg !9126
  br i1 %15, label %21, label %16, !dbg !9129

16:                                               ; preds = %8
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9130
  %18 = bitcast %struct.tskTaskControlBlock* %17 to i8*, !dbg !9130
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9130
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 5, i32 0, !dbg !9130
  tail call void @vApplicationStackOverflowHook(i8* noundef %18, i8* noundef nonnull %20) #21, !dbg !9130
  br label %21, !dbg !9130

21:                                               ; preds = %8, %16, %4
  %22 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !9132
  %23 = and i32 %22, 1, !dbg !9132
  %24 = icmp eq i32 %23, 0, !dbg !9132
  br i1 %24, label %37, label %25, !dbg !9135

25:                                               ; preds = %21
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9136
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 4, !dbg !9136
  %28 = bitcast i32** %27 to i8**, !dbg !9136
  %29 = load i8*, i8** %28, align 4, !dbg !9136
  %30 = tail call i32 @memcmp(i8* noundef %29, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @vTaskSwitchContext.ucExpectedStackBytes, i32 0, i32 0), i32 noundef 20) #21, !dbg !9136
  %31 = icmp eq i32 %30, 0, !dbg !9136
  br i1 %31, label %37, label %32, !dbg !9139

32:                                               ; preds = %25
  %33 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9140
  %34 = bitcast %struct.tskTaskControlBlock* %33 to i8*, !dbg !9140
  %35 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9140
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 5, i32 0, !dbg !9140
  tail call void @vApplicationStackOverflowHook(i8* noundef %34, i8* noundef nonnull %36) #21, !dbg !9140
  br label %37, !dbg !9140

37:                                               ; preds = %25, %32, %21
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9142
  call void @llvm.dbg.value(metadata i32 %38, metadata !9143, metadata !DIExpression()) #20, !dbg !9149
  %39 = tail call i8 asm sideeffect "clz $0, $1", "=r,r"(i32 %38) #20, !dbg !9151, !srcloc !9152
  call void @llvm.dbg.value(metadata i8 %39, metadata !9148, metadata !DIExpression()) #20, !dbg !9149
  %40 = zext i8 %39 to i32, !dbg !9142
  %41 = sub nsw i32 31, %40, !dbg !9142
  call void @llvm.dbg.value(metadata i32 %41, metadata !1395, metadata !DIExpression()), !dbg !9153
  %42 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 0, !dbg !9154
  %43 = load i32, i32* %42, align 4, !dbg !9154
  %44 = icmp eq i32 %43, 0, !dbg !9154
  br i1 %44, label %45, label %46, !dbg !9142

45:                                               ; preds = %37
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.14.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 2244) #21, !dbg !9156
  br label %46, !dbg !9156

46:                                               ; preds = %45, %37
  call void @llvm.dbg.value(metadata !DIArgList([20 x %struct.xLIST]* @pxReadyTasksLists, i32 %41), metadata !1399, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !9158
  %47 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 1, !dbg !9159
  %48 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %47, align 4, !dbg !9159
  %49 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %48, i32 0, i32 1, !dbg !9159
  %50 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %49, align 4, !dbg !9159
  store %struct.xLIST_ITEM* %50, %struct.xLIST_ITEM** %47, align 4, !dbg !9159
  %51 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 2, !dbg !9160
  %52 = bitcast %struct.xMINI_LIST_ITEM* %51 to %struct.xLIST_ITEM*, !dbg !9160
  %53 = icmp eq %struct.xLIST_ITEM* %50, %52, !dbg !9160
  br i1 %53, label %54, label %57, !dbg !9159

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %50, i32 0, i32 1, !dbg !9162
  %56 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %55, align 4, !dbg !9162
  store %struct.xLIST_ITEM* %56, %struct.xLIST_ITEM** %47, align 4, !dbg !9162
  br label %57, !dbg !9162

57:                                               ; preds = %54, %46
  %58 = phi %struct.xLIST_ITEM* [ %56, %54 ], [ %50, %46 ], !dbg !9159
  %59 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %58, i32 0, i32 3, !dbg !9159
  %60 = bitcast i8** %59 to %struct.tskTaskControlBlock**, !dbg !9159
  %61 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %60, align 4, !dbg !9159
  store volatile %struct.tskTaskControlBlock* %61, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9159
  br label %62

62:                                               ; preds = %57, %3
  ret void, !dbg !9164
}

; Function Attrs: optsize
declare dso_local i32 @memcmp(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskResume(i8* noundef %0) local_unnamed_addr #3 !dbg !9165 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9167, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata i8* %0, metadata !9168, metadata !DIExpression()), !dbg !9169
  %2 = icmp eq i8* %0, null, !dbg !9170
  br i1 %2, label %3, label %4, !dbg !9170

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 1420) #21, !dbg !9171
  br label %29, !dbg !9174

4:                                                ; preds = %1
  %5 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !9176
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %5, metadata !9168, metadata !DIExpression()), !dbg !9169
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9177
  %7 = icmp eq %struct.tskTaskControlBlock* %6, %5, !dbg !9178
  br i1 %7, label %29, label %8, !dbg !9179

8:                                                ; preds = %4
  tail call void @vPortEnterCritical() #21, !dbg !9180
  %9 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef nonnull %0) #19, !dbg !9182
  %10 = icmp eq i32 %9, 1, !dbg !9185
  br i1 %10, label %11, label %28, !dbg !9186

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9187
  %13 = bitcast i8* %12 to %struct.xLIST_ITEM*, !dbg !9187
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #21, !dbg !9189
  %15 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9190
  %16 = bitcast i8* %15 to i32*, !dbg !9190
  %17 = load i32, i32* %16, align 4, !dbg !9190
  %18 = shl nuw i32 1, %17, !dbg !9190
  %19 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9190
  %20 = or i32 %19, %18, !dbg !9190
  store volatile i32 %20, i32* @uxTopReadyPriority, align 4, !dbg !9190
  %21 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %17, !dbg !9190
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %21, %struct.xLIST_ITEM* noundef nonnull %13) #21, !dbg !9190
  %22 = load i32, i32* %16, align 4, !dbg !9191
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9193
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 3, !dbg !9194
  %25 = load i32, i32* %24, align 4, !dbg !9194
  %26 = icmp ult i32 %22, %25, !dbg !9195
  br i1 %26, label %28, label %27, !dbg !9196

27:                                               ; preds = %11
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9197
  tail call void asm sideeffect "dsb", ""() #20, !dbg !9197, !srcloc !9200
  tail call void asm sideeffect "isb", ""() #20, !dbg !9197, !srcloc !9201
  br label %28, !dbg !9202

28:                                               ; preds = %8, %27, %11
  tail call void @vPortExitCritical() #21, !dbg !9203
  br label %29, !dbg !9204

29:                                               ; preds = %3, %4, %28
  ret void, !dbg !9205
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvTaskIsTaskSuspended(i8* noundef readonly %0) unnamed_addr #3 !dbg !9206 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9211, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i32 0, metadata !9212, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.value(metadata i8* %0, metadata !9213, metadata !DIExpression()), !dbg !9217
  %2 = icmp eq i8* %0, null, !dbg !9218
  br i1 %2, label %3, label %4, !dbg !9220

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 1378) #21, !dbg !9221
  br label %4, !dbg !9221

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9223
  %6 = bitcast i8* %5 to i8**, !dbg !9223
  %7 = load i8*, i8** %6, align 4, !dbg !9223
  %8 = icmp eq i8* %7, bitcast (%struct.xLIST* @xSuspendedTaskList to i8*), !dbg !9223
  br i1 %8, label %9, label %15, !dbg !9225

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !9226
  %11 = bitcast i8* %10 to i8**, !dbg !9226
  %12 = load i8*, i8** %11, align 4, !dbg !9226
  %13 = icmp eq i8* %12, null
  %14 = zext i1 %13 to i32, !dbg !9229
  br label %15, !dbg !9229

15:                                               ; preds = %9, %4
  %16 = phi i32 [ 0, %4 ], [ %14, %9 ], !dbg !9217
  call void @llvm.dbg.value(metadata i32 %16, metadata !9212, metadata !DIExpression()), !dbg !9217
  ret i32 %16, !dbg !9230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeFromISR(i8* noundef %0) local_unnamed_addr #3 !dbg !9231 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9235, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.value(metadata i32 0, metadata !9236, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.value(metadata i8* %0, metadata !9237, metadata !DIExpression()), !dbg !9239
  %2 = icmp eq i8* %0, null, !dbg !9240
  br i1 %2, label %3, label %4, !dbg !9242

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 1475) #21, !dbg !9243
  br label %4, !dbg !9243

4:                                                ; preds = %3, %1
  tail call void @vPortValidateInterruptPriority() #21, !dbg !9245
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !9246, !srcloc !8956
  call void @llvm.dbg.value(metadata i32 undef, metadata !8953, metadata !DIExpression()) #20, !dbg !9248
  call void @llvm.dbg.value(metadata i32 undef, metadata !8954, metadata !DIExpression()) #20, !dbg !9248
  call void @llvm.dbg.value(metadata i32 undef, metadata !9238, metadata !DIExpression()), !dbg !9239
  %6 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef %0) #19, !dbg !9249
  %7 = icmp eq i32 %6, 1, !dbg !9252
  br i1 %7, label %8, label %31, !dbg !9253

8:                                                ; preds = %4
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9254
  %10 = icmp eq i32 %9, 0, !dbg !9257
  br i1 %10, label %11, label %28, !dbg !9258

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9259
  %13 = bitcast i8* %12 to i32*, !dbg !9259
  %14 = load i32, i32* %13, align 4, !dbg !9259
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9262
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !9263
  %17 = load i32, i32* %16, align 4, !dbg !9263
  %18 = icmp uge i32 %14, %17, !dbg !9264
  %19 = zext i1 %18 to i32, !dbg !9265
  call void @llvm.dbg.value(metadata i32 %19, metadata !9236, metadata !DIExpression()), !dbg !9239
  %20 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9266
  %21 = bitcast i8* %20 to %struct.xLIST_ITEM*, !dbg !9266
  %22 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #21, !dbg !9267
  %23 = load i32, i32* %13, align 4, !dbg !9268
  %24 = shl nuw i32 1, %23, !dbg !9268
  %25 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9268
  %26 = or i32 %25, %24, !dbg !9268
  store volatile i32 %26, i32* @uxTopReadyPriority, align 4, !dbg !9268
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %23, !dbg !9268
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %27, %struct.xLIST_ITEM* noundef nonnull %21) #21, !dbg !9268
  br label %31, !dbg !9269

28:                                               ; preds = %8
  %29 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9270
  %30 = bitcast i8* %29 to %struct.xLIST_ITEM*, !dbg !9270
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %30) #21, !dbg !9272
  br label %31

31:                                               ; preds = %4, %11, %28
  %32 = phi i32 [ %19, %11 ], [ 0, %28 ], [ 0, %4 ], !dbg !9239
  %33 = extractvalue { i32, i32 } %5, 0, !dbg !9246
  call void @llvm.dbg.value(metadata i32 %33, metadata !8953, metadata !DIExpression()) #20, !dbg !9248
  call void @llvm.dbg.value(metadata i32 %33, metadata !9238, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.value(metadata i32 %32, metadata !9236, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.value(metadata i32 undef, metadata !8961, metadata !DIExpression()) #20, !dbg !9273
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #20, !dbg !9275, !srcloc !8967
  ret i32 %32, !dbg !9276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskStartScheduler() local_unnamed_addr #3 !dbg !9277 {
  %1 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @prvIdleTask, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.149, i32 0, i32 0), i16 noundef zeroext 256, i8* noundef null, i32 noundef 0, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* undef) #19, !dbg !9280
  call void @llvm.dbg.value(metadata i32 %1, metadata !9279, metadata !DIExpression()), !dbg !9282
  %2 = icmp eq i32 %1, 1, !dbg !9283
  br i1 %2, label %3, label %5, !dbg !9286

3:                                                ; preds = %0
  %4 = tail call i32 @xTimerCreateTimerTask() #21, !dbg !9287
  call void @llvm.dbg.value(metadata i32 %4, metadata !9279, metadata !DIExpression()), !dbg !9282
  br label %5, !dbg !9289

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !9282
  call void @llvm.dbg.value(metadata i32 %6, metadata !9279, metadata !DIExpression()), !dbg !9282
  switch i32 %6, label %11 [
    i32 1, label %7
    i32 0, label %10
  ], !dbg !9290

7:                                                ; preds = %5
  %8 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #20, !dbg !9291, !srcloc !9298
  call void @llvm.dbg.value(metadata i32 %8, metadata !9294, metadata !DIExpression()) #20, !dbg !9299
  store volatile i32 1, i32* @xSchedulerRunning, align 4, !dbg !9300
  store volatile i32 0, i32* @xTickCount, align 4, !dbg !9301
  %9 = tail call i32 @xPortStartScheduler() #21, !dbg !9302
  br label %11, !dbg !9304

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 1612) #21, !dbg !9305
  br label %11, !dbg !9305

11:                                               ; preds = %5, %10, %7
  ret void, !dbg !9309
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvIdleTask(i8* nocapture noundef readnone %0) #13 !dbg !9310 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9312, metadata !DIExpression()), !dbg !9313
  br label %2, !dbg !9314

2:                                                ; preds = %5, %1
  tail call fastcc void @prvCheckTasksWaitingTermination() #19, !dbg !9315
  %3 = load i32, i32* getelementptr inbounds ([20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 0, i32 0), align 4, !dbg !9319
  %4 = icmp ugt i32 %3, 1, !dbg !9322
  br i1 %4, label %6, label %5, !dbg !9323

5:                                                ; preds = %2, %6
  br label %2, !dbg !9315, !llvm.loop !9324

6:                                                ; preds = %2
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9327
  tail call void asm sideeffect "dsb", ""() #20, !dbg !9327, !srcloc !9330
  tail call void asm sideeffect "isb", ""() #20, !dbg !9327, !srcloc !9331
  br label %5, !dbg !9332
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckTasksWaitingTermination() unnamed_addr #3 !dbg !9333 {
  %1 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !9341
  %2 = icmp eq i32 %1, 0, !dbg !9342
  br i1 %2, label %21, label %3, !dbg !9343

3:                                                ; preds = %0, %18
  tail call void @vTaskSuspendAll() #19, !dbg !9344
  %4 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 0), align 4, !dbg !9345
  %5 = icmp eq i32 %4, 0, !dbg !9345
  call void @llvm.dbg.value(metadata i1 %5, metadata !9335, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9347
  %6 = tail call i32 @xTaskResumeAll() #19, !dbg !9348
  br i1 %5, label %18, label %7, !dbg !9349

7:                                                ; preds = %3
  tail call void @vPortEnterCritical() #21, !dbg !9350
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 2, i32 1), align 4, !dbg !9351
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !9351
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !9351
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !9351
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !9337, metadata !DIExpression()), !dbg !9353
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !9354
  %13 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %12) #21, !dbg !9355
  %14 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !9356
  %15 = add i32 %14, -1, !dbg !9356
  store volatile i32 %15, i32* @uxCurrentNumberOfTasks, align 4, !dbg !9356
  %16 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !9357
  %17 = add i32 %16, -1, !dbg !9357
  store volatile i32 %17, i32* @uxTasksDeleted, align 4, !dbg !9357
  tail call void @vPortExitCritical() #21, !dbg !9358
  tail call fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %11) #19, !dbg !9359
  br label %18, !dbg !9360

18:                                               ; preds = %3, %7
  %19 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !9341
  %20 = icmp eq i32 %19, 0, !dbg !9342
  br i1 %20, label %21, label %3, !dbg !9343, !llvm.loop !9361

21:                                               ; preds = %18, %0
  ret void, !dbg !9363
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %0) unnamed_addr #3 !dbg !9364 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !9368, metadata !DIExpression()), !dbg !9369
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 4, !dbg !9370
  %3 = bitcast i32** %2 to i8**, !dbg !9370
  %4 = load i8*, i8** %3, align 4, !dbg !9370
  tail call void @vPortFree(i8* noundef %4) #21, !dbg !9370
  %5 = bitcast %struct.tskTaskControlBlock* %0 to i8*, !dbg !9372
  tail call void @vPortFree(i8* noundef %5) #21, !dbg !9373
  ret void, !dbg !9374
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskEndScheduler() local_unnamed_addr #3 !dbg !9375 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #20, !dbg !9376, !srcloc !9298
  call void @llvm.dbg.value(metadata i32 %1, metadata !9294, metadata !DIExpression()) #20, !dbg !9378
  store volatile i32 0, i32* @xSchedulerRunning, align 4, !dbg !9379
  tail call void @vPortEndScheduler() #21, !dbg !9380
  ret void, !dbg !9381
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetTickCount() local_unnamed_addr #9 !dbg !9382 {
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !9387
  call void @llvm.dbg.value(metadata i32 %1, metadata !9386, metadata !DIExpression()), !dbg !9389
  ret i32 %1, !dbg !9390
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGetTickCountFromISR() local_unnamed_addr #3 !dbg !9391 {
  tail call void @vPortValidateInterruptPriority() #21, !dbg !9395
  call void @llvm.dbg.value(metadata i32 0, metadata !9394, metadata !DIExpression()), !dbg !9396
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !9397
  call void @llvm.dbg.value(metadata i32 %1, metadata !9393, metadata !DIExpression()), !dbg !9396
  ret i32 %1, !dbg !9399
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetNumberOfTasks() local_unnamed_addr #9 !dbg !9400 {
  %1 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !9403
  ret i32 %1, !dbg !9404
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @pcTaskGetTaskName(i8* noundef readnone %0) local_unnamed_addr #3 !dbg !9405 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9409, metadata !DIExpression()), !dbg !9411
  %2 = icmp eq i8* %0, null, !dbg !9412
  br i1 %2, label %3, label %5, !dbg !9412

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9412
  br label %7, !dbg !9412

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !9412
  br label %7, !dbg !9412

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !9412
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !9410, metadata !DIExpression()), !dbg !9411
  %9 = icmp eq %struct.tskTaskControlBlock* %8, null, !dbg !9413
  br i1 %9, label %10, label %11, !dbg !9415

10:                                               ; preds = %7
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 1821) #21, !dbg !9416
  br label %11, !dbg !9416

11:                                               ; preds = %10, %7
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 5, i32 0, !dbg !9418
  ret i8* %12, !dbg !9419
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* nocapture noundef writeonly %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #3 !dbg !9420 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !9440, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i32 %1, metadata !9441, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i32* %2, metadata !9442, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i32 0, metadata !9443, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i32 20, metadata !9444, metadata !DIExpression()), !dbg !9445
  tail call void @vTaskSuspendAll() #19, !dbg !9446
  %4 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !9447
  %5 = icmp ugt i32 %4, %1, !dbg !9450
  br i1 %5, label %32, label %6, !dbg !9451

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %3 ], !dbg !9445
  %8 = phi i32 [ %9, %6 ], [ 20, %3 ], !dbg !9445
  call void @llvm.dbg.value(metadata i32 %8, metadata !9444, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.value(metadata i32 %7, metadata !9443, metadata !DIExpression()), !dbg !9445
  %9 = add nsw i32 %8, -1, !dbg !9452
  call void @llvm.dbg.value(metadata i32 %9, metadata !9444, metadata !DIExpression()), !dbg !9445
  %10 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %7, !dbg !9455
  %11 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %9, !dbg !9456
  %12 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %10, %struct.xLIST* noundef nonnull %11, i32 noundef 1) #19, !dbg !9457
  %13 = add i32 %12, %7, !dbg !9458
  call void @llvm.dbg.value(metadata i32 %13, metadata !9443, metadata !DIExpression()), !dbg !9445
  %14 = icmp eq i32 %9, 0, !dbg !9459
  br i1 %14, label %15, label %6, !dbg !9460, !llvm.loop !9461

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %13, !dbg !9464
  %17 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !9465
  %18 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %16, %struct.xLIST* noundef %17, i32 noundef 2) #19, !dbg !9466
  %19 = add i32 %18, %13, !dbg !9467
  call void @llvm.dbg.value(metadata i32 %19, metadata !9443, metadata !DIExpression()), !dbg !9445
  %20 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %19, !dbg !9468
  %21 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !9469
  %22 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %20, %struct.xLIST* noundef %21, i32 noundef 2) #19, !dbg !9470
  %23 = add i32 %22, %19, !dbg !9471
  call void @llvm.dbg.value(metadata i32 %23, metadata !9443, metadata !DIExpression()), !dbg !9445
  %24 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %23, !dbg !9472
  %25 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %24, %struct.xLIST* noundef nonnull @xTasksWaitingTermination, i32 noundef 4) #19, !dbg !9474
  %26 = add i32 %23, %25, !dbg !9475
  call void @llvm.dbg.value(metadata i32 %26, metadata !9443, metadata !DIExpression()), !dbg !9445
  %27 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %26, !dbg !9476
  %28 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %27, %struct.xLIST* noundef nonnull @xSuspendedTaskList, i32 noundef 3) #19, !dbg !9478
  %29 = add i32 %26, %28, !dbg !9479
  call void @llvm.dbg.value(metadata i32 %29, metadata !9443, metadata !DIExpression()), !dbg !9445
  %30 = icmp eq i32* %2, null, !dbg !9480
  br i1 %30, label %32, label %31, !dbg !9483

31:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !9484
  br label %32, !dbg !9486

32:                                               ; preds = %3, %15, %31
  %33 = phi i32 [ %29, %31 ], [ %29, %15 ], [ 0, %3 ], !dbg !9445
  call void @llvm.dbg.value(metadata i32 %33, metadata !9443, metadata !DIExpression()), !dbg !9445
  %34 = tail call i32 @xTaskResumeAll() #19, !dbg !9487
  ret i32 %33, !dbg !9488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* nocapture noundef writeonly %0, %struct.xLIST* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9489 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !9493, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !9494, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata i32 %2, metadata !9495, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata i32 0, metadata !9500, metadata !DIExpression()), !dbg !9508
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !9509
  %5 = load i32, i32* %4, align 4, !dbg !9509
  %6 = icmp eq i32 %5, 0, !dbg !9510
  br i1 %6, label %72, label %7, !dbg !9511

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !9501, metadata !DIExpression()), !dbg !9512
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 1, !dbg !9513
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !9513
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !9513
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %10, align 4, !dbg !9513
  store %struct.xLIST_ITEM* %11, %struct.xLIST_ITEM** %8, align 4, !dbg !9513
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, !dbg !9514
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !9514
  %14 = icmp eq %struct.xLIST_ITEM* %11, %13, !dbg !9514
  br i1 %14, label %15, label %18, !dbg !9513

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !9516
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !9516
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %8, align 4, !dbg !9516
  br label %18, !dbg !9516

18:                                               ; preds = %15, %7
  %19 = phi %struct.xLIST_ITEM* [ %17, %15 ], [ %11, %7 ], !dbg !9513
  %20 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %19, i32 0, i32 3, !dbg !9513
  %21 = bitcast i8** %20 to %struct.tskTaskControlBlock**, !dbg !9513
  %22 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %21, align 4, !dbg !9513
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %22, metadata !9499, metadata !DIExpression()), !dbg !9508
  %23 = icmp eq i32 %2, 3
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, i32 1
  br label %25, !dbg !9518

25:                                               ; preds = %70, %18
  %26 = phi %struct.xLIST_ITEM* [ %19, %18 ], [ %71, %70 ], !dbg !9519
  %27 = phi i32 [ 0, %18 ], [ %68, %70 ], !dbg !9508
  call void @llvm.dbg.value(metadata i32 %27, metadata !9500, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !9505, metadata !DIExpression()), !dbg !9520
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %26, i32 0, i32 1, !dbg !9519
  %29 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %28, align 4, !dbg !9519
  store %struct.xLIST_ITEM* %29, %struct.xLIST_ITEM** %8, align 4, !dbg !9519
  %30 = icmp eq %struct.xLIST_ITEM* %29, %13, !dbg !9521
  br i1 %30, label %31, label %33, !dbg !9519

31:                                               ; preds = %25
  %32 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %24, align 4, !dbg !9523
  store %struct.xLIST_ITEM* %32, %struct.xLIST_ITEM** %8, align 4, !dbg !9523
  br label %33, !dbg !9523

33:                                               ; preds = %31, %25
  %34 = phi %struct.xLIST_ITEM* [ %32, %31 ], [ %29, %25 ], !dbg !9519
  %35 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %34, i32 0, i32 3, !dbg !9519
  %36 = load i8*, i8** %35, align 4, !dbg !9519
  %37 = bitcast i8* %36 to %struct.tskTaskControlBlock*, !dbg !9519
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %37, metadata !9496, metadata !DIExpression()), !dbg !9508
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 0, !dbg !9525
  store i8* %36, i8** %38, align 4, !dbg !9526
  %39 = getelementptr inbounds i8, i8* %36, i32 52, !dbg !9527
  %40 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 1, !dbg !9528
  store i8* %39, i8** %40, align 4, !dbg !9529
  %41 = getelementptr inbounds i8, i8* %36, i32 60, !dbg !9530
  %42 = bitcast i8* %41 to i32*, !dbg !9530
  %43 = load volatile i32, i32* %42, align 4, !dbg !9530
  %44 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 2, !dbg !9531
  store i32 %43, i32* %44, align 4, !dbg !9532
  %45 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 3, !dbg !9533
  store i32 %2, i32* %45, align 4, !dbg !9534
  %46 = getelementptr inbounds i8, i8* %36, i32 44, !dbg !9535
  %47 = bitcast i8* %46 to i32*, !dbg !9535
  %48 = load volatile i32, i32* %47, align 4, !dbg !9535
  %49 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 4, !dbg !9536
  store i32 %48, i32* %49, align 4, !dbg !9537
  br i1 %23, label %50, label %56, !dbg !9538

50:                                               ; preds = %33
  %51 = getelementptr inbounds i8, i8* %36, i32 40, !dbg !9540
  %52 = bitcast i8* %51 to i8**, !dbg !9540
  %53 = load volatile i8*, i8** %52, align 4, !dbg !9540
  %54 = icmp eq i8* %53, null, !dbg !9544
  br i1 %54, label %56, label %55, !dbg !9545

55:                                               ; preds = %50
  store i32 2, i32* %45, align 4, !dbg !9546
  br label %56, !dbg !9548

56:                                               ; preds = %50, %55, %33
  %57 = getelementptr inbounds i8, i8* %36, i32 68, !dbg !9549
  %58 = bitcast i8* %57 to i32*, !dbg !9549
  %59 = load volatile i32, i32* %58, align 4, !dbg !9549
  %60 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 5, !dbg !9551
  store i32 %59, i32* %60, align 4, !dbg !9552
  %61 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 6, !dbg !9553
  store i32 0, i32* %61, align 4, !dbg !9555
  %62 = getelementptr inbounds i8, i8* %36, i32 48, !dbg !9556
  %63 = bitcast i8* %62 to i32**, !dbg !9556
  %64 = load volatile i32*, i32** %63, align 4, !dbg !9556
  %65 = bitcast i32* %64 to i8*, !dbg !9558
  %66 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %65) #19, !dbg !9559
  %67 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 7, !dbg !9560
  store i16 %66, i16* %67, align 4, !dbg !9561
  %68 = add i32 %27, 1, !dbg !9562
  call void @llvm.dbg.value(metadata i32 %68, metadata !9500, metadata !DIExpression()), !dbg !9508
  %69 = icmp eq %struct.tskTaskControlBlock* %22, %37, !dbg !9563
  br i1 %69, label %72, label %70, !dbg !9564, !llvm.loop !9565

70:                                               ; preds = %56
  %71 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !9519
  br label %25, !dbg !9564

72:                                               ; preds = %56, %3
  %73 = phi i32 [ 0, %3 ], [ %68, %56 ], !dbg !9508
  call void @llvm.dbg.value(metadata i32 %73, metadata !9500, metadata !DIExpression()), !dbg !9508
  ret i32 %73, !dbg !9567
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* nocapture noundef readonly %0) unnamed_addr #14 !dbg !9568 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9572, metadata !DIExpression()), !dbg !9574
  call void @llvm.dbg.value(metadata i32 0, metadata !9573, metadata !DIExpression()), !dbg !9574
  %2 = load i8, i8* %0, align 1, !dbg !9575
  %3 = icmp eq i8 %2, -91, !dbg !9576
  br i1 %3, label %4, label %14, !dbg !9577

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9573, metadata !DIExpression()), !dbg !9574
  call void @llvm.dbg.value(metadata i8* %6, metadata !9572, metadata !DIExpression()), !dbg !9574
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9578
  call void @llvm.dbg.value(metadata i8* %7, metadata !9572, metadata !DIExpression()), !dbg !9574
  %8 = add i32 %5, 1, !dbg !9580
  call void @llvm.dbg.value(metadata i32 %8, metadata !9573, metadata !DIExpression()), !dbg !9574
  %9 = load i8, i8* %7, align 1, !dbg !9575
  %10 = icmp eq i8 %9, -91, !dbg !9576
  br i1 %10, label %4, label %11, !dbg !9577, !llvm.loop !9581

11:                                               ; preds = %4
  %12 = lshr i32 %8, 2, !dbg !9583
  %13 = trunc i32 %12 to i16, !dbg !9583
  br label %14, !dbg !9583

14:                                               ; preds = %11, %1
  %15 = phi i16 [ 0, %1 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !9573, metadata !DIExpression()), !dbg !9574
  ret i16 %15, !dbg !9584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventList(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !9585 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9589, metadata !DIExpression()), !dbg !9592
  call void @llvm.dbg.value(metadata i32 %1, metadata !9590, metadata !DIExpression()), !dbg !9592
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !9593
  br i1 %3, label %4, label %5, !dbg !9595

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 2262) #21, !dbg !9596
  br label %5, !dbg !9596

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9598
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !9599
  tail call void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #21, !dbg !9600
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9601
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !9603
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #21, !dbg !9604
  %11 = icmp eq i32 %10, 0, !dbg !9605
  br i1 %11, label %12, label %20, !dbg !9606

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9607
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !9607
  %15 = load i32, i32* %14, align 4, !dbg !9607
  %16 = shl nuw i32 1, %15, !dbg !9607
  %17 = xor i32 %16, -1, !dbg !9607
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9607
  %19 = and i32 %18, %17, !dbg !9607
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !9607
  br label %20, !dbg !9609

20:                                               ; preds = %5, %12
  %21 = icmp eq i32 %1, -1, !dbg !9610
  br i1 %21, label %22, label %25, !dbg !9613

22:                                               ; preds = %20
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9614
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 1, !dbg !9616
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %24) #21, !dbg !9617
  br label %28, !dbg !9618

25:                                               ; preds = %20
  %26 = load volatile i32, i32* @xTickCount, align 4, !dbg !9619
  %27 = add i32 %26, %1, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %27, metadata !9591, metadata !DIExpression()), !dbg !9592
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %27) #19, !dbg !9622
  br label %28

28:                                               ; preds = %25, %22
  ret void, !dbg !9623
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !9624 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9628, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %1, metadata !9629, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.value(metadata i32 %2, metadata !9630, metadata !DIExpression()), !dbg !9632
  %4 = icmp eq %struct.xLIST* %0, null, !dbg !9633
  br i1 %4, label %5, label %6, !dbg !9635

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 2321) #21, !dbg !9636
  br label %6, !dbg !9636

6:                                                ; preds = %5, %3
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9638
  %8 = icmp eq i32 %7, 0, !dbg !9638
  br i1 %8, label %9, label %10, !dbg !9640

9:                                                ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 2325) #21, !dbg !9641
  br label %10, !dbg !9641

10:                                               ; preds = %9, %6
  %11 = or i32 %1, -2147483648, !dbg !9643
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9643
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 2, i32 0, !dbg !9643
  store i32 %11, i32* %13, align 4, !dbg !9643
  %14 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9644
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, !dbg !9645
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %15) #21, !dbg !9646
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9647
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 1, !dbg !9649
  %18 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %17) #21, !dbg !9650
  %19 = icmp eq i32 %18, 0, !dbg !9651
  br i1 %19, label %20, label %28, !dbg !9652

20:                                               ; preds = %10
  %21 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9653
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 3, !dbg !9653
  %23 = load i32, i32* %22, align 4, !dbg !9653
  %24 = shl nuw i32 1, %23, !dbg !9653
  %25 = xor i32 %24, -1, !dbg !9653
  %26 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9653
  %27 = and i32 %26, %25, !dbg !9653
  store volatile i32 %27, i32* @uxTopReadyPriority, align 4, !dbg !9653
  br label %28, !dbg !9655

28:                                               ; preds = %10, %20
  %29 = icmp eq i32 %2, -1, !dbg !9656
  br i1 %29, label %30, label %33, !dbg !9659

30:                                               ; preds = %28
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9660
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 1, !dbg !9662
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %32) #21, !dbg !9663
  br label %36, !dbg !9664

33:                                               ; preds = %28
  %34 = load volatile i32, i32* @xTickCount, align 4, !dbg !9665
  %35 = add i32 %34, %2, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %35, metadata !9631, metadata !DIExpression()), !dbg !9632
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %35) #19, !dbg !9668
  br label %36

36:                                               ; preds = %33, %30
  ret void, !dbg !9669
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9672, metadata !DIExpression()), !dbg !9675
  call void @llvm.dbg.value(metadata i32 %1, metadata !9673, metadata !DIExpression()), !dbg !9675
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !9676
  br i1 %3, label %4, label %5, !dbg !9678

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 2389) #21, !dbg !9679
  br label %5, !dbg !9679

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9681
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !9682
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #21, !dbg !9683
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9684
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !9686
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #21, !dbg !9687
  %11 = icmp eq i32 %10, 0, !dbg !9688
  br i1 %11, label %12, label %20, !dbg !9689

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9690
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !9690
  %15 = load i32, i32* %14, align 4, !dbg !9690
  %16 = shl nuw i32 1, %15, !dbg !9690
  %17 = xor i32 %16, -1, !dbg !9690
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9690
  %19 = and i32 %18, %17, !dbg !9690
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !9690
  br label %20, !dbg !9692

20:                                               ; preds = %5, %12
  %21 = load volatile i32, i32* @xTickCount, align 4, !dbg !9693
  %22 = add i32 %21, %1, !dbg !9694
  call void @llvm.dbg.value(metadata i32 %22, metadata !9674, metadata !DIExpression()), !dbg !9675
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %22) #19, !dbg !9695
  ret void, !dbg !9696
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromEventList(%struct.xLIST* nocapture noundef readonly %0) local_unnamed_addr #3 !dbg !9697 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9704, metadata !DIExpression()), !dbg !9707
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !9708
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %2, align 4, !dbg !9708
  %4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 3, !dbg !9708
  %5 = bitcast i8** %4 to %struct.tskTaskControlBlock**, !dbg !9708
  %6 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %5, align 4, !dbg !9708
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !9705, metadata !DIExpression()), !dbg !9707
  %7 = icmp eq %struct.tskTaskControlBlock* %6, null, !dbg !9709
  br i1 %7, label %8, label %9, !dbg !9711

8:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 2447) #21, !dbg !9712
  br label %9, !dbg !9712

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !9714
  %11 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %10) #21, !dbg !9715
  %12 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9716
  %13 = icmp eq i32 %12, 0, !dbg !9718
  br i1 %13, label %14, label %23, !dbg !9719

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !9720
  %16 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %15) #21, !dbg !9722
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !9723
  %18 = load i32, i32* %17, align 4, !dbg !9723
  %19 = shl nuw i32 1, %18, !dbg !9723
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9723
  %21 = or i32 %20, %19, !dbg !9723
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !9723
  %22 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %18, !dbg !9723
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %22, %struct.xLIST_ITEM* noundef nonnull %15) #21, !dbg !9723
  br label %24, !dbg !9724

23:                                               ; preds = %9
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %10) #21, !dbg !9725
  br label %24

24:                                               ; preds = %23, %14
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !9727
  %26 = load i32, i32* %25, align 4, !dbg !9727
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9729
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 3, !dbg !9730
  %29 = load i32, i32* %28, align 4, !dbg !9730
  %30 = icmp ugt i32 %26, %29, !dbg !9731
  br i1 %30, label %31, label %32, !dbg !9732

31:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 1, metadata !9706, metadata !DIExpression()), !dbg !9707
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !9733
  br label %32, !dbg !9735

32:                                               ; preds = %24, %31
  %33 = phi i32 [ 1, %31 ], [ 0, %24 ], !dbg !9736
  call void @llvm.dbg.value(metadata i32 %33, metadata !9706, metadata !DIExpression()), !dbg !9707
  ret i32 %33, !dbg !9737
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !9738 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !9742, metadata !DIExpression()), !dbg !9746
  call void @llvm.dbg.value(metadata i32 %1, metadata !9743, metadata !DIExpression()), !dbg !9746
  %3 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9747
  %4 = icmp eq i32 %3, 0, !dbg !9747
  br i1 %4, label %5, label %6, !dbg !9749

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 2503) #21, !dbg !9750
  br label %6, !dbg !9750

6:                                                ; preds = %5, %2
  %7 = or i32 %1, -2147483648, !dbg !9752
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 0, !dbg !9752
  store i32 %7, i32* %8, align 4, !dbg !9752
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 3, !dbg !9753
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !9753
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !9753
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !9744, metadata !DIExpression()), !dbg !9746
  %12 = icmp eq %struct.tskTaskControlBlock* %11, null, !dbg !9754
  br i1 %12, label %13, label %14, !dbg !9756

13:                                               ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 2511) #21, !dbg !9757
  br label %14, !dbg !9757

14:                                               ; preds = %13, %6
  %15 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %0) #21, !dbg !9759
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !9760
  %17 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %16) #21, !dbg !9761
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 3, !dbg !9762
  %19 = load i32, i32* %18, align 4, !dbg !9762
  %20 = shl nuw i32 1, %19, !dbg !9762
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9762
  %22 = or i32 %21, %20, !dbg !9762
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !9762
  %23 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %19, !dbg !9762
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %23, %struct.xLIST_ITEM* noundef nonnull %16) #21, !dbg !9762
  %24 = load i32, i32* %18, align 4, !dbg !9763
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9765
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !9766
  %27 = load i32, i32* %26, align 4, !dbg !9766
  %28 = icmp ugt i32 %24, %27, !dbg !9767
  br i1 %28, label %29, label %30, !dbg !9768

29:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 1, metadata !9745, metadata !DIExpression()), !dbg !9746
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !9769
  br label %30, !dbg !9771

30:                                               ; preds = %14, %29
  %31 = phi i32 [ 1, %29 ], [ 0, %14 ], !dbg !9772
  call void @llvm.dbg.value(metadata i32 %31, metadata !9745, metadata !DIExpression()), !dbg !9746
  ret i32 %31, !dbg !9773
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSetTimeOutState(%struct.DMA_SWCOPYMENU* noundef writeonly %0) local_unnamed_addr #3 !dbg !9774 {
  call void @llvm.dbg.value(metadata %struct.DMA_SWCOPYMENU* %0, metadata !9785, metadata !DIExpression()), !dbg !9786
  %2 = icmp eq %struct.DMA_SWCOPYMENU* %0, null, !dbg !9787
  br i1 %2, label %3, label %4, !dbg !9789

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 2543) #21, !dbg !9790
  br label %4, !dbg !9790

4:                                                ; preds = %3, %1
  %5 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !9792
  %6 = getelementptr inbounds %struct.DMA_SWCOPYMENU, %struct.DMA_SWCOPYMENU* %0, i32 0, i32 0, !dbg !9793
  store i32 %5, i32* %6, align 4, !dbg !9794
  %7 = load volatile i32, i32* @xTickCount, align 4, !dbg !9795
  %8 = getelementptr inbounds %struct.DMA_SWCOPYMENU, %struct.DMA_SWCOPYMENU* %0, i32 0, i32 1, !dbg !9796
  store i32 %7, i32* %8, align 4, !dbg !9797
  ret void, !dbg !9798
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskCheckForTimeOut(%struct.DMA_SWCOPYMENU* noundef %0, i32* noundef %1) local_unnamed_addr #3 !dbg !9799 {
  call void @llvm.dbg.value(metadata %struct.DMA_SWCOPYMENU* %0, metadata !9803, metadata !DIExpression()), !dbg !9808
  call void @llvm.dbg.value(metadata i32* %1, metadata !9804, metadata !DIExpression()), !dbg !9808
  %3 = icmp eq %struct.DMA_SWCOPYMENU* %0, null, !dbg !9809
  br i1 %3, label %4, label %5, !dbg !9811

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 2553) #21, !dbg !9812
  br label %5, !dbg !9812

5:                                                ; preds = %4, %2
  %6 = icmp eq i32* %1, null, !dbg !9814
  br i1 %6, label %7, label %8, !dbg !9816

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 2554) #21, !dbg !9817
  br label %8, !dbg !9817

8:                                                ; preds = %7, %5
  tail call void @vPortEnterCritical() #21, !dbg !9819
  %9 = load volatile i32, i32* @xTickCount, align 4, !dbg !9820
  call void @llvm.dbg.value(metadata i32 %9, metadata !9806, metadata !DIExpression()), !dbg !9821
  %10 = load i32, i32* %1, align 4, !dbg !9822
  %11 = icmp eq i32 %10, -1, !dbg !9824
  br i1 %11, label %26, label %12, !dbg !9825

12:                                               ; preds = %8
  %13 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !9826
  %14 = getelementptr inbounds %struct.DMA_SWCOPYMENU, %struct.DMA_SWCOPYMENU* %0, i32 0, i32 0, !dbg !9828
  %15 = load i32, i32* %14, align 4, !dbg !9828
  %16 = icmp eq i32 %13, %15, !dbg !9829
  %17 = getelementptr inbounds %struct.DMA_SWCOPYMENU, %struct.DMA_SWCOPYMENU* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4, !dbg !9830
  %19 = icmp ult i32 %9, %18
  %20 = select i1 %16, i1 true, i1 %19, !dbg !9831
  br i1 %20, label %21, label %26, !dbg !9831

21:                                               ; preds = %12
  %22 = sub i32 %9, %18, !dbg !9832
  %23 = icmp ugt i32 %10, %22, !dbg !9834
  br i1 %23, label %24, label %26, !dbg !9835

24:                                               ; preds = %21
  %25 = sub i32 %10, %22, !dbg !9836
  store i32 %25, i32* %1, align 4, !dbg !9836
  tail call void @vTaskSetTimeOutState(%struct.DMA_SWCOPYMENU* noundef nonnull %0) #19, !dbg !9838
  call void @llvm.dbg.value(metadata i32 0, metadata !9805, metadata !DIExpression()), !dbg !9808
  br label %26, !dbg !9839

26:                                               ; preds = %12, %21, %8, %24
  %27 = phi i32 [ 0, %24 ], [ 0, %8 ], [ 1, %21 ], [ 1, %12 ], !dbg !9840
  call void @llvm.dbg.value(metadata i32 %27, metadata !9805, metadata !DIExpression()), !dbg !9808
  tail call void @vPortExitCritical() #21, !dbg !9841
  ret i32 %27, !dbg !9842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskMissedYield() local_unnamed_addr #1 !dbg !9843 {
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !9844
  ret void, !dbg !9845
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxTaskGetTaskNumber(i8* noundef readonly %0) local_unnamed_addr #10 !dbg !9846 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9848, metadata !DIExpression()), !dbg !9851
  %2 = icmp eq i8* %0, null, !dbg !9852
  br i1 %2, label %7, label %3, !dbg !9854

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9850, metadata !DIExpression()), !dbg !9851
  %4 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !9855
  %5 = bitcast i8* %4 to i32*, !dbg !9855
  %6 = load i32, i32* %5, align 4, !dbg !9855
  call void @llvm.dbg.value(metadata i32 %6, metadata !9849, metadata !DIExpression()), !dbg !9851
  br label %7, !dbg !9857

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 0, %1 ], !dbg !9858
  call void @llvm.dbg.value(metadata i32 %8, metadata !9849, metadata !DIExpression()), !dbg !9851
  ret i32 %8, !dbg !9859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vTaskSetTaskNumber(i8* noundef writeonly %0, i32 noundef %1) local_unnamed_addr #5 !dbg !9860 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9864, metadata !DIExpression()), !dbg !9867
  call void @llvm.dbg.value(metadata i32 %1, metadata !9865, metadata !DIExpression()), !dbg !9867
  %3 = icmp eq i8* %0, null, !dbg !9868
  br i1 %3, label %7, label %4, !dbg !9870

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %0, metadata !9866, metadata !DIExpression()), !dbg !9867
  %5 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !9871
  %6 = bitcast i8* %5 to i32*, !dbg !9871
  store i32 %1, i32* %6, align 4, !dbg !9873
  br label %7, !dbg !9874

7:                                                ; preds = %4, %2
  ret void, !dbg !9875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @uxTaskGetStackHighWaterMark(i8* noundef readonly %0) local_unnamed_addr #1 !dbg !9876 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9878, metadata !DIExpression()), !dbg !9882
  %2 = icmp eq i8* %0, null, !dbg !9883
  br i1 %2, label %3, label %5, !dbg !9883

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9883
  br label %7, !dbg !9883

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !9883
  br label %7, !dbg !9883

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !9883
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !9879, metadata !DIExpression()), !dbg !9882
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !9884
  %10 = bitcast i32** %9 to i8**, !dbg !9884
  %11 = load i8*, i8** %10, align 4, !dbg !9884
  call void @llvm.dbg.value(metadata i8* %11, metadata !9880, metadata !DIExpression()), !dbg !9882
  %12 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %11) #19, !dbg !9886
  %13 = zext i16 %12 to i32, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %13, metadata !9881, metadata !DIExpression()), !dbg !9882
  ret i32 %13, !dbg !9888
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @xTaskGetCurrentTaskHandle() local_unnamed_addr #9 !dbg !9889 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9894
  %2 = bitcast %struct.tskTaskControlBlock* %1 to i8*, !dbg !9894
  call void @llvm.dbg.value(metadata i8* %2, metadata !9893, metadata !DIExpression()), !dbg !9895
  ret i8* %2, !dbg !9896
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetSchedulerState() local_unnamed_addr #9 !dbg !9897 {
  %1 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !9900
  %2 = icmp eq i32 %1, 0, !dbg !9902
  br i1 %2, label %7, label %3, !dbg !9903

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9904
  %5 = icmp eq i32 %4, 0, !dbg !9907
  %6 = select i1 %5, i32 2, i32 0
  br label %7

7:                                                ; preds = %3, %0
  %8 = phi i32 [ 1, %0 ], [ %6, %3 ], !dbg !9908
  call void @llvm.dbg.value(metadata i32 %8, metadata !9899, metadata !DIExpression()), !dbg !9909
  ret i32 %8, !dbg !9910
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPriorityInherit(i8* noundef %0) local_unnamed_addr #3 !dbg !9911 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9915, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i8* %0, metadata !9916, metadata !DIExpression()), !dbg !9917
  %2 = icmp eq i8* %0, null, !dbg !9918
  br i1 %2, label %55, label %3, !dbg !9920

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9921
  %5 = bitcast i8* %4 to i32*, !dbg !9921
  %6 = load i32, i32* %5, align 4, !dbg !9921
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9924
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %7, i32 0, i32 3, !dbg !9925
  %9 = load i32, i32* %8, align 4, !dbg !9925
  %10 = icmp ult i32 %6, %9, !dbg !9926
  br i1 %10, label %11, label %55, !dbg !9927

11:                                               ; preds = %3
  %12 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9928
  %13 = bitcast i8* %12 to i32*, !dbg !9928
  %14 = load i32, i32* %13, align 4, !dbg !9928
  %15 = icmp sgt i32 %14, -1, !dbg !9931
  br i1 %15, label %16, label %21, !dbg !9932

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9933
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !9933
  %19 = load i32, i32* %18, align 4, !dbg !9933
  %20 = sub i32 20, %19, !dbg !9933
  store i32 %20, i32* %13, align 4, !dbg !9933
  br label %21, !dbg !9935

21:                                               ; preds = %11, %16
  %22 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9936
  %23 = bitcast i8* %22 to %struct.xLIST_ITEM*, !dbg !9936
  %24 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9936
  %25 = bitcast i8* %24 to i8**, !dbg !9936
  %26 = load i8*, i8** %25, align 4, !dbg !9936
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %6, !dbg !9936
  %28 = bitcast %struct.xLIST* %27 to i8*, !dbg !9936
  %29 = icmp eq i8* %26, %28, !dbg !9936
  br i1 %29, label %30, label %51, !dbg !9938

30:                                               ; preds = %21
  %31 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %23) #21, !dbg !9939
  %32 = icmp eq i32 %31, 0, !dbg !9942
  br i1 %32, label %33, label %43, !dbg !9943

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !9944
  %35 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %34, i32 0, !dbg !9944
  %36 = load i32, i32* %35, align 4, !dbg !9944
  %37 = icmp eq i32 %36, 0, !dbg !9944
  br i1 %37, label %38, label %43, !dbg !9948

38:                                               ; preds = %33
  %39 = shl nuw i32 1, %34, !dbg !9949
  %40 = xor i32 %39, -1, !dbg !9949
  %41 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9949
  %42 = and i32 %41, %40, !dbg !9949
  store volatile i32 %42, i32* @uxTopReadyPriority, align 4, !dbg !9949
  br label %43, !dbg !9949

43:                                               ; preds = %30, %33, %38
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9951
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !9952
  %46 = load i32, i32* %45, align 4, !dbg !9952
  store i32 %46, i32* %5, align 4, !dbg !9953
  %47 = shl nuw i32 1, %46, !dbg !9954
  %48 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9954
  %49 = or i32 %48, %47, !dbg !9954
  store volatile i32 %49, i32* @uxTopReadyPriority, align 4, !dbg !9954
  %50 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %46, !dbg !9954
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %50, %struct.xLIST_ITEM* noundef nonnull %23) #21, !dbg !9954
  br label %55, !dbg !9955

51:                                               ; preds = %21
  %52 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9956
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %52, i32 0, i32 3, !dbg !9958
  %54 = load i32, i32* %53, align 4, !dbg !9958
  store i32 %54, i32* %5, align 4, !dbg !9959
  br label %55

55:                                               ; preds = %1, %51, %43, %3
  ret void, !dbg !9960
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskPriorityDisinherit(i8* noundef %0) local_unnamed_addr #3 !dbg !9961 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9963, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata i8* %0, metadata !9964, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.value(metadata i32 0, metadata !9965, metadata !DIExpression()), !dbg !9966
  %2 = icmp eq i8* %0, null, !dbg !9967
  br i1 %2, label %46, label %3, !dbg !9969

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !9970
  %5 = bitcast i8* %4 to i32*, !dbg !9970
  %6 = load i32, i32* %5, align 4, !dbg !9970
  %7 = icmp eq i32 %6, 0, !dbg !9970
  br i1 %7, label %8, label %10, !dbg !9973

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21.158, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 3409) #21, !dbg !9974
  %9 = load i32, i32* %5, align 4, !dbg !9976
  br label %10, !dbg !9974

10:                                               ; preds = %8, %3
  %11 = phi i32 [ %9, %8 ], [ %6, %3 ], !dbg !9976
  %12 = add i32 %11, -1, !dbg !9976
  store i32 %12, i32* %5, align 4, !dbg !9976
  %13 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9977
  %14 = bitcast i8* %13 to i32*, !dbg !9977
  %15 = load i32, i32* %14, align 4, !dbg !9977
  %16 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !9979
  %17 = bitcast i8* %16 to i32*, !dbg !9979
  %18 = load i32, i32* %17, align 4, !dbg !9979
  %19 = icmp ne i32 %15, %18, !dbg !9980
  %20 = icmp eq i32 %12, 0
  %21 = select i1 %19, i1 %20, i1 false, !dbg !9981
  br i1 %21, label %22, label %46, !dbg !9981

22:                                               ; preds = %10
  %23 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9982
  %24 = bitcast i8* %23 to %struct.xLIST_ITEM*, !dbg !9982
  %25 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %24) #21, !dbg !9987
  %26 = icmp eq i32 %25, 0, !dbg !9988
  br i1 %26, label %27, label %37, !dbg !9989

27:                                               ; preds = %22
  %28 = load i32, i32* %14, align 4, !dbg !9990
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %28, i32 0, !dbg !9990
  %30 = load i32, i32* %29, align 4, !dbg !9990
  %31 = icmp eq i32 %30, 0, !dbg !9990
  br i1 %31, label %32, label %37, !dbg !9994

32:                                               ; preds = %27
  %33 = shl nuw i32 1, %28, !dbg !9995
  %34 = xor i32 %33, -1, !dbg !9995
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9995
  %36 = and i32 %35, %34, !dbg !9995
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !9995
  br label %37, !dbg !9995

37:                                               ; preds = %22, %27, %32
  %38 = load i32, i32* %17, align 4, !dbg !9997
  store i32 %38, i32* %14, align 4, !dbg !9998
  %39 = sub i32 20, %38, !dbg !9999
  %40 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9999
  %41 = bitcast i8* %40 to i32*, !dbg !9999
  store i32 %39, i32* %41, align 4, !dbg !9999
  %42 = shl nuw i32 1, %38, !dbg !10000
  %43 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !10000
  %44 = or i32 %43, %42, !dbg !10000
  store volatile i32 %44, i32* @uxTopReadyPriority, align 4, !dbg !10000
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %38, !dbg !10000
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %45, %struct.xLIST_ITEM* noundef nonnull %24) #21, !dbg !10000
  call void @llvm.dbg.value(metadata i32 1, metadata !9965, metadata !DIExpression()), !dbg !9966
  br label %46, !dbg !10001

46:                                               ; preds = %1, %37, %10
  %47 = phi i32 [ 1, %37 ], [ 0, %10 ], [ 0, %1 ], !dbg !9966
  call void @llvm.dbg.value(metadata i32 %47, metadata !9965, metadata !DIExpression()), !dbg !9966
  ret i32 %47, !dbg !10002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskList(i8* noundef %0) local_unnamed_addr #3 !dbg !10003 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10007, metadata !DIExpression()), !dbg !10012
  %4 = bitcast i32* %2 to i8*, !dbg !10013
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !10013
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10009, metadata !DIExpression()), !dbg !10014
  %5 = bitcast i32* %3 to i8*, !dbg !10013
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !10013
  call void @llvm.dbg.declare(metadata i32* %3, metadata !10010, metadata !DIExpression()), !dbg !10015
  store i8 0, i8* %0, align 1, !dbg !10016
  %6 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !10017
  store volatile i32 %6, i32* %2, align 4, !dbg !10018
  %7 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !10019
  %8 = shl i32 %7, 5, !dbg !10020
  %9 = tail call i8* @pvPortMalloc(i32 noundef %8) #21, !dbg !10021
  %10 = bitcast i8* %9 to %struct.xTASK_STATUS*, !dbg !10021
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %10, metadata !10008, metadata !DIExpression()), !dbg !10012
  %11 = icmp eq i8* %9, null, !dbg !10022
  br i1 %11, label %53, label %12, !dbg !10024

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %2, align 4, !dbg !10025
  %14 = tail call i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* noundef nonnull %10, i32 noundef %13, i32* noundef null) #19, !dbg !10027
  store volatile i32 %14, i32* %2, align 4, !dbg !10028
  store volatile i32 0, i32* %3, align 4, !dbg !10029
  call void @llvm.dbg.value(metadata i8* %0, metadata !10007, metadata !DIExpression()), !dbg !10012
  %15 = load volatile i32, i32* %3, align 4, !dbg !10031
  %16 = load volatile i32, i32* %2, align 4, !dbg !10033
  %17 = icmp ult i32 %15, %16, !dbg !10034
  br i1 %17, label %18, label %52, !dbg !10035

18:                                               ; preds = %12, %28
  %19 = phi i8* [ %46, %28 ], [ %0, %12 ]
  call void @llvm.dbg.value(metadata i8* %19, metadata !10007, metadata !DIExpression()), !dbg !10012
  %20 = load volatile i32, i32* %3, align 4, !dbg !10036
  %21 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %20, i32 3, !dbg !10038
  %22 = load i32, i32* %21, align 4, !dbg !10038
  %23 = add i32 %22, -1, !dbg !10039
  %24 = icmp ult i32 %23, 4, !dbg !10039
  br i1 %24, label %25, label %28, !dbg !10039

25:                                               ; preds = %18
  %26 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.vTaskList, i32 0, i32 %23, !dbg !10039
  %27 = load i32, i32* %26, align 4, !dbg !10039
  br label %28, !dbg !10039

28:                                               ; preds = %18, %25
  %29 = phi i32 [ %27, %25 ], [ 0, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !10011, metadata !DIExpression()), !dbg !10012
  %30 = load volatile i32, i32* %3, align 4, !dbg !10040
  %31 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %30, i32 1, !dbg !10041
  %32 = load i8*, i8** %31, align 4, !dbg !10041
  %33 = tail call fastcc i8* @prvWriteNameToBuffer(i8* noundef %19, i8* noundef %32) #19, !dbg !10042
  call void @llvm.dbg.value(metadata i8* %33, metadata !10007, metadata !DIExpression()), !dbg !10012
  %34 = load volatile i32, i32* %3, align 4, !dbg !10043
  %35 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %34, i32 4, !dbg !10044
  %36 = load i32, i32* %35, align 4, !dbg !10044
  %37 = load volatile i32, i32* %3, align 4, !dbg !10045
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %37, i32 7, !dbg !10046
  %39 = load i16, i16* %38, align 4, !dbg !10046
  %40 = zext i16 %39 to i32, !dbg !10047
  %41 = load volatile i32, i32* %3, align 4, !dbg !10048
  %42 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %41, i32 2, !dbg !10049
  %43 = load i32, i32* %42, align 4, !dbg !10049
  %44 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %33, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i32 noundef %29, i32 noundef %36, i32 noundef %40, i32 noundef %43) #21, !dbg !10050
  %45 = tail call i32 @strlen(i8* noundef %33) #21, !dbg !10051
  %46 = getelementptr inbounds i8, i8* %33, i32 %45, !dbg !10052
  call void @llvm.dbg.value(metadata i8* %46, metadata !10007, metadata !DIExpression()), !dbg !10012
  %47 = load volatile i32, i32* %3, align 4, !dbg !10053
  %48 = add i32 %47, 1, !dbg !10053
  store volatile i32 %48, i32* %3, align 4, !dbg !10053
  %49 = load volatile i32, i32* %3, align 4, !dbg !10031
  %50 = load volatile i32, i32* %2, align 4, !dbg !10033
  %51 = icmp ult i32 %49, %50, !dbg !10034
  br i1 %51, label %18, label %52, !dbg !10035, !llvm.loop !10054

52:                                               ; preds = %28, %12
  tail call void @vPortFree(i8* noundef nonnull %9) #21, !dbg !10056
  br label %53, !dbg !10057

53:                                               ; preds = %1, %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !10058
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !10058
  ret void, !dbg !10058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prvWriteNameToBuffer(i8* noundef %0, i8* noundef %1) unnamed_addr #3 !dbg !10059 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10063, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.value(metadata i8* %1, metadata !10064, metadata !DIExpression()), !dbg !10066
  %3 = tail call i8* @strcpy(i8* noundef %0, i8* noundef %1) #21, !dbg !10067
  %4 = tail call i32 @strlen(i8* noundef %0) #21, !dbg !10068
  call void @llvm.dbg.value(metadata i32 %4, metadata !10065, metadata !DIExpression()), !dbg !10066
  %5 = icmp slt i32 %4, 5, !dbg !10070
  br i1 %5, label %6, label %11, !dbg !10072

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %9, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10065, metadata !DIExpression()), !dbg !10066
  %8 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !10073
  store i8 32, i8* %8, align 1, !dbg !10075
  %9 = add i32 %7, 1, !dbg !10076
  call void @llvm.dbg.value(metadata i32 %9, metadata !10065, metadata !DIExpression()), !dbg !10066
  %10 = icmp eq i32 %9, 5, !dbg !10070
  br i1 %10, label %11, label %6, !dbg !10072, !llvm.loop !10077

11:                                               ; preds = %6, %2
  %12 = phi i32 [ %4, %2 ], [ 5, %6 ], !dbg !10079
  %13 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !10080
  store i8 0, i8* %13, align 1, !dbg !10081
  ret i8* %13, !dbg !10082
}

; Function Attrs: optsize
declare dso_local i32 @sprintf(i8* noundef, i8* noundef, ...) local_unnamed_addr #4

; Function Attrs: optsize
declare dso_local i32 @strlen(i8* noundef) local_unnamed_addr #4

; Function Attrs: optsize
declare dso_local i8* @strcpy(i8* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskResetEventItemValue() local_unnamed_addr #9 !dbg !10083 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10086
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 2, i32 0, !dbg !10086
  %3 = load i32, i32* %2, align 4, !dbg !10086
  call void @llvm.dbg.value(metadata i32 %3, metadata !10085, metadata !DIExpression()), !dbg !10087
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10088
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !10088
  %6 = load i32, i32* %5, align 4, !dbg !10088
  %7 = sub i32 20, %6, !dbg !10088
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10088
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 0, !dbg !10088
  store i32 %7, i32* %9, align 4, !dbg !10088
  ret i32 %3, !dbg !10089
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @pvTaskIncrementMutexHeldCount() local_unnamed_addr #9 !dbg !10090 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10092
  %2 = icmp eq %struct.tskTaskControlBlock* %1, null, !dbg !10094
  br i1 %2, label %8, label %3, !dbg !10095

3:                                                ; preds = %0
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10096
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 9, !dbg !10098
  %6 = load i32, i32* %5, align 4, !dbg !10099
  %7 = add i32 %6, 1, !dbg !10099
  store i32 %7, i32* %5, align 4, !dbg !10099
  br label %8, !dbg !10100

8:                                                ; preds = %3, %0
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10101
  %10 = bitcast %struct.tskTaskControlBlock* %9 to i8*, !dbg !10101
  ret i8* %10, !dbg !10102
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ulTaskNotifyTake(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !10103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10107, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.value(metadata i32 %1, metadata !10108, metadata !DIExpression()), !dbg !10111
  tail call void @vPortEnterCritical() #21, !dbg !10112
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10113
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 10, !dbg !10116
  %5 = load volatile i32, i32* %4, align 4, !dbg !10116
  %6 = icmp eq i32 %5, 0, !dbg !10117
  br i1 %6, label %7, label %33, !dbg !10118

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10119
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 11, !dbg !10121
  store volatile i32 1, i32* %9, align 4, !dbg !10122
  %10 = icmp eq i32 %1, 0, !dbg !10123
  br i1 %10, label %33, label %11, !dbg !10125

11:                                               ; preds = %7
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10126
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !10129
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #21, !dbg !10130
  %15 = icmp eq i32 %14, 0, !dbg !10131
  br i1 %15, label %16, label %24, !dbg !10132

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10133
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !10133
  %19 = load i32, i32* %18, align 4, !dbg !10133
  %20 = shl nuw i32 1, %19, !dbg !10133
  %21 = xor i32 %20, -1, !dbg !10133
  %22 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !10133
  %23 = and i32 %22, %21, !dbg !10133
  store volatile i32 %23, i32* @uxTopReadyPriority, align 4, !dbg !10133
  br label %24, !dbg !10135

24:                                               ; preds = %11, %16
  %25 = icmp eq i32 %1, -1, !dbg !10136
  br i1 %25, label %26, label %29, !dbg !10139

26:                                               ; preds = %24
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10140
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 1, !dbg !10142
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %28) #21, !dbg !10143
  br label %32, !dbg !10144

29:                                               ; preds = %24
  %30 = load volatile i32, i32* @xTickCount, align 4, !dbg !10145
  %31 = add i32 %30, %1, !dbg !10147
  call void @llvm.dbg.value(metadata i32 %31, metadata !10109, metadata !DIExpression()), !dbg !10111
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %31) #19, !dbg !10148
  br label %32

32:                                               ; preds = %29, %26
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10149
  tail call void asm sideeffect "dsb", ""() #20, !dbg !10149, !srcloc !10151
  tail call void asm sideeffect "isb", ""() #20, !dbg !10149, !srcloc !10152
  br label %33, !dbg !10153

33:                                               ; preds = %2, %32, %7
  tail call void @vPortExitCritical() #21, !dbg !10154
  tail call void @vPortEnterCritical() #21, !dbg !10155
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10156
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 10, !dbg !10158
  %36 = load volatile i32, i32* %35, align 4, !dbg !10158
  call void @llvm.dbg.value(metadata i32 %36, metadata !10110, metadata !DIExpression()), !dbg !10111
  %37 = icmp eq i32 %36, 0, !dbg !10159
  br i1 %37, label %47, label %38, !dbg !10161

38:                                               ; preds = %33
  %39 = icmp eq i32 %0, 0, !dbg !10162
  %40 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10165
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %40, i32 0, i32 10, !dbg !10165
  br i1 %39, label %42, label %45, !dbg !10166

42:                                               ; preds = %38
  %43 = load volatile i32, i32* %41, align 4, !dbg !10167
  %44 = add i32 %43, -1, !dbg !10167
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i32 [ %44, %42 ], [ 0, %38 ]
  store volatile i32 %46, i32* %41, align 4, !dbg !10165
  br label %47, !dbg !10169

47:                                               ; preds = %45, %33
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10169
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 11, !dbg !10170
  store volatile i32 0, i32* %49, align 4, !dbg !10171
  tail call void @vPortExitCritical() #21, !dbg !10172
  ret i32 %36, !dbg !10173
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyWait(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #3 !dbg !10174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10178, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata i32 %1, metadata !10179, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata i32* %2, metadata !10180, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata i32 %3, metadata !10181, metadata !DIExpression()), !dbg !10184
  tail call void @vPortEnterCritical() #21, !dbg !10185
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10186
  %6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %5, i32 0, i32 11, !dbg !10189
  %7 = load volatile i32, i32* %6, align 4, !dbg !10189
  %8 = icmp eq i32 %7, 2, !dbg !10190
  br i1 %8, label %40, label %9, !dbg !10191

9:                                                ; preds = %4
  %10 = xor i32 %0, -1, !dbg !10192
  %11 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10194
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 10, !dbg !10195
  %13 = load volatile i32, i32* %12, align 4, !dbg !10196
  %14 = and i32 %13, %10, !dbg !10196
  store volatile i32 %14, i32* %12, align 4, !dbg !10196
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10197
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 11, !dbg !10198
  store volatile i32 1, i32* %16, align 4, !dbg !10199
  %17 = icmp eq i32 %3, 0, !dbg !10200
  br i1 %17, label %40, label %18, !dbg !10202

18:                                               ; preds = %9
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10203
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !10206
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #21, !dbg !10207
  %22 = icmp eq i32 %21, 0, !dbg !10208
  br i1 %22, label %23, label %31, !dbg !10209

23:                                               ; preds = %18
  %24 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10210
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %24, i32 0, i32 3, !dbg !10210
  %26 = load i32, i32* %25, align 4, !dbg !10210
  %27 = shl nuw i32 1, %26, !dbg !10210
  %28 = xor i32 %27, -1, !dbg !10210
  %29 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !10210
  %30 = and i32 %29, %28, !dbg !10210
  store volatile i32 %30, i32* @uxTopReadyPriority, align 4, !dbg !10210
  br label %31, !dbg !10212

31:                                               ; preds = %18, %23
  %32 = icmp eq i32 %3, -1, !dbg !10213
  br i1 %32, label %33, label %36, !dbg !10216

33:                                               ; preds = %31
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10217
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !10219
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %35) #21, !dbg !10220
  br label %39, !dbg !10221

36:                                               ; preds = %31
  %37 = load volatile i32, i32* @xTickCount, align 4, !dbg !10222
  %38 = add i32 %37, %3, !dbg !10224
  call void @llvm.dbg.value(metadata i32 %38, metadata !10182, metadata !DIExpression()), !dbg !10184
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %38) #19, !dbg !10225
  br label %39

39:                                               ; preds = %36, %33
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10226
  tail call void asm sideeffect "dsb", ""() #20, !dbg !10226, !srcloc !10228
  tail call void asm sideeffect "isb", ""() #20, !dbg !10226, !srcloc !10229
  br label %40, !dbg !10230

40:                                               ; preds = %4, %39, %9
  tail call void @vPortExitCritical() #21, !dbg !10231
  tail call void @vPortEnterCritical() #21, !dbg !10232
  %41 = icmp eq i32* %2, null, !dbg !10233
  br i1 %41, label %46, label %42, !dbg !10236

42:                                               ; preds = %40
  %43 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10237
  %44 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %43, i32 0, i32 10, !dbg !10239
  %45 = load volatile i32, i32* %44, align 4, !dbg !10239
  store i32 %45, i32* %2, align 4, !dbg !10240
  br label %46, !dbg !10241

46:                                               ; preds = %42, %40
  %47 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10242
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %47, i32 0, i32 11, !dbg !10244
  %49 = load volatile i32, i32* %48, align 4, !dbg !10244
  %50 = icmp eq i32 %49, 1, !dbg !10245
  br i1 %50, label %57, label %51, !dbg !10246

51:                                               ; preds = %46
  %52 = xor i32 %1, -1, !dbg !10247
  %53 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10249
  %54 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %53, i32 0, i32 10, !dbg !10250
  %55 = load volatile i32, i32* %54, align 4, !dbg !10251
  %56 = and i32 %55, %52, !dbg !10251
  store volatile i32 %56, i32* %54, align 4, !dbg !10251
  call void @llvm.dbg.value(metadata i32 1, metadata !10183, metadata !DIExpression()), !dbg !10184
  br label %57

57:                                               ; preds = %46, %51
  %58 = phi i32 [ 1, %51 ], [ 0, %46 ], !dbg !10252
  call void @llvm.dbg.value(metadata i32 %58, metadata !10183, metadata !DIExpression()), !dbg !10184
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10253
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 11, !dbg !10254
  store volatile i32 0, i32* %60, align 4, !dbg !10255
  tail call void @vPortExitCritical() #21, !dbg !10256
  ret i32 %58, !dbg !10257
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotify(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !10258 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10263, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata i32 %1, metadata !10264, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata i32 %2, metadata !10265, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.value(metadata i32 1, metadata !10268, metadata !DIExpression()), !dbg !10269
  %4 = icmp eq i8* %0, null, !dbg !10270
  br i1 %4, label %5, label %6, !dbg !10272

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 4049) #21, !dbg !10273
  br label %6, !dbg !10273

6:                                                ; preds = %5, %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10266, metadata !DIExpression()), !dbg !10269
  tail call void @vPortEnterCritical() #21, !dbg !10275
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !10276
  %8 = bitcast i8* %7 to i32*, !dbg !10276
  %9 = load volatile i32, i32* %8, align 4, !dbg !10276
  call void @llvm.dbg.value(metadata i32 %9, metadata !10267, metadata !DIExpression()), !dbg !10269
  store volatile i32 2, i32* %8, align 4, !dbg !10278
  switch i32 %2, label %28 [
    i32 1, label %10
    i32 2, label %15
    i32 3, label %20
    i32 4, label %23
  ], !dbg !10279

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %0, metadata !10266, metadata !DIExpression()), !dbg !10269
  %11 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10280
  %12 = bitcast i8* %11 to i32*, !dbg !10280
  %13 = load volatile i32, i32* %12, align 4, !dbg !10282
  %14 = or i32 %13, %1, !dbg !10282
  store volatile i32 %14, i32* %12, align 4, !dbg !10282
  br label %28, !dbg !10283

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10284
  %17 = bitcast i8* %16 to i32*, !dbg !10284
  %18 = load volatile i32, i32* %17, align 4, !dbg !10285
  %19 = add i32 %18, 1, !dbg !10285
  store volatile i32 %19, i32* %17, align 4, !dbg !10285
  br label %28, !dbg !10286

20:                                               ; preds = %6
  %21 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10287
  %22 = bitcast i8* %21 to i32*, !dbg !10287
  store volatile i32 %1, i32* %22, align 4, !dbg !10288
  br label %28, !dbg !10289

23:                                               ; preds = %6
  %24 = icmp eq i32 %9, 2, !dbg !10290
  br i1 %24, label %53, label %25, !dbg !10292

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10293
  %27 = bitcast i8* %26 to i32*, !dbg !10293
  store volatile i32 %1, i32* %27, align 4, !dbg !10295
  br label %28, !dbg !10296

28:                                               ; preds = %25, %6, %20, %15, %10
  call void @llvm.dbg.value(metadata i32 1, metadata !10268, metadata !DIExpression()), !dbg !10269
  %29 = icmp eq i32 %9, 1, !dbg !10297
  br i1 %29, label %30, label %53, !dbg !10299

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10300
  %32 = bitcast i8* %31 to %struct.xLIST_ITEM*, !dbg !10300
  %33 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %32) #21, !dbg !10302
  %34 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10303
  %35 = bitcast i8* %34 to i32*, !dbg !10303
  %36 = load i32, i32* %35, align 4, !dbg !10303
  %37 = shl nuw i32 1, %36, !dbg !10303
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !10303
  %39 = or i32 %38, %37, !dbg !10303
  store volatile i32 %39, i32* @uxTopReadyPriority, align 4, !dbg !10303
  %40 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %36, !dbg !10303
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %40, %struct.xLIST_ITEM* noundef nonnull %32) #21, !dbg !10303
  %41 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !10304
  %42 = bitcast i8* %41 to i8**, !dbg !10304
  %43 = load i8*, i8** %42, align 4, !dbg !10304
  %44 = icmp eq i8* %43, null, !dbg !10304
  br i1 %44, label %46, label %45, !dbg !10306

45:                                               ; preds = %30
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 4099) #21, !dbg !10307
  br label %46, !dbg !10307

46:                                               ; preds = %45, %30
  %47 = load i32, i32* %35, align 4, !dbg !10309
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10311
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 3, !dbg !10312
  %50 = load i32, i32* %49, align 4, !dbg !10312
  %51 = icmp ugt i32 %47, %50, !dbg !10313
  br i1 %51, label %52, label %53, !dbg !10314

52:                                               ; preds = %46
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10315
  tail call void asm sideeffect "dsb", ""() #20, !dbg !10315, !srcloc !10318
  tail call void asm sideeffect "isb", ""() #20, !dbg !10315, !srcloc !10319
  br label %53, !dbg !10320

53:                                               ; preds = %23, %28, %52, %46
  %54 = phi i32 [ 1, %28 ], [ 1, %52 ], [ 1, %46 ], [ 0, %23 ]
  tail call void @vPortExitCritical() #21, !dbg !10321
  ret i32 %54, !dbg !10322
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyFromISR(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3) local_unnamed_addr #3 !dbg !10323 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10327, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 %1, metadata !10328, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 %2, metadata !10329, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32* %3, metadata !10330, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 1, metadata !10333, metadata !DIExpression()), !dbg !10335
  %5 = icmp eq i8* %0, null, !dbg !10336
  br i1 %5, label %6, label %7, !dbg !10338

6:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 4134) #21, !dbg !10339
  br label %7, !dbg !10339

7:                                                ; preds = %6, %4
  tail call void @vPortValidateInterruptPriority() #21, !dbg !10341
  call void @llvm.dbg.value(metadata i8* %0, metadata !10331, metadata !DIExpression()), !dbg !10335
  %8 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !10342, !srcloc !8956
  call void @llvm.dbg.value(metadata i32 undef, metadata !8953, metadata !DIExpression()) #20, !dbg !10344
  call void @llvm.dbg.value(metadata i32 undef, metadata !8954, metadata !DIExpression()) #20, !dbg !10344
  call void @llvm.dbg.value(metadata i32 undef, metadata !10334, metadata !DIExpression()), !dbg !10335
  %9 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !10345
  %10 = bitcast i8* %9 to i32*, !dbg !10345
  %11 = load volatile i32, i32* %10, align 4, !dbg !10345
  call void @llvm.dbg.value(metadata i32 %11, metadata !10332, metadata !DIExpression()), !dbg !10335
  store volatile i32 2, i32* %10, align 4, !dbg !10347
  switch i32 %2, label %30 [
    i32 1, label %12
    i32 2, label %17
    i32 3, label %22
    i32 4, label %25
  ], !dbg !10348

12:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !10331, metadata !DIExpression()), !dbg !10335
  %13 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10349
  %14 = bitcast i8* %13 to i32*, !dbg !10349
  %15 = load volatile i32, i32* %14, align 4, !dbg !10351
  %16 = or i32 %15, %1, !dbg !10351
  store volatile i32 %16, i32* %14, align 4, !dbg !10351
  br label %30, !dbg !10352

17:                                               ; preds = %7
  %18 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10353
  %19 = bitcast i8* %18 to i32*, !dbg !10353
  %20 = load volatile i32, i32* %19, align 4, !dbg !10354
  %21 = add i32 %20, 1, !dbg !10354
  store volatile i32 %21, i32* %19, align 4, !dbg !10354
  br label %30, !dbg !10355

22:                                               ; preds = %7
  %23 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10356
  %24 = bitcast i8* %23 to i32*, !dbg !10356
  store volatile i32 %1, i32* %24, align 4, !dbg !10357
  br label %30, !dbg !10358

25:                                               ; preds = %7
  %26 = icmp eq i32 %11, 2, !dbg !10359
  br i1 %26, label %66, label %27, !dbg !10361

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10362
  %29 = bitcast i8* %28 to i32*, !dbg !10362
  store volatile i32 %1, i32* %29, align 4, !dbg !10364
  br label %30, !dbg !10365

30:                                               ; preds = %27, %7, %22, %17, %12
  call void @llvm.dbg.value(metadata i32 1, metadata !10333, metadata !DIExpression()), !dbg !10335
  %31 = icmp eq i32 %11, 1, !dbg !10366
  br i1 %31, label %32, label %66, !dbg !10368

32:                                               ; preds = %30
  %33 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10369
  %34 = bitcast i8* %33 to %struct.xLIST_ITEM*, !dbg !10369
  %35 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !10369
  %36 = bitcast i8* %35 to i8**, !dbg !10369
  %37 = load i8*, i8** %36, align 4, !dbg !10369
  %38 = icmp eq i8* %37, null, !dbg !10369
  br i1 %38, label %40, label %39, !dbg !10372

39:                                               ; preds = %32
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 4200) #21, !dbg !10373
  br label %40, !dbg !10373

40:                                               ; preds = %39, %32
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !10375
  %42 = icmp eq i32 %41, 0, !dbg !10377
  br i1 %42, label %43, label %54, !dbg !10378

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10379
  %45 = bitcast i8* %44 to %struct.xLIST_ITEM*, !dbg !10379
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #21, !dbg !10381
  %47 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10382
  %48 = bitcast i8* %47 to i32*, !dbg !10382
  %49 = load i32, i32* %48, align 4, !dbg !10382
  %50 = shl nuw i32 1, %49, !dbg !10382
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !10382
  %52 = or i32 %51, %50, !dbg !10382
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !10382
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !10382
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %45) #21, !dbg !10382
  br label %55, !dbg !10383

54:                                               ; preds = %40
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %34) #21, !dbg !10384
  br label %55

55:                                               ; preds = %54, %43
  %56 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10386
  %57 = bitcast i8* %56 to i32*, !dbg !10386
  %58 = load i32, i32* %57, align 4, !dbg !10386
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10388
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 3, !dbg !10389
  %61 = load i32, i32* %60, align 4, !dbg !10389
  %62 = icmp ugt i32 %58, %61, !dbg !10390
  %63 = icmp ne i32* %3, null
  %64 = and i1 %63, %62, !dbg !10391
  br i1 %64, label %65, label %66, !dbg !10391

65:                                               ; preds = %55
  store i32 1, i32* %3, align 4, !dbg !10392
  br label %66, !dbg !10396

66:                                               ; preds = %25, %65, %55, %30
  %67 = phi i32 [ 1, %65 ], [ 1, %55 ], [ 1, %30 ], [ 0, %25 ]
  %68 = extractvalue { i32, i32 } %8, 0, !dbg !10342
  call void @llvm.dbg.value(metadata i32 %68, metadata !8953, metadata !DIExpression()) #20, !dbg !10344
  call void @llvm.dbg.value(metadata i32 %68, metadata !10334, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32 undef, metadata !8961, metadata !DIExpression()) #20, !dbg !10397
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %68) #20, !dbg !10399, !srcloc !8967
  ret i32 %67, !dbg !10400
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskNotifyGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #3 !dbg !10401 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10405, metadata !DIExpression()), !dbg !10410
  call void @llvm.dbg.value(metadata i32* %1, metadata !10406, metadata !DIExpression()), !dbg !10410
  %3 = icmp eq i8* %0, null, !dbg !10411
  br i1 %3, label %4, label %5, !dbg !10413

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 4245) #21, !dbg !10414
  br label %5, !dbg !10414

5:                                                ; preds = %4, %2
  tail call void @vPortValidateInterruptPriority() #21, !dbg !10416
  call void @llvm.dbg.value(metadata i8* %0, metadata !10407, metadata !DIExpression()), !dbg !10410
  %6 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !10417, !srcloc !8956
  call void @llvm.dbg.value(metadata i32 undef, metadata !8953, metadata !DIExpression()) #20, !dbg !10419
  call void @llvm.dbg.value(metadata i32 undef, metadata !8954, metadata !DIExpression()) #20, !dbg !10419
  call void @llvm.dbg.value(metadata i32 undef, metadata !10409, metadata !DIExpression()), !dbg !10410
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !10420
  %8 = bitcast i8* %7 to i32*, !dbg !10420
  %9 = load volatile i32, i32* %8, align 4, !dbg !10420
  call void @llvm.dbg.value(metadata i32 %9, metadata !10408, metadata !DIExpression()), !dbg !10410
  store volatile i32 2, i32* %8, align 4, !dbg !10422
  %10 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10423
  %11 = bitcast i8* %10 to i32*, !dbg !10423
  %12 = load volatile i32, i32* %11, align 4, !dbg !10424
  %13 = add i32 %12, 1, !dbg !10424
  store volatile i32 %13, i32* %11, align 4, !dbg !10424
  %14 = icmp eq i32 %9, 1, !dbg !10425
  br i1 %14, label %15, label %49, !dbg !10427

15:                                               ; preds = %5
  %16 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10428
  %17 = bitcast i8* %16 to %struct.xLIST_ITEM*, !dbg !10428
  %18 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !10428
  %19 = bitcast i8* %18 to i8**, !dbg !10428
  %20 = load i8*, i8** %19, align 4, !dbg !10428
  %21 = icmp eq i8* %20, null, !dbg !10428
  br i1 %21, label %23, label %22, !dbg !10431

22:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.136, i32 0, i32 0), i32 noundef 4281) #21, !dbg !10432
  br label %23, !dbg !10432

23:                                               ; preds = %22, %15
  %24 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !10434
  %25 = icmp eq i32 %24, 0, !dbg !10436
  br i1 %25, label %26, label %37, !dbg !10437

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10438
  %28 = bitcast i8* %27 to %struct.xLIST_ITEM*, !dbg !10438
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #21, !dbg !10440
  %30 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10441
  %31 = bitcast i8* %30 to i32*, !dbg !10441
  %32 = load i32, i32* %31, align 4, !dbg !10441
  %33 = shl nuw i32 1, %32, !dbg !10441
  %34 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !10441
  %35 = or i32 %34, %33, !dbg !10441
  store volatile i32 %35, i32* @uxTopReadyPriority, align 4, !dbg !10441
  %36 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !10441
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %36, %struct.xLIST_ITEM* noundef nonnull %28) #21, !dbg !10441
  br label %38, !dbg !10442

37:                                               ; preds = %23
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %17) #21, !dbg !10443
  br label %38

38:                                               ; preds = %37, %26
  %39 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10445
  %40 = bitcast i8* %39 to i32*, !dbg !10445
  %41 = load i32, i32* %40, align 4, !dbg !10445
  %42 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10447
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %42, i32 0, i32 3, !dbg !10448
  %44 = load i32, i32* %43, align 4, !dbg !10448
  %45 = icmp ugt i32 %41, %44, !dbg !10449
  %46 = icmp ne i32* %1, null
  %47 = and i1 %46, %45, !dbg !10450
  br i1 %47, label %48, label %49, !dbg !10450

48:                                               ; preds = %38
  store i32 1, i32* %1, align 4, !dbg !10451
  br label %49, !dbg !10455

49:                                               ; preds = %48, %38, %5
  %50 = extractvalue { i32, i32 } %6, 0, !dbg !10417
  call void @llvm.dbg.value(metadata i32 %50, metadata !8953, metadata !DIExpression()) #20, !dbg !10419
  call void @llvm.dbg.value(metadata i32 %50, metadata !10409, metadata !DIExpression()), !dbg !10410
  call void @llvm.dbg.value(metadata i32 undef, metadata !8961, metadata !DIExpression()) #20, !dbg !10456
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %50) #20, !dbg !10458, !srcloc !8967
  ret void, !dbg !10459
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetBottomOfStack(i8* noundef readonly %0) local_unnamed_addr #9 !dbg !10460 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10462, metadata !DIExpression()), !dbg !10464
  %2 = icmp eq i8* %0, null, !dbg !10465
  br i1 %2, label %3, label %5, !dbg !10466

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !10467
  br label %7, !dbg !10466

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !10468
  br label %7, !dbg !10466

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !10466
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !10463, metadata !DIExpression()), !dbg !10464
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !10469
  %10 = load i32*, i32** %9, align 4, !dbg !10469
  %11 = ptrtoint i32* %10 to i32, !dbg !10470
  ret i32 %11, !dbg !10471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialise(%struct.xLIST* noundef %0) local_unnamed_addr #5 !dbg !10472 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !10477, metadata !DIExpression()), !dbg !10478
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !10479
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !10480
  %4 = bitcast %struct.xLIST_ITEM** %3 to %struct.xMINI_LIST_ITEM**, !dbg !10481
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %4, align 4, !dbg !10481
  %5 = getelementptr inbounds %struct.xMINI_LIST_ITEM, %struct.xMINI_LIST_ITEM* %2, i32 0, i32 0, !dbg !10482
  store i32 -1, i32* %5, align 4, !dbg !10483
  %6 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !10484
  %7 = bitcast %struct.xLIST_ITEM** %6 to %struct.xMINI_LIST_ITEM**, !dbg !10485
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %7, align 4, !dbg !10485
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !10486
  %9 = bitcast %struct.xLIST_ITEM** %8 to %struct.xMINI_LIST_ITEM**, !dbg !10487
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %9, align 4, !dbg !10487
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !10488
  store i32 0, i32* %10, align 4, !dbg !10489
  ret void, !dbg !10490
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialiseItem(%struct.xLIST_ITEM* nocapture noundef writeonly %0) local_unnamed_addr #5 !dbg !10491 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !10496, metadata !DIExpression()), !dbg !10497
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !10498
  store i8* null, i8** %2, align 4, !dbg !10499
  ret void, !dbg !10500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #15 !dbg !10501 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !10505, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !10506, metadata !DIExpression()), !dbg !10508
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !10509
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %3, align 4, !dbg !10509
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %4, metadata !10507, metadata !DIExpression()), !dbg !10508
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !10510
  store %struct.xLIST_ITEM* %4, %struct.xLIST_ITEM** %5, align 4, !dbg !10511
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %4, i32 0, i32 2, !dbg !10512
  %7 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !10512
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !10513
  store %struct.xLIST_ITEM* %7, %struct.xLIST_ITEM** %8, align 4, !dbg !10514
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !10515
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !10516
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %10, align 4, !dbg !10517
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %6, align 4, !dbg !10518
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !10519
  %12 = bitcast i8** %11 to %struct.xLIST**, !dbg !10520
  store %struct.xLIST* %0, %struct.xLIST** %12, align 4, !dbg !10520
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !10521
  %14 = load i32, i32* %13, align 4, !dbg !10522
  %15 = add i32 %14, 1, !dbg !10522
  store i32 %15, i32* %13, align 4, !dbg !10522
  ret void, !dbg !10523
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #16 !dbg !10524 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !10526, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !10527, metadata !DIExpression()), !dbg !10530
  %3 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 0, !dbg !10531
  %4 = load i32, i32* %3, align 4, !dbg !10531
  call void @llvm.dbg.value(metadata i32 %4, metadata !10529, metadata !DIExpression()), !dbg !10530
  %5 = icmp eq i32 %4, -1, !dbg !10532
  br i1 %5, label %6, label %11, !dbg !10534

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !10535
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !10535
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %8, metadata !10528, metadata !DIExpression()), !dbg !10530
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 1
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %9, align 4, !dbg !10537
  br label %21, !dbg !10538

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !10539
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !10542
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %13, metadata !10528, metadata !DIExpression()), !dbg !10530
  br label %14, !dbg !10543

14:                                               ; preds = %14, %11
  %15 = phi %struct.xLIST_ITEM* [ %13, %11 ], [ %17, %14 ], !dbg !10544
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %15, metadata !10528, metadata !DIExpression()), !dbg !10530
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %15, i32 0, i32 1, !dbg !10545
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !10545
  %18 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %17, i32 0, i32 0, !dbg !10547
  %19 = load i32, i32* %18, align 4, !dbg !10547
  %20 = icmp ugt i32 %19, %4, !dbg !10548
  br i1 %20, label %21, label %14, !dbg !10549, !llvm.loop !10550

21:                                               ; preds = %14, %6
  %22 = phi %struct.xLIST_ITEM* [ %10, %6 ], [ %17, %14 ], !dbg !10537
  %23 = phi %struct.xLIST_ITEM* [ %8, %6 ], [ %15, %14 ], !dbg !10552
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %23, metadata !10528, metadata !DIExpression()), !dbg !10530
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %23, i32 0, i32 1, !dbg !10537
  %25 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !10553
  store %struct.xLIST_ITEM* %22, %struct.xLIST_ITEM** %25, align 4, !dbg !10554
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 2, !dbg !10555
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %26, align 4, !dbg !10556
  %27 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !10557
  store %struct.xLIST_ITEM* %23, %struct.xLIST_ITEM** %27, align 4, !dbg !10558
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %24, align 4, !dbg !10559
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !10560
  %29 = bitcast i8** %28 to %struct.xLIST**, !dbg !10561
  store %struct.xLIST* %0, %struct.xLIST** %29, align 4, !dbg !10561
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !10562
  %31 = load i32, i32* %30, align 4, !dbg !10563
  %32 = add i32 %31, 1, !dbg !10563
  store i32 %32, i32* %30, align 4, !dbg !10563
  ret void, !dbg !10564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @uxListRemove(%struct.xLIST_ITEM* noundef %0) local_unnamed_addr #15 !dbg !10565 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !10569, metadata !DIExpression()), !dbg !10571
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !10572
  %3 = bitcast i8** %2 to %struct.xLIST**, !dbg !10572
  %4 = load %struct.xLIST*, %struct.xLIST** %3, align 4, !dbg !10572
  call void @llvm.dbg.value(metadata %struct.xLIST* %4, metadata !10570, metadata !DIExpression()), !dbg !10571
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 2, !dbg !10573
  %6 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !10573
  %7 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 1, !dbg !10574
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !10574
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 2, !dbg !10575
  store %struct.xLIST_ITEM* %6, %struct.xLIST_ITEM** %9, align 4, !dbg !10576
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !10577
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !10578
  %12 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !10579
  store %struct.xLIST_ITEM* %10, %struct.xLIST_ITEM** %12, align 4, !dbg !10580
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 1, !dbg !10581
  %14 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %13, align 4, !dbg !10581
  %15 = icmp eq %struct.xLIST_ITEM* %14, %0, !dbg !10583
  br i1 %15, label %16, label %18, !dbg !10584

16:                                               ; preds = %1
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !10585
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %13, align 4, !dbg !10587
  br label %18, !dbg !10588

18:                                               ; preds = %1, %16
  store i8* null, i8** %2, align 4, !dbg !10589
  %19 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 0, !dbg !10590
  %20 = load i32, i32* %19, align 4, !dbg !10591
  %21 = add i32 %20, -1, !dbg !10591
  store i32 %21, i32* %19, align 4, !dbg !10591
  ret i32 %21, !dbg !10592
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReset(i8* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !10593 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10597, metadata !DIExpression()), !dbg !10601
  call void @llvm.dbg.value(metadata i32 %1, metadata !10598, metadata !DIExpression()), !dbg !10601
  call void @llvm.dbg.value(metadata i8* %0, metadata !10599, metadata !DIExpression()), !dbg !10601
  %3 = icmp eq i8* %0, null, !dbg !10602
  br i1 %3, label %4, label %5, !dbg !10604

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 264) #21, !dbg !10605
  br label %5, !dbg !10605

5:                                                ; preds = %4, %2
  tail call void @vPortEnterCritical() #21, !dbg !10607
  %6 = bitcast i8* %0 to i8**, !dbg !10608
  %7 = load i8*, i8** %6, align 4, !dbg !10608
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10610
  %9 = bitcast i8* %8 to i32*, !dbg !10610
  %10 = load i32, i32* %9, align 4, !dbg !10610
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10611
  %12 = bitcast i8* %11 to i32*, !dbg !10611
  %13 = load i32, i32* %12, align 4, !dbg !10611
  %14 = mul i32 %13, %10, !dbg !10612
  %15 = getelementptr inbounds i8, i8* %7, i32 %14, !dbg !10613
  %16 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10614
  %17 = bitcast i8* %16 to i8**, !dbg !10614
  store i8* %15, i8** %17, align 4, !dbg !10615
  %18 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10616
  %19 = bitcast i8* %18 to i32*, !dbg !10616
  store volatile i32 0, i32* %19, align 4, !dbg !10617
  %20 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !10618
  %21 = bitcast i8* %20 to i8**, !dbg !10618
  store i8* %7, i8** %21, align 4, !dbg !10619
  %22 = add i32 %10, -1, !dbg !10620
  %23 = mul i32 %22, %13, !dbg !10621
  %24 = getelementptr inbounds i8, i8* %7, i32 %23, !dbg !10622
  %25 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !10623
  %26 = bitcast i8* %25 to i8**, !dbg !10624
  store i8* %24, i8** %26, align 4, !dbg !10625
  %27 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !10626
  %28 = bitcast i8* %27 to i32*, !dbg !10626
  store volatile i32 -1, i32* %28, align 4, !dbg !10627
  %29 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !10628
  %30 = bitcast i8* %29 to i32*, !dbg !10628
  store volatile i32 -1, i32* %30, align 4, !dbg !10629
  %31 = icmp eq i32 %1, 0, !dbg !10630
  %32 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !10632
  br i1 %31, label %33, label %42, !dbg !10633

33:                                               ; preds = %5
  %34 = bitcast i8* %32 to i32*, !dbg !10634
  %35 = load i32, i32* %34, align 4, !dbg !10634
  %36 = icmp eq i32 %35, 0, !dbg !10634
  br i1 %36, label %46, label %37, !dbg !10637

37:                                               ; preds = %33
  %38 = bitcast i8* %32 to %struct.xLIST*, !dbg !10634
  %39 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %38) #21, !dbg !10638
  %40 = icmp eq i32 %39, 1, !dbg !10641
  br i1 %40, label %41, label %46, !dbg !10642

41:                                               ; preds = %37
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10643
  tail call void asm sideeffect "dsb", ""() #20, !dbg !10643, !srcloc !10646
  tail call void asm sideeffect "isb", ""() #20, !dbg !10643, !srcloc !10647
  br label %46, !dbg !10648

42:                                               ; preds = %5
  %43 = bitcast i8* %32 to %struct.xLIST*, !dbg !10649
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %43) #21, !dbg !10651
  %44 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10652
  %45 = bitcast i8* %44 to %struct.xLIST*, !dbg !10652
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %45) #21, !dbg !10653
  br label %46

46:                                               ; preds = %37, %41, %33, %42
  tail call void @vPortExitCritical() #21, !dbg !10654
  ret i32 1, !dbg !10655
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #3 !dbg !10656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10660, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.value(metadata i32 %1, metadata !10661, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.value(metadata i8 %2, metadata !10662, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.value(metadata i8* null, metadata !10665, metadata !DIExpression()), !dbg !10667
  %4 = icmp eq i32 %0, 0, !dbg !10668
  br i1 %4, label %5, label %6, !dbg !10670

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 324) #21, !dbg !10671
  br label %6, !dbg !10671

6:                                                ; preds = %5, %3
  %7 = icmp eq i32 %1, 0, !dbg !10673
  %8 = mul i32 %1, %0, !dbg !10675
  %9 = add i32 %8, 85, !dbg !10675
  %10 = select i1 %7, i32 84, i32 %9, !dbg !10675
  call void @llvm.dbg.value(metadata i32 undef, metadata !10664, metadata !DIExpression()), !dbg !10667
  %11 = tail call i8* @pvPortMalloc(i32 noundef %10) #21, !dbg !10676
  call void @llvm.dbg.value(metadata i8* %11, metadata !10666, metadata !DIExpression()), !dbg !10667
  %12 = icmp eq i8* %11, null, !dbg !10677
  br i1 %12, label %23, label %13, !dbg !10679

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !10663, metadata !DIExpression()), !dbg !10667
  %14 = select i1 %7, i32 0, i32 84, !dbg !10680
  %15 = getelementptr i8, i8* %11, i32 %14, !dbg !10680
  %16 = bitcast i8* %11 to i8**, !dbg !10682
  store i8* %15, i8** %16, align 4, !dbg !10682
  %17 = getelementptr inbounds i8, i8* %11, i32 60, !dbg !10684
  %18 = bitcast i8* %17 to i32*, !dbg !10684
  store i32 %0, i32* %18, align 4, !dbg !10685
  %19 = getelementptr inbounds i8, i8* %11, i32 64, !dbg !10686
  %20 = bitcast i8* %19 to i32*, !dbg !10686
  store i32 %1, i32* %20, align 4, !dbg !10687
  %21 = tail call i32 @xQueueGenericReset(i8* noundef nonnull %11, i32 noundef 1) #19, !dbg !10688
  %22 = getelementptr inbounds i8, i8* %11, i32 80, !dbg !10689
  store i8 %2, i8* %22, align 4, !dbg !10691
  call void @llvm.dbg.value(metadata i8* %11, metadata !10665, metadata !DIExpression()), !dbg !10667
  br label %24, !dbg !10692

23:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !10665, metadata !DIExpression()), !dbg !10667
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 386) #21, !dbg !10693
  br label %24, !dbg !10693

24:                                               ; preds = %13, %23
  ret i8* %11, !dbg !10696
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateMutex(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !10697 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !10701, metadata !DIExpression()), !dbg !10703
  %2 = tail call i8* @pvPortMalloc(i32 noundef 84) #21, !dbg !10704
  call void @llvm.dbg.value(metadata i8* %2, metadata !10702, metadata !DIExpression()), !dbg !10703
  %3 = icmp eq i8* %2, null, !dbg !10705
  br i1 %3, label %28, label %4, !dbg !10705

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !10702, metadata !DIExpression()), !dbg !10703
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !10706
  %6 = bitcast i8* %5 to i8**, !dbg !10706
  store i8* null, i8** %6, align 4, !dbg !10709
  %7 = bitcast i8* %2 to i8**, !dbg !10710
  store i8* null, i8** %7, align 4, !dbg !10711
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !10712
  %9 = bitcast i8* %8 to i8**, !dbg !10712
  store i8* null, i8** %9, align 4, !dbg !10713
  %10 = getelementptr inbounds i8, i8* %2, i32 12, !dbg !10714
  %11 = bitcast i8* %10 to i8**, !dbg !10715
  store i8* null, i8** %11, align 4, !dbg !10716
  %12 = getelementptr inbounds i8, i8* %2, i32 56, !dbg !10717
  %13 = bitcast i8* %12 to i32*, !dbg !10717
  store volatile i32 0, i32* %13, align 4, !dbg !10718
  %14 = getelementptr inbounds i8, i8* %2, i32 60, !dbg !10719
  %15 = bitcast i8* %14 to i32*, !dbg !10719
  store i32 1, i32* %15, align 4, !dbg !10720
  %16 = getelementptr inbounds i8, i8* %2, i32 64, !dbg !10721
  %17 = bitcast i8* %16 to i32*, !dbg !10721
  store i32 0, i32* %17, align 4, !dbg !10722
  %18 = getelementptr inbounds i8, i8* %2, i32 68, !dbg !10723
  %19 = bitcast i8* %18 to i32*, !dbg !10723
  store volatile i32 -1, i32* %19, align 4, !dbg !10724
  %20 = getelementptr inbounds i8, i8* %2, i32 72, !dbg !10725
  %21 = bitcast i8* %20 to i32*, !dbg !10725
  store volatile i32 -1, i32* %21, align 4, !dbg !10726
  %22 = getelementptr inbounds i8, i8* %2, i32 80, !dbg !10727
  store i8 %0, i8* %22, align 4, !dbg !10729
  %23 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !10730
  %24 = bitcast i8* %23 to %struct.xLIST*, !dbg !10730
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %24) #21, !dbg !10731
  %25 = getelementptr inbounds i8, i8* %2, i32 36, !dbg !10732
  %26 = bitcast i8* %25 to %struct.xLIST*, !dbg !10732
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %26) #21, !dbg !10733
  %27 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %2, i8* noundef null, i32 noundef 0, i32 noundef 0) #19, !dbg !10734
  br label %29, !dbg !10735

28:                                               ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 450) #21, !dbg !10736
  br label %29, !dbg !10736

29:                                               ; preds = %4, %28
  ret i8* %2, !dbg !10739
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSend(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !10740 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.DMA_SWCOPYMENU, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10746, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i8* %1, metadata !10747, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i32 %2, metadata !10748, metadata !DIExpression()), !dbg !10759
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !10749, metadata !DIExpression()), !dbg !10759
  call void @llvm.dbg.value(metadata i32 0, metadata !10750, metadata !DIExpression()), !dbg !10759
  %7 = bitcast %struct.DMA_SWCOPYMENU* %6 to i8*, !dbg !10760
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #20, !dbg !10760
  call void @llvm.dbg.declare(metadata %struct.DMA_SWCOPYMENU* %6, metadata !10752, metadata !DIExpression()), !dbg !10761
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10762
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !10758, metadata !DIExpression()), !dbg !10759
  %9 = icmp eq i8* %0, null, !dbg !10763
  br i1 %9, label %10, label %11, !dbg !10765

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 619) #21, !dbg !10766
  br label %11, !dbg !10766

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !10768
  br i1 %12, label %13, label %19, !dbg !10768

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10768
  %15 = bitcast i8* %14 to i32*, !dbg !10768
  %16 = load i32, i32* %15, align 4, !dbg !10768
  %17 = icmp eq i32 %16, 0, !dbg !10768
  br i1 %17, label %19, label %18, !dbg !10770

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 620) #21, !dbg !10771
  br label %19, !dbg !10771

19:                                               ; preds = %11, %18, %13
  %20 = icmp eq i32 %3, 2, !dbg !10773
  br i1 %20, label %21, label %27, !dbg !10773

21:                                               ; preds = %19
  %22 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10773
  %23 = bitcast i8* %22 to i32*, !dbg !10773
  %24 = load i32, i32* %23, align 4, !dbg !10773
  %25 = icmp eq i32 %24, 1, !dbg !10773
  br i1 %25, label %27, label %26, !dbg !10775

26:                                               ; preds = %21
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 621) #21, !dbg !10776
  br label %27, !dbg !10776

27:                                               ; preds = %19, %26, %21
  %28 = tail call i32 @xTaskGetSchedulerState() #21, !dbg !10778
  %29 = icmp eq i32 %28, 0, !dbg !10778
  call void @llvm.dbg.value(metadata i32 %2, metadata !10748, metadata !DIExpression()), !dbg !10759
  %30 = icmp ne i32 %2, 0, !dbg !10778
  %31 = and i1 %29, %30, !dbg !10778
  br i1 %31, label %32, label %33, !dbg !10781

32:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 624) #21, !dbg !10782
  br label %33, !dbg !10782

33:                                               ; preds = %32, %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !10750, metadata !DIExpression()), !dbg !10759
  call void @vPortEnterCritical() #21, !dbg !10784
  %34 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10788
  %35 = bitcast i8* %34 to i32*, !dbg !10788
  %36 = load volatile i32, i32* %35, align 4, !dbg !10788
  %37 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10791
  %38 = bitcast i8* %37 to i32*, !dbg !10791
  %39 = load i32, i32* %38, align 4, !dbg !10791
  %40 = icmp ult i32 %36, %39, !dbg !10792
  %41 = or i1 %20, %40, !dbg !10793
  br i1 %41, label %50, label %42, !dbg !10793

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %0, i32 68
  %44 = bitcast i8* %43 to i32*
  %45 = getelementptr inbounds i8, i8* %0, i32 72
  %46 = bitcast i8* %45 to i32*
  %47 = getelementptr inbounds i8, i8* %0, i32 16
  %48 = bitcast i8* %47 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !10748, metadata !DIExpression()), !dbg !10759
  %49 = icmp eq i32 %2, 0, !dbg !10794
  br i1 %49, label %65, label %66, !dbg !10797

50:                                               ; preds = %90, %33
  %51 = call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1, i32 noundef %3) #19, !dbg !10798
  call void @llvm.dbg.value(metadata i32 %51, metadata !10751, metadata !DIExpression()), !dbg !10759
  %52 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10800
  %53 = bitcast i8* %52 to i32*, !dbg !10800
  %54 = load i32, i32* %53, align 4, !dbg !10800
  %55 = icmp eq i32 %54, 0, !dbg !10800
  br i1 %55, label %61, label %56, !dbg !10803

56:                                               ; preds = %50
  %57 = bitcast i8* %52 to %struct.xLIST*, !dbg !10800
  %58 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %57) #21, !dbg !10804
  %59 = icmp eq i32 %58, 1, !dbg !10807
  br i1 %59, label %60, label %64, !dbg !10808

60:                                               ; preds = %56
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10809
  call void asm sideeffect "dsb", ""() #20, !dbg !10809, !srcloc !10812
  call void asm sideeffect "isb", ""() #20, !dbg !10809, !srcloc !10813
  br label %64, !dbg !10814

61:                                               ; preds = %50
  %62 = icmp eq i32 %51, 0, !dbg !10815
  br i1 %62, label %64, label %63, !dbg !10817

63:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10818
  call void asm sideeffect "dsb", ""() #20, !dbg !10818, !srcloc !10821
  call void asm sideeffect "isb", ""() #20, !dbg !10818, !srcloc !10822
  br label %64, !dbg !10823

64:                                               ; preds = %63, %61, %60, %56
  call void @vPortExitCritical() #21, !dbg !10824
  br label %97, !dbg !10825

65:                                               ; preds = %94, %42
  call void @vPortExitCritical() #21, !dbg !10826
  br label %97, !dbg !10828

66:                                               ; preds = %42
  call void @vTaskSetTimeOutState(%struct.DMA_SWCOPYMENU* noundef nonnull %6) #21, !dbg !10829
  call void @llvm.dbg.value(metadata i32 1, metadata !10750, metadata !DIExpression()), !dbg !10759
  br label %67, !dbg !10832

67:                                               ; preds = %94, %66
  call void @llvm.dbg.value(metadata i32 1, metadata !10750, metadata !DIExpression()), !dbg !10759
  call void @vPortExitCritical() #21, !dbg !10833
  call void @vTaskSuspendAll() #21, !dbg !10834
  call void @vPortEnterCritical() #21, !dbg !10835
  %68 = load volatile i32, i32* %44, align 4, !dbg !10836
  %69 = icmp eq i32 %68, -1, !dbg !10836
  br i1 %69, label %70, label %71, !dbg !10839

70:                                               ; preds = %67
  store volatile i32 0, i32* %44, align 4, !dbg !10840
  br label %71, !dbg !10840

71:                                               ; preds = %70, %67
  %72 = load volatile i32, i32* %46, align 4, !dbg !10842
  %73 = icmp eq i32 %72, -1, !dbg !10842
  br i1 %73, label %74, label %75, !dbg !10839

74:                                               ; preds = %71
  store volatile i32 0, i32* %46, align 4, !dbg !10844
  br label %75, !dbg !10844

75:                                               ; preds = %74, %71
  call void @vPortExitCritical() #21, !dbg !10835
  call void @llvm.dbg.value(metadata i32* %5, metadata !10748, metadata !DIExpression(DW_OP_deref)), !dbg !10759
  %76 = call i32 @xTaskCheckForTimeOut(%struct.DMA_SWCOPYMENU* noundef nonnull %6, i32* noundef nonnull %5) #21, !dbg !10846
  %77 = icmp eq i32 %76, 0, !dbg !10848
  br i1 %77, label %78, label %88, !dbg !10849

78:                                               ; preds = %75
  %79 = call fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef nonnull %8) #19, !dbg !10850
  %80 = icmp eq i32 %79, 0, !dbg !10853
  br i1 %80, label %86, label %81, !dbg !10854

81:                                               ; preds = %78
  %82 = load i32, i32* %5, align 4, !dbg !10855
  call void @llvm.dbg.value(metadata i32 %82, metadata !10748, metadata !DIExpression()), !dbg !10759
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %48, i32 noundef %82) #21, !dbg !10857
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #19, !dbg !10858
  %83 = call i32 @xTaskResumeAll() #21, !dbg !10859
  %84 = icmp eq i32 %83, 0, !dbg !10861
  br i1 %84, label %85, label %90, !dbg !10862

85:                                               ; preds = %81
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10863
  call void asm sideeffect "dsb", ""() #20, !dbg !10863, !srcloc !10866
  call void asm sideeffect "isb", ""() #20, !dbg !10863, !srcloc !10867
  br label %90, !dbg !10868

86:                                               ; preds = %78
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #19, !dbg !10869
  %87 = call i32 @xTaskResumeAll() #21, !dbg !10871
  br label %90

88:                                               ; preds = %75
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #19, !dbg !10872
  %89 = call i32 @xTaskResumeAll() #21, !dbg !10874
  br label %97, !dbg !10875

90:                                               ; preds = %86, %85, %81
  call void @llvm.dbg.value(metadata i32 undef, metadata !10750, metadata !DIExpression()), !dbg !10759
  call void @vPortEnterCritical() #21, !dbg !10784
  %91 = load volatile i32, i32* %35, align 4, !dbg !10788
  %92 = load i32, i32* %38, align 4, !dbg !10791
  %93 = icmp ult i32 %91, %92, !dbg !10792
  br i1 %93, label %50, label %94, !dbg !10793, !llvm.loop !10876

94:                                               ; preds = %90
  %95 = load i32, i32* %5, align 4, !dbg !10879
  call void @llvm.dbg.value(metadata i32 %95, metadata !10748, metadata !DIExpression()), !dbg !10759
  %96 = icmp eq i32 %95, 0, !dbg !10794
  br i1 %96, label %65, label %67, !dbg !10797

97:                                               ; preds = %88, %65, %64
  %98 = phi i32 [ 1, %64 ], [ 0, %65 ], [ 0, %88 ], !dbg !10880
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #20, !dbg !10881
  ret i32 %98, !dbg !10881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !10882 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !10886, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.value(metadata i8* %1, metadata !10887, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.value(metadata i32 %2, metadata !10888, metadata !DIExpression()), !dbg !10890
  call void @llvm.dbg.value(metadata i32 0, metadata !10889, metadata !DIExpression()), !dbg !10890
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !10891
  %5 = load i32, i32* %4, align 4, !dbg !10891
  %6 = icmp eq i32 %5, 0, !dbg !10893
  br i1 %6, label %7, label %15, !dbg !10894

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !10895
  %9 = load i8*, i8** %8, align 4, !dbg !10895
  %10 = icmp eq i8* %9, null, !dbg !10899
  br i1 %10, label %11, label %54, !dbg !10900

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !10901
  %13 = load i8*, i8** %12, align 4, !dbg !10901
  %14 = tail call i32 @xTaskPriorityDisinherit(i8* noundef %13) #21, !dbg !10903
  call void @llvm.dbg.value(metadata i32 %14, metadata !10889, metadata !DIExpression()), !dbg !10890
  store i8* null, i8** %12, align 4, !dbg !10904
  br label %54, !dbg !10905

15:                                               ; preds = %3
  %16 = icmp eq i32 %2, 0, !dbg !10906
  br i1 %16, label %17, label %30, !dbg !10908

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !10909
  %19 = load i8*, i8** %18, align 4, !dbg !10909
  %20 = tail call i8* @memcpy(i8* noundef %19, i8* noundef %1, i32 noundef %5) #21, !dbg !10911
  %21 = load i32, i32* %4, align 4, !dbg !10912
  %22 = load i8*, i8** %18, align 4, !dbg !10913
  %23 = getelementptr inbounds i8, i8* %22, i32 %21, !dbg !10913
  store i8* %23, i8** %18, align 4, !dbg !10913
  %24 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !10914
  %25 = load i8*, i8** %24, align 4, !dbg !10914
  %26 = icmp ult i8* %23, %25, !dbg !10916
  br i1 %26, label %54, label %27, !dbg !10917

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !10918
  %29 = load i8*, i8** %28, align 4, !dbg !10918
  store i8* %29, i8** %18, align 4, !dbg !10920
  br label %54, !dbg !10921

30:                                               ; preds = %15
  %31 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !10922
  %32 = load i8*, i8** %31, align 4, !dbg !10922
  %33 = tail call i8* @memcpy(i8* noundef %32, i8* noundef %1, i32 noundef %5) #21, !dbg !10924
  %34 = load i32, i32* %4, align 4, !dbg !10925
  %35 = load i8*, i8** %31, align 4, !dbg !10926
  %36 = sub i32 0, %34, !dbg !10926
  %37 = getelementptr inbounds i8, i8* %35, i32 %36, !dbg !10926
  store i8* %37, i8** %31, align 4, !dbg !10926
  %38 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !10927
  %39 = load i8*, i8** %38, align 4, !dbg !10927
  %40 = icmp ult i8* %37, %39, !dbg !10929
  br i1 %40, label %41, label %45, !dbg !10930

41:                                               ; preds = %30
  %42 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !10931
  %43 = load i8*, i8** %42, align 4, !dbg !10931
  %44 = getelementptr inbounds i8, i8* %43, i32 %36, !dbg !10933
  store i8* %44, i8** %31, align 4, !dbg !10934
  br label %45, !dbg !10935

45:                                               ; preds = %30, %41
  %46 = icmp eq i32 %2, 2, !dbg !10936
  br i1 %46, label %47, label %54, !dbg !10938

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !10939
  %49 = load volatile i32, i32* %48, align 4, !dbg !10939
  %50 = icmp eq i32 %49, 0, !dbg !10942
  br i1 %50, label %54, label %51, !dbg !10943

51:                                               ; preds = %47
  %52 = load volatile i32, i32* %48, align 4, !dbg !10944
  %53 = add i32 %52, -1, !dbg !10944
  store volatile i32 %53, i32* %48, align 4, !dbg !10944
  br label %54, !dbg !10946

54:                                               ; preds = %17, %27, %45, %51, %47, %11, %7
  %55 = phi i32 [ %14, %11 ], [ 0, %7 ], [ 0, %27 ], [ 0, %17 ], [ 0, %51 ], [ 0, %47 ], [ 0, %45 ], !dbg !10890
  call void @llvm.dbg.value(metadata i32 %55, metadata !10889, metadata !DIExpression()), !dbg !10890
  %56 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !10947
  %57 = load volatile i32, i32* %56, align 4, !dbg !10948
  %58 = add i32 %57, 1, !dbg !10948
  store volatile i32 %58, i32* %56, align 4, !dbg !10948
  ret i32 %55, !dbg !10949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef %0) unnamed_addr #3 !dbg !10950 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !10956, metadata !DIExpression()), !dbg !10958
  tail call void @vPortEnterCritical() #21, !dbg !10959
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !10960
  %3 = load volatile i32, i32* %2, align 4, !dbg !10960
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !10963
  %5 = load i32, i32* %4, align 4, !dbg !10963
  %6 = icmp eq i32 %3, %5, !dbg !10964
  %7 = zext i1 %6 to i32
  call void @llvm.dbg.value(metadata i32 %7, metadata !10957, metadata !DIExpression()), !dbg !10958
  tail call void @vPortExitCritical() #21, !dbg !10965
  ret i32 %7, !dbg !10966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %0) unnamed_addr #3 !dbg !10967 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !10971, metadata !DIExpression()), !dbg !10972
  tail call void @vPortEnterCritical() #21, !dbg !10973
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !10974
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !10974
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 10
  %5 = load volatile i32, i32* %4, align 4, !dbg !10979
  %6 = icmp sgt i32 %5, 0, !dbg !10980
  br i1 %6, label %7, label %19, !dbg !10981

7:                                                ; preds = %1, %14
  %8 = load i32, i32* %3, align 4, !dbg !10974
  %9 = icmp eq i32 %8, 0, !dbg !10974
  br i1 %9, label %19, label %10, !dbg !10982

10:                                               ; preds = %7
  %11 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %2) #21, !dbg !10983
  %12 = icmp eq i32 %11, 0, !dbg !10986
  br i1 %12, label %14, label %13, !dbg !10987

13:                                               ; preds = %10
  tail call void @vTaskMissedYield() #21, !dbg !10988
  br label %14, !dbg !10990

14:                                               ; preds = %13, %10
  %15 = load volatile i32, i32* %4, align 4, !dbg !10991
  %16 = add nsw i32 %15, -1, !dbg !10991
  store volatile i32 %16, i32* %4, align 4, !dbg !10991
  %17 = load volatile i32, i32* %4, align 4, !dbg !10979
  %18 = icmp sgt i32 %17, 0, !dbg !10980
  br i1 %18, label %7, label %19, !dbg !10981, !llvm.loop !10992

19:                                               ; preds = %14, %7, %1
  store volatile i32 -1, i32* %4, align 4, !dbg !10994
  tail call void @vPortExitCritical() #21, !dbg !10995
  tail call void @vPortEnterCritical() #21, !dbg !10996
  %20 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !10997
  %21 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %20, i32 0, i32 0, !dbg !10997
  %22 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9
  %23 = load volatile i32, i32* %22, align 4, !dbg !11001
  %24 = icmp sgt i32 %23, 0, !dbg !11002
  br i1 %24, label %25, label %37, !dbg !11003

25:                                               ; preds = %19, %32
  %26 = load i32, i32* %21, align 4, !dbg !10997
  %27 = icmp eq i32 %26, 0, !dbg !10997
  br i1 %27, label %37, label %28, !dbg !11004

28:                                               ; preds = %25
  %29 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %20) #21, !dbg !11005
  %30 = icmp eq i32 %29, 0, !dbg !11008
  br i1 %30, label %32, label %31, !dbg !11009

31:                                               ; preds = %28
  tail call void @vTaskMissedYield() #21, !dbg !11010
  br label %32, !dbg !11012

32:                                               ; preds = %28, %31
  %33 = load volatile i32, i32* %22, align 4, !dbg !11013
  %34 = add nsw i32 %33, -1, !dbg !11013
  store volatile i32 %34, i32* %22, align 4, !dbg !11013
  %35 = load volatile i32, i32* %22, align 4, !dbg !11001
  %36 = icmp sgt i32 %35, 0, !dbg !11002
  br i1 %36, label %25, label %37, !dbg !11003, !llvm.loop !11014

37:                                               ; preds = %32, %25, %19
  store volatile i32 -1, i32* %22, align 4, !dbg !11016
  tail call void @vPortExitCritical() #21, !dbg !11017
  ret void, !dbg !11018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveMutexRecursive(i8* noundef %0) local_unnamed_addr #3 !dbg !11019 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11023, metadata !DIExpression()), !dbg !11026
  call void @llvm.dbg.value(metadata i8* %0, metadata !11025, metadata !DIExpression()), !dbg !11026
  %2 = icmp eq i8* %0, null, !dbg !11027
  br i1 %2, label %3, label %4, !dbg !11029

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 494) #21, !dbg !11030
  br label %4, !dbg !11030

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !11032
  %6 = bitcast i8* %5 to i8**, !dbg !11032
  %7 = load i8*, i8** %6, align 4, !dbg !11032
  %8 = tail call i8* @xTaskGetCurrentTaskHandle() #21, !dbg !11034
  %9 = icmp eq i8* %7, %8, !dbg !11035
  br i1 %9, label %10, label %18, !dbg !11036

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !11037
  %12 = bitcast i8* %11 to i32*, !dbg !11039
  %13 = load i32, i32* %12, align 4, !dbg !11040
  %14 = add i32 %13, -1, !dbg !11040
  store i32 %14, i32* %12, align 4, !dbg !11040
  %15 = icmp eq i32 %14, 0, !dbg !11041
  br i1 %15, label %16, label %18, !dbg !11043

16:                                               ; preds = %10
  %17 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %0, i8* noundef null, i32 noundef 0, i32 noundef 0) #19, !dbg !11044
  br label %18, !dbg !11046

18:                                               ; preds = %4, %16, %10
  %19 = phi i32 [ 1, %10 ], [ 1, %16 ], [ 0, %4 ], !dbg !11047
  call void @llvm.dbg.value(metadata i32 %19, metadata !11024, metadata !DIExpression()), !dbg !11026
  ret i32 %19, !dbg !11048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueTakeMutexRecursive(i8* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !11049 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11053, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i32 %1, metadata !11054, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i8* %0, metadata !11056, metadata !DIExpression()), !dbg !11057
  %3 = icmp eq i8* %0, null, !dbg !11058
  br i1 %3, label %4, label %5, !dbg !11060

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 549) #21, !dbg !11061
  br label %5, !dbg !11061

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !11063
  %7 = bitcast i8* %6 to i8**, !dbg !11063
  %8 = load i8*, i8** %7, align 4, !dbg !11063
  %9 = tail call i8* @xTaskGetCurrentTaskHandle() #21, !dbg !11065
  %10 = icmp eq i8* %8, %9, !dbg !11066
  br i1 %10, label %14, label %11, !dbg !11067

11:                                               ; preds = %5
  %12 = tail call i32 @xQueueGenericReceive(i8* noundef nonnull %0, i8* noundef null, i32 noundef %1, i32 noundef 0) #19, !dbg !11068
  call void @llvm.dbg.value(metadata i32 %12, metadata !11055, metadata !DIExpression()), !dbg !11057
  %13 = icmp eq i32 %12, 1, !dbg !11070
  br i1 %13, label %14, label %19, !dbg !11072

14:                                               ; preds = %11, %5
  %15 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !11073
  %16 = bitcast i8* %15 to i32*, !dbg !11073
  %17 = load i32, i32* %16, align 4, !dbg !11073
  %18 = add i32 %17, 1, !dbg !11073
  store i32 %18, i32* %16, align 4, !dbg !11073
  br label %19, !dbg !11074

19:                                               ; preds = %14, %11
  %20 = phi i32 [ %12, %11 ], [ 1, %14 ], !dbg !11073
  call void @llvm.dbg.value(metadata i32 %20, metadata !11055, metadata !DIExpression()), !dbg !11057
  ret i32 %20, !dbg !11074
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReceive(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !11075 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.DMA_SWCOPYMENU, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11079, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata i8* %1, metadata !11080, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata i32 %2, metadata !11081, metadata !DIExpression()), !dbg !11087
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !11082, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.value(metadata i32 0, metadata !11083, metadata !DIExpression()), !dbg !11087
  %7 = bitcast %struct.DMA_SWCOPYMENU* %6 to i8*, !dbg !11088
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #20, !dbg !11088
  call void @llvm.dbg.declare(metadata %struct.DMA_SWCOPYMENU* %6, metadata !11084, metadata !DIExpression()), !dbg !11089
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !11090
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !11086, metadata !DIExpression()), !dbg !11087
  %9 = icmp eq i8* %0, null, !dbg !11091
  br i1 %9, label %10, label %11, !dbg !11093

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1368) #21, !dbg !11094
  br label %11, !dbg !11094

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !11096
  br i1 %12, label %13, label %19, !dbg !11096

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !11096
  %15 = bitcast i8* %14 to i32*, !dbg !11096
  %16 = load i32, i32* %15, align 4, !dbg !11096
  %17 = icmp eq i32 %16, 0, !dbg !11096
  br i1 %17, label %19, label %18, !dbg !11098

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1369) #21, !dbg !11099
  br label %19, !dbg !11099

19:                                               ; preds = %11, %18, %13
  %20 = tail call i32 @xTaskGetSchedulerState() #21, !dbg !11101
  %21 = icmp eq i32 %20, 0, !dbg !11101
  call void @llvm.dbg.value(metadata i32 %2, metadata !11081, metadata !DIExpression()), !dbg !11087
  %22 = icmp ne i32 %2, 0, !dbg !11101
  %23 = and i1 %21, %22, !dbg !11101
  br i1 %23, label %24, label %25, !dbg !11104

24:                                               ; preds = %19
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1372) #21, !dbg !11105
  br label %25, !dbg !11105

25:                                               ; preds = %24, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !11083, metadata !DIExpression()), !dbg !11087
  call void @vPortEnterCritical() #21, !dbg !11107
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !11111
  %27 = bitcast i8* %26 to i32*, !dbg !11111
  %28 = load volatile i32, i32* %27, align 4, !dbg !11111
  %29 = icmp eq i32 %28, 0, !dbg !11114
  br i1 %29, label %30, label %41, !dbg !11115

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %0, i32 68
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds i8, i8* %0, i32 72
  %34 = bitcast i8* %33 to i32*
  %35 = bitcast i8* %0 to i8**
  %36 = getelementptr inbounds i8, i8* %0, i32 4
  %37 = bitcast i8* %36 to i8**
  %38 = getelementptr inbounds i8, i8* %0, i32 36
  %39 = bitcast i8* %38 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !11081, metadata !DIExpression()), !dbg !11087
  %40 = icmp eq i32 %2, 0, !dbg !11116
  br i1 %40, label %77, label %78, !dbg !11119

41:                                               ; preds = %107, %25
  %42 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !11120
  %43 = bitcast i8* %42 to i8**, !dbg !11122
  %44 = load i8*, i8** %43, align 4, !dbg !11122
  call void @llvm.dbg.value(metadata i8* %44, metadata !11085, metadata !DIExpression()), !dbg !11087
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1) #19, !dbg !11123
  %45 = icmp eq i32 %3, 0, !dbg !11124
  br i1 %45, label %46, label %66, !dbg !11126

46:                                               ; preds = %41
  %47 = load volatile i32, i32* %27, align 4, !dbg !11127
  %48 = add i32 %47, -1, !dbg !11127
  store volatile i32 %48, i32* %27, align 4, !dbg !11127
  %49 = bitcast i8* %0 to i8**, !dbg !11129
  %50 = load i8*, i8** %49, align 4, !dbg !11129
  %51 = icmp eq i8* %50, null, !dbg !11132
  br i1 %51, label %52, label %56, !dbg !11133

52:                                               ; preds = %46
  %53 = call i8* @pvTaskIncrementMutexHeldCount() #21, !dbg !11134
  %54 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !11136
  %55 = bitcast i8* %54 to i8**, !dbg !11136
  store i8* %53, i8** %55, align 4, !dbg !11137
  br label %56, !dbg !11138

56:                                               ; preds = %46, %52
  %57 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !11139
  %58 = bitcast i8* %57 to i32*, !dbg !11139
  %59 = load i32, i32* %58, align 4, !dbg !11139
  %60 = icmp eq i32 %59, 0, !dbg !11139
  br i1 %60, label %76, label %61, !dbg !11141

61:                                               ; preds = %56
  %62 = bitcast i8* %57 to %struct.xLIST*, !dbg !11139
  %63 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %62) #21, !dbg !11142
  %64 = icmp eq i32 %63, 1, !dbg !11145
  br i1 %64, label %65, label %76, !dbg !11146

65:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11147
  call void asm sideeffect "dsb", ""() #20, !dbg !11147, !srcloc !11150
  call void asm sideeffect "isb", ""() #20, !dbg !11147, !srcloc !11151
  br label %76, !dbg !11152

66:                                               ; preds = %41
  store i8* %44, i8** %43, align 4, !dbg !11153
  %67 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !11155
  %68 = bitcast i8* %67 to i32*, !dbg !11155
  %69 = load i32, i32* %68, align 4, !dbg !11155
  %70 = icmp eq i32 %69, 0, !dbg !11155
  br i1 %70, label %76, label %71, !dbg !11157

71:                                               ; preds = %66
  %72 = bitcast i8* %67 to %struct.xLIST*, !dbg !11155
  %73 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %72) #21, !dbg !11158
  %74 = icmp eq i32 %73, 0, !dbg !11161
  br i1 %74, label %76, label %75, !dbg !11162

75:                                               ; preds = %71
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11163
  call void asm sideeffect "dsb", ""() #20, !dbg !11163, !srcloc !11166
  call void asm sideeffect "isb", ""() #20, !dbg !11163, !srcloc !11167
  br label %76, !dbg !11168

76:                                               ; preds = %71, %75, %66, %61, %65, %56
  call void @vPortExitCritical() #21, !dbg !11169
  br label %113, !dbg !11170

77:                                               ; preds = %110, %30
  call void @vPortExitCritical() #21, !dbg !11171
  br label %113, !dbg !11173

78:                                               ; preds = %30
  call void @vTaskSetTimeOutState(%struct.DMA_SWCOPYMENU* noundef nonnull %6) #21, !dbg !11174
  call void @llvm.dbg.value(metadata i32 1, metadata !11083, metadata !DIExpression()), !dbg !11087
  br label %79, !dbg !11177

79:                                               ; preds = %110, %78
  call void @llvm.dbg.value(metadata i32 1, metadata !11083, metadata !DIExpression()), !dbg !11087
  call void @vPortExitCritical() #21, !dbg !11178
  call void @vTaskSuspendAll() #21, !dbg !11179
  call void @vPortEnterCritical() #21, !dbg !11180
  %80 = load volatile i32, i32* %32, align 4, !dbg !11181
  %81 = icmp eq i32 %80, -1, !dbg !11181
  br i1 %81, label %82, label %83, !dbg !11184

82:                                               ; preds = %79
  store volatile i32 0, i32* %32, align 4, !dbg !11185
  br label %83, !dbg !11185

83:                                               ; preds = %82, %79
  %84 = load volatile i32, i32* %34, align 4, !dbg !11187
  %85 = icmp eq i32 %84, -1, !dbg !11187
  br i1 %85, label %86, label %87, !dbg !11184

86:                                               ; preds = %83
  store volatile i32 0, i32* %34, align 4, !dbg !11189
  br label %87, !dbg !11189

87:                                               ; preds = %86, %83
  call void @vPortExitCritical() #21, !dbg !11180
  call void @llvm.dbg.value(metadata i32* %5, metadata !11081, metadata !DIExpression(DW_OP_deref)), !dbg !11087
  %88 = call i32 @xTaskCheckForTimeOut(%struct.DMA_SWCOPYMENU* noundef nonnull %6, i32* noundef nonnull %5) #21, !dbg !11191
  %89 = icmp eq i32 %88, 0, !dbg !11193
  br i1 %89, label %90, label %105, !dbg !11194

90:                                               ; preds = %87
  %91 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %8) #19, !dbg !11195
  %92 = icmp eq i32 %91, 0, !dbg !11198
  br i1 %92, label %103, label %93, !dbg !11199

93:                                               ; preds = %90
  %94 = load i8*, i8** %35, align 4, !dbg !11200
  %95 = icmp eq i8* %94, null, !dbg !11204
  br i1 %95, label %96, label %98, !dbg !11205

96:                                               ; preds = %93
  call void @vPortEnterCritical() #21, !dbg !11206
  %97 = load i8*, i8** %37, align 4, !dbg !11208
  call void @vTaskPriorityInherit(i8* noundef %97) #21, !dbg !11210
  call void @vPortExitCritical() #21, !dbg !11211
  br label %98, !dbg !11212

98:                                               ; preds = %93, %96
  %99 = load i32, i32* %5, align 4, !dbg !11213
  call void @llvm.dbg.value(metadata i32 %99, metadata !11081, metadata !DIExpression()), !dbg !11087
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %39, i32 noundef %99) #21, !dbg !11214
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #19, !dbg !11215
  %100 = call i32 @xTaskResumeAll() #21, !dbg !11216
  %101 = icmp eq i32 %100, 0, !dbg !11218
  br i1 %101, label %102, label %107, !dbg !11219

102:                                              ; preds = %98
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11220
  call void asm sideeffect "dsb", ""() #20, !dbg !11220, !srcloc !11223
  call void asm sideeffect "isb", ""() #20, !dbg !11220, !srcloc !11224
  br label %107, !dbg !11225

103:                                              ; preds = %90
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #19, !dbg !11226
  %104 = call i32 @xTaskResumeAll() #21, !dbg !11228
  br label %107

105:                                              ; preds = %87
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #19, !dbg !11229
  %106 = call i32 @xTaskResumeAll() #21, !dbg !11231
  br label %113, !dbg !11232

107:                                              ; preds = %103, %98, %102
  call void @llvm.dbg.value(metadata i32 undef, metadata !11083, metadata !DIExpression()), !dbg !11087
  call void @vPortEnterCritical() #21, !dbg !11107
  %108 = load volatile i32, i32* %27, align 4, !dbg !11111
  %109 = icmp eq i32 %108, 0, !dbg !11114
  br i1 %109, label %110, label %41, !dbg !11115, !llvm.loop !11233

110:                                              ; preds = %107
  %111 = load i32, i32* %5, align 4, !dbg !11236
  call void @llvm.dbg.value(metadata i32 %111, metadata !11081, metadata !DIExpression()), !dbg !11087
  %112 = icmp eq i32 %111, 0, !dbg !11116
  br i1 %112, label %77, label %79, !dbg !11119

113:                                              ; preds = %105, %77, %76
  %114 = phi i32 [ 1, %76 ], [ 0, %77 ], [ 0, %105 ], !dbg !11237
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #20, !dbg !11238
  ret i32 %114, !dbg !11238
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nocapture noundef %0, i8* noundef %1) unnamed_addr #3 !dbg !11239 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !11243, metadata !DIExpression()), !dbg !11245
  call void @llvm.dbg.value(metadata i8* %1, metadata !11244, metadata !DIExpression()), !dbg !11245
  %3 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !11246
  %4 = load i32, i32* %3, align 4, !dbg !11246
  %5 = icmp eq i32 %4, 0, !dbg !11248
  br i1 %5, label %19, label %6, !dbg !11249

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !11250
  %8 = load i8*, i8** %7, align 4, !dbg !11252
  %9 = getelementptr inbounds i8, i8* %8, i32 %4, !dbg !11252
  store i8* %9, i8** %7, align 4, !dbg !11252
  %10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !11253
  %11 = load i8*, i8** %10, align 4, !dbg !11253
  %12 = icmp ult i8* %9, %11, !dbg !11255
  br i1 %12, label %16, label %13, !dbg !11256

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !11257
  %15 = load i8*, i8** %14, align 4, !dbg !11257
  store i8* %15, i8** %7, align 4, !dbg !11259
  br label %16, !dbg !11260

16:                                               ; preds = %6, %13
  %17 = phi i8* [ %9, %6 ], [ %15, %13 ], !dbg !11261
  %18 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %17, i32 noundef %4) #21, !dbg !11262
  br label %19, !dbg !11263

19:                                               ; preds = %16, %2
  ret void, !dbg !11264
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef %0) unnamed_addr #3 !dbg !11265 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !11267, metadata !DIExpression()), !dbg !11269
  tail call void @vPortEnterCritical() #21, !dbg !11270
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !11271
  %3 = load volatile i32, i32* %2, align 4, !dbg !11271
  %4 = icmp eq i32 %3, 0, !dbg !11274
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !11268, metadata !DIExpression()), !dbg !11269
  tail call void @vPortExitCritical() #21, !dbg !11275
  ret i32 %5, !dbg !11276
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateCountingSemaphore(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !11277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11281, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.value(metadata i32 %1, metadata !11282, metadata !DIExpression()), !dbg !11284
  %3 = icmp eq i32 %0, 0, !dbg !11285
  br i1 %3, label %4, label %5, !dbg !11287

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.179, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 590) #21, !dbg !11288
  br label %5, !dbg !11288

5:                                                ; preds = %4, %2
  %6 = icmp ugt i32 %1, %0, !dbg !11290
  br i1 %6, label %7, label %8, !dbg !11292

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 591) #21, !dbg !11293
  br label %8, !dbg !11293

8:                                                ; preds = %7, %5
  %9 = tail call i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef 0, i8 noundef zeroext 2) #19, !dbg !11295
  call void @llvm.dbg.value(metadata i8* %9, metadata !11283, metadata !DIExpression()), !dbg !11284
  %10 = icmp eq i8* %9, null, !dbg !11296
  br i1 %10, label %14, label %11, !dbg !11296

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %9, i32 56, !dbg !11297
  %13 = bitcast i8* %12 to i32*, !dbg !11297
  store volatile i32 %1, i32* %13, align 4, !dbg !11300
  br label %15, !dbg !11301

14:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.181, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 606) #21, !dbg !11302
  br label %15, !dbg !11302

15:                                               ; preds = %11, %14
  ret i8* %9, !dbg !11305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSendFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #3 !dbg !11306 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11310, metadata !DIExpression()), !dbg !11317
  call void @llvm.dbg.value(metadata i8* %1, metadata !11311, metadata !DIExpression()), !dbg !11317
  call void @llvm.dbg.value(metadata i32* %2, metadata !11312, metadata !DIExpression()), !dbg !11317
  call void @llvm.dbg.value(metadata i32 %3, metadata !11313, metadata !DIExpression()), !dbg !11317
  %5 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !11318
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %5, metadata !11316, metadata !DIExpression()), !dbg !11317
  %6 = icmp eq i8* %0, null, !dbg !11319
  br i1 %6, label %7, label %8, !dbg !11321

7:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1064) #21, !dbg !11322
  br label %8, !dbg !11322

8:                                                ; preds = %7, %4
  %9 = icmp eq i8* %1, null, !dbg !11324
  br i1 %9, label %10, label %16, !dbg !11324

10:                                               ; preds = %8
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !11324
  %12 = bitcast i8* %11 to i32*, !dbg !11324
  %13 = load i32, i32* %12, align 4, !dbg !11324
  %14 = icmp eq i32 %13, 0, !dbg !11324
  br i1 %14, label %16, label %15, !dbg !11326

15:                                               ; preds = %10
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1065) #21, !dbg !11327
  br label %16, !dbg !11327

16:                                               ; preds = %8, %15, %10
  %17 = icmp eq i32 %3, 2, !dbg !11329
  br i1 %17, label %18, label %24, !dbg !11329

18:                                               ; preds = %16
  %19 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !11329
  %20 = bitcast i8* %19 to i32*, !dbg !11329
  %21 = load i32, i32* %20, align 4, !dbg !11329
  %22 = icmp eq i32 %21, 1, !dbg !11329
  br i1 %22, label %24, label %23, !dbg !11331

23:                                               ; preds = %18
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1066) #21, !dbg !11332
  br label %24, !dbg !11332

24:                                               ; preds = %16, %23, %18
  tail call void @vPortValidateInterruptPriority() #21, !dbg !11334
  %25 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !11335, !srcloc !11341
  call void @llvm.dbg.value(metadata i32 undef, metadata !11338, metadata !DIExpression()) #20, !dbg !11342
  call void @llvm.dbg.value(metadata i32 undef, metadata !11339, metadata !DIExpression()) #20, !dbg !11342
  call void @llvm.dbg.value(metadata i32 undef, metadata !11315, metadata !DIExpression()), !dbg !11317
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !11343
  %27 = bitcast i8* %26 to i32*, !dbg !11343
  %28 = load volatile i32, i32* %27, align 4, !dbg !11343
  %29 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !11346
  %30 = bitcast i8* %29 to i32*, !dbg !11346
  %31 = load i32, i32* %30, align 4, !dbg !11346
  %32 = icmp ult i32 %28, %31, !dbg !11347
  %33 = or i1 %17, %32, !dbg !11348
  br i1 %33, label %34, label %55, !dbg !11348

34:                                               ; preds = %24
  %35 = tail call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %5, i8* noundef %1, i32 noundef %3) #19, !dbg !11349
  %36 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !11351
  %37 = bitcast i8* %36 to i32*, !dbg !11351
  %38 = load volatile i32, i32* %37, align 4, !dbg !11351
  %39 = icmp eq i32 %38, -1, !dbg !11353
  br i1 %39, label %40, label %52, !dbg !11354

40:                                               ; preds = %34
  %41 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !11355
  %42 = bitcast i8* %41 to i32*, !dbg !11355
  %43 = load i32, i32* %42, align 4, !dbg !11355
  %44 = icmp eq i32 %43, 0, !dbg !11355
  br i1 %44, label %55, label %45, !dbg !11359

45:                                               ; preds = %40
  %46 = bitcast i8* %41 to %struct.xLIST*, !dbg !11355
  %47 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %46) #21, !dbg !11360
  %48 = icmp ne i32 %47, 0, !dbg !11363
  %49 = icmp ne i32* %2, null
  %50 = and i1 %49, %48, !dbg !11364
  br i1 %50, label %51, label %55, !dbg !11364

51:                                               ; preds = %45
  store i32 1, i32* %2, align 4, !dbg !11365
  br label %55, !dbg !11369

52:                                               ; preds = %34
  %53 = load volatile i32, i32* %37, align 4, !dbg !11370
  %54 = add nsw i32 %53, 1, !dbg !11370
  store volatile i32 %54, i32* %37, align 4, !dbg !11370
  br label %55

55:                                               ; preds = %24, %52, %40, %51, %45
  %56 = phi i32 [ 1, %45 ], [ 1, %51 ], [ 1, %40 ], [ 1, %52 ], [ 0, %24 ], !dbg !11372
  %57 = extractvalue { i32, i32 } %25, 0, !dbg !11335
  call void @llvm.dbg.value(metadata i32 %57, metadata !11338, metadata !DIExpression()) #20, !dbg !11342
  call void @llvm.dbg.value(metadata i32 %57, metadata !11315, metadata !DIExpression()), !dbg !11317
  call void @llvm.dbg.value(metadata i32 %56, metadata !11314, metadata !DIExpression()), !dbg !11317
  call void @llvm.dbg.value(metadata i32 undef, metadata !11373, metadata !DIExpression()) #20, !dbg !11376
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %57) #20, !dbg !11378, !srcloc !11379
  ret i32 %56, !dbg !11380
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #3 !dbg !11381 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11385, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i32* %1, metadata !11386, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i8* %0, metadata !11389, metadata !DIExpression()), !dbg !11390
  %3 = icmp eq i8* %0, null, !dbg !11391
  br i1 %3, label %4, label %5, !dbg !11393

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1213) #21, !dbg !11394
  br label %5, !dbg !11394

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !11396
  %7 = bitcast i8* %6 to i32*, !dbg !11396
  %8 = load i32, i32* %7, align 4, !dbg !11396
  %9 = icmp eq i32 %8, 0, !dbg !11396
  br i1 %9, label %11, label %10, !dbg !11398

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12.182, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1216) #21, !dbg !11399
  br label %11, !dbg !11399

11:                                               ; preds = %10, %5
  tail call void @vPortValidateInterruptPriority() #21, !dbg !11401
  %12 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !11402, !srcloc !11341
  call void @llvm.dbg.value(metadata i32 undef, metadata !11338, metadata !DIExpression()) #20, !dbg !11404
  call void @llvm.dbg.value(metadata i32 undef, metadata !11339, metadata !DIExpression()) #20, !dbg !11404
  call void @llvm.dbg.value(metadata i32 undef, metadata !11388, metadata !DIExpression()), !dbg !11390
  %13 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !11405
  %14 = bitcast i8* %13 to i32*, !dbg !11405
  %15 = load volatile i32, i32* %14, align 4, !dbg !11405
  %16 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !11408
  %17 = bitcast i8* %16 to i32*, !dbg !11408
  %18 = load i32, i32* %17, align 4, !dbg !11408
  %19 = icmp ult i32 %15, %18, !dbg !11409
  br i1 %19, label %20, label %42, !dbg !11410

20:                                               ; preds = %11
  %21 = load volatile i32, i32* %14, align 4, !dbg !11411
  %22 = add i32 %21, 1, !dbg !11411
  store volatile i32 %22, i32* %14, align 4, !dbg !11411
  %23 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !11413
  %24 = bitcast i8* %23 to i32*, !dbg !11413
  %25 = load volatile i32, i32* %24, align 4, !dbg !11413
  %26 = icmp eq i32 %25, -1, !dbg !11415
  br i1 %26, label %27, label %39, !dbg !11416

27:                                               ; preds = %20
  %28 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !11417
  %29 = bitcast i8* %28 to i32*, !dbg !11417
  %30 = load i32, i32* %29, align 4, !dbg !11417
  %31 = icmp eq i32 %30, 0, !dbg !11417
  br i1 %31, label %42, label %32, !dbg !11421

32:                                               ; preds = %27
  %33 = bitcast i8* %28 to %struct.xLIST*, !dbg !11417
  %34 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %33) #21, !dbg !11422
  %35 = icmp ne i32 %34, 0, !dbg !11425
  %36 = icmp ne i32* %1, null
  %37 = and i1 %36, %35, !dbg !11426
  br i1 %37, label %38, label %42, !dbg !11426

38:                                               ; preds = %32
  store i32 1, i32* %1, align 4, !dbg !11427
  br label %42, !dbg !11431

39:                                               ; preds = %20
  %40 = load volatile i32, i32* %24, align 4, !dbg !11432
  %41 = add nsw i32 %40, 1, !dbg !11432
  store volatile i32 %41, i32* %24, align 4, !dbg !11432
  br label %42

42:                                               ; preds = %11, %39, %27, %38, %32
  %43 = phi i32 [ 1, %32 ], [ 1, %38 ], [ 1, %27 ], [ 1, %39 ], [ 0, %11 ], !dbg !11434
  %44 = extractvalue { i32, i32 } %12, 0, !dbg !11402
  call void @llvm.dbg.value(metadata i32 %44, metadata !11338, metadata !DIExpression()) #20, !dbg !11404
  call void @llvm.dbg.value(metadata i32 %44, metadata !11388, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i32 %43, metadata !11387, metadata !DIExpression()), !dbg !11390
  call void @llvm.dbg.value(metadata i32 undef, metadata !11373, metadata !DIExpression()) #20, !dbg !11435
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %44) #20, !dbg !11437, !srcloc !11379
  ret i32 %43, !dbg !11438
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueReceiveFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2) local_unnamed_addr #3 !dbg !11439 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11443, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata i8* %1, metadata !11444, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata i32* %2, metadata !11445, metadata !DIExpression()), !dbg !11449
  %4 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !11450
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %4, metadata !11448, metadata !DIExpression()), !dbg !11449
  %5 = icmp eq i8* %0, null, !dbg !11451
  br i1 %5, label %6, label %7, !dbg !11453

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1556) #21, !dbg !11454
  br label %7, !dbg !11454

7:                                                ; preds = %6, %3
  %8 = icmp eq i8* %1, null, !dbg !11456
  br i1 %8, label %9, label %15, !dbg !11456

9:                                                ; preds = %7
  %10 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !11456
  %11 = bitcast i8* %10 to i32*, !dbg !11456
  %12 = load i32, i32* %11, align 4, !dbg !11456
  %13 = icmp eq i32 %12, 0, !dbg !11456
  br i1 %13, label %15, label %14, !dbg !11458

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1557) #21, !dbg !11459
  br label %15, !dbg !11459

15:                                               ; preds = %7, %14, %9
  tail call void @vPortValidateInterruptPriority() #21, !dbg !11461
  %16 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !11462, !srcloc !11341
  call void @llvm.dbg.value(metadata i32 undef, metadata !11338, metadata !DIExpression()) #20, !dbg !11464
  call void @llvm.dbg.value(metadata i32 undef, metadata !11339, metadata !DIExpression()) #20, !dbg !11464
  call void @llvm.dbg.value(metadata i32 undef, metadata !11447, metadata !DIExpression()), !dbg !11449
  %17 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !11465
  %18 = bitcast i8* %17 to i32*, !dbg !11465
  %19 = load volatile i32, i32* %18, align 4, !dbg !11465
  %20 = icmp eq i32 %19, 0, !dbg !11468
  br i1 %20, label %43, label %21, !dbg !11469

21:                                               ; preds = %15
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %4, i8* noundef %1) #19, !dbg !11470
  %22 = load volatile i32, i32* %18, align 4, !dbg !11472
  %23 = add i32 %22, -1, !dbg !11472
  store volatile i32 %23, i32* %18, align 4, !dbg !11472
  %24 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !11473
  %25 = bitcast i8* %24 to i32*, !dbg !11473
  %26 = load volatile i32, i32* %25, align 4, !dbg !11473
  %27 = icmp eq i32 %26, -1, !dbg !11475
  br i1 %27, label %28, label %40, !dbg !11476

28:                                               ; preds = %21
  %29 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !11477
  %30 = bitcast i8* %29 to i32*, !dbg !11477
  %31 = load i32, i32* %30, align 4, !dbg !11477
  %32 = icmp eq i32 %31, 0, !dbg !11477
  br i1 %32, label %43, label %33, !dbg !11480

33:                                               ; preds = %28
  %34 = bitcast i8* %29 to %struct.xLIST*, !dbg !11477
  %35 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %34) #21, !dbg !11481
  %36 = icmp ne i32 %35, 0, !dbg !11484
  %37 = icmp ne i32* %2, null
  %38 = and i1 %37, %36, !dbg !11485
  br i1 %38, label %39, label %43, !dbg !11485

39:                                               ; preds = %33
  store i32 1, i32* %2, align 4, !dbg !11486
  br label %43, !dbg !11490

40:                                               ; preds = %21
  %41 = load volatile i32, i32* %25, align 4, !dbg !11491
  %42 = add nsw i32 %41, 1, !dbg !11491
  store volatile i32 %42, i32* %25, align 4, !dbg !11491
  br label %43

43:                                               ; preds = %15, %40, %28, %39, %33
  %44 = phi i32 [ 1, %33 ], [ 1, %39 ], [ 1, %28 ], [ 1, %40 ], [ 0, %15 ], !dbg !11493
  %45 = extractvalue { i32, i32 } %16, 0, !dbg !11462
  call void @llvm.dbg.value(metadata i32 %45, metadata !11338, metadata !DIExpression()) #20, !dbg !11464
  call void @llvm.dbg.value(metadata i32 %45, metadata !11447, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata i32 %44, metadata !11446, metadata !DIExpression()), !dbg !11449
  call void @llvm.dbg.value(metadata i32 undef, metadata !11373, metadata !DIExpression()) #20, !dbg !11494
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %45) #20, !dbg !11496, !srcloc !11379
  ret i32 %44, !dbg !11497
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueuePeekFromISR(i8* noundef %0, i8* noundef %1) local_unnamed_addr #3 !dbg !11498 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11502, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i8* %1, metadata !11503, metadata !DIExpression()), !dbg !11508
  %3 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !11509
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %3, metadata !11507, metadata !DIExpression()), !dbg !11508
  %4 = icmp eq i8* %0, null, !dbg !11510
  br i1 %4, label %5, label %6, !dbg !11512

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1644) #21, !dbg !11513
  br label %6, !dbg !11513

6:                                                ; preds = %5, %2
  %7 = icmp eq i8* %1, null, !dbg !11515
  br i1 %7, label %8, label %14, !dbg !11515

8:                                                ; preds = %6
  %9 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !11515
  %10 = bitcast i8* %9 to i32*, !dbg !11515
  %11 = load i32, i32* %10, align 4, !dbg !11515
  %12 = icmp eq i32 %11, 0, !dbg !11515
  br i1 %12, label %14, label %13, !dbg !11517

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.178, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1645) #21, !dbg !11518
  br label %14, !dbg !11518

14:                                               ; preds = %6, %13, %8
  %15 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !11520
  %16 = bitcast i8* %15 to i32*, !dbg !11520
  %17 = load i32, i32* %16, align 4, !dbg !11520
  %18 = icmp eq i32 %17, 0, !dbg !11520
  br i1 %18, label %19, label %20, !dbg !11522

19:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1646) #21, !dbg !11523
  br label %20, !dbg !11523

20:                                               ; preds = %19, %14
  tail call void @vPortValidateInterruptPriority() #21, !dbg !11525
  %21 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !11526, !srcloc !11341
  call void @llvm.dbg.value(metadata i32 undef, metadata !11338, metadata !DIExpression()) #20, !dbg !11528
  call void @llvm.dbg.value(metadata i32 undef, metadata !11339, metadata !DIExpression()) #20, !dbg !11528
  call void @llvm.dbg.value(metadata i32 undef, metadata !11505, metadata !DIExpression()), !dbg !11508
  %22 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !11529
  %23 = bitcast i8* %22 to i32*, !dbg !11529
  %24 = load volatile i32, i32* %23, align 4, !dbg !11529
  %25 = icmp eq i32 %24, 0, !dbg !11532
  br i1 %25, label %30, label %26, !dbg !11533

26:                                               ; preds = %20
  %27 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !11534
  %28 = bitcast i8* %27 to i8**, !dbg !11536
  %29 = load i8*, i8** %28, align 4, !dbg !11536
  call void @llvm.dbg.value(metadata i8* %29, metadata !11506, metadata !DIExpression()), !dbg !11508
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %3, i8* noundef %1) #19, !dbg !11537
  store i8* %29, i8** %28, align 4, !dbg !11538
  call void @llvm.dbg.value(metadata i32 1, metadata !11504, metadata !DIExpression()), !dbg !11508
  br label %30, !dbg !11539

30:                                               ; preds = %20, %26
  %31 = phi i32 [ 1, %26 ], [ 0, %20 ], !dbg !11540
  %32 = extractvalue { i32, i32 } %21, 0, !dbg !11526
  call void @llvm.dbg.value(metadata i32 %32, metadata !11338, metadata !DIExpression()) #20, !dbg !11528
  call void @llvm.dbg.value(metadata i32 %32, metadata !11505, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 %31, metadata !11504, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 undef, metadata !11373, metadata !DIExpression()) #20, !dbg !11541
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %32) #20, !dbg !11543, !srcloc !11379
  ret i32 %31, !dbg !11544
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaiting(i8* noundef %0) local_unnamed_addr #3 !dbg !11545 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11550, metadata !DIExpression()), !dbg !11552
  %2 = icmp eq i8* %0, null, !dbg !11553
  br i1 %2, label %3, label %4, !dbg !11555

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1695) #21, !dbg !11556
  br label %4, !dbg !11556

4:                                                ; preds = %3, %1
  tail call void @vPortEnterCritical() #21, !dbg !11558
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !11559
  %6 = bitcast i8* %5 to i32*, !dbg !11559
  %7 = load volatile i32, i32* %6, align 4, !dbg !11559
  call void @llvm.dbg.value(metadata i32 %7, metadata !11551, metadata !DIExpression()), !dbg !11552
  tail call void @vPortExitCritical() #21, !dbg !11561
  ret i32 %7, !dbg !11562
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueSpacesAvailable(i8* noundef %0) local_unnamed_addr #3 !dbg !11563 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11565, metadata !DIExpression()), !dbg !11568
  call void @llvm.dbg.value(metadata i8* %0, metadata !11567, metadata !DIExpression()), !dbg !11568
  %2 = icmp eq i8* %0, null, !dbg !11569
  br i1 %2, label %3, label %4, !dbg !11571

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1713) #21, !dbg !11572
  br label %4, !dbg !11572

4:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !11567, metadata !DIExpression()), !dbg !11568
  tail call void @vPortEnterCritical() #21, !dbg !11574
  %5 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !11575
  %6 = bitcast i8* %5 to i32*, !dbg !11575
  %7 = load i32, i32* %6, align 4, !dbg !11575
  %8 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !11577
  %9 = bitcast i8* %8 to i32*, !dbg !11577
  %10 = load volatile i32, i32* %9, align 4, !dbg !11577
  %11 = sub i32 %7, %10, !dbg !11578
  call void @llvm.dbg.value(metadata i32 %11, metadata !11566, metadata !DIExpression()), !dbg !11568
  tail call void @vPortExitCritical() #21, !dbg !11579
  ret i32 %11, !dbg !11580
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaitingFromISR(i8* noundef %0) local_unnamed_addr #3 !dbg !11581 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11583, metadata !DIExpression()), !dbg !11585
  %2 = icmp eq i8* %0, null, !dbg !11586
  br i1 %2, label %3, label %4, !dbg !11588

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1729) #21, !dbg !11589
  br label %4, !dbg !11589

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !11591
  %6 = bitcast i8* %5 to i32*, !dbg !11591
  %7 = load volatile i32, i32* %6, align 4, !dbg !11591
  call void @llvm.dbg.value(metadata i32 %7, metadata !11584, metadata !DIExpression()), !dbg !11585
  ret i32 %7, !dbg !11592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueDelete(i8* noundef %0) local_unnamed_addr #3 !dbg !11593 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11597, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.value(metadata i8* %0, metadata !11598, metadata !DIExpression()), !dbg !11599
  %2 = icmp eq i8* %0, null, !dbg !11600
  br i1 %2, label %3, label %4, !dbg !11602

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 1741) #21, !dbg !11603
  br label %4, !dbg !11603

4:                                                ; preds = %3, %1
  tail call void @vQueueUnregisterQueue(i8* noundef %0) #19, !dbg !11605
  tail call void @vPortFree(i8* noundef %0) #21, !dbg !11607
  ret void, !dbg !11608
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueUnregisterQueue(i8* noundef readnone %0) local_unnamed_addr #16 !dbg !11609 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11611, metadata !DIExpression()), !dbg !11613
  call void @llvm.dbg.value(metadata i32 0, metadata !11612, metadata !DIExpression()), !dbg !11613
  br label %2, !dbg !11614

2:                                                ; preds = %1, %9
  %3 = phi i32 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11612, metadata !DIExpression()), !dbg !11613
  %4 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 1, !dbg !11616
  %5 = load i8*, i8** %4, align 4, !dbg !11616
  %6 = icmp eq i8* %5, %0, !dbg !11620
  br i1 %6, label %7, label %9, !dbg !11621

7:                                                ; preds = %2
  %8 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 0, !dbg !11622
  store i8* null, i8** %8, align 4, !dbg !11624
  br label %12, !dbg !11625

9:                                                ; preds = %2
  %10 = add nuw nsw i32 %3, 1, !dbg !11626
  call void @llvm.dbg.value(metadata i32 %10, metadata !11612, metadata !DIExpression()), !dbg !11613
  %11 = icmp eq i32 %10, 8, !dbg !11627
  br i1 %11, label %12, label %2, !dbg !11614, !llvm.loop !11628

12:                                               ; preds = %9, %7
  ret void, !dbg !11630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxQueueGetQueueNumber(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !11631 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11635, metadata !DIExpression()), !dbg !11636
  %2 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !11637
  %3 = bitcast i8* %2 to i32*, !dbg !11637
  %4 = load i32, i32* %3, align 4, !dbg !11637
  ret i32 %4, !dbg !11638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vQueueSetQueueNumber(i8* nocapture noundef writeonly %0, i32 noundef %1) local_unnamed_addr #5 !dbg !11639 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11643, metadata !DIExpression()), !dbg !11645
  call void @llvm.dbg.value(metadata i32 %1, metadata !11644, metadata !DIExpression()), !dbg !11645
  %3 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !11646
  %4 = bitcast i8* %3 to i32*, !dbg !11646
  store i32 %1, i32* %4, align 4, !dbg !11647
  ret void, !dbg !11648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i8 @ucQueueGetQueueType(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !11649 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11653, metadata !DIExpression()), !dbg !11654
  %2 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !11655
  %3 = load i8, i8* %2, align 4, !dbg !11655
  ret i8 %3, !dbg !11656
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueEmptyFromISR(i8* noundef %0) local_unnamed_addr #3 !dbg !11657 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11661, metadata !DIExpression()), !dbg !11663
  %2 = icmp eq i8* %0, null, !dbg !11664
  br i1 %2, label %3, label %4, !dbg !11666

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 2015) #21, !dbg !11667
  br label %4, !dbg !11667

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !11669
  %6 = bitcast i8* %5 to i32*, !dbg !11669
  %7 = load volatile i32, i32* %6, align 4, !dbg !11669
  %8 = icmp eq i32 %7, 0, !dbg !11671
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !11662, metadata !DIExpression()), !dbg !11663
  ret i32 %9, !dbg !11672
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueFullFromISR(i8* noundef %0) local_unnamed_addr #3 !dbg !11673 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11675, metadata !DIExpression()), !dbg !11677
  %2 = icmp eq i8* %0, null, !dbg !11678
  br i1 %2, label %3, label %4, !dbg !11680

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.170, i32 0, i32 0), i32 noundef 2054) #21, !dbg !11681
  br label %4, !dbg !11681

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !11683
  %6 = bitcast i8* %5 to i32*, !dbg !11683
  %7 = load volatile i32, i32* %6, align 4, !dbg !11683
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !11685
  %9 = bitcast i8* %8 to i32*, !dbg !11685
  %10 = load i32, i32* %9, align 4, !dbg !11685
  %11 = icmp eq i32 %7, %10, !dbg !11686
  %12 = zext i1 %11 to i32
  call void @llvm.dbg.value(metadata i32 %12, metadata !11676, metadata !DIExpression()), !dbg !11677
  ret i32 %12, !dbg !11687
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueAddToRegistry(i8* noundef %0, i8* noundef %1) local_unnamed_addr #16 !dbg !11688 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11692, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata i8* %1, metadata !11693, metadata !DIExpression()), !dbg !11695
  call void @llvm.dbg.value(metadata i32 0, metadata !11694, metadata !DIExpression()), !dbg !11695
  br label %3, !dbg !11696

3:                                                ; preds = %2, %10
  %4 = phi i32 [ 0, %2 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !11694, metadata !DIExpression()), !dbg !11695
  %5 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 0, !dbg !11698
  %6 = load i8*, i8** %5, align 4, !dbg !11698
  %7 = icmp eq i8* %6, null, !dbg !11702
  br i1 %7, label %8, label %10, !dbg !11703

8:                                                ; preds = %3
  store i8* %1, i8** %5, align 4, !dbg !11704
  %9 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 1, !dbg !11706
  store i8* %0, i8** %9, align 4, !dbg !11707
  br label %13, !dbg !11708

10:                                               ; preds = %3
  %11 = add nuw nsw i32 %4, 1, !dbg !11709
  call void @llvm.dbg.value(metadata i32 %11, metadata !11694, metadata !DIExpression()), !dbg !11695
  %12 = icmp eq i32 %11, 8, !dbg !11710
  br i1 %12, label %13, label %3, !dbg !11696, !llvm.loop !11711

13:                                               ; preds = %10, %8
  ret void, !dbg !11713
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueWaitForMessageRestricted(i8* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !11714 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11718, metadata !DIExpression()), !dbg !11721
  call void @llvm.dbg.value(metadata i32 %1, metadata !11719, metadata !DIExpression()), !dbg !11721
  call void @llvm.dbg.value(metadata i8* %0, metadata !11720, metadata !DIExpression()), !dbg !11721
  tail call void @vPortEnterCritical() #21, !dbg !11722
  %3 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !11723
  %4 = bitcast i8* %3 to i32*, !dbg !11723
  %5 = load volatile i32, i32* %4, align 4, !dbg !11723
  %6 = icmp eq i32 %5, -1, !dbg !11723
  br i1 %6, label %7, label %8, !dbg !11726

7:                                                ; preds = %2
  store volatile i32 0, i32* %4, align 4, !dbg !11727
  br label %8, !dbg !11727

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !11729
  %10 = bitcast i8* %9 to i32*, !dbg !11729
  %11 = load volatile i32, i32* %10, align 4, !dbg !11729
  %12 = icmp eq i32 %11, -1, !dbg !11729
  br i1 %12, label %13, label %14, !dbg !11726

13:                                               ; preds = %8
  store volatile i32 0, i32* %10, align 4, !dbg !11731
  br label %14, !dbg !11731

14:                                               ; preds = %13, %8
  tail call void @vPortExitCritical() #21, !dbg !11722
  %15 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !11733
  %16 = bitcast i8* %15 to i32*, !dbg !11733
  %17 = load volatile i32, i32* %16, align 4, !dbg !11733
  %18 = icmp eq i32 %17, 0, !dbg !11735
  br i1 %18, label %19, label %22, !dbg !11736

19:                                               ; preds = %14
  %20 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !11737
  %21 = bitcast i8* %20 to %struct.xLIST*, !dbg !11737
  tail call void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef nonnull %21, i32 noundef %1) #21, !dbg !11739
  br label %22, !dbg !11740

22:                                               ; preds = %14, %19
  %23 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !11741
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %23, metadata !11720, metadata !DIExpression()), !dbg !11721
  tail call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %23) #19, !dbg !11742
  ret void, !dbg !11743
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerCreateTimerTask() local_unnamed_addr #3 !dbg !11744 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11746, metadata !DIExpression()), !dbg !11747
  tail call fastcc void @prvCheckForValidListAndQueue() #19, !dbg !11748
  %1 = load i8*, i8** @xTimerQueue, align 4, !dbg !11749
  %2 = icmp eq i8* %1, null, !dbg !11751
  br i1 %2, label %6, label %3, !dbg !11752

3:                                                ; preds = %0
  %4 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @prvTimerTask, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.187, i32 0, i32 0), i16 noundef zeroext 512, i8* noundef null, i32 noundef 19, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #21, !dbg !11753
  call void @llvm.dbg.value(metadata i32 %4, metadata !11746, metadata !DIExpression()), !dbg !11747
  %5 = icmp eq i32 %4, 0, !dbg !11756
  br i1 %5, label %6, label %7, !dbg !11758

6:                                                ; preds = %0, %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.188, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 270) #21, !dbg !11759
  br label %7, !dbg !11759

7:                                                ; preds = %6, %3
  %8 = phi i32 [ 0, %6 ], [ %4, %3 ]
  ret i32 %8, !dbg !11761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckForValidListAndQueue() unnamed_addr #3 !dbg !11762 {
  tail call void @vPortEnterCritical() #21, !dbg !11763
  %1 = load i8*, i8** @xTimerQueue, align 4, !dbg !11764
  %2 = icmp eq i8* %1, null, !dbg !11767
  br i1 %2, label %3, label %11, !dbg !11768

3:                                                ; preds = %0
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList1) #21, !dbg !11769
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList2) #21, !dbg !11771
  store %struct.xLIST* @xActiveTimerList1, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11772
  store %struct.xLIST* @xActiveTimerList2, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !11773
  %4 = tail call i8* @xQueueGenericCreate(i32 noundef 10, i32 noundef 12, i8 noundef zeroext 0) #21, !dbg !11774
  store i8* %4, i8** @xTimerQueue, align 4, !dbg !11775
  %5 = icmp eq i8* %4, null, !dbg !11776
  br i1 %5, label %6, label %9, !dbg !11778

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 784) #21, !dbg !11779
  %7 = load i8*, i8** @xTimerQueue, align 4, !dbg !11781
  %8 = icmp eq i8* %7, null, !dbg !11784
  br i1 %8, label %11, label %9, !dbg !11785

9:                                                ; preds = %3, %6
  %10 = phi i8* [ %7, %6 ], [ %4, %3 ]
  tail call void @vQueueAddToRegistry(i8* noundef nonnull %10, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.193, i32 0, i32 0)) #21, !dbg !11786
  br label %11, !dbg !11788

11:                                               ; preds = %0, %9, %6
  tail call void @vPortExitCritical() #21, !dbg !11789
  ret void, !dbg !11790
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTimerTask(i8* nocapture noundef readnone %0) #13 !dbg !11791 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11793, metadata !DIExpression()), !dbg !11796
  %3 = bitcast i32* %2 to i8*, !dbg !11797
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !11797
  br label %4, !dbg !11798

4:                                                ; preds = %4, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !11795, metadata !DIExpression(DW_OP_deref)), !dbg !11796
  %5 = call fastcc i32 @prvGetNextExpireTime(i32* noundef nonnull %2) #19, !dbg !11799
  call void @llvm.dbg.value(metadata i32 %5, metadata !11794, metadata !DIExpression()), !dbg !11796
  %6 = load i32, i32* %2, align 4, !dbg !11803
  call void @llvm.dbg.value(metadata i32 %6, metadata !11795, metadata !DIExpression()), !dbg !11796
  tail call fastcc void @prvProcessTimerOrBlockTask(i32 noundef %5, i32 noundef %6) #19, !dbg !11804
  tail call fastcc void @prvProcessReceivedCommands() #19, !dbg !11805
  br label %4, !dbg !11806, !llvm.loop !11807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @prvGetNextExpireTime(i32* nocapture noundef writeonly %0) unnamed_addr #15 !dbg !11810 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !11812, metadata !DIExpression()), !dbg !11814
  %2 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11815
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !11815
  %4 = load i32, i32* %3, align 4, !dbg !11815
  %5 = icmp eq i32 %4, 0, !dbg !11815
  %6 = zext i1 %5 to i32, !dbg !11815
  store i32 %6, i32* %0, align 4, !dbg !11816
  br i1 %5, label %12, label %7, !dbg !11817

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 2, i32 1, !dbg !11818
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !11818
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 0, !dbg !11818
  %11 = load i32, i32* %10, align 4, !dbg !11818
  call void @llvm.dbg.value(metadata i32 %11, metadata !11813, metadata !DIExpression()), !dbg !11814
  br label %12, !dbg !11821

12:                                               ; preds = %1, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %1 ], !dbg !11822
  call void @llvm.dbg.value(metadata i32 %13, metadata !11813, metadata !DIExpression()), !dbg !11814
  ret i32 %13, !dbg !11823
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessTimerOrBlockTask(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !11824 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11828, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata i32 %1, metadata !11829, metadata !DIExpression()), !dbg !11832
  %4 = bitcast i32* %3 to i8*, !dbg !11833
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !11833
  tail call void @vTaskSuspendAll() #21, !dbg !11834
  call void @llvm.dbg.value(metadata i32* %3, metadata !11831, metadata !DIExpression(DW_OP_deref)), !dbg !11832
  %5 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %3) #19, !dbg !11835
  call void @llvm.dbg.value(metadata i32 %5, metadata !11830, metadata !DIExpression()), !dbg !11832
  %6 = load i32, i32* %3, align 4, !dbg !11837
  call void @llvm.dbg.value(metadata i32 %6, metadata !11831, metadata !DIExpression()), !dbg !11832
  %7 = icmp eq i32 %6, 0, !dbg !11839
  br i1 %7, label %8, label %20, !dbg !11840

8:                                                ; preds = %2
  %9 = icmp ne i32 %1, 0, !dbg !11841
  %10 = icmp ult i32 %5, %0
  %11 = select i1 %9, i1 true, i1 %10, !dbg !11844
  br i1 %11, label %14, label %12, !dbg !11844

12:                                               ; preds = %8
  %13 = tail call i32 @xTaskResumeAll() #21, !dbg !11845
  tail call fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %5) #19, !dbg !11847
  br label %22, !dbg !11848

14:                                               ; preds = %8
  %15 = load i8*, i8** @xTimerQueue, align 4, !dbg !11849
  %16 = sub i32 %0, %5, !dbg !11851
  tail call void @vQueueWaitForMessageRestricted(i8* noundef %15, i32 noundef %16) #21, !dbg !11852
  %17 = tail call i32 @xTaskResumeAll() #21, !dbg !11853
  %18 = icmp eq i32 %17, 0, !dbg !11855
  br i1 %18, label %19, label %22, !dbg !11856

19:                                               ; preds = %14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11857
  tail call void asm sideeffect "dsb", ""() #20, !dbg !11857, !srcloc !11860
  tail call void asm sideeffect "isb", ""() #20, !dbg !11857, !srcloc !11861
  br label %22, !dbg !11862

20:                                               ; preds = %2
  %21 = tail call i32 @xTaskResumeAll() #21, !dbg !11863
  br label %22

22:                                               ; preds = %12, %14, %19, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !11865
  ret void, !dbg !11865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessReceivedCommands() unnamed_addr #3 !dbg !11866 {
  %1 = alloca %struct.tmrTimerQueueMessage, align 4
  %2 = alloca i32, align 4
  %3 = bitcast %struct.tmrTimerQueueMessage* %1 to i8*, !dbg !11886
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #20, !dbg !11886
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %1, metadata !11868, metadata !DIExpression()), !dbg !11887
  %4 = bitcast i32* %2 to i8*, !dbg !11888
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !11888
  %5 = load i8*, i8** @xTimerQueue, align 4, !dbg !11889
  %6 = call i32 @xQueueGenericReceive(i8* noundef %5, i8* noundef nonnull %3, i32 noundef 0, i32 noundef 0) #21, !dbg !11889
  %7 = icmp eq i32 %6, 0, !dbg !11890
  br i1 %7, label %63, label %8, !dbg !11891

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 0
  %10 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 0
  br label %12, !dbg !11891

12:                                               ; preds = %8, %59
  %13 = load i32, i32* %9, align 4, !dbg !11892
  %14 = icmp sgt i32 %13, -1, !dbg !11895
  br i1 %14, label %15, label %59, !dbg !11896

15:                                               ; preds = %12
  %16 = load %struct.tmrTimerControl*, %struct.tmrTimerControl** %10, align 4, !dbg !11897
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %16, metadata !11882, metadata !DIExpression()), !dbg !11899
  %17 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, i32 4, !dbg !11900
  %18 = load i8*, i8** %17, align 4, !dbg !11900
  %19 = icmp eq i8* %18, null, !dbg !11900
  br i1 %19, label %23, label %20, !dbg !11902

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, !dbg !11900
  %22 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #21, !dbg !11903
  br label %23, !dbg !11905

23:                                               ; preds = %15, %20
  call void @llvm.dbg.value(metadata i32* %2, metadata !11883, metadata !DIExpression(DW_OP_deref)), !dbg !11899
  %24 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %2) #19, !dbg !11906
  call void @llvm.dbg.value(metadata i32 %24, metadata !11885, metadata !DIExpression()), !dbg !11899
  %25 = load i32, i32* %9, align 4, !dbg !11907
  switch i32 %25, label %59 [
    i32 1, label %26
    i32 6, label %26
    i32 2, label %26
    i32 7, label %26
    i32 0, label %26
    i32 5, label %57
    i32 9, label %47
    i32 4, label %47
  ], !dbg !11908

26:                                               ; preds = %23, %23, %23, %23, %23
  %27 = load i32, i32* %11, align 4, !dbg !11909
  %28 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !11912
  %29 = load i32, i32* %28, align 4, !dbg !11912
  %30 = add i32 %29, %27, !dbg !11913
  %31 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %30, i32 noundef %24, i32 noundef %27) #19, !dbg !11914
  %32 = icmp eq i32 %31, 1, !dbg !11915
  br i1 %32, label %33, label %59, !dbg !11916

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 5, !dbg !11917
  %35 = load void (i8*)*, void (i8*)** %34, align 4, !dbg !11917
  %36 = bitcast %struct.tmrTimerControl* %16 to i8*, !dbg !11919
  call void %35(i8* noundef %36) #21, !dbg !11920
  %37 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 3, !dbg !11921
  %38 = load i32, i32* %37, align 4, !dbg !11921
  %39 = icmp eq i32 %38, 1, !dbg !11923
  br i1 %39, label %40, label %59, !dbg !11924

40:                                               ; preds = %33
  %41 = load i32, i32* %11, align 4, !dbg !11925
  %42 = load i32, i32* %28, align 4, !dbg !11927
  %43 = add i32 %42, %41, !dbg !11928
  %44 = call i32 @xTimerGenericCommand(i8* noundef nonnull %36, i32 noundef 0, i32 noundef %43, i32* noundef null, i32 noundef 0) #19, !dbg !11929
  call void @llvm.dbg.value(metadata i32 %44, metadata !11884, metadata !DIExpression()), !dbg !11899
  %45 = icmp eq i32 %44, 0, !dbg !11930
  br i1 %45, label %46, label %59, !dbg !11932

46:                                               ; preds = %40
  call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 662) #21, !dbg !11933
  br label %59, !dbg !11933

47:                                               ; preds = %23, %23
  %48 = load i32, i32* %11, align 4, !dbg !11935
  %49 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !11936
  store i32 %48, i32* %49, align 4, !dbg !11937
  %50 = icmp eq i32 %48, 0, !dbg !11938
  br i1 %50, label %51, label %53, !dbg !11940

51:                                               ; preds = %47
  call void @platform_assert(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 685) #21, !dbg !11941
  %52 = load i32, i32* %49, align 4, !dbg !11943
  br label %53, !dbg !11941

53:                                               ; preds = %51, %47
  %54 = phi i32 [ %52, %51 ], [ %48, %47 ], !dbg !11943
  %55 = add i32 %54, %24, !dbg !11944
  %56 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %55, i32 noundef %24, i32 noundef %24) #19, !dbg !11945
  br label %59, !dbg !11946

57:                                               ; preds = %23
  %58 = bitcast %struct.tmrTimerControl* %16 to i8*, !dbg !11947
  call void @vPortFree(i8* noundef %58) #21, !dbg !11948
  br label %59, !dbg !11949

59:                                               ; preds = %40, %46, %53, %57, %26, %33, %23, %12
  %60 = load i8*, i8** @xTimerQueue, align 4, !dbg !11889
  %61 = call i32 @xQueueGenericReceive(i8* noundef %60, i8* noundef nonnull %3, i32 noundef 0, i32 noundef 0) #21, !dbg !11889
  %62 = icmp eq i32 %61, 0, !dbg !11890
  br i1 %62, label %63, label %12, !dbg !11891, !llvm.loop !11950

63:                                               ; preds = %59, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !11952
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3) #20, !dbg !11952
  ret void, !dbg !11952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvSampleTimeNow(i32* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !1562 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !1568, metadata !DIExpression()), !dbg !11953
  %2 = tail call i32 @xTaskGetTickCount() #21, !dbg !11954
  call void @llvm.dbg.value(metadata i32 %2, metadata !1569, metadata !DIExpression()), !dbg !11953
  %3 = load i32, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !11955
  %4 = icmp ult i32 %2, %3, !dbg !11957
  br i1 %4, label %5, label %6, !dbg !11958

5:                                                ; preds = %1
  tail call fastcc void @prvSwitchTimerLists() #19, !dbg !11959
  br label %6, !dbg !11961

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 1, %5 ], [ 0, %1 ], !dbg !11962
  store i32 %7, i32* %0, align 4, !dbg !11962
  store i32 %2, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !11963
  ret i32 %2, !dbg !11964
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #3 !dbg !11965 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !11970, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.value(metadata i32 %1, metadata !11971, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.value(metadata i32 %2, metadata !11972, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.value(metadata i32 %3, metadata !11973, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.value(metadata i32 0, metadata !11974, metadata !DIExpression()), !dbg !11975
  %5 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, !dbg !11976
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 0, !dbg !11976
  store i32 %1, i32* %6, align 4, !dbg !11976
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, i32 3, !dbg !11977
  %8 = bitcast i8** %7 to %struct.tmrTimerControl**, !dbg !11977
  store %struct.tmrTimerControl* %0, %struct.tmrTimerControl** %8, align 4, !dbg !11977
  %9 = icmp ugt i32 %1, %2, !dbg !11978
  br i1 %9, label %15, label %10, !dbg !11980

10:                                               ; preds = %4
  %11 = sub i32 %2, %3, !dbg !11981
  %12 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 2, !dbg !11984
  %13 = load i32, i32* %12, align 4, !dbg !11984
  %14 = icmp ult i32 %11, %13, !dbg !11985
  br i1 %14, label %19, label %22, !dbg !11986

15:                                               ; preds = %4
  %16 = icmp uge i32 %2, %3, !dbg !11987
  %17 = icmp ult i32 %1, %3
  %18 = or i1 %16, %17, !dbg !11990
  br i1 %18, label %19, label %22, !dbg !11990

19:                                               ; preds = %15, %10
  %20 = phi %struct.xLIST** [ @pxOverflowTimerList, %10 ], [ @pxCurrentTimerList, %15 ]
  %21 = load %struct.xLIST*, %struct.xLIST** %20, align 4, !dbg !11991
  tail call void @vListInsert(%struct.xLIST* noundef %21, %struct.xLIST_ITEM* noundef nonnull %5) #21, !dbg !11991
  br label %22, !dbg !11992

22:                                               ; preds = %19, %15, %10
  %23 = phi i32 [ 1, %10 ], [ 1, %15 ], [ 0, %19 ], !dbg !11975
  call void @llvm.dbg.value(metadata i32 %23, metadata !11974, metadata !DIExpression()), !dbg !11975
  ret i32 %23, !dbg !11992
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerGenericCommand(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3, i32 noundef %4) local_unnamed_addr #3 !dbg !11993 {
  %6 = alloca %struct.tmrTimerQueueMessage, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11997, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i32 %1, metadata !11998, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i32 %2, metadata !11999, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i32* %3, metadata !12000, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i32 %4, metadata !12001, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i32 0, metadata !12002, metadata !DIExpression()), !dbg !12004
  %7 = bitcast %struct.tmrTimerQueueMessage* %6 to i8*, !dbg !12005
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #20, !dbg !12005
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %6, metadata !12003, metadata !DIExpression()), !dbg !12006
  %8 = load i8*, i8** @xTimerQueue, align 4, !dbg !12007
  %9 = icmp eq i8* %8, null, !dbg !12009
  br i1 %9, label %26, label %10, !dbg !12010

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 0, !dbg !12011
  store i32 %1, i32* %11, align 4, !dbg !12013
  %12 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 0, !dbg !12014
  store i32 %2, i32* %12, align 4, !dbg !12015
  %13 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 1, !dbg !12016
  %14 = bitcast %struct.tmrTimerControl** %13 to i8**, !dbg !12017
  store i8* %0, i8** %14, align 4, !dbg !12017
  %15 = icmp slt i32 %1, 6, !dbg !12018
  br i1 %15, label %16, label %24, !dbg !12020

16:                                               ; preds = %10
  %17 = tail call i32 @xTaskGetSchedulerState() #21, !dbg !12021
  %18 = icmp eq i32 %17, 2, !dbg !12024
  %19 = load i8*, i8** @xTimerQueue, align 4, !dbg !12025
  br i1 %18, label %20, label %22, !dbg !12026

20:                                               ; preds = %16
  %21 = call i32 @xQueueGenericSend(i8* noundef %19, i8* noundef nonnull %7, i32 noundef %4, i32 noundef 0) #21, !dbg !12027
  call void @llvm.dbg.value(metadata i32 %21, metadata !12002, metadata !DIExpression()), !dbg !12004
  br label %26, !dbg !12029

22:                                               ; preds = %16
  %23 = call i32 @xQueueGenericSend(i8* noundef %19, i8* noundef nonnull %7, i32 noundef 0, i32 noundef 0) #21, !dbg !12030
  call void @llvm.dbg.value(metadata i32 %23, metadata !12002, metadata !DIExpression()), !dbg !12004
  br label %26

24:                                               ; preds = %10
  %25 = call i32 @xQueueGenericSendFromISR(i8* noundef nonnull %8, i8* noundef nonnull %7, i32* noundef %3, i32 noundef 0) #21, !dbg !12032
  call void @llvm.dbg.value(metadata i32 %25, metadata !12002, metadata !DIExpression()), !dbg !12004
  br label %26

26:                                               ; preds = %5, %24, %22, %20
  %27 = phi i32 [ %21, %20 ], [ %23, %22 ], [ %25, %24 ], [ 0, %5 ], !dbg !12004
  call void @llvm.dbg.value(metadata i32 %27, metadata !12002, metadata !DIExpression()), !dbg !12004
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #20, !dbg !12034
  ret i32 %27, !dbg !12035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSwitchTimerLists() unnamed_addr #3 !dbg !12036 {
  %1 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !12043
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !12043
  %3 = load i32, i32* %2, align 4, !dbg !12043
  %4 = icmp eq i32 %3, 0, !dbg !12043
  br i1 %4, label %43, label %5, !dbg !12044

5:                                                ; preds = %0, %38
  %6 = phi %struct.xLIST* [ %39, %38 ], [ %1, %0 ]
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !12045
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !12045
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 0, !dbg !12045
  %10 = load i32, i32* %9, align 4, !dbg !12045
  call void @llvm.dbg.value(metadata i32 %10, metadata !12038, metadata !DIExpression()), !dbg !12047
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !12048
  %12 = load i8*, i8** %11, align 4, !dbg !12048
  call void @llvm.dbg.value(metadata i8* %12, metadata !12041, metadata !DIExpression()), !dbg !12047
  %13 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !12049
  %14 = bitcast i8* %13 to %struct.xLIST_ITEM*, !dbg !12049
  %15 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %14) #21, !dbg !12050
  %16 = getelementptr inbounds i8, i8* %12, i32 36, !dbg !12051
  %17 = bitcast i8* %16 to void (i8*)**, !dbg !12051
  %18 = load void (i8*)*, void (i8*)** %17, align 4, !dbg !12051
  tail call void %18(i8* noundef %12) #21, !dbg !12052
  %19 = getelementptr inbounds i8, i8* %12, i32 28, !dbg !12053
  %20 = bitcast i8* %19 to i32*, !dbg !12053
  %21 = load i32, i32* %20, align 4, !dbg !12053
  %22 = icmp eq i32 %21, 1, !dbg !12055
  br i1 %22, label %23, label %38, !dbg !12056

23:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* %12, metadata !12041, metadata !DIExpression()), !dbg !12047
  %24 = getelementptr inbounds i8, i8* %12, i32 24, !dbg !12057
  %25 = bitcast i8* %24 to i32*, !dbg !12057
  %26 = load i32, i32* %25, align 4, !dbg !12057
  %27 = add i32 %26, %10, !dbg !12059
  call void @llvm.dbg.value(metadata i32 %27, metadata !12039, metadata !DIExpression()), !dbg !12047
  %28 = icmp ugt i32 %27, %10, !dbg !12060
  br i1 %28, label %29, label %34, !dbg !12062

29:                                               ; preds = %23
  %30 = bitcast i8* %13 to i32*, !dbg !12063
  store i32 %27, i32* %30, align 4, !dbg !12063
  %31 = getelementptr inbounds i8, i8* %12, i32 16, !dbg !12065
  %32 = bitcast i8* %31 to i8**, !dbg !12065
  store i8* %12, i8** %32, align 4, !dbg !12065
  %33 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !12066
  tail call void @vListInsert(%struct.xLIST* noundef %33, %struct.xLIST_ITEM* noundef nonnull %14) #21, !dbg !12067
  br label %38, !dbg !12068

34:                                               ; preds = %23
  %35 = tail call i32 @xTimerGenericCommand(i8* noundef nonnull %12, i32 noundef 0, i32 noundef %10, i32* noundef null, i32 noundef 0) #19, !dbg !12069
  call void @llvm.dbg.value(metadata i32 %35, metadata !12042, metadata !DIExpression()), !dbg !12047
  %36 = icmp eq i32 %35, 0, !dbg !12071
  br i1 %36, label %37, label %38, !dbg !12073

37:                                               ; preds = %34
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 754) #21, !dbg !12074
  br label %38, !dbg !12074

38:                                               ; preds = %34, %37, %5, %29
  %39 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !12043
  %40 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %39, i32 0, i32 0, !dbg !12043
  %41 = load i32, i32* %40, align 4, !dbg !12043
  %42 = icmp eq i32 %41, 0, !dbg !12043
  br i1 %42, label %43, label %5, !dbg !12044, !llvm.loop !12076

43:                                               ; preds = %38, %0
  %44 = phi %struct.xLIST* [ %1, %0 ], [ %39, %38 ], !dbg !12043
  call void @llvm.dbg.value(metadata %struct.xLIST* %44, metadata !12040, metadata !DIExpression()), !dbg !12047
  %45 = load %struct.xLIST*, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !12078
  store %struct.xLIST* %45, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !12079
  store %struct.xLIST* %44, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !12080
  ret void, !dbg !12081
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12086, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.value(metadata i32 %1, metadata !12087, metadata !DIExpression()), !dbg !12090
  %3 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !12091
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %3, i32 0, i32 2, i32 1, !dbg !12091
  %5 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %4, align 4, !dbg !12091
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 3, !dbg !12091
  %7 = load i8*, i8** %6, align 4, !dbg !12091
  call void @llvm.dbg.value(metadata i8* %7, metadata !12089, metadata !DIExpression()), !dbg !12090
  %8 = getelementptr inbounds i8, i8* %7, i32 4, !dbg !12092
  %9 = bitcast i8* %8 to %struct.xLIST_ITEM*, !dbg !12092
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #21, !dbg !12093
  %11 = getelementptr inbounds i8, i8* %7, i32 28, !dbg !12094
  %12 = bitcast i8* %11 to i32*, !dbg !12094
  %13 = load i32, i32* %12, align 4, !dbg !12094
  %14 = icmp eq i32 %13, 1, !dbg !12096
  br i1 %14, label %15, label %27, !dbg !12097

15:                                               ; preds = %2
  %16 = bitcast i8* %7 to %struct.tmrTimerControl*, !dbg !12098
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %16, metadata !12089, metadata !DIExpression()), !dbg !12090
  %17 = getelementptr inbounds i8, i8* %7, i32 24, !dbg !12099
  %18 = bitcast i8* %17 to i32*, !dbg !12099
  %19 = load i32, i32* %18, align 4, !dbg !12099
  %20 = add i32 %19, %0, !dbg !12102
  %21 = tail call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef %16, i32 noundef %20, i32 noundef %1, i32 noundef %0) #19, !dbg !12103
  %22 = icmp eq i32 %21, 1, !dbg !12104
  br i1 %22, label %23, label %27, !dbg !12105

23:                                               ; preds = %15
  %24 = tail call i32 @xTimerGenericCommand(i8* noundef nonnull %7, i32 noundef 0, i32 noundef %0, i32* noundef null, i32 noundef 0) #19, !dbg !12106
  call void @llvm.dbg.value(metadata i32 %24, metadata !12088, metadata !DIExpression()), !dbg !12090
  %25 = icmp eq i32 %24, 0, !dbg !12108
  br i1 %25, label %26, label %27, !dbg !12110

26:                                               ; preds = %23
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 400) #21, !dbg !12111
  br label %27, !dbg !12111

27:                                               ; preds = %23, %26, %2, %15
  %28 = getelementptr inbounds i8, i8* %7, i32 36, !dbg !12113
  %29 = bitcast i8* %28 to void (i8*)**, !dbg !12113
  %30 = load void (i8*)*, void (i8*)** %29, align 4, !dbg !12113
  tail call void %30(i8* noundef nonnull %7) #21, !dbg !12114
  ret void, !dbg !12115
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xTimerCreate(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, void (i8*)* noundef %4) local_unnamed_addr #3 !dbg !12116 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12120, metadata !DIExpression()), !dbg !12126
  call void @llvm.dbg.value(metadata i32 %1, metadata !12121, metadata !DIExpression()), !dbg !12126
  call void @llvm.dbg.value(metadata i32 %2, metadata !12122, metadata !DIExpression()), !dbg !12126
  call void @llvm.dbg.value(metadata i8* %3, metadata !12123, metadata !DIExpression()), !dbg !12126
  call void @llvm.dbg.value(metadata void (i8*)* %4, metadata !12124, metadata !DIExpression()), !dbg !12126
  %6 = icmp eq i32 %1, 0, !dbg !12127
  br i1 %6, label %22, label %7, !dbg !12129

7:                                                ; preds = %5
  %8 = tail call i8* @pvPortMalloc(i32 noundef 44) #21, !dbg !12130
  call void @llvm.dbg.value(metadata i8* %8, metadata !12125, metadata !DIExpression()), !dbg !12126
  %9 = icmp eq i8* %8, null, !dbg !12132
  br i1 %9, label %23, label %10, !dbg !12134

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %8, metadata !12125, metadata !DIExpression()), !dbg !12126
  tail call fastcc void @prvCheckForValidListAndQueue() #19, !dbg !12135
  %11 = bitcast i8* %8 to i8**, !dbg !12137
  store i8* %0, i8** %11, align 4, !dbg !12138
  %12 = getelementptr inbounds i8, i8* %8, i32 24, !dbg !12139
  %13 = bitcast i8* %12 to i32*, !dbg !12139
  store i32 %1, i32* %13, align 4, !dbg !12140
  %14 = getelementptr inbounds i8, i8* %8, i32 28, !dbg !12141
  %15 = bitcast i8* %14 to i32*, !dbg !12141
  store i32 %2, i32* %15, align 4, !dbg !12142
  %16 = getelementptr inbounds i8, i8* %8, i32 32, !dbg !12143
  %17 = bitcast i8* %16 to i8**, !dbg !12143
  store i8* %3, i8** %17, align 4, !dbg !12144
  %18 = getelementptr inbounds i8, i8* %8, i32 36, !dbg !12145
  %19 = bitcast i8* %18 to void (i8*)**, !dbg !12145
  store void (i8*)* %4, void (i8*)** %19, align 4, !dbg !12146
  %20 = getelementptr inbounds i8, i8* %8, i32 4, !dbg !12147
  %21 = bitcast i8* %20 to %struct.xLIST_ITEM*, !dbg !12147
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %21) #21, !dbg !12148
  br label %23, !dbg !12149

22:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* undef, metadata !12125, metadata !DIExpression()), !dbg !12126
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.194, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.189, i32 0, i32 0), i32 noundef 310) #21, !dbg !12150
  br label %23, !dbg !12150

23:                                               ; preds = %7, %10, %22
  %24 = phi i8* [ null, %22 ], [ null, %7 ], [ %8, %10 ]
  ret i8* %24, !dbg !12153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @pcTimerGetTimerName(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !12154 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12158, metadata !DIExpression()), !dbg !12160
  call void @llvm.dbg.value(metadata i8* %0, metadata !12159, metadata !DIExpression()), !dbg !12160
  %2 = bitcast i8* %0 to i8**, !dbg !12161
  %3 = load i8*, i8** %2, align 4, !dbg !12161
  ret i8* %3, !dbg !12162
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerIsTimerActive(i8* nocapture noundef readonly %0) local_unnamed_addr #3 !dbg !12163 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12167, metadata !DIExpression()), !dbg !12170
  call void @llvm.dbg.value(metadata i8* %0, metadata !12169, metadata !DIExpression()), !dbg !12170
  tail call void @vPortEnterCritical() #21, !dbg !12171
  %2 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !12172
  %3 = bitcast i8* %2 to i8**, !dbg !12172
  %4 = load i8*, i8** %3, align 4, !dbg !12172
  %5 = icmp ne i8* %4, null, !dbg !12172
  %6 = zext i1 %5 to i32, !dbg !12174
  call void @llvm.dbg.value(metadata i32 %6, metadata !12168, metadata !DIExpression()), !dbg !12170
  tail call void @vPortExitCritical() #21, !dbg !12175
  ret i32 %6, !dbg !12176
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @pvTimerGetTimerID(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !12177 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12182, metadata !DIExpression()), !dbg !12184
  call void @llvm.dbg.value(metadata i8* %0, metadata !12183, metadata !DIExpression()), !dbg !12184
  %2 = getelementptr inbounds i8, i8* %0, i32 32, !dbg !12185
  %3 = bitcast i8* %2 to i8**, !dbg !12185
  %4 = load i8*, i8** %3, align 4, !dbg !12185
  ret i8* %4, !dbg !12186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local nonnull i32* @pxPortInitialiseStack(i32* noundef writeonly %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #5 !dbg !12187 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !12191, metadata !DIExpression()), !dbg !12194
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !12192, metadata !DIExpression()), !dbg !12194
  call void @llvm.dbg.value(metadata i8* %2, metadata !12193, metadata !DIExpression()), !dbg !12194
  %4 = getelementptr inbounds i32, i32* %0, i32 -1, !dbg !12195
  call void @llvm.dbg.value(metadata i32* %4, metadata !12191, metadata !DIExpression()), !dbg !12194
  store i32 16777216, i32* %4, align 4, !dbg !12196
  %5 = getelementptr inbounds i32, i32* %0, i32 -2, !dbg !12197
  call void @llvm.dbg.value(metadata i32* %5, metadata !12191, metadata !DIExpression()), !dbg !12194
  %6 = ptrtoint void (i8*)* %1 to i32, !dbg !12198
  store i32 %6, i32* %5, align 4, !dbg !12199
  %7 = getelementptr inbounds i32, i32* %0, i32 -3, !dbg !12200
  call void @llvm.dbg.value(metadata i32* %7, metadata !12191, metadata !DIExpression()), !dbg !12194
  store i32 ptrtoint (void ()* @prvTaskExitError to i32), i32* %7, align 4, !dbg !12201
  %8 = getelementptr inbounds i32, i32* %0, i32 -8, !dbg !12202
  call void @llvm.dbg.value(metadata i32* %8, metadata !12191, metadata !DIExpression()), !dbg !12194
  %9 = ptrtoint i8* %2 to i32, !dbg !12203
  store i32 %9, i32* %8, align 4, !dbg !12204
  %10 = getelementptr inbounds i32, i32* %0, i32 -9, !dbg !12205
  call void @llvm.dbg.value(metadata i32* %10, metadata !12191, metadata !DIExpression()), !dbg !12194
  store i32 -3, i32* %10, align 4, !dbg !12206
  %11 = getelementptr inbounds i32, i32* %0, i32 -17, !dbg !12207
  call void @llvm.dbg.value(metadata i32* %11, metadata !12191, metadata !DIExpression()), !dbg !12194
  ret i32* %11, !dbg !12208
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTaskExitError() #13 !dbg !12209 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !12210
  %2 = icmp eq i32 %1, -1, !dbg !12210
  br i1 %2, label %4, label %3, !dbg !12212

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.197, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.198, i32 0, i32 0), i32 noundef 260) #21, !dbg !12213
  br label %4, !dbg !12213

4:                                                ; preds = %3, %0
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #20, !dbg !12215, !srcloc !12220
  call void @llvm.dbg.value(metadata i32 %5, metadata !12218, metadata !DIExpression()) #20, !dbg !12221
  br label %6, !dbg !12222

6:                                                ; preds = %6, %4
  br label %6, !dbg !12223, !llvm.loop !12226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortCurrentTaskStackOverflowCheck() local_unnamed_addr #3 !dbg !12229 {
  %1 = tail call i32 @uxTaskGetBottomOfStack(i8* noundef null) #21, !dbg !12233
  call void @llvm.dbg.value(metadata i32 %1, metadata !12231, metadata !DIExpression()), !dbg !12234
  %2 = tail call i32 @hal_dwt_request_watchpoint(i32 noundef 3, i32 noundef %1, i32 noundef 3, i32 noundef 6) #21, !dbg !12235
  call void @llvm.dbg.value(metadata i32 %2, metadata !12232, metadata !DIExpression()), !dbg !12234
  ret void, !dbg !12236
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @SVC_Handler() #17 section ".ramTEXT" !dbg !12237 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\0A\09cpsie i \09\09\09\09\09\09\0A\09bl hal_dwt_init                 \0A\09bl vPortCurrentTaskStackOverflowCheck \0A\09ldr\09r3, pxCurrentTCBConst2\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\0A\09msr psp, r0\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\0A\09mov r0, #0 \09\09\09\09\09\09\0A\09msr\09basepri, r0\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\0ApxCurrentTCBConst2: .word pxCurrentTCB\09\09\09\09\0A", ""() #20, !dbg !12238, !srcloc !12239
  unreachable, !dbg !12240
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @xPortStartScheduler() local_unnamed_addr #13 !dbg !12241 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = bitcast i32* %1 to i8*, !dbg !12248
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12248
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12243, metadata !DIExpression()), !dbg !12249
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -536812544 to i8*), metadata !12245, metadata !DIExpression()), !dbg !12250
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !12251
  call void @llvm.dbg.declare(metadata i8* %2, metadata !12247, metadata !DIExpression()), !dbg !12252
  %4 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !12253
  %5 = zext i8 %4 to i32, !dbg !12253
  store volatile i32 %5, i32* %1, align 4, !dbg !12254
  store volatile i8 -1, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !12255
  %6 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !12256
  store volatile i8 %6, i8* %2, align 1, !dbg !12257
  %7 = load volatile i8, i8* %2, align 1, !dbg !12258
  %8 = and i8 %7, -128, !dbg !12259
  store i8 %8, i8* @ucMaxSysCallPriority, align 1, !dbg !12260
  %9 = load volatile i8, i8* %2, align 1, !dbg !12261
  %10 = icmp slt i8 %9, 0, !dbg !12262
  br i1 %10, label %11, label %21, !dbg !12263

11:                                               ; preds = %0, %11
  %12 = phi i32 [ %13, %11 ], [ 7, %0 ], !dbg !12264
  %13 = add i32 %12, -1, !dbg !12264
  %14 = load volatile i8, i8* %2, align 1, !dbg !12266
  %15 = shl i8 %14, 1, !dbg !12266
  store volatile i8 %15, i8* %2, align 1, !dbg !12266
  %16 = load volatile i8, i8* %2, align 1, !dbg !12261
  %17 = icmp slt i8 %16, 0, !dbg !12262
  br i1 %17, label %11, label %18, !dbg !12263, !llvm.loop !12267

18:                                               ; preds = %11
  %19 = shl i32 %13, 8, !dbg !12269
  %20 = and i32 %19, 1792, !dbg !12269
  br label %21, !dbg !12269

21:                                               ; preds = %18, %0
  %22 = phi i32 [ %20, %18 ], [ 1792, %0 ]
  store i32 %22, i32* @ulMaxPRIGROUPValue, align 4, !dbg !12270
  %23 = load volatile i32, i32* %1, align 4, !dbg !12271
  %24 = trunc i32 %23 to i8, !dbg !12271
  store volatile i8 %24, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !12272
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !12273
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12273
  %25 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !12274
  %26 = or i32 %25, 14680064, !dbg !12274
  store volatile i32 %26, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !12274
  %27 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !12275
  %28 = or i32 %27, -2147483648, !dbg !12275
  store volatile i32 %28, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !12275
  tail call void @vPortSetupTimerInterrupt() #19, !dbg !12276
  store i32 0, i32* @uxCriticalNesting, align 4, !dbg !12277
  tail call void @vPortEnableVFP() #19, !dbg !12278
  %29 = load volatile i32, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !12279
  %30 = or i32 %29, -1073741824, !dbg !12279
  store volatile i32 %30, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !12279
  tail call void @prvPortStartFirstTask() #19, !dbg !12280
  tail call void @prvTaskExitError() #19, !dbg !12281
  unreachable, !dbg !12282
}

; Function Attrs: naked noinline nounwind optsize
define internal void @vPortEnableVFP() #17 !dbg !12283 {
  tail call void asm sideeffect "\09ldr.w r0, =0xE000ED88\09\09\0A\09ldr r1, [r0]\09\09\09\09\0A\09\09\09\09\09\09\09\09\0A\09orr r1, r1, #( 0xf << 20 )\09\0A\09str r1, [r0]\09\09\09\09\0A\09bx r14\09\09\09\09\09\09", ""() #20, !dbg !12284, !srcloc !12285
  unreachable, !dbg !12286
}

; Function Attrs: naked noinline nounwind optsize
define internal void @prvPortStartFirstTask() #17 !dbg !12287 {
  tail call void asm sideeffect " ldr r0, =0xE000ED08 \09\0A ldr r0, [r0] \09\09\09\0A ldr r0, [r0] \09\09\09\0A msr msp, r0\09\09\09\0A cpsie i\09\09\09\09\0A cpsie f\09\09\09\09\0A dsb\09\09\09\09\09\0A isb\09\09\09\09\09\0A svc 0\09\09\09\09\09\0A nop\09\09\09\09\09\0A", ""() #20, !dbg !12288, !srcloc !12289
  unreachable, !dbg !12290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEndScheduler() local_unnamed_addr #3 !dbg !12291 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !12292
  %2 = icmp eq i32 %1, 1000, !dbg !12292
  br i1 %2, label %4, label %3, !dbg !12294

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.203, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.198, i32 0, i32 0), i32 noundef 421) #21, !dbg !12295
  br label %4, !dbg !12295

4:                                                ; preds = %3, %0
  ret void, !dbg !12297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEnterCritical() local_unnamed_addr #3 !dbg !12298 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #20, !dbg !12299, !srcloc !12220
  call void @llvm.dbg.value(metadata i32 %1, metadata !12218, metadata !DIExpression()) #20, !dbg !12301
  %2 = load i32, i32* @uxCriticalNesting, align 4, !dbg !12302
  %3 = add i32 %2, 1, !dbg !12302
  store i32 %3, i32* @uxCriticalNesting, align 4, !dbg !12302
  %4 = icmp eq i32 %2, 0, !dbg !12303
  br i1 %4, label %5, label %10, !dbg !12305

5:                                                ; preds = %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !12306
  %7 = and i32 %6, 255, !dbg !12306
  %8 = icmp eq i32 %7, 0, !dbg !12306
  br i1 %8, label %10, label %9, !dbg !12309

9:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.206, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.198, i32 0, i32 0), i32 noundef 437) #21, !dbg !12310
  br label %10, !dbg !12310

10:                                               ; preds = %5, %9, %0
  ret void, !dbg !12312
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortExitCritical() local_unnamed_addr #3 !dbg !12313 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !12314
  %2 = icmp eq i32 %1, 0, !dbg !12314
  br i1 %2, label %3, label %5, !dbg !12316

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.209, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.198, i32 0, i32 0), i32 noundef 444) #21, !dbg !12317
  %4 = load i32, i32* @uxCriticalNesting, align 4, !dbg !12319
  br label %5, !dbg !12317

5:                                                ; preds = %3, %0
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !12319
  %7 = add i32 %6, -1, !dbg !12319
  store i32 %7, i32* @uxCriticalNesting, align 4, !dbg !12319
  %8 = icmp eq i32 %7, 0, !dbg !12320
  br i1 %8, label %9, label %10, !dbg !12322

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 0, metadata !12323, metadata !DIExpression()) #20, !dbg !12326
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 0) #20, !dbg !12329, !srcloc !12330
  br label %10, !dbg !12331

10:                                               ; preds = %9, %5
  ret void, !dbg !12332
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @PendSV_Handler() #17 section ".ramTEXT" !dbg !12333 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\09\0A\09push {lr}\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\09\0A\09pop  {lr}\09\09\09\09\09\09\09\0A\09cpsie i \09\09\09\09\09\09\09\0A\09mrs r0, psp\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr\09r3, pxCurrentTCBConst\09\09\09\0A\09ldr\09r2, [r3]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vstmdbeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09str r0, [r2]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb sp!, {r3}\09\09\09\09\09\09\0A\09mov r0, $0 \09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\0A   isb\09\09\09\09\09\09\09\09\09\0A\09bl vTaskSwitchContext\09\09\09\09\0A\09bl vPortCurrentTaskStackOverflowCheck\0A\09mov r0, #0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09ldmia sp!, {r3}\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vldmiaeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\09\0ApxCurrentTCBConst: .word pxCurrentTCB\09\0A", "i"(i32 128) #20, !dbg !12334, !srcloc !12335
  unreachable, !dbg !12336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SysTick_Handler() local_unnamed_addr #3 section ".ramTEXT" !dbg !12337 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !12340, !srcloc !12346
  call void @llvm.dbg.value(metadata i32 undef, metadata !12343, metadata !DIExpression()) #20, !dbg !12347
  call void @llvm.dbg.value(metadata i32 undef, metadata !12344, metadata !DIExpression()) #20, !dbg !12347
  call void @llvm.dbg.value(metadata i32 undef, metadata !12339, metadata !DIExpression()), !dbg !12348
  tail call void @Flash_ReturnReady() #21, !dbg !12349
  %2 = tail call i32 @xTaskIncrementTick() #21, !dbg !12351
  %3 = icmp eq i32 %2, 0, !dbg !12353
  br i1 %3, label %5, label %4, !dbg !12354

4:                                                ; preds = %0
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !12355
  br label %5, !dbg !12357

5:                                                ; preds = %4, %0
  %6 = extractvalue { i32, i32 } %1, 0, !dbg !12340
  call void @llvm.dbg.value(metadata i32 %6, metadata !12343, metadata !DIExpression()) #20, !dbg !12347
  call void @llvm.dbg.value(metadata i32 %6, metadata !12339, metadata !DIExpression()), !dbg !12348
  call void @llvm.dbg.value(metadata i32 undef, metadata !12323, metadata !DIExpression()) #20, !dbg !12358
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #20, !dbg !12360, !srcloc !12330
  ret void, !dbg !12361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortValidateInterruptPriority() local_unnamed_addr #3 !dbg !12362 {
  %1 = tail call i32 asm sideeffect "mrs $0, ipsr", "=r"() #20, !dbg !12366, !srcloc !12367
  call void @llvm.dbg.value(metadata i32 %1, metadata !12364, metadata !DIExpression()), !dbg !12368
  %2 = icmp ugt i32 %1, 15, !dbg !12369
  br i1 %2, label %3, label %9, !dbg !12371

3:                                                ; preds = %0
  %4 = getelementptr inbounds i8, i8* inttoptr (i32 -536812560 to i8*), i32 %1, !dbg !12372
  %5 = load volatile i8, i8* %4, align 1, !dbg !12372
  call void @llvm.dbg.value(metadata i8 %5, metadata !12365, metadata !DIExpression()), !dbg !12368
  %6 = load i8, i8* @ucMaxSysCallPriority, align 1, !dbg !12374
  %7 = icmp ult i8 %5, %6, !dbg !12374
  br i1 %7, label %8, label %9, !dbg !12376

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4.212, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.198, i32 0, i32 0), i32 noundef 794) #21, !dbg !12377
  br label %9, !dbg !12377

9:                                                ; preds = %3, %8, %0
  %10 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !12379
  %11 = and i32 %10, 1792, !dbg !12379
  %12 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !12379
  %13 = icmp ugt i32 %11, %12, !dbg !12379
  br i1 %13, label %14, label %15, !dbg !12381

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5.213, i32 0, i32 0), i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1.198, i32 0, i32 0), i32 noundef 810) #21, !dbg !12382
  br label %15, !dbg !12382

15:                                               ; preds = %14, %9
  ret void, !dbg !12384
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMalloc(i32 noundef %0) local_unnamed_addr #3 !dbg !12385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12389, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata i8* null, metadata !12393, metadata !DIExpression()), !dbg !12394
  tail call void @vTaskSuspendAll() #21, !dbg !12395
  %2 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !12396
  %3 = icmp eq %struct.A_BLOCK_LINK* %2, null, !dbg !12399
  br i1 %3, label %4, label %5, !dbg !12400

4:                                                ; preds = %1
  tail call fastcc void @prvHeapInit() #19, !dbg !12401
  br label %5, !dbg !12403

5:                                                ; preds = %1, %4
  %6 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !12404
  %7 = select i1 %6, i32 -2147483648, i32 0, !dbg !12404
  %8 = and i32 %7, %0, !dbg !12406
  %9 = icmp ne i32 %8, 0, !dbg !12407
  %10 = icmp eq i32 %0, 0
  %11 = or i1 %10, %9, !dbg !12408
  br i1 %11, label %84, label %12, !dbg !12408

12:                                               ; preds = %5
  %13 = add i32 %0, 8, !dbg !12409
  call void @llvm.dbg.value(metadata i32 %13, metadata !12389, metadata !DIExpression()), !dbg !12394
  %14 = and i32 %0, 7, !dbg !12413
  %15 = icmp eq i32 %14, 0, !dbg !12415
  %16 = add i32 %0, 16, !dbg !12416
  %17 = and i32 %16, -8, !dbg !12416
  %18 = select i1 %15, i32 %13, i32 %17, !dbg !12416
  call void @llvm.dbg.value(metadata i32 %18, metadata !12389, metadata !DIExpression()), !dbg !12394
  %19 = icmp eq i32 %18, 0, !dbg !12417
  %20 = load i32, i32* @xFreeBytesRemaining, align 4
  %21 = icmp ugt i32 %18, %20
  %22 = select i1 %19, i1 true, i1 %21, !dbg !12419
  br i1 %22, label %84, label %23, !dbg !12419

23:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !12391, metadata !DIExpression()), !dbg !12394
  %24 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !12420
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !12390, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !12391, metadata !DIExpression()), !dbg !12394
  %25 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 1, !dbg !12422
  %26 = load i32, i32* %25, align 4, !dbg !12422
  %27 = icmp ult i32 %26, %18, !dbg !12423
  br i1 %27, label %28, label %42, !dbg !12424

28:                                               ; preds = %23
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !12391, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !12390, metadata !DIExpression()), !dbg !12394
  %29 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 0, !dbg !12425
  %30 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %29, align 4, !dbg !12425
  %31 = icmp eq %struct.A_BLOCK_LINK* %30, null, !dbg !12426
  br i1 %31, label %42, label %32, !dbg !12427, !llvm.loop !12428

32:                                               ; preds = %28, %38
  %33 = phi %struct.A_BLOCK_LINK* [ %40, %38 ], [ %30, %28 ]
  %34 = phi %struct.A_BLOCK_LINK* [ %33, %38 ], [ %24, %28 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !12390, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !12391, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !12390, metadata !DIExpression()), !dbg !12394
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 1, !dbg !12422
  %36 = load i32, i32* %35, align 4, !dbg !12422
  %37 = icmp ult i32 %36, %18, !dbg !12423
  br i1 %37, label %38, label %42, !dbg !12424, !llvm.loop !12428

38:                                               ; preds = %32
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !12391, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !12390, metadata !DIExpression()), !dbg !12394
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 0, !dbg !12425
  %40 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %39, align 4, !dbg !12425
  %41 = icmp eq %struct.A_BLOCK_LINK* %40, null, !dbg !12426
  br i1 %41, label %42, label %32, !dbg !12427, !llvm.loop !12428

42:                                               ; preds = %32, %38, %28, %23
  %43 = phi %struct.A_BLOCK_LINK* [ %24, %23 ], [ %24, %28 ], [ %33, %38 ], [ %33, %32 ]
  %44 = phi %struct.A_BLOCK_LINK* [ @xStart, %23 ], [ @xStart, %28 ], [ %34, %38 ], [ %34, %32 ], !dbg !12430
  %45 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 1, !dbg !12422
  %46 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !12431
  %47 = icmp eq %struct.A_BLOCK_LINK* %43, %46, !dbg !12433
  br i1 %47, label %84, label %48, !dbg !12434

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %44, i32 0, i32 0, !dbg !12435
  %50 = bitcast %struct.A_BLOCK_LINK* %44 to i8**, !dbg !12435
  %51 = load i8*, i8** %50, align 4, !dbg !12435
  %52 = getelementptr inbounds i8, i8* %51, i32 8, !dbg !12437
  call void @llvm.dbg.value(metadata i8* %52, metadata !12393, metadata !DIExpression()), !dbg !12394
  %53 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 0, !dbg !12438
  %54 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %53, align 4, !dbg !12438
  store %struct.A_BLOCK_LINK* %54, %struct.A_BLOCK_LINK** %49, align 4, !dbg !12439
  %55 = load i32, i32* %45, align 4, !dbg !12440
  %56 = sub i32 %55, %18, !dbg !12442
  %57 = icmp ugt i32 %56, 16, !dbg !12443
  br i1 %57, label %58, label %73, !dbg !12444

58:                                               ; preds = %48
  %59 = bitcast %struct.A_BLOCK_LINK* %43 to i8*, !dbg !12445
  %60 = getelementptr inbounds i8, i8* %59, i32 %18, !dbg !12447
  %61 = bitcast i8* %60 to %struct.A_BLOCK_LINK*, !dbg !12448
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %61, metadata !12392, metadata !DIExpression()), !dbg !12394
  %62 = ptrtoint i8* %60 to i32, !dbg !12449
  %63 = and i32 %62, 7, !dbg !12449
  %64 = icmp eq i32 %63, 0, !dbg !12449
  br i1 %64, label %68, label %65, !dbg !12451

65:                                               ; preds = %58
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2.216, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.217, i32 0, i32 0), i32 noundef 257) #21, !dbg !12452
  %66 = load i32, i32* %45, align 4, !dbg !12454
  %67 = sub i32 %66, %18, !dbg !12455
  br label %68, !dbg !12452

68:                                               ; preds = %65, %58
  %69 = phi i32 [ %67, %65 ], [ %56, %58 ], !dbg !12455
  %70 = getelementptr inbounds i8, i8* %60, i32 4, !dbg !12456
  %71 = bitcast i8* %70 to i32*, !dbg !12456
  store i32 %69, i32* %71, align 4, !dbg !12457
  store i32 %18, i32* %45, align 4, !dbg !12458
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %61) #19, !dbg !12459
  %72 = load i32, i32* %45, align 4, !dbg !12460
  br label %73, !dbg !12461

73:                                               ; preds = %48, %68
  %74 = phi i32 [ %55, %48 ], [ %72, %68 ], !dbg !12460
  %75 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !12462
  %76 = sub i32 %75, %74, !dbg !12462
  store i32 %76, i32* @xFreeBytesRemaining, align 4, !dbg !12462
  %77 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !12463
  %78 = icmp ult i32 %76, %77, !dbg !12465
  br i1 %78, label %79, label %80, !dbg !12466

79:                                               ; preds = %73
  store i32 %76, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !12467
  br label %80, !dbg !12469

80:                                               ; preds = %73, %79
  %81 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !12470
  %82 = select i1 %81, i32 -2147483648, i32 0, !dbg !12470
  %83 = or i32 %74, %82, !dbg !12471
  store i32 %83, i32* %45, align 4, !dbg !12471
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** %53, align 4, !dbg !12472
  br label %84, !dbg !12473

84:                                               ; preds = %5, %42, %80, %12
  %85 = phi i8* [ %52, %80 ], [ null, %42 ], [ null, %12 ], [ null, %5 ], !dbg !12394
  call void @llvm.dbg.value(metadata i8* %85, metadata !12393, metadata !DIExpression()), !dbg !12394
  %86 = tail call i32 @xTaskResumeAll() #21, !dbg !12474
  %87 = ptrtoint i8* %85 to i32, !dbg !12475
  %88 = and i32 %87, 7, !dbg !12475
  %89 = icmp eq i32 %88, 0, !dbg !12475
  br i1 %89, label %91, label %90, !dbg !12477

90:                                               ; preds = %84
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.217, i32 0, i32 0), i32 noundef 321) #21, !dbg !12478
  br label %91, !dbg !12478

91:                                               ; preds = %90, %84
  ret i8* %85, !dbg !12480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @prvHeapInit() unnamed_addr #15 !dbg !12481 {
  call void @llvm.dbg.value(metadata i32 65536, metadata !12486, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.value(metadata i32 ptrtoint ([65536 x i8]* @ucHeap to i32), metadata !12485, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536), metadata !12486, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), metadata !12485, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !12484, metadata !DIExpression()), !dbg !12487
  store %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !12488
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 1), align 4, !dbg !12489
  call void @llvm.dbg.value(metadata i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), metadata !12485, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.value(metadata i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), metadata !12485, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.value(metadata i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), metadata !12485, metadata !DIExpression()), !dbg !12487
  store %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !12490
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !12491
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 8, !dbg !12492
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !12483, metadata !DIExpression()), !dbg !12487
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !12493
  %1 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !12494
  store %struct.A_BLOCK_LINK* %1, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 4, !dbg !12495
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !12496
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* @xFreeBytesRemaining, align 4, !dbg !12497
  store i1 true, i1* @xBlockAllocatedBit, align 4, !dbg !12498
  ret void, !dbg !12499
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef %0) unnamed_addr #16 !dbg !12500 {
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %0, metadata !12504, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !12505, metadata !DIExpression()), !dbg !12507
  br label %2, !dbg !12508

2:                                                ; preds = %2, %1
  %3 = phi %struct.A_BLOCK_LINK* [ @xStart, %1 ], [ %5, %2 ], !dbg !12510
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !12505, metadata !DIExpression()), !dbg !12507
  %4 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !12511
  %5 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %4, align 4, !dbg !12511
  %6 = icmp ult %struct.A_BLOCK_LINK* %5, %0, !dbg !12513
  br i1 %6, label %2, label %7, !dbg !12514, !llvm.loop !12515

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !12511
  %9 = bitcast %struct.A_BLOCK_LINK* %3 to i8*, !dbg !12517
  call void @llvm.dbg.value(metadata i8* %9, metadata !12506, metadata !DIExpression()), !dbg !12507
  %10 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 1, !dbg !12518
  %11 = load i32, i32* %10, align 4, !dbg !12518
  %12 = getelementptr inbounds i8, i8* %9, i32 %11, !dbg !12520
  %13 = bitcast %struct.A_BLOCK_LINK* %0 to i8*, !dbg !12521
  %14 = icmp eq i8* %12, %13, !dbg !12522
  %15 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4, !dbg !12507
  br i1 %14, label %17, label %19, !dbg !12523

17:                                               ; preds = %7
  %18 = add i32 %16, %11, !dbg !12524
  store i32 %18, i32* %10, align 4, !dbg !12524
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !12504, metadata !DIExpression()), !dbg !12507
  br label %19, !dbg !12526

19:                                               ; preds = %7, %17
  %20 = phi i8* [ %9, %17 ], [ %13, %7 ], !dbg !12527
  %21 = phi i32 [ %18, %17 ], [ %16, %7 ], !dbg !12528
  %22 = phi %struct.A_BLOCK_LINK* [ %3, %17 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %22, metadata !12504, metadata !DIExpression()), !dbg !12507
  call void @llvm.dbg.value(metadata i8* %20, metadata !12506, metadata !DIExpression()), !dbg !12507
  %23 = getelementptr inbounds i8, i8* %20, i32 %21, !dbg !12530
  %24 = bitcast %struct.A_BLOCK_LINK* %5 to i8*, !dbg !12531
  %25 = icmp ne i8* %23, %24, !dbg !12532
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4
  %27 = icmp eq %struct.A_BLOCK_LINK* %5, %26
  %28 = select i1 %25, i1 true, i1 %27, !dbg !12533
  br i1 %28, label %37, label %29, !dbg !12533

29:                                               ; preds = %19
  %30 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 1, !dbg !12528
  %31 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %5, i32 0, i32 1, !dbg !12534
  %32 = load i32, i32* %31, align 4, !dbg !12534
  %33 = add i32 %32, %21, !dbg !12538
  store i32 %33, i32* %30, align 4, !dbg !12538
  %34 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %8, align 4, !dbg !12539
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %34, i32 0, i32 0, !dbg !12540
  %36 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %35, align 4, !dbg !12540
  br label %37, !dbg !12541

37:                                               ; preds = %19, %29
  %38 = phi %struct.A_BLOCK_LINK* [ %36, %29 ], [ %5, %19 ]
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 0, !dbg !12542
  store %struct.A_BLOCK_LINK* %38, %struct.A_BLOCK_LINK** %39, align 4, !dbg !12542
  %40 = icmp eq %struct.A_BLOCK_LINK* %3, %22, !dbg !12543
  br i1 %40, label %42, label %41, !dbg !12545

41:                                               ; preds = %37
  store %struct.A_BLOCK_LINK* %22, %struct.A_BLOCK_LINK** %8, align 4, !dbg !12546
  br label %42, !dbg !12548

42:                                               ; preds = %37, %41
  ret void, !dbg !12549
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFree(i8* noundef %0) local_unnamed_addr #3 !dbg !12550 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12552, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i8* %0, metadata !12553, metadata !DIExpression()), !dbg !12555
  %2 = icmp eq i8* %0, null, !dbg !12556
  br i1 %2, label %35, label %3, !dbg !12558

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !12559
  call void @llvm.dbg.value(metadata i8* %4, metadata !12553, metadata !DIExpression()), !dbg !12555
  %5 = bitcast i8* %4 to %struct.A_BLOCK_LINK*, !dbg !12561
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %5, metadata !12554, metadata !DIExpression()), !dbg !12555
  %6 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !12562
  %7 = bitcast i8* %6 to i32*, !dbg !12562
  %8 = load i32, i32* %7, align 4, !dbg !12562
  %9 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !12562
  %10 = select i1 %9, i32 -2147483648, i32 0, !dbg !12562
  %11 = and i32 %10, %8, !dbg !12562
  %12 = icmp eq i32 %11, 0, !dbg !12562
  br i1 %12, label %13, label %14, !dbg !12564

13:                                               ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.217, i32 0, i32 0), i32 noundef 341) #21, !dbg !12565
  br label %14, !dbg !12565

14:                                               ; preds = %13, %3
  %15 = bitcast i8* %4 to %struct.A_BLOCK_LINK**, !dbg !12567
  %16 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !12567
  %17 = icmp eq %struct.A_BLOCK_LINK* %16, null, !dbg !12567
  br i1 %17, label %19, label %18, !dbg !12569

18:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.217, i32 0, i32 0), i32 noundef 342) #21, !dbg !12570
  br label %19, !dbg !12570

19:                                               ; preds = %18, %14
  %20 = load i32, i32* %7, align 4, !dbg !12572
  %21 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !12574
  %22 = select i1 %21, i32 -2147483648, i32 0, !dbg !12574
  %23 = and i32 %22, %20, !dbg !12575
  %24 = icmp eq i32 %23, 0, !dbg !12576
  br i1 %24, label %35, label %25, !dbg !12577

25:                                               ; preds = %19
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !12578
  %27 = icmp eq %struct.A_BLOCK_LINK* %26, null, !dbg !12581
  br i1 %27, label %28, label %35, !dbg !12582

28:                                               ; preds = %25
  %29 = xor i32 %22, -1, !dbg !12583
  %30 = and i32 %20, %29, !dbg !12585
  store i32 %30, i32* %7, align 4, !dbg !12585
  tail call void @vTaskSuspendAll() #21, !dbg !12586
  %31 = load i32, i32* %7, align 4, !dbg !12587
  %32 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !12589
  %33 = add i32 %32, %31, !dbg !12589
  store i32 %33, i32* @xFreeBytesRemaining, align 4, !dbg !12589
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %5) #19, !dbg !12590
  %34 = tail call i32 @xTaskResumeAll() #21, !dbg !12591
  br label %35, !dbg !12592

35:                                               ; preds = %25, %28, %19, %1
  ret void, !dbg !12593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetFreeHeapSize() local_unnamed_addr #10 !dbg !12594 {
  %1 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !12597
  ret i32 %1, !dbg !12598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetMinimumEverFreeHeapSize() local_unnamed_addr #10 !dbg !12599 {
  %1 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !12600
  ret i32 %1, !dbg !12601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @vPortInitialiseBlocks() local_unnamed_addr #8 !dbg !12602 {
  ret void, !dbg !12603
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12608, metadata !DIExpression()), !dbg !12611
  call void @llvm.dbg.value(metadata i32 %1, metadata !12609, metadata !DIExpression()), !dbg !12611
  %3 = mul i32 %1, %0, !dbg !12612
  %4 = tail call i8* @pvPortMalloc(i32 noundef %3) #19, !dbg !12613
  call void @llvm.dbg.value(metadata i8* %4, metadata !12610, metadata !DIExpression()), !dbg !12611
  %5 = icmp eq i8* %4, null, !dbg !12614
  br i1 %5, label %8, label %6, !dbg !12616

6:                                                ; preds = %2
  %7 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef %3) #21, !dbg !12617
  br label %8, !dbg !12619

8:                                                ; preds = %6, %2
  ret i8* %4, !dbg !12620
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12621 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12625, metadata !DIExpression()), !dbg !12631
  call void @llvm.dbg.value(metadata i32 %1, metadata !12626, metadata !DIExpression()), !dbg !12631
  call void @llvm.dbg.value(metadata i8* null, metadata !12627, metadata !DIExpression()), !dbg !12631
  call void @llvm.dbg.value(metadata i32 0, metadata !12628, metadata !DIExpression()), !dbg !12631
  call void @llvm.dbg.value(metadata i8* %0, metadata !12629, metadata !DIExpression()), !dbg !12631
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* null, metadata !12630, metadata !DIExpression()), !dbg !12631
  %3 = tail call i8* @pvPortCalloc(i32 noundef %1, i32 noundef 1) #19, !dbg !12632
  call void @llvm.dbg.value(metadata i8* %3, metadata !12627, metadata !DIExpression()), !dbg !12631
  %4 = icmp eq i8* %0, null, !dbg !12633
  br i1 %4, label %29, label %5, !dbg !12635

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !12636
  call void @llvm.dbg.value(metadata i8* %6, metadata !12629, metadata !DIExpression()), !dbg !12631
  call void @llvm.dbg.value(metadata i8* %6, metadata !12630, metadata !DIExpression()), !dbg !12631
  %7 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !12638
  %8 = bitcast i8* %7 to i32*, !dbg !12638
  %9 = load i32, i32* %8, align 4, !dbg !12638
  %10 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !12638
  %11 = select i1 %10, i32 -2147483648, i32 0, !dbg !12638
  %12 = and i32 %11, %9, !dbg !12638
  %13 = icmp eq i32 %12, 0, !dbg !12638
  br i1 %13, label %14, label %15, !dbg !12640

14:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.217, i32 0, i32 0), i32 noundef 546) #21, !dbg !12641
  br label %15, !dbg !12641

15:                                               ; preds = %14, %5
  %16 = bitcast i8* %6 to %struct.A_BLOCK_LINK**, !dbg !12643
  %17 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %16, align 4, !dbg !12643
  %18 = icmp eq %struct.A_BLOCK_LINK* %17, null, !dbg !12643
  br i1 %18, label %20, label %19, !dbg !12645

19:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.222, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.217, i32 0, i32 0), i32 noundef 547) #21, !dbg !12646
  br label %20, !dbg !12646

20:                                               ; preds = %19, %15
  %21 = load i32, i32* %8, align 4, !dbg !12648
  %22 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !12649
  %23 = select i1 %22, i32 2147483647, i32 -1, !dbg !12650
  %24 = and i32 %23, %21, !dbg !12651
  call void @llvm.dbg.value(metadata i32 %24, metadata !12628, metadata !DIExpression()), !dbg !12631
  %25 = add i32 %24, -8, !dbg !12652
  call void @llvm.dbg.value(metadata i32 %25, metadata !12628, metadata !DIExpression()), !dbg !12631
  %26 = icmp ult i32 %25, %1, !dbg !12653
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = tail call i8* @memcpy(i8* noundef %3, i8* noundef nonnull %0, i32 noundef %27) #21, !dbg !12655
  tail call void @vPortFree(i8* noundef nonnull %0) #19, !dbg !12656
  br label %29, !dbg !12657

29:                                               ; preds = %20, %2
  ret i8* %3, !dbg !12658
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMallocNC(i32 noundef %0) local_unnamed_addr #3 !dbg !12659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12661, metadata !DIExpression()), !dbg !12662
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #19, !dbg !12663
  ret i8* %2, !dbg !12664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFreeNC(i8* noundef %0) local_unnamed_addr #3 !dbg !12665 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12667, metadata !DIExpression()), !dbg !12668
  tail call void @vPortFree(i8* noundef %0) #19, !dbg !12669
  ret void, !dbg !12670
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_malloc(i32 noundef %0) local_unnamed_addr #3 !dbg !12671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12673, metadata !DIExpression()), !dbg !12674
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #19, !dbg !12675
  ret i8* %2, !dbg !12676
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12679, metadata !DIExpression()), !dbg !12681
  call void @llvm.dbg.value(metadata i32 %1, metadata !12680, metadata !DIExpression()), !dbg !12681
  %3 = tail call i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) #19, !dbg !12682
  ret i8* %3, !dbg !12683
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_realloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12684 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12686, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.value(metadata i32 %1, metadata !12687, metadata !DIExpression()), !dbg !12688
  %3 = tail call i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) #19, !dbg !12689
  ret i8* %3, !dbg !12690
}

; Function Attrs: noinline nounwind optsize
define dso_local void @__wrap_free(i8* noundef %0) local_unnamed_addr #3 !dbg !12691 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12693, metadata !DIExpression()), !dbg !12694
  tail call void @vPortFree(i8* noundef %0) #19, !dbg !12695
  ret void, !dbg !12696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vPortSetupTimerInterrupt() local_unnamed_addr #1 !dbg !12697 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12698
  %2 = udiv i32 %1, 1000, !dbg !12699
  %3 = add nsw i32 %2, -1, !dbg !12700
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12701
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12702
  ret void, !dbg !12703
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @abort() local_unnamed_addr #13 !dbg !12704 {
  tail call void asm sideeffect "cpsid i", ""() #20, !dbg !12705, !srcloc !12706
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12707
  %2 = or i32 %1, 8, !dbg !12707
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12707
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !12708
  br label %3, !dbg !12709

3:                                                ; preds = %3, %0
  br label %3, !dbg !12710, !llvm.loop !12713
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @platform_assert(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !12716 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12720, metadata !DIExpression()), !dbg !12723
  call void @llvm.dbg.value(metadata i8* %1, metadata !12721, metadata !DIExpression()), !dbg !12723
  call void @llvm.dbg.value(metadata i32 %2, metadata !12722, metadata !DIExpression()), !dbg !12723
  tail call void asm sideeffect "cpsid i", ""() #20, !dbg !12724, !srcloc !12725
  %4 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12726
  %5 = or i32 %4, 8, !dbg !12726
  store volatile i32 %5, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12726
  store i1 true, i1* @assert_expr.0, align 4, !dbg !12727
  store i8* %0, i8** @assert_expr.1, align 4, !dbg !12728
  store i8* %1, i8** @assert_expr.2, align 4, !dbg !12729
  store i32 %2, i32* @assert_expr.3, align 4, !dbg !12730
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !12731
  br label %6, !dbg !12732

6:                                                ; preds = %6, %3
  br label %6, !dbg !12733, !llvm.loop !12736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @exception_dump_config(i32 noundef %0) local_unnamed_addr #5 !dbg !12739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12741, metadata !DIExpression()), !dbg !12742
  store i32 %0, i32* @reboot_flag, align 4, !dbg !12743
  ret void, !dbg !12744
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @exception_register_callbacks(%struct.exception_config_type* nocapture noundef readonly %0) local_unnamed_addr #16 !dbg !12745 {
  call void @llvm.dbg.value(metadata %struct.exception_config_type* %0, metadata !12750, metadata !DIExpression()), !dbg !12752
  %2 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !12753
  %3 = icmp sgt i32 %2, 5, !dbg !12755
  br i1 %3, label %30, label %4, !dbg !12756

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !12751, metadata !DIExpression()), !dbg !12752
  %5 = icmp sgt i32 %2, 0, !dbg !12757
  %6 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 0
  %7 = load void ()*, void ()** %6, align 4
  br i1 %5, label %8, label %23, !dbg !12761

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1
  br label %10, !dbg !12761

10:                                               ; preds = %8, %20
  %11 = phi i32 [ 0, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !12751, metadata !DIExpression()), !dbg !12752
  %12 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 0, !dbg !12762
  %13 = load void ()*, void ()** %12, align 4, !dbg !12762
  %14 = icmp eq void ()* %13, %7, !dbg !12765
  br i1 %14, label %15, label %20, !dbg !12766

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 1, !dbg !12767
  %17 = load void ()*, void ()** %16, align 4, !dbg !12767
  %18 = load void ()*, void ()** %9, align 4, !dbg !12768
  %19 = icmp eq void ()* %17, %18, !dbg !12769
  br i1 %19, label %30, label %20, !dbg !12770

20:                                               ; preds = %10, %15
  %21 = add nuw nsw i32 %11, 1, !dbg !12771
  call void @llvm.dbg.value(metadata i32 %21, metadata !12751, metadata !DIExpression()), !dbg !12752
  %22 = icmp eq i32 %21, %2, !dbg !12757
  br i1 %22, label %23, label %10, !dbg !12761, !llvm.loop !12772

23:                                               ; preds = %20, %4
  %24 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 0, !dbg !12774
  store void ()* %7, void ()** %24, align 4, !dbg !12775
  %25 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1, !dbg !12776
  %26 = load void ()*, void ()** %25, align 4, !dbg !12776
  %27 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 1, !dbg !12777
  store void ()* %26, void ()** %27, align 4, !dbg !12778
  %28 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !12779
  %29 = add nsw i32 %28, 1, !dbg !12779
  store i32 %29, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !12779
  br label %30, !dbg !12780

30:                                               ; preds = %15, %1, %23
  %31 = phi i1 [ true, %23 ], [ false, %1 ], [ false, %15 ], !dbg !12781
  ret i1 %31, !dbg !12782
}

; Function Attrs: noinline nounwind optsize
define dso_local void @exception_init() local_unnamed_addr #3 section ".ramTEXT" !dbg !12783 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12786
  %2 = and i32 %1, -9, !dbg !12786
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12786
  tail call void @Flash_ReturnReady() #21, !dbg !12787
  call void @llvm.dbg.value(metadata i32 0, metadata !12785, metadata !DIExpression()), !dbg !12788
  %3 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !12789
  %4 = icmp sgt i32 %3, 0, !dbg !12792
  br i1 %4, label %5, label %17, !dbg !12793

5:                                                ; preds = %0, %13
  %6 = phi i32 [ %14, %13 ], [ %3, %0 ]
  %7 = phi i32 [ %15, %13 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12785, metadata !DIExpression()), !dbg !12788
  %8 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %7, i32 0, !dbg !12794
  %9 = load void ()*, void ()** %8, align 4, !dbg !12794
  %10 = icmp eq void ()* %9, null, !dbg !12797
  br i1 %10, label %13, label %11, !dbg !12798

11:                                               ; preds = %5
  tail call void %9() #21, !dbg !12799
  %12 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !12789
  br label %13, !dbg !12801

13:                                               ; preds = %5, %11
  %14 = phi i32 [ %6, %5 ], [ %12, %11 ], !dbg !12789
  %15 = add nuw nsw i32 %7, 1, !dbg !12802
  call void @llvm.dbg.value(metadata i32 %15, metadata !12785, metadata !DIExpression()), !dbg !12788
  %16 = icmp slt i32 %15, %14, !dbg !12792
  br i1 %16, label %5, label %17, !dbg !12793, !llvm.loop !12803

17:                                               ; preds = %13, %0
  %18 = load i1, i1* @assert_expr.0, align 4, !dbg !12805
  br i1 %18, label %19, label %24, !dbg !12807

19:                                               ; preds = %17
  %20 = load i8*, i8** @assert_expr.1, align 4, !dbg !12808
  %21 = load i8*, i8** @assert_expr.2, align 4, !dbg !12810
  %22 = load i32, i32* @assert_expr.3, align 4, !dbg !12811
  %23 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.227, i32 0, i32 0), i8* noundef %20, i8* noundef %21, i32 noundef %22) #21, !dbg !12812
  br label %24, !dbg !12813

24:                                               ; preds = %19, %17
  ret void, !dbg !12814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @NMI_Handler() local_unnamed_addr #8 !dbg !12815 {
  ret void, !dbg !12816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printUsageErrorMsg(i32 noundef %0) local_unnamed_addr #3 !dbg !12817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12819, metadata !DIExpression()), !dbg !12820
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.228, i32 0, i32 0)) #21, !dbg !12821
  call void @llvm.dbg.value(metadata i32 %0, metadata !12819, metadata !DIExpression(DW_OP_constu, 16, DW_OP_shr, DW_OP_stack_value)), !dbg !12820
  %3 = and i32 %0, 33554432, !dbg !12822
  %4 = icmp eq i32 %3, 0, !dbg !12822
  br i1 %4, label %7, label %5, !dbg !12824

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.229, i32 0, i32 0)) #21, !dbg !12825
  br label %7, !dbg !12827

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16777216, !dbg !12828
  %9 = icmp eq i32 %8, 0, !dbg !12828
  br i1 %9, label %12, label %10, !dbg !12830

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.230, i32 0, i32 0)) #21, !dbg !12831
  br label %12, !dbg !12833

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 524288, !dbg !12834
  %14 = icmp eq i32 %13, 0, !dbg !12834
  br i1 %14, label %17, label %15, !dbg !12836

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.231, i32 0, i32 0)) #21, !dbg !12837
  br label %17, !dbg !12839

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 262144, !dbg !12840
  %19 = icmp eq i32 %18, 0, !dbg !12840
  br i1 %19, label %22, label %20, !dbg !12842

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.232, i32 0, i32 0)) #21, !dbg !12843
  br label %22, !dbg !12845

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 131072, !dbg !12846
  %24 = icmp eq i32 %23, 0, !dbg !12846
  br i1 %24, label %27, label %25, !dbg !12848

25:                                               ; preds = %22
  %26 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.233, i32 0, i32 0)) #21, !dbg !12849
  br label %27, !dbg !12851

27:                                               ; preds = %25, %22
  %28 = and i32 %0, 65536, !dbg !12852
  %29 = icmp eq i32 %28, 0, !dbg !12852
  br i1 %29, label %32, label %30, !dbg !12854

30:                                               ; preds = %27
  %31 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.234, i32 0, i32 0)) #21, !dbg !12855
  br label %32, !dbg !12857

32:                                               ; preds = %30, %27
  ret void, !dbg !12858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printMemoryManagementErrorMsg(i32 noundef %0) local_unnamed_addr #3 !dbg !12859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12861, metadata !DIExpression()), !dbg !12862
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8.235, i32 0, i32 0)) #21, !dbg !12863
  call void @llvm.dbg.value(metadata i32 %0, metadata !12861, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !12862
  %3 = and i32 %0, 32, !dbg !12864
  %4 = icmp eq i32 %3, 0, !dbg !12866
  br i1 %4, label %7, label %5, !dbg !12867

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.9.236, i32 0, i32 0)) #21, !dbg !12868
  br label %7, !dbg !12870

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16, !dbg !12871
  %9 = icmp eq i32 %8, 0, !dbg !12873
  br i1 %9, label %12, label %10, !dbg !12874

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.10.237, i32 0, i32 0)) #21, !dbg !12875
  br label %12, !dbg !12877

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 8, !dbg !12878
  %14 = icmp eq i32 %13, 0, !dbg !12880
  br i1 %14, label %17, label %15, !dbg !12881

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11.238, i32 0, i32 0)) #21, !dbg !12882
  br label %17, !dbg !12884

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 2, !dbg !12885
  %19 = icmp eq i32 %18, 0, !dbg !12887
  br i1 %19, label %23, label %20, !dbg !12888

20:                                               ; preds = %17
  %21 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !12889
  %22 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.239, i32 0, i32 0), i32 noundef %21) #21, !dbg !12891
  br label %23, !dbg !12892

23:                                               ; preds = %20, %17
  %24 = and i32 %0, 1, !dbg !12893
  %25 = icmp eq i32 %24, 0, !dbg !12895
  br i1 %25, label %28, label %26, !dbg !12896

26:                                               ; preds = %23
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13.240, i32 0, i32 0)) #21, !dbg !12897
  br label %28, !dbg !12899

28:                                               ; preds = %26, %23
  %29 = and i32 %0, 128, !dbg !12900
  %30 = icmp eq i32 %29, 0, !dbg !12902
  br i1 %30, label %34, label %31, !dbg !12903

31:                                               ; preds = %28
  %32 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !12904
  %33 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.241, i32 0, i32 0), i32 noundef %32) #21, !dbg !12906
  br label %34, !dbg !12907

34:                                               ; preds = %31, %28
  ret void, !dbg !12908
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printBusFaultErrorMsg(i32 noundef %0) local_unnamed_addr #3 !dbg !12909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12911, metadata !DIExpression()), !dbg !12912
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.242, i32 0, i32 0)) #21, !dbg !12913
  call void @llvm.dbg.value(metadata i32 %0, metadata !12911, metadata !DIExpression(DW_OP_constu, 65280, DW_OP_and, DW_OP_stack_value)), !dbg !12912
  call void @llvm.dbg.value(metadata i32 %0, metadata !12911, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !12912
  %3 = and i32 %0, 8192, !dbg !12914
  %4 = icmp eq i32 %3, 0, !dbg !12914
  br i1 %4, label %7, label %5, !dbg !12916

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16.243, i32 0, i32 0)) #21, !dbg !12917
  br label %7, !dbg !12919

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 4096, !dbg !12920
  %9 = icmp eq i32 %8, 0, !dbg !12920
  br i1 %9, label %12, label %10, !dbg !12922

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.17.244, i32 0, i32 0)) #21, !dbg !12923
  br label %12, !dbg !12925

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 2048, !dbg !12926
  %14 = icmp eq i32 %13, 0, !dbg !12926
  br i1 %14, label %17, label %15, !dbg !12928

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18.245, i32 0, i32 0)) #21, !dbg !12929
  br label %17, !dbg !12931

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 1024, !dbg !12932
  %19 = icmp eq i32 %18, 0, !dbg !12932
  br i1 %19, label %22, label %20, !dbg !12934

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19.246, i32 0, i32 0)) #21, !dbg !12935
  br label %22, !dbg !12937

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 512, !dbg !12938
  %24 = icmp eq i32 %23, 0, !dbg !12938
  br i1 %24, label %28, label %25, !dbg !12940

25:                                               ; preds = %22
  %26 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !12941
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.20.247, i32 0, i32 0), i32 noundef %26) #21, !dbg !12943
  br label %28, !dbg !12944

28:                                               ; preds = %25, %22
  %29 = and i32 %0, 256, !dbg !12945
  %30 = icmp eq i32 %29, 0, !dbg !12945
  br i1 %30, label %33, label %31, !dbg !12947

31:                                               ; preds = %28
  %32 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.21.248, i32 0, i32 0)) #21, !dbg !12948
  br label %33, !dbg !12950

33:                                               ; preds = %31, %28
  %34 = and i32 %0, 32768, !dbg !12951
  %35 = icmp eq i32 %34, 0, !dbg !12951
  br i1 %35, label %39, label %36, !dbg !12953

36:                                               ; preds = %33
  %37 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !12954
  %38 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22.249, i32 0, i32 0), i32 noundef %37) #21, !dbg !12956
  br label %39, !dbg !12957

39:                                               ; preds = %36, %33
  ret void, !dbg !12958
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @exception_reboot() local_unnamed_addr #3 !dbg !12959 {
  ret void, !dbg !12960
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stackDump(i32* noundef %0) local_unnamed_addr #3 !dbg !12961 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !12965, metadata !DIExpression()), !dbg !12966
  %2 = load i32, i32* %0, align 4, !dbg !12967
  store i32 %2, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 0), align 4, !dbg !12968
  %3 = getelementptr inbounds i32, i32* %0, i32 1, !dbg !12969
  %4 = load i32, i32* %3, align 4, !dbg !12969
  store i32 %4, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !12970
  %5 = getelementptr inbounds i32, i32* %0, i32 2, !dbg !12971
  %6 = load i32, i32* %5, align 4, !dbg !12971
  store i32 %6, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !12972
  %7 = getelementptr inbounds i32, i32* %0, i32 3, !dbg !12973
  %8 = load i32, i32* %7, align 4, !dbg !12973
  store i32 %8, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !12974
  %9 = getelementptr inbounds i32, i32* %0, i32 4, !dbg !12975
  %10 = load i32, i32* %9, align 4, !dbg !12975
  store i32 %10, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !12976
  %11 = ptrtoint i32* %0 to i32, !dbg !12977
  %12 = add i32 %11, 32, !dbg !12978
  store i32 %12, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !12979
  %13 = getelementptr inbounds i32, i32* %0, i32 5, !dbg !12980
  %14 = load i32, i32* %13, align 4, !dbg !12980
  store i32 %14, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !12981
  %15 = getelementptr inbounds i32, i32* %0, i32 6, !dbg !12982
  %16 = load i32, i32* %15, align 4, !dbg !12982
  store i32 %16, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !12983
  %17 = getelementptr inbounds i32, i32* %0, i32 7, !dbg !12984
  %18 = load i32, i32* %17, align 4, !dbg !12984
  store i32 %18, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !12985
  %19 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !12986
  %20 = and i32 %19, 16, !dbg !12988
  %21 = icmp eq i32 %20, 0, !dbg !12989
  br i1 %21, label %22, label %58, !dbg !12990

22:                                               ; preds = %1
  %23 = getelementptr inbounds i32, i32* %0, i32 8, !dbg !12991
  %24 = load i32, i32* %23, align 4, !dbg !12991
  store i32 %24, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !12993
  %25 = getelementptr inbounds i32, i32* %0, i32 9, !dbg !12994
  %26 = load i32, i32* %25, align 4, !dbg !12994
  store i32 %26, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !12995
  %27 = getelementptr inbounds i32, i32* %0, i32 10, !dbg !12996
  %28 = load i32, i32* %27, align 4, !dbg !12996
  store i32 %28, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !12997
  %29 = getelementptr inbounds i32, i32* %0, i32 11, !dbg !12998
  %30 = load i32, i32* %29, align 4, !dbg !12998
  store i32 %30, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !12999
  %31 = getelementptr inbounds i32, i32* %0, i32 12, !dbg !13000
  %32 = load i32, i32* %31, align 4, !dbg !13000
  store i32 %32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !13001
  %33 = getelementptr inbounds i32, i32* %0, i32 13, !dbg !13002
  %34 = load i32, i32* %33, align 4, !dbg !13002
  store i32 %34, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !13003
  %35 = getelementptr inbounds i32, i32* %0, i32 14, !dbg !13004
  %36 = load i32, i32* %35, align 4, !dbg !13004
  store i32 %36, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !13005
  %37 = getelementptr inbounds i32, i32* %0, i32 15, !dbg !13006
  %38 = load i32, i32* %37, align 4, !dbg !13006
  store i32 %38, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !13007
  %39 = getelementptr inbounds i32, i32* %0, i32 16, !dbg !13008
  %40 = load i32, i32* %39, align 4, !dbg !13008
  store i32 %40, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !13009
  %41 = getelementptr inbounds i32, i32* %0, i32 17, !dbg !13010
  %42 = load i32, i32* %41, align 4, !dbg !13010
  store i32 %42, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !13011
  %43 = getelementptr inbounds i32, i32* %0, i32 18, !dbg !13012
  %44 = load i32, i32* %43, align 4, !dbg !13012
  store i32 %44, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !13013
  %45 = getelementptr inbounds i32, i32* %0, i32 19, !dbg !13014
  %46 = load i32, i32* %45, align 4, !dbg !13014
  store i32 %46, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !13015
  %47 = getelementptr inbounds i32, i32* %0, i32 20, !dbg !13016
  %48 = load i32, i32* %47, align 4, !dbg !13016
  store i32 %48, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !13017
  %49 = getelementptr inbounds i32, i32* %0, i32 21, !dbg !13018
  %50 = load i32, i32* %49, align 4, !dbg !13018
  store i32 %50, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !13019
  %51 = getelementptr inbounds i32, i32* %0, i32 22, !dbg !13020
  %52 = load i32, i32* %51, align 4, !dbg !13020
  store i32 %52, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !13021
  %53 = getelementptr inbounds i32, i32* %0, i32 23, !dbg !13022
  %54 = load i32, i32* %53, align 4, !dbg !13022
  store i32 %54, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !13023
  %55 = getelementptr inbounds i32, i32* %0, i32 24, !dbg !13024
  %56 = load i32, i32* %55, align 4, !dbg !13024
  store i32 %56, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !13025
  %57 = add i32 %11, 104, !dbg !13026
  store i32 %57, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !13026
  br label %58, !dbg !13027

58:                                               ; preds = %22, %1
  %59 = phi i32 [ %57, %22 ], [ %12, %1 ]
  %60 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13028
  %61 = and i32 %60, 512, !dbg !13030
  %62 = icmp eq i32 %61, 0, !dbg !13030
  %63 = and i32 %18, 512
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %62, i1 true, i1 %64, !dbg !13031
  br i1 %65, label %68, label %66, !dbg !13031

66:                                               ; preds = %58
  %67 = add i32 %59, 4, !dbg !13032
  store i32 %67, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !13032
  br label %68, !dbg !13034

68:                                               ; preds = %66, %58
  %69 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.250, i32 0, i32 0), i32 noundef %2) #21, !dbg !13035
  %70 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !13036
  %71 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24.251, i32 0, i32 0), i32 noundef %70) #21, !dbg !13037
  %72 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !13038
  %73 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25.252, i32 0, i32 0), i32 noundef %72) #21, !dbg !13039
  %74 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !13040
  %75 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i32 noundef %74) #21, !dbg !13041
  %76 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 4), align 4, !dbg !13042
  %77 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i32 0, i32 0), i32 noundef %76) #21, !dbg !13043
  %78 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 5), align 4, !dbg !13044
  %79 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0), i32 noundef %78) #21, !dbg !13045
  %80 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 6), align 4, !dbg !13046
  %81 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i32 noundef %80) #21, !dbg !13047
  %82 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 7), align 4, !dbg !13048
  %83 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i32 0, i32 0), i32 noundef %82) #21, !dbg !13049
  %84 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 8), align 4, !dbg !13050
  %85 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0), i32 noundef %84) #21, !dbg !13051
  %86 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 9), align 4, !dbg !13052
  %87 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0), i32 noundef %86) #21, !dbg !13053
  %88 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 10), align 4, !dbg !13054
  %89 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 noundef %88) #21, !dbg !13055
  %90 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 11), align 4, !dbg !13056
  %91 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), i32 noundef %90) #21, !dbg !13057
  %92 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !13058
  %93 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0), i32 noundef %92) #21, !dbg !13059
  %94 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !13060
  %95 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i32 0, i32 0), i32 noundef %94) #21, !dbg !13061
  %96 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !13062
  %97 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i32 noundef %96) #21, !dbg !13063
  %98 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !13064
  %99 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0), i32 noundef %98) #21, !dbg !13065
  %100 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !13066
  %101 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i32 0, i32 0), i32 noundef %100) #21, !dbg !13067
  %102 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !13068
  %103 = and i32 %102, 4, !dbg !13070
  %104 = icmp eq i32 %103, 0, !dbg !13070
  br i1 %104, label %108, label %105, !dbg !13071

105:                                              ; preds = %68
  %106 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !13072
  %107 = or i32 %106, 2, !dbg !13072
  store i32 %107, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !13072
  br label %108, !dbg !13074

108:                                              ; preds = %68, %105
  %109 = phi i32* [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), %105 ], [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), %68 ]
  %110 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !13075
  store i32 %110, i32* %109, align 4, !dbg !13075
  %111 = and i32 %102, 16, !dbg !13076
  %112 = icmp eq i32 %111, 0, !dbg !13078
  br i1 %112, label %113, label %182, !dbg !13079

113:                                              ; preds = %108
  %114 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !13080
  %115 = or i32 %114, 4, !dbg !13080
  store i32 %115, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !13080
  %116 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !13082
  %117 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i32 0, i32 0), i32 noundef %116) #21, !dbg !13083
  %118 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !13084
  %119 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i32 0, i32 0), i32 noundef %118) #21, !dbg !13085
  %120 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !13086
  %121 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0), i32 noundef %120) #21, !dbg !13087
  %122 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !13088
  %123 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), i32 noundef %122) #21, !dbg !13089
  %124 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !13090
  %125 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0), i32 noundef %124) #21, !dbg !13091
  %126 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !13092
  %127 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0), i32 noundef %126) #21, !dbg !13093
  %128 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !13094
  %129 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i32 noundef %128) #21, !dbg !13095
  %130 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !13096
  %131 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i32 0, i32 0), i32 noundef %130) #21, !dbg !13097
  %132 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !13098
  %133 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i32 noundef %132) #21, !dbg !13099
  %134 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !13100
  %135 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0), i32 noundef %134) #21, !dbg !13101
  %136 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !13102
  %137 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0), i32 noundef %136) #21, !dbg !13103
  %138 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !13104
  %139 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i32 noundef %138) #21, !dbg !13105
  %140 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !13106
  %141 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i32 0, i32 0), i32 noundef %140) #21, !dbg !13107
  %142 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !13108
  %143 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i32 noundef %142) #21, !dbg !13109
  %144 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !13110
  %145 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i32 noundef %144) #21, !dbg !13111
  %146 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !13112
  %147 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0), i32 noundef %146) #21, !dbg !13113
  %148 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 38), align 4, !dbg !13114
  %149 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i32 0, i32 0), i32 noundef %148) #21, !dbg !13115
  %150 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 39), align 4, !dbg !13116
  %151 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i32 0, i32 0), i32 noundef %150) #21, !dbg !13117
  %152 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 40), align 4, !dbg !13118
  %153 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0), i32 noundef %152) #21, !dbg !13119
  %154 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 41), align 4, !dbg !13120
  %155 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i32 0, i32 0), i32 noundef %154) #21, !dbg !13121
  %156 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 42), align 4, !dbg !13122
  %157 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60.253, i32 0, i32 0), i32 noundef %156) #21, !dbg !13123
  %158 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 43), align 4, !dbg !13124
  %159 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i32 0, i32 0), i32 noundef %158) #21, !dbg !13125
  %160 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 44), align 4, !dbg !13126
  %161 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62.254, i32 0, i32 0), i32 noundef %160) #21, !dbg !13127
  %162 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 45), align 4, !dbg !13128
  %163 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), i32 noundef %162) #21, !dbg !13129
  %164 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 46), align 4, !dbg !13130
  %165 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i32 0, i32 0), i32 noundef %164) #21, !dbg !13131
  %166 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 47), align 4, !dbg !13132
  %167 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i32 noundef %166) #21, !dbg !13133
  %168 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 48), align 4, !dbg !13134
  %169 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i32 0, i32 0), i32 noundef %168) #21, !dbg !13135
  %170 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 49), align 4, !dbg !13136
  %171 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i32 0, i32 0), i32 noundef %170) #21, !dbg !13137
  %172 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 50), align 4, !dbg !13138
  %173 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i32 0, i32 0), i32 noundef %172) #21, !dbg !13139
  %174 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 51), align 4, !dbg !13140
  %175 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i32 0, i32 0), i32 noundef %174) #21, !dbg !13141
  %176 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 52), align 4, !dbg !13142
  %177 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0), i32 noundef %176) #21, !dbg !13143
  %178 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 53), align 4, !dbg !13144
  %179 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71.255, i32 0, i32 0), i32 noundef %178) #21, !dbg !13145
  %180 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !13146
  %181 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i32 0, i32 0), i32 noundef %180) #21, !dbg !13147
  br label %182, !dbg !13148

182:                                              ; preds = %113, %108
  %183 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !13149
  %184 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.73, i32 0, i32 0), i32 noundef %183) #21, !dbg !13150
  %185 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), align 4, !dbg !13151
  %186 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.74, i32 0, i32 0), i32 noundef %185) #21, !dbg !13152
  %187 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), align 4, !dbg !13153
  %188 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75, i32 0, i32 0), i32 noundef %187) #21, !dbg !13154
  %189 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !13155
  %190 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i32 0, i32 0), i32 noundef %189) #21, !dbg !13156
  %191 = tail call fastcc zeroext i1 @reboot_check() #19, !dbg !13157
  br i1 %191, label %192, label %193, !dbg !13159

192:                                              ; preds = %182
  tail call void @exception_reboot() #19, !dbg !13160
  br label %193, !dbg !13162

193:                                              ; preds = %192, %182
  ret void, !dbg !13163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @reboot_check() unnamed_addr #10 !dbg !13164 {
  %1 = load i32, i32* @reboot_flag, align 4, !dbg !13167
  %2 = icmp eq i32 %1, -559038737, !dbg !13168
  ret i1 %2, !dbg !13169
}

; Function Attrs: noinline nounwind optsize
define dso_local void @memoryDumpAll() local_unnamed_addr #3 !dbg !13170 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13174, metadata !DIExpression()), !dbg !13175
  %1 = load i8*, i8** getelementptr inbounds ([6 x %struct.memory_region_type], [6 x %struct.memory_region_type]* @memory_regions, i32 0, i32 0, i32 0), align 4, !dbg !13176
  %2 = icmp eq i8* %1, null, !dbg !13181
  br i1 %2, label %3, label %6, !dbg !13182

3:                                                ; preds = %44, %0
  call void @llvm.dbg.value(metadata i32 0, metadata !13174, metadata !DIExpression()), !dbg !13175
  %4 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !13183
  %5 = icmp eq i32 %4, 0, !dbg !13186
  br i1 %5, label %61, label %49, !dbg !13187

6:                                                ; preds = %0, %44
  %7 = phi i32 [ %45, %44 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13174, metadata !DIExpression()), !dbg !13175
  %8 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 3, !dbg !13188
  %9 = load i32, i32* %8, align 4, !dbg !13188
  %10 = icmp eq i32 %9, 0, !dbg !13190
  br i1 %10, label %44, label %11, !dbg !13191

11:                                               ; preds = %6
  %12 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 1, !dbg !13192
  %13 = load i32*, i32** %12, align 4, !dbg !13192
  call void @llvm.dbg.value(metadata i32* %13, metadata !13172, metadata !DIExpression()), !dbg !13175
  %14 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 2, !dbg !13193
  %15 = load i32*, i32** %14, align 4, !dbg !13193
  call void @llvm.dbg.value(metadata i32* %15, metadata !13173, metadata !DIExpression()), !dbg !13175
  %16 = icmp ult i32* %13, %15, !dbg !13194
  br i1 %16, label %17, label %44, !dbg !13197

17:                                               ; preds = %11, %41
  %18 = phi i32* [ %42, %41 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32* %18, metadata !13172, metadata !DIExpression()), !dbg !13175
  %19 = load i32, i32* %18, align 4, !dbg !13198
  %20 = icmp eq i32 %19, 0, !dbg !13201
  %21 = getelementptr inbounds i32, i32* %18, i32 1
  %22 = load i32, i32* %21, align 4, !dbg !13202
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %20, i1 %23, i1 false, !dbg !13203
  br i1 %24, label %25, label %33, !dbg !13203

25:                                               ; preds = %17
  %26 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !13204
  %27 = load i32, i32* %26, align 4, !dbg !13205
  %28 = icmp eq i32 %27, 0, !dbg !13206
  br i1 %28, label %29, label %33, !dbg !13207

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !13208
  %31 = load i32, i32* %30, align 4, !dbg !13209
  %32 = icmp eq i32 %31, 0, !dbg !13210
  br i1 %32, label %41, label %33, !dbg !13211

33:                                               ; preds = %17, %29, %25
  %34 = phi i32 [ 0, %29 ], [ 0, %25 ], [ %22, %17 ], !dbg !13212
  %35 = ptrtoint i32* %18 to i32, !dbg !13213
  %36 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !13214
  %37 = load i32, i32* %36, align 4, !dbg !13215
  %38 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !13216
  %39 = load i32, i32* %38, align 4, !dbg !13217
  %40 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.77, i32 0, i32 0), i32 noundef %35, i32 noundef %19, i32 noundef %34, i32 noundef %37, i32 noundef %39) #21, !dbg !13218
  br label %41, !dbg !13219

41:                                               ; preds = %29, %33
  %42 = getelementptr inbounds i32, i32* %18, i32 4, !dbg !13220
  call void @llvm.dbg.value(metadata i32* %42, metadata !13172, metadata !DIExpression()), !dbg !13175
  %43 = icmp ult i32* %42, %15, !dbg !13194
  br i1 %43, label %17, label %44, !dbg !13197, !llvm.loop !13221

44:                                               ; preds = %41, %11, %6
  %45 = add i32 %7, 1, !dbg !13223
  call void @llvm.dbg.value(metadata i32 %45, metadata !13174, metadata !DIExpression()), !dbg !13175
  %46 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %45, i32 0, !dbg !13176
  %47 = load i8*, i8** %46, align 4, !dbg !13176
  %48 = icmp eq i8* %47, null, !dbg !13181
  br i1 %48, label %3, label %6, !dbg !13182, !llvm.loop !13224

49:                                               ; preds = %3, %57
  %50 = phi i32 [ %58, %57 ], [ %4, %3 ]
  %51 = phi i32 [ %59, %57 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !13174, metadata !DIExpression()), !dbg !13175
  %52 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %51, i32 1, !dbg !13227
  %53 = load void ()*, void ()** %52, align 4, !dbg !13227
  %54 = icmp eq void ()* %53, null, !dbg !13230
  br i1 %54, label %57, label %55, !dbg !13231

55:                                               ; preds = %49
  tail call void %53() #21, !dbg !13232
  %56 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !13183
  br label %57, !dbg !13234

57:                                               ; preds = %49, %55
  %58 = phi i32 [ %50, %49 ], [ %56, %55 ], !dbg !13183
  %59 = add nuw i32 %51, 1, !dbg !13235
  call void @llvm.dbg.value(metadata i32 %59, metadata !13174, metadata !DIExpression()), !dbg !13175
  %60 = icmp ult i32 %59, %58, !dbg !13186
  br i1 %60, label %49, label %61, !dbg !13187, !llvm.loop !13236

61:                                               ; preds = %57, %3
  %62 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i32 0, i32 0)) #21, !dbg !13238
  ret void, !dbg !13239
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Hard_Fault_Handler(i32* noundef %0) local_unnamed_addr #13 !dbg !13240 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !13242, metadata !DIExpression()), !dbg !13243
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.79, i32 0, i32 0)) #21, !dbg !13244
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13245
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.80, i32 0, i32 0), i32 noundef %3) #21, !dbg !13246
  %5 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13247
  %6 = and i32 %5, 1073741824, !dbg !13249
  %7 = icmp eq i32 %6, 0, !dbg !13250
  br i1 %7, label %28, label %8, !dbg !13251

8:                                                ; preds = %1
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81, i32 0, i32 0)) #21, !dbg !13252
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13254
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %10) #21, !dbg !13255
  %12 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13256
  %13 = icmp ult i32 %12, 65536, !dbg !13258
  br i1 %13, label %16, label %14, !dbg !13259

14:                                               ; preds = %8
  %15 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13260
  tail call void @printUsageErrorMsg(i32 noundef %15) #19, !dbg !13262
  br label %16, !dbg !13263

16:                                               ; preds = %14, %8
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13264
  %18 = and i32 %17, 65280, !dbg !13266
  %19 = icmp eq i32 %18, 0, !dbg !13267
  br i1 %19, label %22, label %20, !dbg !13268

20:                                               ; preds = %16
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13269
  tail call void @printBusFaultErrorMsg(i32 noundef %21) #19, !dbg !13271
  br label %22, !dbg !13272

22:                                               ; preds = %20, %16
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13273
  %24 = and i32 %23, 255, !dbg !13275
  %25 = icmp eq i32 %24, 0, !dbg !13276
  br i1 %25, label %28, label %26, !dbg !13277

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13278
  tail call void @printMemoryManagementErrorMsg(i32 noundef %27) #19, !dbg !13280
  br label %28, !dbg !13281

28:                                               ; preds = %22, %26, %1
  tail call void @stackDump(i32* noundef %0) #19, !dbg !13282
  tail call void @memoryDumpAll() #19, !dbg !13283
  br label %29, !dbg !13284

29:                                               ; preds = %28, %29
  br label %29, !dbg !13284, !llvm.loop !13285
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @MemManage_Fault_Handler(i32* noundef %0) local_unnamed_addr #13 !dbg !13287 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !13289, metadata !DIExpression()), !dbg !13290
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83, i32 0, i32 0)) #21, !dbg !13291
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13292
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #21, !dbg !13293
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13294
  %6 = and i32 %5, 255, !dbg !13296
  %7 = icmp eq i32 %6, 0, !dbg !13297
  br i1 %7, label %10, label %8, !dbg !13298

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13299
  tail call void @printMemoryManagementErrorMsg(i32 noundef %9) #19, !dbg !13301
  br label %10, !dbg !13302

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #19, !dbg !13303
  tail call void @memoryDumpAll() #19, !dbg !13304
  br label %11, !dbg !13305

11:                                               ; preds = %10, %11
  br label %11, !dbg !13305, !llvm.loop !13306
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Bus_Fault_Handler(i32* noundef %0) local_unnamed_addr #13 !dbg !13308 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !13310, metadata !DIExpression()), !dbg !13311
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i32 0, i32 0)) #21, !dbg !13312
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13313
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #21, !dbg !13314
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13315
  %6 = and i32 %5, 65280, !dbg !13317
  %7 = icmp eq i32 %6, 0, !dbg !13318
  br i1 %7, label %10, label %8, !dbg !13319

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13320
  tail call void @printBusFaultErrorMsg(i32 noundef %9) #19, !dbg !13322
  br label %10, !dbg !13323

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #19, !dbg !13324
  tail call void @memoryDumpAll() #19, !dbg !13325
  br label %11, !dbg !13326

11:                                               ; preds = %10, %11
  br label %11, !dbg !13326, !llvm.loop !13327
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Usage_Fault_Handler(i32* noundef %0) local_unnamed_addr #13 !dbg !13329 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !13331, metadata !DIExpression()), !dbg !13332
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.85.256, i32 0, i32 0)) #21, !dbg !13333
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13334
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #21, !dbg !13335
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13336
  %6 = icmp ult i32 %5, 65536, !dbg !13338
  br i1 %6, label %9, label %7, !dbg !13339

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13340
  tail call void @printUsageErrorMsg(i32 noundef %8) #19, !dbg !13342
  br label %9, !dbg !13343

9:                                                ; preds = %7, %1
  tail call void @stackDump(i32* noundef %0) #19, !dbg !13344
  tail call void @memoryDumpAll() #19, !dbg !13345
  br label %10, !dbg !13346

10:                                               ; preds = %9, %10
  br label %10, !dbg !13346, !llvm.loop !13347
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Debug_Monitor_Handler(i32* noundef %0) local_unnamed_addr #13 !dbg !13349 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !13351, metadata !DIExpression()), !dbg !13355
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.86, i32 0, i32 0)) #21, !dbg !13356
  call void @llvm.dbg.value(metadata i32 12, metadata !13352, metadata !DIExpression()), !dbg !13355
  %3 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !13357
  call void @llvm.dbg.value(metadata i32 %3, metadata !13354, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !13355
  %4 = load volatile i32, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !13359
  call void @llvm.dbg.value(metadata i32 %4, metadata !13353, metadata !DIExpression()), !dbg !13355
  %5 = and i32 %3, 16777216, !dbg !13360
  %6 = icmp eq i32 %5, 0, !dbg !13360
  %7 = select i1 %6, i32 78, i32 89, !dbg !13360
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.87, i32 0, i32 0), i32 noundef %7, i32 noundef %4) #21, !dbg !13361
  tail call void @stackDump(i32* noundef %0) #19, !dbg !13362
  tail call void @memoryDumpAll() #19, !dbg !13363
  br label %9, !dbg !13364

9:                                                ; preds = %9, %1
  br label %9, !dbg !13364, !llvm.loop !13365
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @CommonFault_Handler() #17 section ".ramTEXT" !dbg !13367 {
  tail call void asm sideeffect "cpsid i                       \0Aldr r3, =pxExceptionStack     \0Aldr r3, [r3]                  \0Aldr r0, =pTaskContext         \0Aldr r0, [r0]                  \0Aadd r0, r0, #16               \0Astmia r0!, {r4-r11}           \0Amov r5, r12                   \0Aadd r0, r0, #20               \0Amrs r1, control               \0Astr r1, [r0], #4              \0Astr r5, [r0], #4              \0Amrs r4, msp                   \0Astr r4, [r0], #4              \0Amrs r1, psp                   \0Astr r1, [r0]                  \0Atst r5, #0x10                 \0Aitt eq                        \0Aaddeq r0, r0, #68             \0Avstmeq r0, {s16-s31}          \0Acmp r3, #0                    \0Ait ne                         \0Amovne sp, r3                  \0Apush {lr}                     \0Abl exception_init             \0Apop {lr}                      \0Atst r5, #4                    \0Aite eq                        \0Amoveq r0, r4                  \0Amrsne r0, psp                 \0Abx lr                         \0A", ""() #20, !dbg !13368, !srcloc !13369
  unreachable, !dbg !13370
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @HardFault_Handler() #17 section ".ramTEXT" !dbg !13371 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Hard_Fault_Handler         \0A", ""() #20, !dbg !13372, !srcloc !13373
  unreachable, !dbg !13374
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @MemManage_Handler() #17 section ".ramTEXT" !dbg !13375 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl MemManage_Fault_Handler    \0A", ""() #20, !dbg !13376, !srcloc !13377
  unreachable, !dbg !13378
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @BusFault_Handler() #17 section ".ramTEXT" !dbg !13379 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Bus_Fault_Handler          \0A", ""() #20, !dbg !13380, !srcloc !13381
  unreachable, !dbg !13382
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @UsageFault_Handler() #17 section ".ramTEXT" !dbg !13383 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Usage_Fault_Handler        \0A", ""() #20, !dbg !13384, !srcloc !13385
  unreachable, !dbg !13386
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @DebugMon_Handler() #17 section ".ramTEXT" !dbg !13387 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Debug_Monitor_Handler      \0A", ""() #20, !dbg !13388, !srcloc !13389
  unreachable, !dbg !13390
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vApplicationStackOverflowHook(i8* noundef %0, i8* noundef %1) local_unnamed_addr #3 !dbg !13391 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13395, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.value(metadata i8* %1, metadata !13396, metadata !DIExpression()), !dbg !13397
  %3 = ptrtoint i8* %0 to i32, !dbg !13398
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.259, i32 0, i32 0), i32 noundef %3, i8* noundef %1) #21, !dbg !13399
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.260, i32 0, i32 0), i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2.261, i32 0, i32 0), i32 noundef 103) #21, !dbg !13400
  ret void, !dbg !13403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, ...) #3 !dbg !13404 {
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13406, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.value(metadata i8* %1, metadata !13407, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.value(metadata i32 %2, metadata !13408, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.value(metadata i32 %3, metadata !13409, metadata !DIExpression()), !dbg !13418
  call void @llvm.dbg.value(metadata i8* %4, metadata !13410, metadata !DIExpression()), !dbg !13418
  %7 = bitcast %struct.__va_list* %6 to i8*, !dbg !13419
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #20, !dbg !13419
  call void @llvm.dbg.declare(metadata %struct.__va_list* %6, metadata !13411, metadata !DIExpression()), !dbg !13420
  call void @llvm.va_start(i8* nonnull %7), !dbg !13421
  %8 = bitcast %struct.__va_list* %6 to i32*, !dbg !13422
  %9 = load i32, i32* %8, align 4, !dbg !13422
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !13422
  call void @vprint_module_log(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %10) #19, !dbg !13422
  call void @llvm.va_end(i8* nonnull %7), !dbg !13423
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #20, !dbg !13424
  ret void, !dbg !13424
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, ...) #3 !dbg !13425 {
  %8 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13427, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.value(metadata i8* %1, metadata !13428, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.value(metadata i32 %2, metadata !13429, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.value(metadata i32 %3, metadata !13430, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.value(metadata i8* %4, metadata !13431, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.value(metadata i32 %5, metadata !13432, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.value(metadata i8* %6, metadata !13433, metadata !DIExpression()), !dbg !13435
  %9 = bitcast %struct.__va_list* %8 to i8*, !dbg !13436
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #20, !dbg !13436
  call void @llvm.dbg.declare(metadata %struct.__va_list* %8, metadata !13434, metadata !DIExpression()), !dbg !13437
  call void @llvm.va_start(i8* nonnull %9), !dbg !13438
  %10 = bitcast %struct.__va_list* %8 to i32*, !dbg !13439
  %11 = load i32, i32* %10, align 4, !dbg !13439
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !13439
  call void @vdump_module_buffer(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %12) #19, !dbg !13439
  call void @llvm.va_end(i8* nonnull %9), !dbg !13440
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #20, !dbg !13441
  ret void, !dbg !13441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vdump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %7) local_unnamed_addr #3 !dbg !13442 {
  %9 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13453, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i8* %0, metadata !13446, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i8* %1, metadata !13447, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i32 %2, metadata !13448, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i32 %3, metadata !13449, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i8* %4, metadata !13450, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i32 %5, metadata !13451, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i8* %6, metadata !13452, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i8* %0, metadata !13454, metadata !DIExpression()), !dbg !13468
  %10 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !13469
  %11 = bitcast i8* %10 to i32*, !dbg !13469
  %12 = load i32, i32* %11, align 4, !dbg !13469
  %13 = icmp eq i32 %12, 0, !dbg !13470
  br i1 %13, label %14, label %101, !dbg !13471

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !13472
  %16 = bitcast i8* %15 to i32*, !dbg !13472
  %17 = load i32, i32* %16, align 4, !dbg !13472
  %18 = icmp ugt i32 %17, %3, !dbg !13473
  br i1 %18, label %101, label %19, !dbg !13474

19:                                               ; preds = %14
  %20 = load i1, i1* @syslog_task_ready, align 4, !dbg !13475
  br i1 %20, label %21, label %28, !dbg !13476

21:                                               ; preds = %19
  %22 = tail call i32 @xTaskGetSchedulerState() #21, !dbg !13477
  %23 = icmp eq i32 %22, 0, !dbg !13478
  br i1 %23, label %24, label %50, !dbg !13479

24:                                               ; preds = %21
  %25 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !13480
  %26 = and i32 %25, 255, !dbg !13481
  %27 = icmp eq i32 %26, 0, !dbg !13482
  br i1 %27, label %28, label %50, !dbg !13483

28:                                               ; preds = %24, %19
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !13484
  %30 = icmp eq i32 %29, 0, !dbg !13485
  br i1 %30, label %101, label %31, !dbg !13486

31:                                               ; preds = %28
  %32 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !13487, !srcloc !13493
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !13487
  call void @llvm.dbg.value(metadata i32 %33, metadata !13490, metadata !DIExpression()) #20, !dbg !13494
  call void @llvm.dbg.value(metadata i32 undef, metadata !13491, metadata !DIExpression()) #20, !dbg !13494
  call void @llvm.dbg.value(metadata i32 %33, metadata !13456, metadata !DIExpression()), !dbg !13495
  %34 = load i32, i32* @syslog_init_done, align 4, !dbg !13496
  %35 = icmp ugt i32 %34, 1, !dbg !13498
  br i1 %35, label %36, label %47, !dbg !13499

36:                                               ; preds = %31
  %37 = tail call fastcc i32 @get_current_time_in_ms() #19, !dbg !13500
  %38 = bitcast i8* %0 to i8**, !dbg !13502
  %39 = load i8*, i8** %38, align 4, !dbg !13502
  %40 = icmp ult i32 %3, 4, !dbg !13503
  br i1 %40, label %41, label %44, !dbg !13503

41:                                               ; preds = %36
  %42 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !13503
  %43 = load i8*, i8** %42, align 4, !dbg !13503
  br label %44, !dbg !13503

44:                                               ; preds = %36, %41
  %45 = phi i8* [ %43, %41 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.271, i32 0, i32 0), %36 ], !dbg !13503
  %46 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef %37, i8* noundef %39, i8* noundef %45, i8* noundef %1, i32 noundef %2) #21, !dbg !13504
  br label %47, !dbg !13505

47:                                               ; preds = %44, %31
  %48 = tail call i32 @vprintf(i8* noundef %6, [1 x i32] %7) #21, !dbg !13506
  %49 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.273, i32 0, i32 0)) #21, !dbg !13507
  tail call void @hex_dump_data(i8* noundef %4, i32 noundef %5) #19, !dbg !13508
  call void @llvm.dbg.value(metadata i32 %33, metadata !13509, metadata !DIExpression()) #20, !dbg !13512
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #20, !dbg !13514, !srcloc !13515
  br label %101, !dbg !13516

50:                                               ; preds = %24, %21
  %51 = bitcast %struct.syslog_buffer_t** %9 to i8*, !dbg !13517
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #20, !dbg !13517
  %52 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #19, !dbg !13518
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %52, metadata !13463, metadata !DIExpression()), !dbg !13519
  store %struct.syslog_buffer_t* %52, %struct.syslog_buffer_t** %9, align 4, !dbg !13520
  %53 = icmp eq %struct.syslog_buffer_t* %52, null, !dbg !13521
  br i1 %53, label %100, label %54, !dbg !13523

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 0, !dbg !13524
  call void @llvm.dbg.value(metadata i8* %55, metadata !13465, metadata !DIExpression()), !dbg !13519
  %56 = bitcast i8* %55 to i32*, !dbg !13525
  store i32 1, i32* %56, align 4, !dbg !13526
  %57 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 4, !dbg !13527
  call void @llvm.dbg.value(metadata i8* %57, metadata !13466, metadata !DIExpression()), !dbg !13519
  %58 = bitcast i8* %0 to i8**, !dbg !13528
  %59 = load i8*, i8** %58, align 4, !dbg !13528
  %60 = bitcast i8* %57 to i8**, !dbg !13529
  store i8* %59, i8** %60, align 4, !dbg !13530
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 8, !dbg !13531
  %62 = bitcast i8* %61 to i32*, !dbg !13531
  store i32 %3, i32* %62, align 4, !dbg !13532
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 12, !dbg !13533
  %64 = bitcast i8* %63 to i8**, !dbg !13533
  store i8* %1, i8** %64, align 4, !dbg !13534
  %65 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 16, !dbg !13535
  %66 = bitcast i8* %65 to i32*, !dbg !13535
  store i32 %2, i32* %66, align 4, !dbg !13536
  %67 = tail call fastcc i32 @get_current_time_in_ms() #19, !dbg !13537
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 20, !dbg !13538
  %69 = bitcast i8* %68 to i32*, !dbg !13538
  store i32 %67, i32* %69, align 4, !dbg !13539
  %70 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 24, !dbg !13540
  %71 = tail call i32 @vsnprintf(i8* noundef nonnull %70, i32 noundef 128, i8* noundef %6, [1 x i32] %7) #21, !dbg !13541
  %72 = icmp slt i32 %5, 2048, !dbg !13542
  %73 = select i1 %72, i32 %5, i32 2048, !dbg !13542
  call void @llvm.dbg.value(metadata i32 %73, metadata !13451, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i32 0, metadata !13455, metadata !DIExpression()), !dbg !13468
  %74 = icmp sgt i32 %73, 128, !dbg !13543
  br i1 %74, label %75, label %81, !dbg !13545

75:                                               ; preds = %54
  %76 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !13546
  %77 = and i32 %76, 255, !dbg !13549
  %78 = icmp eq i32 %77, 0, !dbg !13550
  %79 = add nsw i32 %73, -128
  call void @llvm.dbg.value(metadata i32 undef, metadata !13455, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i32 128, metadata !13451, metadata !DIExpression()), !dbg !13468
  %80 = select i1 %78, i32 %79, i32 0, !dbg !13551
  br label %81, !dbg !13551

81:                                               ; preds = %75, %54
  %82 = phi i32 [ 0, %54 ], [ %80, %75 ], !dbg !13519
  %83 = phi i32 [ %5, %54 ], [ 128, %75 ], !dbg !13519
  call void @llvm.dbg.value(metadata i32 %83, metadata !13451, metadata !DIExpression()), !dbg !13468
  call void @llvm.dbg.value(metadata i32 %82, metadata !13455, metadata !DIExpression()), !dbg !13468
  %84 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 160, !dbg !13552
  %85 = tail call i8* @memcpy(i8* noundef nonnull %84, i8* noundef %4, i32 noundef %83) #21, !dbg !13553
  %86 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 156, !dbg !13554
  %87 = bitcast i8* %86 to i32*, !dbg !13554
  store i32 %83, i32* %87, align 4, !dbg !13555
  %88 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 288, !dbg !13556
  %89 = bitcast i8* %88 to i8**, !dbg !13556
  store i8* null, i8** %89, align 4, !dbg !13557
  %90 = icmp eq i32 %82, 0, !dbg !13558
  br i1 %90, label %99, label %91, !dbg !13560

91:                                               ; preds = %81
  %92 = tail call i8* @pvPortMalloc(i32 noundef %82) #21, !dbg !13561
  store i8* %92, i8** %89, align 4, !dbg !13564
  %93 = icmp eq i8* %92, null, !dbg !13565
  br i1 %93, label %99, label %94, !dbg !13566

94:                                               ; preds = %91
  %95 = getelementptr inbounds i8, i8* %4, i32 %83, !dbg !13567
  %96 = tail call i8* @memcpy(i8* noundef nonnull %92, i8* noundef %95, i32 noundef %82) #21, !dbg !13569
  %97 = load i32, i32* %87, align 4, !dbg !13570
  %98 = add i32 %97, %82, !dbg !13570
  store i32 %98, i32* %87, align 4, !dbg !13570
  br label %99, !dbg !13571

99:                                               ; preds = %91, %94, %81
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %9, metadata !13463, metadata !DIExpression(DW_OP_deref)), !dbg !13519
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %9) #19, !dbg !13572
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #20, !dbg !13573
  br label %101

100:                                              ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #20, !dbg !13573
  br label %101

101:                                              ; preds = %99, %8, %14, %28, %47, %100
  ret void, !dbg !13574
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_current_time_in_ms() unnamed_addr #3 !dbg !13575 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !13581
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #20, !dbg !13581
  call void @llvm.dbg.value(metadata i32 0, metadata !13579, metadata !DIExpression()), !dbg !13582
  store i32 0, i32* %1, align 4, !dbg !13583
  call void @llvm.dbg.value(metadata i64 0, metadata !13580, metadata !DIExpression()), !dbg !13582
  call void @llvm.dbg.value(metadata i32* %1, metadata !13579, metadata !DIExpression(DW_OP_deref)), !dbg !13582
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #21, !dbg !13584
  %4 = load i32, i32* %1, align 4, !dbg !13585
  call void @llvm.dbg.value(metadata i32 %4, metadata !13579, metadata !DIExpression()), !dbg !13582
  %5 = zext i32 %4 to i64, !dbg !13586
  %6 = mul nuw nsw i64 %5, 1000, !dbg !13587
  %7 = lshr i64 %6, 15, !dbg !13588
  call void @llvm.dbg.value(metadata i64 %7, metadata !13580, metadata !DIExpression()), !dbg !13582
  %8 = trunc i64 %7 to i32, !dbg !13589
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #20, !dbg !13590
  ret i32 %8, !dbg !13591
}

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define dso_local void @hex_dump_data(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #3 !dbg !13592 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13596, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata i32 %1, metadata !13597, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata i32 0, metadata !13598, metadata !DIExpression()), !dbg !13599
  call void @llvm.dbg.value(metadata i32 0, metadata !13598, metadata !DIExpression()), !dbg !13599
  %3 = icmp sgt i32 %1, 0, !dbg !13600
  br i1 %3, label %4, label %25, !dbg !13603

4:                                                ; preds = %2, %18
  %5 = phi i32 [ %10, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !13598, metadata !DIExpression()), !dbg !13599
  %6 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !13604
  %7 = load i8, i8* %6, align 1, !dbg !13604
  %8 = zext i8 %7 to i32, !dbg !13606
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.274, i32 0, i32 0), i32 noundef %8) #21, !dbg !13607
  %10 = add nuw nsw i32 %5, 1, !dbg !13608
  %11 = and i32 %10, 15, !dbg !13610
  %12 = icmp eq i32 %11, 0, !dbg !13611
  br i1 %12, label %15, label %13, !dbg !13612

13:                                               ; preds = %4
  %14 = icmp eq i32 %10, %1, !dbg !13613
  br i1 %14, label %18, label %15, !dbg !13615

15:                                               ; preds = %13, %4
  %16 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.273, i32 0, i32 0), %4 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.275, i32 0, i32 0), %13 ]
  %17 = tail call i32 (i8*, ...) @printf(i8* noundef %16) #21, !dbg !13616
  br label %18, !dbg !13600

18:                                               ; preds = %15, %13
  call void @llvm.dbg.value(metadata i32 %10, metadata !13598, metadata !DIExpression()), !dbg !13599
  %19 = icmp eq i32 %10, %1, !dbg !13600
  br i1 %19, label %20, label %4, !dbg !13603, !llvm.loop !13617

20:                                               ; preds = %18
  %21 = and i32 %1, 15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23, !dbg !13619

23:                                               ; preds = %20
  %24 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.273, i32 0, i32 0)) #21, !dbg !13621
  br label %25, !dbg !13623

25:                                               ; preds = %2, %23, %20
  ret void, !dbg !13624
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.syslog_buffer_t* @buffer_pool_alloc() local_unnamed_addr #3 !dbg !13625 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !13631, !srcloc !13493
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13631
  call void @llvm.dbg.value(metadata i32 %2, metadata !13490, metadata !DIExpression()) #20, !dbg !13633
  call void @llvm.dbg.value(metadata i32 undef, metadata !13491, metadata !DIExpression()) #20, !dbg !13633
  call void @llvm.dbg.value(metadata i32 %2, metadata !13629, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.value(metadata i32 0, metadata !13630, metadata !DIExpression()), !dbg !13634
  br label %6, !dbg !13635

3:                                                ; preds = %6
  %4 = add nuw nsw i32 %7, 1, !dbg !13637
  call void @llvm.dbg.value(metadata i32 %4, metadata !13630, metadata !DIExpression()), !dbg !13634
  call void @llvm.dbg.value(metadata i32 %7, metadata !13630, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13634
  %5 = icmp eq i32 %4, 16, !dbg !13639
  br i1 %5, label %14, label %6, !dbg !13635, !llvm.loop !13640

6:                                                ; preds = %0, %3
  %7 = phi i32 [ 0, %0 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13630, metadata !DIExpression()), !dbg !13634
  %8 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %7, !dbg !13642
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !13645
  %10 = load i32, i32* %9, align 4, !dbg !13645
  %11 = icmp eq i32 %10, 0, !dbg !13642
  call void @llvm.dbg.value(metadata i32 %7, metadata !13630, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !13634
  br i1 %11, label %12, label %3, !dbg !13646

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !13645
  store i32 1, i32* %13, align 4, !dbg !13647
  call void @llvm.dbg.value(metadata i32 %2, metadata !13509, metadata !DIExpression()) #20, !dbg !13649
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #20, !dbg !13651, !srcloc !13515
  br label %17, !dbg !13652

14:                                               ; preds = %3
  %15 = load i32, i32* @syslog_drop_count, align 4, !dbg !13653
  %16 = add i32 %15, 1, !dbg !13653
  store i32 %16, i32* @syslog_drop_count, align 4, !dbg !13653
  call void @llvm.dbg.value(metadata i32 %2, metadata !13509, metadata !DIExpression()) #20, !dbg !13654
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #20, !dbg !13656, !srcloc !13515
  br label %17, !dbg !13657

17:                                               ; preds = %14, %12
  %18 = phi %struct.syslog_buffer_t* [ %8, %12 ], [ null, %14 ], !dbg !13634
  ret %struct.syslog_buffer_t* %18, !dbg !13658
}

; Function Attrs: optsize
declare dso_local i32 @vsnprintf(i8* noundef, i32 noundef, i8* noundef, [1 x i32]) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_send(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #3 !dbg !13659 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !13664, metadata !DIExpression()), !dbg !13668
  %3 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !13669
  %4 = and i32 %3, 255, !dbg !13670
  %5 = icmp eq i32 %4, 0, !dbg !13670
  br i1 %5, label %19, label %6, !dbg !13671

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !13672
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #20, !dbg !13672
  call void @llvm.dbg.value(metadata i32 0, metadata !13665, metadata !DIExpression()), !dbg !13673
  store i32 0, i32* %2, align 4, !dbg !13674
  %8 = load i8*, i8** @g_log_queue, align 4, !dbg !13675
  %9 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !13675
  call void @llvm.dbg.value(metadata i32* %2, metadata !13665, metadata !DIExpression(DW_OP_deref)), !dbg !13673
  %10 = call i32 @xQueueGenericSendFromISR(i8* noundef %8, i8* noundef %9, i32* noundef nonnull %2, i32 noundef 0) #21, !dbg !13675
  %11 = icmp eq i32 %10, 0, !dbg !13677
  br i1 %11, label %12, label %14, !dbg !13678

12:                                               ; preds = %6
  %13 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %0, align 4, !dbg !13679
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %13) #19, !dbg !13681
  br label %18, !dbg !13682

14:                                               ; preds = %6
  %15 = load i32, i32* %2, align 4, !dbg !13683
  call void @llvm.dbg.value(metadata i32 %15, metadata !13665, metadata !DIExpression()), !dbg !13673
  %16 = icmp eq i32 %15, 0, !dbg !13683
  br i1 %16, label %18, label %17, !dbg !13686

17:                                               ; preds = %14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !13687
  call void asm sideeffect "dsb", ""() #20, !dbg !13687, !srcloc !13689
  call void asm sideeffect "isb", ""() #20, !dbg !13687, !srcloc !13690
  br label %18, !dbg !13687

18:                                               ; preds = %14, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #20, !dbg !13691
  br label %23, !dbg !13692

19:                                               ; preds = %1
  %20 = load i8*, i8** @g_log_queue, align 4, !dbg !13693
  %21 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !13693
  %22 = tail call i32 @xQueueGenericSend(i8* noundef %20, i8* noundef %21, i32 noundef -1, i32 noundef 0) #21, !dbg !13693
  br label %23

23:                                               ; preds = %19, %18
  ret void, !dbg !13695
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_release(%struct.syslog_buffer_t* nocapture noundef %0) local_unnamed_addr #3 !dbg !13696 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !13700, metadata !DIExpression()), !dbg !13703
  %2 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 0, !dbg !13704
  call void @llvm.dbg.value(metadata i8* %2, metadata !13702, metadata !DIExpression()), !dbg !13703
  %3 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !13705, !srcloc !13493
  call void @llvm.dbg.value(metadata i32 undef, metadata !13490, metadata !DIExpression()) #20, !dbg !13707
  call void @llvm.dbg.value(metadata i32 undef, metadata !13491, metadata !DIExpression()) #20, !dbg !13707
  call void @llvm.dbg.value(metadata i32 undef, metadata !13701, metadata !DIExpression()), !dbg !13703
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !13708
  store i32 0, i32* %4, align 4, !dbg !13709
  %5 = bitcast i8* %2 to i32*, !dbg !13710
  %6 = load i32, i32* %5, align 4, !dbg !13710
  %7 = icmp eq i32 %6, 1, !dbg !13712
  br i1 %7, label %8, label %14, !dbg !13713

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !13702, metadata !DIExpression()), !dbg !13703
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 288, !dbg !13714
  %10 = bitcast i8* %9 to i8**, !dbg !13714
  %11 = load i8*, i8** %10, align 4, !dbg !13714
  %12 = icmp eq i8* %11, null, !dbg !13715
  br i1 %12, label %14, label %13, !dbg !13716

13:                                               ; preds = %8
  tail call void @vPortFree(i8* noundef nonnull %11) #21, !dbg !13717
  br label %14, !dbg !13719

14:                                               ; preds = %13, %8, %1
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13705
  call void @llvm.dbg.value(metadata i32 %15, metadata !13490, metadata !DIExpression()) #20, !dbg !13707
  call void @llvm.dbg.value(metadata i32 %15, metadata !13701, metadata !DIExpression()), !dbg !13703
  call void @llvm.dbg.value(metadata i32 undef, metadata !13509, metadata !DIExpression()) #20, !dbg !13720
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %15) #20, !dbg !13722, !srcloc !13515
  ret void, !dbg !13723
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprint_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %5) local_unnamed_addr #3 !dbg !13724 {
  %7 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i8* %0, metadata !13728, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i8* %1, metadata !13729, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i32 %2, metadata !13730, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i32 %3, metadata !13731, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i8* %4, metadata !13732, metadata !DIExpression()), !dbg !13747
  call void @llvm.dbg.value(metadata i8* %0, metadata !13734, metadata !DIExpression()), !dbg !13747
  %8 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !13748
  %9 = bitcast i8* %8 to i32*, !dbg !13748
  %10 = load i32, i32* %9, align 4, !dbg !13748
  %11 = icmp eq i32 %10, 0, !dbg !13749
  br i1 %11, label %12, label %71, !dbg !13750

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !13751
  %14 = bitcast i8* %13 to i32*, !dbg !13751
  %15 = load i32, i32* %14, align 4, !dbg !13751
  %16 = icmp ugt i32 %15, %3, !dbg !13752
  br i1 %16, label %71, label %17, !dbg !13753

17:                                               ; preds = %12
  %18 = load i1, i1* @syslog_task_ready, align 4, !dbg !13754
  br i1 %18, label %19, label %26, !dbg !13755

19:                                               ; preds = %17
  %20 = tail call i32 @xTaskGetSchedulerState() #21, !dbg !13756
  %21 = icmp eq i32 %20, 0, !dbg !13757
  br i1 %21, label %22, label %48, !dbg !13758

22:                                               ; preds = %19
  %23 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !13759
  %24 = and i32 %23, 255, !dbg !13760
  %25 = icmp eq i32 %24, 0, !dbg !13761
  br i1 %25, label %26, label %48, !dbg !13762

26:                                               ; preds = %22, %17
  %27 = load i32, i32* @syslog_init_done, align 4, !dbg !13763
  %28 = icmp eq i32 %27, 0, !dbg !13764
  br i1 %28, label %71, label %29, !dbg !13765

29:                                               ; preds = %26
  %30 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !13766, !srcloc !13493
  %31 = extractvalue { i32, i32 } %30, 0, !dbg !13766
  call void @llvm.dbg.value(metadata i32 %31, metadata !13490, metadata !DIExpression()) #20, !dbg !13768
  call void @llvm.dbg.value(metadata i32 undef, metadata !13491, metadata !DIExpression()) #20, !dbg !13768
  call void @llvm.dbg.value(metadata i32 %31, metadata !13735, metadata !DIExpression()), !dbg !13769
  %32 = load i32, i32* @syslog_init_done, align 4, !dbg !13770
  %33 = icmp ugt i32 %32, 1, !dbg !13772
  br i1 %33, label %34, label %45, !dbg !13773

34:                                               ; preds = %29
  %35 = tail call fastcc i32 @get_current_time_in_ms() #19, !dbg !13774
  %36 = bitcast i8* %0 to i8**, !dbg !13776
  %37 = load i8*, i8** %36, align 4, !dbg !13776
  %38 = icmp ult i32 %3, 4, !dbg !13777
  br i1 %38, label %39, label %42, !dbg !13777

39:                                               ; preds = %34
  %40 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !13777
  %41 = load i8*, i8** %40, align 4, !dbg !13777
  br label %42, !dbg !13777

42:                                               ; preds = %34, %39
  %43 = phi i8* [ %41, %39 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.271, i32 0, i32 0), %34 ], !dbg !13777
  %44 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef %35, i8* noundef %37, i8* noundef %43, i8* noundef %1, i32 noundef %2) #21, !dbg !13778
  br label %45, !dbg !13779

45:                                               ; preds = %42, %29
  %46 = tail call i32 @vprintf(i8* noundef %4, [1 x i32] %5) #21, !dbg !13780
  %47 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.273, i32 0, i32 0)) #21, !dbg !13781
  call void @llvm.dbg.value(metadata i32 %31, metadata !13509, metadata !DIExpression()) #20, !dbg !13782
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %31) #20, !dbg !13784, !srcloc !13515
  br label %71, !dbg !13785

48:                                               ; preds = %22, %19
  %49 = bitcast %struct.syslog_buffer_t** %7 to i8*, !dbg !13786
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #20, !dbg !13786
  %50 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #19, !dbg !13787
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %50, metadata !13742, metadata !DIExpression()), !dbg !13788
  store %struct.syslog_buffer_t* %50, %struct.syslog_buffer_t** %7, align 4, !dbg !13789
  %51 = icmp eq %struct.syslog_buffer_t* %50, null, !dbg !13790
  br i1 %51, label %70, label %52, !dbg !13792

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 0, !dbg !13793
  call void @llvm.dbg.value(metadata i8* %53, metadata !13744, metadata !DIExpression()), !dbg !13788
  %54 = bitcast i8* %53 to i32*, !dbg !13794
  store i32 0, i32* %54, align 4, !dbg !13795
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 4, !dbg !13796
  call void @llvm.dbg.value(metadata i8* %55, metadata !13745, metadata !DIExpression()), !dbg !13788
  %56 = bitcast i8* %0 to i8**, !dbg !13797
  %57 = load i8*, i8** %56, align 4, !dbg !13797
  %58 = bitcast i8* %55 to i8**, !dbg !13798
  store i8* %57, i8** %58, align 4, !dbg !13799
  %59 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 8, !dbg !13800
  %60 = bitcast i8* %59 to i32*, !dbg !13800
  store i32 %3, i32* %60, align 4, !dbg !13801
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 12, !dbg !13802
  %62 = bitcast i8* %61 to i8**, !dbg !13802
  store i8* %1, i8** %62, align 4, !dbg !13803
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 16, !dbg !13804
  %64 = bitcast i8* %63 to i32*, !dbg !13804
  store i32 %2, i32* %64, align 4, !dbg !13805
  %65 = tail call fastcc i32 @get_current_time_in_ms() #19, !dbg !13806
  %66 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 20, !dbg !13807
  %67 = bitcast i8* %66 to i32*, !dbg !13807
  store i32 %65, i32* %67, align 4, !dbg !13808
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 24, !dbg !13809
  %69 = tail call i32 @vsnprintf(i8* noundef nonnull %68, i32 noundef 256, i8* noundef %4, [1 x i32] %5) #21, !dbg !13810
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %7, metadata !13742, metadata !DIExpression(DW_OP_deref)), !dbg !13788
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %7) #19, !dbg !13811
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #20, !dbg !13812
  br label %71

70:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #20, !dbg !13812
  br label %71

71:                                               ; preds = %52, %6, %12, %26, %45, %70
  ret void, !dbg !13813
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_uart_init(i32 noundef %0) local_unnamed_addr #3 !dbg !13814 {
  %2 = alloca %struct.hal_uart_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13816, metadata !DIExpression()), !dbg !13826
  %3 = bitcast %struct.hal_uart_config_t* %2 to i8*, !dbg !13827
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #20, !dbg !13827
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %2, metadata !13817, metadata !DIExpression()), !dbg !13828
  %4 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 0, !dbg !13829
  store i32 9, i32* %4, align 4, !dbg !13830
  %5 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 3, !dbg !13831
  store i32 0, i32* %5, align 4, !dbg !13832
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 2, !dbg !13833
  store i32 0, i32* %6, align 4, !dbg !13834
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 1, !dbg !13835
  store i32 3, i32* %7, align 4, !dbg !13836
  store i32 %0, i32* @g_log_uart_port, align 4, !dbg !13837
  %8 = call i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %2) #21, !dbg !13838
  call void @llvm.dbg.value(metadata i32 %8, metadata !13825, metadata !DIExpression()), !dbg !13826
  %9 = load i32, i32* @syslog_init_done, align 4, !dbg !13839
  %10 = or i32 %9, 1, !dbg !13839
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !13839
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #20, !dbg !13840
  ret i32 %8, !dbg !13841
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_putchar(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !13842 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !13846, metadata !DIExpression()), !dbg !13847
  %2 = load i32, i32* @g_log_uart_port, align 4, !dbg !13848
  tail call void @hal_uart_put_char(i32 noundef %2, i8 noundef zeroext %0) #21, !dbg !13849
  ret void, !dbg !13850
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_init() local_unnamed_addr #3 !dbg !13851 {
  %1 = tail call i8* @memset(i8* noundef bitcast ([16 x %struct.syslog_buffer_t]* @syslog_buffer_pool to i8*), i32 noundef 0, i32 noundef 4736) #21, !dbg !13852
  ret void, !dbg !13853
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_create() local_unnamed_addr #3 !dbg !13854 {
  %1 = tail call i8* @xQueueGenericCreate(i32 noundef 8, i32 noundef 4, i8 noundef zeroext 0) #21, !dbg !13855
  store i8* %1, i8** @g_log_queue, align 4, !dbg !13856
  %2 = icmp eq i8* %1, null, !dbg !13857
  br i1 %2, label %3, label %5, !dbg !13859

3:                                                ; preds = %0
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.281, i32 0, i32 0)) #21, !dbg !13860
  br label %5, !dbg !13862

5:                                                ; preds = %3, %0
  ret void, !dbg !13863
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_queue_receive(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #3 !dbg !13864 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !13868, metadata !DIExpression()), !dbg !13870
  %2 = load i8*, i8** @g_log_queue, align 4, !dbg !13871
  %3 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !13871
  %4 = tail call i32 @xQueueGenericReceive(i8* noundef %2, i8* noundef %3, i32 noundef -1, i32 noundef 0) #21, !dbg !13871
  call void @llvm.dbg.value(metadata i32 %4, metadata !13869, metadata !DIExpression()), !dbg !13870
  %5 = icmp ne i32 %4, 1, !dbg !13872
  %6 = sext i1 %5 to i32, !dbg !13873
  ret i32 %6, !dbg !13874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_normal_log(%struct.normal_log_message_t* noundef %0) local_unnamed_addr #3 !dbg !13875 {
  call void @llvm.dbg.value(metadata %struct.normal_log_message_t* %0, metadata !13881, metadata !DIExpression()), !dbg !13882
  %2 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 4, !dbg !13883
  %3 = load i32, i32* %2, align 4, !dbg !13883
  %4 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 0, !dbg !13884
  %5 = load i8*, i8** %4, align 4, !dbg !13884
  %6 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 1, !dbg !13885
  %7 = load i32, i32* %6, align 4, !dbg !13885
  %8 = icmp ult i32 %7, 4, !dbg !13885
  br i1 %8, label %9, label %12, !dbg !13885

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !13885
  %11 = load i8*, i8** %10, align 4, !dbg !13885
  br label %12, !dbg !13885

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.271, i32 0, i32 0), %1 ], !dbg !13885
  %14 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 2, !dbg !13886
  %15 = load i8*, i8** %14, align 4, !dbg !13886
  %16 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 3, !dbg !13887
  %17 = load i32, i32* %16, align 4, !dbg !13887
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #21, !dbg !13888
  %19 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 5, i32 0, !dbg !13889
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.282, i32 0, i32 0), i8* noundef nonnull %19) #21, !dbg !13890
  ret void, !dbg !13891
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_hex_dump(%struct.hex_dump_message_t* noundef %0) local_unnamed_addr #3 !dbg !13892 {
  call void @llvm.dbg.value(metadata %struct.hex_dump_message_t* %0, metadata !13898, metadata !DIExpression()), !dbg !13899
  %2 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 4, !dbg !13900
  %3 = load i32, i32* %2, align 4, !dbg !13900
  %4 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 0, !dbg !13901
  %5 = load i8*, i8** %4, align 4, !dbg !13901
  %6 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 1, !dbg !13902
  %7 = load i32, i32* %6, align 4, !dbg !13902
  %8 = icmp ult i32 %7, 4, !dbg !13902
  br i1 %8, label %9, label %12, !dbg !13902

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !13902
  %11 = load i8*, i8** %10, align 4, !dbg !13902
  br label %12, !dbg !13902

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.271, i32 0, i32 0), %1 ], !dbg !13902
  %14 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 2, !dbg !13903
  %15 = load i8*, i8** %14, align 4, !dbg !13903
  %16 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 3, !dbg !13904
  %17 = load i32, i32* %16, align 4, !dbg !13904
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.272, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #21, !dbg !13905
  %19 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 5, i32 0, !dbg !13906
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.282, i32 0, i32 0), i8* noundef nonnull %19) #21, !dbg !13907
  %21 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 6, !dbg !13908
  %22 = load i32, i32* %21, align 4, !dbg !13908
  %23 = icmp ugt i32 %22, 128, !dbg !13910
  %24 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 7, i32 0, !dbg !13911
  br i1 %23, label %25, label %30, !dbg !13912

25:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef 128) #19, !dbg !13913
  %26 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 8, !dbg !13915
  %27 = load i8*, i8** %26, align 4, !dbg !13915
  %28 = load i32, i32* %21, align 4, !dbg !13916
  %29 = add i32 %28, -128, !dbg !13917
  tail call void @hex_dump_data(i8* noundef %27, i32 noundef %29) #19, !dbg !13918
  br label %31, !dbg !13919

30:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef %22) #19, !dbg !13920
  br label %31

31:                                               ; preds = %30, %25
  ret void, !dbg !13922
}

; Function Attrs: noinline nounwind optsize
define dso_local void @process_log_message(%struct.log_message_t* noundef %0) local_unnamed_addr #3 !dbg !13923 {
  call void @llvm.dbg.value(metadata %struct.log_message_t* %0, metadata !13929, metadata !DIExpression()), !dbg !13933
  %2 = load i32, i32* @syslog_drop_count, align 4, !dbg !13934
  %3 = icmp eq i32 %2, 0, !dbg !13934
  br i1 %3, label %9, label %4, !dbg !13935

4:                                                ; preds = %1
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !13936, !srcloc !13493
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13936
  call void @llvm.dbg.value(metadata i32 %6, metadata !13490, metadata !DIExpression()) #20, !dbg !13938
  call void @llvm.dbg.value(metadata i32 undef, metadata !13491, metadata !DIExpression()) #20, !dbg !13938
  call void @llvm.dbg.value(metadata i32 %6, metadata !13930, metadata !DIExpression()), !dbg !13939
  %7 = load i32, i32* @syslog_drop_count, align 4, !dbg !13940
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.283, i32 0, i32 0), i32 noundef %7) #21, !dbg !13941
  store i32 0, i32* @syslog_drop_count, align 4, !dbg !13942
  call void @llvm.dbg.value(metadata i32 %6, metadata !13509, metadata !DIExpression()) #20, !dbg !13943
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #20, !dbg !13945, !srcloc !13515
  br label %9, !dbg !13946

9:                                                ; preds = %4, %1
  %10 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 0, !dbg !13947
  %11 = load i32, i32* %10, align 4, !dbg !13947
  %12 = icmp eq i32 %11, 0, !dbg !13949
  br i1 %12, label %13, label %16, !dbg !13950

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, !dbg !13951
  %15 = bitcast %union.anon.22* %14 to %struct.normal_log_message_t*, !dbg !13953
  tail call void @print_normal_log(%struct.normal_log_message_t* noundef nonnull %15) #19, !dbg !13954
  br label %18, !dbg !13955

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, i32 0, !dbg !13956
  tail call void @print_hex_dump(%struct.hex_dump_message_t* noundef nonnull %17) #19, !dbg !13958
  br label %18

18:                                               ; preds = %16, %13
  ret void, !dbg !13959
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @syslog_task_entry(i8* nocapture readnone %0) #13 !dbg !13960 {
  %2 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i8* undef, metadata !13962, metadata !DIExpression()), !dbg !13967
  store i1 true, i1* @syslog_task_ready, align 4, !dbg !13968
  tail call void @vTaskPrioritySet(i8* noundef null, i32 noundef 1) #21, !dbg !13969
  %3 = bitcast %struct.syslog_buffer_t** %2 to i8*
  br label %4, !dbg !13970

4:                                                ; preds = %12, %1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !13971
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !13963, metadata !DIExpression()), !dbg !13972
  store %struct.syslog_buffer_t* null, %struct.syslog_buffer_t** %2, align 4, !dbg !13973
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %2, metadata !13963, metadata !DIExpression(DW_OP_deref)), !dbg !13972
  %5 = call i32 @log_queue_receive(%struct.syslog_buffer_t** noundef nonnull %2) #19, !dbg !13974
  %6 = icmp eq i32 %5, 0, !dbg !13976
  br i1 %6, label %7, label %12, !dbg !13977

7:                                                ; preds = %4
  %8 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !13978
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %8, metadata !13963, metadata !DIExpression()), !dbg !13972
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 1, i32 0, !dbg !13980
  %10 = bitcast i8* %9 to %struct.log_message_t*, !dbg !13981
  call void @process_log_message(%struct.log_message_t* noundef nonnull %10) #19, !dbg !13982
  %11 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !13983
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !13963, metadata !DIExpression()), !dbg !13972
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %11) #19, !dbg !13984
  br label %12, !dbg !13985

12:                                               ; preds = %7, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !13986
  br label %4, !dbg !13987, !llvm.loop !13988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_init(void (%struct.syslog_config_s*)* noundef %0, i32 (%struct.syslog_config_s*)* noundef readonly %1, %struct.log_control_block_t** noundef %2) local_unnamed_addr #3 !dbg !13991 {
  %4 = alloca %struct.exception_config_type, align 4
  call void @llvm.dbg.value(metadata void (%struct.syslog_config_s*)* %0, metadata !14000, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata i32 (%struct.syslog_config_s*)* %1, metadata !14001, metadata !DIExpression()), !dbg !14009
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %2, metadata !14002, metadata !DIExpression()), !dbg !14009
  %5 = bitcast %struct.exception_config_type* %4 to i8*, !dbg !14010
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #20, !dbg !14010
  call void @llvm.dbg.declare(metadata %struct.exception_config_type* %4, metadata !14003, metadata !DIExpression()), !dbg !14011
  %6 = load i32, i32* @syslog_init_done, align 4, !dbg !14012
  %7 = and i32 %6, 2, !dbg !14014
  %8 = icmp eq i32 %7, 0, !dbg !14014
  br i1 %8, label %9, label %31, !dbg !14015

9:                                                ; preds = %3
  %10 = or i32 %6, 1, !dbg !14016
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !14016
  tail call void @buffer_pool_init() #19, !dbg !14017
  tail call void @log_queue_create() #19, !dbg !14018
  store i1 false, i1* @syslog_task_ready, align 4, !dbg !14019
  %11 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 0, !dbg !14020
  store void ()* @syslog_exception_cb, void ()** %11, align 4, !dbg !14021
  %12 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 1, !dbg !14022
  store void ()* null, void ()** %12, align 4, !dbg !14023
  %13 = call zeroext i1 @exception_register_callbacks(%struct.exception_config_type* noundef nonnull %4) #21, !dbg !14024
  %14 = call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @syslog_task_entry, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.286, i32 0, i32 0), i16 noundef zeroext 192, i8* noundef null, i32 noundef 8, i8** noundef nonnull @syslog_task_handle, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #21, !dbg !14025
  %15 = icmp eq i32 %14, 1, !dbg !14027
  br i1 %15, label %18, label %16, !dbg !14028

16:                                               ; preds = %9
  %17 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10.287, i32 0, i32 0)) #21, !dbg !14029
  br label %18, !dbg !14031

18:                                               ; preds = %16, %9
  %19 = call fastcc i32 @get_current_time_in_ms() #19, !dbg !14032
  %20 = load i32, i32* @syslog_init_done, align 4, !dbg !14033
  %21 = or i32 %20, 2, !dbg !14033
  store i32 %21, i32* @syslog_init_done, align 4, !dbg !14033
  store void (%struct.syslog_config_s*)* %0, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !14034
  store %struct.log_control_block_t** %2, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14035
  %22 = icmp eq i32 (%struct.syslog_config_s*)* %1, null, !dbg !14036
  br i1 %22, label %28, label %23, !dbg !14038

23:                                               ; preds = %18
  %24 = call i32 %1(%struct.syslog_config_s* noundef nonnull @syslog_config) #21, !dbg !14039
  %25 = icmp eq i32 %24, 0, !dbg !14042
  br i1 %25, label %28, label %26, !dbg !14043

26:                                               ; preds = %23
  %27 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !14044
  call void (i8*, i8*, i32, i32, i8*, ...) %27(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.log_init, i32 0, i32 0), i32 noundef 1040, i32 noundef 3, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11.288, i32 0, i32 0)) #21, !dbg !14044
  br label %28, !dbg !14047

28:                                               ; preds = %23, %26, %18
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !14048
  %30 = or i32 %29, 4, !dbg !14048
  store i32 %30, i32* @syslog_init_done, align 4, !dbg !14048
  br label %31, !dbg !14049

31:                                               ; preds = %3, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #20, !dbg !14049
  ret void, !dbg !14049
}

; Function Attrs: noinline nounwind optsize
define internal void @syslog_exception_cb() #3 !dbg !14050 {
  tail call fastcc void @syslog_buffer_dump() #19, !dbg !14051
  ret void, !dbg !14052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @syslog_buffer_dump() unnamed_addr #3 !dbg !14053 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !14056, metadata !DIExpression()), !dbg !14058
  call void @llvm.dbg.value(metadata i32 0, metadata !14055, metadata !DIExpression()), !dbg !14058
  br label %1, !dbg !14059

1:                                                ; preds = %0, %10
  %2 = phi i32 [ 0, %0 ], [ %12, %10 ]
  %3 = phi %struct.syslog_buffer_t* [ null, %0 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !14055, metadata !DIExpression()), !dbg !14058
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %3, metadata !14056, metadata !DIExpression()), !dbg !14058
  %4 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %2, !dbg !14061
  %5 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %4, i32 0, i32 0, !dbg !14065
  %6 = load i32, i32* %5, align 4, !dbg !14065
  %7 = icmp eq i32 %6, 0, !dbg !14061
  br i1 %7, label %10, label %8, !dbg !14066

8:                                                ; preds = %1
  %9 = ptrtoint %struct.syslog_buffer_t* %3 to i32, !dbg !14067
  store i32 %9, i32* %5, align 4, !dbg !14069
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %4, metadata !14056, metadata !DIExpression()), !dbg !14058
  br label %10, !dbg !14070

10:                                               ; preds = %1, %8
  %11 = phi %struct.syslog_buffer_t* [ %4, %8 ], [ %3, %1 ], !dbg !14058
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !14056, metadata !DIExpression()), !dbg !14058
  %12 = add nuw nsw i32 %2, 1, !dbg !14071
  call void @llvm.dbg.value(metadata i32 %12, metadata !14055, metadata !DIExpression()), !dbg !14058
  %13 = icmp eq i32 %12, 16, !dbg !14072
  br i1 %13, label %14, label %1, !dbg !14059, !llvm.loop !14073

14:                                               ; preds = %10
  %15 = tail call fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %11) #19, !dbg !14075
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !14056, metadata !DIExpression()), !dbg !14058
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.289, i32 0, i32 0)) #21, !dbg !14076
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !14056, metadata !DIExpression()), !dbg !14058
  %17 = icmp eq %struct.syslog_buffer_t* %15, null, !dbg !14077
  br i1 %17, label %26, label %18, !dbg !14077

18:                                               ; preds = %14, %18
  %19 = phi %struct.syslog_buffer_t* [ %22, %18 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !14056, metadata !DIExpression()), !dbg !14058
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !14057, metadata !DIExpression()), !dbg !14058
  %20 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 0, !dbg !14078
  %21 = load i32, i32* %20, align 4, !dbg !14078
  %22 = inttoptr i32 %21 to %struct.syslog_buffer_t*, !dbg !14080
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %22, metadata !14056, metadata !DIExpression()), !dbg !14058
  store i32 1, i32* %20, align 4, !dbg !14081
  %23 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 1, i32 0, !dbg !14082
  %24 = bitcast i8* %23 to %struct.log_message_t*, !dbg !14083
  tail call void @process_log_message(%struct.log_message_t* noundef nonnull %24) #19, !dbg !14084
  %25 = icmp eq i32 %21, 0, !dbg !14077
  br i1 %25, label %26, label %18, !dbg !14077, !llvm.loop !14085

26:                                               ; preds = %18, %14
  ret void, !dbg !14087
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %0) unnamed_addr #16 !dbg !14088 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !14092, metadata !DIExpression()), !dbg !14096
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !14093, metadata !DIExpression()), !dbg !14096
  %2 = icmp eq %struct.syslog_buffer_t* %0, null, !dbg !14097
  br i1 %2, label %44, label %3, !dbg !14099

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !14100
  %5 = load i32, i32* %4, align 4, !dbg !14100
  %6 = icmp eq i32 %5, 0, !dbg !14101
  br i1 %6, label %44, label %7, !dbg !14102

7:                                                ; preds = %3, %41
  %8 = phi i32 [ %43, %41 ], [ %5, %3 ], !dbg !14103
  %9 = phi %struct.syslog_buffer_t* [ %38, %41 ], [ null, %3 ]
  %10 = phi %struct.syslog_buffer_t* [ %12, %41 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %9, metadata !14093, metadata !DIExpression()), !dbg !14096
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !14092, metadata !DIExpression()), !dbg !14096
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !14094, metadata !DIExpression()), !dbg !14096
  %11 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 0, !dbg !14103
  %12 = inttoptr i32 %8 to %struct.syslog_buffer_t*, !dbg !14105
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !14092, metadata !DIExpression()), !dbg !14096
  %13 = icmp eq %struct.syslog_buffer_t* %9, null, !dbg !14106
  br i1 %13, label %35, label %14, !dbg !14108

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 1, i32 20, !dbg !14109
  %16 = bitcast i8* %15 to i32*, !dbg !14109
  %17 = load i32, i32* %16, align 4, !dbg !14109
  %18 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %9, i32 0, i32 1, i32 20, !dbg !14110
  %19 = bitcast i8* %18 to i32*, !dbg !14110
  %20 = load i32, i32* %19, align 4, !dbg !14110
  %21 = icmp ult i32 %17, %20, !dbg !14111
  br i1 %21, label %35, label %22, !dbg !14112

22:                                               ; preds = %14, %27
  %23 = phi %struct.syslog_buffer_t* [ %28, %27 ], [ %9, %14 ], !dbg !14113
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %23, metadata !14095, metadata !DIExpression()), !dbg !14096
  %24 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !14115
  %25 = load i32, i32* %24, align 4, !dbg !14115
  %26 = icmp eq i32 %25, 0, !dbg !14118
  br i1 %26, label %33, label %27, !dbg !14119

27:                                               ; preds = %22
  %28 = inttoptr i32 %25 to %struct.syslog_buffer_t*, !dbg !14120
  %29 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %28, i32 0, i32 1, i32 20, !dbg !14120
  %30 = bitcast i8* %29 to i32*, !dbg !14120
  %31 = load i32, i32* %30, align 4, !dbg !14120
  %32 = icmp ult i32 %17, %31, !dbg !14121
  br i1 %32, label %33, label %22, !dbg !14122, !llvm.loop !14123

33:                                               ; preds = %27, %22
  %34 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !14115
  store i32 %25, i32* %11, align 4, !dbg !14126
  br label %35, !dbg !14128

35:                                               ; preds = %7, %14, %33
  %36 = phi %struct.syslog_buffer_t* [ %10, %33 ], [ %9, %14 ], [ %9, %7 ]
  %37 = phi i32* [ %34, %33 ], [ %11, %14 ], [ %11, %7 ]
  %38 = phi %struct.syslog_buffer_t* [ %9, %33 ], [ %10, %14 ], [ %10, %7 ], !dbg !14096
  %39 = ptrtoint %struct.syslog_buffer_t* %36 to i32, !dbg !14129
  store i32 %39, i32* %37, align 4, !dbg !14129
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %38, metadata !14093, metadata !DIExpression()), !dbg !14096
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !14092, metadata !DIExpression()), !dbg !14096
  %40 = icmp eq i32 %8, 0, !dbg !14130
  br i1 %40, label %44, label %41, !dbg !14131, !llvm.loop !14132

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %12, i32 0, i32 0
  %43 = load i32, i32* %42, align 4, !dbg !14103
  br label %7, !dbg !14131

44:                                               ; preds = %35, %1, %3
  %45 = phi %struct.syslog_buffer_t* [ %0, %3 ], [ null, %1 ], [ %38, %35 ], !dbg !14096
  ret %struct.syslog_buffer_t* %45, !dbg !14134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @syslog_get_config(%struct.syslog_config_s* nocapture noundef writeonly %0) local_unnamed_addr #15 !dbg !14135 {
  call void @llvm.dbg.value(metadata %struct.syslog_config_s* %0, metadata !14139, metadata !DIExpression()), !dbg !14140
  %2 = bitcast %struct.syslog_config_s* %0 to i64*, !dbg !14141
  %3 = load i64, i64* bitcast (%struct.syslog_config_s* @syslog_config to i64*), align 8, !dbg !14141
  store i64 %3, i64* %2, align 4, !dbg !14141
  ret void, !dbg !14142
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_set_filter(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !14143 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14147, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i8* %1, metadata !14148, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i8* %2, metadata !14149, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i32 %3, metadata !14150, metadata !DIExpression()), !dbg !14154
  %5 = tail call i32 @str_to_log_switch(i8* noundef %1) #19, !dbg !14155
  call void @llvm.dbg.value(metadata i32 %5, metadata !14152, metadata !DIExpression()), !dbg !14154
  %6 = icmp slt i32 %5, 0, !dbg !14156
  br i1 %6, label %47, label %7, !dbg !14158

7:                                                ; preds = %4
  %8 = tail call i32 @str_to_print_level(i8* noundef %2) #19, !dbg !14159
  call void @llvm.dbg.value(metadata i32 %8, metadata !14153, metadata !DIExpression()), !dbg !14154
  %9 = icmp slt i32 %8, 0, !dbg !14160
  br i1 %9, label %47, label %10, !dbg !14162

10:                                               ; preds = %7
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.290, i32 0, i32 0)) #21, !dbg !14163
  %12 = icmp eq i32 %11, 0, !dbg !14165
  %13 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14166
  br i1 %12, label %14, label %31, !dbg !14167

14:                                               ; preds = %10
  %15 = icmp eq %struct.log_control_block_t** %13, null, !dbg !14168
  br i1 %15, label %47, label %16, !dbg !14171

16:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 0, metadata !14151, metadata !DIExpression()), !dbg !14154
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %13, align 4, !dbg !14172
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !14173
  br i1 %18, label %43, label %19, !dbg !14173

19:                                               ; preds = %16, %19
  %20 = phi %struct.log_control_block_t* [ %29, %19 ], [ %17, %16 ]
  %21 = phi i32 [ %27, %19 ], [ 0, %16 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !14151, metadata !DIExpression()), !dbg !14154
  %22 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %20, i32 0, i32 1, !dbg !14174
  store i32 %5, i32* %22, align 4, !dbg !14176
  %23 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14177
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %21, !dbg !14178
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !14178
  %26 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %25, i32 0, i32 2, !dbg !14179
  store i32 %8, i32* %26, align 4, !dbg !14180
  %27 = add nuw nsw i32 %21, 1, !dbg !14181
  call void @llvm.dbg.value(metadata i32 %27, metadata !14151, metadata !DIExpression()), !dbg !14154
  %28 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %27, !dbg !14172
  %29 = load %struct.log_control_block_t*, %struct.log_control_block_t** %28, align 4, !dbg !14172
  %30 = icmp eq %struct.log_control_block_t* %29, null, !dbg !14173
  br i1 %30, label %43, label %19, !dbg !14173, !llvm.loop !14182

31:                                               ; preds = %10
  %32 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %13, i8* noundef %0) #19, !dbg !14184
  call void @llvm.dbg.value(metadata i32 %32, metadata !14151, metadata !DIExpression()), !dbg !14154
  %33 = icmp slt i32 %32, 0, !dbg !14186
  br i1 %33, label %47, label %34, !dbg !14188

34:                                               ; preds = %31
  %35 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14189
  %36 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %35, i32 %32, !dbg !14190
  %37 = load %struct.log_control_block_t*, %struct.log_control_block_t** %36, align 4, !dbg !14190
  %38 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %37, i32 0, i32 1, !dbg !14191
  store i32 %5, i32* %38, align 4, !dbg !14192
  %39 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14193
  %40 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %39, i32 %32, !dbg !14194
  %41 = load %struct.log_control_block_t*, %struct.log_control_block_t** %40, align 4, !dbg !14194
  %42 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %41, i32 0, i32 2, !dbg !14195
  store i32 %8, i32* %42, align 4, !dbg !14196
  br label %43

43:                                               ; preds = %19, %16, %34
  %44 = icmp eq i32 %3, 0, !dbg !14197
  br i1 %44, label %47, label %45, !dbg !14199

45:                                               ; preds = %43
  %46 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !14200
  tail call void %46(%struct.syslog_config_s* noundef nonnull @syslog_config) #21, !dbg !14202
  br label %47, !dbg !14203

47:                                               ; preds = %43, %45, %31, %14, %7, %4
  %48 = phi i32 [ -1, %4 ], [ -1, %7 ], [ -1, %14 ], [ -1, %31 ], [ 0, %45 ], [ 0, %43 ], !dbg !14154
  ret i32 %48, !dbg !14204
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_log_switch(i8* noundef %0) local_unnamed_addr #3 !dbg !14205 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14209, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.value(metadata i32 0, metadata !14210, metadata !DIExpression()), !dbg !14211
  br label %2, !dbg !14212

2:                                                ; preds = %2, %1
  %3 = phi i1 [ false, %1 ], [ true, %2 ]
  %4 = phi i32 [ 0, %1 ], [ 1, %2 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !14210, metadata !DIExpression()), !dbg !14211
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %4, !dbg !14214
  %6 = load i8*, i8** %5, align 4, !dbg !14214
  %7 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %6) #21, !dbg !14218
  %8 = icmp eq i32 %7, 0, !dbg !14218
  %9 = or i1 %8, %3, !dbg !14219
  br i1 %9, label %10, label %2, !dbg !14219

10:                                               ; preds = %2
  %11 = select i1 %8, i32 %4, i32 -1, !dbg !14219
  ret i32 %11, !dbg !14220
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_print_level(i8* noundef %0) local_unnamed_addr #3 !dbg !14221 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14223, metadata !DIExpression()), !dbg !14225
  call void @llvm.dbg.value(metadata i32 0, metadata !14224, metadata !DIExpression()), !dbg !14225
  br label %2, !dbg !14226

2:                                                ; preds = %1, %8
  %3 = phi i32 [ 0, %1 ], [ %9, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !14224, metadata !DIExpression()), !dbg !14225
  %4 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !14228
  %5 = load i8*, i8** %4, align 4, !dbg !14228
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #21, !dbg !14232
  %7 = icmp eq i32 %6, 0, !dbg !14232
  br i1 %7, label %11, label %8, !dbg !14233

8:                                                ; preds = %2
  %9 = add nuw nsw i32 %3, 1, !dbg !14234
  call void @llvm.dbg.value(metadata i32 %9, metadata !14224, metadata !DIExpression()), !dbg !14225
  %10 = icmp eq i32 %9, 4, !dbg !14235
  br i1 %10, label %11, label %2, !dbg !14226, !llvm.loop !14236

11:                                               ; preds = %8, %2
  %12 = phi i32 [ %3, %2 ], [ -1, %8 ], !dbg !14225
  ret i32 %12, !dbg !14238
}

; Function Attrs: optsize
declare dso_local i32 @strcmp(i8* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) unnamed_addr #3 !dbg !14239 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !14243, metadata !DIExpression()), !dbg !14246
  call void @llvm.dbg.value(metadata i8* %1, metadata !14244, metadata !DIExpression()), !dbg !14246
  call void @llvm.dbg.value(metadata i32 0, metadata !14245, metadata !DIExpression()), !dbg !14246
  %3 = icmp eq %struct.log_control_block_t** %0, null, !dbg !14247
  br i1 %3, label %19, label %4, !dbg !14249

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !14245, metadata !DIExpression()), !dbg !14246
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !14250
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !14251
  br i1 %6, label %19, label %7, !dbg !14251

7:                                                ; preds = %4, %14
  %8 = phi %struct.log_control_block_t* [ %17, %14 ], [ %5, %4 ]
  %9 = phi i32 [ %15, %14 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14245, metadata !DIExpression()), !dbg !14246
  %10 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !14252
  %11 = load i8*, i8** %10, align 4, !dbg !14252
  %12 = tail call i32 @strcmp(i8* noundef %11, i8* noundef %1) #21, !dbg !14255
  %13 = icmp eq i32 %12, 0, !dbg !14255
  br i1 %13, label %19, label %14, !dbg !14256

14:                                               ; preds = %7
  %15 = add nuw nsw i32 %9, 1, !dbg !14257
  call void @llvm.dbg.value(metadata i32 %15, metadata !14245, metadata !DIExpression()), !dbg !14246
  %16 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %15, !dbg !14250
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %16, align 4, !dbg !14250
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !14251
  br i1 %18, label %19, label %7, !dbg !14251, !llvm.loop !14258

19:                                               ; preds = %7, %14, %4, %2
  %20 = phi i32 [ -1, %2 ], [ -1, %4 ], [ %9, %7 ], [ -1, %14 ], !dbg !14246
  ret i32 %20, !dbg !14260
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_at_set_filter(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !14261 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14265, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i32 %1, metadata !14266, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i32 %2, metadata !14267, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i32 %3, metadata !14268, metadata !DIExpression()), !dbg !14270
  %5 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.290, i32 0, i32 0)) #21, !dbg !14271
  %6 = icmp eq i32 %5, 0, !dbg !14273
  %7 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14274
  br i1 %6, label %8, label %25, !dbg !14275

8:                                                ; preds = %4
  %9 = icmp eq %struct.log_control_block_t** %7, null, !dbg !14276
  br i1 %9, label %41, label %10, !dbg !14279

10:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 0, metadata !14269, metadata !DIExpression()), !dbg !14270
  %11 = load %struct.log_control_block_t*, %struct.log_control_block_t** %7, align 4, !dbg !14280
  %12 = icmp eq %struct.log_control_block_t* %11, null, !dbg !14281
  br i1 %12, label %37, label %13, !dbg !14281

13:                                               ; preds = %10, %13
  %14 = phi %struct.log_control_block_t* [ %23, %13 ], [ %11, %10 ]
  %15 = phi i32 [ %21, %13 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !14269, metadata !DIExpression()), !dbg !14270
  %16 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %14, i32 0, i32 1, !dbg !14282
  store i32 %1, i32* %16, align 4, !dbg !14284
  %17 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14285
  %18 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %15, !dbg !14286
  %19 = load %struct.log_control_block_t*, %struct.log_control_block_t** %18, align 4, !dbg !14286
  %20 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %19, i32 0, i32 2, !dbg !14287
  store i32 %2, i32* %20, align 4, !dbg !14288
  %21 = add nuw nsw i32 %15, 1, !dbg !14289
  call void @llvm.dbg.value(metadata i32 %21, metadata !14269, metadata !DIExpression()), !dbg !14270
  %22 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %21, !dbg !14280
  %23 = load %struct.log_control_block_t*, %struct.log_control_block_t** %22, align 4, !dbg !14280
  %24 = icmp eq %struct.log_control_block_t* %23, null, !dbg !14281
  br i1 %24, label %37, label %13, !dbg !14281, !llvm.loop !14290

25:                                               ; preds = %4
  %26 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %7, i8* noundef %0) #19, !dbg !14292
  call void @llvm.dbg.value(metadata i32 %26, metadata !14269, metadata !DIExpression()), !dbg !14270
  %27 = icmp slt i32 %26, 0, !dbg !14294
  br i1 %27, label %41, label %28, !dbg !14296

28:                                               ; preds = %25
  %29 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14297
  %30 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %29, i32 %26, !dbg !14298
  %31 = load %struct.log_control_block_t*, %struct.log_control_block_t** %30, align 4, !dbg !14298
  %32 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %31, i32 0, i32 1, !dbg !14299
  store i32 %1, i32* %32, align 4, !dbg !14300
  %33 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !14301
  %34 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %33, i32 %26, !dbg !14302
  %35 = load %struct.log_control_block_t*, %struct.log_control_block_t** %34, align 4, !dbg !14302
  %36 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %35, i32 0, i32 2, !dbg !14303
  store i32 %2, i32* %36, align 4, !dbg !14304
  br label %37

37:                                               ; preds = %13, %10, %28
  %38 = icmp eq i32 %3, 0, !dbg !14305
  br i1 %38, label %41, label %39, !dbg !14307

39:                                               ; preds = %37
  %40 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !14308
  tail call void %40(%struct.syslog_config_s* noundef nonnull @syslog_config) #21, !dbg !14310
  br label %41, !dbg !14311

41:                                               ; preds = %37, %39, %25, %8
  %42 = phi i32 [ -1, %8 ], [ -1, %25 ], [ 0, %39 ], [ 0, %37 ], !dbg !14270
  ret i32 %42, !dbg !14312
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_str2val(%struct.log_control_block_t** noundef %0, i8* noundef %1) local_unnamed_addr #3 !dbg !14313 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !14317, metadata !DIExpression()), !dbg !14328
  call void @llvm.dbg.value(metadata i8* %1, metadata !14318, metadata !DIExpression()), !dbg !14328
  call void @llvm.dbg.value(metadata i32 0, metadata !14319, metadata !DIExpression()), !dbg !14328
  %7 = bitcast i8** %3 to i8*, !dbg !14329
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #20, !dbg !14329
  %8 = bitcast i8** %4 to i8*, !dbg !14330
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #20, !dbg !14330
  %9 = bitcast i8** %5 to i8*, !dbg !14331
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #20, !dbg !14331
  call void @llvm.dbg.value(metadata i8 0, metadata !14324, metadata !DIExpression()), !dbg !14328
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #20, !dbg !14332
  call void @llvm.dbg.value(metadata i8 poison, metadata !14324, metadata !DIExpression()), !dbg !14328
  call void @llvm.dbg.value(metadata i32 0, metadata !14319, metadata !DIExpression()), !dbg !14328
  br label %10, !dbg !14333

10:                                               ; preds = %2, %51
  %11 = phi i32 [ 0, %2 ], [ %37, %51 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !14319, metadata !DIExpression()), !dbg !14328
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !14334
  call void @llvm.dbg.value(metadata i8** %3, metadata !14321, metadata !DIExpression(DW_OP_deref)), !dbg !14328
  %13 = call fastcc i32 @syslog_get_a_string(i8* noundef %12, i8** noundef nonnull %3) #19, !dbg !14336
  call void @llvm.dbg.value(metadata i32 %13, metadata !14320, metadata !DIExpression()), !dbg !14328
  %14 = icmp eq i32 %13, 0, !dbg !14337
  br i1 %14, label %61, label %15, !dbg !14339

15:                                               ; preds = %10
  %16 = add i32 %13, %11, !dbg !14340
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !14341
  %18 = load i8, i8* %17, align 1, !dbg !14341
  %19 = icmp eq i8 %18, 0, !dbg !14342
  br i1 %19, label %61, label %20, !dbg !14343

20:                                               ; preds = %15
  store i8 0, i8* %17, align 1, !dbg !14344
  %21 = add i32 %16, 1, !dbg !14345
  call void @llvm.dbg.value(metadata i32 %21, metadata !14319, metadata !DIExpression()), !dbg !14328
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !14346
  call void @llvm.dbg.value(metadata i8** %4, metadata !14322, metadata !DIExpression(DW_OP_deref)), !dbg !14328
  %23 = call fastcc i32 @syslog_get_a_string(i8* noundef %22, i8** noundef nonnull %4) #19, !dbg !14347
  call void @llvm.dbg.value(metadata i32 %23, metadata !14320, metadata !DIExpression()), !dbg !14328
  %24 = icmp eq i32 %23, 0, !dbg !14348
  br i1 %24, label %61, label %25, !dbg !14350

25:                                               ; preds = %20
  %26 = add i32 %23, %21, !dbg !14351
  %27 = getelementptr inbounds i8, i8* %1, i32 %26, !dbg !14352
  call void @llvm.dbg.value(metadata i1 undef, metadata !14324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14328
  store i8 0, i8* %27, align 1, !dbg !14353
  %28 = add i32 %26, 1, !dbg !14354
  call void @llvm.dbg.value(metadata i32 %28, metadata !14319, metadata !DIExpression()), !dbg !14328
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !14355
  call void @llvm.dbg.value(metadata i8** %5, metadata !14323, metadata !DIExpression(DW_OP_deref)), !dbg !14328
  %30 = call fastcc i32 @syslog_get_a_string(i8* noundef %29, i8** noundef nonnull %5) #19, !dbg !14356
  call void @llvm.dbg.value(metadata i32 %30, metadata !14320, metadata !DIExpression()), !dbg !14328
  %31 = icmp eq i32 %30, 0, !dbg !14357
  br i1 %31, label %61, label %32, !dbg !14359

32:                                               ; preds = %25
  %33 = add i32 %30, %28, !dbg !14360
  %34 = getelementptr inbounds i8, i8* %1, i32 %33, !dbg !14361
  %35 = load i8, i8* %34, align 1, !dbg !14361
  %36 = icmp eq i8 %35, 0, !dbg !14362
  call void @llvm.dbg.value(metadata i1 %36, metadata !14324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14328
  store i8 0, i8* %34, align 1, !dbg !14363
  %37 = add i32 %33, 1, !dbg !14364
  call void @llvm.dbg.value(metadata i32 %37, metadata !14319, metadata !DIExpression()), !dbg !14328
  %38 = load i8*, i8** %3, align 4, !dbg !14365
  call void @llvm.dbg.value(metadata i8* %38, metadata !14321, metadata !DIExpression()), !dbg !14328
  %39 = call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %0, i8* noundef %38) #19, !dbg !14366
  call void @llvm.dbg.value(metadata i32 %39, metadata !14320, metadata !DIExpression()), !dbg !14328
  %40 = icmp slt i32 %39, 0, !dbg !14367
  br i1 %40, label %61, label %41, !dbg !14369

41:                                               ; preds = %32
  %42 = load i8*, i8** %4, align 4, !dbg !14370
  call void @llvm.dbg.value(metadata i8* %42, metadata !14322, metadata !DIExpression()), !dbg !14328
  call void @llvm.dbg.value(metadata i8* %6, metadata !14327, metadata !DIExpression(DW_OP_deref)), !dbg !14328
  %43 = call i32 @toi(i8* noundef %42, i8* noundef nonnull %6) #21, !dbg !14371
  call void @llvm.dbg.value(metadata i32 %43, metadata !14325, metadata !DIExpression()), !dbg !14328
  %44 = load i8, i8* %6, align 1, !dbg !14372
  call void @llvm.dbg.value(metadata i8 %44, metadata !14327, metadata !DIExpression()), !dbg !14328
  %45 = icmp eq i8 %44, 4, !dbg !14374
  br i1 %45, label %61, label %46, !dbg !14375

46:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 undef, metadata !14325, metadata !DIExpression()), !dbg !14328
  %47 = load i8*, i8** %5, align 4, !dbg !14376
  call void @llvm.dbg.value(metadata i8* %47, metadata !14323, metadata !DIExpression()), !dbg !14328
  call void @llvm.dbg.value(metadata i8* %6, metadata !14327, metadata !DIExpression(DW_OP_deref)), !dbg !14328
  %48 = call i32 @toi(i8* noundef %47, i8* noundef nonnull %6) #21, !dbg !14377
  call void @llvm.dbg.value(metadata i32 %48, metadata !14326, metadata !DIExpression()), !dbg !14328
  %49 = load i8, i8* %6, align 1, !dbg !14378
  call void @llvm.dbg.value(metadata i8 %49, metadata !14327, metadata !DIExpression()), !dbg !14328
  %50 = icmp eq i8 %49, 4, !dbg !14380
  br i1 %50, label %61, label %51, !dbg !14381

51:                                               ; preds = %46
  %52 = icmp ne i32 %43, 0, !dbg !14382
  %53 = zext i1 %52 to i32, !dbg !14382
  call void @llvm.dbg.value(metadata i32 %53, metadata !14325, metadata !DIExpression()), !dbg !14328
  %54 = icmp ult i32 %48, 3, !dbg !14383
  %55 = select i1 %54, i32 %48, i32 3, !dbg !14383
  call void @llvm.dbg.value(metadata i32 %55, metadata !14326, metadata !DIExpression()), !dbg !14328
  %56 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %39, !dbg !14384
  %57 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !14384
  %58 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %57, i32 0, i32 1, !dbg !14385
  store i32 %53, i32* %58, align 4, !dbg !14386
  %59 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !14387
  %60 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %59, i32 0, i32 2, !dbg !14388
  store i32 %55, i32* %60, align 4, !dbg !14389
  call void @llvm.dbg.value(metadata i8 poison, metadata !14324, metadata !DIExpression()), !dbg !14328
  call void @llvm.dbg.value(metadata i32 %37, metadata !14319, metadata !DIExpression()), !dbg !14328
  br i1 %36, label %61, label %10, !dbg !14333, !llvm.loop !14390

61:                                               ; preds = %51, %46, %41, %32, %25, %20, %10, %15
  %62 = phi i32 [ -1, %15 ], [ -1, %10 ], [ -2, %20 ], [ -2, %25 ], [ -3, %32 ], [ -4, %41 ], [ -4, %46 ], [ 0, %51 ], !dbg !14328
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #20, !dbg !14392
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #20, !dbg !14392
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #20, !dbg !14392
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #20, !dbg !14392
  ret i32 %62, !dbg !14392
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @syslog_get_a_string(i8* noundef %0, i8** nocapture noundef writeonly %1) unnamed_addr #16 !dbg !14393 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14397, metadata !DIExpression()), !dbg !14400
  call void @llvm.dbg.value(metadata i8** %1, metadata !14398, metadata !DIExpression()), !dbg !14400
  br label %3, !dbg !14401

3:                                                ; preds = %6, %2
  %4 = phi i8* [ %0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i8* %4, metadata !14397, metadata !DIExpression()), !dbg !14400
  %5 = load i8, i8* %4, align 1, !dbg !14402
  switch i8 %5, label %9 [
    i8 32, label %6
    i8 0, label %8
  ], !dbg !14401

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !14403
  call void @llvm.dbg.value(metadata i8* %7, metadata !14397, metadata !DIExpression()), !dbg !14400
  br label %3, !dbg !14401, !llvm.loop !14405

8:                                                ; preds = %3
  store i8* null, i8** %1, align 4, !dbg !14407
  br label %19, !dbg !14410

9:                                                ; preds = %3
  store i8* %4, i8** %1, align 4, !dbg !14411
  br label %10, !dbg !14412

10:                                               ; preds = %13, %9
  %11 = phi i8* [ %4, %9 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !14397, metadata !DIExpression()), !dbg !14400
  %12 = load i8, i8* %11, align 1, !dbg !14413
  switch i8 %12, label %13 [
    i8 32, label %15
    i8 0, label %15
  ], !dbg !14414

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !14415
  call void @llvm.dbg.value(metadata i8* %14, metadata !14397, metadata !DIExpression()), !dbg !14400
  br label %10, !dbg !14412, !llvm.loop !14417

15:                                               ; preds = %10, %10
  %16 = ptrtoint i8* %11 to i32, !dbg !14419
  %17 = ptrtoint i8* %4 to i32, !dbg !14419
  %18 = sub i32 %16, %17, !dbg !14419
  br label %19, !dbg !14420

19:                                               ; preds = %15, %8
  %20 = phi i32 [ 0, %8 ], [ %18, %15 ], !dbg !14400
  ret i32 %20, !dbg !14421
}

; Function Attrs: optsize
declare dso_local i32 @toi(i8* noundef, i8* noundef) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_val2str(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) local_unnamed_addr #3 !dbg !14422 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !14429, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i8* %1, metadata !14430, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 0, metadata !14431, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 0, metadata !14432, metadata !DIExpression()), !dbg !14434
  %3 = icmp eq %struct.log_control_block_t** %0, null
  call void @llvm.dbg.value(metadata i32 0, metadata !14431, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 0, metadata !14432, metadata !DIExpression()), !dbg !14434
  br i1 %3, label %31, label %4, !dbg !14435

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !14431, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 0, metadata !14432, metadata !DIExpression()), !dbg !14434
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !14436
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !14435
  br i1 %6, label %27, label %7, !dbg !14437

7:                                                ; preds = %4, %7
  %8 = phi %struct.log_control_block_t* [ %25, %7 ], [ %5, %4 ]
  %9 = phi i32 [ %22, %7 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %7 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14432, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 %10, metadata !14431, metadata !DIExpression()), !dbg !14434
  %11 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !14438
  %12 = sub nsw i32 256, %9, !dbg !14440
  %13 = icmp eq i32 %10, 0, !dbg !14441
  %14 = select i1 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.293, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.275, i32 0, i32 0), !dbg !14442
  %15 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !14443
  %16 = load i8*, i8** %15, align 4, !dbg !14443
  %17 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 1, !dbg !14444
  %18 = load i32, i32* %17, align 4, !dbg !14444
  %19 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 2, !dbg !14445
  %20 = load i32, i32* %19, align 4, !dbg !14445
  %21 = tail call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef %11, i32 noundef %12, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13.294, i32 0, i32 0), i8* noundef %14, i8* noundef %16, i32 noundef %18, i32 noundef %20) #21, !dbg !14446
  call void @llvm.dbg.value(metadata i32 %21, metadata !14433, metadata !DIExpression()), !dbg !14434
  %22 = add nsw i32 %21, %9, !dbg !14447
  call void @llvm.dbg.value(metadata i32 %22, metadata !14432, metadata !DIExpression()), !dbg !14434
  %23 = add nuw nsw i32 %10, 1, !dbg !14448
  call void @llvm.dbg.value(metadata i32 %23, metadata !14431, metadata !DIExpression()), !dbg !14434
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %23, !dbg !14436
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !14436
  %26 = icmp eq %struct.log_control_block_t* %25, null, !dbg !14435
  br i1 %26, label %27, label %7, !dbg !14437, !llvm.loop !14449

27:                                               ; preds = %7, %4
  %28 = phi i32 [ 0, %4 ], [ %22, %7 ]
  %29 = icmp sgt i32 %28, 255, !dbg !14451
  br i1 %29, label %30, label %31, !dbg !14453

30:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15.295, i32 0, i32 0), i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.296, i32 0, i32 0), i32 noundef 1467) #21, !dbg !14454
  br label %31, !dbg !14454

31:                                               ; preds = %2, %30, %27
  %32 = phi i32 [ %28, %30 ], [ %28, %27 ], [ 0, %2 ]
  ret i32 %32, !dbg !14456
}

; Function Attrs: optsize
declare dso_local i32 @snprintf(i8* noundef, i32 noundef, i8* noundef, ...) local_unnamed_addr #4

; Function Attrs: noinline nounwind optsize
define dso_local i8* @log_switch_to_str(i32 noundef %0) local_unnamed_addr #3 !dbg !14457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14461, metadata !DIExpression()), !dbg !14462
  %2 = icmp ugt i32 %0, 1, !dbg !14463
  br i1 %2, label %3, label %4, !dbg !14465

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.296, i32 0, i32 0), i32 noundef 1474) #21, !dbg !14466
  br label %4, !dbg !14466

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %0, !dbg !14468
  %6 = load i8*, i8** %5, align 4, !dbg !14468
  ret i8* %6, !dbg !14469
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @print_level_to_str(i32 noundef %0) local_unnamed_addr #3 !dbg !14470 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14474, metadata !DIExpression()), !dbg !14475
  %2 = icmp ugt i32 %0, 3, !dbg !14476
  br i1 %2, label %3, label %4, !dbg !14478

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16.296, i32 0, i32 0), i32 noundef 1480) #21, !dbg !14479
  br label %4, !dbg !14479

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %0, !dbg !14481
  %6 = load i8*, i8** %5, align 4, !dbg !14481
  ret i8* %6, !dbg !14482
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__wrap_printf(i8* noundef %0, ...) local_unnamed_addr #3 !dbg !14483 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !14487, metadata !DIExpression()), !dbg !14491
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !14492
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !14492
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !14488, metadata !DIExpression()), !dbg !14493
  %4 = load i32, i32* @syslog_init_done, align 4, !dbg !14494
  %5 = icmp eq i32 %4, 0, !dbg !14494
  br i1 %5, label %13, label %6, !dbg !14496

6:                                                ; preds = %1
  %7 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #20, !dbg !14497, !srcloc !13493
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !14497
  call void @llvm.dbg.value(metadata i32 %8, metadata !13490, metadata !DIExpression()) #20, !dbg !14499
  call void @llvm.dbg.value(metadata i32 undef, metadata !13491, metadata !DIExpression()) #20, !dbg !14499
  call void @llvm.dbg.value(metadata i32 %8, metadata !14490, metadata !DIExpression()), !dbg !14491
  call void @llvm.va_start(i8* nonnull %3), !dbg !14500
  %9 = bitcast %struct.__va_list* %2 to i32*, !dbg !14501
  %10 = load i32, i32* %9, align 4, !dbg !14501
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !14501
  %12 = call i32 @vprintf(i8* noundef %0, [1 x i32] %11) #21, !dbg !14501
  call void @llvm.dbg.value(metadata i32 %12, metadata !14489, metadata !DIExpression()), !dbg !14491
  call void @llvm.va_end(i8* nonnull %3), !dbg !14502
  call void @llvm.dbg.value(metadata i32 %8, metadata !13509, metadata !DIExpression()) #20, !dbg !14503
  call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %8) #20, !dbg !14505, !srcloc !13515
  br label %13, !dbg !14506

13:                                               ; preds = %1, %6
  %14 = phi i32 [ %12, %6 ], [ 0, %1 ], !dbg !14491
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !14507
  ret i32 %14, !dbg !14507
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @__io_putchar(i32 noundef %0) #3 !dbg !14508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14510, metadata !DIExpression()), !dbg !14511
  %2 = tail call i32 @bsp_io_def_uart_putchar(i32 noundef %0) #19, !dbg !14512
  ret i32 %2, !dbg !14513
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bsp_io_def_uart_putchar(i32 noundef %0) local_unnamed_addr #3 !dbg !14514 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14516, metadata !DIExpression()), !dbg !14518
  store i32 %0, i32* %2, align 4
  %3 = load i1, i1* @is_io_ready, align 1, !dbg !14519
  br i1 %3, label %4, label %36, !dbg !14521

4:                                                ; preds = %1
  %5 = tail call fastcc signext i8 @_uart_dma_blocking_is_safe() #19, !dbg !14522
  %6 = icmp eq i8 %5, 0, !dbg !14522
  %7 = bitcast i32* %2 to i8*
  br i1 %6, label %25, label %8, !dbg !14524

8:                                                ; preds = %4, %11
  call void @llvm.dbg.value(metadata i32* %2, metadata !14516, metadata !DIExpression(DW_OP_deref)), !dbg !14518
  %9 = call i32 @hal_uart_send_dma(i32 noundef 0, i8* noundef nonnull %7, i32 noundef 1) #21, !dbg !14525
  call void @llvm.dbg.value(metadata i32 %9, metadata !14517, metadata !DIExpression()), !dbg !14518
  %10 = icmp eq i32 %9, 0, !dbg !14528
  br i1 %10, label %11, label %15, !dbg !14529

11:                                               ; preds = %8
  %12 = load i8*, i8** @_g_semaphore_tx, align 4, !dbg !14530
  %13 = call i32 @xQueueGenericReceive(i8* noundef %12, i8* noundef null, i32 noundef 1000, i32 noundef 0) #21, !dbg !14530
  %14 = icmp eq i32 %13, 1, !dbg !14531
  br i1 %14, label %15, label %8, !dbg !14532, !llvm.loop !14533

15:                                               ; preds = %8, %11
  %16 = load i32, i32* %2, align 4, !dbg !14536
  call void @llvm.dbg.value(metadata i32 %16, metadata !14516, metadata !DIExpression()), !dbg !14518
  %17 = icmp eq i32 %16, 10, !dbg !14538
  br i1 %17, label %18, label %36, !dbg !14539

18:                                               ; preds = %15, %21
  %19 = call i32 @hal_uart_send_dma(i32 noundef 0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.301, i32 0, i32 0), i32 noundef 1) #21, !dbg !14540
  call void @llvm.dbg.value(metadata i32 %19, metadata !14517, metadata !DIExpression()), !dbg !14518
  %20 = icmp eq i32 %19, 0, !dbg !14542
  br i1 %20, label %21, label %34, !dbg !14543

21:                                               ; preds = %18
  %22 = load i8*, i8** @_g_semaphore_tx, align 4, !dbg !14544
  %23 = call i32 @xQueueGenericReceive(i8* noundef %22, i8* noundef null, i32 noundef 1000, i32 noundef 0) #21, !dbg !14544
  %24 = icmp eq i32 %23, 1, !dbg !14545
  br i1 %24, label %34, label %18, !dbg !14546, !llvm.loop !14547

25:                                               ; preds = %4, %25
  call void @llvm.dbg.value(metadata i32* %2, metadata !14516, metadata !DIExpression(DW_OP_deref)), !dbg !14518
  %26 = call i32 @hal_uart_send_dma(i32 noundef 0, i8* noundef nonnull %7, i32 noundef 1) #21, !dbg !14550
  call void @llvm.dbg.value(metadata i32 %26, metadata !14517, metadata !DIExpression()), !dbg !14518
  %27 = icmp eq i32 %26, 0, !dbg !14553
  br i1 %27, label %25, label %28, !dbg !14554, !llvm.loop !14555

28:                                               ; preds = %25
  %29 = load i32, i32* %2, align 4, !dbg !14558
  call void @llvm.dbg.value(metadata i32 %29, metadata !14516, metadata !DIExpression()), !dbg !14518
  %30 = icmp eq i32 %29, 10, !dbg !14560
  br i1 %30, label %31, label %36, !dbg !14561

31:                                               ; preds = %28, %31
  %32 = call i32 @hal_uart_send_dma(i32 noundef 0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.301, i32 0, i32 0), i32 noundef 1) #21, !dbg !14562
  call void @llvm.dbg.value(metadata i32 %32, metadata !14517, metadata !DIExpression()), !dbg !14518
  %33 = icmp eq i32 %32, 0, !dbg !14564
  br i1 %33, label %31, label %34, !dbg !14565, !llvm.loop !14566

34:                                               ; preds = %18, %21, %31
  %35 = load i32, i32* %2, align 4, !dbg !14569
  call void @llvm.dbg.value(metadata i32 %35, metadata !14516, metadata !DIExpression()), !dbg !14518
  br label %36, !dbg !14570

36:                                               ; preds = %28, %15, %1, %34
  %37 = phi i32 [ %35, %34 ], [ 0, %1 ], [ %16, %15 ], [ %29, %28 ], !dbg !14518
  ret i32 %37, !dbg !14571
}

; Function Attrs: noinline nounwind optsize
define internal fastcc signext i8 @_uart_dma_blocking_is_safe() unnamed_addr #3 !dbg !14572 {
  %1 = tail call i32 @xTaskGetSchedulerState() #21, !dbg !14575
  %2 = icmp eq i32 %1, 2, !dbg !14577
  br i1 %2, label %3, label %10, !dbg !14578

3:                                                ; preds = %0
  %4 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #20, !dbg !14579, !srcloc !14584
  call void @llvm.dbg.value(metadata i32 %4, metadata !14582, metadata !DIExpression()) #20, !dbg !14585
  %5 = icmp eq i32 %4, 0, !dbg !14586
  br i1 %5, label %6, label %10, !dbg !14587

6:                                                ; preds = %3
  %7 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !14588
  %8 = and i32 %7, 511, !dbg !14589
  %9 = icmp eq i32 %8, 0, !dbg !14590
  br i1 %9, label %11, label %10, !dbg !14591

10:                                               ; preds = %6, %3, %0
  br label %11, !dbg !14592

11:                                               ; preds = %6, %10
  %12 = phi i8 [ 0, %10 ], [ 1, %6 ], !dbg !14593
  ret i8 %12, !dbg !14594
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @__io_getchar() #3 !dbg !14595 {
  %1 = tail call i32 @bsp_io_def_uart_getchar() #19, !dbg !14596
  ret i32 %1, !dbg !14597
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bsp_io_def_uart_getchar() local_unnamed_addr #3 !dbg !14598 {
  %1 = alloca i8, align 1
  %2 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 0) #21, !dbg !14605
  call void @llvm.dbg.value(metadata i32 %2, metadata !14600, metadata !DIExpression()), !dbg !14606
  %3 = icmp eq i32 %2, 0, !dbg !14607
  br i1 %3, label %4, label %9, !dbg !14608

4:                                                ; preds = %0, %4
  %5 = load i8*, i8** @_g_semaphore_rx, align 4, !dbg !14609
  %6 = tail call i32 @xQueueGenericReceive(i8* noundef %5, i8* noundef null, i32 noundef -1, i32 noundef 0) #21, !dbg !14609
  %7 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 0) #21, !dbg !14605
  call void @llvm.dbg.value(metadata i32 %7, metadata !14600, metadata !DIExpression()), !dbg !14606
  %8 = icmp eq i32 %7, 0, !dbg !14607
  br i1 %8, label %4, label %9, !dbg !14608

9:                                                ; preds = %4, %0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #20, !dbg !14611
  call void @llvm.dbg.value(metadata i8* %1, metadata !14602, metadata !DIExpression(DW_OP_deref)), !dbg !14612
  %10 = call i32 @hal_uart_receive_dma(i32 noundef 0, i8* noundef nonnull %1, i32 noundef 1) #21, !dbg !14613
  %11 = load i8, i8* %1, align 1, !dbg !14614
  call void @llvm.dbg.value(metadata i8 %11, metadata !14602, metadata !DIExpression()), !dbg !14612
  %12 = zext i8 %11 to i32, !dbg !14614
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #20, !dbg !14615
  ret i32 %12, !dbg !14616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_write(i8* noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14617 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14621, metadata !DIExpression()), !dbg !14625
  call void @llvm.dbg.value(metadata i32 %1, metadata !14622, metadata !DIExpression()), !dbg !14625
  %3 = load i1, i1* @is_io_ready, align 1, !dbg !14626
  %4 = icmp sgt i32 %1, 0
  %5 = and i1 %4, %3, !dbg !14628
  br i1 %5, label %6, label %48, !dbg !14628

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i32 %1, !dbg !14629
  %8 = getelementptr inbounds i8, i8* %7, i32 -1, !dbg !14630
  %9 = load i8, i8* %8, align 1, !dbg !14631
  call void @llvm.dbg.value(metadata i8 %9, metadata !14624, metadata !DIExpression()), !dbg !14625
  %10 = tail call fastcc signext i8 @_uart_dma_blocking_is_safe() #19, !dbg !14632
  %11 = icmp eq i8 %10, 0, !dbg !14632
  br i1 %11, label %34, label %12, !dbg !14634

12:                                               ; preds = %6, %19
  %13 = phi i32 [ %17, %19 ], [ %1, %6 ], !dbg !14635
  call void @llvm.dbg.value(metadata i32 %13, metadata !14623, metadata !DIExpression()), !dbg !14625
  %14 = sub i32 0, %13, !dbg !14637
  %15 = getelementptr inbounds i8, i8* %7, i32 %14, !dbg !14637
  %16 = tail call i32 @hal_uart_send_dma(i32 noundef 0, i8* noundef nonnull %15, i32 noundef %13) #21, !dbg !14639
  %17 = sub i32 %13, %16, !dbg !14640
  call void @llvm.dbg.value(metadata i32 %17, metadata !14623, metadata !DIExpression()), !dbg !14625
  %18 = icmp eq i32 %17, 0, !dbg !14641
  br i1 %18, label %23, label %19, !dbg !14642

19:                                               ; preds = %12
  %20 = load i8*, i8** @_g_semaphore_tx, align 4, !dbg !14643
  %21 = tail call i32 @xQueueGenericReceive(i8* noundef %20, i8* noundef null, i32 noundef 1000, i32 noundef 0) #21, !dbg !14643
  %22 = icmp eq i32 %21, 0, !dbg !14642
  br i1 %22, label %23, label %12, !dbg !14644, !llvm.loop !14645

23:                                               ; preds = %12, %19
  %24 = icmp eq i8 %9, 10, !dbg !14648
  br i1 %24, label %25, label %48, !dbg !14650

25:                                               ; preds = %23, %30
  %26 = phi i32 [ %28, %30 ], [ 1, %23 ], !dbg !14635
  call void @llvm.dbg.value(metadata i32 %26, metadata !14623, metadata !DIExpression()), !dbg !14625
  %27 = tail call i32 @hal_uart_send_dma(i32 noundef 0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.301, i32 0, i32 0), i32 noundef %26) #21, !dbg !14651
  %28 = sub i32 %26, %27, !dbg !14653
  call void @llvm.dbg.value(metadata i32 %28, metadata !14623, metadata !DIExpression()), !dbg !14625
  %29 = icmp eq i32 %28, 0, !dbg !14654
  br i1 %29, label %48, label %30, !dbg !14655

30:                                               ; preds = %25
  %31 = load i8*, i8** @_g_semaphore_tx, align 4, !dbg !14656
  %32 = tail call i32 @xQueueGenericReceive(i8* noundef %31, i8* noundef null, i32 noundef 1000, i32 noundef 0) #21, !dbg !14656
  %33 = icmp eq i32 %32, 0, !dbg !14655
  br i1 %33, label %48, label %25, !dbg !14657, !llvm.loop !14658

34:                                               ; preds = %6, %34
  %35 = phi i32 [ %39, %34 ], [ %1, %6 ], !dbg !14661
  call void @llvm.dbg.value(metadata i32 %35, metadata !14623, metadata !DIExpression()), !dbg !14625
  %36 = sub i32 0, %35, !dbg !14663
  %37 = getelementptr inbounds i8, i8* %7, i32 %36, !dbg !14663
  %38 = tail call i32 @hal_uart_send_dma(i32 noundef 0, i8* noundef nonnull %37, i32 noundef %35) #21, !dbg !14665
  %39 = sub i32 %35, %38, !dbg !14666
  call void @llvm.dbg.value(metadata i32 %39, metadata !14623, metadata !DIExpression()), !dbg !14625
  %40 = icmp eq i32 %39, 0, !dbg !14667
  br i1 %40, label %41, label %34, !dbg !14667, !llvm.loop !14668

41:                                               ; preds = %34
  %42 = icmp eq i8 %9, 10, !dbg !14671
  br i1 %42, label %43, label %48, !dbg !14673

43:                                               ; preds = %41, %43
  %44 = phi i32 [ %46, %43 ], [ 1, %41 ], !dbg !14661
  call void @llvm.dbg.value(metadata i32 %44, metadata !14623, metadata !DIExpression()), !dbg !14625
  %45 = tail call i32 @hal_uart_send_dma(i32 noundef 0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.301, i32 0, i32 0), i32 noundef %44) #21, !dbg !14674
  %46 = sub i32 %44, %45, !dbg !14676
  call void @llvm.dbg.value(metadata i32 %46, metadata !14623, metadata !DIExpression()), !dbg !14625
  %47 = icmp eq i32 %46, 0, !dbg !14677
  br i1 %47, label %48, label %43, !dbg !14677, !llvm.loop !14678

48:                                               ; preds = %30, %25, %43, %41, %23, %2
  %49 = phi i32 [ 0, %2 ], [ %1, %23 ], [ %1, %41 ], [ %1, %43 ], [ %1, %25 ], [ %1, %30 ], !dbg !14625
  ret i32 %49, !dbg !14681
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bsp_io_def_uart_init() local_unnamed_addr #3 !dbg !14682 {
  %1 = alloca %struct.hal_uart_dma_config_t, align 4
  %2 = bitcast %struct.hal_uart_dma_config_t* %1 to i8*, !dbg !14695
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %2) #20, !dbg !14695
  call void @llvm.dbg.declare(metadata %struct.hal_uart_dma_config_t* %1, metadata !14684, metadata !DIExpression()), !dbg !14696
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(28) %2, i8* noundef nonnull align 4 dereferenceable(28) bitcast (%struct.hal_uart_dma_config_t* @__const.bsp_io_def_uart_init.dma_config to i8*), i32 28, i1 false), !dbg !14696
  %3 = tail call i32 @log_uart_init(i32 noundef 0) #21, !dbg !14697
  store i1 true, i1* @is_io_ready, align 1, !dbg !14698
  %4 = tail call i8* @xQueueGenericCreate(i32 noundef 1, i32 noundef 0, i8 noundef zeroext 3) #21, !dbg !14699
  store i8* %4, i8** @_g_semaphore_tx, align 4, !dbg !14700
  %5 = tail call i8* @xQueueGenericCreate(i32 noundef 1, i32 noundef 0, i8 noundef zeroext 3) #21, !dbg !14701
  store i8* %5, i8** @_g_semaphore_rx, align 4, !dbg !14702
  %6 = call i32 @hal_uart_set_dma(i32 noundef 0, %struct.hal_uart_dma_config_t* noundef nonnull %1) #21, !dbg !14703
  %7 = call i32 @hal_uart_register_callback(i32 noundef 0, void (i32, i8*)* noundef nonnull @_uart_event, i8* noundef null) #21, !dbg !14704
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %2) #20, !dbg !14705
  ret void, !dbg !14705
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #18

; Function Attrs: noinline nounwind optsize
define internal void @_uart_event(i32 noundef %0, i8* nocapture noundef readnone %1) #3 !dbg !14706 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14708, metadata !DIExpression()), !dbg !14711
  call void @llvm.dbg.value(metadata i8* %1, metadata !14709, metadata !DIExpression()), !dbg !14711
  %4 = bitcast i32* %3 to i8*, !dbg !14712
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !14712
  call void @llvm.dbg.value(metadata i32 0, metadata !14710, metadata !DIExpression()), !dbg !14711
  store i32 0, i32* %3, align 4, !dbg !14713
  switch i32 %0, label %13 [
    i32 1, label %6
    i32 2, label %5
  ], !dbg !14714

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32* %3, metadata !14710, metadata !DIExpression(DW_OP_deref)), !dbg !14711
  br label %6, !dbg !14715

6:                                                ; preds = %2, %5
  %7 = phi i8** [ @_g_semaphore_tx, %5 ], [ @_g_semaphore_rx, %2 ]
  %8 = load i8*, i8** %7, align 4, !dbg !14717
  %9 = call i32 @xQueueGiveFromISR(i8* noundef %8, i32* noundef nonnull %3) #21, !dbg !14717
  %10 = load i32, i32* %3, align 4, !dbg !14718
  call void @llvm.dbg.value(metadata i32 %10, metadata !14710, metadata !DIExpression()), !dbg !14711
  %11 = icmp eq i32 %10, 0, !dbg !14718
  br i1 %11, label %13, label %12, !dbg !14720

12:                                               ; preds = %6
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !14721
  call void asm sideeffect "dsb", ""() #20, !dbg !14721, !srcloc !14723
  call void asm sideeffect "isb", ""() #20, !dbg !14721, !srcloc !14724
  br label %13, !dbg !14721

13:                                               ; preds = %2, %12, %6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !14725
  ret void, !dbg !14725
}

attributes #0 = { nofree noinline norecurse noreturn nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree nosync nounwind willreturn }
attributes #13 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #16 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { naked noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { argmemonly nofree nounwind willreturn }
attributes #19 = { nobuiltin optsize "no-builtins" }
attributes #20 = { nounwind }
attributes #21 = { nobuiltin nounwind optsize "no-builtins" }
attributes #22 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !200, !270, !2016, !2020, !294, !313, !2065, !410, !422, !455, !492, !575, !628, !2068, !720, !759, !874, !924, !950, !1815, !1025, !1085, !1297, !2081, !1308, !2084, !1450, !1513, !1578, !1601, !2110, !1631, !2121, !1829, !1957, !2004}
!llvm.ident = !{!2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124, !2124}
!llvm.module.flags = !{!2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "DMA_LISR_FUNC", scope: !2, file: !3, line: 56, type: !197, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !113, globals: !175, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/dma.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!4 = !{!5, !34, !41, !46, !51, !97}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 82, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/dma_sw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33}
!9 = !DIEnumerator(name: "DMA_I2C1_TX", value: 2)
!10 = !DIEnumerator(name: "DMA_I2C1_RX", value: 3)
!11 = !DIEnumerator(name: "DMA_I2C2_TX", value: 4)
!12 = !DIEnumerator(name: "DMA_I2C2_RX", value: 5)
!13 = !DIEnumerator(name: "DMA_I2S_TX", value: 6)
!14 = !DIEnumerator(name: "DMA_I2S_RX", value: 7)
!15 = !DIEnumerator(name: "DMA_UART1TX", value: 8)
!16 = !DIEnumerator(name: "DMA_UART1RX", value: 9)
!17 = !DIEnumerator(name: "DMA_UART2TX", value: 10)
!18 = !DIEnumerator(name: "DMA_UART2RX", value: 11)
!19 = !DIEnumerator(name: "DMA_BTIF_TX", value: 12)
!20 = !DIEnumerator(name: "DMA_BTIF_RX", value: 13)
!21 = !DIEnumerator(name: "DMA_EP2I_TX", value: 14)
!22 = !DIEnumerator(name: "DMA_EP2O_RX", value: 15)
!23 = !DIEnumerator(name: "DMA_EP3I_TX", value: 16)
!24 = !DIEnumerator(name: "DMA_EP3O_RX", value: 17)
!25 = !DIEnumerator(name: "DMA_EP4IH_TX", value: 18)
!26 = !DIEnumerator(name: "DMA_EP4IV_TX", value: 19)
!27 = !DIEnumerator(name: "DMA_EP4O_RX", value: 20)
!28 = !DIEnumerator(name: "DMA_ADC_RX", value: 21)
!29 = !DIEnumerator(name: "DMA_HIF_TRX", value: 22)
!30 = !DIEnumerator(name: "DMA_SPIM_TX", value: 23)
!31 = !DIEnumerator(name: "DMA_SPIM_RX", value: 24)
!32 = !DIEnumerator(name: "DMA_SW", value: 25)
!33 = !DIEnumerator(name: "DMA_IDLE", value: 26)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 116, baseType: !7, size: 32, elements: !35)
!35 = !{!36, !37, !38, !39, !40}
!36 = !DIEnumerator(name: "DMA_HWTX", value: 0)
!37 = !DIEnumerator(name: "DMA_HWRX", value: 1)
!38 = !DIEnumerator(name: "DMA_SWCOPY", value: 2)
!39 = !DIEnumerator(name: "DMA_HWTX_RINGBUFF", value: 3)
!40 = !DIEnumerator(name: "DMA_HWRX_RINGBUFF", value: 4)
!41 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 110, baseType: !7, size: 32, elements: !42)
!42 = !{!43, !44, !45}
!43 = !DIEnumerator(name: "DMA_BYTE", value: 0)
!44 = !DIEnumerator(name: "DMA_SHORT", value: 1)
!45 = !DIEnumerator(name: "DMA_LONG", value: 2)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !47, line: 121, baseType: !7, size: 32, elements: !48)
!47 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/type_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!48 = !{!49, !50}
!49 = !DIEnumerator(name: "KAL_FALSE", value: 0)
!50 = !DIEnumerator(name: "KAL_TRUE", value: 1)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !52, line: 47, baseType: !53, size: 32, elements: !54)
!52 = !DIFile(filename: "../../../../..//driver/CMSIS/Device/MTK/mt7687/Include/mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!53 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!54 = !{!55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96}
!55 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!56 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!57 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!58 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!59 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!60 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!61 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!62 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!63 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!64 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!65 = !DIEnumerator(name: "CM4_UART1_IRQ", value: 0)
!66 = !DIEnumerator(name: "CM4_DMA_IRQ", value: 1)
!67 = !DIEnumerator(name: "CM4_HIF_IRQ", value: 2)
!68 = !DIEnumerator(name: "CM4_I2C1_IRQ", value: 3)
!69 = !DIEnumerator(name: "CM4_I2C2_IRQ", value: 4)
!70 = !DIEnumerator(name: "CM4_UART2_IRQ", value: 5)
!71 = !DIEnumerator(name: "CM4_MTK_CRYPTO_IRQ", value: 6)
!72 = !DIEnumerator(name: "CM4_SF_IRQ", value: 7)
!73 = !DIEnumerator(name: "CM4_EINT_IRQ", value: 8)
!74 = !DIEnumerator(name: "CM4_BTIF_IRQ", value: 9)
!75 = !DIEnumerator(name: "CM4_WDT_IRQ", value: 10)
!76 = !DIEnumerator(name: "CM4_AHB_MON_IRQ", value: 11)
!77 = !DIEnumerator(name: "CM4_SPI_SLAVE_IRQ", value: 12)
!78 = !DIEnumerator(name: "CM4_N9_WDT_IRQ", value: 13)
!79 = !DIEnumerator(name: "CM4_ADC_IRQ", value: 14)
!80 = !DIEnumerator(name: "CM4_IRDA_TX_IRQ", value: 15)
!81 = !DIEnumerator(name: "CM4_IRDA_RX_IRQ", value: 16)
!82 = !DIEnumerator(name: "CM4_USB_VBUS_ON_IRQ", value: 17)
!83 = !DIEnumerator(name: "CM4_USB_VBUS_OFF_IRQ", value: 18)
!84 = !DIEnumerator(name: "CM4_SPIS_CS_WAKEUP_IRQ", value: 19)
!85 = !DIEnumerator(name: "CM4_GPT3_IRQ", value: 20)
!86 = !DIEnumerator(name: "CM4_IRQ21_IRQ", value: 21)
!87 = !DIEnumerator(name: "CM4_AUDIO_IRQ", value: 22)
!88 = !DIEnumerator(name: "CM4_HIF_DMA_IRQ", value: 23)
!89 = !DIEnumerator(name: "CM4_GPT_IRQ", value: 24)
!90 = !DIEnumerator(name: "CM4_ADC_COMP_IRQ", value: 25)
!91 = !DIEnumerator(name: "CM4_AUDIO_WAKE_IRQ", value: 26)
!92 = !DIEnumerator(name: "CM4_SPIM_IRQ", value: 27)
!93 = !DIEnumerator(name: "CM4_USB_IRQ", value: 28)
!94 = !DIEnumerator(name: "CM4_UDMA_IRQ", value: 29)
!95 = !DIEnumerator(name: "CM4_TRNG_IRQ", value: 30)
!96 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 96)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 129, baseType: !7, size: 32, elements: !98)
!98 = !{!99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112}
!99 = !DIEnumerator(name: "VDMA_I2S_TX_CH", value: 12)
!100 = !DIEnumerator(name: "VDMA_I2S_RX_CH", value: 13)
!101 = !DIEnumerator(name: "VDMA_UART1TX_CH", value: 14)
!102 = !DIEnumerator(name: "VDMA_UART1RX_CH", value: 15)
!103 = !DIEnumerator(name: "VDMA_UART2TX_CH", value: 16)
!104 = !DIEnumerator(name: "VDMA_UART2RX_CH", value: 17)
!105 = !DIEnumerator(name: "VDMA_BTIF_TX_CH", value: 18)
!106 = !DIEnumerator(name: "VDMA_BTIF_RX_CH", value: 19)
!107 = !DIEnumerator(name: "VDMA_USB_EP2O_CH", value: 20)
!108 = !DIEnumerator(name: "VDMA_USB_EP3I_CH", value: 21)
!109 = !DIEnumerator(name: "VDMA_USB_EP3O_CH", value: 22)
!110 = !DIEnumerator(name: "VDMA_USB_EP4I_CH", value: 23)
!111 = !DIEnumerator(name: "VDMA_USB_EP4O_CH", value: 24)
!112 = !DIEnumerator(name: "VDMA_ADC_RX_CH", value: 25)
!113 = !{!114, !115, !117, !139, !146, !152, !163, !172, !161, !173, !174}
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint32", file: !47, line: 116, baseType: !7)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 32)
!116 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !114)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_FULLSIZE_HWMENU", file: !6, line: 174, baseType: !119)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 169, size: 128, elements: !120)
!120 = !{!121, !133, !135, !138}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "TMOD", scope: !119, file: !6, line: 170, baseType: !122, size: 16)
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_TMODE", file: !6, line: 127, baseType: !123)
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 124, size: 16, elements: !124)
!124 = !{!125, !127}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "burst_mode", scope: !123, file: !6, line: 125, baseType: !126, size: 8)
!126 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "cycle", scope: !123, file: !6, line: 126, baseType: !128, size: 8, offset: 8)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !129, line: 24, baseType: !130)
!129 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !131, line: 43, baseType: !132)
!131 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!132 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !119, file: !6, line: 171, baseType: !134, size: 32, offset: 32)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_Master", file: !6, line: 108, baseType: !5)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !119, file: !6, line: 172, baseType: !136, size: 32, offset: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !129, line: 48, baseType: !137)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !131, line: 79, baseType: !7)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "destination", scope: !119, file: !6, line: 173, baseType: !136, size: 32, offset: 96)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HWMENU", file: !6, line: 158, baseType: !141)
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 154, size: 96, elements: !142)
!142 = !{!143, !144, !145}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "TMOD", scope: !141, file: !6, line: 155, baseType: !122, size: 16)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !141, file: !6, line: 156, baseType: !134, size: 32, offset: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !141, file: !6, line: 157, baseType: !136, size: 32, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_SWCOPYMENU", file: !6, line: 179, baseType: !148)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 176, size: 64, elements: !149)
!149 = !{!150, !151}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "srcaddr", scope: !148, file: !6, line: 177, baseType: !136, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "dstaddr", scope: !148, file: !6, line: 178, baseType: !136, size: 32, offset: 32)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_FULLSIZE_HWRINGBUFF_MENU", file: !6, line: 167, baseType: !154)
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 160, size: 192, elements: !155)
!155 = !{!156, !157, !158, !159, !160, !162}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "TMOD", scope: !154, file: !6, line: 161, baseType: !122, size: 16)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !154, file: !6, line: 162, baseType: !134, size: 32, offset: 32)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !154, file: !6, line: 163, baseType: !136, size: 32, offset: 64)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "destination", scope: !154, file: !6, line: 164, baseType: !136, size: 32, offset: 96)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "WPPT", scope: !154, file: !6, line: 165, baseType: !161, size: 32, offset: 128)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "WPTO", scope: !154, file: !6, line: 166, baseType: !161, size: 32, offset: 160)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_HWRINGBUFF_MENU", file: !6, line: 152, baseType: !165)
!165 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 146, size: 160, elements: !166)
!166 = !{!167, !168, !169, !170, !171}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "TMOD", scope: !165, file: !6, line: 147, baseType: !122, size: 16)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !165, file: !6, line: 148, baseType: !134, size: 32, offset: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !165, file: !6, line: 149, baseType: !136, size: 32, offset: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "WPPT", scope: !165, file: !6, line: 150, baseType: !161, size: 32, offset: 96)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "WPTO", scope: !165, file: !6, line: 151, baseType: !161, size: 32, offset: 128)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !52, line: 95, baseType: !51)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint8", file: !47, line: 108, baseType: !132)
!175 = !{!0, !176, !185, !187, !192, !194}
!176 = !DIGlobalVariableExpression(var: !177, expr: !DIExpression())
!177 = distinct !DIGlobalVariable(name: "DMA_VFIFO_LISR_FUNC", scope: !2, file: !3, line: 60, type: !178, isLocal: false, isDefinition: true)
!178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 448, elements: !183)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "VOID_FUNC", file: !6, line: 197, baseType: !180)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DISubroutineType(types: !182)
!182 = !{null}
!183 = !{!184}
!184 = !DISubrange(count: 14)
!185 = !DIGlobalVariableExpression(var: !186, expr: !DIExpression())
!186 = distinct !DIGlobalVariable(name: "DMA_VFIFO_TO_LISR_FUNC", scope: !2, file: !3, line: 64, type: !178, isLocal: false, isDefinition: true)
!187 = !DIGlobalVariableExpression(var: !188, expr: !DIExpression())
!188 = distinct !DIGlobalVariable(name: "DMA_Owner", scope: !2, file: !3, line: 71, type: !189, isLocal: false, isDefinition: true)
!189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 352, elements: !190)
!190 = !{!191}
!191 = !DISubrange(count: 11)
!192 = !DIGlobalVariableExpression(var: !193, expr: !DIExpression())
!193 = distinct !DIGlobalVariable(name: "DMA_Channel_Status", scope: !2, file: !3, line: 68, type: !114, isLocal: true, isDefinition: true)
!194 = !DIGlobalVariableExpression(var: !195, expr: !DIExpression())
!195 = distinct !DIGlobalVariable(name: "DMA_used_channel", scope: !2, file: !3, line: 69, type: !196, isLocal: true, isDefinition: true)
!196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 88, elements: !190)
!197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 352, elements: !190)
!198 = !DIGlobalVariableExpression(var: !199, expr: !DIExpression())
!199 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !200, file: !201, line: 74, type: !126, isLocal: false, isDefinition: true)
!200 = distinct !DICompileUnit(language: DW_LANG_C99, file: !201, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !202, retainedTypes: !246, globals: !251, splitDebugInlining: false, nameTableKind: None)
!201 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/flash_sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!202 = !{!203, !217, !225, !231, !240}
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !204, line: 52, baseType: !53, size: 32, elements: !205)
!204 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/include/spi_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!205 = !{!206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216}
!206 = !DIEnumerator(name: "SF_DRV_NOT_READY", value: -1)
!207 = !DIEnumerator(name: "SF_DRV_READY", value: 0)
!208 = !DIEnumerator(name: "SF_DRV_READING", value: 1)
!209 = !DIEnumerator(name: "SF_DRV_DIRECT_READING", value: 2)
!210 = !DIEnumerator(name: "SF_DRV_PROGRAMMING", value: 3)
!211 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE", value: 4)
!212 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE_CRC", value: 5)
!213 = !DIEnumerator(name: "SF_DRV_SECTOR_4K_ERASING", value: 6)
!214 = !DIEnumerator(name: "SF_DRV_SECTOR_32K_ERASING", value: 7)
!215 = !DIEnumerator(name: "SF_DRV_SECTOR_64K_ERASING", value: 8)
!216 = !DIEnumerator(name: "SF_DRV_CHIP_ERASING", value: 9)
!217 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !218, line: 387, baseType: !53, size: 32, elements: !219)
!218 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!219 = !{!220, !221, !222, !223, !224}
!220 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!221 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!222 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!223 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!224 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!225 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !226, line: 666, baseType: !7, size: 32, elements: !227)
!226 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!227 = !{!228, !229, !230}
!228 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!229 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!230 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_BUS", value: 2)
!231 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !204, line: 73, baseType: !7, size: 32, elements: !232)
!232 = !{!233, !234, !235, !236, !237, !238, !239}
!233 = !DIEnumerator(name: "SF_TYPE_NONE", value: 0)
!234 = !DIEnumerator(name: "SF_TYPE_MXIC", value: 194)
!235 = !DIEnumerator(name: "SF_TYPE_WINBOND", value: 239)
!236 = !DIEnumerator(name: "SF_TYPE_GD", value: 200)
!237 = !DIEnumerator(name: "SF_TYPE_MICRON", value: 32)
!238 = !DIEnumerator(name: "SF_TYPE_CUSTOMER", value: 255)
!239 = !DIEnumerator(name: "SF_TYPE_COUNT", value: 65535)
!240 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !241, line: 123, baseType: !7, size: 32, elements: !242)
!241 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!242 = !{!243, !244, !245}
!243 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!244 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!245 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!246 = !{!161, !247, !249}
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !128)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !136)
!251 = !{!252, !198, !255, !257, !259, !261, !263, !265}
!252 = !DIGlobalVariableExpression(var: !253, expr: !DIExpression())
!253 = distinct !DIGlobalVariable(name: "sf_drvier_status", scope: !200, file: !201, line: 72, type: !254, isLocal: false, isDefinition: true)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_DRV_STATE", file: !204, line: 64, baseType: !203)
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !200, file: !201, line: 75, type: !126, isLocal: false, isDefinition: true)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(name: "gucFlashSFCMode", scope: !200, file: !201, line: 77, type: !136, isLocal: false, isDefinition: true)
!259 = !DIGlobalVariableExpression(var: !260, expr: !DIExpression())
!260 = distinct !DIGlobalVariable(name: "suspend_time", scope: !200, file: !201, line: 82, type: !136, isLocal: false, isDefinition: true)
!261 = !DIGlobalVariableExpression(var: !262, expr: !DIExpression())
!262 = distinct !DIGlobalVariable(name: "resume_suspend_on_ready", scope: !200, file: !201, line: 83, type: !136, isLocal: false, isDefinition: true)
!263 = !DIGlobalVariableExpression(var: !264, expr: !DIExpression())
!264 = distinct !DIGlobalVariable(name: "resume_suspend_on_checkready", scope: !200, file: !201, line: 84, type: !136, isLocal: false, isDefinition: true)
!265 = !DIGlobalVariableExpression(var: !266, expr: !DIExpression())
!266 = distinct !DIGlobalVariable(name: "sf_Mutex", scope: !200, file: !201, line: 78, type: !53, isLocal: true, isDefinition: true)
!267 = !DIGlobalVariableExpression(var: !266, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "g_u4ClkCnt1ms", scope: !270, file: !271, line: 71, type: !288, isLocal: false, isDefinition: true)
!270 = distinct !DICompileUnit(language: DW_LANG_C99, file: !271, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !272, retainedTypes: !273, globals: !274, splitDebugInlining: false, nameTableKind: None)
!271 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!272 = !{!46, !51}
!273 = !{!115, !173}
!274 = !{!268, !275}
!275 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression())
!276 = distinct !DIGlobalVariable(name: "GPTTimer", scope: !270, file: !271, line: 67, type: !277, isLocal: true, isDefinition: true)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPTStruct", file: !278, line: 111, baseType: !279)
!278 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/include/gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 109, size: 96, elements: !280)
!280 = !{!281}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_FUNC", scope: !279, file: !278, line: 110, baseType: !282, size: 96)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_func", file: !278, line: 106, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !278, line: 102, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "gpt0_func", scope: !283, file: !278, line: 103, baseType: !180, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "gpt1_func", scope: !283, file: !278, line: 104, baseType: !180, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "gpt3_func", scope: !283, file: !278, line: 105, baseType: !180, size: 32, offset: 64)
!288 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !289)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT32", file: !47, line: 62, baseType: !7)
!290 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 32))
!291 = !DIGlobalVariableExpression(var: !276, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "g_sfc_security_enable", scope: !294, file: !295, line: 58, type: !7, isLocal: false, isDefinition: true)
!294 = distinct !DICompileUnit(language: DW_LANG_C99, file: !295, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !296, retainedTypes: !303, globals: !310, splitDebugInlining: false, nameTableKind: None)
!295 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!296 = !{!297}
!297 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !204, line: 45, baseType: !7, size: 32, elements: !298)
!298 = !{!299, !300, !301, !302}
!299 = !DIEnumerator(name: "SF_UNDEF", value: 0)
!300 = !DIEnumerator(name: "SPI", value: 1)
!301 = !DIEnumerator(name: "SPIQ", value: 2)
!302 = !DIEnumerator(name: "QPI", value: 3)
!303 = !{!115, !304, !7, !305, !307, !308}
!304 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !132)
!310 = !{!292}
!311 = !DIGlobalVariableExpression(var: !312, expr: !DIExpression())
!312 = distinct !DIGlobalVariable(name: "gSFC_max_data_size", scope: !313, file: !314, line: 67, type: !7, isLocal: false, isDefinition: true)
!313 = distinct !DICompileUnit(language: DW_LANG_C99, file: !314, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !315, retainedTypes: !322, globals: !341, splitDebugInlining: false, nameTableKind: None)
!314 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/spi_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!315 = !{!231, !203, !297, !316}
!316 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !204, line: 66, baseType: !53, size: 32, elements: !317)
!317 = !{!318, !319, !320, !321}
!318 = !DIEnumerator(name: "FLASH_NOT_READY", value: -1)
!319 = !DIEnumerator(name: "FLASH_READY", value: 0)
!320 = !DIEnumerator(name: "FLASH_PROGRAMMING", value: 1)
!321 = !DIEnumerator(name: "FLASH_ERASING", value: 2)
!322 = !{!323, !325, !326, !7, !161, !340, !136, !114}
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 32)
!324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!325 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !328)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chip_info", file: !204, line: 137, size: 192, elements: !329)
!329 = !{!330, !333, !334, !335, !336, !337, !338, !339}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !328, file: !204, line: 138, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !328, file: !204, line: 139, baseType: !132, size: 8, offset: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !328, file: !204, line: 140, baseType: !325, size: 32, offset: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !328, file: !204, line: 141, baseType: !325, size: 32, offset: 96)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !328, file: !204, line: 142, baseType: !7, size: 32, offset: 128)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !328, file: !204, line: 144, baseType: !132, size: 8, offset: 160)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !328, file: !204, line: 145, baseType: !132, size: 8, offset: 168)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !328, file: !204, line: 146, baseType: !132, size: 8, offset: 176)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!341 = !{!311, !342, !347, !352, !357, !360, !362, !367, !369, !371, !373, !375, !377, !379, !381, !383, !385, !387, !389, !394, !396, !398, !400, !403}
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_winbond", scope: !313, file: !314, line: 70, type: !344, isLocal: false, isDefinition: true)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 96, elements: !345)
!345 = !{!346}
!346 = !DISubrange(count: 12)
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_winbond", scope: !313, file: !314, line: 73, type: !349, isLocal: false, isDefinition: true)
!349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 32, elements: !350)
!350 = !{!351}
!351 = !DISubrange(count: 4)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_winbond", scope: !313, file: !314, line: 76, type: !354, isLocal: false, isDefinition: true)
!354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 72, elements: !355)
!355 = !{!356}
!356 = !DISubrange(count: 9)
!357 = !DIGlobalVariableExpression(var: !358, expr: !DIExpression())
!358 = distinct !DIGlobalVariable(name: "cmdlist_suspend_winbond", scope: !313, file: !314, line: 79, type: !359, isLocal: false, isDefinition: true)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 32, elements: !350)
!360 = !DIGlobalVariableExpression(var: !361, expr: !DIExpression())
!361 = distinct !DIGlobalVariable(name: "cmdlist_resume_winbond", scope: !313, file: !314, line: 82, type: !359, isLocal: false, isDefinition: true)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_mxic", scope: !313, file: !314, line: 87, type: !364, isLocal: false, isDefinition: true)
!364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 64, elements: !365)
!365 = !{!366}
!366 = !DISubrange(count: 8)
!367 = !DIGlobalVariableExpression(var: !368, expr: !DIExpression())
!368 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_mxic", scope: !313, file: !314, line: 91, type: !364, isLocal: false, isDefinition: true)
!369 = !DIGlobalVariableExpression(var: !370, expr: !DIExpression())
!370 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_mxic", scope: !313, file: !314, line: 95, type: !364, isLocal: false, isDefinition: true)
!371 = !DIGlobalVariableExpression(var: !372, expr: !DIExpression())
!372 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd", scope: !313, file: !314, line: 100, type: !354, isLocal: false, isDefinition: true)
!373 = !DIGlobalVariableExpression(var: !374, expr: !DIExpression())
!374 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd", scope: !313, file: !314, line: 104, type: !354, isLocal: false, isDefinition: true)
!375 = !DIGlobalVariableExpression(var: !376, expr: !DIExpression())
!376 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd", scope: !313, file: !314, line: 108, type: !354, isLocal: false, isDefinition: true)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd25q32c", scope: !313, file: !314, line: 112, type: !364, isLocal: false, isDefinition: true)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd25q32c", scope: !313, file: !314, line: 115, type: !364, isLocal: false, isDefinition: true)
!381 = !DIGlobalVariableExpression(var: !382, expr: !DIExpression())
!382 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd25q32c", scope: !313, file: !314, line: 119, type: !364, isLocal: false, isDefinition: true)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_micron", scope: !313, file: !314, line: 123, type: !364, isLocal: false, isDefinition: true)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_micron", scope: !313, file: !314, line: 126, type: !364, isLocal: false, isDefinition: true)
!387 = !DIGlobalVariableExpression(var: !388, expr: !DIExpression())
!388 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_micron", scope: !313, file: !314, line: 130, type: !364, isLocal: false, isDefinition: true)
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_spimode", scope: !313, file: !314, line: 135, type: !391, isLocal: false, isDefinition: true)
!391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 56, elements: !392)
!392 = !{!393}
!393 = !DISubrange(count: 7)
!394 = !DIGlobalVariableExpression(var: !395, expr: !DIExpression())
!395 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_qpimode", scope: !313, file: !314, line: 138, type: !391, isLocal: false, isDefinition: true)
!396 = !DIGlobalVariableExpression(var: !397, expr: !DIExpression())
!397 = distinct !DIGlobalVariable(name: "spi_chip_info", scope: !313, file: !314, line: 142, type: !326, isLocal: false, isDefinition: true)
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "gd_write_sr2_1", scope: !313, file: !314, line: 161, type: !53, isLocal: false, isDefinition: true)
!400 = !DIGlobalVariableExpression(var: !401, expr: !DIExpression())
!401 = distinct !DIGlobalVariable(name: "support_flash_id", scope: !313, file: !314, line: 162, type: !402, isLocal: false, isDefinition: true)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_TYPT", file: !204, line: 81, baseType: !231)
!403 = !DIGlobalVariableExpression(var: !404, expr: !DIExpression())
!404 = distinct !DIGlobalVariable(name: "chips_data", scope: !313, file: !314, line: 144, type: !405, isLocal: true, isDefinition: true)
!405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 2496, elements: !406)
!406 = !{!407}
!407 = !DISubrange(count: 13)
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "gXtalFreq", scope: !410, file: !411, line: 43, type: !136, isLocal: true, isDefinition: true)
!410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !411, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !412, globals: !417, splitDebugInlining: false, nameTableKind: None)
!411 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/top.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!412 = !{!305, !289, !249, !413, !414, !416}
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !416)
!416 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int32", file: !47, line: 133, baseType: !7)
!417 = !{!408, !418}
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "gCpuFrequency", scope: !410, file: !411, line: 44, type: !136, isLocal: true, isDefinition: true)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "gUartClkFreq", scope: !422, file: !423, line: 54, type: !136, isLocal: false, isDefinition: true)
!422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !424, retainedTypes: !431, globals: !439, splitDebugInlining: false, nameTableKind: None)
!423 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!424 = !{!51, !425, !97}
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !426, line: 71, baseType: !7, size: 32, elements: !427)
!426 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/include/uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!427 = !{!428, !429, !430}
!428 = !DIEnumerator(name: "UART_PORT0", value: 0)
!429 = !DIEnumerator(name: "UART_PORT1", value: 1)
!430 = !DIEnumerator(name: "UART_MAX_PORT", value: 2)
!431 = !{!305, !136, !432, !434, !436, !437, !289}
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !434)
!434 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint16", file: !47, line: 113, baseType: !435)
!435 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT8", file: !47, line: 59, baseType: !132)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !436)
!439 = !{!440, !448, !420}
!440 = !DIGlobalVariableExpression(var: !441, expr: !DIExpression())
!441 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !422, file: !423, line: 57, type: !442, isLocal: false, isDefinition: true)
!442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 64, elements: !446)
!443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !444)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !332)
!446 = !{!447}
!447 = !DISubrange(count: 2)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !422, file: !423, line: 58, type: !450, isLocal: false, isDefinition: true)
!450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !451, size: 64, elements: !446)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !52, line: 97, baseType: !173)
!453 = !DIGlobalVariableExpression(var: !454, expr: !DIExpression())
!454 = distinct !DIGlobalVariable(name: "log_control_block_hal", scope: !455, file: !456, line: 127, type: !470, isLocal: false, isDefinition: true)
!455 = distinct !DICompileUnit(language: DW_LANG_C99, file: !456, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !457, globals: !469, splitDebugInlining: false, nameTableKind: None)
!456 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!457 = !{!458, !463}
!458 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !459, line: 65, baseType: !7, size: 32, elements: !460)
!459 = !DIFile(filename: "../../../../..//kernel/service/inc/syslog.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!460 = !{!461, !462}
!461 = !DIEnumerator(name: "DEBUG_LOG_ON", value: 0)
!462 = !DIEnumerator(name: "DEBUG_LOG_OFF", value: 1)
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !459, line: 74, baseType: !7, size: 32, elements: !464)
!464 = !{!465, !466, !467, !468}
!465 = !DIEnumerator(name: "PRINT_LEVEL_DEBUG", value: 0)
!466 = !DIEnumerator(name: "PRINT_LEVEL_INFO", value: 1)
!467 = !DIEnumerator(name: "PRINT_LEVEL_WARNING", value: 2)
!468 = !DIEnumerator(name: "PRINT_LEVEL_ERROR", value: 3)
!469 = !{!453}
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !459, line: 95, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !459, line: 89, size: 160, elements: !472)
!472 = !{!473, !474, !476, !478, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !471, file: !459, line: 90, baseType: !444, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !471, file: !459, line: 91, baseType: !475, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_switch_t", file: !459, line: 68, baseType: !458)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !471, file: !459, line: 92, baseType: !477, size: 32, offset: 64)
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "print_level_t", file: !459, line: 79, baseType: !463)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !471, file: !459, line: 93, baseType: !479, size: 32, offset: 96)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_print_t", file: !459, line: 82, baseType: !480)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 32)
!481 = !DISubroutineType(types: !482)
!482 = !{null, !161, !444, !53, !477, !444, null}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !471, file: !459, line: 94, baseType: !484, size: 32, offset: 128)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_dump_buffer_t", file: !459, line: 83, baseType: !485)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 32)
!486 = !DISubroutineType(types: !487)
!487 = !{null, !161, !444, !53, !477, !488, !53, !444, null}
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 32)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !492, file: !493, line: 51, type: !572, isLocal: false, isDefinition: true)
!492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !494, retainedTypes: !541, globals: !571, splitDebugInlining: false, nameTableKind: None)
!493 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!494 = !{!495, !506, !525, !532}
!495 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !496, line: 163, baseType: !53, size: 32, elements: !497)
!496 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!497 = !{!498, !499, !500, !501, !502, !503, !504, !505}
!498 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!499 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!500 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!501 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!502 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!503 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!504 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!505 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!506 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !496, line: 186, baseType: !7, size: 32, elements: !507)
!507 = !{!508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524}
!508 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!509 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!510 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!511 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!512 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!513 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!514 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!515 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!516 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!517 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!518 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!519 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!520 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!521 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!522 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!523 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!524 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!525 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !496, line: 176, baseType: !7, size: 32, elements: !526)
!526 = !{!527, !528, !529, !530, !531}
!527 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!528 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!529 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!530 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!531 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !533, line: 99, baseType: !7, size: 32, elements: !534)
!533 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!534 = !{!535, !536, !537, !538, !539, !540}
!535 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!536 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!537 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!538 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!539 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!540 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!541 = !{!542, !161}
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !544, line: 72, baseType: !545)
!544 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/hal_cache_hw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !544, line: 56, size: 525312, elements: !546)
!546 = !{!547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !561, !562, !566, !570}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !545, file: !544, line: 57, baseType: !250, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !545, file: !544, line: 58, baseType: !250, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !545, file: !544, line: 59, baseType: !250, size: 32, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !545, file: !544, line: 60, baseType: !250, size: 32, offset: 96)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !545, file: !544, line: 61, baseType: !250, size: 32, offset: 128)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !545, file: !544, line: 62, baseType: !250, size: 32, offset: 160)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !545, file: !544, line: 63, baseType: !250, size: 32, offset: 192)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !545, file: !544, line: 64, baseType: !250, size: 32, offset: 224)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !545, file: !544, line: 65, baseType: !250, size: 32, offset: 256)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !545, file: !544, line: 66, baseType: !250, size: 32, offset: 288)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !545, file: !544, line: 67, baseType: !558, size: 32, offset: 320)
!558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 32, elements: !559)
!559 = !{!560}
!560 = !DISubrange(count: 1)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !545, file: !544, line: 68, baseType: !250, size: 32, offset: 352)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !545, file: !544, line: 69, baseType: !563, size: 523904, offset: 384)
!563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 523904, elements: !564)
!564 = !{!565}
!565 = !DISubrange(count: 16372)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !545, file: !544, line: 70, baseType: !567, size: 512, offset: 524288)
!567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 512, elements: !568)
!568 = !{!569}
!569 = !DISubrange(count: 16)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !545, file: !544, line: 71, baseType: !567, size: 512, offset: 524800)
!571 = !{!490}
!572 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !126)
!573 = !DIGlobalVariableExpression(var: !574, expr: !DIExpression())
!574 = distinct !DIGlobalVariable(name: "g_cache_con", scope: !575, file: !576, line: 48, type: !610, isLocal: false, isDefinition: true)
!575 = distinct !DICompileUnit(language: DW_LANG_C99, file: !576, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !577, splitDebugInlining: false, nameTableKind: None)
!576 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_cache_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!577 = !{!573, !578, !581}
!578 = !DIGlobalVariableExpression(var: !579, expr: !DIExpression())
!579 = distinct !DIGlobalVariable(name: "g_cache_region_en", scope: !575, file: !576, line: 49, type: !580, isLocal: false, isDefinition: true)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGION_EN_Type", file: !533, line: 66, baseType: !136)
!581 = !DIGlobalVariableExpression(var: !582, expr: !DIExpression())
!582 = distinct !DIGlobalVariable(name: "g_cache_entry", scope: !575, file: !576, line: 50, type: !583, isLocal: false, isDefinition: true)
!583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !584, size: 1024, elements: !568)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_Type", file: !533, line: 90, baseType: !585)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 87, size: 64, elements: !586)
!586 = !{!587, !600}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "cache_entry_n", scope: !585, file: !533, line: 88, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_N_Type", file: !533, line: 77, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !533, line: 68, size: 32, elements: !590)
!590 = !{!591, !599}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !589, file: !533, line: 75, baseType: !592, size: 32)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !589, file: !533, line: 69, size: 32, elements: !593)
!593 = !{!594, !595, !596, !597, !598}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !592, file: !533, line: 70, baseType: !136, size: 5, flags: DIFlagBitField, extraData: i64 0)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ATTR", scope: !592, file: !533, line: 71, baseType: !136, size: 3, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !592, file: !533, line: 72, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !592, file: !533, line: 73, baseType: !136, size: 3, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !592, file: !533, line: 74, baseType: !136, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !589, file: !533, line: 76, baseType: !136, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "cache_end_entry_n", scope: !585, file: !533, line: 89, baseType: !601, size: 32, offset: 32)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_END_ENTRY_N_Type", file: !533, line: 85, baseType: !602)
!602 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !533, line: 79, size: 32, elements: !603)
!603 = !{!604, !609}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !602, file: !533, line: 83, baseType: !605, size: 32)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !602, file: !533, line: 80, size: 32, elements: !606)
!606 = !{!607, !608}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !605, file: !533, line: 81, baseType: !136, size: 12, flags: DIFlagBitField, extraData: i64 0)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !605, file: !533, line: 82, baseType: !136, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !602, file: !533, line: 84, baseType: !136, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_CON_Type", file: !533, line: 64, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !533, line: 51, size: 32, elements: !612)
!612 = !{!613, !625}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !611, file: !533, line: 62, baseType: !614, size: 32)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !611, file: !533, line: 52, size: 32, elements: !615)
!615 = !{!616, !617, !618, !619, !620, !621, !622, !623, !624}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "MCEN", scope: !614, file: !533, line: 53, baseType: !136, size: 1, flags: DIFlagBitField, extraData: i64 0)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "MPEN", scope: !614, file: !533, line: 54, baseType: !136, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN0", scope: !614, file: !533, line: 55, baseType: !136, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN1", scope: !614, file: !533, line: 56, baseType: !136, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "MPDEFEN", scope: !614, file: !533, line: 57, baseType: !136, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !614, file: !533, line: 58, baseType: !136, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "MDRF", scope: !614, file: !533, line: 59, baseType: !136, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "CACHESIZE", scope: !614, file: !533, line: 60, baseType: !136, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !614, file: !533, line: 61, baseType: !136, size: 22, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !611, file: !533, line: 63, baseType: !136, size: 32)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !628, file: !629, line: 53, type: !707, isLocal: false, isDefinition: true)
!628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !630, retainedTypes: !639, globals: !706, splitDebugInlining: false, nameTableKind: None)
!629 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!630 = !{!631, !51}
!631 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !632, line: 152, baseType: !53, size: 32, elements: !633)
!632 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!633 = !{!634, !635, !636, !637, !638}
!634 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!635 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!636 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!637 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!638 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!639 = !{!452, !161, !136, !640, !642, !673}
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !129, line: 44, baseType: !641)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !131, line: 77, baseType: !53)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 378, baseType: !645)
!644 = !DIFile(filename: "../../../../..//driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 363, size: 28704, elements: !646)
!646 = !{!647, !649, !653, !654, !655, !656, !657, !658, !659, !660, !664, !668, !672}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !645, file: !644, line: 365, baseType: !648, size: 256)
!648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 256, elements: !365)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !645, file: !644, line: 366, baseType: !650, size: 768, offset: 256)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 768, elements: !651)
!651 = !{!652}
!652 = !DISubrange(count: 24)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !645, file: !644, line: 367, baseType: !648, size: 256, offset: 1024)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !645, file: !644, line: 368, baseType: !650, size: 768, offset: 1280)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !645, file: !644, line: 369, baseType: !648, size: 256, offset: 2048)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !645, file: !644, line: 370, baseType: !650, size: 768, offset: 2304)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !645, file: !644, line: 371, baseType: !648, size: 256, offset: 3072)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !645, file: !644, line: 372, baseType: !650, size: 768, offset: 3328)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !645, file: !644, line: 373, baseType: !648, size: 256, offset: 4096)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !645, file: !644, line: 374, baseType: !661, size: 1792, offset: 4352)
!661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 1792, elements: !662)
!662 = !{!663}
!663 = !DISubrange(count: 56)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !645, file: !644, line: 375, baseType: !665, size: 1920, offset: 6144)
!665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 1920, elements: !666)
!666 = !{!667}
!667 = !DISubrange(count: 240)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !645, file: !644, line: 376, baseType: !669, size: 20608, offset: 8064)
!669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 20608, elements: !670)
!670 = !{!671}
!671 = !DISubrange(count: 644)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !645, file: !644, line: 377, baseType: !250, size: 32, offset: 28672)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 418, baseType: !675)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 395, size: 1120, elements: !676)
!676 = !{!677, !679, !680, !681, !682, !683, !684, !686, !687, !688, !689, !690, !691, !692, !693, !695, !696, !697, !699, !703, !705}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !675, file: !644, line: 397, baseType: !678, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !250)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !675, file: !644, line: 398, baseType: !250, size: 32, offset: 32)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !675, file: !644, line: 399, baseType: !250, size: 32, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !675, file: !644, line: 400, baseType: !250, size: 32, offset: 96)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !675, file: !644, line: 401, baseType: !250, size: 32, offset: 128)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !675, file: !644, line: 402, baseType: !250, size: 32, offset: 160)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !675, file: !644, line: 403, baseType: !685, size: 96, offset: 192)
!685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 96, elements: !345)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !675, file: !644, line: 404, baseType: !250, size: 32, offset: 288)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !675, file: !644, line: 405, baseType: !250, size: 32, offset: 320)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !675, file: !644, line: 406, baseType: !250, size: 32, offset: 352)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !675, file: !644, line: 407, baseType: !250, size: 32, offset: 384)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !675, file: !644, line: 408, baseType: !250, size: 32, offset: 416)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !675, file: !644, line: 409, baseType: !250, size: 32, offset: 448)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !675, file: !644, line: 410, baseType: !250, size: 32, offset: 480)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !675, file: !644, line: 411, baseType: !694, size: 64, offset: 512)
!694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !678, size: 64, elements: !446)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !675, file: !644, line: 412, baseType: !678, size: 32, offset: 576)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !675, file: !644, line: 413, baseType: !678, size: 32, offset: 608)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !675, file: !644, line: 414, baseType: !698, size: 128, offset: 640)
!698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !678, size: 128, elements: !350)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !675, file: !644, line: 415, baseType: !700, size: 160, offset: 768)
!700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !678, size: 160, elements: !701)
!701 = !{!702}
!702 = !DISubrange(count: 5)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !675, file: !644, line: 416, baseType: !704, size: 160, offset: 928)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 160, elements: !701)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !675, file: !644, line: 417, baseType: !250, size: 32, offset: 1088)
!706 = !{!626}
!707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !708, size: 6144, elements: !716)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !629, line: 50, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !629, line: 47, size: 64, elements: !710)
!710 = !{!711, !715}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !709, file: !629, line: 48, baseType: !712, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 32)
!713 = !DISubroutineType(types: !714)
!714 = !{null, !452}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !709, file: !629, line: 49, baseType: !136, size: 32, offset: 32)
!716 = !{!717}
!717 = !DISubrange(count: 96)
!718 = !DIGlobalVariableExpression(var: !719, expr: !DIExpression())
!719 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !720, file: !721, line: 61, type: !740, isLocal: true, isDefinition: true)
!720 = distinct !DICompileUnit(language: DW_LANG_C99, file: !721, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !722, retainedTypes: !738, globals: !739, splitDebugInlining: false, nameTableKind: None)
!721 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!722 = !{!217, !723, !730, !225, !734}
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !226, line: 657, baseType: !7, size: 32, elements: !724)
!724 = !{!725, !726, !727, !728, !729}
!725 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!726 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!727 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!728 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!729 = !DIEnumerator(name: "HAL_GPT_MAX", value: 5)
!730 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !218, line: 397, baseType: !7, size: 32, elements: !731)
!731 = !{!732, !733}
!732 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!733 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !218, line: 380, baseType: !7, size: 32, elements: !735)
!735 = !{!736, !737}
!736 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!737 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!738 = !{!161, !136}
!739 = !{!718}
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !741, size: 640, elements: !701)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_context_t", file: !721, line: 55, baseType: !742)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !721, line: 51, size: 128, elements: !743)
!743 = !{!744, !746, !756}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !742, file: !721, line: 52, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !218, line: 400, baseType: !730)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !742, file: !721, line: 53, baseType: !747, size: 64, offset: 32)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_context", file: !721, line: 49, baseType: !748)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !721, line: 46, size: 64, elements: !749)
!749 = !{!750, !755}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !748, file: !721, line: 47, baseType: !751, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !218, line: 371, baseType: !752)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 32)
!753 = !DISubroutineType(types: !754)
!754 = !{null, !161}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !748, file: !721, line: 48, baseType: !161, size: 32, offset: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "has_initlized", scope: !742, file: !721, line: 54, baseType: !126, size: 8, offset: 96)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !759, file: !760, line: 80, type: !861, isLocal: true, isDefinition: true)
!759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !760, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !761, retainedTypes: !811, globals: !812, splitDebugInlining: false, nameTableKind: None)
!760 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!761 = !{!425, !762, !770, !775, !791, !797, !801, !97, !806}
!762 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !763, line: 345, baseType: !53, size: 32, elements: !764)
!763 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!764 = !{!765, !766, !767, !768, !769}
!765 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!766 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!767 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!768 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!769 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!770 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !226, line: 109, baseType: !7, size: 32, elements: !771)
!771 = !{!772, !773, !774}
!772 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!773 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!774 = !DIEnumerator(name: "HAL_UART_MAX", value: 2)
!775 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !763, line: 302, baseType: !7, size: 32, elements: !776)
!776 = !{!777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!777 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!778 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!779 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!780 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!781 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!782 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!783 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!784 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!785 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!786 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!787 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!788 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!789 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!790 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !763, line: 321, baseType: !7, size: 32, elements: !792)
!792 = !{!793, !794, !795, !796}
!793 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!794 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!795 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!796 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!797 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !763, line: 330, baseType: !7, size: 32, elements: !798)
!798 = !{!799, !800}
!799 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!800 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!801 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !763, line: 337, baseType: !7, size: 32, elements: !802)
!802 = !{!803, !804, !805}
!803 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!804 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!805 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!806 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !763, line: 355, baseType: !53, size: 32, elements: !807)
!807 = !{!808, !809, !810}
!808 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!809 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!810 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!811 = !{!331, !7, !161, !132, !332, !128}
!812 = !{!813, !856, !757, !859, !862}
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "g_uart_context_table", scope: !759, file: !760, line: 77, type: !815, isLocal: true, isDefinition: true)
!815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !816, size: 1024, elements: !446)
!816 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_context_t", file: !760, line: 75, baseType: !817)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !760, line: 68, size: 512, elements: !818)
!818 = !{!819, !820, !832, !833, !844, !845}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config_present", scope: !817, file: !760, line: 69, baseType: !126, size: 8)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config", scope: !817, file: !760, line: 70, baseType: !821, size: 128, offset: 32)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !763, line: 378, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !763, line: 373, size: 128, elements: !823)
!823 = !{!824, !826, !828, !830}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !822, file: !763, line: 374, baseType: !825, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !763, line: 317, baseType: !775)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !822, file: !763, line: 375, baseType: !827, size: 32, offset: 32)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !763, line: 326, baseType: !791)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !822, file: !763, line: 376, baseType: !829, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !763, line: 333, baseType: !797)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !822, file: !763, line: 377, baseType: !831, size: 32, offset: 96)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !763, line: 341, baseType: !801)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "callback_present", scope: !817, file: !760, line: 71, baseType: !126, size: 8, offset: 160)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "callback_config", scope: !817, file: !760, line: 72, baseType: !834, size: 64, offset: 192)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_config_t", file: !760, line: 66, baseType: !835)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !760, line: 63, size: 64, elements: !836)
!836 = !{!837, !843}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !835, file: !760, line: 64, baseType: !838, size: 32)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !763, line: 410, baseType: !839)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = !DISubroutineType(types: !841)
!841 = !{null, !842, !161}
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !763, line: 359, baseType: !806)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !835, file: !760, line: 65, baseType: !161, size: 32, offset: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config_present", scope: !817, file: !760, line: 73, baseType: !126, size: 8, offset: 256)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config", scope: !817, file: !760, line: 74, baseType: !846, size: 224, offset: 288)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !763, line: 390, baseType: !847)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !763, line: 382, size: 224, elements: !848)
!848 = !{!849, !850, !851, !852, !853, !854, !855}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !847, file: !763, line: 383, baseType: !340, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !847, file: !763, line: 384, baseType: !136, size: 32, offset: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !847, file: !763, line: 385, baseType: !136, size: 32, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !847, file: !763, line: 386, baseType: !340, size: 32, offset: 96)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !847, file: !763, line: 387, baseType: !136, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !847, file: !763, line: 388, baseType: !136, size: 32, offset: 160)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !847, file: !763, line: 389, baseType: !136, size: 32, offset: 192)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !759, file: !760, line: 82, type: !858, isLocal: true, isDefinition: true)
!858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 16, elements: !446)
!859 = !DIGlobalVariableExpression(var: !860, expr: !DIExpression())
!860 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !759, file: !760, line: 81, type: !861, isLocal: true, isDefinition: true)
!861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !126, size: 16, elements: !446)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "func_tbl", scope: !864, file: !760, line: 536, type: !870, isLocal: true, isDefinition: true)
!864 = distinct !DISubprogram(name: "hal_uart_map_receive_callback", scope: !760, file: !760, line: 534, type: !865, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !868)
!865 = !DISubroutineType(types: !866)
!866 = !{!179, !867}
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !226, line: 113, baseType: !770)
!868 = !{!869}
!869 = !DILocalVariable(name: "uart_port", arg: 1, scope: !864, file: !760, line: 534, type: !867)
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !871, size: 64, elements: !446)
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !179)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "DWT_NUMCOMP", scope: !874, file: !875, line: 44, type: !53, isLocal: true, isDefinition: true)
!874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !875, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !876, retainedTypes: !885, globals: !921, splitDebugInlining: false, nameTableKind: None)
!875 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_dwt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!876 = !{!877}
!877 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 42, baseType: !7, size: 32, elements: !879)
!878 = !DIFile(filename: "../../../../..//driver/chip/mt7687/inc/hal_dwt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!879 = !{!880, !881, !882, !883, !884}
!880 = !DIEnumerator(name: "COMP_DISABLE", value: 0)
!881 = !DIEnumerator(name: "WDE_INST", value: 4)
!882 = !DIEnumerator(name: "WDE_DATA_RO", value: 5)
!883 = !DIEnumerator(name: "WDE_DATA_WO", value: 6)
!884 = !DIEnumerator(name: "WDE_DATA_RW", value: 7)
!885 = !{!886, !913}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !644, line: 826, baseType: !888)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 801, size: 736, elements: !889)
!889 = !{!890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !888, file: !644, line: 803, baseType: !250, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !888, file: !644, line: 804, baseType: !250, size: 32, offset: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !888, file: !644, line: 805, baseType: !250, size: 32, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !888, file: !644, line: 806, baseType: !250, size: 32, offset: 96)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !888, file: !644, line: 807, baseType: !250, size: 32, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !888, file: !644, line: 808, baseType: !250, size: 32, offset: 160)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !888, file: !644, line: 809, baseType: !250, size: 32, offset: 192)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !888, file: !644, line: 810, baseType: !678, size: 32, offset: 224)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !888, file: !644, line: 811, baseType: !250, size: 32, offset: 256)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !888, file: !644, line: 812, baseType: !250, size: 32, offset: 288)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !888, file: !644, line: 813, baseType: !250, size: 32, offset: 320)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !888, file: !644, line: 814, baseType: !558, size: 32, offset: 352)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !888, file: !644, line: 815, baseType: !250, size: 32, offset: 384)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !888, file: !644, line: 816, baseType: !250, size: 32, offset: 416)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !888, file: !644, line: 817, baseType: !250, size: 32, offset: 448)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !888, file: !644, line: 818, baseType: !558, size: 32, offset: 480)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !888, file: !644, line: 819, baseType: !250, size: 32, offset: 512)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !888, file: !644, line: 820, baseType: !250, size: 32, offset: 544)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !888, file: !644, line: 821, baseType: !250, size: 32, offset: 576)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !888, file: !644, line: 822, baseType: !558, size: 32, offset: 608)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !888, file: !644, line: 823, baseType: !250, size: 32, offset: 640)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !888, file: !644, line: 824, baseType: !250, size: 32, offset: 672)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !888, file: !644, line: 825, baseType: !250, size: 32, offset: 704)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "CoreDebug_Type", file: !644, line: 1304, baseType: !915)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 1298, size: 128, elements: !916)
!916 = !{!917, !918, !919, !920}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "DHCSR", scope: !915, file: !644, line: 1300, baseType: !250, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "DCRSR", scope: !915, file: !644, line: 1301, baseType: !250, size: 32, offset: 32)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "DCRDR", scope: !915, file: !644, line: 1302, baseType: !250, size: 32, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "DEMCR", scope: !915, file: !644, line: 1303, baseType: !250, size: 32, offset: 96)
!921 = !{!872}
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_default", scope: !924, file: !925, line: 164, type: !344, isLocal: false, isDefinition: true)
!924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !925, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !926, globals: !941, splitDebugInlining: false, nameTableKind: None)
!925 = !DIFile(filename: "../../../../..//driver/board/mt76x7_hdk/external_flash/src/bsp_flash_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!926 = !{!927, !161}
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "flash_info_t", file: !930, line: 48, baseType: !931)
!930 = !DIFile(filename: "../../../../..//driver/board/mt76x7_hdk/external_flash/inc/bsp_flash_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !930, line: 38, size: 192, elements: !932)
!932 = !{!933, !934, !935, !936, !937, !938, !939, !940}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !931, file: !930, line: 39, baseType: !331, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !931, file: !930, line: 40, baseType: !132, size: 8, offset: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !931, file: !930, line: 41, baseType: !325, size: 32, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !931, file: !930, line: 42, baseType: !325, size: 32, offset: 96)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !931, file: !930, line: 43, baseType: !7, size: 32, offset: 128)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !931, file: !930, line: 45, baseType: !132, size: 8, offset: 160)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !931, file: !930, line: 46, baseType: !132, size: 8, offset: 168)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !931, file: !930, line: 47, baseType: !132, size: 8, offset: 176)
!941 = !{!922, !942, !944, !946}
!942 = !DIGlobalVariableExpression(var: !943, expr: !DIExpression())
!943 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_default", scope: !924, file: !925, line: 167, type: !349, isLocal: false, isDefinition: true)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_default", scope: !924, file: !925, line: 170, type: !354, isLocal: false, isDefinition: true)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "customer_flash_info", scope: !924, file: !925, line: 174, type: !928, isLocal: false, isDefinition: true)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "_cli_cb", scope: !950, file: !951, line: 92, type: !987, isLocal: true, isDefinition: true)
!950 = distinct !DICompileUnit(language: DW_LANG_C99, file: !951, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !952, globals: !953, splitDebugInlining: false, nameTableKind: None)
!951 = !DIFile(filename: "../../../../..//project/mt7687_hdk/apps/minicli/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!952 = !{!161}
!953 = !{!954, !960, !964, !968, !948, !970}
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "s_history_lines", scope: !950, file: !951, line: 64, type: !956, isLocal: true, isDefinition: true)
!956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 20480, elements: !957)
!957 = !{!958, !959}
!958 = !DISubrange(count: 20)
!959 = !DISubrange(count: 128)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "s_history_ptrs", scope: !950, file: !951, line: 65, type: !962, isLocal: true, isDefinition: true)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 640, elements: !963)
!963 = !{!958}
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "s_history_input", scope: !950, file: !951, line: 67, type: !966, isLocal: true, isDefinition: true)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 1024, elements: !967)
!967 = !{!959}
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "s_history_parse_token", scope: !950, file: !951, line: 68, type: !966, isLocal: true, isDefinition: true)
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "_cmds_normal", scope: !950, file: !951, line: 85, type: !972, isLocal: true, isDefinition: true)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, size: 256, elements: !446)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "cmd_t", file: !974, line: 299, baseType: !975)
!974 = !DIFile(filename: "../../../../..//middleware/MTK/minicli/inc/cli.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cmd_s", file: !974, line: 312, size: 128, elements: !976)
!976 = !{!977, !978, !979, !985}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !975, file: !974, line: 313, baseType: !331, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "help", scope: !975, file: !974, line: 314, baseType: !331, size: 32, offset: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "fptr", scope: !975, file: !974, line: 315, baseType: !980, size: 32, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_typedef, name: "cli_cmd_handler_t", file: !974, line: 280, baseType: !981)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DISubroutineType(types: !983)
!983 = !{!128, !128, !984}
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !975, file: !974, line: 316, baseType: !986, size: 32, offset: 96)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "cli_t", file: !974, line: 357, baseType: !988)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cli_s", file: !974, line: 365, size: 1024, elements: !989)
!989 = !{!990, !991, !992, !993, !998, !1003, !1008, !1009}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !988, file: !974, line: 366, baseType: !128, size: 8)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !988, file: !974, line: 367, baseType: !986, size: 32, offset: 32)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "echo", scope: !988, file: !974, line: 368, baseType: !332, size: 8, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !988, file: !974, line: 369, baseType: !994, size: 32, offset: 96)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "getchar_fptr_t", file: !974, line: 246, baseType: !995)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!53}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !988, file: !974, line: 370, baseType: !999, size: 32, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "putchar_fptr_t", file: !974, line: 259, baseType: !1000)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!53, !53}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "knock", scope: !988, file: !974, line: 371, baseType: !1004, size: 32, offset: 160)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "knock_fptr_t", file: !974, line: 268, baseType: !1005)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 32)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!128, !331, !331}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "tok", scope: !988, file: !974, line: 372, baseType: !962, size: 640, offset: 192)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "history", scope: !988, file: !974, line: 375, baseType: !1010, size: 192, offset: 832)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "cli_history_t", file: !974, line: 326, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cli_history_s", file: !974, line: 334, size: 192, elements: !1012)
!1012 = !{!1013, !1014, !1015, !1016, !1019, !1020, !1021, !1022}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "history", scope: !1011, file: !974, line: 335, baseType: !984, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !1011, file: !974, line: 336, baseType: !331, size: 32, offset: 32)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "parse_token", scope: !1011, file: !974, line: 337, baseType: !331, size: 32, offset: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "history_max", scope: !1011, file: !974, line: 340, baseType: !1017, size: 16, offset: 96)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !129, line: 36, baseType: !1018)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !131, line: 57, baseType: !435)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "line_max", scope: !1011, file: !974, line: 341, baseType: !1017, size: 16, offset: 112)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1011, file: !974, line: 342, baseType: !1017, size: 16, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !1011, file: !974, line: 344, baseType: !1017, size: 16, offset: 144)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !1011, file: !974, line: 346, baseType: !128, size: 8, offset: 160)
!1023 = !DIGlobalVariableExpression(var: !1024, expr: !DIExpression())
!1024 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !1025, file: !1026, line: 61, type: !250, isLocal: true, isDefinition: true)
!1025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1026, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1027, globals: !1080, splitDebugInlining: false, nameTableKind: None)
!1026 = !DIFile(filename: "../../../../..//project/mt7687_hdk/apps/minicli/src/system_mt7687.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1027 = !{!1028, !1036, !1061}
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !644, line: 656, baseType: !1030)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 650, size: 128, elements: !1031)
!1031 = !{!1032, !1033, !1034, !1035}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1030, file: !644, line: 652, baseType: !250, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1030, file: !644, line: 653, baseType: !250, size: 32, offset: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1030, file: !644, line: 654, baseType: !250, size: 32, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1030, file: !644, line: 655, baseType: !678, size: 32, offset: 96)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 418, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 395, size: 1120, elements: !1039)
!1039 = !{!1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1038, file: !644, line: 397, baseType: !678, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1038, file: !644, line: 398, baseType: !250, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1038, file: !644, line: 399, baseType: !250, size: 32, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1038, file: !644, line: 400, baseType: !250, size: 32, offset: 96)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1038, file: !644, line: 401, baseType: !250, size: 32, offset: 128)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1038, file: !644, line: 402, baseType: !250, size: 32, offset: 160)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1038, file: !644, line: 403, baseType: !685, size: 96, offset: 192)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1038, file: !644, line: 404, baseType: !250, size: 32, offset: 288)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1038, file: !644, line: 405, baseType: !250, size: 32, offset: 320)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1038, file: !644, line: 406, baseType: !250, size: 32, offset: 352)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1038, file: !644, line: 407, baseType: !250, size: 32, offset: 384)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1038, file: !644, line: 408, baseType: !250, size: 32, offset: 416)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1038, file: !644, line: 409, baseType: !250, size: 32, offset: 448)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1038, file: !644, line: 410, baseType: !250, size: 32, offset: 480)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1038, file: !644, line: 411, baseType: !694, size: 64, offset: 512)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1038, file: !644, line: 412, baseType: !678, size: 32, offset: 576)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1038, file: !644, line: 413, baseType: !678, size: 32, offset: 608)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1038, file: !644, line: 414, baseType: !698, size: 128, offset: 640)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1038, file: !644, line: 415, baseType: !700, size: 160, offset: 768)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1038, file: !644, line: 416, baseType: !704, size: 160, offset: 928)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1038, file: !644, line: 417, baseType: !250, size: 32, offset: 1088)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !544, line: 72, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !544, line: 56, size: 525312, elements: !1064)
!1064 = !{!1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !1063, file: !544, line: 57, baseType: !250, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !1063, file: !544, line: 58, baseType: !250, size: 32, offset: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !1063, file: !544, line: 59, baseType: !250, size: 32, offset: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !1063, file: !544, line: 60, baseType: !250, size: 32, offset: 96)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !1063, file: !544, line: 61, baseType: !250, size: 32, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !1063, file: !544, line: 62, baseType: !250, size: 32, offset: 160)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !1063, file: !544, line: 63, baseType: !250, size: 32, offset: 192)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !1063, file: !544, line: 64, baseType: !250, size: 32, offset: 224)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !1063, file: !544, line: 65, baseType: !250, size: 32, offset: 256)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !1063, file: !544, line: 66, baseType: !250, size: 32, offset: 288)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1063, file: !544, line: 67, baseType: !558, size: 32, offset: 320)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !1063, file: !544, line: 68, baseType: !250, size: 32, offset: 352)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1063, file: !544, line: 69, baseType: !563, size: 523904, offset: 384)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !1063, file: !544, line: 70, baseType: !567, size: 512, offset: 524288)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !1063, file: !544, line: 71, baseType: !567, size: 512, offset: 524800)
!1080 = !{!1081, !1023}
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1025, file: !1026, line: 59, type: !136, isLocal: false, isDefinition: true)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "region_cfg_tbl", scope: !1085, file: !1086, line: 89, type: !1097, isLocal: true, isDefinition: true)
!1085 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1086, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1087, retainedTypes: !1094, globals: !1096, splitDebugInlining: false, nameTableKind: None)
!1086 = !DIFile(filename: "../../../../..//project/mt7687_hdk/apps/minicli/src/sys_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1087 = !{!463, !525, !506, !1088}
!1088 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1089, line: 92, baseType: !53, size: 32, elements: !1090)
!1089 = !DIFile(filename: "../../../../..//driver/chip/inc/hal_trng.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1090 = !{!1091, !1092, !1093}
!1091 = !DIEnumerator(name: "HAL_TRNG_STATUS_ERROR", value: -2)
!1092 = !DIEnumerator(name: "HAL_TRNG_STATUS_INVALID_PARAMETER", value: -1)
!1093 = !DIEnumerator(name: "HAL_TRNG_STATUS_OK", value: 0)
!1094 = !{!1095, !7}
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !496, line: 204, baseType: !506)
!1096 = !{!1083}
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 64, elements: !559)
!1098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1099)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !496, line: 222, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !496, line: 219, size: 64, elements: !1101)
!1101 = !{!1102, !1103}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !1100, file: !496, line: 220, baseType: !136, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !1100, file: !496, line: 221, baseType: !136, size: 32, offset: 32)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "heap_end", scope: !1106, file: !1107, line: 67, type: !331, isLocal: true, isDefinition: true)
!1106 = distinct !DISubprogram(name: "_sbrk_r", scope: !1107, file: !1107, line: 64, type: !1108, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !1301)
!1107 = !DIFile(filename: "../../../../..//project/mt7687_hdk/apps/minicli/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!1110, !1112, !1296}
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !1111, line: 123, baseType: !331)
!1111 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !1114, line: 377, size: 1920, elements: !1115)
!1114 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!1115 = !{!1116, !1117, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1195, !1215, !1219, !1220, !1221, !1222, !1232, !1245, !1246, !1251, !1270, !1271, !1278, !1279, !1295}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !1113, file: !1114, line: 381, baseType: !53, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !1113, file: !1114, line: 386, baseType: !1118, size: 32, offset: 32)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !1114, line: 292, baseType: !1120)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !1114, line: 186, size: 832, elements: !1121)
!1121 = !{!1122, !1123, !1124, !1125, !1127, !1128, !1133, !1134, !1135, !1136, !1140, !1144, !1150, !1154, !1155, !1156, !1157, !1161, !1163, !1164, !1165, !1167, !1173, !1185}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !1120, file: !1114, line: 187, baseType: !307, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !1120, file: !1114, line: 188, baseType: !53, size: 32, offset: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !1120, file: !1114, line: 189, baseType: !53, size: 32, offset: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1120, file: !1114, line: 190, baseType: !1126, size: 16, offset: 96)
!1126 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !1120, file: !1114, line: 191, baseType: !1126, size: 16, offset: 112)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !1120, file: !1114, line: 192, baseType: !1129, size: 64, offset: 128)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !1114, line: 122, size: 64, elements: !1130)
!1130 = !{!1131, !1132}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !1129, file: !1114, line: 123, baseType: !307, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !1129, file: !1114, line: 124, baseType: !53, size: 32, offset: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !1120, file: !1114, line: 193, baseType: !53, size: 32, offset: 192)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !1120, file: !1114, line: 196, baseType: !1112, size: 32, offset: 224)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !1120, file: !1114, line: 200, baseType: !161, size: 32, offset: 256)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !1120, file: !1114, line: 202, baseType: !1137, size: 32, offset: 288)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 32)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!53, !1112, !161, !331, !53}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !1120, file: !1114, line: 204, baseType: !1141, size: 32, offset: 320)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!53, !1112, !161, !444, !53}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !1120, file: !1114, line: 207, baseType: !1145, size: 32, offset: 352)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!1148, !1112, !161, !1148, !53}
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !1149, line: 116, baseType: !304)
!1149 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !1120, file: !1114, line: 208, baseType: !1151, size: 32, offset: 384)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!53, !1112, !161}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !1120, file: !1114, line: 211, baseType: !1129, size: 64, offset: 416)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !1120, file: !1114, line: 212, baseType: !307, size: 32, offset: 480)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !1120, file: !1114, line: 213, baseType: !53, size: 32, offset: 512)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !1120, file: !1114, line: 216, baseType: !1158, size: 24, offset: 544)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 24, elements: !1159)
!1159 = !{!1160}
!1160 = !DISubrange(count: 3)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !1120, file: !1114, line: 217, baseType: !1162, size: 8, offset: 568)
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 8, elements: !559)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !1120, file: !1114, line: 220, baseType: !1129, size: 64, offset: 576)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !1120, file: !1114, line: 223, baseType: !53, size: 32, offset: 640)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1120, file: !1114, line: 224, baseType: !1166, size: 32, offset: 672)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !1149, line: 46, baseType: !304)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1120, file: !1114, line: 231, baseType: !1168, size: 32, offset: 704)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !1114, line: 35, baseType: !1169)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !1170, line: 34, baseType: !1171)
!1170 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !1170, line: 33, flags: DIFlagFwdDecl)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !1120, file: !1114, line: 233, baseType: !1174, size: 64, offset: 736)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !1149, line: 170, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1149, line: 162, size: 64, elements: !1176)
!1176 = !{!1177, !1178}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1175, file: !1149, line: 164, baseType: !53, size: 32)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1175, file: !1149, line: 169, baseType: !1179, size: 32, offset: 32)
!1179 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1175, file: !1149, line: 165, size: 32, elements: !1180)
!1180 = !{!1181, !1184}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1179, file: !1149, line: 167, baseType: !1182, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !1183, line: 116, baseType: !53)
!1183 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1179, file: !1149, line: 168, baseType: !359, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1120, file: !1114, line: 234, baseType: !53, size: 32, offset: 800)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !1113, file: !1114, line: 386, baseType: !1118, size: 32, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !1113, file: !1114, line: 386, baseType: !1118, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !1113, file: !1114, line: 388, baseType: !53, size: 32, offset: 128)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !1113, file: !1114, line: 390, baseType: !331, size: 32, offset: 160)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !1113, file: !1114, line: 392, baseType: !53, size: 32, offset: 192)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !1113, file: !1114, line: 394, baseType: !53, size: 32, offset: 224)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !1113, file: !1114, line: 395, baseType: !1193, size: 32, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !1114, line: 45, flags: DIFlagFwdDecl)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !1113, file: !1114, line: 397, baseType: !1196, size: 32, offset: 288)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !1114, line: 349, size: 128, elements: !1198)
!1198 = !{!1199, !1211, !1212, !1213}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !1197, file: !1114, line: 352, baseType: !1200, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !1114, line: 52, size: 192, elements: !1202)
!1202 = !{!1203, !1204, !1205, !1206, !1207, !1208}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1201, file: !1114, line: 54, baseType: !1200, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !1201, file: !1114, line: 55, baseType: !53, size: 32, offset: 32)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !1201, file: !1114, line: 55, baseType: !53, size: 32, offset: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !1201, file: !1114, line: 55, baseType: !53, size: 32, offset: 96)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !1201, file: !1114, line: 55, baseType: !53, size: 32, offset: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !1201, file: !1114, line: 56, baseType: !1209, size: 32, offset: 160)
!1209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1210, size: 32, elements: !559)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !1114, line: 22, baseType: !325)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !1197, file: !1114, line: 353, baseType: !53, size: 32, offset: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !1197, file: !1114, line: 354, baseType: !1200, size: 32, offset: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !1197, file: !1114, line: 355, baseType: !1214, size: 32, offset: 96)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !1113, file: !1114, line: 399, baseType: !1216, size: 32, offset: 320)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{null, !1112}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !1113, file: !1114, line: 401, baseType: !53, size: 32, offset: 352)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !1113, file: !1114, line: 404, baseType: !53, size: 32, offset: 384)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !1113, file: !1114, line: 405, baseType: !331, size: 32, offset: 416)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !1113, file: !1114, line: 407, baseType: !1223, size: 32, offset: 448)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 32)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !1114, line: 324, size: 192, elements: !1225)
!1225 = !{!1226, !1228, !1229, !1230}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !1224, file: !1114, line: 325, baseType: !1227, size: 48)
!1227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !435, size: 48, elements: !1159)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !1224, file: !1114, line: 326, baseType: !1227, size: 48, offset: 48)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !1224, file: !1114, line: 327, baseType: !435, size: 16, offset: 96)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !1224, file: !1114, line: 330, baseType: !1231, size: 64, offset: 128)
!1231 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !1113, file: !1114, line: 408, baseType: !1233, size: 32, offset: 480)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !1114, line: 60, size: 288, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !1234, file: !1114, line: 62, baseType: !53, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !1234, file: !1114, line: 63, baseType: !53, size: 32, offset: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !1234, file: !1114, line: 64, baseType: !53, size: 32, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !1234, file: !1114, line: 65, baseType: !53, size: 32, offset: 96)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !1234, file: !1114, line: 66, baseType: !53, size: 32, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !1234, file: !1114, line: 67, baseType: !53, size: 32, offset: 160)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !1234, file: !1114, line: 68, baseType: !53, size: 32, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !1234, file: !1114, line: 69, baseType: !53, size: 32, offset: 224)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !1234, file: !1114, line: 70, baseType: !53, size: 32, offset: 256)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !1113, file: !1114, line: 409, baseType: !331, size: 32, offset: 512)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !1113, file: !1114, line: 412, baseType: !1247, size: 32, offset: 544)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{null, !53}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !1113, file: !1114, line: 416, baseType: !1252, size: 32, offset: 576)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !1114, line: 90, size: 1120, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1261}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1253, file: !1114, line: 91, baseType: !1252, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !1253, file: !1114, line: 92, baseType: !53, size: 32, offset: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !1253, file: !1114, line: 93, baseType: !1258, size: 1024, offset: 64)
!1258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 1024, elements: !1259)
!1259 = !{!1260}
!1260 = !DISubrange(count: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !1253, file: !1114, line: 94, baseType: !1262, size: 32, offset: 1088)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !1114, line: 79, size: 2112, elements: !1264)
!1264 = !{!1265, !1267, !1268, !1269}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !1263, file: !1114, line: 80, baseType: !1266, size: 1024)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 1024, elements: !1259)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !1263, file: !1114, line: 81, baseType: !1266, size: 1024, offset: 1024)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !1263, file: !1114, line: 83, baseType: !1210, size: 32, offset: 2048)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !1263, file: !1114, line: 86, baseType: !1210, size: 32, offset: 2080)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !1113, file: !1114, line: 417, baseType: !1253, size: 1120, offset: 608)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !1113, file: !1114, line: 420, baseType: !1272, size: 96, offset: 1728)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !1114, line: 296, size: 96, elements: !1273)
!1273 = !{!1274, !1276, !1277}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1272, file: !1114, line: 298, baseType: !1275, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !1272, file: !1114, line: 299, baseType: !53, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !1272, file: !1114, line: 300, baseType: !1118, size: 32, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !1113, file: !1114, line: 421, baseType: !1118, size: 32, offset: 1824)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !1113, file: !1114, line: 422, baseType: !1280, size: 32, offset: 1856)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !1114, line: 359, size: 640, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286, !1287, !1289, !1290, !1291, !1292, !1293, !1294}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !1281, file: !1114, line: 362, baseType: !331, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !1281, file: !1114, line: 363, baseType: !1174, size: 64, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !1281, file: !1114, line: 364, baseType: !1174, size: 64, offset: 96)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !1281, file: !1114, line: 365, baseType: !1174, size: 64, offset: 160)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !1281, file: !1114, line: 366, baseType: !1288, size: 64, offset: 224)
!1288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 64, elements: !365)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !1281, file: !1114, line: 367, baseType: !53, size: 32, offset: 288)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !1281, file: !1114, line: 368, baseType: !1174, size: 64, offset: 320)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !1281, file: !1114, line: 369, baseType: !1174, size: 64, offset: 384)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !1281, file: !1114, line: 370, baseType: !1174, size: 64, offset: 448)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !1281, file: !1114, line: 371, baseType: !1174, size: 64, offset: 512)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !1281, file: !1114, line: 372, baseType: !1174, size: 64, offset: 576)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !1113, file: !1114, line: 423, baseType: !331, size: 32, offset: 1888)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1183, line: 46, baseType: !7)
!1297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1299, globals: !1300, splitDebugInlining: false, nameTableKind: None)
!1298 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1299 = !{!331, !1110}
!1300 = !{!1104}
!1301 = !{!1302, !1303, !1304, !1305}
!1302 = !DILocalVariable(name: "r", arg: 1, scope: !1106, file: !1107, line: 64, type: !1112)
!1303 = !DILocalVariable(name: "nbytes", arg: 2, scope: !1106, file: !1107, line: 64, type: !1296)
!1304 = !DILocalVariable(name: "prev_heap_end", scope: !1106, file: !1107, line: 68, type: !331)
!1305 = !DILocalVariable(name: "stack", scope: !1106, file: !1107, line: 69, type: !331)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "pxCurrentTCB", scope: !1308, file: !1309, line: 208, type: !1447, isLocal: false, isDefinition: true)
!1308 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1309, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1310, retainedTypes: !1331, globals: !1390, splitDebugInlining: false, nameTableKind: None)
!1309 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/tasks.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1310 = !{!1311, !1316, !1324}
!1311 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1309, line: 122, baseType: !7, size: 32, elements: !1312)
!1312 = !{!1313, !1314, !1315}
!1313 = !DIEnumerator(name: "eNotWaitingNotification", value: 0)
!1314 = !DIEnumerator(name: "eWaitingNotification", value: 1)
!1315 = !DIEnumerator(name: "eNotified", value: 2)
!1316 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1317, line: 112, baseType: !7, size: 32, elements: !1318)
!1317 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/include/task.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1318 = !{!1319, !1320, !1321, !1322, !1323}
!1319 = !DIEnumerator(name: "eRunning", value: 0)
!1320 = !DIEnumerator(name: "eReady", value: 1)
!1321 = !DIEnumerator(name: "eBlocked", value: 2)
!1322 = !DIEnumerator(name: "eSuspended", value: 3)
!1323 = !DIEnumerator(name: "eDeleted", value: 4)
!1324 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1317, line: 122, baseType: !7, size: 32, elements: !1325)
!1325 = !{!1326, !1327, !1328, !1329, !1330}
!1326 = !DIEnumerator(name: "eNoAction", value: 0)
!1327 = !DIEnumerator(name: "eSetBits", value: 1)
!1328 = !DIEnumerator(name: "eIncrement", value: 2)
!1329 = !DIEnumerator(name: "eSetValueWithOverwrite", value: 3)
!1330 = !DIEnumerator(name: "eSetValueWithoutOverwrite", value: 4)
!1331 = !{!1332, !161, !1017, !1334, !136, !1336, !1337, !249, !1338, !1352, !435, !1373, !340, !7, !1387, !53, !444, !128}
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "UBaseType_t", file: !1333, line: 99, baseType: !325)
!1333 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "StackType_t", file: !1333, line: 97, baseType: !136)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskHandle_t", file: !1317, line: 103, baseType: !161)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "BaseType_t", file: !1333, line: 98, baseType: !304)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCB_t", file: !1309, line: 195, baseType: !1340)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "tskTCB", file: !1309, line: 191, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tskTaskControlBlock", file: !1309, line: 134, size: 672, elements: !1342)
!1342 = !{!1343, !1346, !1358, !1359, !1360, !1361, !1365, !1366, !1367, !1368, !1369, !1370}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pxTopOfStack", scope: !1341, file: !1309, line: 136, baseType: !1344, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 32)
!1345 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1335)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "xGenericListItem", scope: !1341, file: !1309, line: 143, baseType: !1347, size: 160, offset: 32)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !1348, line: 191, baseType: !1349)
!1348 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/include/list.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !1348, line: 181, size: 160, elements: !1350)
!1350 = !{!1351, !1353, !1355, !1356, !1357}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1349, file: !1348, line: 184, baseType: !1352, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "TickType_t", file: !1333, line: 105, baseType: !136)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1349, file: !1348, line: 185, baseType: !1354, size: 32, offset: 32)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1349, file: !1348, line: 186, baseType: !1354, size: 32, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1349, file: !1348, line: 187, baseType: !161, size: 32, offset: 96)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1349, file: !1348, line: 188, baseType: !161, size: 32, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "xEventListItem", scope: !1341, file: !1309, line: 144, baseType: !1347, size: 160, offset: 192)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "uxPriority", scope: !1341, file: !1309, line: 145, baseType: !1332, size: 32, offset: 352)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "pxStack", scope: !1341, file: !1309, line: 146, baseType: !1334, size: 32, offset: 384)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !1341, file: !1309, line: 147, baseType: !1362, size: 48, offset: 416)
!1362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 48, elements: !1363)
!1363 = !{!1364}
!1364 = !DISubrange(count: 6)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "uxTCBNumber", scope: !1341, file: !1309, line: 158, baseType: !1332, size: 32, offset: 480)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "uxTaskNumber", scope: !1341, file: !1309, line: 159, baseType: !1332, size: 32, offset: 512)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !1341, file: !1309, line: 163, baseType: !1332, size: 32, offset: 544)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "uxMutexesHeld", scope: !1341, file: !1309, line: 164, baseType: !1332, size: 32, offset: 576)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "ulNotifiedValue", scope: !1341, file: !1309, line: 187, baseType: !250, size: 32, offset: 608)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "eNotifyState", scope: !1341, file: !1309, line: 188, baseType: !1371, size: 32, offset: 640)
!1371 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1372)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyValue", file: !1309, line: 127, baseType: !1311)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !1348, line: 212, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !1348, line: 205, size: 160, elements: !1376)
!1376 = !{!1377, !1378, !1380}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1375, file: !1348, line: 208, baseType: !1332, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1375, file: !1348, line: 209, baseType: !1379, size: 32, offset: 32)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1375, file: !1348, line: 210, baseType: !1381, size: 96, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !1348, line: 200, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !1348, line: 193, size: 96, elements: !1383)
!1383 = !{!1384, !1385, !1386}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1382, file: !1348, line: 196, baseType: !1352, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1382, file: !1348, line: 197, baseType: !1354, size: 32, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1382, file: !1348, line: 198, baseType: !1354, size: 32, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1388, line: 40, baseType: !1389)
!1388 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration")
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !1149, line: 131, baseType: !7)
!1390 = !{!1306, !1391, !1404, !1407, !1410, !1412, !1414, !1416, !1418, !1421, !1424, !1426, !1428, !1430, !1432, !1435, !1437, !1439, !1441, !1443, !1445}
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "ucExpectedStackBytes", scope: !1393, file: !1309, line: 2240, type: !1402, isLocal: true, isDefinition: true)
!1393 = distinct !DISubprogram(name: "vTaskSwitchContext", scope: !1309, file: !1309, line: 2198, type: !181, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !1394)
!1394 = !{!1395, !1399}
!1395 = !DILocalVariable(name: "uxTopPriority", scope: !1396, file: !1309, line: 2244, type: !1332)
!1396 = distinct !DILexicalBlock(scope: !1397, file: !1309, line: 2244, column: 3)
!1397 = distinct !DILexicalBlock(scope: !1398, file: !1309, line: 2207, column: 2)
!1398 = distinct !DILexicalBlock(scope: !1393, file: !1309, line: 2200, column: 6)
!1399 = !DILocalVariable(name: "pxConstList", scope: !1400, file: !1309, line: 2244, type: !1401)
!1400 = distinct !DILexicalBlock(scope: !1396, file: !1309, line: 2244, column: 3)
!1401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1373)
!1402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 160, elements: !963)
!1403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!1404 = !DIGlobalVariableExpression(var: !1405, expr: !DIExpression())
!1405 = distinct !DIGlobalVariable(name: "pxReadyTasksLists", scope: !1308, file: !1309, line: 211, type: !1406, isLocal: true, isDefinition: true)
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1374, size: 3200, elements: !963)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "pxDelayedTaskList", scope: !1308, file: !1309, line: 214, type: !1409, isLocal: true, isDefinition: true)
!1409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1373)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "pxOverflowDelayedTaskList", scope: !1308, file: !1309, line: 215, type: !1409, isLocal: true, isDefinition: true)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "xPendingReadyList", scope: !1308, file: !1309, line: 216, type: !1374, isLocal: true, isDefinition: true)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "xTasksWaitingTermination", scope: !1308, file: !1309, line: 220, type: !1374, isLocal: true, isDefinition: true)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "xSuspendedTaskList", scope: !1308, file: !1309, line: 227, type: !1374, isLocal: true, isDefinition: true)
!1418 = !DIGlobalVariableExpression(var: !1419, expr: !DIExpression())
!1419 = distinct !DIGlobalVariable(name: "uxCurrentNumberOfTasks", scope: !1308, file: !1309, line: 238, type: !1420, isLocal: true, isDefinition: true)
!1420 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1332)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "xSchedulerRunning", scope: !1308, file: !1309, line: 241, type: !1423, isLocal: true, isDefinition: true)
!1423 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1337)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "uxTaskNumber", scope: !1308, file: !1309, line: 245, type: !1332, isLocal: true, isDefinition: true)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "uxTopReadyPriority", scope: !1308, file: !1309, line: 240, type: !1420, isLocal: true, isDefinition: true)
!1428 = !DIGlobalVariableExpression(var: !1429, expr: !DIExpression())
!1429 = distinct !DIGlobalVariable(name: "uxTasksDeleted", scope: !1308, file: !1309, line: 221, type: !1420, isLocal: true, isDefinition: true)
!1430 = !DIGlobalVariableExpression(var: !1431, expr: !DIExpression())
!1431 = distinct !DIGlobalVariable(name: "uxSchedulerSuspended", scope: !1308, file: !1309, line: 256, type: !1420, isLocal: true, isDefinition: true)
!1432 = !DIGlobalVariableExpression(var: !1433, expr: !DIExpression())
!1433 = distinct !DIGlobalVariable(name: "xTickCount", scope: !1308, file: !1309, line: 239, type: !1434, isLocal: true, isDefinition: true)
!1434 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1352)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "xYieldPending", scope: !1308, file: !1309, line: 243, type: !1423, isLocal: true, isDefinition: true)
!1437 = !DIGlobalVariableExpression(var: !1438, expr: !DIExpression())
!1438 = distinct !DIGlobalVariable(name: "uxPendedTicks", scope: !1308, file: !1309, line: 242, type: !1420, isLocal: true, isDefinition: true)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "xNumOfOverflows", scope: !1308, file: !1309, line: 244, type: !1423, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "xNextTaskUnblockTime", scope: !1308, file: !1309, line: 246, type: !1434, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "xDelayedTaskList1", scope: !1308, file: !1309, line: 212, type: !1374, isLocal: true, isDefinition: true)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "xDelayedTaskList2", scope: !1308, file: !1309, line: 213, type: !1374, isLocal: true, isDefinition: true)
!1447 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1338)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "xQueueRegistry", scope: !1450, file: !1451, line: 192, type: !1502, isLocal: false, isDefinition: true)
!1450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1451, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1452, globals: !1501, splitDebugInlining: false, nameTableKind: None)
!1451 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/queue.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1452 = !{!1453, !1332, !1337, !249, !161, !1387, !1459, !1352, !128}
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "Queue_t", file: !1451, line: 165, baseType: !1455)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQUEUE", file: !1451, line: 161, baseType: !1456)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QueueDefinition", file: !1451, line: 130, size: 672, elements: !1457)
!1457 = !{!1458, !1463, !1464, !1465, !1470, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "pcHead", scope: !1456, file: !1451, line: 132, baseType: !1459, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !129, line: 20, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !131, line: 41, baseType: !1462)
!1462 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pcTail", scope: !1456, file: !1451, line: 133, baseType: !1459, size: 32, offset: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "pcWriteTo", scope: !1456, file: !1451, line: 134, baseType: !1459, size: 32, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1456, file: !1451, line: 140, baseType: !1466, size: 32, offset: 96)
!1466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1456, file: !1451, line: 136, size: 32, elements: !1467)
!1467 = !{!1468, !1469}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "pcReadFrom", scope: !1466, file: !1451, line: 138, baseType: !1459, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "uxRecursiveCallCount", scope: !1466, file: !1451, line: 139, baseType: !1332, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToSend", scope: !1456, file: !1451, line: 142, baseType: !1471, size: 160, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !1348, line: 212, baseType: !1472)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !1348, line: 205, size: 160, elements: !1473)
!1473 = !{!1474, !1475, !1486}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1472, file: !1348, line: 208, baseType: !1332, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1472, file: !1348, line: 209, baseType: !1476, size: 32, offset: 32)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !1348, line: 191, baseType: !1478)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !1348, line: 181, size: 160, elements: !1479)
!1479 = !{!1480, !1481, !1483, !1484, !1485}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1478, file: !1348, line: 184, baseType: !1352, size: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1478, file: !1348, line: 185, baseType: !1482, size: 32, offset: 32)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1478, file: !1348, line: 186, baseType: !1482, size: 32, offset: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1478, file: !1348, line: 187, baseType: !161, size: 32, offset: 96)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1478, file: !1348, line: 188, baseType: !161, size: 32, offset: 128)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1472, file: !1348, line: 210, baseType: !1487, size: 96, offset: 64)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !1348, line: 200, baseType: !1488)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !1348, line: 193, size: 96, elements: !1489)
!1489 = !{!1490, !1491, !1492}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1488, file: !1348, line: 196, baseType: !1352, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1488, file: !1348, line: 197, baseType: !1482, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1488, file: !1348, line: 198, baseType: !1482, size: 32, offset: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToReceive", scope: !1456, file: !1451, line: 143, baseType: !1471, size: 160, offset: 288)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "uxMessagesWaiting", scope: !1456, file: !1451, line: 145, baseType: !1420, size: 32, offset: 448)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "uxLength", scope: !1456, file: !1451, line: 146, baseType: !1332, size: 32, offset: 480)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "uxItemSize", scope: !1456, file: !1451, line: 147, baseType: !1332, size: 32, offset: 512)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "xRxLock", scope: !1456, file: !1451, line: 149, baseType: !1423, size: 32, offset: 544)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "xTxLock", scope: !1456, file: !1451, line: 150, baseType: !1423, size: 32, offset: 576)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "uxQueueNumber", scope: !1456, file: !1451, line: 153, baseType: !1332, size: 32, offset: 608)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "ucQueueType", scope: !1456, file: !1451, line: 154, baseType: !128, size: 8, offset: 640)
!1501 = !{!1448}
!1502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1503, size: 512, elements: !365)
!1503 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueRegistryItem_t", file: !1451, line: 187, baseType: !1504)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQueueRegistryItem", file: !1451, line: 182, baseType: !1505)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QUEUE_REGISTRY_ITEM", file: !1451, line: 178, size: 64, elements: !1506)
!1506 = !{!1507, !1508}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pcQueueName", scope: !1505, file: !1451, line: 180, baseType: !444, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !1505, file: !1451, line: 181, baseType: !1509, size: 32, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueHandle_t", file: !1510, line: 88, baseType: !161)
!1510 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/include/queue.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "xTimerQueue", scope: !1513, file: !1514, line: 169, type: !1509, isLocal: true, isDefinition: true)
!1513 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1514, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1515, globals: !1543, splitDebugInlining: false, nameTableKind: None)
!1514 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/timers.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1515 = !{!1337, !161, !1017, !435, !1332, !1352, !1516, !1541, !249, !128}
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer_t", file: !1514, line: 119, baseType: !1518)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "xTIMER", file: !1514, line: 115, baseType: !1519)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerControl", file: !1514, line: 104, size: 352, elements: !1520)
!1520 = !{!1521, !1522, !1532, !1533, !1534, !1535, !1542}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "pcTimerName", scope: !1519, file: !1514, line: 106, baseType: !444, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerListItem", scope: !1519, file: !1514, line: 107, baseType: !1523, size: 160, offset: 32)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !1348, line: 191, baseType: !1524)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !1348, line: 181, size: 160, elements: !1525)
!1525 = !{!1526, !1527, !1529, !1530, !1531}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1524, file: !1348, line: 184, baseType: !1352, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1524, file: !1348, line: 185, baseType: !1528, size: 32, offset: 32)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1524, file: !1348, line: 186, baseType: !1528, size: 32, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1524, file: !1348, line: 187, baseType: !161, size: 32, offset: 96)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1524, file: !1348, line: 188, baseType: !161, size: 32, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerPeriodInTicks", scope: !1519, file: !1514, line: 108, baseType: !1352, size: 32, offset: 192)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "uxAutoReload", scope: !1519, file: !1514, line: 109, baseType: !1332, size: 32, offset: 224)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pvTimerID", scope: !1519, file: !1514, line: 110, baseType: !161, size: 32, offset: 256)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pxCallbackFunction", scope: !1519, file: !1514, line: 111, baseType: !1536, size: 32, offset: 288)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerCallbackFunction_t", file: !1537, line: 123, baseType: !1538)
!1537 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/include/timers.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{null, !1541}
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerHandle_t", file: !1537, line: 118, baseType: !161)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "uxTimerNumber", scope: !1519, file: !1514, line: 113, baseType: !1332, size: 32, offset: 320)
!1543 = !{!1511, !1544, !1560, !1570, !1572, !1574}
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(name: "pxCurrentTimerList", scope: !1513, file: !1514, line: 165, type: !1546, isLocal: true, isDefinition: true)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !1348, line: 212, baseType: !1548)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !1348, line: 205, size: 160, elements: !1549)
!1549 = !{!1550, !1551, !1553}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1548, file: !1348, line: 208, baseType: !1332, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1548, file: !1348, line: 209, baseType: !1552, size: 32, offset: 32)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1548, file: !1348, line: 210, baseType: !1554, size: 96, offset: 64)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !1348, line: 200, baseType: !1555)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !1348, line: 193, size: 96, elements: !1556)
!1556 = !{!1557, !1558, !1559}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1555, file: !1348, line: 196, baseType: !1352, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1555, file: !1348, line: 197, baseType: !1528, size: 32, offset: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1555, file: !1348, line: 198, baseType: !1528, size: 32, offset: 64)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "xLastTime", scope: !1562, file: !1514, line: 524, type: !1352, isLocal: true, isDefinition: true)
!1562 = distinct !DISubprogram(name: "prvSampleTimeNow", scope: !1514, file: !1514, line: 521, type: !1563, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !1567)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!1352, !1565}
!1565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1566)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!1567 = !{!1568, !1569}
!1568 = !DILocalVariable(name: "pxTimerListsWereSwitched", arg: 1, scope: !1562, file: !1514, line: 521, type: !1565)
!1569 = !DILocalVariable(name: "xTimeNow", scope: !1562, file: !1514, line: 523, type: !1352)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "pxOverflowTimerList", scope: !1513, file: !1514, line: 166, type: !1546, isLocal: true, isDefinition: true)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(name: "xActiveTimerList1", scope: !1513, file: !1514, line: 163, type: !1547, isLocal: true, isDefinition: true)
!1574 = !DIGlobalVariableExpression(var: !1575, expr: !DIExpression())
!1575 = distinct !DIGlobalVariable(name: "xActiveTimerList2", scope: !1513, file: !1514, line: 164, type: !1547, isLocal: true, isDefinition: true)
!1576 = !DIGlobalVariableExpression(var: !1577, expr: !DIExpression())
!1577 = distinct !DIGlobalVariable(name: "ucMaxSysCallPriority", scope: !1578, file: !1579, line: 212, type: !128, isLocal: true, isDefinition: true)
!1578 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1579, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1580, retainedTypes: !1588, globals: !1589, splitDebugInlining: false, nameTableKind: None)
!1579 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1580 = !{!1581, !877}
!1581 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !878, line: 50, baseType: !7, size: 32, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587}
!1583 = !DIEnumerator(name: "HAL_DWT_0", value: 0)
!1584 = !DIEnumerator(name: "HAL_DWT_1", value: 1)
!1585 = !DIEnumerator(name: "HAL_DWT_2", value: 2)
!1586 = !DIEnumerator(name: "HAL_DWT_3", value: 3)
!1587 = !DIEnumerator(name: "HAL_DWT_MAX", value: 4)
!1588 = !{!1335, !161, !247, !128, !136, !249, !1337, !1352}
!1589 = !{!1590, !1576, !1595, !1597}
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "pcInterruptPriorityRegisters", scope: !1578, file: !1579, line: 214, type: !1592, isLocal: true, isDefinition: true)
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "ulMaxPRIGROUPValue", scope: !1578, file: !1579, line: 213, type: !136, isLocal: true, isDefinition: true)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "uxCriticalNesting", scope: !1578, file: !1579, line: 150, type: !1332, isLocal: true, isDefinition: true)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "pxEnd", scope: !1601, file: !1602, line: 142, type: !1604, isLocal: true, isDefinition: true)
!1601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1603, globals: !1611, splitDebugInlining: false, nameTableKind: None)
!1602 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1603 = !{!161, !340, !1387, !136, !1604}
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockLink_t", file: !1602, line: 117, baseType: !1606)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "A_BLOCK_LINK", file: !1602, line: 110, size: 64, elements: !1607)
!1607 = !{!1608, !1610}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "pxNextFreeBlock", scope: !1606, file: !1602, line: 112, baseType: !1609, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "xBlockSize", scope: !1606, file: !1602, line: 113, baseType: !1387, size: 32, offset: 32)
!1611 = !{!1612, !1615, !1599, !1617, !1619, !1621, !1623}
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression(DW_OP_constu, 8, DW_OP_stack_value))
!1613 = distinct !DIGlobalVariable(name: "xHeapStructSize", scope: !1601, file: !1602, line: 139, type: !1614, isLocal: true, isDefinition: true)
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "xStart", scope: !1601, file: !1602, line: 142, type: !1605, isLocal: true, isDefinition: true)
!1617 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression())
!1618 = distinct !DIGlobalVariable(name: "xBlockAllocatedBit", scope: !1601, file: !1602, line: 153, type: !1387, isLocal: true, isDefinition: true)
!1619 = !DIGlobalVariableExpression(var: !1620, expr: !DIExpression())
!1620 = distinct !DIGlobalVariable(name: "xFreeBytesRemaining", scope: !1601, file: !1602, line: 146, type: !1387, isLocal: true, isDefinition: true)
!1621 = !DIGlobalVariableExpression(var: !1622, expr: !DIExpression())
!1622 = distinct !DIGlobalVariable(name: "xMinimumEverFreeBytesRemaining", scope: !1601, file: !1602, line: 147, type: !1387, isLocal: true, isDefinition: true)
!1623 = !DIGlobalVariableExpression(var: !1624, expr: !DIExpression())
!1624 = distinct !DIGlobalVariable(name: "ucHeap", scope: !1601, file: !1602, line: 105, type: !1625, isLocal: true, isDefinition: true)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 524288, elements: !1626)
!1626 = !{!1627}
!1627 = !DISubrange(count: 65536)
!1628 = !DIGlobalVariableExpression(var: !1618, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 2147483648, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "xExceptionStack", scope: !1631, file: !1632, line: 78, type: !1806, isLocal: true, isDefinition: true)
!1631 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1632, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1633, retainedTypes: !1661, globals: !1714, splitDebugInlining: false, nameTableKind: None)
!1632 = !DIFile(filename: "../../../../..//kernel/service/src/exception_handler.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1633 = !{!1634, !1581}
!1634 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1632, line: 276, baseType: !7, size: 32, elements: !1635)
!1635 = !{!1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660}
!1636 = !DIEnumerator(name: "r0", value: 0)
!1637 = !DIEnumerator(name: "r1", value: 1)
!1638 = !DIEnumerator(name: "r2", value: 2)
!1639 = !DIEnumerator(name: "r3", value: 3)
!1640 = !DIEnumerator(name: "r12", value: 4)
!1641 = !DIEnumerator(name: "lr", value: 5)
!1642 = !DIEnumerator(name: "pc", value: 6)
!1643 = !DIEnumerator(name: "psr", value: 7)
!1644 = !DIEnumerator(name: "s0", value: 8)
!1645 = !DIEnumerator(name: "s1", value: 9)
!1646 = !DIEnumerator(name: "s2", value: 10)
!1647 = !DIEnumerator(name: "s3", value: 11)
!1648 = !DIEnumerator(name: "s4", value: 12)
!1649 = !DIEnumerator(name: "s5", value: 13)
!1650 = !DIEnumerator(name: "s6", value: 14)
!1651 = !DIEnumerator(name: "s7", value: 15)
!1652 = !DIEnumerator(name: "s8", value: 16)
!1653 = !DIEnumerator(name: "s9", value: 17)
!1654 = !DIEnumerator(name: "s10", value: 18)
!1655 = !DIEnumerator(name: "s11", value: 19)
!1656 = !DIEnumerator(name: "s12", value: 20)
!1657 = !DIEnumerator(name: "s13", value: 21)
!1658 = !DIEnumerator(name: "s14", value: 22)
!1659 = !DIEnumerator(name: "s15", value: 23)
!1660 = !DIEnumerator(name: "fpscr", value: 24)
!1661 = !{!1662, !305, !7, !136, !1687}
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 418, baseType: !1664)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 395, size: 1120, elements: !1665)
!1665 = !{!1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1664, file: !644, line: 397, baseType: !678, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1664, file: !644, line: 398, baseType: !250, size: 32, offset: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1664, file: !644, line: 399, baseType: !250, size: 32, offset: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1664, file: !644, line: 400, baseType: !250, size: 32, offset: 96)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1664, file: !644, line: 401, baseType: !250, size: 32, offset: 128)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1664, file: !644, line: 402, baseType: !250, size: 32, offset: 160)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1664, file: !644, line: 403, baseType: !685, size: 96, offset: 192)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1664, file: !644, line: 404, baseType: !250, size: 32, offset: 288)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1664, file: !644, line: 405, baseType: !250, size: 32, offset: 320)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1664, file: !644, line: 406, baseType: !250, size: 32, offset: 352)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1664, file: !644, line: 407, baseType: !250, size: 32, offset: 384)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1664, file: !644, line: 408, baseType: !250, size: 32, offset: 416)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1664, file: !644, line: 409, baseType: !250, size: 32, offset: 448)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1664, file: !644, line: 410, baseType: !250, size: 32, offset: 480)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1664, file: !644, line: 411, baseType: !694, size: 64, offset: 512)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1664, file: !644, line: 412, baseType: !678, size: 32, offset: 576)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1664, file: !644, line: 413, baseType: !678, size: 32, offset: 608)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1664, file: !644, line: 414, baseType: !698, size: 128, offset: 640)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1664, file: !644, line: 415, baseType: !700, size: 160, offset: 768)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1664, file: !644, line: 416, baseType: !704, size: 160, offset: 928)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1664, file: !644, line: 417, baseType: !250, size: 32, offset: 1088)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !644, line: 826, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 801, size: 736, elements: !1690)
!1690 = !{!1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1689, file: !644, line: 803, baseType: !250, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !1689, file: !644, line: 804, baseType: !250, size: 32, offset: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !1689, file: !644, line: 805, baseType: !250, size: 32, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !1689, file: !644, line: 806, baseType: !250, size: 32, offset: 96)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !1689, file: !644, line: 807, baseType: !250, size: 32, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !1689, file: !644, line: 808, baseType: !250, size: 32, offset: 160)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !1689, file: !644, line: 809, baseType: !250, size: 32, offset: 192)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !1689, file: !644, line: 810, baseType: !678, size: 32, offset: 224)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !1689, file: !644, line: 811, baseType: !250, size: 32, offset: 256)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !1689, file: !644, line: 812, baseType: !250, size: 32, offset: 288)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !1689, file: !644, line: 813, baseType: !250, size: 32, offset: 320)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1689, file: !644, line: 814, baseType: !558, size: 32, offset: 352)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !1689, file: !644, line: 815, baseType: !250, size: 32, offset: 384)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !1689, file: !644, line: 816, baseType: !250, size: 32, offset: 416)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !1689, file: !644, line: 817, baseType: !250, size: 32, offset: 448)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1689, file: !644, line: 818, baseType: !558, size: 32, offset: 480)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !1689, file: !644, line: 819, baseType: !250, size: 32, offset: 512)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !1689, file: !644, line: 820, baseType: !250, size: 32, offset: 544)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !1689, file: !644, line: 821, baseType: !250, size: 32, offset: 576)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1689, file: !644, line: 822, baseType: !558, size: 32, offset: 608)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !1689, file: !644, line: 823, baseType: !250, size: 32, offset: 640)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !1689, file: !644, line: 824, baseType: !250, size: 32, offset: 672)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !1689, file: !644, line: 825, baseType: !250, size: 32, offset: 704)
!1714 = !{!1715, !1718, !1629, !1778, !1787, !1789, !1804}
!1715 = !DIGlobalVariableExpression(var: !1716, expr: !DIExpression())
!1716 = distinct !DIGlobalVariable(name: "pxExceptionStack", scope: !1631, file: !1632, line: 79, type: !1717, isLocal: false, isDefinition: true)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 32)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "pTaskContext", scope: !1631, file: !1632, line: 340, type: !1720, isLocal: false, isDefinition: true)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskContext", file: !1632, line: 337, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TaskContextType", file: !1632, line: 282, size: 1728, elements: !1723)
!1723 = !{!1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1722, file: !1632, line: 283, baseType: !7, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1722, file: !1632, line: 284, baseType: !7, size: 32, offset: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1722, file: !1632, line: 285, baseType: !7, size: 32, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1722, file: !1632, line: 286, baseType: !7, size: 32, offset: 96)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !1722, file: !1632, line: 287, baseType: !7, size: 32, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !1722, file: !1632, line: 288, baseType: !7, size: 32, offset: 160)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !1722, file: !1632, line: 289, baseType: !7, size: 32, offset: 192)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !1722, file: !1632, line: 290, baseType: !7, size: 32, offset: 224)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1722, file: !1632, line: 291, baseType: !7, size: 32, offset: 256)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1722, file: !1632, line: 292, baseType: !7, size: 32, offset: 288)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1722, file: !1632, line: 293, baseType: !7, size: 32, offset: 320)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1722, file: !1632, line: 294, baseType: !7, size: 32, offset: 352)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1722, file: !1632, line: 295, baseType: !7, size: 32, offset: 384)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1722, file: !1632, line: 296, baseType: !7, size: 32, offset: 416)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !1722, file: !1632, line: 297, baseType: !7, size: 32, offset: 448)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1722, file: !1632, line: 298, baseType: !7, size: 32, offset: 480)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "psr", scope: !1722, file: !1632, line: 299, baseType: !7, size: 32, offset: 512)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1722, file: !1632, line: 300, baseType: !7, size: 32, offset: 544)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "exc_return", scope: !1722, file: !1632, line: 301, baseType: !7, size: 32, offset: 576)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "msp", scope: !1722, file: !1632, line: 302, baseType: !7, size: 32, offset: 608)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1722, file: !1632, line: 303, baseType: !7, size: 32, offset: 640)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "fpscr", scope: !1722, file: !1632, line: 304, baseType: !7, size: 32, offset: 672)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "s0", scope: !1722, file: !1632, line: 305, baseType: !7, size: 32, offset: 704)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "s1", scope: !1722, file: !1632, line: 306, baseType: !7, size: 32, offset: 736)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "s2", scope: !1722, file: !1632, line: 307, baseType: !7, size: 32, offset: 768)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "s3", scope: !1722, file: !1632, line: 308, baseType: !7, size: 32, offset: 800)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "s4", scope: !1722, file: !1632, line: 309, baseType: !7, size: 32, offset: 832)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "s5", scope: !1722, file: !1632, line: 310, baseType: !7, size: 32, offset: 864)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "s6", scope: !1722, file: !1632, line: 311, baseType: !7, size: 32, offset: 896)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "s7", scope: !1722, file: !1632, line: 312, baseType: !7, size: 32, offset: 928)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "s8", scope: !1722, file: !1632, line: 313, baseType: !7, size: 32, offset: 960)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "s9", scope: !1722, file: !1632, line: 314, baseType: !7, size: 32, offset: 992)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "s10", scope: !1722, file: !1632, line: 315, baseType: !7, size: 32, offset: 1024)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "s11", scope: !1722, file: !1632, line: 316, baseType: !7, size: 32, offset: 1056)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "s12", scope: !1722, file: !1632, line: 317, baseType: !7, size: 32, offset: 1088)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "s13", scope: !1722, file: !1632, line: 318, baseType: !7, size: 32, offset: 1120)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "s14", scope: !1722, file: !1632, line: 319, baseType: !7, size: 32, offset: 1152)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "s15", scope: !1722, file: !1632, line: 320, baseType: !7, size: 32, offset: 1184)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "s16", scope: !1722, file: !1632, line: 321, baseType: !7, size: 32, offset: 1216)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "s17", scope: !1722, file: !1632, line: 322, baseType: !7, size: 32, offset: 1248)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "s18", scope: !1722, file: !1632, line: 323, baseType: !7, size: 32, offset: 1280)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "s19", scope: !1722, file: !1632, line: 324, baseType: !7, size: 32, offset: 1312)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "s20", scope: !1722, file: !1632, line: 325, baseType: !7, size: 32, offset: 1344)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "s21", scope: !1722, file: !1632, line: 326, baseType: !7, size: 32, offset: 1376)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "s22", scope: !1722, file: !1632, line: 327, baseType: !7, size: 32, offset: 1408)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "s23", scope: !1722, file: !1632, line: 328, baseType: !7, size: 32, offset: 1440)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "s24", scope: !1722, file: !1632, line: 329, baseType: !7, size: 32, offset: 1472)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "s25", scope: !1722, file: !1632, line: 330, baseType: !7, size: 32, offset: 1504)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "s26", scope: !1722, file: !1632, line: 331, baseType: !7, size: 32, offset: 1536)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "s27", scope: !1722, file: !1632, line: 332, baseType: !7, size: 32, offset: 1568)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "s28", scope: !1722, file: !1632, line: 333, baseType: !7, size: 32, offset: 1600)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "s29", scope: !1722, file: !1632, line: 334, baseType: !7, size: 32, offset: 1632)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "s30", scope: !1722, file: !1632, line: 335, baseType: !7, size: 32, offset: 1664)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "s31", scope: !1722, file: !1632, line: 336, baseType: !7, size: 32, offset: 1696)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "assert_expr", scope: !1631, file: !1632, line: 99, type: !1780, isLocal: true, isDefinition: true)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "assert_expr_t", file: !1632, line: 95, baseType: !1781)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 89, size: 128, elements: !1782)
!1782 = !{!1783, !1784, !1785, !1786}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "is_valid", scope: !1781, file: !1632, line: 91, baseType: !126, size: 8)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1781, file: !1632, line: 92, baseType: !444, size: 32, offset: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1781, file: !1632, line: 93, baseType: !444, size: 32, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1781, file: !1632, line: 94, baseType: !53, size: 32, offset: 96)
!1787 = !DIGlobalVariableExpression(var: !1788, expr: !DIExpression())
!1788 = distinct !DIGlobalVariable(name: "reboot_flag", scope: !1631, file: !1632, line: 101, type: !53, isLocal: true, isDefinition: true)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "exception_config", scope: !1631, file: !1632, line: 97, type: !1791, isLocal: true, isDefinition: true)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_t", file: !1632, line: 87, baseType: !1792)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1632, line: 83, size: 416, elements: !1793)
!1793 = !{!1794, !1795}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !1792, file: !1632, line: 85, baseType: !53, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "configs", scope: !1792, file: !1632, line: 86, baseType: !1796, size: 384, offset: 32)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 384, elements: !1363)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !1798, line: 99, baseType: !1799)
!1798 = !DIFile(filename: "../../../../..//kernel/service/inc/exception_handler.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1798, line: 95, size: 64, elements: !1800)
!1800 = !{!1801, !1803}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !1799, file: !1798, line: 97, baseType: !1802, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_exception_callback_t", file: !1798, line: 93, baseType: !180)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !1799, file: !1798, line: 98, baseType: !1802, size: 32, offset: 32)
!1804 = !DIGlobalVariableExpression(var: !1805, expr: !DIExpression())
!1805 = distinct !DIGlobalVariable(name: "taskContext", scope: !1631, file: !1632, line: 339, type: !1721, isLocal: true, isDefinition: true)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 6144, elements: !1807)
!1807 = !{!1808}
!1808 = !DISubrange(count: 192)
!1809 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment, 0, 8))
!1810 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!1811 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression(DW_OP_LLVM_fragment, 64, 32))
!1812 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression(DW_OP_LLVM_fragment, 96, 32))
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "memory_regions", scope: !1815, file: !1816, line: 51, type: !1818, isLocal: false, isDefinition: true)
!1815 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1816, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1817, splitDebugInlining: false, nameTableKind: None)
!1816 = !DIFile(filename: "../../../../..//project/mt7687_hdk/apps/minicli/src/regions_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1817 = !{!1813}
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 768, elements: !1363)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1820)
!1820 = !DIDerivedType(tag: DW_TAG_typedef, name: "memory_region_type", file: !1798, line: 91, baseType: !1821)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1798, line: 85, size: 128, elements: !1822)
!1822 = !{!1823, !1824, !1825, !1826}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "region_name", scope: !1821, file: !1798, line: 87, baseType: !331, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "start_address", scope: !1821, file: !1798, line: 88, baseType: !1717, size: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "end_address", scope: !1821, file: !1798, line: 89, baseType: !1717, size: 32, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "is_dumped", scope: !1821, file: !1798, line: 90, baseType: !7, size: 32, offset: 96)
!1827 = !DIGlobalVariableExpression(var: !1828, expr: !DIExpression())
!1828 = distinct !DIGlobalVariable(name: "log_control_block_common", scope: !1829, file: !1830, line: 158, type: !1897, isLocal: false, isDefinition: true)
!1829 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1830, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1831, retainedTypes: !1857, globals: !1916, splitDebugInlining: false, nameTableKind: None)
!1830 = !DIFile(filename: "../../../../..//kernel/service/src/syslog.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1831 = !{!458, !463, !762, !770, !775, !791, !797, !801, !1832, !1836, !1849, !225}
!1832 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1830, line: 96, baseType: !7, size: 32, elements: !1833)
!1833 = !{!1834, !1835}
!1834 = !DIEnumerator(name: "MESSAGE_TYPE_NORMAL_LOG", value: 0)
!1835 = !DIEnumerator(name: "MESSAGE_TYPE_HEX_DUMP", value: 1)
!1836 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1837, line: 40, baseType: !7, size: 32, elements: !1838)
!1837 = !DIFile(filename: "../inc/task_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1838 = !{!1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848}
!1839 = !DIEnumerator(name: "TASK_PRIORITY_IDLE", value: 0)
!1840 = !DIEnumerator(name: "TASK_PRIORITY_SYSLOG", value: 1)
!1841 = !DIEnumerator(name: "TASK_PRIORITY_LOW", value: 2)
!1842 = !DIEnumerator(name: "TASK_PRIORITY_BELOW_NORMAL", value: 3)
!1843 = !DIEnumerator(name: "TASK_PRIORITY_NORMAL", value: 4)
!1844 = !DIEnumerator(name: "TASK_PRIORITY_ABOVE_NORMAL", value: 5)
!1845 = !DIEnumerator(name: "TASK_PRIORITY_HIGH", value: 6)
!1846 = !DIEnumerator(name: "TASK_PRIORITY_SOFT_REALTIME", value: 7)
!1847 = !DIEnumerator(name: "TASK_PRIORITY_HARD_REALTIME", value: 8)
!1848 = !DIEnumerator(name: "TASK_PRIORITY_TIMER", value: 19)
!1849 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1850, line: 50, baseType: !7, size: 32, elements: !1851)
!1850 = !DIFile(filename: "../../../../..//kernel/service/inc/toi.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1851 = !{!1852, !1853, !1854, !1855, !1856}
!1852 = !DIEnumerator(name: "TOI_BIN", value: 0)
!1853 = !DIEnumerator(name: "TOI_OCT", value: 1)
!1854 = !DIEnumerator(name: "TOI_DEC", value: 2)
!1855 = !DIEnumerator(name: "TOI_HEX", value: 3)
!1856 = !DIEnumerator(name: "TOI_ERR", value: 4)
!1857 = !{!1858, !128, !161, !249, !1337, !1352, !7, !331, !53, !1896, !475, !477, !136, !1905, !1914}
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_message_t", file: !1830, line: 130, baseType: !1860)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1830, line: 124, size: 2336, elements: !1861)
!1861 = !{!1862, !1864}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "message_type", scope: !1860, file: !1830, line: 125, baseType: !1863, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "message_type_t", file: !1830, line: 99, baseType: !1832)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1860, file: !1830, line: 129, baseType: !1865, size: 2304, offset: 32)
!1865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1860, file: !1830, line: 126, size: 2304, elements: !1866)
!1866 = !{!1867, !1880}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "normal_log_message", scope: !1865, file: !1830, line: 127, baseType: !1868, size: 2240)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "normal_log_message_t", file: !1830, line: 108, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1830, line: 101, size: 2240, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1874, !1875, !1876}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1869, file: !1830, line: 102, baseType: !444, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1869, file: !1830, line: 103, baseType: !477, size: 32, offset: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !1869, file: !1830, line: 104, baseType: !444, size: 32, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !1869, file: !1830, line: 105, baseType: !53, size: 32, offset: 96)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1869, file: !1830, line: 106, baseType: !136, size: 32, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1869, file: !1830, line: 107, baseType: !1877, size: 2056, offset: 160)
!1877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 2056, elements: !1878)
!1878 = !{!1879}
!1879 = !DISubrange(count: 257)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "hex_dump_message", scope: !1865, file: !1830, line: 128, baseType: !1881, size: 2304)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "hex_dump_message_t", file: !1830, line: 120, baseType: !1882)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1830, line: 110, size: 2304, elements: !1883)
!1883 = !{!1884, !1885, !1886, !1887, !1888, !1889, !1893, !1894, !1895}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1882, file: !1830, line: 111, baseType: !444, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1882, file: !1830, line: 112, baseType: !477, size: 32, offset: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !1882, file: !1830, line: 113, baseType: !444, size: 32, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !1882, file: !1830, line: 114, baseType: !53, size: 32, offset: 96)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1882, file: !1830, line: 115, baseType: !136, size: 32, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1882, file: !1830, line: 116, baseType: !1890, size: 1032, offset: 160)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 1032, elements: !1891)
!1891 = !{!1892}
!1892 = !DISubrange(count: 129)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !1882, file: !1830, line: 117, baseType: !136, size: 32, offset: 1216)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1882, file: !1830, line: 118, baseType: !966, size: 1024, offset: 1248)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "additional_data", scope: !1882, file: !1830, line: 119, baseType: !331, size: 32, offset: 2272)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !459, line: 95, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !459, line: 89, size: 160, elements: !1899)
!1899 = !{!1900, !1901, !1902, !1903, !1904}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1898, file: !459, line: 90, baseType: !444, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !1898, file: !459, line: 91, baseType: !475, size: 32, offset: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1898, file: !459, line: 92, baseType: !477, size: 32, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !1898, file: !459, line: 93, baseType: !479, size: 32, offset: 96)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !1898, file: !459, line: 94, baseType: !484, size: 32, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_buffer_t", file: !1830, line: 135, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1830, line: 132, size: 2368, elements: !1908)
!1908 = !{!1909, !1910}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "occupied", scope: !1907, file: !1830, line: 133, baseType: !136, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1907, file: !1830, line: 134, baseType: !1911, size: 2336, offset: 32)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 2336, elements: !1912)
!1912 = !{!1913}
!1913 = !DISubrange(count: 292)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !129, line: 60, baseType: !1915)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !131, line: 105, baseType: !1231)
!1916 = !{!1827, !1917, !1919, !1922, !1936, !1938, !1940, !1942, !1944, !1947, !1949, !1951}
!1917 = !DIGlobalVariableExpression(var: !1918, expr: !DIExpression())
!1918 = distinct !DIGlobalVariable(name: "syslog_task_handle", scope: !1829, file: !1830, line: 138, type: !1336, isLocal: true, isDefinition: true)
!1919 = !DIGlobalVariableExpression(var: !1920, expr: !DIExpression())
!1920 = distinct !DIGlobalVariable(name: "syslog_buffer_pool", scope: !1829, file: !1830, line: 141, type: !1921, isLocal: true, isDefinition: true)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1906, size: 37888, elements: !568)
!1922 = !DIGlobalVariableExpression(var: !1923, expr: !DIExpression())
!1923 = distinct !DIGlobalVariable(name: "syslog_config", scope: !1829, file: !1830, line: 160, type: !1924, isLocal: true, isDefinition: true)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_config_t", file: !459, line: 97, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "syslog_config_s", file: !459, line: 122, size: 64, elements: !1926)
!1926 = !{!1927, !1934}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "save_fn", scope: !1925, file: !459, line: 123, baseType: !1928, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_save_fn", file: !459, line: 107, baseType: !1929)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 32)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{null, !1932}
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1924)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !1925, file: !459, line: 124, baseType: !1935, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 32)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "g_log_uart_port", scope: !1829, file: !1830, line: 166, type: !867, isLocal: true, isDefinition: true)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "syslog_init_done", scope: !1829, file: !1830, line: 153, type: !136, isLocal: true, isDefinition: true)
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "syslog_drop_count", scope: !1829, file: !1830, line: 155, type: !136, isLocal: true, isDefinition: true)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "g_log_queue", scope: !1829, file: !1830, line: 144, type: !1509, isLocal: true, isDefinition: true)
!1944 = !DIGlobalVariableExpression(var: !1945, expr: !DIExpression())
!1945 = distinct !DIGlobalVariable(name: "print_level_table", scope: !1829, file: !1830, line: 164, type: !1946, isLocal: true, isDefinition: true)
!1946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 128, elements: !350)
!1947 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression())
!1948 = distinct !DIGlobalVariable(name: "syslog_task_ready", scope: !1829, file: !1830, line: 154, type: !136, isLocal: true, isDefinition: true)
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "syslog_init_time", scope: !1829, file: !1830, line: 152, type: !136, isLocal: true, isDefinition: true)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "log_switch_table", scope: !1829, file: !1830, line: 162, type: !1953, isLocal: true, isDefinition: true)
!1953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 64, elements: !446)
!1954 = !DIGlobalVariableExpression(var: !1948, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1955 = !DIGlobalVariableExpression(var: !1956, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1956 = distinct !DIGlobalVariable(name: "is_io_ready", scope: !1957, file: !1958, line: 69, type: !126, isLocal: true, isDefinition: true)
!1957 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1958, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1959, retainedTypes: !1960, globals: !1986, splitDebugInlining: false, nameTableKind: None)
!1958 = !DIFile(filename: "../../../../..//driver/board/mt76x7_hdk/util/src/io_def.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!1959 = !{!770, !806}
!1960 = !{!340, !1509, !161, !1337, !1352, !1332, !128, !1961, !249}
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 418, baseType: !1963)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 395, size: 1120, elements: !1964)
!1964 = !{!1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1963, file: !644, line: 397, baseType: !678, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1963, file: !644, line: 398, baseType: !250, size: 32, offset: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1963, file: !644, line: 399, baseType: !250, size: 32, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1963, file: !644, line: 400, baseType: !250, size: 32, offset: 96)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1963, file: !644, line: 401, baseType: !250, size: 32, offset: 128)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1963, file: !644, line: 402, baseType: !250, size: 32, offset: 160)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1963, file: !644, line: 403, baseType: !685, size: 96, offset: 192)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1963, file: !644, line: 404, baseType: !250, size: 32, offset: 288)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1963, file: !644, line: 405, baseType: !250, size: 32, offset: 320)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1963, file: !644, line: 406, baseType: !250, size: 32, offset: 352)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1963, file: !644, line: 407, baseType: !250, size: 32, offset: 384)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1963, file: !644, line: 408, baseType: !250, size: 32, offset: 416)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1963, file: !644, line: 409, baseType: !250, size: 32, offset: 448)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1963, file: !644, line: 410, baseType: !250, size: 32, offset: 480)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1963, file: !644, line: 411, baseType: !694, size: 64, offset: 512)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1963, file: !644, line: 412, baseType: !678, size: 32, offset: 576)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1963, file: !644, line: 413, baseType: !678, size: 32, offset: 608)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1963, file: !644, line: 414, baseType: !698, size: 128, offset: 640)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1963, file: !644, line: 415, baseType: !700, size: 160, offset: 768)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1963, file: !644, line: 416, baseType: !704, size: 160, offset: 928)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1963, file: !644, line: 417, baseType: !250, size: 32, offset: 1088)
!1986 = !{!1987, !1992, !1995, !1996, !2000}
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "g_tx_vfifo", scope: !1957, file: !1958, line: 74, type: !1989, isLocal: true, isDefinition: true, align: 32)
!1989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 4096, elements: !1990)
!1990 = !{!1991}
!1991 = !DISubrange(count: 512)
!1992 = !DIGlobalVariableExpression(var: !1993, expr: !DIExpression())
!1993 = distinct !DIGlobalVariable(name: "g_rx_vfifo", scope: !1957, file: !1958, line: 75, type: !1994, isLocal: true, isDefinition: true, align: 32)
!1994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !128, size: 1024, elements: !967)
!1995 = !DIGlobalVariableExpression(var: !1956, expr: !DIExpression())
!1996 = !DIGlobalVariableExpression(var: !1997, expr: !DIExpression())
!1997 = distinct !DIGlobalVariable(name: "_g_semaphore_tx", scope: !1957, file: !1958, line: 71, type: !1998, isLocal: true, isDefinition: true)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreHandle_t", file: !1999, line: 79, baseType: !1509)
!1999 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/include/semphr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2000 = !DIGlobalVariableExpression(var: !2001, expr: !DIExpression())
!2001 = distinct !DIGlobalVariable(name: "_g_semaphore_rx", scope: !1957, file: !1958, line: 72, type: !1998, isLocal: true, isDefinition: true)
!2002 = !DIGlobalVariableExpression(var: !2003, expr: !DIExpression())
!2003 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2004, file: !2009, line: 4, type: !2013, isLocal: false, isDefinition: true)
!2004 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2005, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2006, splitDebugInlining: false, nameTableKind: None)
!2005 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC/Build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2006 = !{!2002, !2007, !2011}
!2007 = !DIGlobalVariableExpression(var: !2008, expr: !DIExpression())
!2008 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2004, file: !2009, line: 5, type: !2010, isLocal: false, isDefinition: true)
!2009 = !DIFile(filename: "Build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 88, elements: !190)
!2011 = !DIGlobalVariableExpression(var: !2012, expr: !DIExpression())
!2012 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2004, file: !2009, line: 6, type: !2010, isLocal: false, isDefinition: true)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 248, elements: !2014)
!2014 = !{!2015}
!2015 = !DISubrange(count: 31)
!2016 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2017, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2018, retainedTypes: !2019, splitDebugInlining: false, nameTableKind: None)
!2017 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/hal_trng.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2018 = !{!1088}
!2019 = !{!414, !416}
!2020 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2021, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2022, splitDebugInlining: false, nameTableKind: None)
!2021 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2022 = !{!2023, !2048}
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !644, line: 418, baseType: !2025)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 395, size: 1120, elements: !2026)
!2026 = !{!2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2025, file: !644, line: 397, baseType: !678, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2025, file: !644, line: 398, baseType: !250, size: 32, offset: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2025, file: !644, line: 399, baseType: !250, size: 32, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2025, file: !644, line: 400, baseType: !250, size: 32, offset: 96)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2025, file: !644, line: 401, baseType: !250, size: 32, offset: 128)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2025, file: !644, line: 402, baseType: !250, size: 32, offset: 160)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2025, file: !644, line: 403, baseType: !685, size: 96, offset: 192)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2025, file: !644, line: 404, baseType: !250, size: 32, offset: 288)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2025, file: !644, line: 405, baseType: !250, size: 32, offset: 320)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2025, file: !644, line: 406, baseType: !250, size: 32, offset: 352)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2025, file: !644, line: 407, baseType: !250, size: 32, offset: 384)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2025, file: !644, line: 408, baseType: !250, size: 32, offset: 416)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2025, file: !644, line: 409, baseType: !250, size: 32, offset: 448)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2025, file: !644, line: 410, baseType: !250, size: 32, offset: 480)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2025, file: !644, line: 411, baseType: !694, size: 64, offset: 512)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2025, file: !644, line: 412, baseType: !678, size: 32, offset: 576)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2025, file: !644, line: 413, baseType: !678, size: 32, offset: 608)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2025, file: !644, line: 414, baseType: !698, size: 128, offset: 640)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2025, file: !644, line: 415, baseType: !700, size: 160, offset: 768)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2025, file: !644, line: 416, baseType: !704, size: 160, offset: 928)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2025, file: !644, line: 417, baseType: !250, size: 32, offset: 1088)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !644, line: 378, baseType: !2050)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 363, size: 28704, elements: !2051)
!2051 = !{!2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2050, file: !644, line: 365, baseType: !648, size: 256)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2050, file: !644, line: 366, baseType: !650, size: 768, offset: 256)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2050, file: !644, line: 367, baseType: !648, size: 256, offset: 1024)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2050, file: !644, line: 368, baseType: !650, size: 768, offset: 1280)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2050, file: !644, line: 369, baseType: !648, size: 256, offset: 2048)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2050, file: !644, line: 370, baseType: !650, size: 768, offset: 2304)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2050, file: !644, line: 371, baseType: !648, size: 256, offset: 3072)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2050, file: !644, line: 372, baseType: !650, size: 768, offset: 3328)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2050, file: !644, line: 373, baseType: !648, size: 256, offset: 4096)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2050, file: !644, line: 374, baseType: !661, size: 1792, offset: 4352)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2050, file: !644, line: 375, baseType: !665, size: 1920, offset: 6144)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2050, file: !644, line: 376, baseType: !669, size: 20608, offset: 8064)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2050, file: !644, line: 377, baseType: !250, size: 32, offset: 28672)
!2065 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2066, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2067, splitDebugInlining: false, nameTableKind: None)
!2066 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/common/timer.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2067 = !{!304, !115}
!2068 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2069, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2070, retainedTypes: !952, splitDebugInlining: false, nameTableKind: None)
!2069 = !DIFile(filename: "../../../../..//driver/chip/mt7687/src/hal_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2070 = !{!2071, !240}
!2071 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !241, line: 110, baseType: !53, size: 32, elements: !2072)
!2072 = !{!2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080}
!2073 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!2074 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!2075 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!2076 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!2077 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!2078 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!2079 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!2080 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!2081 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2082, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2083, splitDebugInlining: false, nameTableKind: None)
!2082 = !DIFile(filename: "../../../../..//driver/board/mt76x7_hdk/ept/src/bsp_gpio_ept_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2083 = !{!136, !249}
!2084 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2085, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2086, splitDebugInlining: false, nameTableKind: None)
!2085 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/list.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2086 = !{!2087, !1352, !1332, !161, !2097}
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !1348, line: 191, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !1348, line: 181, size: 160, elements: !2090)
!2090 = !{!2091, !2092, !2094, !2095, !2096}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !2089, file: !1348, line: 184, baseType: !1352, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !2089, file: !1348, line: 185, baseType: !2093, size: 32, offset: 32)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !2089, file: !1348, line: 186, baseType: !2093, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !2089, file: !1348, line: 187, baseType: !161, size: 32, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !2089, file: !1348, line: 188, baseType: !161, size: 32, offset: 128)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !1348, line: 212, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !1348, line: 205, size: 160, elements: !2100)
!2100 = !{!2101, !2102, !2103}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !2099, file: !1348, line: 208, baseType: !1332, size: 32)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !2099, file: !1348, line: 209, baseType: !2087, size: 32, offset: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !2099, file: !1348, line: 210, baseType: !2104, size: 96, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !1348, line: 200, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !1348, line: 193, size: 96, elements: !2106)
!2106 = !{!2107, !2108, !2109}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !2105, file: !1348, line: 196, baseType: !1352, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !2105, file: !1348, line: 197, baseType: !2093, size: 32, offset: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !2105, file: !1348, line: 198, baseType: !2093, size: 32, offset: 64)
!2110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2111, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2112, splitDebugInlining: false, nameTableKind: None)
!2111 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/portable/GCC/mt7687/port_tick.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2112 = !{!1352, !2113}
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !644, line: 656, baseType: !2115)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !644, line: 650, size: 128, elements: !2116)
!2116 = !{!2117, !2118, !2119, !2120}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2115, file: !644, line: 652, baseType: !250, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2115, file: !644, line: 653, baseType: !250, size: 32, offset: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2115, file: !644, line: 654, baseType: !250, size: 32, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2115, file: !644, line: 655, baseType: !678, size: 32, offset: 96)
!2121 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2122, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2123, splitDebugInlining: false, nameTableKind: None)
!2122 = !DIFile(filename: "../../../../..//kernel/service/src/os_port_callback.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2123 = !{!7, !331}
!2124 = !{!"Ubuntu clang version 14.0.6"}
!2125 = !{i32 7, !"Dwarf Version", i32 2}
!2126 = !{i32 2, !"Debug Info Version", i32 3}
!2127 = !{i32 1, !"wchar_size", i32 4}
!2128 = !{i32 1, !"min_enum_size", i32 4}
!2129 = !{i32 1, !"branch-target-enforcement", i32 0}
!2130 = !{i32 1, !"sign-return-address", i32 0}
!2131 = !{i32 1, !"sign-return-address-all", i32 0}
!2132 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2133 = !{i32 7, !"frame-pointer", i32 2}
!2134 = distinct !DISubprogram(name: "DMA_ERROR_LISR", scope: !3, file: !3, line: 509, type: !181, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2135)
!2135 = !{}
!2136 = !DILocation(line: 511, column: 5, scope: !2134)
!2137 = distinct !{!2137, !2136, !2138}
!2138 = !DILocation(line: 511, column: 14, scope: !2134)
!2139 = distinct !DISubprogram(name: "DMA_Stop", scope: !3, file: !3, line: 73, type: !2140, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2142)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{null, !128}
!2142 = !{!2143}
!2143 = !DILocalVariable(name: "channel", arg: 1, scope: !2139, file: !3, line: 73, type: !128)
!2144 = !DILocation(line: 0, scope: !2139)
!2145 = !DILocation(line: 75, column: 5, scope: !2139)
!2146 = !DILocation(line: 76, column: 5, scope: !2139)
!2147 = !DILocation(line: 77, column: 1, scope: !2139)
!2148 = distinct !DISubprogram(name: "DMA_Run", scope: !3, file: !3, line: 79, type: !2140, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2149)
!2149 = !{!2150}
!2150 = !DILocalVariable(name: "channel", arg: 1, scope: !2148, file: !3, line: 79, type: !128)
!2151 = !DILocation(line: 0, scope: !2148)
!2152 = !DILocation(line: 81, column: 5, scope: !2148)
!2153 = !DILocation(line: 82, column: 5, scope: !2148)
!2154 = !DILocation(line: 83, column: 1, scope: !2148)
!2155 = distinct !DISubprogram(name: "DMA_GetChannel", scope: !3, file: !3, line: 86, type: !2156, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2158)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!128, !134}
!2158 = !{!2159, !2160, !2161, !2162}
!2159 = !DILocalVariable(name: "DMA_CODE", arg: 1, scope: !2155, file: !3, line: 86, type: !134)
!2160 = !DILocalVariable(name: "index", scope: !2155, file: !3, line: 88, type: !174)
!2161 = !DILocalVariable(name: "handle", scope: !2155, file: !3, line: 89, type: !174)
!2162 = !DILocalVariable(name: "flags", scope: !2155, file: !3, line: 90, type: !325)
!2163 = !DILocation(line: 0, scope: !2155)
!2164 = !DILocation(line: 470, column: 3, scope: !2165, inlinedAt: !2171)
!2165 = distinct !DISubprogram(name: "__get_PRIMASK", scope: !2166, file: !2166, line: 466, type: !2167, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2169)
!2166 = !DIFile(filename: "../../../../..//driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!136}
!2169 = !{!2170}
!2170 = !DILocalVariable(name: "result", scope: !2165, file: !2166, line: 468, type: !136)
!2171 = distinct !DILocation(line: 93, column: 5, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2155, file: !3, line: 93, column: 5)
!2173 = !{i64 316329}
!2174 = !DILocation(line: 0, scope: !2165, inlinedAt: !2171)
!2175 = !DILocation(line: 330, column: 3, scope: !2176, inlinedAt: !2177)
!2176 = distinct !DISubprogram(name: "__disable_irq", scope: !2166, file: !2166, line: 328, type: !181, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2135)
!2177 = distinct !DILocation(line: 93, column: 5, scope: !2172)
!2178 = !{i64 312993}
!2179 = !DILocation(line: 95, column: 5, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !2155, file: !3, line: 95, column: 5)
!2181 = !DILocation(line: 96, column: 41, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 96, column: 13)
!2183 = distinct !DILexicalBlock(scope: !2184, file: !3, line: 95, column: 79)
!2184 = distinct !DILexicalBlock(scope: !2180, file: !3, line: 95, column: 5)
!2185 = !DILocation(line: 96, column: 33, scope: !2182)
!2186 = !DILocation(line: 96, column: 52, scope: !2182)
!2187 = !DILocation(line: 96, column: 13, scope: !2183)
!2188 = !DILocation(line: 100, column: 35, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2182, file: !3, line: 96, column: 58)
!2190 = !DILocation(line: 100, column: 32, scope: !2189)
!2191 = !DILocation(line: 102, column: 13, scope: !2189)
!2192 = !DILocation(line: 95, column: 75, scope: !2184)
!2193 = !DILocation(line: 95, column: 50, scope: !2184)
!2194 = distinct !{!2194, !2179, !2195}
!2195 = !DILocation(line: 104, column: 5, scope: !2180)
!2196 = !DILocalVariable(name: "priMask", arg: 1, scope: !2197, file: !2166, line: 481, type: !136)
!2197 = distinct !DISubprogram(name: "__set_PRIMASK", scope: !2166, file: !2166, line: 481, type: !2198, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2200)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{null, !136}
!2200 = !{!2196}
!2201 = !DILocation(line: 0, scope: !2197, inlinedAt: !2202)
!2202 = distinct !DILocation(line: 105, column: 5, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2155, file: !3, line: 105, column: 5)
!2204 = !DILocation(line: 483, column: 3, scope: !2197, inlinedAt: !2202)
!2205 = !{i64 316647}
!2206 = !DILocation(line: 109, column: 15, scope: !2155)
!2207 = !DILocation(line: 109, column: 22, scope: !2155)
!2208 = !DILocation(line: 109, column: 5, scope: !2155)
!2209 = !DILocation(line: 109, column: 27, scope: !2155)
!2210 = !DILocation(line: 111, column: 5, scope: !2155)
!2211 = distinct !DISubprogram(name: "DMA_FreeChannel", scope: !3, file: !3, line: 114, type: !2140, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2212)
!2212 = !{!2213, !2214}
!2213 = !DILocalVariable(name: "handle", arg: 1, scope: !2211, file: !3, line: 114, type: !128)
!2214 = !DILocalVariable(name: "flags", scope: !2211, file: !3, line: 116, type: !325)
!2215 = !DILocation(line: 0, scope: !2211)
!2216 = !DILocation(line: 470, column: 3, scope: !2165, inlinedAt: !2217)
!2217 = distinct !DILocation(line: 118, column: 5, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2211, file: !3, line: 118, column: 5)
!2219 = !DILocation(line: 0, scope: !2165, inlinedAt: !2217)
!2220 = !DILocation(line: 330, column: 3, scope: !2176, inlinedAt: !2221)
!2221 = distinct !DILocation(line: 118, column: 5, scope: !2218)
!2222 = !DILocation(line: 121, column: 36, scope: !2211)
!2223 = !DILocation(line: 121, column: 33, scope: !2211)
!2224 = !DILocation(line: 121, column: 24, scope: !2211)
!2225 = !DILocation(line: 123, column: 5, scope: !2211)
!2226 = !DILocation(line: 125, column: 22, scope: !2211)
!2227 = !DILocation(line: 125, column: 5, scope: !2211)
!2228 = !DILocation(line: 125, column: 27, scope: !2211)
!2229 = !DILocation(line: 0, scope: !2197, inlinedAt: !2230)
!2230 = distinct !DILocation(line: 127, column: 5, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2211, file: !3, line: 127, column: 5)
!2232 = !DILocation(line: 483, column: 3, scope: !2197, inlinedAt: !2230)
!2233 = !DILocation(line: 129, column: 1, scope: !2211)
!2234 = distinct !DISubprogram(name: "DMA_FullSize_CheckIdleChannel", scope: !3, file: !3, line: 131, type: !2235, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2237)
!2235 = !DISubroutineType(types: !2236)
!2236 = !{!128, !134, !128}
!2237 = !{!2238, !2239, !2240, !2241, !2242}
!2238 = !DILocalVariable(name: "DMA_CODE", arg: 1, scope: !2234, file: !3, line: 131, type: !134)
!2239 = !DILocalVariable(name: "channel", arg: 2, scope: !2234, file: !3, line: 131, type: !128)
!2240 = !DILocalVariable(name: "index", scope: !2234, file: !3, line: 133, type: !174)
!2241 = !DILocalVariable(name: "handle", scope: !2234, file: !3, line: 134, type: !174)
!2242 = !DILocalVariable(name: "flags", scope: !2234, file: !3, line: 135, type: !325)
!2243 = !DILocation(line: 0, scope: !2234)
!2244 = !DILocation(line: 470, column: 3, scope: !2165, inlinedAt: !2245)
!2245 = distinct !DILocation(line: 137, column: 5, scope: !2246)
!2246 = distinct !DILexicalBlock(scope: !2234, file: !3, line: 137, column: 5)
!2247 = !DILocation(line: 0, scope: !2165, inlinedAt: !2245)
!2248 = !DILocation(line: 330, column: 3, scope: !2176, inlinedAt: !2249)
!2249 = distinct !DILocation(line: 137, column: 5, scope: !2246)
!2250 = !DILocation(line: 139, column: 21, scope: !2234)
!2251 = !DILocation(line: 140, column: 15, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2234, file: !3, line: 140, column: 9)
!2253 = !DILocation(line: 140, column: 9, scope: !2234)
!2254 = !DILocation(line: 140, column: 9, scope: !2252)
!2255 = !DILocation(line: 144, column: 10, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2234, file: !3, line: 144, column: 9)
!2257 = !DILocation(line: 144, column: 37, scope: !2256)
!2258 = !DILocation(line: 144, column: 29, scope: !2256)
!2259 = !DILocation(line: 144, column: 48, scope: !2256)
!2260 = !DILocation(line: 144, column: 9, scope: !2234)
!2261 = !DILocation(line: 148, column: 31, scope: !2262)
!2262 = distinct !DILexicalBlock(scope: !2256, file: !3, line: 144, column: 54)
!2263 = !DILocation(line: 148, column: 28, scope: !2262)
!2264 = !DILocation(line: 150, column: 5, scope: !2262)
!2265 = !DILocation(line: 0, scope: !2197, inlinedAt: !2266)
!2266 = distinct !DILocation(line: 153, column: 5, scope: !2267)
!2267 = distinct !DILexicalBlock(scope: !2234, file: !3, line: 153, column: 5)
!2268 = !DILocation(line: 483, column: 3, scope: !2197, inlinedAt: !2266)
!2269 = !DILocation(line: 156, column: 15, scope: !2234)
!2270 = !DILocation(line: 156, column: 22, scope: !2234)
!2271 = !DILocation(line: 156, column: 5, scope: !2234)
!2272 = !DILocation(line: 156, column: 27, scope: !2234)
!2273 = !DILocation(line: 157, column: 5, scope: !2234)
!2274 = !DILocation(line: 158, column: 1, scope: !2234)
!2275 = distinct !DISubprogram(name: "DMA_FullSize_FreeChannel", scope: !3, file: !3, line: 160, type: !2140, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2276)
!2276 = !{!2277, !2278}
!2277 = !DILocalVariable(name: "handle", arg: 1, scope: !2275, file: !3, line: 160, type: !128)
!2278 = !DILocalVariable(name: "flags", scope: !2275, file: !3, line: 162, type: !325)
!2279 = !DILocation(line: 0, scope: !2275)
!2280 = !DILocation(line: 470, column: 3, scope: !2165, inlinedAt: !2281)
!2281 = distinct !DILocation(line: 164, column: 5, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2275, file: !3, line: 164, column: 5)
!2283 = !DILocation(line: 0, scope: !2165, inlinedAt: !2281)
!2284 = !DILocation(line: 330, column: 3, scope: !2176, inlinedAt: !2285)
!2285 = distinct !DILocation(line: 164, column: 5, scope: !2282)
!2286 = !DILocation(line: 165, column: 36, scope: !2275)
!2287 = !DILocation(line: 165, column: 33, scope: !2275)
!2288 = !DILocation(line: 165, column: 24, scope: !2275)
!2289 = !DILocation(line: 167, column: 5, scope: !2275)
!2290 = !DILocation(line: 169, column: 22, scope: !2275)
!2291 = !DILocation(line: 169, column: 5, scope: !2275)
!2292 = !DILocation(line: 169, column: 27, scope: !2275)
!2293 = !DILocation(line: 0, scope: !2197, inlinedAt: !2294)
!2294 = distinct !DILocation(line: 171, column: 5, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2275, file: !3, line: 171, column: 5)
!2296 = !DILocation(line: 483, column: 3, scope: !2197, inlinedAt: !2294)
!2297 = !DILocation(line: 173, column: 1, scope: !2275)
!2298 = distinct !DISubprogram(name: "DMA_Config_Internal", scope: !3, file: !3, line: 175, type: !2299, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2312)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{null, !128, !2301, !126, !126, !128, !126}
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_INPUT", file: !6, line: 195, baseType: !2303)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 189, size: 160, elements: !2304)
!2304 = !{!2305, !2307, !2309, !2310, !2311}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2303, file: !6, line: 190, baseType: !2306, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_Type", file: !6, line: 122, baseType: !34)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2303, file: !6, line: 191, baseType: !2308, size: 32, offset: 32)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_TranSize", file: !6, line: 114, baseType: !41)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2303, file: !6, line: 192, baseType: !136, size: 32, offset: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "menu", scope: !2303, file: !6, line: 193, baseType: !161, size: 32, offset: 96)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2303, file: !6, line: 194, baseType: !180, size: 32, offset: 128)
!2312 = !{!2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320}
!2313 = !DILocalVariable(name: "dma_no", arg: 1, scope: !2298, file: !3, line: 175, type: !128)
!2314 = !DILocalVariable(name: "dma_menu", arg: 2, scope: !2298, file: !3, line: 176, type: !2301)
!2315 = !DILocalVariable(name: "fullsize", arg: 3, scope: !2298, file: !3, line: 177, type: !126)
!2316 = !DILocalVariable(name: "b2w", arg: 4, scope: !2298, file: !3, line: 178, type: !126)
!2317 = !DILocalVariable(name: "limit", arg: 5, scope: !2298, file: !3, line: 178, type: !128)
!2318 = !DILocalVariable(name: "start", arg: 6, scope: !2298, file: !3, line: 179, type: !126)
!2319 = !DILocalVariable(name: "dma_con", scope: !2298, file: !3, line: 181, type: !114)
!2320 = !DILocalVariable(name: "temp", scope: !2298, file: !3, line: 182, type: !114)
!2321 = !DILocation(line: 0, scope: !2298)
!2322 = !DILocation(line: 184, column: 5, scope: !2298)
!2323 = !DILocation(line: 186, column: 9, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 186, column: 9)
!2325 = !DILocation(line: 186, column: 9, scope: !2298)
!2326 = !DILocation(line: 187, column: 9, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2328, file: !3, line: 187, column: 9)
!2328 = distinct !DILexicalBlock(scope: !2329, file: !3, line: 187, column: 9)
!2329 = distinct !DILexicalBlock(scope: !2324, file: !3, line: 186, column: 35)
!2330 = distinct !{!2330, !2326, !2326}
!2331 = !DILocation(line: 190, column: 9, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 190, column: 9)
!2333 = !DILocation(line: 190, column: 9, scope: !2298)
!2334 = !DILocation(line: 191, column: 9, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2336, file: !3, line: 191, column: 9)
!2336 = distinct !DILexicalBlock(scope: !2337, file: !3, line: 191, column: 9)
!2337 = distinct !DILexicalBlock(scope: !2332, file: !3, line: 190, column: 34)
!2338 = distinct !{!2338, !2334, !2334}
!2339 = !DILocation(line: 194, column: 5, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 194, column: 5)
!2341 = !DILocation(line: 194, column: 5, scope: !2298)
!2342 = !DILocation(line: 194, column: 5, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2340, file: !3, line: 194, column: 5)
!2344 = distinct !{!2344, !2342, !2342}
!2345 = !DILocation(line: 196, column: 9, scope: !2298)
!2346 = !DILocation(line: 197, column: 9, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !2348, file: !3, line: 197, column: 9)
!2348 = distinct !DILexicalBlock(scope: !2349, file: !3, line: 197, column: 9)
!2349 = distinct !DILexicalBlock(scope: !2350, file: !3, line: 196, column: 31)
!2350 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 196, column: 9)
!2351 = distinct !{!2351, !2346, !2346}
!2352 = !DILocation(line: 200, column: 5, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 200, column: 5)
!2354 = !DILocation(line: 200, column: 5, scope: !2298)
!2355 = !DILocation(line: 200, column: 5, scope: !2356)
!2356 = distinct !DILexicalBlock(scope: !2353, file: !3, line: 200, column: 5)
!2357 = distinct !{!2357, !2355, !2355}
!2358 = !DILocation(line: 202, column: 5, scope: !2298)
!2359 = !DILocation(line: 204, column: 23, scope: !2298)
!2360 = !DILocation(line: 204, column: 5, scope: !2298)
!2361 = !DILocation(line: 0, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 209, column: 17)
!2363 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 204, column: 29)
!2364 = !DILocation(line: 209, column: 17, scope: !2363)
!2365 = !DILocation(line: 212, column: 71, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2362, file: !3, line: 211, column: 13)
!2367 = !DILocation(line: 212, column: 78, scope: !2366)
!2368 = !DILocation(line: 219, column: 42, scope: !2363)
!2369 = !DILocation(line: 224, column: 21, scope: !2363)
!2370 = !DILocation(line: 228, column: 17, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 226, column: 39)
!2372 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 226, column: 17)
!2373 = !DILocation(line: 230, column: 17, scope: !2371)
!2374 = !DILocation(line: 231, column: 13, scope: !2371)
!2375 = !DILocation(line: 216, column: 62, scope: !2376)
!2376 = distinct !DILexicalBlock(scope: !2362, file: !3, line: 215, column: 13)
!2377 = !DILocation(line: 216, column: 69, scope: !2376)
!2378 = !DILocation(line: 236, column: 17, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2372, file: !3, line: 231, column: 20)
!2380 = !DILocation(line: 239, column: 21, scope: !2379)
!2381 = !DILocation(line: 0, scope: !2382)
!2382 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 250, column: 17)
!2383 = !DILocation(line: 250, column: 17, scope: !2363)
!2384 = !DILocation(line: 253, column: 75, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2382, file: !3, line: 252, column: 13)
!2386 = !DILocation(line: 253, column: 82, scope: !2385)
!2387 = !DILocation(line: 263, column: 21, scope: !2363)
!2388 = !DILocation(line: 267, column: 17, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2390, file: !3, line: 265, column: 39)
!2390 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 265, column: 17)
!2391 = !DILocation(line: 269, column: 17, scope: !2389)
!2392 = !DILocation(line: 270, column: 13, scope: !2389)
!2393 = !DILocation(line: 257, column: 66, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2382, file: !3, line: 256, column: 13)
!2395 = !DILocation(line: 257, column: 73, scope: !2394)
!2396 = !DILocation(line: 275, column: 17, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2390, file: !3, line: 270, column: 20)
!2398 = !DILocation(line: 278, column: 21, scope: !2397)
!2399 = !DILocation(line: 288, column: 13, scope: !2363)
!2400 = !DILocation(line: 290, column: 13, scope: !2363)
!2401 = !DILocation(line: 294, column: 13, scope: !2363)
!2402 = !DILocation(line: 0, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 299, column: 17)
!2404 = !DILocation(line: 299, column: 17, scope: !2363)
!2405 = !DILocation(line: 302, column: 84, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2403, file: !3, line: 301, column: 13)
!2407 = !DILocation(line: 302, column: 91, scope: !2406)
!2408 = !DILocation(line: 314, column: 21, scope: !2363)
!2409 = !DILocation(line: 318, column: 17, scope: !2410)
!2410 = distinct !DILexicalBlock(scope: !2411, file: !3, line: 316, column: 39)
!2411 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 316, column: 17)
!2412 = !DILocation(line: 323, column: 17, scope: !2410)
!2413 = !DILocation(line: 326, column: 17, scope: !2410)
!2414 = !DILocation(line: 328, column: 17, scope: !2410)
!2415 = !DILocation(line: 329, column: 13, scope: !2410)
!2416 = !DILocation(line: 306, column: 75, scope: !2417)
!2417 = distinct !DILexicalBlock(scope: !2403, file: !3, line: 305, column: 13)
!2418 = !DILocation(line: 306, column: 82, scope: !2417)
!2419 = !DILocation(line: 331, column: 17, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2411, file: !3, line: 329, column: 20)
!2421 = !DILocation(line: 338, column: 17, scope: !2420)
!2422 = !DILocation(line: 340, column: 17, scope: !2420)
!2423 = !DILocation(line: 343, column: 21, scope: !2420)
!2424 = !DILocation(line: 0, scope: !2425)
!2425 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 354, column: 17)
!2426 = !DILocation(line: 354, column: 17, scope: !2363)
!2427 = !DILocation(line: 357, column: 84, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2425, file: !3, line: 356, column: 13)
!2429 = !DILocation(line: 357, column: 91, scope: !2428)
!2430 = !DILocation(line: 371, column: 21, scope: !2363)
!2431 = !DILocation(line: 375, column: 17, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2433, file: !3, line: 373, column: 39)
!2433 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 373, column: 17)
!2434 = !DILocation(line: 380, column: 17, scope: !2432)
!2435 = !DILocation(line: 383, column: 17, scope: !2432)
!2436 = !DILocation(line: 385, column: 17, scope: !2432)
!2437 = !DILocation(line: 386, column: 13, scope: !2432)
!2438 = !DILocation(line: 361, column: 75, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2425, file: !3, line: 360, column: 13)
!2440 = !DILocation(line: 361, column: 82, scope: !2439)
!2441 = !DILocation(line: 388, column: 17, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2433, file: !3, line: 386, column: 20)
!2443 = !DILocation(line: 395, column: 17, scope: !2442)
!2444 = !DILocation(line: 397, column: 17, scope: !2442)
!2445 = !DILocation(line: 400, column: 21, scope: !2442)
!2446 = !DILocation(line: 410, column: 13, scope: !2447)
!2447 = distinct !DILexicalBlock(scope: !2448, file: !3, line: 410, column: 13)
!2448 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 410, column: 13)
!2449 = distinct !{!2449, !2446, !2446}
!2450 = !DILocation(line: 0, scope: !2363)
!2451 = !DILocation(line: 415, column: 23, scope: !2298)
!2452 = !DILocation(line: 415, column: 5, scope: !2298)
!2453 = !DILocation(line: 419, column: 27, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 419, column: 17)
!2455 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 415, column: 29)
!2456 = !DILocation(line: 419, column: 32, scope: !2454)
!2457 = !DILocation(line: 419, column: 17, scope: !2455)
!2458 = !DILocation(line: 421, column: 47, scope: !2459)
!2459 = distinct !DILexicalBlock(scope: !2460, file: !3, line: 421, column: 21)
!2460 = distinct !DILexicalBlock(scope: !2454, file: !3, line: 419, column: 47)
!2461 = !DILocation(line: 421, column: 55, scope: !2459)
!2462 = !{i8 0, i8 2}
!2463 = !DILocation(line: 421, column: 79, scope: !2459)
!2464 = !DILocation(line: 422, column: 59, scope: !2459)
!2465 = !DILocation(line: 422, column: 65, scope: !2459)
!2466 = !DILocation(line: 421, column: 21, scope: !2460)
!2467 = !DILocation(line: 425, column: 29, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2459, file: !3, line: 424, column: 17)
!2469 = !DILocation(line: 426, column: 17, scope: !2468)
!2470 = !DILocation(line: 429, column: 66, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2459, file: !3, line: 428, column: 26)
!2472 = !DILocation(line: 428, column: 26, scope: !2459)
!2473 = !DILocation(line: 432, column: 29, scope: !2474)
!2474 = distinct !DILexicalBlock(scope: !2471, file: !3, line: 431, column: 17)
!2475 = !DILocation(line: 433, column: 17, scope: !2474)
!2476 = !DILocation(line: 436, column: 66, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2471, file: !3, line: 435, column: 26)
!2478 = !DILocation(line: 435, column: 26, scope: !2471)
!2479 = !DILocation(line: 447, column: 27, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 447, column: 17)
!2481 = !DILocation(line: 447, column: 32, scope: !2480)
!2482 = !DILocation(line: 447, column: 17, scope: !2455)
!2483 = !DILocation(line: 449, column: 47, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2485, file: !3, line: 449, column: 21)
!2485 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 447, column: 47)
!2486 = !DILocation(line: 449, column: 55, scope: !2484)
!2487 = !DILocation(line: 449, column: 79, scope: !2484)
!2488 = !DILocation(line: 450, column: 59, scope: !2484)
!2489 = !DILocation(line: 450, column: 65, scope: !2484)
!2490 = !DILocation(line: 449, column: 21, scope: !2485)
!2491 = !DILocation(line: 453, column: 29, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2484, file: !3, line: 452, column: 17)
!2493 = !DILocation(line: 454, column: 17, scope: !2492)
!2494 = !DILocation(line: 457, column: 66, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2484, file: !3, line: 456, column: 26)
!2496 = !DILocation(line: 456, column: 26, scope: !2484)
!2497 = !DILocation(line: 464, column: 21, scope: !2455)
!2498 = !DILocation(line: 466, column: 13, scope: !2455)
!2499 = !DILocation(line: 470, column: 27, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 470, column: 17)
!2501 = !DILocation(line: 470, column: 32, scope: !2500)
!2502 = !DILocation(line: 470, column: 17, scope: !2455)
!2503 = !DILocation(line: 472, column: 47, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2505, file: !3, line: 472, column: 21)
!2505 = distinct !DILexicalBlock(scope: !2500, file: !3, line: 470, column: 47)
!2506 = !DILocation(line: 472, column: 55, scope: !2504)
!2507 = !DILocation(line: 472, column: 79, scope: !2504)
!2508 = !DILocation(line: 473, column: 59, scope: !2504)
!2509 = !DILocation(line: 473, column: 65, scope: !2504)
!2510 = !DILocation(line: 472, column: 21, scope: !2505)
!2511 = !DILocation(line: 480, column: 21, scope: !2455)
!2512 = !DILocation(line: 482, column: 13, scope: !2455)
!2513 = !DILocation(line: 486, column: 13, scope: !2514)
!2514 = distinct !DILexicalBlock(scope: !2515, file: !3, line: 486, column: 13)
!2515 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 486, column: 13)
!2516 = distinct !{!2516, !2513, !2513}
!2517 = !DILocation(line: 491, column: 19, scope: !2518)
!2518 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 491, column: 9)
!2519 = !DILocation(line: 491, column: 28, scope: !2518)
!2520 = !DILocation(line: 491, column: 9, scope: !2298)
!2521 = !DILocation(line: 493, column: 17, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2518, file: !3, line: 491, column: 37)
!2523 = !DILocation(line: 495, column: 9, scope: !2522)
!2524 = !DILocation(line: 495, column: 35, scope: !2522)
!2525 = !DILocation(line: 496, column: 5, scope: !2522)
!2526 = !DILocation(line: 498, column: 5, scope: !2298)
!2527 = !DILocation(line: 500, column: 5, scope: !2298)
!2528 = !DILocation(line: 502, column: 9, scope: !2298)
!2529 = !DILocation(line: 504, column: 9, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2531, file: !3, line: 502, column: 16)
!2531 = distinct !DILexicalBlock(scope: !2298, file: !3, line: 502, column: 9)
!2532 = !DILocation(line: 505, column: 5, scope: !2530)
!2533 = !DILocation(line: 506, column: 1, scope: !2298)
!2534 = distinct !DISubprogram(name: "DMA_Clock_Enable", scope: !3, file: !3, line: 912, type: !2140, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2535)
!2535 = !{!2536}
!2536 = !DILocalVariable(name: "channel", arg: 1, scope: !2534, file: !3, line: 912, type: !128)
!2537 = !DILocation(line: 0, scope: !2534)
!2538 = !DILocation(line: 914, column: 59, scope: !2534)
!2539 = !DILocation(line: 914, column: 67, scope: !2534)
!2540 = !DILocation(line: 914, column: 55, scope: !2534)
!2541 = !DILocation(line: 914, column: 51, scope: !2534)
!2542 = !DILocation(line: 915, column: 1, scope: !2534)
!2543 = distinct !DISubprogram(name: "DMA_Register", scope: !3, file: !3, line: 514, type: !2544, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2546)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!53, !128, !179}
!2546 = !{!2547, !2548}
!2547 = !DILocalVariable(name: "dma_ch", arg: 1, scope: !2543, file: !3, line: 514, type: !128)
!2548 = !DILocalVariable(name: "handler", arg: 2, scope: !2543, file: !3, line: 514, type: !179)
!2549 = !DILocation(line: 0, scope: !2543)
!2550 = !DILocation(line: 516, column: 9, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2543, file: !3, line: 516, column: 9)
!2552 = !DILocation(line: 516, column: 20, scope: !2551)
!2553 = !DILocation(line: 517, column: 9, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2551, file: !3, line: 516, column: 49)
!2555 = !DILocation(line: 518, column: 9, scope: !2554)
!2556 = !DILocation(line: 521, column: 26, scope: !2543)
!2557 = !DILocation(line: 521, column: 5, scope: !2543)
!2558 = !DILocation(line: 521, column: 31, scope: !2543)
!2559 = !DILocation(line: 523, column: 5, scope: !2543)
!2560 = !DILocation(line: 524, column: 1, scope: !2543)
!2561 = distinct !DISubprogram(name: "DMA_UnRegister", scope: !3, file: !3, line: 526, type: !2562, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2564)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{!53, !128}
!2564 = !{!2565}
!2565 = !DILocalVariable(name: "dma_ch", arg: 1, scope: !2561, file: !3, line: 526, type: !128)
!2566 = !DILocation(line: 0, scope: !2561)
!2567 = !DILocation(line: 528, column: 9, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 528, column: 9)
!2569 = !DILocation(line: 528, column: 20, scope: !2568)
!2570 = !DILocation(line: 529, column: 9, scope: !2571)
!2571 = distinct !DILexicalBlock(scope: !2568, file: !3, line: 528, column: 49)
!2572 = !DILocation(line: 530, column: 9, scope: !2571)
!2573 = !DILocation(line: 532, column: 26, scope: !2561)
!2574 = !DILocation(line: 532, column: 5, scope: !2561)
!2575 = !DILocation(line: 532, column: 31, scope: !2561)
!2576 = !DILocation(line: 533, column: 5, scope: !2561)
!2577 = !DILocation(line: 534, column: 1, scope: !2561)
!2578 = distinct !DISubprogram(name: "DMA_LISR", scope: !3, file: !3, line: 536, type: !713, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2579)
!2579 = !{!2580, !2581, !2582}
!2580 = !DILocalVariable(name: "irq_number", arg: 1, scope: !2578, file: !3, line: 536, type: !452)
!2581 = !DILocalVariable(name: "index", scope: !2578, file: !3, line: 538, type: !174)
!2582 = !DILocalVariable(name: "con", scope: !2578, file: !3, line: 539, type: !114)
!2583 = !DILocation(line: 0, scope: !2578)
!2584 = !DILocation(line: 542, column: 5, scope: !2578)
!2585 = !DILocation(line: 545, column: 5, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2578, file: !3, line: 545, column: 5)
!2587 = !DILocation(line: 547, column: 13, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2589, file: !3, line: 547, column: 13)
!2589 = distinct !DILexicalBlock(scope: !2590, file: !3, line: 545, column: 55)
!2590 = distinct !DILexicalBlock(scope: !2586, file: !3, line: 545, column: 5)
!2591 = !DILocation(line: 547, column: 46, scope: !2588)
!2592 = !DILocation(line: 547, column: 13, scope: !2589)
!2593 = !DILocation(line: 549, column: 22, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2588, file: !3, line: 547, column: 64)
!2595 = !DILocation(line: 549, column: 13, scope: !2594)
!2596 = !DILocation(line: 551, column: 13, scope: !2594)
!2597 = !DILocation(line: 553, column: 13, scope: !2594)
!2598 = !DILocation(line: 553, column: 20, scope: !2594)
!2599 = distinct !{!2599, !2597, !2600}
!2600 = !DILocation(line: 553, column: 48, scope: !2594)
!2601 = !DILocation(line: 554, column: 13, scope: !2594)
!2602 = !DILocation(line: 555, column: 13, scope: !2594)
!2603 = !DILocation(line: 557, column: 9, scope: !2594)
!2604 = !DILocation(line: 545, column: 27, scope: !2590)
!2605 = distinct !{!2605, !2585, !2606}
!2606 = !DILocation(line: 558, column: 5, scope: !2586)
!2607 = !DILocation(line: 562, column: 15, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2609, file: !3, line: 560, column: 68)
!2609 = distinct !DILexicalBlock(scope: !2610, file: !3, line: 560, column: 5)
!2610 = distinct !DILexicalBlock(scope: !2578, file: !3, line: 560, column: 5)
!2611 = !DILocation(line: 564, column: 13, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2608, file: !3, line: 564, column: 13)
!2613 = !DILocation(line: 564, column: 42, scope: !2612)
!2614 = !DILocation(line: 564, column: 13, scope: !2608)
!2615 = !DILocation(line: 566, column: 25, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2612, file: !3, line: 564, column: 60)
!2617 = !DILocation(line: 566, column: 13, scope: !2616)
!2618 = !DILocation(line: 569, column: 25, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 569, column: 25)
!2620 = distinct !DILexicalBlock(scope: !2616, file: !3, line: 566, column: 32)
!2621 = !DILocation(line: 569, column: 78, scope: !2619)
!2622 = !DILocation(line: 569, column: 25, scope: !2620)
!2623 = !DILocation(line: 574, column: 25, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 574, column: 25)
!2625 = !DILocation(line: 574, column: 78, scope: !2624)
!2626 = !DILocation(line: 574, column: 25, scope: !2620)
!2627 = !DILocation(line: 579, column: 25, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 579, column: 25)
!2629 = !DILocation(line: 579, column: 79, scope: !2628)
!2630 = !DILocation(line: 579, column: 25, scope: !2620)
!2631 = !DILocation(line: 584, column: 25, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 584, column: 25)
!2633 = !DILocation(line: 584, column: 79, scope: !2632)
!2634 = !DILocation(line: 584, column: 25, scope: !2620)
!2635 = !DILocation(line: 589, column: 25, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 589, column: 25)
!2637 = !DILocation(line: 589, column: 79, scope: !2636)
!2638 = !DILocation(line: 589, column: 25, scope: !2620)
!2639 = !DILocation(line: 594, column: 25, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 594, column: 25)
!2641 = !DILocation(line: 594, column: 79, scope: !2640)
!2642 = !DILocation(line: 594, column: 25, scope: !2620)
!2643 = !DILocation(line: 599, column: 25, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 599, column: 25)
!2645 = !DILocation(line: 599, column: 79, scope: !2644)
!2646 = !DILocation(line: 599, column: 25, scope: !2620)
!2647 = !DILocation(line: 604, column: 25, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 604, column: 25)
!2649 = !DILocation(line: 604, column: 79, scope: !2648)
!2650 = !DILocation(line: 604, column: 25, scope: !2620)
!2651 = !DILocation(line: 609, column: 25, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 609, column: 25)
!2653 = !DILocation(line: 609, column: 80, scope: !2652)
!2654 = !DILocation(line: 609, column: 25, scope: !2620)
!2655 = !DILocation(line: 614, column: 25, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 614, column: 25)
!2657 = !DILocation(line: 614, column: 80, scope: !2656)
!2658 = !DILocation(line: 614, column: 25, scope: !2620)
!2659 = !DILocation(line: 619, column: 25, scope: !2660)
!2660 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 619, column: 25)
!2661 = !DILocation(line: 619, column: 80, scope: !2660)
!2662 = !DILocation(line: 619, column: 25, scope: !2620)
!2663 = !DILocation(line: 624, column: 25, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 624, column: 25)
!2665 = !DILocation(line: 624, column: 80, scope: !2664)
!2666 = !DILocation(line: 624, column: 25, scope: !2620)
!2667 = !DILocation(line: 629, column: 25, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 629, column: 25)
!2669 = !DILocation(line: 629, column: 80, scope: !2668)
!2670 = !DILocation(line: 629, column: 25, scope: !2620)
!2671 = !DILocation(line: 634, column: 25, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2620, file: !3, line: 634, column: 25)
!2673 = !DILocation(line: 634, column: 78, scope: !2672)
!2674 = !DILocation(line: 634, column: 25, scope: !2620)
!2675 = !DILocation(line: 0, scope: !2620)
!2676 = !DILocation(line: 640, column: 13, scope: !2616)
!2677 = !DILocation(line: 641, column: 9, scope: !2616)
!2678 = !DILocation(line: 560, column: 64, scope: !2609)
!2679 = !DILocation(line: 560, column: 40, scope: !2609)
!2680 = !DILocation(line: 560, column: 5, scope: !2610)
!2681 = distinct !{!2681, !2680, !2682}
!2682 = !DILocation(line: 642, column: 5, scope: !2610)
!2683 = !DILocation(line: 646, column: 15, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2685, file: !3, line: 644, column: 68)
!2685 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 644, column: 5)
!2686 = distinct !DILexicalBlock(scope: !2578, file: !3, line: 644, column: 5)
!2687 = !DILocation(line: 648, column: 13, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !2684, file: !3, line: 648, column: 13)
!2689 = !DILocation(line: 648, column: 42, scope: !2688)
!2690 = !DILocation(line: 648, column: 13, scope: !2684)
!2691 = !DILocation(line: 650, column: 25, scope: !2692)
!2692 = distinct !DILexicalBlock(scope: !2688, file: !3, line: 648, column: 62)
!2693 = !DILocation(line: 650, column: 13, scope: !2692)
!2694 = !DILocation(line: 653, column: 25, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 653, column: 25)
!2696 = distinct !DILexicalBlock(scope: !2692, file: !3, line: 650, column: 32)
!2697 = !DILocation(line: 653, column: 81, scope: !2695)
!2698 = !DILocation(line: 653, column: 25, scope: !2696)
!2699 = !DILocation(line: 658, column: 25, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 658, column: 25)
!2701 = !DILocation(line: 658, column: 81, scope: !2700)
!2702 = !DILocation(line: 658, column: 25, scope: !2696)
!2703 = !DILocation(line: 663, column: 25, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 663, column: 25)
!2705 = !DILocation(line: 663, column: 82, scope: !2704)
!2706 = !DILocation(line: 663, column: 25, scope: !2696)
!2707 = !DILocation(line: 668, column: 25, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 668, column: 25)
!2709 = !DILocation(line: 668, column: 82, scope: !2708)
!2710 = !DILocation(line: 668, column: 25, scope: !2696)
!2711 = !DILocation(line: 673, column: 25, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 673, column: 25)
!2713 = !DILocation(line: 673, column: 82, scope: !2712)
!2714 = !DILocation(line: 673, column: 25, scope: !2696)
!2715 = !DILocation(line: 678, column: 25, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 678, column: 25)
!2717 = !DILocation(line: 678, column: 82, scope: !2716)
!2718 = !DILocation(line: 678, column: 25, scope: !2696)
!2719 = !DILocation(line: 683, column: 25, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 683, column: 25)
!2721 = !DILocation(line: 683, column: 82, scope: !2720)
!2722 = !DILocation(line: 683, column: 25, scope: !2696)
!2723 = !DILocation(line: 688, column: 25, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 688, column: 25)
!2725 = !DILocation(line: 688, column: 82, scope: !2724)
!2726 = !DILocation(line: 688, column: 25, scope: !2696)
!2727 = !DILocation(line: 693, column: 25, scope: !2728)
!2728 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 693, column: 25)
!2729 = !DILocation(line: 693, column: 83, scope: !2728)
!2730 = !DILocation(line: 693, column: 25, scope: !2696)
!2731 = !DILocation(line: 698, column: 25, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 698, column: 25)
!2733 = !DILocation(line: 698, column: 83, scope: !2732)
!2734 = !DILocation(line: 698, column: 25, scope: !2696)
!2735 = !DILocation(line: 703, column: 25, scope: !2736)
!2736 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 703, column: 25)
!2737 = !DILocation(line: 703, column: 83, scope: !2736)
!2738 = !DILocation(line: 703, column: 25, scope: !2696)
!2739 = !DILocation(line: 708, column: 25, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 708, column: 25)
!2741 = !DILocation(line: 708, column: 83, scope: !2740)
!2742 = !DILocation(line: 708, column: 25, scope: !2696)
!2743 = !DILocation(line: 713, column: 25, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 713, column: 25)
!2745 = !DILocation(line: 713, column: 83, scope: !2744)
!2746 = !DILocation(line: 713, column: 25, scope: !2696)
!2747 = !DILocation(line: 718, column: 25, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 718, column: 25)
!2749 = !DILocation(line: 718, column: 81, scope: !2748)
!2750 = !DILocation(line: 718, column: 25, scope: !2696)
!2751 = !DILocation(line: 0, scope: !2696)
!2752 = !DILocation(line: 724, column: 13, scope: !2692)
!2753 = !DILocation(line: 725, column: 9, scope: !2692)
!2754 = !DILocation(line: 644, column: 64, scope: !2685)
!2755 = !DILocation(line: 644, column: 40, scope: !2685)
!2756 = !DILocation(line: 644, column: 5, scope: !2686)
!2757 = distinct !{!2757, !2756, !2758}
!2758 = !DILocation(line: 726, column: 5, scope: !2686)
!2759 = !DILocation(line: 728, column: 5, scope: !2578)
!2760 = !DILocation(line: 729, column: 1, scope: !2578)
!2761 = distinct !DISubprogram(name: "DMA_Clock_Disable", scope: !3, file: !3, line: 917, type: !2140, scopeLine: 918, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2762)
!2762 = !{!2763}
!2763 = !DILocalVariable(name: "channel", arg: 1, scope: !2761, file: !3, line: 917, type: !128)
!2764 = !DILocation(line: 0, scope: !2761)
!2765 = !DILocation(line: 919, column: 59, scope: !2761)
!2766 = !DILocation(line: 919, column: 67, scope: !2761)
!2767 = !DILocation(line: 919, column: 55, scope: !2761)
!2768 = !DILocation(line: 919, column: 51, scope: !2761)
!2769 = !DILocation(line: 920, column: 1, scope: !2761)
!2770 = distinct !DISubprogram(name: "DMA_Init", scope: !3, file: !3, line: 732, type: !181, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2771)
!2771 = !{!2772}
!2772 = !DILocalVariable(name: "index", scope: !2770, file: !3, line: 734, type: !174)
!2773 = !DILocation(line: 0, scope: !2770)
!2774 = !DILocation(line: 739, column: 5, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 739, column: 5)
!2776 = !DILocation(line: 740, column: 41, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 740, column: 13)
!2778 = distinct !DILexicalBlock(scope: !2779, file: !3, line: 739, column: 55)
!2779 = distinct !DILexicalBlock(scope: !2775, file: !3, line: 739, column: 5)
!2780 = !DILocation(line: 740, column: 33, scope: !2777)
!2781 = !DILocation(line: 740, column: 52, scope: !2777)
!2782 = !DILocation(line: 740, column: 13, scope: !2778)
!2783 = !DILocation(line: 741, column: 13, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 740, column: 58)
!2785 = !DILocation(line: 741, column: 30, scope: !2784)
!2786 = !DILocation(line: 742, column: 9, scope: !2784)
!2787 = !DILocation(line: 739, column: 51, scope: !2779)
!2788 = !DILocation(line: 739, column: 27, scope: !2779)
!2789 = distinct !{!2789, !2774, !2790}
!2790 = !DILocation(line: 743, column: 5, scope: !2775)
!2791 = !DILocation(line: 748, column: 32, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2793, file: !3, line: 746, column: 55)
!2793 = distinct !DILexicalBlock(scope: !2794, file: !3, line: 746, column: 5)
!2794 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 746, column: 5)
!2795 = !DILocation(line: 748, column: 9, scope: !2792)
!2796 = !DILocation(line: 746, column: 27, scope: !2793)
!2797 = !DILocation(line: 746, column: 5, scope: !2794)
!2798 = distinct !{!2798, !2797, !2799}
!2799 = !DILocation(line: 749, column: 5, scope: !2794)
!2800 = !DILocation(line: 752, column: 5, scope: !2770)
!2801 = !DILocation(line: 753, column: 5, scope: !2770)
!2802 = !DILocation(line: 754, column: 5, scope: !2770)
!2803 = !DILocation(line: 755, column: 1, scope: !2770)
!2804 = distinct !DISubprogram(name: "dma_set_channel_busy", scope: !3, file: !3, line: 757, type: !2805, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2807)
!2805 = !DISubroutineType(types: !2806)
!2806 = !{!128, !128}
!2807 = !{!2808, !2809, !2810, !2811}
!2808 = !DILocalVariable(name: "channel", arg: 1, scope: !2804, file: !3, line: 757, type: !128)
!2809 = !DILocalVariable(name: "channel_index", scope: !2804, file: !3, line: 759, type: !128)
!2810 = !DILocalVariable(name: "flags", scope: !2804, file: !3, line: 760, type: !325)
!2811 = !DILocalVariable(name: "index", scope: !2804, file: !3, line: 764, type: !128)
!2812 = !DILocation(line: 0, scope: !2804)
!2813 = !DILocation(line: 764, column: 29, scope: !2804)
!2814 = !DILocation(line: 470, column: 3, scope: !2165, inlinedAt: !2815)
!2815 = distinct !DILocation(line: 766, column: 5, scope: !2816)
!2816 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 766, column: 5)
!2817 = !DILocation(line: 0, scope: !2165, inlinedAt: !2815)
!2818 = !DILocation(line: 330, column: 3, scope: !2176, inlinedAt: !2819)
!2819 = distinct !DILocation(line: 766, column: 5, scope: !2816)
!2820 = !DILocation(line: 768, column: 9, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 768, column: 9)
!2822 = !DILocation(line: 768, column: 33, scope: !2821)
!2823 = !DILocation(line: 768, column: 9, scope: !2804)
!2824 = !DILocation(line: 769, column: 33, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 768, column: 43)
!2826 = !DILocation(line: 770, column: 9, scope: !2825)
!2827 = !DILocation(line: 0, scope: !2197, inlinedAt: !2828)
!2828 = distinct !DILocation(line: 774, column: 5, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 774, column: 5)
!2830 = !DILocation(line: 483, column: 3, scope: !2197, inlinedAt: !2828)
!2831 = !DILocation(line: 776, column: 5, scope: !2804)
!2832 = !DILocation(line: 777, column: 5, scope: !2804)
!2833 = !DILocation(line: 778, column: 5, scope: !2804)
!2834 = !DILocation(line: 779, column: 5, scope: !2804)
!2835 = !DILocation(line: 781, column: 1, scope: !2804)
!2836 = distinct !DISubprogram(name: "dma_set_channel_idle", scope: !3, file: !3, line: 783, type: !2805, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2837)
!2837 = !{!2838, !2839, !2840}
!2838 = !DILocalVariable(name: "channel", arg: 1, scope: !2836, file: !3, line: 783, type: !128)
!2839 = !DILocalVariable(name: "flags", scope: !2836, file: !3, line: 785, type: !325)
!2840 = !DILocalVariable(name: "index", scope: !2836, file: !3, line: 786, type: !128)
!2841 = !DILocation(line: 0, scope: !2836)
!2842 = !DILocation(line: 786, column: 29, scope: !2836)
!2843 = !DILocation(line: 787, column: 5, scope: !2836)
!2844 = !DILocation(line: 470, column: 3, scope: !2165, inlinedAt: !2845)
!2845 = distinct !DILocation(line: 788, column: 5, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2836, file: !3, line: 788, column: 5)
!2847 = !DILocation(line: 0, scope: !2165, inlinedAt: !2845)
!2848 = !DILocation(line: 330, column: 3, scope: !2176, inlinedAt: !2849)
!2849 = distinct !DILocation(line: 788, column: 5, scope: !2846)
!2850 = !DILocation(line: 789, column: 5, scope: !2836)
!2851 = !DILocation(line: 789, column: 29, scope: !2836)
!2852 = !DILocation(line: 790, column: 33, scope: !2836)
!2853 = !DILocation(line: 790, column: 24, scope: !2836)
!2854 = !DILocation(line: 791, column: 21, scope: !2836)
!2855 = !DILocation(line: 791, column: 5, scope: !2836)
!2856 = !DILocation(line: 791, column: 26, scope: !2836)
!2857 = !DILocation(line: 0, scope: !2197, inlinedAt: !2858)
!2858 = distinct !DILocation(line: 792, column: 5, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2836, file: !3, line: 792, column: 5)
!2860 = !DILocation(line: 483, column: 3, scope: !2197, inlinedAt: !2858)
!2861 = !DILocation(line: 794, column: 5, scope: !2836)
!2862 = distinct !DISubprogram(name: "DMA_Vfifo_init", scope: !3, file: !3, line: 798, type: !181, scopeLine: 799, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2863)
!2863 = !{!2864}
!2864 = !DILocalVariable(name: "dma_con", scope: !2862, file: !3, line: 800, type: !114)
!2865 = !DILocation(line: 0, scope: !2862)
!2866 = !DILocation(line: 802, column: 5, scope: !2862)
!2867 = !DILocation(line: 804, column: 5, scope: !2862)
!2868 = !DILocation(line: 806, column: 5, scope: !2862)
!2869 = !DILocation(line: 808, column: 5, scope: !2862)
!2870 = !DILocation(line: 810, column: 5, scope: !2862)
!2871 = !DILocation(line: 812, column: 5, scope: !2862)
!2872 = !DILocation(line: 814, column: 5, scope: !2862)
!2873 = !DILocation(line: 816, column: 5, scope: !2862)
!2874 = !DILocation(line: 818, column: 5, scope: !2862)
!2875 = !DILocation(line: 820, column: 5, scope: !2862)
!2876 = !DILocation(line: 822, column: 5, scope: !2862)
!2877 = !DILocation(line: 824, column: 5, scope: !2862)
!2878 = !DILocation(line: 826, column: 5, scope: !2862)
!2879 = !DILocation(line: 828, column: 5, scope: !2862)
!2880 = !DILocation(line: 830, column: 5, scope: !2862)
!2881 = !DILocation(line: 832, column: 5, scope: !2862)
!2882 = !DILocation(line: 834, column: 5, scope: !2862)
!2883 = !DILocation(line: 836, column: 5, scope: !2862)
!2884 = !DILocation(line: 838, column: 5, scope: !2862)
!2885 = !DILocation(line: 840, column: 5, scope: !2862)
!2886 = !DILocation(line: 842, column: 5, scope: !2862)
!2887 = !DILocation(line: 844, column: 5, scope: !2862)
!2888 = !DILocation(line: 846, column: 5, scope: !2862)
!2889 = !DILocation(line: 848, column: 5, scope: !2862)
!2890 = !DILocation(line: 850, column: 5, scope: !2862)
!2891 = !DILocation(line: 852, column: 5, scope: !2862)
!2892 = !DILocation(line: 854, column: 5, scope: !2862)
!2893 = !DILocation(line: 856, column: 5, scope: !2862)
!2894 = !DILocation(line: 858, column: 1, scope: !2862)
!2895 = distinct !DISubprogram(name: "DMA_Vfifo_SetAdrs", scope: !3, file: !3, line: 861, type: !2896, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2899)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{null, !136, !136, !2898, !136, !136, !136}
!2898 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_VFIFO_CHANNEL", file: !6, line: 144, baseType: !97)
!2899 = !{!2900, !2901, !2902, !2903, !2904, !2905}
!2900 = !DILocalVariable(name: "adrs", arg: 1, scope: !2895, file: !3, line: 861, type: !136)
!2901 = !DILocalVariable(name: "len", arg: 2, scope: !2895, file: !3, line: 862, type: !136)
!2902 = !DILocalVariable(name: "ch", arg: 3, scope: !2895, file: !3, line: 862, type: !2898)
!2903 = !DILocalVariable(name: "alt_len", arg: 4, scope: !2895, file: !3, line: 863, type: !136)
!2904 = !DILocalVariable(name: "dma_count", arg: 5, scope: !2895, file: !3, line: 864, type: !136)
!2905 = !DILocalVariable(name: "timeout_counter", arg: 6, scope: !2895, file: !3, line: 865, type: !136)
!2906 = !DILocation(line: 0, scope: !2895)
!2907 = !DILocation(line: 867, column: 5, scope: !2895)
!2908 = !DILocation(line: 868, column: 5, scope: !2895)
!2909 = !DILocation(line: 869, column: 5, scope: !2895)
!2910 = !DILocation(line: 870, column: 5, scope: !2895)
!2911 = !DILocation(line: 870, column: 30, scope: !2895)
!2912 = !DILocation(line: 871, column: 5, scope: !2895)
!2913 = !DILocation(line: 871, column: 27, scope: !2895)
!2914 = !DILocation(line: 872, column: 1, scope: !2895)
!2915 = distinct !DISubprogram(name: "DMA_Vfifo_Set_timeout", scope: !3, file: !3, line: 874, type: !2916, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2918)
!2916 = !DISubroutineType(types: !2917)
!2917 = !{null, !2898, !136}
!2918 = !{!2919, !2920}
!2919 = !DILocalVariable(name: "ch", arg: 1, scope: !2915, file: !3, line: 874, type: !2898)
!2920 = !DILocalVariable(name: "timeout_counter", arg: 2, scope: !2915, file: !3, line: 874, type: !136)
!2921 = !DILocation(line: 0, scope: !2915)
!2922 = !DILocation(line: 877, column: 5, scope: !2915)
!2923 = !DILocation(line: 877, column: 27, scope: !2915)
!2924 = !DILocation(line: 878, column: 1, scope: !2915)
!2925 = distinct !DISubprogram(name: "DMA_Vfifo_enable_interrupt", scope: !3, file: !3, line: 880, type: !2926, scopeLine: 882, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2928)
!2926 = !DISubroutineType(types: !2927)
!2927 = !{null, !2898}
!2928 = !{!2929}
!2929 = !DILocalVariable(name: "ch", arg: 1, scope: !2925, file: !3, line: 880, type: !2898)
!2930 = !DILocation(line: 0, scope: !2925)
!2931 = !DILocation(line: 883, column: 5, scope: !2925)
!2932 = !DILocation(line: 884, column: 1, scope: !2925)
!2933 = distinct !DISubprogram(name: "DMA_Vfifo_disable_interrupt", scope: !3, file: !3, line: 886, type: !2926, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2934)
!2934 = !{!2935}
!2935 = !DILocalVariable(name: "ch", arg: 1, scope: !2933, file: !3, line: 886, type: !2898)
!2936 = !DILocation(line: 0, scope: !2933)
!2937 = !DILocation(line: 889, column: 5, scope: !2933)
!2938 = !DILocation(line: 890, column: 1, scope: !2933)
!2939 = distinct !DISubprogram(name: "DMA_Vfifo_Flush", scope: !3, file: !3, line: 893, type: !2926, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2940)
!2940 = !{!2941}
!2941 = !DILocalVariable(name: "ch", arg: 1, scope: !2939, file: !3, line: 893, type: !2898)
!2942 = !DILocation(line: 0, scope: !2939)
!2943 = !DILocation(line: 895, column: 14, scope: !2939)
!2944 = !DILocation(line: 895, column: 5, scope: !2939)
!2945 = !DILocation(line: 897, column: 5, scope: !2939)
!2946 = !DILocation(line: 898, column: 1, scope: !2939)
!2947 = distinct !DISubprogram(name: "DMA_Vfifo_Register_Callback", scope: !3, file: !3, line: 900, type: !2948, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2950)
!2948 = !DISubroutineType(types: !2949)
!2949 = !{null, !2898, !179}
!2950 = !{!2951, !2952}
!2951 = !DILocalVariable(name: "ch", arg: 1, scope: !2947, file: !3, line: 900, type: !2898)
!2952 = !DILocalVariable(name: "callback_func", arg: 2, scope: !2947, file: !3, line: 901, type: !179)
!2953 = !DILocation(line: 0, scope: !2947)
!2954 = !DILocation(line: 903, column: 28, scope: !2947)
!2955 = !DILocation(line: 903, column: 5, scope: !2947)
!2956 = !DILocation(line: 903, column: 46, scope: !2947)
!2957 = !DILocation(line: 904, column: 1, scope: !2947)
!2958 = distinct !DISubprogram(name: "DMA_Vfifo_Register_TO_Callback", scope: !3, file: !3, line: 906, type: !2948, scopeLine: 908, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2959)
!2959 = !{!2960, !2961}
!2960 = !DILocalVariable(name: "ch", arg: 1, scope: !2958, file: !3, line: 906, type: !2898)
!2961 = !DILocalVariable(name: "callback_func", arg: 2, scope: !2958, file: !3, line: 907, type: !179)
!2962 = !DILocation(line: 0, scope: !2958)
!2963 = !DILocation(line: 909, column: 31, scope: !2958)
!2964 = !DILocation(line: 909, column: 5, scope: !2958)
!2965 = !DILocation(line: 909, column: 49, scope: !2958)
!2966 = !DILocation(line: 910, column: 1, scope: !2958)
!2967 = distinct !DISubprogram(name: "gpt_get_current_time", scope: !201, file: !201, line: 86, type: !2167, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !2968)
!2968 = !{!2969, !2970}
!2969 = !DILocalVariable(name: "counter", scope: !2967, file: !201, line: 88, type: !136)
!2970 = !DILocalVariable(name: "ret", scope: !2967, file: !201, line: 89, type: !2971)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !218, line: 393, baseType: !217)
!2972 = !DILocation(line: 88, column: 5, scope: !2967)
!2973 = !DILocation(line: 0, scope: !2967)
!2974 = !DILocation(line: 88, column: 14, scope: !2967)
!2975 = !DILocation(line: 90, column: 11, scope: !2967)
!2976 = !DILocation(line: 91, column: 13, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2967, file: !201, line: 91, column: 9)
!2978 = !DILocation(line: 91, column: 9, scope: !2967)
!2979 = !DILocation(line: 92, column: 9, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2977, file: !201, line: 91, column: 35)
!2981 = !DILocation(line: 94, column: 12, scope: !2967)
!2982 = !DILocation(line: 95, column: 1, scope: !2967)
!2983 = !DILocation(line: 94, column: 5, scope: !2967)
!2984 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !201, file: !201, line: 97, type: !181, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !2135)
!2985 = !DILocation(line: 99, column: 20, scope: !2984)
!2986 = !DILocation(line: 100, column: 1, scope: !2984)
!2987 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !201, file: !201, line: 101, type: !181, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !2135)
!2988 = !DILocation(line: 103, column: 20, scope: !2987)
!2989 = !DILocation(line: 104, column: 1, scope: !2987)
!2990 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !201, file: !201, line: 105, type: !181, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !2135)
!2991 = !DILocation(line: 107, column: 25, scope: !2990)
!2992 = !DILocation(line: 108, column: 1, scope: !2990)
!2993 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !201, file: !201, line: 109, type: !181, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !2135)
!2994 = !DILocation(line: 111, column: 25, scope: !2993)
!2995 = !DILocation(line: 112, column: 1, scope: !2993)
!2996 = distinct !DISubprogram(name: "get_sf_lock", scope: !201, file: !201, line: 114, type: !2997, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !2999)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{!640}
!2999 = !{!3000}
!3000 = !DILocalVariable(name: "savedMask", scope: !2996, file: !201, line: 116, type: !136)
!3001 = !DILocation(line: 117, column: 17, scope: !2996)
!3002 = !DILocation(line: 0, scope: !2996)
!3003 = !DILocation(line: 118, column: 9, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2996, file: !201, line: 118, column: 9)
!3005 = !DILocation(line: 118, column: 9, scope: !2996)
!3006 = !DILocation(line: 119, column: 17, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3004, file: !201, line: 118, column: 24)
!3008 = !DILocation(line: 121, column: 9, scope: !3007)
!3009 = !DILocation(line: 0, scope: !3004)
!3010 = !DILocation(line: 130, column: 1, scope: !2996)
!3011 = distinct !DISubprogram(name: "free_sf_lock", scope: !201, file: !201, line: 132, type: !181, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !3012)
!3012 = !{!3013}
!3013 = !DILocalVariable(name: "savedMask", scope: !3011, file: !201, line: 134, type: !136)
!3014 = !DILocation(line: 135, column: 17, scope: !3011)
!3015 = !DILocation(line: 0, scope: !3011)
!3016 = !DILocation(line: 136, column: 9, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3011, file: !201, line: 136, column: 9)
!3018 = !DILocation(line: 136, column: 9, scope: !3011)
!3019 = !DILocation(line: 137, column: 17, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3017, file: !201, line: 136, column: 24)
!3021 = !DILocation(line: 138, column: 9, scope: !3020)
!3022 = !DILocation(line: 143, column: 1, scope: !3011)
!3023 = !DILocation(line: 140, column: 9, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3017, file: !201, line: 139, column: 12)
!3025 = !DILocation(line: 141, column: 9, scope: !3024)
!3026 = distinct !DISubprogram(name: "retrieve_sf_lock", scope: !201, file: !201, line: 145, type: !181, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !3027)
!3027 = !{!3028}
!3028 = !DILocalVariable(name: "Result", scope: !3026, file: !201, line: 147, type: !640)
!3029 = !DILocation(line: 148, column: 5, scope: !3026)
!3030 = !DILocation(line: 149, column: 18, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3026, file: !201, line: 148, column: 8)
!3032 = !DILocation(line: 0, scope: !3026)
!3033 = !DILocation(line: 150, column: 21, scope: !3026)
!3034 = !DILocation(line: 150, column: 5, scope: !3031)
!3035 = distinct !{!3035, !3029, !3036}
!3036 = !DILocation(line: 150, column: 25, scope: !3026)
!3037 = !DILocation(line: 151, column: 1, scope: !3026)
!3038 = distinct !DISubprogram(name: "release_sf_lock", scope: !201, file: !201, line: 158, type: !181, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !2135)
!3039 = !DILocation(line: 160, column: 5, scope: !3038)
!3040 = !DILocation(line: 161, column: 1, scope: !3038)
!3041 = distinct !DISubprogram(name: "flash_sfc_config", scope: !201, file: !201, line: 186, type: !3042, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !3044)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!640, !128}
!3044 = !{!3045, !3046}
!3045 = !DILocalVariable(name: "mode", arg: 1, scope: !3041, file: !201, line: 186, type: !128)
!3046 = !DILocalVariable(name: "ret", scope: !3041, file: !201, line: 188, type: !3047)
!3047 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT32", file: !47, line: 56, baseType: !53)
!3048 = !DILocation(line: 0, scope: !3041)
!3049 = !DILocation(line: 189, column: 5, scope: !3041)
!3050 = !DILocation(line: 190, column: 5, scope: !3041)
!3051 = !DILocation(line: 191, column: 9, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3041, file: !201, line: 191, column: 9)
!3053 = !DILocation(line: 191, column: 35, scope: !3052)
!3054 = !DILocation(line: 191, column: 9, scope: !3041)
!3055 = !DILocation(line: 193, column: 26, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3052, file: !201, line: 191, column: 44)
!3057 = !DILocation(line: 194, column: 5, scope: !3056)
!3058 = !DILocation(line: 195, column: 5, scope: !3041)
!3059 = !DILocation(line: 197, column: 5, scope: !3041)
!3060 = distinct !DISubprogram(name: "sfc_pad_config", scope: !201, file: !201, line: 163, type: !181, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !3061)
!3061 = !{!3062}
!3062 = !DILocalVariable(name: "pad_io_setting", scope: !3060, file: !201, line: 166, type: !136)
!3063 = !DILocation(line: 0, scope: !3060)
!3064 = !DILocation(line: 168, column: 22, scope: !3060)
!3065 = !DILocation(line: 169, column: 20, scope: !3060)
!3066 = !DILocation(line: 170, column: 39, scope: !3060)
!3067 = !DILocation(line: 185, column: 1, scope: !3060)
!3068 = distinct !DISubprogram(name: "hal_flash_direct_read", scope: !201, file: !201, line: 200, type: !3069, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !3071)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{null, !161, !340, !136}
!3071 = !{!3072, !3073, !3074}
!3072 = !DILocalVariable(name: "absolute_address", arg: 1, scope: !3068, file: !201, line: 200, type: !161)
!3073 = !DILocalVariable(name: "buffer", arg: 2, scope: !3068, file: !201, line: 200, type: !340)
!3074 = !DILocalVariable(name: "length", arg: 3, scope: !3068, file: !201, line: 200, type: !136)
!3075 = !DILocation(line: 0, scope: !3068)
!3076 = !DILocation(line: 202, column: 5, scope: !3068)
!3077 = !DILocation(line: 203, column: 5, scope: !3068)
!3078 = !DILocation(line: 204, column: 5, scope: !3068)
!3079 = !DILocation(line: 205, column: 1, scope: !3068)
!3080 = distinct !DISubprogram(name: "flash_sfc_read", scope: !201, file: !201, line: 207, type: !3081, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !3083)
!3081 = !DISubroutineType(types: !3082)
!3082 = !{!640, !136, !136, !340}
!3083 = !{!3084, !3085, !3086, !3087, !3088, !3089}
!3084 = !DILocalVariable(name: "address", arg: 1, scope: !3080, file: !201, line: 207, type: !136)
!3085 = !DILocalVariable(name: "length", arg: 2, scope: !3080, file: !201, line: 207, type: !136)
!3086 = !DILocalVariable(name: "buffer", arg: 3, scope: !3080, file: !201, line: 207, type: !340)
!3087 = !DILocalVariable(name: "ret", scope: !3080, file: !201, line: 209, type: !3047)
!3088 = !DILocalVariable(name: "u4Redidual", scope: !3080, file: !201, line: 210, type: !289)
!3089 = !DILocalVariable(name: "u4ReadLen", scope: !3080, file: !201, line: 211, type: !289)
!3090 = !DILocation(line: 0, scope: !3080)
!3091 = !DILocation(line: 213, column: 5, scope: !3080)
!3092 = !DILocation(line: 214, column: 31, scope: !3080)
!3093 = !DILocation(line: 214, column: 5, scope: !3080)
!3094 = !DILocation(line: 216, column: 31, scope: !3095)
!3095 = distinct !DILexicalBlock(scope: !3096, file: !201, line: 216, column: 13)
!3096 = distinct !DILexicalBlock(scope: !3080, file: !201, line: 214, column: 46)
!3097 = !DILocation(line: 216, column: 13, scope: !3096)
!3098 = !DILocation(line: 217, column: 13, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3095, file: !201, line: 216, column: 48)
!3100 = !DILocation(line: 218, column: 9, scope: !3099)
!3101 = !DILocation(line: 219, column: 13, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3103, file: !201, line: 218, column: 55)
!3103 = distinct !DILexicalBlock(scope: !3095, file: !201, line: 218, column: 20)
!3104 = !DILocation(line: 220, column: 9, scope: !3102)
!3105 = !DILocation(line: 222, column: 25, scope: !3096)
!3106 = !DILocation(line: 223, column: 27, scope: !3096)
!3107 = !DILocation(line: 224, column: 33, scope: !3096)
!3108 = distinct !{!3108, !3093, !3109}
!3109 = !DILocation(line: 225, column: 5, scope: !3080)
!3110 = !DILocation(line: 227, column: 27, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3080, file: !201, line: 227, column: 9)
!3112 = !DILocation(line: 227, column: 9, scope: !3080)
!3113 = !DILocation(line: 228, column: 9, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3111, file: !201, line: 227, column: 44)
!3115 = !DILocation(line: 229, column: 5, scope: !3114)
!3116 = !DILocation(line: 230, column: 9, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3118, file: !201, line: 229, column: 51)
!3118 = distinct !DILexicalBlock(scope: !3111, file: !201, line: 229, column: 16)
!3119 = !DILocation(line: 231, column: 5, scope: !3117)
!3120 = !DILocation(line: 232, column: 22, scope: !3080)
!3121 = !DILocation(line: 233, column: 5, scope: !3080)
!3122 = !DILocation(line: 234, column: 5, scope: !3080)
!3123 = distinct !DISubprogram(name: "flash_sfc_write", scope: !201, file: !201, line: 238, type: !3124, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !3127)
!3124 = !DISubroutineType(types: !3125)
!3125 = !{!640, !136, !136, !3126}
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 32)
!3127 = !{!3128, !3129, !3130, !3131}
!3128 = !DILocalVariable(name: "address", arg: 1, scope: !3123, file: !201, line: 238, type: !136)
!3129 = !DILocalVariable(name: "length", arg: 2, scope: !3123, file: !201, line: 238, type: !136)
!3130 = !DILocalVariable(name: "buffer", arg: 3, scope: !3123, file: !201, line: 238, type: !3126)
!3131 = !DILocalVariable(name: "ret", scope: !3123, file: !201, line: 240, type: !3047)
!3132 = !DILocation(line: 0, scope: !3123)
!3133 = !DILocation(line: 242, column: 5, scope: !3123)
!3134 = !DILocation(line: 244, column: 5, scope: !3123)
!3135 = !DILocation(line: 245, column: 5, scope: !3123)
!3136 = !DILocation(line: 247, column: 11, scope: !3123)
!3137 = !DILocation(line: 248, column: 22, scope: !3123)
!3138 = !DILocation(line: 250, column: 5, scope: !3123)
!3139 = !DILocation(line: 252, column: 5, scope: !3123)
!3140 = !DILocation(line: 253, column: 5, scope: !3123)
!3141 = distinct !DISubprogram(name: "flash_sfc_erase", scope: !201, file: !201, line: 256, type: !3142, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !3144)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!640, !136, !136}
!3144 = !{!3145, !3146, !3147}
!3145 = !DILocalVariable(name: "address", arg: 1, scope: !3141, file: !201, line: 256, type: !136)
!3146 = !DILocalVariable(name: "type", arg: 2, scope: !3141, file: !201, line: 256, type: !136)
!3147 = !DILocalVariable(name: "ret", scope: !3141, file: !201, line: 258, type: !3047)
!3148 = !DILocation(line: 0, scope: !3141)
!3149 = !DILocation(line: 259, column: 5, scope: !3141)
!3150 = !DILocation(line: 261, column: 5, scope: !3141)
!3151 = !DILocation(line: 262, column: 5, scope: !3141)
!3152 = !DILocation(line: 264, column: 5, scope: !3141)
!3153 = !DILocation(line: 265, column: 5, scope: !3141)
!3154 = !DILocation(line: 267, column: 9, scope: !3141)
!3155 = !DILocation(line: 268, column: 22, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3157, file: !201, line: 268, column: 13)
!3157 = distinct !DILexicalBlock(scope: !3158, file: !201, line: 267, column: 37)
!3158 = distinct !DILexicalBlock(scope: !3141, file: !201, line: 267, column: 9)
!3159 = !DILocation(line: 268, column: 31, scope: !3156)
!3160 = !DILocation(line: 268, column: 13, scope: !3157)
!3161 = !DILocation(line: 275, column: 15, scope: !3157)
!3162 = !DILocation(line: 276, column: 5, scope: !3157)
!3163 = !DILocation(line: 277, column: 22, scope: !3164)
!3164 = distinct !DILexicalBlock(scope: !3165, file: !201, line: 277, column: 13)
!3165 = distinct !DILexicalBlock(scope: !3166, file: !201, line: 276, column: 45)
!3166 = distinct !DILexicalBlock(scope: !3158, file: !201, line: 276, column: 16)
!3167 = !DILocation(line: 277, column: 32, scope: !3164)
!3168 = !DILocation(line: 277, column: 13, scope: !3165)
!3169 = !DILocation(line: 284, column: 15, scope: !3165)
!3170 = !DILocation(line: 285, column: 5, scope: !3165)
!3171 = !DILocation(line: 286, column: 22, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3173, file: !201, line: 286, column: 13)
!3173 = distinct !DILexicalBlock(scope: !3174, file: !201, line: 285, column: 45)
!3174 = distinct !DILexicalBlock(scope: !3166, file: !201, line: 285, column: 16)
!3175 = !DILocation(line: 286, column: 32, scope: !3172)
!3176 = !DILocation(line: 286, column: 13, scope: !3173)
!3177 = !DILocation(line: 293, column: 15, scope: !3173)
!3178 = !DILocation(line: 294, column: 5, scope: !3173)
!3179 = !DILocation(line: 301, column: 1, scope: !3141)
!3180 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !201, file: !201, line: 304, type: !181, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !3181)
!3181 = !{!3182, !3183}
!3182 = !DILocalVariable(name: "sr", scope: !3180, file: !201, line: 306, type: !128)
!3183 = !DILocalVariable(name: "savedMask", scope: !3180, file: !201, line: 307, type: !136)
!3184 = !DILocation(line: 306, column: 5, scope: !3180)
!3185 = !DILocation(line: 0, scope: !3180)
!3186 = !DILocation(line: 306, column: 13, scope: !3180)
!3187 = !DILocation(line: 329, column: 17, scope: !3180)
!3188 = !DILocation(line: 330, column: 11, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3180, file: !201, line: 330, column: 9)
!3190 = !DILocation(line: 330, column: 30, scope: !3189)
!3191 = !DILocation(line: 331, column: 13, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3193, file: !201, line: 331, column: 13)
!3193 = distinct !DILexicalBlock(scope: !3189, file: !201, line: 330, column: 53)
!3194 = !DILocation(line: 331, column: 32, scope: !3192)
!3195 = !DILocation(line: 331, column: 13, scope: !3193)
!3196 = !DILocation(line: 333, column: 13, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3192, file: !201, line: 331, column: 37)
!3198 = !DILocation(line: 337, column: 19, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3193, file: !201, line: 337, column: 13)
!3200 = !DILocation(line: 337, column: 22, scope: !3199)
!3201 = !DILocation(line: 337, column: 15, scope: !3199)
!3202 = !DILocation(line: 337, column: 13, scope: !3193)
!3203 = !DILocation(line: 339, column: 13, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3199, file: !201, line: 337, column: 44)
!3205 = !DILocation(line: 341, column: 13, scope: !3204)
!3206 = !DILocation(line: 342, column: 21, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3208, file: !201, line: 342, column: 21)
!3208 = distinct !DILexicalBlock(scope: !3204, file: !201, line: 341, column: 23)
!3209 = !DILocation(line: 342, column: 40, scope: !3207)
!3210 = !DILocation(line: 342, column: 21, scope: !3208)
!3211 = !DILocation(line: 344, column: 21, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3207, file: !201, line: 342, column: 45)
!3213 = !DILocation(line: 346, column: 27, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3208, file: !201, line: 346, column: 21)
!3215 = !DILocation(line: 346, column: 30, scope: !3214)
!3216 = !DILocation(line: 346, column: 23, scope: !3214)
!3217 = !DILocation(line: 346, column: 21, scope: !3208)
!3218 = distinct !{!3218, !3205, !3219}
!3219 = !DILocation(line: 349, column: 13, scope: !3204)
!3220 = !DILocation(line: 350, column: 13, scope: !3204)
!3221 = !DILocation(line: 352, column: 9, scope: !3204)
!3222 = !DILocation(line: 353, column: 13, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3199, file: !201, line: 352, column: 16)
!3224 = !DILocation(line: 356, column: 5, scope: !3180)
!3225 = !DILocation(line: 357, column: 1, scope: !3180)
!3226 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !201, file: !201, line: 359, type: !3227, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !3229)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{!640, !161, !136}
!3229 = !{!3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238}
!3230 = !DILocalVariable(name: "MTDData", arg: 1, scope: !3226, file: !201, line: 359, type: !161)
!3231 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !3226, file: !201, line: 359, type: !136)
!3232 = !DILocalVariable(name: "result", scope: !3226, file: !201, line: 361, type: !640)
!3233 = !DILocalVariable(name: "savedMask", scope: !3226, file: !201, line: 362, type: !136)
!3234 = !DILocalVariable(name: "status_busy", scope: !3226, file: !201, line: 363, type: !128)
!3235 = !DILocalVariable(name: "status_suspend", scope: !3226, file: !201, line: 363, type: !128)
!3236 = !DILocalVariable(name: "sr", scope: !3226, file: !201, line: 364, type: !128)
!3237 = !DILocalVariable(name: "sr1", scope: !3226, file: !201, line: 365, type: !128)
!3238 = !DILocalVariable(name: "check_status", scope: !3239, file: !201, line: 383, type: !128)
!3239 = distinct !DILexicalBlock(scope: !3240, file: !201, line: 382, column: 49)
!3240 = distinct !DILexicalBlock(scope: !3226, file: !201, line: 382, column: 9)
!3241 = !DILocation(line: 0, scope: !3226)
!3242 = !DILocation(line: 364, column: 5, scope: !3226)
!3243 = !DILocation(line: 364, column: 13, scope: !3226)
!3244 = !DILocation(line: 365, column: 5, scope: !3226)
!3245 = !DILocation(line: 365, column: 13, scope: !3226)
!3246 = !DILocation(line: 367, column: 9, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3226, file: !201, line: 367, column: 9)
!3248 = !DILocation(line: 367, column: 28, scope: !3247)
!3249 = !DILocation(line: 367, column: 9, scope: !3226)
!3250 = !DILocation(line: 368, column: 9, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3247, file: !201, line: 367, column: 33)
!3252 = !DILocation(line: 370, column: 23, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3247, file: !201, line: 369, column: 12)
!3254 = !DILocation(line: 373, column: 9, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3226, file: !201, line: 373, column: 9)
!3256 = !DILocation(line: 373, column: 30, scope: !3255)
!3257 = !DILocation(line: 373, column: 9, scope: !3226)
!3258 = !DILocation(line: 374, column: 9, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3255, file: !201, line: 373, column: 35)
!3260 = !DILocation(line: 376, column: 26, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3255, file: !201, line: 375, column: 12)
!3262 = !DILocation(line: 380, column: 17, scope: !3226)
!3263 = !DILocation(line: 382, column: 27, scope: !3240)
!3264 = !DILocation(line: 382, column: 11, scope: !3240)
!3265 = !DILocation(line: 382, column: 9, scope: !3226)
!3266 = !DILocation(line: 0, scope: !3239)
!3267 = !DILocation(line: 385, column: 13, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3239, file: !201, line: 385, column: 13)
!3269 = !DILocation(line: 385, column: 49, scope: !3268)
!3270 = !DILocation(line: 388, column: 17, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !201, line: 388, column: 17)
!3272 = distinct !DILexicalBlock(scope: !3268, file: !201, line: 385, column: 84)
!3273 = !DILocation(line: 388, column: 32, scope: !3271)
!3274 = !DILocation(line: 388, column: 17, scope: !3272)
!3275 = !DILocation(line: 399, column: 9, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !201, line: 396, column: 56)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !201, line: 396, column: 20)
!3278 = distinct !DILexicalBlock(scope: !3268, file: !201, line: 393, column: 20)
!3279 = !DILocation(line: 401, column: 28, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !201, line: 399, column: 58)
!3281 = distinct !DILexicalBlock(scope: !3277, file: !201, line: 399, column: 20)
!3282 = !DILocation(line: 402, column: 9, scope: !3280)
!3283 = !DILocation(line: 405, column: 20, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3239, file: !201, line: 405, column: 13)
!3285 = !DILocation(line: 405, column: 35, scope: !3284)
!3286 = !DILocation(line: 405, column: 16, scope: !3284)
!3287 = !DILocation(line: 405, column: 52, scope: !3284)
!3288 = !DILocation(line: 406, column: 21, scope: !3284)
!3289 = !DILocation(line: 406, column: 38, scope: !3284)
!3290 = !DILocation(line: 407, column: 13, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3284, file: !201, line: 406, column: 61)
!3292 = !DILocation(line: 410, column: 13, scope: !3291)
!3293 = !DILocation(line: 413, column: 9, scope: !3291)
!3294 = !DILocation(line: 414, column: 13, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3284, file: !201, line: 413, column: 16)
!3296 = !DILocation(line: 0, scope: !3284)
!3297 = !DILocation(line: 434, column: 5, scope: !3226)
!3298 = !DILocation(line: 0, scope: !3240)
!3299 = !DILocation(line: 436, column: 1, scope: !3226)
!3300 = !DILocation(line: 435, column: 5, scope: !3226)
!3301 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !201, file: !201, line: 439, type: !3302, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !200, retainedNodes: !3304)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{!640, !161, !136, !128}
!3304 = !{!3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312}
!3305 = !DILocalVariable(name: "MTDData", arg: 1, scope: !3301, file: !201, line: 439, type: !161)
!3306 = !DILocalVariable(name: "addr", arg: 2, scope: !3301, file: !201, line: 439, type: !136)
!3307 = !DILocalVariable(name: "data", arg: 3, scope: !3301, file: !201, line: 439, type: !128)
!3308 = !DILocalVariable(name: "savedMask", scope: !3301, file: !201, line: 441, type: !136)
!3309 = !DILocalVariable(name: "result", scope: !3301, file: !201, line: 442, type: !640)
!3310 = !DILocalVariable(name: "check_data", scope: !3301, file: !201, line: 443, type: !128)
!3311 = !DILocalVariable(name: "status_busy", scope: !3301, file: !201, line: 444, type: !1017)
!3312 = !DILocalVariable(name: "sr", scope: !3301, file: !201, line: 445, type: !128)
!3313 = !DILocation(line: 0, scope: !3301)
!3314 = !DILocation(line: 445, column: 5, scope: !3301)
!3315 = !DILocation(line: 445, column: 23, scope: !3301)
!3316 = !DILocation(line: 448, column: 9, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3301, file: !201, line: 448, column: 9)
!3318 = !DILocation(line: 448, column: 28, scope: !3317)
!3319 = !DILocation(line: 448, column: 9, scope: !3301)
!3320 = !DILocation(line: 449, column: 9, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3317, file: !201, line: 448, column: 33)
!3322 = !DILocation(line: 451, column: 23, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3317, file: !201, line: 450, column: 12)
!3324 = !DILocation(line: 454, column: 17, scope: !3301)
!3325 = !DILocation(line: 457, column: 9, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3301, file: !201, line: 457, column: 9)
!3327 = !DILocation(line: 457, column: 9, scope: !3301)
!3328 = !DILocation(line: 458, column: 9, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3326, file: !201, line: 457, column: 28)
!3330 = !DILocation(line: 459, column: 9, scope: !3329)
!3331 = !DILocation(line: 460, column: 9, scope: !3329)
!3332 = !DILocation(line: 461, column: 9, scope: !3329)
!3333 = !DILocation(line: 462, column: 5, scope: !3329)
!3334 = !DILocation(line: 464, column: 33, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3326, file: !201, line: 464, column: 15)
!3336 = !DILocation(line: 464, column: 17, scope: !3335)
!3337 = !DILocation(line: 464, column: 15, scope: !3326)
!3338 = !DILocation(line: 465, column: 9, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3335, file: !201, line: 464, column: 55)
!3340 = !DILocation(line: 467, column: 23, scope: !3339)
!3341 = !DILocation(line: 467, column: 22, scope: !3339)
!3342 = !DILocation(line: 468, column: 24, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3339, file: !201, line: 468, column: 13)
!3344 = !DILocation(line: 474, column: 5, scope: !3301)
!3345 = !DILocation(line: 477, column: 1, scope: !3301)
!3346 = !DILocation(line: 476, column: 5, scope: !3301)
!3347 = distinct !DISubprogram(name: "GPT_ResetTimer", scope: !271, file: !271, line: 73, type: !3348, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3350)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{null, !114, !114, !126}
!3350 = !{!3351, !3352, !3353}
!3351 = !DILocalVariable(name: "timerNum", arg: 1, scope: !3347, file: !271, line: 73, type: !114)
!3352 = !DILocalVariable(name: "countValue", arg: 2, scope: !3347, file: !271, line: 73, type: !114)
!3353 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !3347, file: !271, line: 73, type: !126)
!3354 = !DILocation(line: 0, scope: !3347)
!3355 = !DILocation(line: 75, column: 5, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3347, file: !271, line: 75, column: 5)
!3357 = !DILocation(line: 75, column: 5, scope: !3347)
!3358 = !DILocation(line: 75, column: 5, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3356, file: !271, line: 75, column: 5)
!3360 = distinct !{!3360, !3358, !3358}
!3361 = !DILocation(line: 77, column: 9, scope: !3347)
!3362 = !DILocation(line: 78, column: 30, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3364, file: !271, line: 77, column: 24)
!3364 = distinct !DILexicalBlock(scope: !3347, file: !271, line: 77, column: 9)
!3365 = !DILocation(line: 0, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3363, file: !271, line: 79, column: 13)
!3367 = !DILocation(line: 79, column: 13, scope: !3363)
!3368 = !DILocation(line: 80, column: 34, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3366, file: !271, line: 79, column: 37)
!3370 = !DILocation(line: 81, column: 9, scope: !3369)
!3371 = !DILocation(line: 82, column: 34, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3366, file: !271, line: 81, column: 16)
!3373 = !DILocation(line: 85, column: 30, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !271, line: 84, column: 31)
!3375 = distinct !DILexicalBlock(scope: !3364, file: !271, line: 84, column: 16)
!3376 = !DILocation(line: 0, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3374, file: !271, line: 86, column: 13)
!3378 = !DILocation(line: 86, column: 13, scope: !3374)
!3379 = !DILocation(line: 87, column: 34, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3377, file: !271, line: 86, column: 37)
!3381 = !DILocation(line: 88, column: 9, scope: !3380)
!3382 = !DILocation(line: 89, column: 34, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3377, file: !271, line: 88, column: 16)
!3384 = !DILocation(line: 92, column: 1, scope: !3347)
!3385 = distinct !DISubprogram(name: "GPT_Start", scope: !271, file: !271, line: 94, type: !3386, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3388)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{null, !114}
!3388 = !{!3389}
!3389 = !DILocalVariable(name: "timerNum", arg: 1, scope: !3385, file: !271, line: 94, type: !114)
!3390 = !DILocation(line: 0, scope: !3385)
!3391 = !DILocation(line: 96, column: 5, scope: !3385)
!3392 = !DILocation(line: 96, column: 5, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !271, line: 96, column: 5)
!3394 = distinct !DILexicalBlock(scope: !3385, file: !271, line: 96, column: 5)
!3395 = distinct !{!3395, !3392, !3392}
!3396 = !DILocation(line: 99, column: 30, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !271, line: 98, column: 24)
!3398 = distinct !DILexicalBlock(scope: !3385, file: !271, line: 98, column: 9)
!3399 = !DILocation(line: 100, column: 9, scope: !3397)
!3400 = !DILocation(line: 101, column: 5, scope: !3397)
!3401 = !DILocation(line: 102, column: 30, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3403, file: !271, line: 101, column: 31)
!3403 = distinct !DILexicalBlock(scope: !3398, file: !271, line: 101, column: 16)
!3404 = !DILocation(line: 103, column: 9, scope: !3402)
!3405 = !DILocation(line: 104, column: 5, scope: !3402)
!3406 = !DILocation(line: 105, column: 30, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !271, line: 104, column: 31)
!3408 = distinct !DILexicalBlock(scope: !3403, file: !271, line: 104, column: 16)
!3409 = !DILocation(line: 106, column: 5, scope: !3407)
!3410 = !DILocation(line: 108, column: 1, scope: !3385)
!3411 = distinct !DISubprogram(name: "GPT_Stop", scope: !271, file: !271, line: 110, type: !3386, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3412)
!3412 = !{!3413}
!3413 = !DILocalVariable(name: "timerNum", arg: 1, scope: !3411, file: !271, line: 110, type: !114)
!3414 = !DILocation(line: 0, scope: !3411)
!3415 = !DILocation(line: 112, column: 9, scope: !3411)
!3416 = !DILocation(line: 113, column: 30, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !271, line: 112, column: 24)
!3418 = distinct !DILexicalBlock(scope: !3411, file: !271, line: 112, column: 9)
!3419 = !DILocation(line: 114, column: 30, scope: !3417)
!3420 = !DILocation(line: 115, column: 31, scope: !3417)
!3421 = !DILocation(line: 117, column: 5, scope: !3417)
!3422 = !DILocation(line: 118, column: 30, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !271, line: 117, column: 31)
!3424 = distinct !DILexicalBlock(scope: !3418, file: !271, line: 117, column: 16)
!3425 = !DILocation(line: 119, column: 30, scope: !3423)
!3426 = !DILocation(line: 120, column: 31, scope: !3423)
!3427 = !DILocation(line: 121, column: 5, scope: !3423)
!3428 = !DILocation(line: 122, column: 30, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !271, line: 121, column: 31)
!3430 = distinct !DILexicalBlock(scope: !3424, file: !271, line: 121, column: 16)
!3431 = !DILocation(line: 123, column: 5, scope: !3429)
!3432 = !DILocation(line: 124, column: 30, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !271, line: 123, column: 31)
!3434 = distinct !DILexicalBlock(scope: !3430, file: !271, line: 123, column: 16)
!3435 = !DILocation(line: 125, column: 5, scope: !3433)
!3436 = !DILocation(line: 128, column: 1, scope: !3411)
!3437 = distinct !DISubprogram(name: "GPT_INT_Handler", scope: !271, file: !271, line: 130, type: !713, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3438)
!3438 = !{!3439, !3440}
!3439 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3437, file: !271, line: 130, type: !452)
!3440 = !DILocalVariable(name: "GPT_Status", scope: !3437, file: !271, line: 132, type: !434)
!3441 = !DILocation(line: 0, scope: !3437)
!3442 = !DILocation(line: 135, column: 18, scope: !3437)
!3443 = !DILocation(line: 136, column: 26, scope: !3437)
!3444 = !DILocation(line: 136, column: 24, scope: !3437)
!3445 = !DILocation(line: 138, column: 20, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3437, file: !271, line: 138, column: 9)
!3447 = !DILocation(line: 138, column: 9, scope: !3437)
!3448 = !DILocation(line: 141, column: 27, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3446, file: !271, line: 141, column: 16)
!3450 = !DILocation(line: 141, column: 16, scope: !3446)
!3451 = !DILocation(line: 0, scope: !3446)
!3452 = !DILocation(line: 145, column: 1, scope: !3437)
!3453 = distinct !DISubprogram(name: "GPT_init", scope: !271, file: !271, line: 147, type: !3454, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3456)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{null, !114, !114, !180}
!3456 = !{!3457, !3458, !3459}
!3457 = !DILocalVariable(name: "timerNum", arg: 1, scope: !3453, file: !271, line: 147, type: !114)
!3458 = !DILocalVariable(name: "speed_32us", arg: 2, scope: !3453, file: !271, line: 147, type: !114)
!3459 = !DILocalVariable(name: "GPT_Callback", arg: 3, scope: !3453, file: !271, line: 147, type: !180)
!3460 = !DILocation(line: 0, scope: !3453)
!3461 = !DILocation(line: 149, column: 5, scope: !3453)
!3462 = !DILocation(line: 149, column: 5, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !271, line: 149, column: 5)
!3464 = distinct !DILexicalBlock(scope: !3453, file: !271, line: 149, column: 5)
!3465 = distinct !{!3465, !3462, !3462}
!3466 = !DILocation(line: 149, column: 5, scope: !3464)
!3467 = !DILocation(line: 151, column: 23, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3453, file: !271, line: 151, column: 9)
!3469 = !DILocation(line: 152, column: 9, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3468, file: !271, line: 151, column: 41)
!3471 = !DILocation(line: 153, column: 9, scope: !3470)
!3472 = !DILocation(line: 154, column: 9, scope: !3470)
!3473 = !DILocation(line: 155, column: 5, scope: !3470)
!3474 = !DILocation(line: 157, column: 9, scope: !3453)
!3475 = !DILocation(line: 158, column: 37, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3477, file: !271, line: 157, column: 24)
!3477 = distinct !DILexicalBlock(scope: !3453, file: !271, line: 157, column: 9)
!3478 = !DILocation(line: 159, column: 30, scope: !3476)
!3479 = !DILocation(line: 160, column: 45, scope: !3476)
!3480 = !DILocation(line: 160, column: 30, scope: !3476)
!3481 = !DILocation(line: 161, column: 5, scope: !3476)
!3482 = !DILocation(line: 162, column: 37, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !271, line: 161, column: 31)
!3484 = distinct !DILexicalBlock(scope: !3477, file: !271, line: 161, column: 16)
!3485 = !DILocation(line: 163, column: 30, scope: !3483)
!3486 = !DILocation(line: 164, column: 45, scope: !3483)
!3487 = !DILocation(line: 164, column: 30, scope: !3483)
!3488 = !DILocation(line: 165, column: 5, scope: !3483)
!3489 = !DILocation(line: 166, column: 59, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !271, line: 165, column: 31)
!3491 = distinct !DILexicalBlock(scope: !3484, file: !271, line: 165, column: 16)
!3492 = !DILocation(line: 166, column: 45, scope: !3490)
!3493 = !DILocation(line: 166, column: 30, scope: !3490)
!3494 = !DILocation(line: 167, column: 5, scope: !3490)
!3495 = !DILocation(line: 168, column: 59, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !271, line: 167, column: 31)
!3497 = distinct !DILexicalBlock(scope: !3491, file: !271, line: 167, column: 16)
!3498 = !DILocation(line: 168, column: 45, scope: !3496)
!3499 = !DILocation(line: 168, column: 30, scope: !3496)
!3500 = !DILocation(line: 169, column: 30, scope: !3496)
!3501 = !DILocation(line: 170, column: 5, scope: !3496)
!3502 = !DILocation(line: 171, column: 1, scope: !3453)
!3503 = distinct !DISubprogram(name: "GPT_return_current_count", scope: !271, file: !271, line: 173, type: !3504, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!114, !114}
!3506 = !{!3507, !3508}
!3507 = !DILocalVariable(name: "timerNum", arg: 1, scope: !3503, file: !271, line: 173, type: !114)
!3508 = !DILocalVariable(name: "current_count", scope: !3503, file: !271, line: 175, type: !114)
!3509 = !DILocation(line: 0, scope: !3503)
!3510 = !DILocation(line: 177, column: 5, scope: !3503)
!3511 = !DILocation(line: 177, column: 5, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !271, line: 177, column: 5)
!3513 = distinct !DILexicalBlock(scope: !3503, file: !271, line: 177, column: 5)
!3514 = distinct !{!3514, !3511, !3511}
!3515 = !DILocation(line: 183, column: 5, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !271, line: 181, column: 31)
!3517 = distinct !DILexicalBlock(scope: !3518, file: !271, line: 181, column: 16)
!3518 = distinct !DILexicalBlock(scope: !3503, file: !271, line: 179, column: 9)
!3519 = !DILocation(line: 185, column: 5, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3521, file: !271, line: 183, column: 31)
!3521 = distinct !DILexicalBlock(scope: !3517, file: !271, line: 183, column: 16)
!3522 = !DILocation(line: 187, column: 5, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3524, file: !271, line: 185, column: 31)
!3524 = distinct !DILexicalBlock(scope: !3521, file: !271, line: 185, column: 16)
!3525 = !DILocation(line: 0, scope: !3518)
!3526 = !DILocation(line: 189, column: 5, scope: !3503)
!3527 = distinct !DISubprogram(name: "CM4_GPT2Init", scope: !271, file: !271, line: 193, type: !181, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !2135)
!3528 = !DILocation(line: 195, column: 5, scope: !3527)
!3529 = !DILocation(line: 196, column: 1, scope: !3527)
!3530 = distinct !DISubprogram(name: "CM4_GPT4Init", scope: !271, file: !271, line: 198, type: !181, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !270, retainedNodes: !2135)
!3531 = !DILocation(line: 200, column: 5, scope: !3530)
!3532 = !DILocation(line: 201, column: 1, scope: !3530)
!3533 = distinct !DISubprogram(name: "hal_trng_init", scope: !2017, file: !2017, line: 59, type: !3534, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2016, retainedNodes: !2135)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{!3536}
!3536 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_trng_status_t", file: !1089, line: 96, baseType: !1088)
!3537 = !DILocation(line: 61, column: 5, scope: !3533)
!3538 = distinct !DISubprogram(name: "hal_trng_deinit", scope: !2017, file: !2017, line: 71, type: !3534, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2016, retainedNodes: !2135)
!3539 = !DILocation(line: 73, column: 5, scope: !3538)
!3540 = distinct !DISubprogram(name: "hal_trng_get_generated_random_number", scope: !2017, file: !2017, line: 85, type: !3541, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2016, retainedNodes: !3544)
!3541 = !DISubroutineType(types: !3542)
!3542 = !{!3536, !3543}
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!3544 = !{!3545, !3546, !3548, !3550, !3552}
!3545 = !DILocalVariable(name: "random_number", arg: 1, scope: !3540, file: !2017, line: 85, type: !3543)
!3546 = !DILocalVariable(name: "cnt", scope: !3540, file: !2017, line: 87, type: !3547)
!3547 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT16", file: !47, line: 60, baseType: !435)
!3548 = !DILocalVariable(name: "addr", scope: !3549, file: !2017, line: 89, type: !414)
!3549 = distinct !DILexicalBlock(scope: !3540, file: !2017, line: 89, column: 5)
!3550 = !DILocalVariable(name: "addr", scope: !3551, file: !2017, line: 100, type: !414)
!3551 = distinct !DILexicalBlock(scope: !3540, file: !2017, line: 100, column: 5)
!3552 = !DILocalVariable(name: "addr", scope: !3553, file: !2017, line: 101, type: !414)
!3553 = distinct !DILexicalBlock(scope: !3540, file: !2017, line: 101, column: 5)
!3554 = !DILocation(line: 0, scope: !3540)
!3555 = !DILocation(line: 0, scope: !3549)
!3556 = !DILocation(line: 89, column: 5, scope: !3549)
!3557 = !DILocation(line: 91, column: 5, scope: !3540)
!3558 = !DILocation(line: 92, column: 13, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !2017, line: 92, column: 13)
!3560 = distinct !DILexicalBlock(scope: !3540, file: !2017, line: 91, column: 23)
!3561 = !DILocation(line: 92, column: 50, scope: !3559)
!3562 = !DILocation(line: 92, column: 13, scope: !3560)
!3563 = !DILocation(line: 95, column: 9, scope: !3560)
!3564 = !DILocation(line: 96, column: 12, scope: !3560)
!3565 = !DILocation(line: 91, column: 16, scope: !3540)
!3566 = distinct !{!3566, !3557, !3567}
!3567 = !DILocation(line: 97, column: 5, scope: !3540)
!3568 = !DILocation(line: 99, column: 22, scope: !3540)
!3569 = !DILocation(line: 99, column: 20, scope: !3540)
!3570 = !DILocation(line: 0, scope: !3551)
!3571 = !DILocation(line: 100, column: 5, scope: !3551)
!3572 = !DILocation(line: 0, scope: !3553)
!3573 = !DILocation(line: 101, column: 5, scope: !3553)
!3574 = !DILocation(line: 103, column: 13, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3540, file: !2017, line: 103, column: 9)
!3576 = !DILocation(line: 103, column: 9, scope: !3540)
!3577 = !DILocation(line: 104, column: 24, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3575, file: !2017, line: 103, column: 21)
!3579 = !DILocation(line: 105, column: 9, scope: !3578)
!3580 = !DILocation(line: 0, scope: !3575)
!3581 = !DILocation(line: 109, column: 1, scope: !3540)
!3582 = distinct !DISubprogram(name: "NVIC_SetupVectorTable", scope: !2021, file: !2021, line: 47, type: !2198, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !3583)
!3583 = !{!3584}
!3584 = !DILocalVariable(name: "addr", arg: 1, scope: !3582, file: !2021, line: 47, type: !136)
!3585 = !DILocation(line: 0, scope: !3582)
!3586 = !DILocation(line: 49, column: 15, scope: !3582)
!3587 = !DILocation(line: 51, column: 5, scope: !3582)
!3588 = !{i64 2624}
!3589 = !DILocation(line: 52, column: 5, scope: !3582)
!3590 = !{i64 2651}
!3591 = !DILocation(line: 53, column: 1, scope: !3582)
!3592 = distinct !DISubprogram(name: "NVIC_SWInt", scope: !2021, file: !2021, line: 56, type: !3593, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !3595)
!3593 = !DISubroutineType(types: !3594)
!3594 = !{null, !7}
!3595 = !{!3596}
!3596 = !DILocalVariable(name: "source", arg: 1, scope: !3592, file: !2021, line: 56, type: !7)
!3597 = !DILocation(line: 0, scope: !3592)
!3598 = !DILocation(line: 58, column: 16, scope: !3592)
!3599 = !DILocation(line: 59, column: 1, scope: !3592)
!3600 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2021, file: !2021, line: 61, type: !2167, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !3601)
!3601 = !{!3602}
!3602 = !DILocalVariable(name: "mask", scope: !3600, file: !2021, line: 63, type: !136)
!3603 = !DILocation(line: 470, column: 3, scope: !3604, inlinedAt: !3607)
!3604 = distinct !DISubprogram(name: "__get_PRIMASK", scope: !2166, file: !2166, line: 466, type: !2167, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !3605)
!3605 = !{!3606}
!3606 = !DILocalVariable(name: "result", scope: !3604, file: !2166, line: 468, type: !136)
!3607 = distinct !DILocation(line: 64, column: 5, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3600, file: !2021, line: 64, column: 5)
!3609 = !{i64 302192}
!3610 = !DILocation(line: 0, scope: !3604, inlinedAt: !3607)
!3611 = !DILocation(line: 0, scope: !3600)
!3612 = !DILocation(line: 330, column: 3, scope: !3613, inlinedAt: !3614)
!3613 = distinct !DISubprogram(name: "__disable_irq", scope: !2166, file: !2166, line: 328, type: !181, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !2135)
!3614 = distinct !DILocation(line: 64, column: 5, scope: !3608)
!3615 = !{i64 298856}
!3616 = !DILocation(line: 65, column: 5, scope: !3600)
!3617 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2021, file: !2021, line: 68, type: !2198, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !3618)
!3618 = !{!3619}
!3619 = !DILocalVariable(name: "mask", arg: 1, scope: !3617, file: !2021, line: 68, type: !136)
!3620 = !DILocation(line: 0, scope: !3617)
!3621 = !DILocalVariable(name: "priMask", arg: 1, scope: !3622, file: !2166, line: 481, type: !136)
!3622 = distinct !DISubprogram(name: "__set_PRIMASK", scope: !2166, file: !2166, line: 481, type: !2198, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2020, retainedNodes: !3623)
!3623 = !{!3621}
!3624 = !DILocation(line: 0, scope: !3622, inlinedAt: !3625)
!3625 = distinct !DILocation(line: 70, column: 5, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3617, file: !2021, line: 70, column: 5)
!3627 = !DILocation(line: 483, column: 3, scope: !3622, inlinedAt: !3625)
!3628 = !{i64 302510}
!3629 = !DILocation(line: 71, column: 1, scope: !3617)
!3630 = distinct !DISubprogram(name: "sfc_GPT_return_current_count", scope: !295, file: !295, line: 60, type: !3631, scopeLine: 61, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3633)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!114}
!3633 = !{!3634}
!3634 = !DILocalVariable(name: "current_count", scope: !3630, file: !295, line: 62, type: !114)
!3635 = !DILocation(line: 64, column: 21, scope: !3630)
!3636 = !DILocation(line: 0, scope: !3630)
!3637 = !DILocation(line: 66, column: 5, scope: !3630)
!3638 = distinct !DISubprogram(name: "sfc_get_systime", scope: !295, file: !295, line: 69, type: !3631, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !2135)
!3639 = !DILocation(line: 71, column: 12, scope: !3638)
!3640 = !DILocation(line: 71, column: 5, scope: !3638)
!3641 = distinct !DISubprogram(name: "sfc_delay_time", scope: !295, file: !295, line: 74, type: !3386, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3642)
!3642 = !{!3643, !3644, !3645}
!3643 = !DILocalVariable(name: "count", arg: 1, scope: !3641, file: !295, line: 74, type: !114)
!3644 = !DILocalVariable(name: "end_count", scope: !3641, file: !295, line: 76, type: !114)
!3645 = !DILocalVariable(name: "current", scope: !3641, file: !295, line: 76, type: !114)
!3646 = !DILocation(line: 0, scope: !3641)
!3647 = !DILocation(line: 78, column: 17, scope: !3641)
!3648 = !DILocation(line: 78, column: 35, scope: !3641)
!3649 = !DILocation(line: 78, column: 43, scope: !3641)
!3650 = !DILocation(line: 79, column: 15, scope: !3641)
!3651 = !DILocation(line: 80, column: 12, scope: !3641)
!3652 = !DILocation(line: 80, column: 5, scope: !3641)
!3653 = !DILocation(line: 81, column: 19, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3641, file: !295, line: 80, column: 49)
!3655 = distinct !{!3655, !3652, !3656}
!3656 = !DILocation(line: 82, column: 5, scope: !3641)
!3657 = !DILocation(line: 83, column: 1, scope: !3641)
!3658 = distinct !DISubprogram(name: "sfc_delay_ms", scope: !295, file: !295, line: 85, type: !3593, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3659)
!3659 = !{!3660}
!3660 = !DILocalVariable(name: "ms", arg: 1, scope: !3658, file: !295, line: 85, type: !7)
!3661 = !DILocation(line: 0, scope: !3658)
!3662 = !DILocation(line: 87, column: 23, scope: !3658)
!3663 = !DILocation(line: 87, column: 5, scope: !3658)
!3664 = !DILocation(line: 88, column: 1, scope: !3658)
!3665 = distinct !DISubprogram(name: "sfc_getMaxGPRamSize", scope: !295, file: !295, line: 90, type: !996, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !2135)
!3666 = !DILocation(line: 92, column: 5, scope: !3665)
!3667 = distinct !DISubprogram(name: "sfc_Init", scope: !295, file: !295, line: 121, type: !1249, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3668)
!3668 = !{!3669, !3670}
!3669 = !DILocalVariable(name: "security_enable", arg: 1, scope: !3667, file: !295, line: 121, type: !53)
!3670 = !DILocalVariable(name: "reg", scope: !3667, file: !295, line: 123, type: !7)
!3671 = !DILocation(line: 0, scope: !3667)
!3672 = !DILocation(line: 125, column: 27, scope: !3667)
!3673 = !DILocation(line: 141, column: 5, scope: !3667)
!3674 = !DILocation(line: 142, column: 5, scope: !3667)
!3675 = !DILocation(line: 143, column: 5, scope: !3667)
!3676 = !DILocation(line: 144, column: 5, scope: !3667)
!3677 = !DILocation(line: 145, column: 5, scope: !3667)
!3678 = !DILocation(line: 147, column: 5, scope: !3667)
!3679 = !DILocation(line: 150, column: 11, scope: !3667)
!3680 = !DILocation(line: 151, column: 9, scope: !3667)
!3681 = !DILocation(line: 152, column: 5, scope: !3667)
!3682 = !DILocation(line: 153, column: 5, scope: !3667)
!3683 = !DILocation(line: 155, column: 11, scope: !3667)
!3684 = !DILocation(line: 156, column: 9, scope: !3667)
!3685 = !DILocation(line: 157, column: 5, scope: !3667)
!3686 = !DILocation(line: 158, column: 5, scope: !3667)
!3687 = !DILocation(line: 160, column: 11, scope: !3667)
!3688 = !DILocation(line: 161, column: 9, scope: !3667)
!3689 = !DILocation(line: 162, column: 5, scope: !3667)
!3690 = !DILocation(line: 163, column: 5, scope: !3667)
!3691 = !DILocation(line: 165, column: 11, scope: !3667)
!3692 = !DILocation(line: 166, column: 9, scope: !3667)
!3693 = !DILocation(line: 167, column: 5, scope: !3667)
!3694 = !DILocation(line: 168, column: 5, scope: !3667)
!3695 = !DILocation(line: 173, column: 9, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3667, file: !295, line: 173, column: 9)
!3697 = !DILocation(line: 173, column: 9, scope: !3667)
!3698 = !DILocation(line: 174, column: 31, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3696, file: !295, line: 173, column: 26)
!3700 = !DILocation(line: 184, column: 9, scope: !3699)
!3701 = !DILocation(line: 185, column: 9, scope: !3699)
!3702 = !DILocation(line: 187, column: 9, scope: !3699)
!3703 = !DILocation(line: 188, column: 9, scope: !3699)
!3704 = !DILocation(line: 189, column: 9, scope: !3699)
!3705 = !DILocation(line: 190, column: 9, scope: !3699)
!3706 = !DILocation(line: 192, column: 9, scope: !3699)
!3707 = !DILocation(line: 193, column: 5, scope: !3699)
!3708 = !DILocation(line: 194, column: 1, scope: !3667)
!3709 = distinct !DISubprogram(name: "sfc_GetDirectMode", scope: !295, file: !295, line: 196, type: !996, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3710)
!3710 = !{!3711, !3712}
!3711 = !DILocalVariable(name: "qpi_en", scope: !3709, file: !295, line: 198, type: !325)
!3712 = !DILocalVariable(name: "sfc_read_mode", scope: !3709, file: !295, line: 199, type: !325)
!3713 = !DILocation(line: 198, column: 29, scope: !3709)
!3714 = !DILocation(line: 0, scope: !3709)
!3715 = !DILocation(line: 199, column: 36, scope: !3709)
!3716 = !DILocation(line: 199, column: 89, scope: !3709)
!3717 = !DILocation(line: 204, column: 23, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3709, file: !295, line: 204, column: 9)
!3719 = !DILocation(line: 204, column: 9, scope: !3709)
!3720 = !DILocation(line: 218, column: 1, scope: !3709)
!3721 = distinct !DISubprogram(name: "sfc_direct_read_setup", scope: !295, file: !295, line: 221, type: !3722, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3724)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{null, !325, !53}
!3724 = !{!3725, !3726, !3727}
!3725 = !DILocalVariable(name: "reg", arg: 1, scope: !3721, file: !295, line: 221, type: !325)
!3726 = !DILocalVariable(name: "mode", arg: 2, scope: !3721, file: !295, line: 221, type: !53)
!3727 = !DILocalVariable(name: "tmp", scope: !3721, file: !295, line: 223, type: !325)
!3728 = !DILocation(line: 0, scope: !3721)
!3729 = !DILocation(line: 224, column: 5, scope: !3721)
!3730 = !DILocation(line: 236, column: 9, scope: !3721)
!3731 = !DILocation(line: 237, column: 5, scope: !3721)
!3732 = !DILocation(line: 238, column: 1, scope: !3721)
!3733 = distinct !DISubprogram(name: "sfc_Command_List", scope: !295, file: !295, line: 296, type: !3734, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3736)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{null, !323}
!3736 = !{!3737, !3738, !3739, !3740}
!3737 = !DILocalVariable(name: "cmdlist", arg: 1, scope: !3733, file: !295, line: 296, type: !323)
!3738 = !DILocalVariable(name: "i", scope: !3733, file: !295, line: 298, type: !7)
!3739 = !DILocalVariable(name: "val", scope: !3733, file: !295, line: 299, type: !7)
!3740 = !DILocalVariable(name: "force_qpi", scope: !3733, file: !295, line: 299, type: !7)
!3741 = !DILocation(line: 0, scope: !3733)
!3742 = !DILocation(line: 301, column: 10, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3733, file: !295, line: 301, column: 9)
!3744 = !DILocation(line: 301, column: 9, scope: !3733)
!3745 = !DILocation(line: 305, column: 11, scope: !3733)
!3746 = !DILocation(line: 310, column: 5, scope: !3733)
!3747 = !DILocation(line: 311, column: 17, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3733, file: !295, line: 310, column: 17)
!3749 = !DILocation(line: 311, column: 9, scope: !3748)
!3750 = !DILocation(line: 319, column: 17, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3748, file: !295, line: 311, column: 29)
!3752 = !DILocation(line: 321, column: 17, scope: !3751)
!3753 = !DILocation(line: 322, column: 17, scope: !3751)
!3754 = !DILocation(line: 325, column: 33, scope: !3748)
!3755 = !DILocation(line: 325, column: 23, scope: !3748)
!3756 = !DILocation(line: 325, column: 49, scope: !3748)
!3757 = !DILocation(line: 325, column: 39, scope: !3748)
!3758 = !DILocation(line: 325, column: 9, scope: !3748)
!3759 = !DILocation(line: 327, column: 15, scope: !3748)
!3760 = !DILocation(line: 327, column: 11, scope: !3748)
!3761 = !DILocation(line: 329, column: 9, scope: !3748)
!3762 = distinct !{!3762, !3746, !3763}
!3763 = !DILocation(line: 330, column: 5, scope: !3733)
!3764 = !DILocation(line: 331, column: 1, scope: !3733)
!3765 = distinct !DISubprogram(name: "sfc_transfer", scope: !295, file: !295, line: 417, type: !3766, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3769)
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!53, !323, !3768, !307, !3768, !7}
!3768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !325)
!3769 = !{!3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780}
!3770 = !DILocalVariable(name: "cmd", arg: 1, scope: !3765, file: !295, line: 417, type: !323)
!3771 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3765, file: !295, line: 417, type: !3768)
!3772 = !DILocalVariable(name: "data", arg: 3, scope: !3765, file: !295, line: 417, type: !307)
!3773 = !DILocalVariable(name: "data_len", arg: 4, scope: !3765, file: !295, line: 417, type: !3768)
!3774 = !DILocalVariable(name: "force_qpi", arg: 5, scope: !3765, file: !295, line: 417, type: !7)
!3775 = !DILocalVariable(name: "tmp", scope: !3765, file: !295, line: 419, type: !7)
!3776 = !DILocalVariable(name: "i", scope: !3765, file: !295, line: 419, type: !7)
!3777 = !DILocalVariable(name: "j", scope: !3765, file: !295, line: 419, type: !7)
!3778 = !DILocalVariable(name: "p_data", scope: !3765, file: !295, line: 420, type: !307)
!3779 = !DILocalVariable(name: "p_tmp", scope: !3765, file: !295, line: 420, type: !307)
!3780 = !DILocalVariable(name: "savedMask", scope: !3765, file: !295, line: 421, type: !7)
!3781 = !DILocation(line: 0, scope: !3765)
!3782 = !DILocation(line: 419, column: 5, scope: !3765)
!3783 = !DILocation(line: 423, column: 18, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3765, file: !295, line: 423, column: 9)
!3785 = !DILocation(line: 423, column: 30, scope: !3784)
!3786 = !DILocation(line: 423, column: 9, scope: !3765)
!3787 = !DILocation(line: 430, column: 19, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !295, line: 430, column: 5)
!3789 = distinct !DILexicalBlock(scope: !3765, file: !295, line: 430, column: 5)
!3790 = !DILocation(line: 430, column: 5, scope: !3789)
!3791 = !DILocation(line: 431, column: 25, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !295, line: 431, column: 9)
!3793 = distinct !DILexicalBlock(scope: !3788, file: !295, line: 430, column: 43)
!3794 = !DILocation(line: 431, column: 32, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3792, file: !295, line: 431, column: 9)
!3796 = !DILocation(line: 431, column: 9, scope: !3792)
!3797 = !DILocation(line: 432, column: 24, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3795, file: !295, line: 431, column: 62)
!3799 = !DILocation(line: 432, column: 13, scope: !3798)
!3800 = !DILocation(line: 432, column: 22, scope: !3798)
!3801 = !DILocation(line: 431, column: 53, scope: !3795)
!3802 = !DILocation(line: 431, column: 58, scope: !3795)
!3803 = !DILocation(line: 431, column: 42, scope: !3795)
!3804 = distinct !{!3804, !3796, !3805}
!3805 = !DILocation(line: 433, column: 9, scope: !3792)
!3806 = !DILocation(line: 434, column: 9, scope: !3793)
!3807 = !DILocation(line: 0, scope: !3789)
!3808 = !DILocation(line: 436, column: 15, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3793, file: !295, line: 436, column: 13)
!3810 = !DILocation(line: 436, column: 20, scope: !3809)
!3811 = !DILocation(line: 437, column: 13, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3809, file: !295, line: 436, column: 46)
!3813 = !DILocation(line: 438, column: 13, scope: !3812)
!3814 = !DILocation(line: 440, column: 9, scope: !3812)
!3815 = !DILocation(line: 430, column: 37, scope: !3788)
!3816 = distinct !{!3816, !3790, !3817}
!3817 = !DILocation(line: 441, column: 5, scope: !3789)
!3818 = !DILocation(line: 443, column: 17, scope: !3765)
!3819 = !DILocation(line: 444, column: 9, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3765, file: !295, line: 444, column: 9)
!3821 = !DILocation(line: 444, column: 9, scope: !3765)
!3822 = !DILocation(line: 445, column: 9, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3820, file: !295, line: 444, column: 32)
!3824 = !DILocation(line: 446, column: 9, scope: !3823)
!3825 = !DILocation(line: 447, column: 5, scope: !3823)
!3826 = !DILocation(line: 449, column: 5, scope: !3765)
!3827 = !DILocation(line: 450, column: 5, scope: !3765)
!3828 = !DILocation(line: 452, column: 5, scope: !3765)
!3829 = !DILocation(line: 453, column: 5, scope: !3765)
!3830 = !DILocation(line: 454, column: 5, scope: !3765)
!3831 = !DILocation(line: 456, column: 76, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !295, line: 456, column: 5)
!3833 = distinct !DILexicalBlock(scope: !3765, file: !295, line: 456, column: 5)
!3834 = !DILocation(line: 456, column: 5, scope: !3833)
!3835 = !DILocation(line: 456, column: 62, scope: !3833)
!3836 = !DILocation(line: 457, column: 17, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3832, file: !295, line: 456, column: 111)
!3838 = !DILocation(line: 457, column: 15, scope: !3837)
!3839 = !DILocation(line: 456, column: 88, scope: !3832)
!3840 = !DILocation(line: 456, column: 93, scope: !3832)
!3841 = !DILocation(line: 456, column: 101, scope: !3832)
!3842 = distinct !{!3842, !3834, !3843}
!3843 = !DILocation(line: 458, column: 5, scope: !3833)
!3844 = !DILocation(line: 461, column: 1, scope: !3765)
!3845 = distinct !DISubprogram(name: "sfc_MacEnable", scope: !295, file: !295, line: 402, type: !1249, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3846)
!3846 = !{!3847, !3848}
!3847 = !DILocalVariable(name: "force_qpi", arg: 1, scope: !3845, file: !295, line: 402, type: !53)
!3848 = !DILocalVariable(name: "val", scope: !3845, file: !295, line: 404, type: !325)
!3849 = !DILocation(line: 0, scope: !3845)
!3850 = !DILocation(line: 406, column: 11, scope: !3845)
!3851 = !DILocation(line: 408, column: 9, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3845, file: !295, line: 408, column: 9)
!3853 = !DILocation(line: 408, column: 25, scope: !3852)
!3854 = !DILocation(line: 412, column: 9, scope: !3845)
!3855 = !DILocation(line: 414, column: 5, scope: !3845)
!3856 = !DILocation(line: 415, column: 1, scope: !3845)
!3857 = distinct !DISubprogram(name: "sfc_MacWaitReady", scope: !295, file: !295, line: 384, type: !181, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !2135)
!3858 = !DILocation(line: 396, column: 5, scope: !3857)
!3859 = !DILocation(line: 397, column: 5, scope: !3857)
!3860 = !DILocation(line: 399, column: 1, scope: !3857)
!3861 = distinct !DISubprogram(name: "sfc_MacTrigger", scope: !295, file: !295, line: 339, type: !3862, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3864)
!3862 = !DISubroutineType(types: !3863)
!3863 = !{!325}
!3864 = !{!3865, !3866}
!3865 = !DILocalVariable(name: "val", scope: !3861, file: !295, line: 341, type: !325)
!3866 = !DILocalVariable(name: "misc_ctl", scope: !3861, file: !295, line: 342, type: !325)
!3867 = !DILocation(line: 0, scope: !3861)
!3868 = !DILocation(line: 344, column: 11, scope: !3861)
!3869 = !DILocation(line: 347, column: 9, scope: !3861)
!3870 = !DILocation(line: 349, column: 5, scope: !3861)
!3871 = !DILocation(line: 352, column: 5, scope: !3861)
!3872 = !DILocation(line: 352, column: 14, scope: !3861)
!3873 = !DILocation(line: 352, column: 44, scope: !3861)
!3874 = !DILocation(line: 352, column: 12, scope: !3861)
!3875 = distinct !{!3875, !3871, !3876}
!3876 = !DILocation(line: 353, column: 9, scope: !3861)
!3877 = !DILocation(line: 354, column: 13, scope: !3861)
!3878 = !DILocation(line: 354, column: 43, scope: !3861)
!3879 = !DILocation(line: 354, column: 5, scope: !3861)
!3880 = distinct !{!3880, !3879, !3881}
!3881 = !DILocation(line: 355, column: 9, scope: !3861)
!3882 = !DILocation(line: 357, column: 5, scope: !3861)
!3883 = distinct !DISubprogram(name: "sfc_MacLeave", scope: !295, file: !295, line: 366, type: !181, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3884)
!3884 = !{!3885}
!3885 = !DILocalVariable(name: "val", scope: !3883, file: !295, line: 368, type: !325)
!3886 = !DILocation(line: 371, column: 11, scope: !3883)
!3887 = !DILocation(line: 0, scope: !3883)
!3888 = !DILocation(line: 372, column: 9, scope: !3883)
!3889 = !DILocation(line: 373, column: 5, scope: !3883)
!3890 = !DILocation(line: 378, column: 11, scope: !3883)
!3891 = !DILocation(line: 379, column: 9, scope: !3883)
!3892 = !DILocation(line: 380, column: 5, scope: !3883)
!3893 = !DILocation(line: 381, column: 1, scope: !3883)
!3894 = distinct !DISubprogram(name: "sfc_clear_gpram", scope: !295, file: !295, line: 463, type: !181, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3895)
!3895 = !{!3896, !3897}
!3896 = !DILocalVariable(name: "i", scope: !3894, file: !295, line: 465, type: !7)
!3897 = !DILocalVariable(name: "p_data", scope: !3894, file: !295, line: 466, type: !307)
!3898 = !DILocation(line: 0, scope: !3894)
!3899 = !DILocation(line: 470, column: 5, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3894, file: !295, line: 470, column: 5)
!3901 = !DILocation(line: 471, column: 9, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3903, file: !295, line: 470, column: 63)
!3903 = distinct !DILexicalBlock(scope: !3900, file: !295, line: 470, column: 5)
!3904 = !DILocation(line: 470, column: 52, scope: !3903)
!3905 = !DILocation(line: 470, column: 59, scope: !3903)
!3906 = !DILocation(line: 470, column: 19, scope: !3903)
!3907 = distinct !{!3907, !3899, !3908}
!3908 = !DILocation(line: 472, column: 5, scope: !3900)
!3909 = !DILocation(line: 475, column: 1, scope: !3894)
!3910 = distinct !DISubprogram(name: "sfc_read", scope: !295, file: !295, line: 478, type: !3911, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3913)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!53, !323, !3768, !307, !3768}
!3913 = !{!3914, !3915, !3916, !3917}
!3914 = !DILocalVariable(name: "cmd", arg: 1, scope: !3910, file: !295, line: 478, type: !323)
!3915 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3910, file: !295, line: 478, type: !3768)
!3916 = !DILocalVariable(name: "data", arg: 3, scope: !3910, file: !295, line: 478, type: !307)
!3917 = !DILocalVariable(name: "data_len", arg: 4, scope: !3910, file: !295, line: 478, type: !3768)
!3918 = !DILocation(line: 0, scope: !3910)
!3919 = !DILocation(line: 480, column: 12, scope: !3910)
!3920 = !DILocation(line: 480, column: 5, scope: !3910)
!3921 = distinct !DISubprogram(name: "sfc_write", scope: !295, file: !295, line: 490, type: !3922, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3924)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!53, !323, !3768, !323, !3768}
!3924 = !{!3925, !3926, !3927, !3928, !3929, !3933}
!3925 = !DILocalVariable(name: "cmd", arg: 1, scope: !3921, file: !295, line: 490, type: !323)
!3926 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3921, file: !295, line: 490, type: !3768)
!3927 = !DILocalVariable(name: "data", arg: 3, scope: !3921, file: !295, line: 490, type: !323)
!3928 = !DILocalVariable(name: "data_len", arg: 4, scope: !3921, file: !295, line: 490, type: !3768)
!3929 = !DILocalVariable(name: "tmp", scope: !3921, file: !295, line: 492, type: !3930)
!3930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 1280, elements: !3931)
!3931 = !{!3932}
!3932 = !DISubrange(count: 160)
!3933 = !DILocalVariable(name: "total", scope: !3921, file: !295, line: 493, type: !53)
!3934 = !DILocation(line: 0, scope: !3921)
!3935 = !DILocation(line: 492, column: 5, scope: !3921)
!3936 = !DILocation(line: 492, column: 19, scope: !3921)
!3937 = !DILocation(line: 493, column: 25, scope: !3921)
!3938 = !DILocation(line: 495, column: 15, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3921, file: !295, line: 495, column: 9)
!3940 = !DILocation(line: 495, column: 9, scope: !3921)
!3941 = !DILocation(line: 496, column: 9, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !295, line: 496, column: 9)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !295, line: 496, column: 9)
!3944 = distinct !DILexicalBlock(scope: !3939, file: !295, line: 495, column: 31)
!3945 = distinct !{!3945, !3941, !3941}
!3946 = !DILocation(line: 498, column: 5, scope: !3921)
!3947 = !DILocation(line: 500, column: 9, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3921, file: !295, line: 500, column: 9)
!3949 = !DILocation(line: 500, column: 14, scope: !3948)
!3950 = !DILocation(line: 501, column: 17, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3948, file: !295, line: 500, column: 27)
!3952 = !DILocation(line: 501, column: 9, scope: !3951)
!3953 = !DILocation(line: 502, column: 5, scope: !3951)
!3954 = !DILocation(line: 503, column: 12, scope: !3921)
!3955 = !DILocation(line: 504, column: 1, scope: !3921)
!3956 = !DILocation(line: 503, column: 5, scope: !3921)
!3957 = distinct !DISubprogram(name: "sfc_security_write_crc", scope: !295, file: !295, line: 506, type: !3958, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3960)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!53, !323, !3768}
!3960 = !{!3961, !3962, !3963, !3964, !3965}
!3961 = !DILocalVariable(name: "cmd", arg: 1, scope: !3957, file: !295, line: 506, type: !323)
!3962 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3957, file: !295, line: 506, type: !3768)
!3963 = !DILocalVariable(name: "tmp", scope: !3957, file: !295, line: 508, type: !3930)
!3964 = !DILocalVariable(name: "crc", scope: !3957, file: !295, line: 509, type: !325)
!3965 = !DILocalVariable(name: "total", scope: !3957, file: !295, line: 510, type: !53)
!3966 = !DILocation(line: 0, scope: !3957)
!3967 = !DILocation(line: 508, column: 5, scope: !3957)
!3968 = !DILocation(line: 508, column: 19, scope: !3957)
!3969 = !DILocation(line: 509, column: 5, scope: !3957)
!3970 = !DILocation(line: 509, column: 25, scope: !3957)
!3971 = !DILocation(line: 509, column: 19, scope: !3957)
!3972 = !DILocation(line: 510, column: 25, scope: !3957)
!3973 = !DILocation(line: 514, column: 5, scope: !3957)
!3974 = !DILocation(line: 515, column: 13, scope: !3957)
!3975 = !DILocation(line: 515, column: 5, scope: !3957)
!3976 = !DILocation(line: 517, column: 12, scope: !3957)
!3977 = !DILocation(line: 518, column: 1, scope: !3957)
!3978 = !DILocation(line: 517, column: 5, scope: !3957)
!3979 = distinct !DISubprogram(name: "__sfc_write", scope: !295, file: !295, line: 538, type: !3766, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !294, retainedNodes: !3980)
!3980 = !{!3981, !3982, !3983, !3984, !3985, !3986, !3987}
!3981 = !DILocalVariable(name: "cmd", arg: 1, scope: !3979, file: !295, line: 538, type: !323)
!3982 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3979, file: !295, line: 538, type: !3768)
!3983 = !DILocalVariable(name: "data", arg: 3, scope: !3979, file: !295, line: 538, type: !307)
!3984 = !DILocalVariable(name: "data_len", arg: 4, scope: !3979, file: !295, line: 538, type: !3768)
!3985 = !DILocalVariable(name: "security_enable", arg: 5, scope: !3979, file: !295, line: 538, type: !7)
!3986 = !DILocalVariable(name: "tmp", scope: !3979, file: !295, line: 540, type: !3930)
!3987 = !DILocalVariable(name: "total", scope: !3979, file: !295, line: 541, type: !53)
!3988 = !DILocation(line: 0, scope: !3979)
!3989 = !DILocation(line: 540, column: 5, scope: !3979)
!3990 = !DILocation(line: 540, column: 19, scope: !3979)
!3991 = !DILocation(line: 541, column: 25, scope: !3979)
!3992 = !DILocation(line: 543, column: 15, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3979, file: !295, line: 543, column: 9)
!3994 = !DILocation(line: 543, column: 9, scope: !3979)
!3995 = !DILocation(line: 544, column: 9, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3997, file: !295, line: 544, column: 9)
!3997 = distinct !DILexicalBlock(scope: !3998, file: !295, line: 544, column: 9)
!3998 = distinct !DILexicalBlock(scope: !3993, file: !295, line: 543, column: 30)
!3999 = distinct !{!3999, !3995, !3995}
!4000 = !DILocation(line: 546, column: 5, scope: !3979)
!4001 = !DILocation(line: 548, column: 9, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3979, file: !295, line: 548, column: 9)
!4003 = !DILocation(line: 548, column: 14, scope: !4002)
!4004 = !DILocation(line: 549, column: 17, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4002, file: !295, line: 548, column: 27)
!4006 = !DILocation(line: 549, column: 9, scope: !4005)
!4007 = !DILocation(line: 550, column: 5, scope: !4005)
!4008 = !DILocation(line: 551, column: 12, scope: !3979)
!4009 = !DILocation(line: 552, column: 1, scope: !3979)
!4010 = !DILocation(line: 551, column: 5, scope: !3979)
!4011 = distinct !DISubprogram(name: "flash_suspend_Winbond", scope: !314, file: !314, line: 186, type: !181, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !2135)
!4012 = !DILocation(line: 188, column: 5, scope: !4011)
!4013 = !DILocation(line: 189, column: 5, scope: !4011)
!4014 = distinct !DISubprogram(name: "flash_resume_Winbond", scope: !314, file: !314, line: 195, type: !181, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !2135)
!4015 = !DILocation(line: 197, column: 5, scope: !4014)
!4016 = !DILocation(line: 198, column: 5, scope: !4014)
!4017 = distinct !DISubprogram(name: "flash_check_device", scope: !314, file: !314, line: 276, type: !996, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4018)
!4018 = !{!4019, !4020, !4021, !4023}
!4019 = !DILocalVariable(name: "i", scope: !4017, file: !314, line: 278, type: !53)
!4020 = !DILocalVariable(name: "jedec", scope: !4017, file: !314, line: 279, type: !325)
!4021 = !DILocalVariable(name: "buf", scope: !4017, file: !314, line: 280, type: !4022)
!4022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 40, elements: !701)
!4023 = !DILocalVariable(name: "info", scope: !4017, file: !314, line: 281, type: !326)
!4024 = !DILocation(line: 280, column: 5, scope: !4017)
!4025 = !DILocation(line: 280, column: 19, scope: !4017)
!4026 = !DILocation(line: 283, column: 5, scope: !4017)
!4027 = !DILocation(line: 284, column: 45, scope: !4017)
!4028 = !DILocation(line: 284, column: 30, scope: !4017)
!4029 = !DILocation(line: 284, column: 52, scope: !4017)
!4030 = !DILocation(line: 284, column: 77, scope: !4017)
!4031 = !DILocation(line: 284, column: 62, scope: !4017)
!4032 = !DILocation(line: 284, column: 84, scope: !4017)
!4033 = !DILocation(line: 284, column: 59, scope: !4017)
!4034 = !DILocation(line: 0, scope: !4017)
!4035 = !DILocation(line: 286, column: 23, scope: !4017)
!4036 = !DILocation(line: 286, column: 21, scope: !4017)
!4037 = !DILocation(line: 288, column: 5, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4017, file: !314, line: 288, column: 5)
!4039 = !DILocation(line: 290, column: 19, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !4041, file: !314, line: 290, column: 13)
!4041 = distinct !DILexicalBlock(scope: !4042, file: !314, line: 288, column: 70)
!4042 = distinct !DILexicalBlock(scope: !4038, file: !314, line: 288, column: 5)
!4043 = !DILocation(line: 290, column: 22, scope: !4040)
!4044 = !DILocation(line: 290, column: 32, scope: !4040)
!4045 = !DILocation(line: 290, column: 41, scope: !4040)
!4046 = !DILocation(line: 290, column: 50, scope: !4040)
!4047 = !DILocation(line: 290, column: 13, scope: !4041)
!4048 = !DILocation(line: 289, column: 17, scope: !4041)
!4049 = !DILocation(line: 291, column: 27, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4040, file: !314, line: 290, column: 60)
!4051 = !DILocation(line: 292, column: 26, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4050, file: !314, line: 292, column: 17)
!4053 = !DILocation(line: 292, column: 17, scope: !4050)
!4054 = !DILocation(line: 294, column: 33, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4052, file: !314, line: 294, column: 24)
!4056 = !DILocation(line: 294, column: 24, scope: !4052)
!4057 = !DILocation(line: 296, column: 33, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4055, file: !314, line: 296, column: 24)
!4059 = !DILocation(line: 296, column: 24, scope: !4055)
!4060 = !DILocation(line: 298, column: 31, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !314, line: 298, column: 20)
!4062 = distinct !DILexicalBlock(scope: !4058, file: !314, line: 296, column: 48)
!4063 = !DILocation(line: 298, column: 49, scope: !4061)
!4064 = !DILocation(line: 0, scope: !4061)
!4065 = !DILocation(line: 303, column: 13, scope: !4062)
!4066 = !DILocation(line: 303, column: 33, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4058, file: !314, line: 303, column: 24)
!4068 = !DILocation(line: 303, column: 24, scope: !4058)
!4069 = !DILocation(line: 0, scope: !4052)
!4070 = !DILocation(line: 308, column: 30, scope: !4050)
!4071 = !DILocation(line: 288, column: 66, scope: !4042)
!4072 = !DILocation(line: 288, column: 19, scope: !4042)
!4073 = distinct !{!4073, !4037, !4074}
!4074 = !DILocation(line: 311, column: 5, scope: !4038)
!4075 = !DILocation(line: 313, column: 19, scope: !4017)
!4076 = !DILocation(line: 315, column: 9, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4017, file: !314, line: 315, column: 9)
!4078 = !DILocation(line: 315, column: 26, scope: !4077)
!4079 = !DILocation(line: 315, column: 9, scope: !4017)
!4080 = !DILocation(line: 316, column: 51, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4077, file: !314, line: 315, column: 47)
!4082 = !DILocation(line: 316, column: 23, scope: !4081)
!4083 = !DILocation(line: 318, column: 19, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4081, file: !314, line: 318, column: 13)
!4085 = !DILocation(line: 318, column: 25, scope: !4084)
!4086 = !DILocation(line: 318, column: 22, scope: !4084)
!4087 = !DILocation(line: 318, column: 32, scope: !4084)
!4088 = !DILocation(line: 318, column: 41, scope: !4084)
!4089 = !DILocation(line: 318, column: 50, scope: !4084)
!4090 = !DILocation(line: 318, column: 13, scope: !4081)
!4091 = !DILocation(line: 322, column: 13, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4084, file: !314, line: 321, column: 16)
!4093 = !DILocation(line: 323, column: 13, scope: !4092)
!4094 = !DILocation(line: 325, column: 5, scope: !4081)
!4095 = !DILocation(line: 329, column: 1, scope: !4017)
!4096 = distinct !DISubprogram(name: "flash_read_jedec_id", scope: !314, file: !314, line: 495, type: !4097, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4099)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{!53, !307, !53}
!4099 = !{!4100, !4101, !4102, !4103}
!4100 = !DILocalVariable(name: "buf", arg: 1, scope: !4096, file: !314, line: 495, type: !307)
!4101 = !DILocalVariable(name: "buf_size", arg: 2, scope: !4096, file: !314, line: 495, type: !53)
!4102 = !DILocalVariable(name: "code", scope: !4096, file: !314, line: 497, type: !132)
!4103 = !DILocalVariable(name: "rc", scope: !4096, file: !314, line: 498, type: !53)
!4104 = !DILocation(line: 0, scope: !4096)
!4105 = !DILocation(line: 497, column: 5, scope: !4096)
!4106 = !DILocation(line: 499, column: 10, scope: !4096)
!4107 = !DILocation(line: 500, column: 10, scope: !4096)
!4108 = !DILocation(line: 503, column: 1, scope: !4096)
!4109 = !DILocation(line: 502, column: 5, scope: !4096)
!4110 = distinct !DISubprogram(name: "flash_switch_mode", scope: !314, file: !314, line: 331, type: !4111, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4113)
!4111 = !DISubroutineType(types: !4112)
!4112 = !{null, !325}
!4113 = !{!4114}
!4114 = !DILocalVariable(name: "mode", arg: 1, scope: !4110, file: !314, line: 331, type: !325)
!4115 = !DILocation(line: 0, scope: !4110)
!4116 = !DILocation(line: 333, column: 9, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4110, file: !314, line: 333, column: 9)
!4118 = !DILocation(line: 333, column: 34, scope: !4117)
!4119 = !DILocation(line: 333, column: 9, scope: !4110)
!4120 = !DILocation(line: 335, column: 26, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4117, file: !314, line: 333, column: 43)
!4122 = !DILocation(line: 336, column: 5, scope: !4121)
!4123 = !DILocation(line: 338, column: 5, scope: !4110)
!4124 = !DILocation(line: 339, column: 5, scope: !4110)
!4125 = !DILocation(line: 341, column: 9, scope: !4110)
!4126 = !DILocation(line: 342, column: 9, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !314, line: 341, column: 22)
!4128 = distinct !DILexicalBlock(scope: !4110, file: !314, line: 341, column: 9)
!4129 = !DILocation(line: 343, column: 5, scope: !4127)
!4130 = !DILocation(line: 344, column: 12, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !314, line: 344, column: 12)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !314, line: 343, column: 30)
!4133 = distinct !DILexicalBlock(scope: !4128, file: !314, line: 343, column: 16)
!4134 = !DILocation(line: 344, column: 29, scope: !4131)
!4135 = !DILocation(line: 344, column: 12, scope: !4132)
!4136 = !DILocation(line: 345, column: 13, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4131, file: !314, line: 344, column: 48)
!4138 = !DILocation(line: 346, column: 9, scope: !4137)
!4139 = !DILocation(line: 347, column: 13, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4131, file: !314, line: 346, column: 16)
!4141 = !DILocation(line: 350, column: 9, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !314, line: 349, column: 29)
!4143 = distinct !DILexicalBlock(scope: !4133, file: !314, line: 349, column: 16)
!4144 = !DILocation(line: 352, column: 9, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !314, line: 352, column: 9)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !314, line: 352, column: 9)
!4147 = distinct !DILexicalBlock(scope: !4143, file: !314, line: 351, column: 12)
!4148 = distinct !{!4148, !4144, !4144}
!4149 = !DILocation(line: 354, column: 21, scope: !4110)
!4150 = !DILocation(line: 355, column: 1, scope: !4110)
!4151 = distinct !DISubprogram(name: "flash_Switch_Device_Mode", scope: !314, file: !314, line: 215, type: !2198, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4152)
!4152 = !{!4153, !4154}
!4153 = !DILocalVariable(name: "mode", arg: 1, scope: !4151, file: !314, line: 215, type: !136)
!4154 = !DILocalVariable(name: "ptr", scope: !4151, file: !314, line: 217, type: !323)
!4155 = !DILocation(line: 0, scope: !4151)
!4156 = !DILocation(line: 220, column: 5, scope: !4151)
!4157 = !DILocation(line: 223, column: 17, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !314, line: 223, column: 17)
!4159 = distinct !DILexicalBlock(scope: !4151, file: !314, line: 220, column: 19)
!4160 = !DILocation(line: 223, column: 17, scope: !4159)
!4161 = !DILocation(line: 227, column: 22, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4163, file: !314, line: 227, column: 22)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !314, line: 225, column: 55)
!4164 = distinct !DILexicalBlock(scope: !4158, file: !314, line: 225, column: 23)
!4165 = !DILocation(line: 227, column: 37, scope: !4162)
!4166 = !DILocation(line: 227, column: 22, scope: !4163)
!4167 = !DILocation(line: 230, column: 13, scope: !4163)
!4168 = !DILocation(line: 232, column: 13, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !314, line: 230, column: 59)
!4170 = distinct !DILexicalBlock(scope: !4164, file: !314, line: 230, column: 24)
!4171 = !DILocation(line: 233, column: 23, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4173, file: !314, line: 232, column: 61)
!4173 = distinct !DILexicalBlock(scope: !4170, file: !314, line: 232, column: 24)
!4174 = !DILocation(line: 234, column: 13, scope: !4172)
!4175 = !DILocation(line: 239, column: 17, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4159, file: !314, line: 239, column: 17)
!4177 = !DILocation(line: 239, column: 17, scope: !4159)
!4178 = !DILocation(line: 243, column: 22, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4180, file: !314, line: 243, column: 22)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !314, line: 241, column: 55)
!4181 = distinct !DILexicalBlock(scope: !4176, file: !314, line: 241, column: 23)
!4182 = !DILocation(line: 243, column: 37, scope: !4179)
!4183 = !DILocation(line: 243, column: 22, scope: !4180)
!4184 = !DILocation(line: 246, column: 13, scope: !4180)
!4185 = !DILocation(line: 248, column: 13, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !314, line: 246, column: 59)
!4187 = distinct !DILexicalBlock(scope: !4181, file: !314, line: 246, column: 24)
!4188 = !DILocation(line: 249, column: 23, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4190, file: !314, line: 248, column: 61)
!4190 = distinct !DILexicalBlock(scope: !4187, file: !314, line: 248, column: 24)
!4191 = !DILocation(line: 250, column: 13, scope: !4189)
!4192 = !DILocation(line: 254, column: 17, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4159, file: !314, line: 254, column: 17)
!4194 = !DILocation(line: 254, column: 17, scope: !4159)
!4195 = !DILocation(line: 258, column: 22, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !314, line: 258, column: 22)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !314, line: 256, column: 55)
!4198 = distinct !DILexicalBlock(scope: !4193, file: !314, line: 256, column: 23)
!4199 = !DILocation(line: 258, column: 37, scope: !4196)
!4200 = !DILocation(line: 258, column: 22, scope: !4197)
!4201 = !DILocation(line: 261, column: 13, scope: !4197)
!4202 = !DILocation(line: 263, column: 13, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4204, file: !314, line: 261, column: 59)
!4204 = distinct !DILexicalBlock(scope: !4198, file: !314, line: 261, column: 24)
!4205 = !DILocation(line: 264, column: 23, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4207, file: !314, line: 263, column: 61)
!4207 = distinct !DILexicalBlock(scope: !4204, file: !314, line: 263, column: 24)
!4208 = !DILocation(line: 265, column: 13, scope: !4206)
!4209 = !DILocation(line: 268, column: 13, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !314, line: 268, column: 13)
!4211 = distinct !DILexicalBlock(scope: !4159, file: !314, line: 268, column: 13)
!4212 = distinct !{!4212, !4209, !4209}
!4213 = !DILocation(line: 272, column: 5, scope: !4151)
!4214 = !DILocation(line: 0, scope: !4159)
!4215 = !DILocation(line: 273, column: 1, scope: !4151)
!4216 = distinct !DISubprogram(name: "flash_config", scope: !314, file: !314, line: 357, type: !181, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4217)
!4217 = !{!4218, !4219, !4220, !4221}
!4218 = !DILocalVariable(name: "i", scope: !4216, file: !314, line: 360, type: !53)
!4219 = !DILocalVariable(name: "jedec", scope: !4216, file: !314, line: 361, type: !325)
!4220 = !DILocalVariable(name: "buf", scope: !4216, file: !314, line: 362, type: !4022)
!4221 = !DILocalVariable(name: "info", scope: !4216, file: !314, line: 363, type: !326)
!4222 = !DILocation(line: 362, column: 5, scope: !4216)
!4223 = !DILocation(line: 362, column: 19, scope: !4216)
!4224 = !DILocation(line: 377, column: 26, scope: !4216)
!4225 = !DILocation(line: 377, column: 24, scope: !4216)
!4226 = !DILocation(line: 380, column: 19, scope: !4216)
!4227 = !DILocation(line: 382, column: 5, scope: !4216)
!4228 = !DILocation(line: 383, column: 45, scope: !4216)
!4229 = !DILocation(line: 383, column: 30, scope: !4216)
!4230 = !DILocation(line: 383, column: 52, scope: !4216)
!4231 = !DILocation(line: 383, column: 77, scope: !4216)
!4232 = !DILocation(line: 383, column: 62, scope: !4216)
!4233 = !DILocation(line: 383, column: 84, scope: !4216)
!4234 = !DILocation(line: 383, column: 59, scope: !4216)
!4235 = !DILocation(line: 0, scope: !4216)
!4236 = !DILocation(line: 385, column: 5, scope: !4216)
!4237 = !DILocation(line: 387, column: 5, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4216, file: !314, line: 387, column: 5)
!4239 = !DILocation(line: 388, column: 17, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !314, line: 387, column: 70)
!4241 = distinct !DILexicalBlock(scope: !4238, file: !314, line: 387, column: 5)
!4242 = !DILocation(line: 389, column: 19, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4240, file: !314, line: 389, column: 13)
!4244 = !DILocation(line: 389, column: 25, scope: !4243)
!4245 = !DILocation(line: 389, column: 22, scope: !4243)
!4246 = !DILocation(line: 389, column: 32, scope: !4243)
!4247 = !DILocation(line: 389, column: 41, scope: !4243)
!4248 = !DILocation(line: 389, column: 50, scope: !4243)
!4249 = !DILocation(line: 389, column: 13, scope: !4240)
!4250 = !DILocation(line: 390, column: 13, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4243, file: !314, line: 389, column: 60)
!4252 = !DILocation(line: 391, column: 27, scope: !4251)
!4253 = !DILocation(line: 392, column: 26, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4251, file: !314, line: 392, column: 17)
!4255 = !DILocation(line: 392, column: 17, scope: !4251)
!4256 = !DILocation(line: 394, column: 33, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4254, file: !314, line: 394, column: 24)
!4258 = !DILocation(line: 394, column: 24, scope: !4254)
!4259 = !DILocation(line: 396, column: 33, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4257, file: !314, line: 396, column: 24)
!4261 = !DILocation(line: 396, column: 24, scope: !4257)
!4262 = !DILocation(line: 398, column: 33, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4260, file: !314, line: 398, column: 24)
!4264 = !DILocation(line: 398, column: 24, scope: !4260)
!4265 = !DILocation(line: 399, column: 34, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4263, file: !314, line: 398, column: 52)
!4267 = !DILocation(line: 404, column: 9, scope: !4216)
!4268 = !DILocation(line: 0, scope: !4254)
!4269 = !DILocation(line: 387, column: 66, scope: !4241)
!4270 = !DILocation(line: 387, column: 19, scope: !4241)
!4271 = distinct !{!4271, !4237, !4272}
!4272 = !DILocation(line: 402, column: 5, scope: !4238)
!4273 = !DILocation(line: 404, column: 9, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4216, file: !314, line: 404, column: 9)
!4275 = !DILocation(line: 404, column: 26, scope: !4274)
!4276 = !DILocation(line: 405, column: 51, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4274, file: !314, line: 404, column: 47)
!4278 = !DILocation(line: 405, column: 23, scope: !4277)
!4279 = !DILocation(line: 407, column: 19, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4277, file: !314, line: 407, column: 13)
!4281 = !DILocation(line: 407, column: 25, scope: !4280)
!4282 = !DILocation(line: 407, column: 22, scope: !4280)
!4283 = !DILocation(line: 407, column: 32, scope: !4280)
!4284 = !DILocation(line: 407, column: 41, scope: !4280)
!4285 = !DILocation(line: 407, column: 50, scope: !4280)
!4286 = !DILocation(line: 407, column: 13, scope: !4277)
!4287 = !DILocation(line: 411, column: 13, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4280, file: !314, line: 410, column: 16)
!4289 = !DILocation(line: 412, column: 13, scope: !4288)
!4290 = !DILocation(line: 414, column: 5, scope: !4277)
!4291 = !DILocation(line: 416, column: 10, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4216, file: !314, line: 416, column: 9)
!4293 = !DILocation(line: 416, column: 9, scope: !4216)
!4294 = !DILocation(line: 417, column: 9, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4292, file: !314, line: 416, column: 25)
!4296 = !DILocation(line: 419, column: 23, scope: !4295)
!4297 = !DILocation(line: 420, column: 5, scope: !4295)
!4298 = !DILocation(line: 422, column: 1, scope: !4216)
!4299 = distinct !DISubprogram(name: "flash_init", scope: !314, file: !314, line: 425, type: !1249, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4300)
!4300 = !{!4301, !4302, !4303, !4304, !4305}
!4301 = !DILocalVariable(name: "security_enable", arg: 1, scope: !4299, file: !314, line: 425, type: !53)
!4302 = !DILocalVariable(name: "i", scope: !4299, file: !314, line: 427, type: !53)
!4303 = !DILocalVariable(name: "jedec", scope: !4299, file: !314, line: 428, type: !325)
!4304 = !DILocalVariable(name: "buf", scope: !4299, file: !314, line: 429, type: !4022)
!4305 = !DILocalVariable(name: "info", scope: !4299, file: !314, line: 430, type: !326)
!4306 = !DILocation(line: 0, scope: !4299)
!4307 = !DILocation(line: 429, column: 5, scope: !4299)
!4308 = !DILocation(line: 429, column: 19, scope: !4299)
!4309 = !DILocation(line: 436, column: 5, scope: !4299)
!4310 = !DILocation(line: 438, column: 26, scope: !4299)
!4311 = !DILocation(line: 438, column: 24, scope: !4299)
!4312 = !DILocation(line: 440, column: 5, scope: !4299)
!4313 = !DILocation(line: 442, column: 19, scope: !4299)
!4314 = !DILocation(line: 444, column: 5, scope: !4299)
!4315 = !DILocation(line: 445, column: 45, scope: !4299)
!4316 = !DILocation(line: 445, column: 30, scope: !4299)
!4317 = !DILocation(line: 445, column: 52, scope: !4299)
!4318 = !DILocation(line: 445, column: 77, scope: !4299)
!4319 = !DILocation(line: 445, column: 62, scope: !4299)
!4320 = !DILocation(line: 445, column: 84, scope: !4299)
!4321 = !DILocation(line: 445, column: 59, scope: !4299)
!4322 = !DILocation(line: 447, column: 5, scope: !4299)
!4323 = !DILocation(line: 449, column: 5, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4299, file: !314, line: 449, column: 5)
!4325 = !DILocation(line: 450, column: 17, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !314, line: 449, column: 70)
!4327 = distinct !DILexicalBlock(scope: !4324, file: !314, line: 449, column: 5)
!4328 = !DILocation(line: 451, column: 19, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4326, file: !314, line: 451, column: 13)
!4330 = !DILocation(line: 451, column: 25, scope: !4329)
!4331 = !DILocation(line: 451, column: 22, scope: !4329)
!4332 = !DILocation(line: 451, column: 32, scope: !4329)
!4333 = !DILocation(line: 451, column: 41, scope: !4329)
!4334 = !DILocation(line: 451, column: 50, scope: !4329)
!4335 = !DILocation(line: 451, column: 13, scope: !4326)
!4336 = !DILocation(line: 452, column: 13, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4329, file: !314, line: 451, column: 60)
!4338 = !DILocation(line: 453, column: 27, scope: !4337)
!4339 = !DILocation(line: 454, column: 9, scope: !4337)
!4340 = !DILocation(line: 449, column: 66, scope: !4327)
!4341 = !DILocation(line: 449, column: 19, scope: !4327)
!4342 = distinct !{!4342, !4323, !4343}
!4343 = !DILocation(line: 455, column: 5, scope: !4324)
!4344 = !DILocation(line: 457, column: 10, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4299, file: !314, line: 457, column: 9)
!4346 = !DILocation(line: 457, column: 9, scope: !4299)
!4347 = !DILocation(line: 458, column: 9, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4345, file: !314, line: 457, column: 25)
!4349 = !DILocation(line: 460, column: 23, scope: !4348)
!4350 = !DILocation(line: 461, column: 5, scope: !4348)
!4351 = !DILocation(line: 462, column: 1, scope: !4299)
!4352 = distinct !DISubprogram(name: "flash_reset", scope: !314, file: !314, line: 170, type: !181, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !2135)
!4353 = !DILocation(line: 172, column: 5, scope: !4352)
!4354 = !DILocation(line: 173, column: 5, scope: !4352)
!4355 = !DILocation(line: 176, column: 5, scope: !4352)
!4356 = !DILocation(line: 177, column: 5, scope: !4352)
!4357 = !DILocation(line: 179, column: 5, scope: !4352)
!4358 = distinct !DISubprogram(name: "flash_wait_ready", scope: !314, file: !314, line: 469, type: !1001, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4359)
!4359 = !{!4360, !4361, !4362}
!4360 = !DILocalVariable(name: "sleep_ms", arg: 1, scope: !4358, file: !314, line: 469, type: !53)
!4361 = !DILocalVariable(name: "count", scope: !4358, file: !314, line: 471, type: !53)
!4362 = !DILocalVariable(name: "sr", scope: !4358, file: !314, line: 472, type: !132)
!4363 = !DILocation(line: 0, scope: !4358)
!4364 = !DILocation(line: 472, column: 5, scope: !4358)
!4365 = !DILocation(line: 472, column: 19, scope: !4358)
!4366 = !DILocation(line: 479, column: 28, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !314, line: 479, column: 5)
!4368 = distinct !DILexicalBlock(scope: !4358, file: !314, line: 479, column: 5)
!4369 = !DILocation(line: 479, column: 5, scope: !4368)
!4370 = !DILocation(line: 480, column: 14, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4372, file: !314, line: 480, column: 13)
!4372 = distinct !DILexicalBlock(scope: !4367, file: !314, line: 479, column: 64)
!4373 = !DILocation(line: 480, column: 34, scope: !4371)
!4374 = !DILocation(line: 480, column: 13, scope: !4372)
!4375 = !DILocation(line: 482, column: 22, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4371, file: !314, line: 482, column: 20)
!4377 = !DILocation(line: 482, column: 25, scope: !4376)
!4378 = !DILocation(line: 482, column: 20, scope: !4371)
!4379 = !DILocation(line: 493, column: 1, scope: !4358)
!4380 = !DILocation(line: 483, column: 13, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4376, file: !314, line: 482, column: 36)
!4382 = !DILocation(line: 486, column: 9, scope: !4372)
!4383 = !DILocation(line: 479, column: 60, scope: !4367)
!4384 = distinct !{!4384, !4369, !4385}
!4385 = !DILocation(line: 488, column: 5, scope: !4368)
!4386 = !DILocation(line: 491, column: 5, scope: !4358)
!4387 = distinct !DISubprogram(name: "flash_read_sr", scope: !314, file: !314, line: 623, type: !4388, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4390)
!4388 = !DISubroutineType(types: !4389)
!4389 = !{!53, !307}
!4390 = !{!4391, !4392, !4393}
!4391 = !DILocalVariable(name: "val", arg: 1, scope: !4387, file: !314, line: 623, type: !307)
!4392 = !DILocalVariable(name: "retval", scope: !4387, file: !314, line: 625, type: !53)
!4393 = !DILocalVariable(name: "code", scope: !4387, file: !314, line: 626, type: !132)
!4394 = !DILocation(line: 0, scope: !4387)
!4395 = !DILocation(line: 626, column: 5, scope: !4387)
!4396 = !DILocation(line: 626, column: 19, scope: !4387)
!4397 = !DILocation(line: 628, column: 14, scope: !4387)
!4398 = !DILocation(line: 629, column: 16, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4387, file: !314, line: 629, column: 9)
!4400 = !DILocation(line: 634, column: 1, scope: !4387)
!4401 = distinct !DISubprogram(name: "flash_read_manu_id", scope: !314, file: !314, line: 505, type: !4097, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4402)
!4402 = !{!4403, !4404, !4405, !4406}
!4403 = !DILocalVariable(name: "buf", arg: 1, scope: !4401, file: !314, line: 505, type: !307)
!4404 = !DILocalVariable(name: "buf_size", arg: 2, scope: !4401, file: !314, line: 505, type: !53)
!4405 = !DILocalVariable(name: "code", scope: !4401, file: !314, line: 507, type: !359)
!4406 = !DILocalVariable(name: "rc", scope: !4401, file: !314, line: 508, type: !53)
!4407 = !DILocation(line: 0, scope: !4401)
!4408 = !DILocation(line: 507, column: 5, scope: !4401)
!4409 = !DILocation(line: 507, column: 19, scope: !4401)
!4410 = !DILocation(line: 510, column: 10, scope: !4401)
!4411 = !DILocation(line: 513, column: 1, scope: !4401)
!4412 = !DILocation(line: 512, column: 5, scope: !4401)
!4413 = distinct !DISubprogram(name: "flash_read_manu_id_quad", scope: !314, file: !314, line: 515, type: !4097, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4414)
!4414 = !{!4415, !4416, !4417, !4418}
!4415 = !DILocalVariable(name: "buf", arg: 1, scope: !4413, file: !314, line: 515, type: !307)
!4416 = !DILocalVariable(name: "buf_size", arg: 2, scope: !4413, file: !314, line: 515, type: !53)
!4417 = !DILocalVariable(name: "code", scope: !4413, file: !314, line: 517, type: !359)
!4418 = !DILocalVariable(name: "rc", scope: !4413, file: !314, line: 518, type: !53)
!4419 = !DILocation(line: 0, scope: !4413)
!4420 = !DILocation(line: 517, column: 5, scope: !4413)
!4421 = !DILocation(line: 517, column: 19, scope: !4413)
!4422 = !DILocation(line: 520, column: 10, scope: !4413)
!4423 = !DILocation(line: 523, column: 1, scope: !4413)
!4424 = !DILocation(line: 522, column: 5, scope: !4413)
!4425 = distinct !DISubprogram(name: "flash_read", scope: !314, file: !314, line: 526, type: !4426, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4428)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!53, !307, !7, !53}
!4428 = !{!4429, !4430, !4431, !4432, !4433}
!4429 = !DILocalVariable(name: "buf", arg: 1, scope: !4425, file: !314, line: 526, type: !307)
!4430 = !DILocalVariable(name: "from", arg: 2, scope: !4425, file: !314, line: 526, type: !7)
!4431 = !DILocalVariable(name: "len", arg: 3, scope: !4425, file: !314, line: 526, type: !53)
!4432 = !DILocalVariable(name: "cmd", scope: !4425, file: !314, line: 528, type: !359)
!4433 = !DILocalVariable(name: "rdlen", scope: !4425, file: !314, line: 529, type: !53)
!4434 = !DILocation(line: 0, scope: !4425)
!4435 = !DILocation(line: 528, column: 5, scope: !4425)
!4436 = !DILocation(line: 528, column: 19, scope: !4425)
!4437 = !DILocation(line: 532, column: 13, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4425, file: !314, line: 532, column: 9)
!4439 = !DILocation(line: 532, column: 9, scope: !4425)
!4440 = !DILocation(line: 537, column: 9, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4425, file: !314, line: 537, column: 9)
!4442 = !DILocation(line: 542, column: 22, scope: !4425)
!4443 = !DILocation(line: 543, column: 12, scope: !4425)
!4444 = !DILocation(line: 544, column: 19, scope: !4425)
!4445 = !DILocation(line: 544, column: 14, scope: !4425)
!4446 = !DILocation(line: 544, column: 5, scope: !4425)
!4447 = !DILocation(line: 544, column: 12, scope: !4425)
!4448 = !DILocation(line: 545, column: 19, scope: !4425)
!4449 = !DILocation(line: 545, column: 14, scope: !4425)
!4450 = !DILocation(line: 545, column: 5, scope: !4425)
!4451 = !DILocation(line: 545, column: 12, scope: !4425)
!4452 = !DILocation(line: 546, column: 14, scope: !4425)
!4453 = !DILocation(line: 546, column: 5, scope: !4425)
!4454 = !DILocation(line: 546, column: 12, scope: !4425)
!4455 = !DILocation(line: 548, column: 13, scope: !4425)
!4456 = !DILocation(line: 553, column: 5, scope: !4425)
!4457 = !DILocation(line: 554, column: 1, scope: !4425)
!4458 = distinct !DISubprogram(name: "flash_fast_read", scope: !314, file: !314, line: 557, type: !4459, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4461)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{!53, !307, !7, !53, !53}
!4461 = !{!4462, !4463, !4464, !4465, !4466, !4468, !4469, !4470}
!4462 = !DILocalVariable(name: "buf", arg: 1, scope: !4458, file: !314, line: 557, type: !307)
!4463 = !DILocalVariable(name: "from", arg: 2, scope: !4458, file: !314, line: 557, type: !7)
!4464 = !DILocalVariable(name: "len", arg: 3, scope: !4458, file: !314, line: 557, type: !53)
!4465 = !DILocalVariable(name: "dummy_cycle", arg: 4, scope: !4458, file: !314, line: 557, type: !53)
!4466 = !DILocalVariable(name: "cmd", scope: !4458, file: !314, line: 559, type: !4467)
!4467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 256, elements: !1259)
!4468 = !DILocalVariable(name: "cmd_len", scope: !4458, file: !314, line: 560, type: !53)
!4469 = !DILocalVariable(name: "rdlen", scope: !4458, file: !314, line: 561, type: !53)
!4470 = !DILocalVariable(name: "i", scope: !4458, file: !314, line: 561, type: !53)
!4471 = !DILocation(line: 0, scope: !4458)
!4472 = !DILocation(line: 559, column: 5, scope: !4458)
!4473 = !DILocation(line: 559, column: 19, scope: !4458)
!4474 = !DILocation(line: 564, column: 13, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4458, file: !314, line: 564, column: 9)
!4476 = !DILocation(line: 564, column: 9, scope: !4458)
!4477 = !DILocation(line: 569, column: 9, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4458, file: !314, line: 569, column: 9)
!4479 = !DILocation(line: 574, column: 12, scope: !4458)
!4480 = !DILocation(line: 575, column: 19, scope: !4458)
!4481 = !DILocation(line: 575, column: 14, scope: !4458)
!4482 = !DILocation(line: 575, column: 5, scope: !4458)
!4483 = !DILocation(line: 575, column: 12, scope: !4458)
!4484 = !DILocation(line: 576, column: 19, scope: !4458)
!4485 = !DILocation(line: 576, column: 14, scope: !4458)
!4486 = !DILocation(line: 576, column: 5, scope: !4458)
!4487 = !DILocation(line: 576, column: 12, scope: !4458)
!4488 = !DILocation(line: 577, column: 14, scope: !4458)
!4489 = !DILocation(line: 577, column: 5, scope: !4458)
!4490 = !DILocation(line: 577, column: 12, scope: !4458)
!4491 = !DILocation(line: 580, column: 19, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !314, line: 580, column: 5)
!4493 = distinct !DILexicalBlock(scope: !4458, file: !314, line: 580, column: 5)
!4494 = !DILocation(line: 580, column: 5, scope: !4493)
!4495 = !DILocation(line: 581, column: 15, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4492, file: !314, line: 580, column: 62)
!4497 = !DILocation(line: 581, column: 9, scope: !4496)
!4498 = !DILocation(line: 581, column: 20, scope: !4496)
!4499 = !DILocation(line: 580, column: 58, scope: !4492)
!4500 = !DILocation(line: 580, column: 33, scope: !4492)
!4501 = distinct !{!4501, !4494, !4502}
!4502 = !DILocation(line: 583, column: 5, scope: !4493)
!4503 = !DILocation(line: 585, column: 13, scope: !4458)
!4504 = !DILocation(line: 590, column: 5, scope: !4458)
!4505 = !DILocation(line: 591, column: 1, scope: !4458)
!4506 = distinct !DISubprogram(name: "flash_read_sr2", scope: !314, file: !314, line: 636, type: !4388, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4507)
!4507 = !{!4508, !4509, !4510}
!4508 = !DILocalVariable(name: "val", arg: 1, scope: !4506, file: !314, line: 636, type: !307)
!4509 = !DILocalVariable(name: "retval", scope: !4506, file: !314, line: 638, type: !53)
!4510 = !DILocalVariable(name: "code", scope: !4506, file: !314, line: 639, type: !132)
!4511 = !DILocation(line: 0, scope: !4506)
!4512 = !DILocation(line: 639, column: 5, scope: !4506)
!4513 = !DILocation(line: 641, column: 9, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !4506, file: !314, line: 641, column: 9)
!4515 = !DILocation(line: 641, column: 45, scope: !4514)
!4516 = !DILocation(line: 643, column: 14, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4514, file: !314, line: 641, column: 80)
!4518 = !DILocation(line: 644, column: 5, scope: !4517)
!4519 = !DILocation(line: 646, column: 14, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !314, line: 644, column: 50)
!4521 = distinct !DILexicalBlock(scope: !4514, file: !314, line: 644, column: 16)
!4522 = !DILocation(line: 647, column: 5, scope: !4520)
!4523 = !DILocation(line: 649, column: 14, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !314, line: 647, column: 52)
!4525 = distinct !DILexicalBlock(scope: !4521, file: !314, line: 647, column: 16)
!4526 = !DILocation(line: 650, column: 5, scope: !4524)
!4527 = !DILocation(line: 652, column: 16, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4529, file: !314, line: 650, column: 54)
!4529 = distinct !DILexicalBlock(scope: !4525, file: !314, line: 650, column: 16)
!4530 = !DILocation(line: 652, column: 14, scope: !4528)
!4531 = !DILocation(line: 653, column: 5, scope: !4528)
!4532 = !DILocation(line: 655, column: 9, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4529, file: !314, line: 654, column: 10)
!4534 = !DILocation(line: 656, column: 14, scope: !4533)
!4535 = !DILocation(line: 659, column: 14, scope: !4506)
!4536 = !DILocation(line: 660, column: 16, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4506, file: !314, line: 660, column: 9)
!4538 = !DILocation(line: 665, column: 1, scope: !4506)
!4539 = distinct !DISubprogram(name: "flash_unprotect", scope: !314, file: !314, line: 667, type: !996, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4540)
!4540 = !{!4541}
!4541 = !DILocalVariable(name: "sr", scope: !4539, file: !314, line: 669, type: !132)
!4542 = !DILocation(line: 669, column: 5, scope: !4539)
!4543 = !DILocation(line: 0, scope: !4539)
!4544 = !DILocation(line: 669, column: 19, scope: !4539)
!4545 = !DILocation(line: 671, column: 9, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4539, file: !314, line: 671, column: 9)
!4547 = !DILocation(line: 671, column: 28, scope: !4546)
!4548 = !DILocation(line: 671, column: 9, scope: !4539)
!4549 = !DILocation(line: 676, column: 10, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4539, file: !314, line: 676, column: 9)
!4551 = !DILocation(line: 676, column: 13, scope: !4550)
!4552 = !DILocation(line: 676, column: 43, scope: !4550)
!4553 = !DILocation(line: 676, column: 9, scope: !4539)
!4554 = !DILocation(line: 677, column: 12, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4550, file: !314, line: 676, column: 49)
!4556 = !DILocation(line: 678, column: 9, scope: !4555)
!4557 = !DILocation(line: 679, column: 5, scope: !4555)
!4558 = !DILocation(line: 681, column: 1, scope: !4539)
!4559 = distinct !DISubprogram(name: "flash_write_sr", scope: !314, file: !314, line: 609, type: !4388, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4560)
!4560 = !{!4561, !4562, !4563}
!4561 = !DILocalVariable(name: "val", arg: 1, scope: !4559, file: !314, line: 609, type: !307)
!4562 = !DILocalVariable(name: "retval", scope: !4559, file: !314, line: 611, type: !53)
!4563 = !DILocalVariable(name: "code", scope: !4559, file: !314, line: 612, type: !132)
!4564 = !DILocation(line: 0, scope: !4559)
!4565 = !DILocation(line: 612, column: 5, scope: !4559)
!4566 = !DILocation(line: 612, column: 20, scope: !4559)
!4567 = !DILocation(line: 614, column: 14, scope: !4559)
!4568 = !DILocation(line: 621, column: 1, scope: !4559)
!4569 = distinct !DISubprogram(name: "flash_protect", scope: !314, file: !314, line: 686, type: !996, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4570)
!4570 = !{!4571}
!4571 = !DILocalVariable(name: "sr", scope: !4569, file: !314, line: 688, type: !132)
!4572 = !DILocation(line: 688, column: 5, scope: !4569)
!4573 = !DILocation(line: 0, scope: !4569)
!4574 = !DILocation(line: 688, column: 19, scope: !4569)
!4575 = !DILocation(line: 690, column: 9, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4569, file: !314, line: 690, column: 9)
!4577 = !DILocation(line: 690, column: 28, scope: !4576)
!4578 = !DILocation(line: 690, column: 9, scope: !4569)
!4579 = !DILocation(line: 695, column: 8, scope: !4569)
!4580 = !DILocation(line: 696, column: 5, scope: !4569)
!4581 = !DILocation(line: 697, column: 5, scope: !4569)
!4582 = !DILocation(line: 698, column: 1, scope: !4569)
!4583 = distinct !DISubprogram(name: "flash_write_enable", scope: !314, file: !314, line: 701, type: !996, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4584)
!4584 = !{!4585}
!4585 = !DILocalVariable(name: "code", scope: !4583, file: !314, line: 703, type: !132)
!4586 = !DILocation(line: 703, column: 5, scope: !4583)
!4587 = !DILocation(line: 0, scope: !4583)
!4588 = !DILocation(line: 703, column: 19, scope: !4583)
!4589 = !DILocation(line: 704, column: 12, scope: !4583)
!4590 = !DILocation(line: 705, column: 1, scope: !4583)
!4591 = !DILocation(line: 704, column: 5, scope: !4583)
!4592 = distinct !DISubprogram(name: "flash_write_disable", scope: !314, file: !314, line: 707, type: !996, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4593)
!4593 = !{!4594}
!4594 = !DILocalVariable(name: "code", scope: !4592, file: !314, line: 709, type: !132)
!4595 = !DILocation(line: 709, column: 5, scope: !4592)
!4596 = !DILocation(line: 0, scope: !4592)
!4597 = !DILocation(line: 709, column: 19, scope: !4592)
!4598 = !DILocation(line: 710, column: 12, scope: !4592)
!4599 = !DILocation(line: 711, column: 1, scope: !4592)
!4600 = !DILocation(line: 710, column: 5, scope: !4592)
!4601 = distinct !DISubprogram(name: "flash_erase_sector", scope: !314, file: !314, line: 713, type: !4602, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4604)
!4602 = !DISubroutineType(types: !4603)
!4603 = !{!53, !7}
!4604 = !{!4605, !4606, !4607, !4608}
!4605 = !DILocalVariable(name: "offset", arg: 1, scope: !4601, file: !314, line: 713, type: !7)
!4606 = !DILocalVariable(name: "buf", scope: !4601, file: !314, line: 715, type: !4022)
!4607 = !DILocalVariable(name: "savedMask", scope: !4601, file: !314, line: 716, type: !136)
!4608 = !DILocalVariable(name: "result", scope: !4601, file: !314, line: 717, type: !640)
!4609 = !DILocation(line: 0, scope: !4601)
!4610 = !DILocation(line: 715, column: 5, scope: !4601)
!4611 = !DILocation(line: 715, column: 19, scope: !4601)
!4612 = !DILocation(line: 720, column: 9, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4601, file: !314, line: 720, column: 9)
!4614 = !DILocation(line: 724, column: 22, scope: !4601)
!4615 = !DILocation(line: 725, column: 5, scope: !4601)
!4616 = !DILocation(line: 726, column: 18, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4601, file: !314, line: 725, column: 8)
!4618 = !DILocation(line: 727, column: 19, scope: !4601)
!4619 = !DILocation(line: 727, column: 5, scope: !4617)
!4620 = distinct !{!4620, !4615, !4621}
!4621 = !DILocation(line: 727, column: 28, scope: !4601)
!4622 = !DILocation(line: 729, column: 17, scope: !4601)
!4623 = !DILocation(line: 732, column: 12, scope: !4601)
!4624 = !DILocation(line: 733, column: 21, scope: !4601)
!4625 = !DILocation(line: 733, column: 14, scope: !4601)
!4626 = !DILocation(line: 733, column: 5, scope: !4601)
!4627 = !DILocation(line: 733, column: 12, scope: !4601)
!4628 = !DILocation(line: 734, column: 21, scope: !4601)
!4629 = !DILocation(line: 734, column: 14, scope: !4601)
!4630 = !DILocation(line: 734, column: 5, scope: !4601)
!4631 = !DILocation(line: 734, column: 12, scope: !4601)
!4632 = !DILocation(line: 735, column: 14, scope: !4601)
!4633 = !DILocation(line: 735, column: 5, scope: !4601)
!4634 = !DILocation(line: 735, column: 12, scope: !4601)
!4635 = !DILocation(line: 736, column: 5, scope: !4601)
!4636 = !DILocation(line: 737, column: 5, scope: !4601)
!4637 = !DILocation(line: 738, column: 5, scope: !4601)
!4638 = !DILocation(line: 740, column: 5, scope: !4601)
!4639 = !DILocation(line: 741, column: 18, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4601, file: !314, line: 740, column: 8)
!4641 = !DILocation(line: 742, column: 19, scope: !4601)
!4642 = !DILocation(line: 742, column: 5, scope: !4640)
!4643 = distinct !{!4643, !4638, !4644}
!4644 = !DILocation(line: 742, column: 28, scope: !4601)
!4645 = !DILocation(line: 744, column: 5, scope: !4601)
!4646 = !DILocation(line: 746, column: 1, scope: !4601)
!4647 = distinct !DISubprogram(name: "flash_erase_sector_32k", scope: !314, file: !314, line: 748, type: !4602, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4648)
!4648 = !{!4649, !4650, !4651, !4652}
!4649 = !DILocalVariable(name: "offset", arg: 1, scope: !4647, file: !314, line: 748, type: !7)
!4650 = !DILocalVariable(name: "buf", scope: !4647, file: !314, line: 750, type: !4022)
!4651 = !DILocalVariable(name: "savedMask", scope: !4647, file: !314, line: 751, type: !136)
!4652 = !DILocalVariable(name: "result", scope: !4647, file: !314, line: 752, type: !640)
!4653 = !DILocation(line: 0, scope: !4647)
!4654 = !DILocation(line: 750, column: 5, scope: !4647)
!4655 = !DILocation(line: 750, column: 19, scope: !4647)
!4656 = !DILocation(line: 755, column: 9, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4647, file: !314, line: 755, column: 9)
!4658 = !DILocation(line: 759, column: 22, scope: !4647)
!4659 = !DILocation(line: 760, column: 5, scope: !4647)
!4660 = !DILocation(line: 761, column: 18, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4647, file: !314, line: 760, column: 8)
!4662 = !DILocation(line: 762, column: 19, scope: !4647)
!4663 = !DILocation(line: 762, column: 5, scope: !4661)
!4664 = distinct !{!4664, !4659, !4665}
!4665 = !DILocation(line: 762, column: 28, scope: !4647)
!4666 = !DILocation(line: 764, column: 17, scope: !4647)
!4667 = !DILocation(line: 765, column: 12, scope: !4647)
!4668 = !DILocation(line: 766, column: 21, scope: !4647)
!4669 = !DILocation(line: 766, column: 14, scope: !4647)
!4670 = !DILocation(line: 766, column: 5, scope: !4647)
!4671 = !DILocation(line: 766, column: 12, scope: !4647)
!4672 = !DILocation(line: 767, column: 21, scope: !4647)
!4673 = !DILocation(line: 767, column: 14, scope: !4647)
!4674 = !DILocation(line: 767, column: 5, scope: !4647)
!4675 = !DILocation(line: 767, column: 12, scope: !4647)
!4676 = !DILocation(line: 768, column: 14, scope: !4647)
!4677 = !DILocation(line: 768, column: 5, scope: !4647)
!4678 = !DILocation(line: 768, column: 12, scope: !4647)
!4679 = !DILocation(line: 769, column: 5, scope: !4647)
!4680 = !DILocation(line: 770, column: 5, scope: !4647)
!4681 = !DILocation(line: 771, column: 5, scope: !4647)
!4682 = !DILocation(line: 772, column: 18, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4647, file: !314, line: 771, column: 8)
!4684 = !DILocation(line: 773, column: 19, scope: !4647)
!4685 = !DILocation(line: 773, column: 5, scope: !4683)
!4686 = distinct !{!4686, !4681, !4687}
!4687 = !DILocation(line: 773, column: 28, scope: !4647)
!4688 = !DILocation(line: 775, column: 5, scope: !4647)
!4689 = !DILocation(line: 777, column: 5, scope: !4647)
!4690 = !DILocation(line: 779, column: 1, scope: !4647)
!4691 = distinct !DISubprogram(name: "flash_erase_page", scope: !314, file: !314, line: 781, type: !4602, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4692)
!4692 = !{!4693, !4694, !4695, !4696}
!4693 = !DILocalVariable(name: "offset", arg: 1, scope: !4691, file: !314, line: 781, type: !7)
!4694 = !DILocalVariable(name: "buf", scope: !4691, file: !314, line: 783, type: !4022)
!4695 = !DILocalVariable(name: "savedMask", scope: !4691, file: !314, line: 784, type: !136)
!4696 = !DILocalVariable(name: "result", scope: !4691, file: !314, line: 785, type: !640)
!4697 = !DILocation(line: 0, scope: !4691)
!4698 = !DILocation(line: 783, column: 5, scope: !4691)
!4699 = !DILocation(line: 783, column: 19, scope: !4691)
!4700 = !DILocation(line: 788, column: 9, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4691, file: !314, line: 788, column: 9)
!4702 = !DILocation(line: 792, column: 22, scope: !4691)
!4703 = !DILocation(line: 793, column: 5, scope: !4691)
!4704 = !DILocation(line: 794, column: 18, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4691, file: !314, line: 793, column: 8)
!4706 = !DILocation(line: 795, column: 19, scope: !4691)
!4707 = !DILocation(line: 795, column: 5, scope: !4705)
!4708 = distinct !{!4708, !4703, !4709}
!4709 = !DILocation(line: 795, column: 28, scope: !4691)
!4710 = !DILocation(line: 798, column: 17, scope: !4691)
!4711 = !DILocation(line: 799, column: 12, scope: !4691)
!4712 = !DILocation(line: 800, column: 21, scope: !4691)
!4713 = !DILocation(line: 800, column: 14, scope: !4691)
!4714 = !DILocation(line: 800, column: 5, scope: !4691)
!4715 = !DILocation(line: 800, column: 12, scope: !4691)
!4716 = !DILocation(line: 801, column: 21, scope: !4691)
!4717 = !DILocation(line: 801, column: 14, scope: !4691)
!4718 = !DILocation(line: 801, column: 5, scope: !4691)
!4719 = !DILocation(line: 801, column: 12, scope: !4691)
!4720 = !DILocation(line: 802, column: 14, scope: !4691)
!4721 = !DILocation(line: 802, column: 5, scope: !4691)
!4722 = !DILocation(line: 802, column: 12, scope: !4691)
!4723 = !DILocation(line: 803, column: 5, scope: !4691)
!4724 = !DILocation(line: 805, column: 5, scope: !4691)
!4725 = !DILocation(line: 806, column: 5, scope: !4691)
!4726 = !DILocation(line: 808, column: 5, scope: !4691)
!4727 = !DILocation(line: 809, column: 18, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4691, file: !314, line: 808, column: 8)
!4729 = !DILocation(line: 810, column: 19, scope: !4691)
!4730 = !DILocation(line: 810, column: 5, scope: !4728)
!4731 = distinct !{!4731, !4726, !4732}
!4732 = !DILocation(line: 810, column: 28, scope: !4691)
!4733 = !DILocation(line: 812, column: 5, scope: !4691)
!4734 = !DILocation(line: 814, column: 1, scope: !4691)
!4735 = distinct !DISubprogram(name: "flash_erase_chip", scope: !314, file: !314, line: 816, type: !996, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4736)
!4736 = !{!4737}
!4737 = !DILocalVariable(name: "buf", scope: !4735, file: !314, line: 818, type: !4022)
!4738 = !DILocation(line: 818, column: 5, scope: !4735)
!4739 = !DILocation(line: 818, column: 19, scope: !4735)
!4740 = !DILocation(line: 821, column: 9, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4735, file: !314, line: 821, column: 9)
!4742 = !DILocation(line: 825, column: 22, scope: !4735)
!4743 = !DILocation(line: 827, column: 5, scope: !4735)
!4744 = !DILocation(line: 828, column: 5, scope: !4735)
!4745 = !DILocation(line: 830, column: 12, scope: !4735)
!4746 = !DILocation(line: 832, column: 5, scope: !4735)
!4747 = !DILocation(line: 834, column: 9, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4735, file: !314, line: 834, column: 9)
!4749 = !DILocation(line: 838, column: 5, scope: !4735)
!4750 = !DILocation(line: 839, column: 22, scope: !4735)
!4751 = !DILocation(line: 841, column: 1, scope: !4735)
!4752 = distinct !DISubprogram(name: "flash_erase", scope: !314, file: !314, line: 844, type: !4753, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4755)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{!53, !7, !53}
!4755 = !{!4756, !4757}
!4756 = !DILocalVariable(name: "offs", arg: 1, scope: !4752, file: !314, line: 844, type: !7)
!4757 = !DILocalVariable(name: "len", arg: 2, scope: !4752, file: !314, line: 844, type: !53)
!4758 = !DILocation(line: 0, scope: !4752)
!4759 = !DILocation(line: 849, column: 9, scope: !4752)
!4760 = !DILocation(line: 855, column: 13, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !314, line: 855, column: 13)
!4762 = distinct !DILexicalBlock(scope: !4752, file: !314, line: 854, column: 21)
!4763 = !DILocation(line: 859, column: 17, scope: !4762)
!4764 = !DILocation(line: 859, column: 32, scope: !4762)
!4765 = !DILocation(line: 859, column: 14, scope: !4762)
!4766 = !DILocation(line: 860, column: 13, scope: !4762)
!4767 = !DILocation(line: 854, column: 16, scope: !4752)
!4768 = !DILocation(line: 854, column: 5, scope: !4752)
!4769 = distinct !{!4769, !4768, !4770}
!4770 = !DILocation(line: 861, column: 5, scope: !4752)
!4771 = !DILocation(line: 864, column: 1, scope: !4752)
!4772 = distinct !DISubprogram(name: "flash_write", scope: !314, file: !314, line: 868, type: !4773, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4775)
!4773 = !DISubroutineType(types: !4774)
!4774 = !{!53, !323, !7, !53}
!4775 = !{!4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789}
!4776 = !DILocalVariable(name: "buf", arg: 1, scope: !4772, file: !314, line: 868, type: !323)
!4777 = !DILocalVariable(name: "to", arg: 2, scope: !4772, file: !314, line: 868, type: !7)
!4778 = !DILocalVariable(name: "len", arg: 3, scope: !4772, file: !314, line: 868, type: !53)
!4779 = !DILocalVariable(name: "page_offset", scope: !4772, file: !314, line: 870, type: !325)
!4780 = !DILocalVariable(name: "page_size", scope: !4772, file: !314, line: 870, type: !325)
!4781 = !DILocalVariable(name: "rc", scope: !4772, file: !314, line: 871, type: !53)
!4782 = !DILocalVariable(name: "retlen", scope: !4772, file: !314, line: 871, type: !53)
!4783 = !DILocalVariable(name: "mode", scope: !4772, file: !314, line: 872, type: !53)
!4784 = !DILocalVariable(name: "cmd", scope: !4772, file: !314, line: 873, type: !4022)
!4785 = !DILocalVariable(name: "result", scope: !4772, file: !314, line: 874, type: !640)
!4786 = !DILocalVariable(name: "savedMask", scope: !4772, file: !314, line: 875, type: !136)
!4787 = !DILocalVariable(name: "To", scope: !4772, file: !314, line: 877, type: !136)
!4788 = !DILocalVariable(name: "Buf", scope: !4772, file: !314, line: 878, type: !3126)
!4789 = !DILocalVariable(name: "p_data_first", scope: !4772, file: !314, line: 879, type: !3126)
!4790 = !DILocation(line: 0, scope: !4772)
!4791 = !DILocation(line: 873, column: 5, scope: !4772)
!4792 = !DILocation(line: 873, column: 19, scope: !4772)
!4793 = !DILocation(line: 882, column: 13, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4772, file: !314, line: 882, column: 9)
!4795 = !DILocation(line: 882, column: 9, scope: !4772)
!4796 = !DILocation(line: 886, column: 12, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4772, file: !314, line: 886, column: 9)
!4798 = !DILocation(line: 886, column: 20, scope: !4797)
!4799 = !DILocation(line: 886, column: 35, scope: !4797)
!4800 = !DILocation(line: 886, column: 62, scope: !4797)
!4801 = !DILocation(line: 886, column: 45, scope: !4797)
!4802 = !DILocation(line: 886, column: 18, scope: !4797)
!4803 = !DILocation(line: 886, column: 9, scope: !4772)
!4804 = !DILocation(line: 891, column: 9, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4772, file: !314, line: 891, column: 9)
!4806 = !DILocation(line: 896, column: 18, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4772, file: !314, line: 895, column: 8)
!4808 = !DILocation(line: 897, column: 19, scope: !4772)
!4809 = !DILocation(line: 897, column: 5, scope: !4807)
!4810 = distinct !{!4810, !4811, !4812}
!4811 = !DILocation(line: 895, column: 5, scope: !4772)
!4812 = !DILocation(line: 897, column: 28, scope: !4772)
!4813 = !DILocation(line: 899, column: 22, scope: !4772)
!4814 = !DILocation(line: 901, column: 12, scope: !4772)
!4815 = !DILocation(line: 903, column: 15, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4772, file: !314, line: 903, column: 9)
!4817 = !DILocation(line: 903, column: 24, scope: !4816)
!4818 = !DILocation(line: 903, column: 27, scope: !4816)
!4819 = !DILocation(line: 903, column: 43, scope: !4816)
!4820 = !DILocation(line: 903, column: 9, scope: !4772)
!4821 = !DILocation(line: 0, scope: !4816)
!4822 = !DILocation(line: 913, column: 16, scope: !4772)
!4823 = !DILocation(line: 913, column: 5, scope: !4772)
!4824 = !DILocation(line: 910, column: 24, scope: !4772)
!4825 = !DILocation(line: 910, column: 22, scope: !4772)
!4826 = !DILocation(line: 952, column: 5, scope: !4772)
!4827 = !DILocation(line: 914, column: 21, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4772, file: !314, line: 913, column: 21)
!4829 = !DILocation(line: 919, column: 21, scope: !4828)
!4830 = !DILocation(line: 919, column: 18, scope: !4828)
!4831 = !DILocation(line: 919, column: 16, scope: !4828)
!4832 = !DILocation(line: 920, column: 21, scope: !4828)
!4833 = !DILocation(line: 920, column: 18, scope: !4828)
!4834 = !DILocation(line: 920, column: 16, scope: !4828)
!4835 = !DILocation(line: 921, column: 18, scope: !4828)
!4836 = !DILocation(line: 921, column: 16, scope: !4828)
!4837 = !DILocation(line: 923, column: 13, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4828, file: !314, line: 923, column: 13)
!4839 = !DILocation(line: 927, column: 9, scope: !4828)
!4840 = !DILocation(line: 928, column: 21, scope: !4828)
!4841 = !DILocation(line: 929, column: 9, scope: !4828)
!4842 = !DILocation(line: 930, column: 14, scope: !4828)
!4843 = !DILocation(line: 931, column: 9, scope: !4828)
!4844 = !DILocation(line: 933, column: 9, scope: !4828)
!4845 = !DILocation(line: 934, column: 86, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4828, file: !314, line: 933, column: 12)
!4847 = !DILocation(line: 934, column: 22, scope: !4846)
!4848 = !DILocation(line: 935, column: 20, scope: !4828)
!4849 = !DILocation(line: 935, column: 9, scope: !4846)
!4850 = distinct !{!4850, !4844, !4851}
!4851 = !DILocation(line: 935, column: 29, scope: !4828)
!4852 = !DILocation(line: 937, column: 16, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4828, file: !314, line: 937, column: 13)
!4854 = !DILocation(line: 937, column: 13, scope: !4828)
!4855 = !DILocation(line: 938, column: 20, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4853, file: !314, line: 937, column: 21)
!4857 = !DILocation(line: 939, column: 20, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4856, file: !314, line: 939, column: 17)
!4859 = !DILocation(line: 939, column: 17, scope: !4856)
!4860 = !DILocation(line: 941, column: 17, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4858, file: !314, line: 939, column: 33)
!4862 = !DILocation(line: 942, column: 17, scope: !4861)
!4863 = !DILocation(line: 947, column: 13, scope: !4828)
!4864 = distinct !{!4864, !4823, !4865}
!4865 = !DILocation(line: 950, column: 5, scope: !4772)
!4866 = !DILocation(line: 949, column: 13, scope: !4828)
!4867 = !DILocation(line: 948, column: 12, scope: !4828)
!4868 = !DILocation(line: 953, column: 18, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4772, file: !314, line: 952, column: 8)
!4870 = !DILocation(line: 954, column: 19, scope: !4772)
!4871 = !DILocation(line: 954, column: 5, scope: !4869)
!4872 = distinct !{!4872, !4826, !4873}
!4873 = !DILocation(line: 954, column: 28, scope: !4772)
!4874 = !DILocation(line: 956, column: 5, scope: !4772)
!4875 = !DILocation(line: 957, column: 5, scope: !4772)
!4876 = !DILocation(line: 958, column: 1, scope: !4772)
!4877 = distinct !DISubprogram(name: "flash_erase_write_security_crc", scope: !314, file: !314, line: 963, type: !4602, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4878)
!4878 = !{!4879, !4880, !4881, !4882}
!4879 = !DILocalVariable(name: "to", arg: 1, scope: !4877, file: !314, line: 963, type: !7)
!4880 = !DILocalVariable(name: "len", scope: !4877, file: !314, line: 965, type: !53)
!4881 = !DILocalVariable(name: "rc", scope: !4877, file: !314, line: 965, type: !53)
!4882 = !DILocalVariable(name: "cmd", scope: !4877, file: !314, line: 966, type: !4022)
!4883 = !DILocation(line: 0, scope: !4877)
!4884 = !DILocation(line: 966, column: 5, scope: !4877)
!4885 = !DILocation(line: 966, column: 19, scope: !4877)
!4886 = !DILocation(line: 968, column: 12, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4877, file: !314, line: 968, column: 9)
!4888 = !DILocation(line: 968, column: 9, scope: !4877)
!4889 = !DILocation(line: 972, column: 12, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4877, file: !314, line: 972, column: 9)
!4891 = !DILocation(line: 972, column: 20, scope: !4890)
!4892 = !DILocation(line: 972, column: 35, scope: !4890)
!4893 = !DILocation(line: 972, column: 62, scope: !4890)
!4894 = !DILocation(line: 972, column: 45, scope: !4890)
!4895 = !DILocation(line: 972, column: 18, scope: !4890)
!4896 = !DILocation(line: 972, column: 9, scope: !4877)
!4897 = !DILocation(line: 976, column: 22, scope: !4877)
!4898 = !DILocation(line: 979, column: 9, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4877, file: !314, line: 979, column: 9)
!4900 = !DILocation(line: 983, column: 5, scope: !4877)
!4901 = !DILocation(line: 985, column: 12, scope: !4877)
!4902 = !DILocation(line: 986, column: 17, scope: !4877)
!4903 = !DILocation(line: 986, column: 14, scope: !4877)
!4904 = !DILocation(line: 986, column: 5, scope: !4877)
!4905 = !DILocation(line: 986, column: 12, scope: !4877)
!4906 = !DILocation(line: 987, column: 17, scope: !4877)
!4907 = !DILocation(line: 987, column: 14, scope: !4877)
!4908 = !DILocation(line: 987, column: 5, scope: !4877)
!4909 = !DILocation(line: 987, column: 12, scope: !4877)
!4910 = !DILocation(line: 988, column: 14, scope: !4877)
!4911 = !DILocation(line: 988, column: 5, scope: !4877)
!4912 = !DILocation(line: 988, column: 12, scope: !4877)
!4913 = !DILocation(line: 990, column: 5, scope: !4877)
!4914 = !DILocation(line: 991, column: 5, scope: !4877)
!4915 = !DILocation(line: 993, column: 10, scope: !4877)
!4916 = !DILocation(line: 994, column: 22, scope: !4877)
!4917 = !DILocation(line: 995, column: 5, scope: !4877)
!4918 = !DILocation(line: 996, column: 1, scope: !4877)
!4919 = distinct !DISubprogram(name: "flash_erase_write", scope: !314, file: !314, line: 998, type: !4773, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !4920)
!4920 = !{!4921, !4922, !4923, !4924, !4928, !4929, !4930, !4934, !4935, !4936}
!4921 = !DILocalVariable(name: "buf", arg: 1, scope: !4919, file: !314, line: 998, type: !323)
!4922 = !DILocalVariable(name: "offs", arg: 2, scope: !4919, file: !314, line: 998, type: !7)
!4923 = !DILocalVariable(name: "count", arg: 3, scope: !4919, file: !314, line: 998, type: !53)
!4924 = !DILocalVariable(name: "block", scope: !4919, file: !314, line: 1000, type: !4925)
!4925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 32768, elements: !4926)
!4926 = !{!4927}
!4927 = !DISubrange(count: 4096)
!4928 = !DILocalVariable(name: "blocksize", scope: !4919, file: !314, line: 1002, type: !53)
!4929 = !DILocalVariable(name: "blockmask", scope: !4919, file: !314, line: 1003, type: !53)
!4930 = !DILocalVariable(name: "piece", scope: !4931, file: !314, line: 1008, type: !7)
!4931 = distinct !DILexicalBlock(scope: !4932, file: !314, line: 1007, column: 56)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !314, line: 1007, column: 13)
!4933 = distinct !DILexicalBlock(scope: !4919, file: !314, line: 1005, column: 23)
!4934 = !DILocalVariable(name: "blockaddr", scope: !4931, file: !314, line: 1008, type: !7)
!4935 = !DILocalVariable(name: "piece_size", scope: !4931, file: !314, line: 1009, type: !53)
!4936 = !DILocalVariable(name: "aligned_size", scope: !4937, file: !314, line: 1034, type: !7)
!4937 = distinct !DILexicalBlock(scope: !4932, file: !314, line: 1033, column: 16)
!4938 = !DILocation(line: 0, scope: !4919)
!4939 = !DILocation(line: 1000, column: 5, scope: !4919)
!4940 = !DILocation(line: 1000, column: 19, scope: !4919)
!4941 = !DILocation(line: 1005, column: 18, scope: !4919)
!4942 = !DILocation(line: 1005, column: 5, scope: !4919)
!4943 = !DILocation(line: 1007, column: 13, scope: !4932)
!4944 = !DILocation(line: 1007, column: 32, scope: !4932)
!4945 = !DILocation(line: 1011, column: 30, scope: !4931)
!4946 = !DILocation(line: 0, scope: !4931)
!4947 = !DILocation(line: 1013, column: 17, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4931, file: !314, line: 1013, column: 17)
!4949 = !DILocation(line: 1013, column: 72, scope: !4948)
!4950 = !DILocation(line: 1013, column: 17, scope: !4931)
!4951 = !DILocation(line: 1017, column: 30, scope: !4931)
!4952 = !DILocation(line: 1019, column: 26, scope: !4931)
!4953 = !DILocation(line: 1020, column: 26, scope: !4931)
!4954 = !DILocation(line: 1020, column: 13, scope: !4931)
!4955 = !DILocation(line: 1022, column: 17, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4931, file: !314, line: 1022, column: 17)
!4957 = !DILocation(line: 1026, column: 17, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4931, file: !314, line: 1026, column: 17)
!4959 = !DILocation(line: 1026, column: 58, scope: !4958)
!4960 = !DILocation(line: 1026, column: 17, scope: !4931)
!4961 = !DILocation(line: 1032, column: 19, scope: !4931)
!4962 = !DILocation(line: 1034, column: 47, scope: !4937)
!4963 = !DILocation(line: 0, scope: !4937)
!4964 = !DILocation(line: 1036, column: 17, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4937, file: !314, line: 1036, column: 17)
!4966 = !DILocation(line: 1040, column: 17, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4937, file: !314, line: 1040, column: 17)
!4968 = !DILocation(line: 1040, column: 54, scope: !4967)
!4969 = !DILocation(line: 1040, column: 17, scope: !4937)
!4970 = !DILocation(line: 1047, column: 19, scope: !4937)
!4971 = !DILocation(line: 0, scope: !4932)
!4972 = distinct !{!4972, !4942, !4973}
!4973 = !DILocation(line: 1049, column: 5, scope: !4919)
!4974 = !DILocation(line: 1052, column: 1, scope: !4919)
!4975 = distinct !DISubprogram(name: "query_spi_flash_status", scope: !314, file: !314, line: 1055, type: !4976, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !313, retainedNodes: !2135)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{!4978}
!4978 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_DRV_STATE", file: !204, line: 71, baseType: !316)
!4979 = !DILocation(line: 1057, column: 9, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4975, file: !314, line: 1057, column: 9)
!4981 = !DILocation(line: 1057, column: 9, scope: !4975)
!4982 = !DILocation(line: 1062, column: 9, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4984, file: !314, line: 1061, column: 43)
!4984 = distinct !DILexicalBlock(scope: !4975, file: !314, line: 1061, column: 9)
!4985 = !DILocation(line: 1065, column: 48, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4975, file: !314, line: 1065, column: 9)
!4987 = !DILocation(line: 0, scope: !4986)
!4988 = !DILocation(line: 0, scope: !4975)
!4989 = !DILocation(line: 1072, column: 1, scope: !4975)
!4990 = distinct !DISubprogram(name: "get_current_count", scope: !2066, file: !2066, line: 56, type: !2167, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !2135)
!4991 = !DILocation(line: 58, column: 12, scope: !4990)
!4992 = !DILocation(line: 58, column: 5, scope: !4990)
!4993 = distinct !DISubprogram(name: "delay_time", scope: !2066, file: !2066, line: 62, type: !3386, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !4994)
!4994 = !{!4995, !4996, !4997}
!4995 = !DILocalVariable(name: "count", arg: 1, scope: !4993, file: !2066, line: 62, type: !114)
!4996 = !DILocalVariable(name: "end_count", scope: !4993, file: !2066, line: 64, type: !114)
!4997 = !DILocalVariable(name: "current", scope: !4993, file: !2066, line: 64, type: !114)
!4998 = !DILocation(line: 0, scope: !4993)
!4999 = !DILocation(line: 66, column: 17, scope: !4993)
!5000 = !DILocation(line: 66, column: 37, scope: !4993)
!5001 = !DILocation(line: 66, column: 45, scope: !4993)
!5002 = !DILocation(line: 67, column: 15, scope: !4993)
!5003 = !DILocation(line: 68, column: 12, scope: !4993)
!5004 = !DILocation(line: 68, column: 5, scope: !4993)
!5005 = !DILocation(line: 69, column: 19, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4993, file: !2066, line: 68, column: 45)
!5007 = distinct !{!5007, !5004, !5008}
!5008 = !DILocation(line: 70, column: 5, scope: !4993)
!5009 = !DILocation(line: 72, column: 1, scope: !4993)
!5010 = distinct !DISubprogram(name: "delay_time_for_gpt4", scope: !2066, file: !2066, line: 75, type: !3386, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !5011)
!5011 = !{!5012, !5013, !5014}
!5012 = !DILocalVariable(name: "count", arg: 1, scope: !5010, file: !2066, line: 75, type: !114)
!5013 = !DILocalVariable(name: "end_count", scope: !5010, file: !2066, line: 77, type: !114)
!5014 = !DILocalVariable(name: "current", scope: !5010, file: !2066, line: 77, type: !114)
!5015 = !DILocation(line: 0, scope: !5010)
!5016 = !DILocation(line: 79, column: 17, scope: !5010)
!5017 = !DILocation(line: 79, column: 42, scope: !5010)
!5018 = !DILocation(line: 79, column: 50, scope: !5010)
!5019 = !DILocation(line: 80, column: 15, scope: !5010)
!5020 = !DILocation(line: 81, column: 12, scope: !5010)
!5021 = !DILocation(line: 81, column: 5, scope: !5010)
!5022 = !DILocation(line: 82, column: 19, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5010, file: !2066, line: 81, column: 45)
!5024 = distinct !{!5024, !5021, !5025}
!5025 = !DILocation(line: 83, column: 5, scope: !5010)
!5026 = !DILocation(line: 85, column: 1, scope: !5010)
!5027 = distinct !DISubprogram(name: "get_current_gpt4_count", scope: !2066, file: !2066, line: 95, type: !2167, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !2135)
!5028 = !DILocation(line: 97, column: 13, scope: !5027)
!5029 = !DILocation(line: 97, column: 5, scope: !5027)
!5030 = distinct !DISubprogram(name: "delay_ms", scope: !2066, file: !2066, line: 107, type: !2198, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !5031)
!5031 = !{!5032, !5033}
!5032 = !DILocalVariable(name: "ms", arg: 1, scope: !5030, file: !2066, line: 107, type: !136)
!5033 = !DILocalVariable(name: "count", scope: !5030, file: !2066, line: 109, type: !136)
!5034 = !DILocation(line: 0, scope: !5030)
!5035 = !DILocation(line: 111, column: 17, scope: !5030)
!5036 = !DILocation(line: 112, column: 17, scope: !5030)
!5037 = !DILocation(line: 112, column: 23, scope: !5030)
!5038 = !DILocation(line: 112, column: 11, scope: !5030)
!5039 = !DILocation(line: 113, column: 17, scope: !5030)
!5040 = !DILocation(line: 113, column: 23, scope: !5030)
!5041 = !DILocation(line: 113, column: 11, scope: !5030)
!5042 = !DILocation(line: 114, column: 17, scope: !5030)
!5043 = !DILocation(line: 114, column: 23, scope: !5030)
!5044 = !DILocation(line: 114, column: 11, scope: !5030)
!5045 = !DILocation(line: 115, column: 5, scope: !5030)
!5046 = !DILocation(line: 116, column: 1, scope: !5030)
!5047 = distinct !DISubprogram(name: "delay_us", scope: !2066, file: !2066, line: 120, type: !2198, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !5048)
!5048 = !{!5049, !5050, !5051}
!5049 = !DILocalVariable(name: "us", arg: 1, scope: !5047, file: !2066, line: 120, type: !136)
!5050 = !DILocalVariable(name: "count", scope: !5047, file: !2066, line: 122, type: !136)
!5051 = !DILocalVariable(name: "ticks_per_us", scope: !5047, file: !2066, line: 123, type: !136)
!5052 = !DILocation(line: 0, scope: !5047)
!5053 = !DILocation(line: 125, column: 20, scope: !5047)
!5054 = !DILocation(line: 125, column: 39, scope: !5047)
!5055 = !DILocation(line: 126, column: 26, scope: !5047)
!5056 = !DILocation(line: 128, column: 5, scope: !5047)
!5057 = !DILocation(line: 129, column: 1, scope: !5047)
!5058 = distinct !DISubprogram(name: "drvTMR_init", scope: !2066, file: !2066, line: 133, type: !5059, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !5061)
!5059 = !DISubroutineType(types: !5060)
!5060 = !{null, !136, !136, !126, !180}
!5061 = !{!5062, !5063, !5064, !5065}
!5062 = !DILocalVariable(name: "timerNum", arg: 1, scope: !5058, file: !2066, line: 133, type: !136)
!5063 = !DILocalVariable(name: "countValue", arg: 2, scope: !5058, file: !2066, line: 133, type: !136)
!5064 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !5058, file: !2066, line: 133, type: !126)
!5065 = !DILocalVariable(name: "TMR_Callback", arg: 4, scope: !5058, file: !2066, line: 133, type: !180)
!5066 = !DILocation(line: 0, scope: !5058)
!5067 = !DILocation(line: 136, column: 5, scope: !5058)
!5068 = !DILocation(line: 138, column: 18, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5058, file: !2066, line: 138, column: 9)
!5070 = !DILocation(line: 138, column: 9, scope: !5058)
!5071 = !DILocation(line: 139, column: 30, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5069, file: !2066, line: 138, column: 27)
!5073 = !DILocation(line: 141, column: 5, scope: !5072)
!5074 = !DILocation(line: 142, column: 30, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5069, file: !2066, line: 141, column: 12)
!5076 = !DILocation(line: 0, scope: !5069)
!5077 = !DILocation(line: 146, column: 5, scope: !5058)
!5078 = !DILocation(line: 147, column: 1, scope: !5058)
!5079 = distinct !DISubprogram(name: "TMR_Start", scope: !2066, file: !2066, line: 149, type: !2198, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !5080)
!5080 = !{!5081}
!5081 = !DILocalVariable(name: "timerNum", arg: 1, scope: !5079, file: !2066, line: 149, type: !136)
!5082 = !DILocation(line: 0, scope: !5079)
!5083 = !DILocation(line: 151, column: 5, scope: !5079)
!5084 = !DILocation(line: 152, column: 1, scope: !5079)
!5085 = distinct !DISubprogram(name: "TMR_Stop", scope: !2066, file: !2066, line: 154, type: !2198, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !5086)
!5086 = !{!5087}
!5087 = !DILocalVariable(name: "timerNum", arg: 1, scope: !5085, file: !2066, line: 154, type: !136)
!5088 = !DILocation(line: 0, scope: !5085)
!5089 = !DILocation(line: 156, column: 5, scope: !5085)
!5090 = !DILocation(line: 157, column: 1, scope: !5085)
!5091 = distinct !DISubprogram(name: "drvGPT2Init", scope: !2066, file: !2066, line: 160, type: !181, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !2135)
!5092 = !DILocation(line: 162, column: 5, scope: !5091)
!5093 = !DILocation(line: 163, column: 1, scope: !5091)
!5094 = distinct !DISubprogram(name: "drvGPT4Init", scope: !2066, file: !2066, line: 165, type: !181, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !2135)
!5095 = !DILocation(line: 167, column: 5, scope: !5094)
!5096 = !DILocation(line: 168, column: 1, scope: !5094)
!5097 = distinct !DISubprogram(name: "clear_TMR_INT_status_bit", scope: !2066, file: !2066, line: 170, type: !2198, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2065, retainedNodes: !5098)
!5098 = !{!5099}
!5099 = !DILocalVariable(name: "timerNum", arg: 1, scope: !5097, file: !2066, line: 170, type: !136)
!5100 = !DILocation(line: 0, scope: !5097)
!5101 = !DILocation(line: 172, column: 9, scope: !5097)
!5102 = !DILocation(line: 177, column: 5, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5104, file: !2066, line: 175, column: 27)
!5104 = distinct !DILexicalBlock(scope: !5097, file: !2066, line: 175, column: 9)
!5105 = !DILocation(line: 178, column: 1, scope: !5097)
!5106 = distinct !DISubprogram(name: "top_xtal_init", scope: !411, file: !411, line: 52, type: !181, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5107)
!5107 = !{!5108, !5109}
!5108 = !DILocalVariable(name: "u4RegVal", scope: !5106, file: !411, line: 54, type: !136)
!5109 = !DILocalVariable(name: "reg", scope: !5106, file: !411, line: 55, type: !325)
!5110 = !DILocation(line: 0, scope: !5106)
!5111 = !DILocation(line: 55, column: 25, scope: !5106)
!5112 = !DILocation(line: 56, column: 16, scope: !5106)
!5113 = !DILocation(line: 56, column: 23, scope: !5106)
!5114 = !DILocation(line: 58, column: 16, scope: !5106)
!5115 = !DILocation(line: 61, column: 5, scope: !5106)
!5116 = !DILocation(line: 59, column: 14, scope: !5106)
!5117 = !DILocation(line: 0, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5106, file: !411, line: 61, column: 18)
!5119 = !DILocation(line: 87, column: 38, scope: !5106)
!5120 = !DILocation(line: 88, column: 21, scope: !5106)
!5121 = !DILocation(line: 88, column: 19, scope: !5106)
!5122 = !DILocation(line: 89, column: 5, scope: !5106)
!5123 = !DILocation(line: 90, column: 17, scope: !5106)
!5124 = !DILocation(line: 90, column: 33, scope: !5106)
!5125 = !DILocation(line: 90, column: 5, scope: !5106)
!5126 = !DILocation(line: 91, column: 1, scope: !5106)
!5127 = distinct !DISubprogram(name: "top_xtal_freq_get", scope: !411, file: !411, line: 98, type: !2167, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !2135)
!5128 = !DILocation(line: 100, column: 12, scope: !5127)
!5129 = !DILocation(line: 100, column: 5, scope: !5127)
!5130 = distinct !DISubprogram(name: "top_mcu_freq_get", scope: !411, file: !411, line: 108, type: !2167, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !2135)
!5131 = !DILocation(line: 110, column: 12, scope: !5130)
!5132 = !DILocation(line: 110, column: 5, scope: !5130)
!5133 = distinct !DISubprogram(name: "cmnPLL1ON", scope: !411, file: !411, line: 118, type: !181, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5134)
!5134 = !{!5135, !5136}
!5135 = !DILocalVariable(name: "reg", scope: !5133, file: !411, line: 120, type: !250)
!5136 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !5133, file: !411, line: 121, type: !249)
!5137 = !DILocation(line: 120, column: 5, scope: !5133)
!5138 = !DILocation(line: 120, column: 23, scope: !5133)
!5139 = !DILocation(line: 0, scope: !5133)
!5140 = !DILocation(line: 123, column: 11, scope: !5133)
!5141 = !DILocation(line: 123, column: 9, scope: !5133)
!5142 = !DILocation(line: 124, column: 12, scope: !5133)
!5143 = !DILocation(line: 124, column: 16, scope: !5133)
!5144 = !DILocation(line: 124, column: 39, scope: !5133)
!5145 = !DILocation(line: 124, column: 9, scope: !5133)
!5146 = !DILocation(line: 126, column: 9, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5133, file: !411, line: 126, column: 9)
!5148 = !DILocation(line: 126, column: 13, scope: !5147)
!5149 = !DILocation(line: 126, column: 9, scope: !5133)
!5150 = !DILocation(line: 127, column: 15, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5147, file: !411, line: 126, column: 47)
!5152 = !DILocation(line: 127, column: 13, scope: !5151)
!5153 = !DILocation(line: 128, column: 15, scope: !5151)
!5154 = !DILocation(line: 128, column: 19, scope: !5151)
!5155 = !DILocation(line: 128, column: 13, scope: !5151)
!5156 = !DILocation(line: 129, column: 15, scope: !5151)
!5157 = !DILocation(line: 129, column: 19, scope: !5151)
!5158 = !DILocation(line: 129, column: 13, scope: !5151)
!5159 = !DILocation(line: 130, column: 46, scope: !5151)
!5160 = !DILocation(line: 130, column: 9, scope: !5151)
!5161 = !DILocation(line: 132, column: 9, scope: !5151)
!5162 = !DILocation(line: 133, column: 19, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5151, file: !411, line: 132, column: 12)
!5164 = !DILocation(line: 133, column: 17, scope: !5163)
!5165 = !DILocation(line: 134, column: 19, scope: !5163)
!5166 = !DILocation(line: 134, column: 23, scope: !5163)
!5167 = !DILocation(line: 134, column: 17, scope: !5163)
!5168 = !DILocation(line: 135, column: 19, scope: !5151)
!5169 = !DILocation(line: 135, column: 18, scope: !5151)
!5170 = !DILocation(line: 135, column: 9, scope: !5163)
!5171 = distinct !{!5171, !5161, !5172}
!5172 = !DILocation(line: 135, column: 22, scope: !5151)
!5173 = !DILocation(line: 138, column: 1, scope: !5133)
!5174 = distinct !DISubprogram(name: "cmnReadRegister32", scope: !5175, file: !5175, line: 176, type: !5176, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5180)
!5175 = !DIFile(filename: "../../../../..//driver/CMSIS/Device/MTK/mt7687/Include/system_mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!5176 = !DISubroutineType(types: !5177)
!5177 = !{!136, !5178}
!5178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5179, size: 32)
!5179 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5180 = !{!5181}
!5181 = !DILocalVariable(name: "Register", arg: 1, scope: !5174, file: !5175, line: 176, type: !5178)
!5182 = !DILocation(line: 0, scope: !5174)
!5183 = !DILocation(line: 178, column: 13, scope: !5174)
!5184 = !DILocation(line: 178, column: 12, scope: !5174)
!5185 = !DILocation(line: 178, column: 5, scope: !5174)
!5186 = distinct !DISubprogram(name: "cmnWriteRegister32", scope: !5175, file: !5175, line: 171, type: !5187, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5189)
!5187 = !DISubroutineType(types: !5188)
!5188 = !{null, !5178, !136}
!5189 = !{!5190, !5191}
!5190 = !DILocalVariable(name: "Register", arg: 1, scope: !5186, file: !5175, line: 171, type: !5178)
!5191 = !DILocalVariable(name: "Value", arg: 2, scope: !5186, file: !5175, line: 171, type: !136)
!5192 = !DILocation(line: 0, scope: !5186)
!5193 = !DILocation(line: 173, column: 6, scope: !5186)
!5194 = !DILocation(line: 173, column: 36, scope: !5186)
!5195 = !DILocation(line: 174, column: 1, scope: !5186)
!5196 = distinct !DISubprogram(name: "cmnPLL1ON_PLL2ON", scope: !411, file: !411, line: 145, type: !2140, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5197)
!5197 = !{!5198, !5199, !5200}
!5198 = !DILocalVariable(name: "fg960M", arg: 1, scope: !5196, file: !411, line: 145, type: !128)
!5199 = !DILocalVariable(name: "reg", scope: !5196, file: !411, line: 147, type: !250)
!5200 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !5196, file: !411, line: 148, type: !249)
!5201 = !DILocation(line: 0, scope: !5196)
!5202 = !DILocation(line: 147, column: 5, scope: !5196)
!5203 = !DILocation(line: 147, column: 23, scope: !5196)
!5204 = !DILocation(line: 150, column: 11, scope: !5196)
!5205 = !DILocation(line: 150, column: 9, scope: !5196)
!5206 = !DILocation(line: 151, column: 12, scope: !5196)
!5207 = !DILocation(line: 151, column: 16, scope: !5196)
!5208 = !DILocation(line: 151, column: 39, scope: !5196)
!5209 = !DILocation(line: 151, column: 9, scope: !5196)
!5210 = !DILocation(line: 153, column: 9, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5196, file: !411, line: 153, column: 9)
!5212 = !DILocation(line: 153, column: 13, scope: !5211)
!5213 = !DILocation(line: 153, column: 9, scope: !5196)
!5214 = !DILocation(line: 154, column: 15, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5211, file: !411, line: 153, column: 45)
!5216 = !DILocation(line: 154, column: 13, scope: !5215)
!5217 = !DILocation(line: 155, column: 15, scope: !5215)
!5218 = !DILocation(line: 155, column: 19, scope: !5215)
!5219 = !DILocation(line: 155, column: 13, scope: !5215)
!5220 = !DILocation(line: 156, column: 15, scope: !5215)
!5221 = !DILocation(line: 156, column: 19, scope: !5215)
!5222 = !DILocation(line: 156, column: 13, scope: !5215)
!5223 = !DILocation(line: 157, column: 15, scope: !5215)
!5224 = !DILocation(line: 157, column: 13, scope: !5215)
!5225 = !DILocation(line: 158, column: 46, scope: !5215)
!5226 = !DILocation(line: 158, column: 9, scope: !5215)
!5227 = !DILocation(line: 160, column: 15, scope: !5215)
!5228 = !DILocation(line: 160, column: 13, scope: !5215)
!5229 = !DILocation(line: 161, column: 15, scope: !5215)
!5230 = !DILocation(line: 161, column: 19, scope: !5215)
!5231 = !DILocation(line: 161, column: 13, scope: !5215)
!5232 = !DILocation(line: 162, column: 15, scope: !5215)
!5233 = !DILocation(line: 162, column: 19, scope: !5215)
!5234 = !DILocation(line: 162, column: 13, scope: !5215)
!5235 = !DILocation(line: 163, column: 15, scope: !5215)
!5236 = !DILocation(line: 163, column: 19, scope: !5215)
!5237 = !DILocation(line: 163, column: 13, scope: !5215)
!5238 = !DILocation(line: 164, column: 46, scope: !5215)
!5239 = !DILocation(line: 164, column: 9, scope: !5215)
!5240 = !DILocation(line: 166, column: 9, scope: !5215)
!5241 = !DILocation(line: 167, column: 19, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5215, file: !411, line: 166, column: 12)
!5243 = !DILocation(line: 167, column: 17, scope: !5242)
!5244 = !DILocation(line: 168, column: 19, scope: !5242)
!5245 = !DILocation(line: 168, column: 23, scope: !5242)
!5246 = !DILocation(line: 168, column: 17, scope: !5242)
!5247 = !DILocation(line: 169, column: 19, scope: !5215)
!5248 = !DILocation(line: 169, column: 18, scope: !5215)
!5249 = !DILocation(line: 169, column: 9, scope: !5242)
!5250 = distinct !{!5250, !5240, !5251}
!5251 = !DILocation(line: 169, column: 22, scope: !5215)
!5252 = !DILocation(line: 171, column: 15, scope: !5215)
!5253 = !DILocation(line: 171, column: 13, scope: !5215)
!5254 = !DILocation(line: 172, column: 15, scope: !5215)
!5255 = !DILocation(line: 172, column: 19, scope: !5215)
!5256 = !DILocation(line: 172, column: 13, scope: !5215)
!5257 = !DILocation(line: 173, column: 15, scope: !5215)
!5258 = !DILocation(line: 173, column: 19, scope: !5215)
!5259 = !DILocation(line: 173, column: 13, scope: !5215)
!5260 = !DILocation(line: 174, column: 5, scope: !5215)
!5261 = !DILocation(line: 176, column: 11, scope: !5196)
!5262 = !DILocation(line: 176, column: 9, scope: !5196)
!5263 = !DILocation(line: 177, column: 9, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5196, file: !411, line: 177, column: 9)
!5265 = !DILocation(line: 0, scope: !5264)
!5266 = !DILocation(line: 177, column: 9, scope: !5196)
!5267 = !DILocation(line: 178, column: 19, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5264, file: !411, line: 177, column: 17)
!5269 = !DILocation(line: 178, column: 13, scope: !5268)
!5270 = !DILocation(line: 179, column: 5, scope: !5268)
!5271 = !DILocation(line: 180, column: 13, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5264, file: !411, line: 179, column: 12)
!5273 = !DILocation(line: 182, column: 42, scope: !5196)
!5274 = !DILocation(line: 182, column: 5, scope: !5196)
!5275 = !DILocation(line: 184, column: 1, scope: !5196)
!5276 = distinct !DISubprogram(name: "cmnPLL1OFF_PLL2OFF", scope: !411, file: !411, line: 191, type: !181, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5277)
!5277 = !{!5278, !5279}
!5278 = !DILocalVariable(name: "reg", scope: !5276, file: !411, line: 193, type: !250)
!5279 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !5276, file: !411, line: 194, type: !249)
!5280 = !DILocation(line: 193, column: 5, scope: !5276)
!5281 = !DILocation(line: 193, column: 23, scope: !5276)
!5282 = !DILocation(line: 0, scope: !5276)
!5283 = !DILocation(line: 196, column: 11, scope: !5276)
!5284 = !DILocation(line: 196, column: 9, scope: !5276)
!5285 = !DILocation(line: 197, column: 11, scope: !5276)
!5286 = !DILocation(line: 197, column: 15, scope: !5276)
!5287 = !DILocation(line: 197, column: 9, scope: !5276)
!5288 = !DILocation(line: 198, column: 11, scope: !5276)
!5289 = !DILocation(line: 198, column: 15, scope: !5276)
!5290 = !DILocation(line: 198, column: 9, scope: !5276)
!5291 = !DILocation(line: 199, column: 11, scope: !5276)
!5292 = !DILocation(line: 199, column: 9, scope: !5276)
!5293 = !DILocation(line: 200, column: 42, scope: !5276)
!5294 = !DILocation(line: 200, column: 5, scope: !5276)
!5295 = !DILocation(line: 202, column: 11, scope: !5276)
!5296 = !DILocation(line: 202, column: 9, scope: !5276)
!5297 = !DILocation(line: 203, column: 11, scope: !5276)
!5298 = !DILocation(line: 203, column: 15, scope: !5276)
!5299 = !DILocation(line: 203, column: 9, scope: !5276)
!5300 = !DILocation(line: 204, column: 11, scope: !5276)
!5301 = !DILocation(line: 204, column: 15, scope: !5276)
!5302 = !DILocation(line: 204, column: 9, scope: !5276)
!5303 = !DILocation(line: 205, column: 11, scope: !5276)
!5304 = !DILocation(line: 205, column: 9, scope: !5276)
!5305 = !DILocation(line: 206, column: 42, scope: !5276)
!5306 = !DILocation(line: 206, column: 5, scope: !5276)
!5307 = !DILocation(line: 209, column: 1, scope: !5276)
!5308 = distinct !DISubprogram(name: "cmnCpuClkConfigureToXtal", scope: !411, file: !411, line: 216, type: !181, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5309)
!5309 = !{!5310, !5311}
!5310 = !DILocalVariable(name: "reg", scope: !5308, file: !411, line: 218, type: !250)
!5311 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !5308, file: !411, line: 219, type: !249)
!5312 = !DILocation(line: 218, column: 5, scope: !5308)
!5313 = !DILocation(line: 218, column: 23, scope: !5308)
!5314 = !DILocation(line: 0, scope: !5308)
!5315 = !DILocation(line: 222, column: 11, scope: !5308)
!5316 = !DILocation(line: 222, column: 9, scope: !5308)
!5317 = !DILocation(line: 223, column: 11, scope: !5308)
!5318 = !DILocation(line: 223, column: 15, scope: !5308)
!5319 = !DILocation(line: 223, column: 9, scope: !5308)
!5320 = !DILocation(line: 224, column: 11, scope: !5308)
!5321 = !DILocation(line: 224, column: 9, scope: !5308)
!5322 = !DILocation(line: 225, column: 39, scope: !5308)
!5323 = !DILocation(line: 225, column: 5, scope: !5308)
!5324 = !DILocation(line: 228, column: 11, scope: !5308)
!5325 = !DILocation(line: 228, column: 9, scope: !5308)
!5326 = !DILocation(line: 229, column: 11, scope: !5308)
!5327 = !DILocation(line: 229, column: 15, scope: !5308)
!5328 = !DILocation(line: 229, column: 9, scope: !5308)
!5329 = !DILocation(line: 230, column: 11, scope: !5308)
!5330 = !DILocation(line: 230, column: 9, scope: !5308)
!5331 = !DILocation(line: 231, column: 39, scope: !5308)
!5332 = !DILocation(line: 231, column: 5, scope: !5308)
!5333 = !DILocation(line: 233, column: 5, scope: !5308)
!5334 = !DILocation(line: 233, column: 12, scope: !5308)
!5335 = !DILocation(line: 233, column: 19, scope: !5308)
!5336 = !DILocation(line: 233, column: 16, scope: !5308)
!5337 = distinct !{!5337, !5333, !5338}
!5338 = !DILocation(line: 233, column: 52, scope: !5308)
!5339 = !DILocation(line: 235, column: 21, scope: !5308)
!5340 = !DILocation(line: 235, column: 19, scope: !5308)
!5341 = !DILocation(line: 236, column: 5, scope: !5308)
!5342 = !DILocation(line: 237, column: 17, scope: !5308)
!5343 = !DILocation(line: 237, column: 33, scope: !5308)
!5344 = !DILocation(line: 237, column: 5, scope: !5308)
!5345 = !DILocation(line: 239, column: 1, scope: !5308)
!5346 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo192M", scope: !411, file: !411, line: 246, type: !181, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5347)
!5347 = !{!5348, !5349}
!5348 = !DILocalVariable(name: "reg", scope: !5346, file: !411, line: 248, type: !250)
!5349 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !5346, file: !411, line: 249, type: !249)
!5350 = !DILocation(line: 248, column: 5, scope: !5346)
!5351 = !DILocation(line: 248, column: 23, scope: !5346)
!5352 = !DILocation(line: 0, scope: !5346)
!5353 = !DILocation(line: 252, column: 5, scope: !5346)
!5354 = !DILocation(line: 255, column: 11, scope: !5346)
!5355 = !DILocation(line: 255, column: 9, scope: !5346)
!5356 = !DILocation(line: 256, column: 11, scope: !5346)
!5357 = !DILocation(line: 256, column: 15, scope: !5346)
!5358 = !DILocation(line: 256, column: 9, scope: !5346)
!5359 = !DILocation(line: 257, column: 11, scope: !5346)
!5360 = !DILocation(line: 257, column: 15, scope: !5346)
!5361 = !DILocation(line: 257, column: 9, scope: !5346)
!5362 = !DILocation(line: 258, column: 39, scope: !5346)
!5363 = !DILocation(line: 258, column: 5, scope: !5346)
!5364 = !DILocation(line: 260, column: 5, scope: !5346)
!5365 = !DILocation(line: 260, column: 12, scope: !5346)
!5366 = !DILocation(line: 260, column: 19, scope: !5346)
!5367 = !DILocation(line: 260, column: 16, scope: !5346)
!5368 = distinct !{!5368, !5364, !5369}
!5369 = !DILocation(line: 260, column: 52, scope: !5346)
!5370 = !DILocation(line: 263, column: 11, scope: !5346)
!5371 = !DILocation(line: 263, column: 9, scope: !5346)
!5372 = !DILocation(line: 264, column: 11, scope: !5346)
!5373 = !DILocation(line: 264, column: 15, scope: !5346)
!5374 = !DILocation(line: 264, column: 9, scope: !5346)
!5375 = !DILocation(line: 265, column: 11, scope: !5346)
!5376 = !DILocation(line: 265, column: 15, scope: !5346)
!5377 = !DILocation(line: 265, column: 9, scope: !5346)
!5378 = !DILocation(line: 266, column: 39, scope: !5346)
!5379 = !DILocation(line: 266, column: 5, scope: !5346)
!5380 = !DILocation(line: 269, column: 11, scope: !5346)
!5381 = !DILocation(line: 269, column: 9, scope: !5346)
!5382 = !DILocation(line: 270, column: 11, scope: !5346)
!5383 = !DILocation(line: 270, column: 15, scope: !5346)
!5384 = !DILocation(line: 270, column: 9, scope: !5346)
!5385 = !DILocation(line: 271, column: 11, scope: !5346)
!5386 = !DILocation(line: 271, column: 15, scope: !5346)
!5387 = !DILocation(line: 271, column: 9, scope: !5346)
!5388 = !DILocation(line: 272, column: 39, scope: !5346)
!5389 = !DILocation(line: 272, column: 5, scope: !5346)
!5390 = !DILocation(line: 273, column: 19, scope: !5346)
!5391 = !DILocation(line: 274, column: 5, scope: !5346)
!5392 = !DILocation(line: 275, column: 17, scope: !5346)
!5393 = !DILocation(line: 275, column: 33, scope: !5346)
!5394 = !DILocation(line: 275, column: 5, scope: !5346)
!5395 = !DILocation(line: 277, column: 1, scope: !5346)
!5396 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo160M", scope: !411, file: !411, line: 284, type: !181, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5397)
!5397 = !{!5398, !5399}
!5398 = !DILocalVariable(name: "reg", scope: !5396, file: !411, line: 286, type: !250)
!5399 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !5396, file: !411, line: 287, type: !249)
!5400 = !DILocation(line: 286, column: 5, scope: !5396)
!5401 = !DILocation(line: 286, column: 23, scope: !5396)
!5402 = !DILocation(line: 0, scope: !5396)
!5403 = !DILocation(line: 290, column: 5, scope: !5396)
!5404 = !DILocation(line: 293, column: 11, scope: !5396)
!5405 = !DILocation(line: 293, column: 9, scope: !5396)
!5406 = !DILocation(line: 294, column: 11, scope: !5396)
!5407 = !DILocation(line: 294, column: 15, scope: !5396)
!5408 = !DILocation(line: 294, column: 9, scope: !5396)
!5409 = !DILocation(line: 295, column: 11, scope: !5396)
!5410 = !DILocation(line: 295, column: 15, scope: !5396)
!5411 = !DILocation(line: 295, column: 9, scope: !5396)
!5412 = !DILocation(line: 296, column: 39, scope: !5396)
!5413 = !DILocation(line: 296, column: 5, scope: !5396)
!5414 = !DILocation(line: 298, column: 5, scope: !5396)
!5415 = !DILocation(line: 298, column: 12, scope: !5396)
!5416 = !DILocation(line: 298, column: 19, scope: !5396)
!5417 = !DILocation(line: 298, column: 16, scope: !5396)
!5418 = distinct !{!5418, !5414, !5419}
!5419 = !DILocation(line: 298, column: 52, scope: !5396)
!5420 = !DILocation(line: 301, column: 11, scope: !5396)
!5421 = !DILocation(line: 301, column: 9, scope: !5396)
!5422 = !DILocation(line: 302, column: 11, scope: !5396)
!5423 = !DILocation(line: 302, column: 15, scope: !5396)
!5424 = !DILocation(line: 302, column: 9, scope: !5396)
!5425 = !DILocation(line: 303, column: 11, scope: !5396)
!5426 = !DILocation(line: 303, column: 15, scope: !5396)
!5427 = !DILocation(line: 303, column: 9, scope: !5396)
!5428 = !DILocation(line: 304, column: 39, scope: !5396)
!5429 = !DILocation(line: 304, column: 5, scope: !5396)
!5430 = !DILocation(line: 307, column: 11, scope: !5396)
!5431 = !DILocation(line: 307, column: 9, scope: !5396)
!5432 = !DILocation(line: 308, column: 11, scope: !5396)
!5433 = !DILocation(line: 308, column: 15, scope: !5396)
!5434 = !DILocation(line: 308, column: 9, scope: !5396)
!5435 = !DILocation(line: 309, column: 11, scope: !5396)
!5436 = !DILocation(line: 309, column: 15, scope: !5396)
!5437 = !DILocation(line: 309, column: 9, scope: !5396)
!5438 = !DILocation(line: 310, column: 39, scope: !5396)
!5439 = !DILocation(line: 310, column: 5, scope: !5396)
!5440 = !DILocation(line: 311, column: 19, scope: !5396)
!5441 = !DILocation(line: 312, column: 5, scope: !5396)
!5442 = !DILocation(line: 313, column: 17, scope: !5396)
!5443 = !DILocation(line: 313, column: 33, scope: !5396)
!5444 = !DILocation(line: 313, column: 5, scope: !5396)
!5445 = !DILocation(line: 315, column: 1, scope: !5396)
!5446 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo64M", scope: !411, file: !411, line: 323, type: !181, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5447)
!5447 = !{!5448, !5449}
!5448 = !DILocalVariable(name: "reg", scope: !5446, file: !411, line: 325, type: !250)
!5449 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !5446, file: !411, line: 326, type: !249)
!5450 = !DILocation(line: 325, column: 5, scope: !5446)
!5451 = !DILocation(line: 325, column: 23, scope: !5446)
!5452 = !DILocation(line: 0, scope: !5446)
!5453 = !DILocation(line: 329, column: 5, scope: !5446)
!5454 = !DILocation(line: 332, column: 11, scope: !5446)
!5455 = !DILocation(line: 332, column: 9, scope: !5446)
!5456 = !DILocation(line: 333, column: 11, scope: !5446)
!5457 = !DILocation(line: 333, column: 15, scope: !5446)
!5458 = !DILocation(line: 333, column: 9, scope: !5446)
!5459 = !DILocation(line: 334, column: 11, scope: !5446)
!5460 = !DILocation(line: 334, column: 9, scope: !5446)
!5461 = !DILocation(line: 335, column: 39, scope: !5446)
!5462 = !DILocation(line: 335, column: 5, scope: !5446)
!5463 = !DILocation(line: 337, column: 5, scope: !5446)
!5464 = !DILocation(line: 337, column: 12, scope: !5446)
!5465 = !DILocation(line: 337, column: 19, scope: !5446)
!5466 = !DILocation(line: 337, column: 16, scope: !5446)
!5467 = distinct !{!5467, !5463, !5468}
!5468 = !DILocation(line: 337, column: 52, scope: !5446)
!5469 = !DILocation(line: 340, column: 11, scope: !5446)
!5470 = !DILocation(line: 340, column: 9, scope: !5446)
!5471 = !DILocation(line: 341, column: 11, scope: !5446)
!5472 = !DILocation(line: 341, column: 15, scope: !5446)
!5473 = !DILocation(line: 341, column: 9, scope: !5446)
!5474 = !DILocation(line: 342, column: 11, scope: !5446)
!5475 = !DILocation(line: 342, column: 15, scope: !5446)
!5476 = !DILocation(line: 342, column: 9, scope: !5446)
!5477 = !DILocation(line: 343, column: 39, scope: !5446)
!5478 = !DILocation(line: 343, column: 5, scope: !5446)
!5479 = !DILocation(line: 344, column: 19, scope: !5446)
!5480 = !DILocation(line: 345, column: 5, scope: !5446)
!5481 = !DILocation(line: 346, column: 17, scope: !5446)
!5482 = !DILocation(line: 346, column: 33, scope: !5446)
!5483 = !DILocation(line: 346, column: 5, scope: !5446)
!5484 = !DILocation(line: 348, column: 1, scope: !5446)
!5485 = distinct !DISubprogram(name: "cmnSerialFlashClkConfToXtal", scope: !411, file: !411, line: 353, type: !181, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5486)
!5486 = !{!5487, !5488}
!5487 = !DILocalVariable(name: "reg", scope: !5485, file: !411, line: 355, type: !288)
!5488 = !DILocalVariable(name: "pTopCfgHclk", scope: !5485, file: !411, line: 356, type: !413)
!5489 = !DILocation(line: 355, column: 5, scope: !5485)
!5490 = !DILocation(line: 355, column: 21, scope: !5485)
!5491 = !DILocation(line: 0, scope: !5485)
!5492 = !DILocation(line: 358, column: 11, scope: !5485)
!5493 = !DILocation(line: 358, column: 9, scope: !5485)
!5494 = !DILocation(line: 359, column: 11, scope: !5485)
!5495 = !DILocation(line: 359, column: 15, scope: !5485)
!5496 = !DILocation(line: 359, column: 9, scope: !5485)
!5497 = !DILocation(line: 360, column: 11, scope: !5485)
!5498 = !DILocation(line: 360, column: 9, scope: !5485)
!5499 = !DILocation(line: 361, column: 37, scope: !5485)
!5500 = !DILocation(line: 361, column: 5, scope: !5485)
!5501 = !DILocation(line: 362, column: 1, scope: !5485)
!5502 = distinct !DISubprogram(name: "cmnSerialFlashClkConfTo64M", scope: !411, file: !411, line: 368, type: !181, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !410, retainedNodes: !5503)
!5503 = !{!5504, !5505, !5506, !5508, !5510}
!5504 = !DILocalVariable(name: "reg", scope: !5502, file: !411, line: 370, type: !288)
!5505 = !DILocalVariable(name: "pTopCfgHclk", scope: !5502, file: !411, line: 371, type: !413)
!5506 = !DILocalVariable(name: "addr", scope: !5507, file: !411, line: 383, type: !414)
!5507 = distinct !DILexicalBlock(scope: !5502, file: !411, line: 383, column: 5)
!5508 = !DILocalVariable(name: "addr", scope: !5509, file: !411, line: 384, type: !414)
!5509 = distinct !DILexicalBlock(scope: !5502, file: !411, line: 384, column: 5)
!5510 = !DILocalVariable(name: "addr", scope: !5511, file: !411, line: 385, type: !414)
!5511 = distinct !DILexicalBlock(scope: !5502, file: !411, line: 385, column: 5)
!5512 = !DILocation(line: 370, column: 5, scope: !5502)
!5513 = !DILocation(line: 370, column: 21, scope: !5502)
!5514 = !DILocation(line: 0, scope: !5502)
!5515 = !DILocation(line: 374, column: 5, scope: !5502)
!5516 = !DILocation(line: 377, column: 11, scope: !5502)
!5517 = !DILocation(line: 377, column: 9, scope: !5502)
!5518 = !DILocation(line: 378, column: 11, scope: !5502)
!5519 = !DILocation(line: 378, column: 15, scope: !5502)
!5520 = !DILocation(line: 378, column: 9, scope: !5502)
!5521 = !DILocation(line: 379, column: 11, scope: !5502)
!5522 = !DILocation(line: 379, column: 15, scope: !5502)
!5523 = !DILocation(line: 379, column: 9, scope: !5502)
!5524 = !DILocation(line: 380, column: 37, scope: !5502)
!5525 = !DILocation(line: 380, column: 5, scope: !5502)
!5526 = !DILocation(line: 0, scope: !5507)
!5527 = !DILocation(line: 383, column: 5, scope: !5507)
!5528 = !DILocation(line: 0, scope: !5509)
!5529 = !DILocation(line: 384, column: 5, scope: !5509)
!5530 = !DILocation(line: 0, scope: !5511)
!5531 = !DILocation(line: 385, column: 5, scope: !5511)
!5532 = !DILocation(line: 388, column: 1, scope: !5502)
!5533 = distinct !DISubprogram(name: "getc", scope: !423, file: !423, line: 68, type: !996, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5534)
!5534 = !{!5535}
!5535 = !DILocalVariable(name: "rc", scope: !5533, file: !423, line: 71, type: !53)
!5536 = !DILocation(line: 71, column: 14, scope: !5533)
!5537 = !DILocation(line: 0, scope: !5533)
!5538 = !DILocation(line: 72, column: 5, scope: !5533)
!5539 = distinct !DISubprogram(name: "getc_nowait", scope: !423, file: !423, line: 80, type: !996, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5540)
!5540 = !{!5541}
!5541 = !DILocalVariable(name: "c", scope: !5539, file: !423, line: 82, type: !332)
!5542 = !DILocation(line: 84, column: 9, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5539, file: !423, line: 84, column: 9)
!5544 = !DILocation(line: 84, column: 40, scope: !5543)
!5545 = !DILocation(line: 84, column: 9, scope: !5539)
!5546 = !DILocation(line: 85, column: 13, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5543, file: !423, line: 84, column: 47)
!5548 = !DILocation(line: 86, column: 16, scope: !5547)
!5549 = !DILocation(line: 0, scope: !5539)
!5550 = !DILocation(line: 86, column: 9, scope: !5547)
!5551 = !DILocation(line: 0, scope: !5543)
!5552 = !DILocation(line: 90, column: 1, scope: !5539)
!5553 = distinct !DISubprogram(name: "uart_output_char", scope: !423, file: !423, line: 93, type: !5554, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5557)
!5554 = !DISubroutineType(types: !5555)
!5555 = !{null, !5556, !132}
!5556 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_PORT", file: !426, line: 75, baseType: !425)
!5557 = !{!5558, !5559, !5560}
!5558 = !DILocalVariable(name: "port_no", arg: 1, scope: !5553, file: !423, line: 93, type: !5556)
!5559 = !DILocalVariable(name: "c", arg: 2, scope: !5553, file: !423, line: 93, type: !132)
!5560 = !DILocalVariable(name: "base", scope: !5553, file: !423, line: 95, type: !7)
!5561 = !DILocation(line: 0, scope: !5553)
!5562 = !DILocation(line: 95, column: 25, scope: !5553)
!5563 = !DILocation(line: 97, column: 5, scope: !5553)
!5564 = !DILocation(line: 97, column: 14, scope: !5553)
!5565 = !DILocation(line: 97, column: 42, scope: !5553)
!5566 = !DILocation(line: 97, column: 12, scope: !5553)
!5567 = distinct !{!5567, !5563, !5568}
!5568 = !DILocation(line: 98, column: 9, scope: !5553)
!5569 = !DILocation(line: 99, column: 35, scope: !5553)
!5570 = !DILocation(line: 99, column: 5, scope: !5553)
!5571 = !DILocation(line: 99, column: 33, scope: !5553)
!5572 = !DILocation(line: 102, column: 1, scope: !5553)
!5573 = distinct !DISubprogram(name: "uart_input_char", scope: !423, file: !423, line: 106, type: !5574, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5576)
!5574 = !DISubroutineType(types: !5575)
!5575 = !{!128, !5556}
!5576 = !{!5577, !5578, !5579}
!5577 = !DILocalVariable(name: "port_no", arg: 1, scope: !5573, file: !423, line: 106, type: !5556)
!5578 = !DILocalVariable(name: "base", scope: !5573, file: !423, line: 108, type: !7)
!5579 = !DILocalVariable(name: "c", scope: !5573, file: !423, line: 109, type: !332)
!5580 = !DILocation(line: 0, scope: !5573)
!5581 = !DILocation(line: 108, column: 25, scope: !5573)
!5582 = !DILocation(line: 111, column: 5, scope: !5573)
!5583 = !DILocation(line: 111, column: 14, scope: !5573)
!5584 = !DILocation(line: 111, column: 42, scope: !5573)
!5585 = !DILocation(line: 111, column: 12, scope: !5573)
!5586 = distinct !{!5586, !5582, !5587}
!5587 = !DILocation(line: 112, column: 9, scope: !5573)
!5588 = !DILocation(line: 114, column: 9, scope: !5573)
!5589 = !DILocation(line: 116, column: 5, scope: !5573)
!5590 = distinct !DISubprogram(name: "uart_input_char_unblocking", scope: !423, file: !423, line: 120, type: !5591, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5593)
!5591 = !DISubroutineType(types: !5592)
!5592 = !{!136, !5556}
!5593 = !{!5594, !5595, !5596}
!5594 = !DILocalVariable(name: "port_no", arg: 1, scope: !5590, file: !423, line: 120, type: !5556)
!5595 = !DILocalVariable(name: "base", scope: !5590, file: !423, line: 122, type: !7)
!5596 = !DILocalVariable(name: "c", scope: !5590, file: !423, line: 123, type: !332)
!5597 = !DILocation(line: 0, scope: !5590)
!5598 = !DILocation(line: 122, column: 25, scope: !5590)
!5599 = !DILocation(line: 125, column: 9, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5590, file: !423, line: 125, column: 9)
!5601 = !DILocation(line: 125, column: 37, scope: !5600)
!5602 = !DILocation(line: 125, column: 9, scope: !5590)
!5603 = !DILocation(line: 126, column: 13, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5600, file: !423, line: 125, column: 44)
!5605 = !DILocation(line: 127, column: 16, scope: !5604)
!5606 = !DILocation(line: 127, column: 9, scope: !5604)
!5607 = !DILocation(line: 0, scope: !5600)
!5608 = !DILocation(line: 131, column: 1, scope: !5590)
!5609 = distinct !DISubprogram(name: "halUART_HWInit", scope: !423, file: !423, line: 136, type: !5610, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5612)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{null, !5556}
!5612 = !{!5613}
!5613 = !DILocalVariable(name: "u_port", arg: 1, scope: !5609, file: !423, line: 136, type: !5556)
!5614 = !DILocation(line: 0, scope: !5609)
!5615 = !DILocation(line: 139, column: 5, scope: !5609)
!5616 = !DILocation(line: 140, column: 9, scope: !5609)
!5617 = !DILocation(line: 153, column: 5, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !423, line: 147, column: 38)
!5619 = distinct !DILexicalBlock(scope: !5620, file: !423, line: 147, column: 16)
!5620 = distinct !DILexicalBlock(scope: !5609, file: !423, line: 140, column: 9)
!5621 = !DILocation(line: 0, scope: !5620)
!5622 = !DILocation(line: 155, column: 1, scope: !5609)
!5623 = distinct !DISubprogram(name: "halUART_SetFormat", scope: !423, file: !423, line: 158, type: !5624, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5626)
!5624 = !DISubroutineType(types: !5625)
!5625 = !{null, !5556, !136, !1017, !1017, !1017}
!5626 = !{!5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5642, !5643}
!5627 = !DILocalVariable(name: "u_port", arg: 1, scope: !5623, file: !423, line: 158, type: !5556)
!5628 = !DILocalVariable(name: "baudrate", arg: 2, scope: !5623, file: !423, line: 158, type: !136)
!5629 = !DILocalVariable(name: "databit", arg: 3, scope: !5623, file: !423, line: 158, type: !1017)
!5630 = !DILocalVariable(name: "parity", arg: 4, scope: !5623, file: !423, line: 158, type: !1017)
!5631 = !DILocalVariable(name: "stopbit", arg: 5, scope: !5623, file: !423, line: 158, type: !1017)
!5632 = !DILocalVariable(name: "control_word", scope: !5623, file: !423, line: 160, type: !1017)
!5633 = !DILocalVariable(name: "UART_BASE", scope: !5623, file: !423, line: 161, type: !136)
!5634 = !DILocalVariable(name: "data", scope: !5623, file: !423, line: 162, type: !136)
!5635 = !DILocalVariable(name: "uart_lcr", scope: !5623, file: !423, line: 162, type: !136)
!5636 = !DILocalVariable(name: "high_speed_div", scope: !5623, file: !423, line: 162, type: !136)
!5637 = !DILocalVariable(name: "sample_count", scope: !5623, file: !423, line: 162, type: !136)
!5638 = !DILocalVariable(name: "sample_point", scope: !5623, file: !423, line: 162, type: !136)
!5639 = !DILocalVariable(name: "fraction", scope: !5623, file: !423, line: 162, type: !136)
!5640 = !DILocalVariable(name: "fraction_L_mapping", scope: !5623, file: !423, line: 163, type: !5641)
!5641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 176, elements: !190)
!5642 = !DILocalVariable(name: "fraction_M_mapping", scope: !5623, file: !423, line: 164, type: !5641)
!5643 = !DILocalVariable(name: "status", scope: !5623, file: !423, line: 165, type: !640)
!5644 = !DILocation(line: 0, scope: !5623)
!5645 = !DILocation(line: 163, column: 15, scope: !5623)
!5646 = !DILocation(line: 164, column: 15, scope: !5623)
!5647 = !DILocation(line: 166, column: 20, scope: !5623)
!5648 = !DILocation(line: 166, column: 18, scope: !5623)
!5649 = !DILocation(line: 168, column: 9, scope: !5623)
!5650 = !DILocation(line: 176, column: 5, scope: !5623)
!5651 = !DILocation(line: 176, column: 44, scope: !5623)
!5652 = !DILocation(line: 177, column: 16, scope: !5623)
!5653 = !DILocation(line: 178, column: 50, scope: !5623)
!5654 = !DILocation(line: 178, column: 38, scope: !5623)
!5655 = !DILocation(line: 179, column: 12, scope: !5623)
!5656 = !DILocation(line: 179, column: 25, scope: !5623)
!5657 = !DILocation(line: 180, column: 28, scope: !5623)
!5658 = !DILocation(line: 180, column: 34, scope: !5623)
!5659 = !DILocation(line: 182, column: 29, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5623, file: !423, line: 181, column: 5)
!5661 = !DILocation(line: 182, column: 46, scope: !5660)
!5662 = !DILocation(line: 183, column: 26, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5660, file: !423, line: 183, column: 13)
!5664 = !DILocation(line: 183, column: 13, scope: !5660)
!5665 = !DILocation(line: 192, column: 30, scope: !5623)
!5666 = !DILocation(line: 192, column: 35, scope: !5623)
!5667 = !DILocation(line: 192, column: 46, scope: !5623)
!5668 = !DILocation(line: 192, column: 74, scope: !5623)
!5669 = !DILocation(line: 192, column: 53, scope: !5623)
!5670 = !DILocation(line: 192, column: 80, scope: !5623)
!5671 = !DILocation(line: 193, column: 56, scope: !5623)
!5672 = !DILocation(line: 193, column: 5, scope: !5623)
!5673 = !DILocation(line: 193, column: 38, scope: !5623)
!5674 = !DILocation(line: 194, column: 57, scope: !5623)
!5675 = !DILocation(line: 194, column: 63, scope: !5623)
!5676 = !DILocation(line: 194, column: 5, scope: !5623)
!5677 = !DILocation(line: 194, column: 38, scope: !5623)
!5678 = !DILocation(line: 195, column: 5, scope: !5623)
!5679 = !DILocation(line: 195, column: 45, scope: !5623)
!5680 = !DILocation(line: 196, column: 5, scope: !5623)
!5681 = !DILocation(line: 196, column: 47, scope: !5623)
!5682 = !DILocation(line: 197, column: 46, scope: !5623)
!5683 = !DILocation(line: 197, column: 5, scope: !5623)
!5684 = !DILocation(line: 197, column: 44, scope: !5623)
!5685 = !DILocation(line: 198, column: 46, scope: !5623)
!5686 = !DILocation(line: 198, column: 5, scope: !5623)
!5687 = !DILocation(line: 198, column: 44, scope: !5623)
!5688 = !DILocation(line: 199, column: 38, scope: !5623)
!5689 = !DILocation(line: 200, column: 5, scope: !5623)
!5690 = !DILocation(line: 200, column: 38, scope: !5623)
!5691 = !DILocation(line: 202, column: 20, scope: !5623)
!5692 = !DILocation(line: 203, column: 18, scope: !5623)
!5693 = !DILocation(line: 205, column: 18, scope: !5623)
!5694 = !DILocation(line: 207, column: 18, scope: !5623)
!5695 = !DILocation(line: 208, column: 18, scope: !5623)
!5696 = !DILocation(line: 209, column: 5, scope: !5623)
!5697 = !DILocation(line: 213, column: 1, scope: !5623)
!5698 = distinct !DISubprogram(name: "halUART_Get_VFIFO_Length", scope: !423, file: !423, line: 215, type: !5699, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5701)
!5699 = !DISubroutineType(types: !5700)
!5700 = !{null, !5556, !640, !3543}
!5701 = !{!5702, !5703, !5704}
!5702 = !DILocalVariable(name: "u_port", arg: 1, scope: !5698, file: !423, line: 215, type: !5556)
!5703 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5698, file: !423, line: 215, type: !640)
!5704 = !DILocalVariable(name: "length", arg: 3, scope: !5698, file: !423, line: 215, type: !3543)
!5705 = !DILocation(line: 0, scope: !5698)
!5706 = !DILocation(line: 217, column: 16, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5698, file: !423, line: 217, column: 9)
!5708 = !DILocation(line: 0, scope: !5707)
!5709 = !DILocation(line: 217, column: 9, scope: !5698)
!5710 = !DILocation(line: 218, column: 13, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5707, file: !423, line: 217, column: 31)
!5712 = !DILocation(line: 219, column: 23, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5714, file: !423, line: 218, column: 20)
!5714 = distinct !DILexicalBlock(scope: !5711, file: !423, line: 218, column: 13)
!5715 = !DILocation(line: 220, column: 9, scope: !5713)
!5716 = !DILocation(line: 221, column: 23, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5714, file: !423, line: 220, column: 16)
!5718 = !DILocation(line: 221, column: 21, scope: !5717)
!5719 = !DILocation(line: 222, column: 24, scope: !5717)
!5720 = !DILocation(line: 222, column: 21, scope: !5717)
!5721 = !DILocation(line: 225, column: 13, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5707, file: !423, line: 224, column: 12)
!5723 = !DILocation(line: 226, column: 23, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5725, file: !423, line: 225, column: 20)
!5725 = distinct !DILexicalBlock(scope: !5722, file: !423, line: 225, column: 13)
!5726 = !DILocation(line: 227, column: 9, scope: !5724)
!5727 = !DILocation(line: 228, column: 23, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5725, file: !423, line: 227, column: 16)
!5729 = !DILocation(line: 228, column: 21, scope: !5728)
!5730 = !DILocation(line: 229, column: 24, scope: !5728)
!5731 = !DILocation(line: 229, column: 21, scope: !5728)
!5732 = !DILocation(line: 233, column: 5, scope: !5698)
!5733 = distinct !DISubprogram(name: "halUART_Read_VFIFO_Data", scope: !423, file: !423, line: 236, type: !5734, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5736)
!5734 = !DISubroutineType(types: !5735)
!5735 = !{null, !5556, !340, !136}
!5736 = !{!5737, !5738, !5739, !5740}
!5737 = !DILocalVariable(name: "u_port", arg: 1, scope: !5733, file: !423, line: 236, type: !5556)
!5738 = !DILocalVariable(name: "data", arg: 2, scope: !5733, file: !423, line: 236, type: !340)
!5739 = !DILocalVariable(name: "length", arg: 3, scope: !5733, file: !423, line: 236, type: !136)
!5740 = !DILocalVariable(name: "idx", scope: !5733, file: !423, line: 238, type: !289)
!5741 = !DILocation(line: 0, scope: !5733)
!5742 = !DILocation(line: 239, column: 23, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5744, file: !423, line: 239, column: 5)
!5744 = distinct !DILexicalBlock(scope: !5733, file: !423, line: 239, column: 5)
!5745 = !DILocation(line: 239, column: 5, scope: !5744)
!5746 = !DILocation(line: 240, column: 13, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5743, file: !423, line: 239, column: 40)
!5748 = !DILocation(line: 244, column: 9, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5750, file: !423, line: 242, column: 42)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !423, line: 242, column: 20)
!5751 = distinct !DILexicalBlock(scope: !5747, file: !423, line: 240, column: 13)
!5752 = !DILocation(line: 0, scope: !5751)
!5753 = !DILocation(line: 239, column: 36, scope: !5743)
!5754 = distinct !{!5754, !5745, !5755}
!5755 = !DILocation(line: 246, column: 5, scope: !5744)
!5756 = !DILocation(line: 249, column: 1, scope: !5733)
!5757 = distinct !DISubprogram(name: "halUART_Write_VFIFO_Data", scope: !423, file: !423, line: 251, type: !5758, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5760)
!5758 = !DISubroutineType(types: !5759)
!5759 = !{null, !5556, !3126, !136}
!5760 = !{!5761, !5762, !5763, !5764}
!5761 = !DILocalVariable(name: "u_port", arg: 1, scope: !5757, file: !423, line: 251, type: !5556)
!5762 = !DILocalVariable(name: "data", arg: 2, scope: !5757, file: !423, line: 251, type: !3126)
!5763 = !DILocalVariable(name: "length", arg: 3, scope: !5757, file: !423, line: 251, type: !136)
!5764 = !DILocalVariable(name: "idx", scope: !5757, file: !423, line: 253, type: !289)
!5765 = !DILocation(line: 0, scope: !5757)
!5766 = !DILocation(line: 254, column: 23, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !423, line: 254, column: 5)
!5768 = distinct !DILexicalBlock(scope: !5757, file: !423, line: 254, column: 5)
!5769 = !DILocation(line: 254, column: 5, scope: !5768)
!5770 = !DILocation(line: 255, column: 13, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5767, file: !423, line: 254, column: 40)
!5772 = !DILocation(line: 256, column: 61, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5774, file: !423, line: 255, column: 35)
!5774 = distinct !DILexicalBlock(scope: !5771, file: !423, line: 255, column: 13)
!5775 = !DILocation(line: 256, column: 59, scope: !5773)
!5776 = !DILocation(line: 257, column: 9, scope: !5773)
!5777 = !DILocation(line: 258, column: 61, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !423, line: 257, column: 42)
!5779 = distinct !DILexicalBlock(scope: !5774, file: !423, line: 257, column: 20)
!5780 = !DILocation(line: 258, column: 59, scope: !5778)
!5781 = !DILocation(line: 259, column: 9, scope: !5778)
!5782 = !DILocation(line: 254, column: 36, scope: !5767)
!5783 = distinct !{!5783, !5769, !5784}
!5784 = !DILocation(line: 261, column: 5, scope: !5768)
!5785 = !DILocation(line: 264, column: 1, scope: !5757)
!5786 = distinct !DISubprogram(name: "halUART_Tx_VFIFO_Initialize", scope: !423, file: !423, line: 266, type: !5787, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5789)
!5787 = !DISubroutineType(types: !5788)
!5788 = !{null, !5556, !340, !136, !136}
!5789 = !{!5790, !5791, !5792, !5793}
!5790 = !DILocalVariable(name: "u_port", arg: 1, scope: !5786, file: !423, line: 266, type: !5556)
!5791 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !5786, file: !423, line: 266, type: !340)
!5792 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !5786, file: !423, line: 266, type: !136)
!5793 = !DILocalVariable(name: "threshold", arg: 4, scope: !5786, file: !423, line: 266, type: !136)
!5794 = !DILocation(line: 0, scope: !5786)
!5795 = !DILocation(line: 268, column: 9, scope: !5786)
!5796 = !DILocation(line: 274, column: 5, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5798, file: !423, line: 271, column: 38)
!5798 = distinct !DILexicalBlock(scope: !5799, file: !423, line: 271, column: 16)
!5799 = distinct !DILexicalBlock(scope: !5786, file: !423, line: 268, column: 9)
!5800 = !DILocation(line: 0, scope: !5799)
!5801 = !DILocation(line: 276, column: 1, scope: !5786)
!5802 = distinct !DISubprogram(name: "halUART_Rx_VFIFO_Initialize", scope: !423, file: !423, line: 278, type: !5803, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5805)
!5803 = !DISubroutineType(types: !5804)
!5804 = !{null, !5556, !340, !136, !136, !136, !136}
!5805 = !{!5806, !5807, !5808, !5809, !5810, !5811}
!5806 = !DILocalVariable(name: "u_port", arg: 1, scope: !5802, file: !423, line: 278, type: !5556)
!5807 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !5802, file: !423, line: 278, type: !340)
!5808 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !5802, file: !423, line: 278, type: !136)
!5809 = !DILocalVariable(name: "alert_length", arg: 4, scope: !5802, file: !423, line: 278, type: !136)
!5810 = !DILocalVariable(name: "threshold", arg: 5, scope: !5802, file: !423, line: 278, type: !136)
!5811 = !DILocalVariable(name: "timeout", arg: 6, scope: !5802, file: !423, line: 278, type: !136)
!5812 = !DILocation(line: 0, scope: !5802)
!5813 = !DILocation(line: 280, column: 9, scope: !5802)
!5814 = !DILocation(line: 286, column: 5, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5816, file: !423, line: 283, column: 38)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !423, line: 283, column: 16)
!5817 = distinct !DILexicalBlock(scope: !5802, file: !423, line: 280, column: 9)
!5818 = !DILocation(line: 0, scope: !5817)
!5819 = !DILocation(line: 288, column: 1, scope: !5802)
!5820 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_Callback", scope: !423, file: !423, line: 290, type: !5821, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5823)
!5821 = !DISubroutineType(types: !5822)
!5822 = !{null, !5556, !179}
!5823 = !{!5824, !5825}
!5824 = !DILocalVariable(name: "u_port", arg: 1, scope: !5820, file: !423, line: 290, type: !5556)
!5825 = !DILocalVariable(name: "func", arg: 2, scope: !5820, file: !423, line: 290, type: !179)
!5826 = !DILocation(line: 0, scope: !5820)
!5827 = !DILocation(line: 292, column: 9, scope: !5820)
!5828 = !DILocation(line: 296, column: 5, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5830, file: !423, line: 294, column: 38)
!5830 = distinct !DILexicalBlock(scope: !5831, file: !423, line: 294, column: 16)
!5831 = distinct !DILexicalBlock(scope: !5820, file: !423, line: 292, column: 9)
!5832 = !DILocation(line: 0, scope: !5831)
!5833 = !DILocation(line: 298, column: 1, scope: !5820)
!5834 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_TO_Callback", scope: !423, file: !423, line: 300, type: !5821, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5835)
!5835 = !{!5836, !5837}
!5836 = !DILocalVariable(name: "u_port", arg: 1, scope: !5834, file: !423, line: 300, type: !5556)
!5837 = !DILocalVariable(name: "func", arg: 2, scope: !5834, file: !423, line: 300, type: !179)
!5838 = !DILocation(line: 0, scope: !5834)
!5839 = !DILocation(line: 302, column: 9, scope: !5834)
!5840 = !DILocation(line: 306, column: 5, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !423, line: 304, column: 38)
!5842 = distinct !DILexicalBlock(scope: !5843, file: !423, line: 304, column: 16)
!5843 = distinct !DILexicalBlock(scope: !5834, file: !423, line: 302, column: 9)
!5844 = !DILocation(line: 0, scope: !5843)
!5845 = !DILocation(line: 308, column: 1, scope: !5834)
!5846 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !423, file: !423, line: 310, type: !5610, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5847)
!5847 = !{!5848, !5849, !5850, !5851}
!5848 = !DILocalVariable(name: "u_port", arg: 1, scope: !5846, file: !423, line: 310, type: !5556)
!5849 = !DILocalVariable(name: "base", scope: !5846, file: !423, line: 312, type: !7)
!5850 = !DILocalVariable(name: "EFR", scope: !5846, file: !423, line: 313, type: !1017)
!5851 = !DILocalVariable(name: "LCR", scope: !5846, file: !423, line: 313, type: !1017)
!5852 = !DILocation(line: 0, scope: !5846)
!5853 = !DILocation(line: 312, column: 25, scope: !5846)
!5854 = !DILocation(line: 315, column: 11, scope: !5846)
!5855 = !DILocation(line: 317, column: 33, scope: !5846)
!5856 = !DILocation(line: 318, column: 11, scope: !5846)
!5857 = !DILocation(line: 320, column: 35, scope: !5846)
!5858 = !DILocation(line: 320, column: 33, scope: !5846)
!5859 = !DILocation(line: 322, column: 5, scope: !5846)
!5860 = !DILocation(line: 322, column: 39, scope: !5846)
!5861 = !DILocation(line: 324, column: 33, scope: !5846)
!5862 = !DILocation(line: 325, column: 5, scope: !5846)
!5863 = !DILocation(line: 325, column: 33, scope: !5846)
!5864 = !DILocation(line: 327, column: 35, scope: !5846)
!5865 = !DILocation(line: 327, column: 33, scope: !5846)
!5866 = !DILocation(line: 328, column: 1, scope: !5846)
!5867 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !423, file: !423, line: 330, type: !5868, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5870)
!5868 = !DISubroutineType(types: !5869)
!5869 = !{null, !5556, !128, !128, !128}
!5870 = !{!5871, !5872, !5873, !5874, !5875, !5876, !5877}
!5871 = !DILocalVariable(name: "u_port", arg: 1, scope: !5867, file: !423, line: 330, type: !5556)
!5872 = !DILocalVariable(name: "xon", arg: 2, scope: !5867, file: !423, line: 330, type: !128)
!5873 = !DILocalVariable(name: "xoff", arg: 3, scope: !5867, file: !423, line: 330, type: !128)
!5874 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5867, file: !423, line: 330, type: !128)
!5875 = !DILocalVariable(name: "base", scope: !5867, file: !423, line: 332, type: !7)
!5876 = !DILocalVariable(name: "EFR", scope: !5867, file: !423, line: 333, type: !1017)
!5877 = !DILocalVariable(name: "LCR", scope: !5867, file: !423, line: 333, type: !1017)
!5878 = !DILocation(line: 0, scope: !5867)
!5879 = !DILocation(line: 332, column: 25, scope: !5867)
!5880 = !DILocation(line: 335, column: 11, scope: !5867)
!5881 = !DILocation(line: 337, column: 33, scope: !5867)
!5882 = !DILocation(line: 338, column: 36, scope: !5867)
!5883 = !DILocation(line: 338, column: 5, scope: !5867)
!5884 = !DILocation(line: 338, column: 34, scope: !5867)
!5885 = !DILocation(line: 339, column: 5, scope: !5867)
!5886 = !DILocation(line: 339, column: 34, scope: !5867)
!5887 = !DILocation(line: 340, column: 37, scope: !5867)
!5888 = !DILocation(line: 340, column: 5, scope: !5867)
!5889 = !DILocation(line: 340, column: 35, scope: !5867)
!5890 = !DILocation(line: 341, column: 5, scope: !5867)
!5891 = !DILocation(line: 341, column: 35, scope: !5867)
!5892 = !DILocation(line: 343, column: 11, scope: !5867)
!5893 = !DILocation(line: 345, column: 35, scope: !5867)
!5894 = !DILocation(line: 345, column: 33, scope: !5867)
!5895 = !DILocation(line: 347, column: 35, scope: !5867)
!5896 = !DILocation(line: 347, column: 33, scope: !5867)
!5897 = !DILocation(line: 349, column: 43, scope: !5867)
!5898 = !DILocation(line: 349, column: 5, scope: !5867)
!5899 = !DILocation(line: 349, column: 41, scope: !5867)
!5900 = !DILocation(line: 350, column: 5, scope: !5867)
!5901 = !DILocation(line: 350, column: 39, scope: !5867)
!5902 = !DILocation(line: 351, column: 1, scope: !5867)
!5903 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !423, file: !423, line: 353, type: !5610, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5904)
!5904 = !{!5905, !5906, !5907}
!5905 = !DILocalVariable(name: "u_port", arg: 1, scope: !5903, file: !423, line: 353, type: !5556)
!5906 = !DILocalVariable(name: "base", scope: !5903, file: !423, line: 355, type: !7)
!5907 = !DILocalVariable(name: "LCR", scope: !5903, file: !423, line: 356, type: !1017)
!5908 = !DILocation(line: 0, scope: !5903)
!5909 = !DILocation(line: 355, column: 25, scope: !5903)
!5910 = !DILocation(line: 358, column: 11, scope: !5903)
!5911 = !DILocation(line: 360, column: 33, scope: !5903)
!5912 = !DILocation(line: 362, column: 5, scope: !5903)
!5913 = !DILocation(line: 362, column: 33, scope: !5903)
!5914 = !DILocation(line: 364, column: 33, scope: !5903)
!5915 = !DILocation(line: 366, column: 35, scope: !5903)
!5916 = !DILocation(line: 366, column: 33, scope: !5903)
!5917 = !DILocation(line: 367, column: 1, scope: !5903)
!5918 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !423, file: !423, line: 370, type: !5610, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5919)
!5919 = !{!5920, !5921}
!5920 = !DILocalVariable(name: "u_port", arg: 1, scope: !5918, file: !423, line: 370, type: !5556)
!5921 = !DILocalVariable(name: "base", scope: !5918, file: !423, line: 372, type: !7)
!5922 = !DILocation(line: 0, scope: !5918)
!5923 = !DILocation(line: 372, column: 25, scope: !5918)
!5924 = !DILocation(line: 374, column: 5, scope: !5918)
!5925 = !DILocation(line: 374, column: 38, scope: !5918)
!5926 = !DILocation(line: 375, column: 1, scope: !5918)
!5927 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !423, file: !423, line: 377, type: !5610, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5928)
!5928 = !{!5929, !5930, !5931, !5932}
!5929 = !DILocalVariable(name: "u_port", arg: 1, scope: !5927, file: !423, line: 377, type: !5556)
!5930 = !DILocalVariable(name: "base", scope: !5927, file: !423, line: 379, type: !7)
!5931 = !DILocalVariable(name: "IER", scope: !5927, file: !423, line: 380, type: !1017)
!5932 = !DILocalVariable(name: "LCR", scope: !5927, file: !423, line: 380, type: !1017)
!5933 = !DILocation(line: 0, scope: !5927)
!5934 = !DILocation(line: 379, column: 25, scope: !5927)
!5935 = !DILocation(line: 382, column: 11, scope: !5927)
!5936 = !DILocation(line: 383, column: 33, scope: !5927)
!5937 = !DILocation(line: 385, column: 11, scope: !5927)
!5938 = !DILocation(line: 387, column: 35, scope: !5927)
!5939 = !DILocation(line: 387, column: 33, scope: !5927)
!5940 = !DILocation(line: 389, column: 35, scope: !5927)
!5941 = !DILocation(line: 389, column: 33, scope: !5927)
!5942 = !DILocation(line: 391, column: 5, scope: !5927)
!5943 = !DILocation(line: 391, column: 38, scope: !5927)
!5944 = !DILocation(line: 392, column: 1, scope: !5927)
!5945 = distinct !DISubprogram(name: "uart_mask_send_interrupt", scope: !423, file: !423, line: 394, type: !5610, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5946)
!5946 = !{!5947, !5948, !5949, !5950}
!5947 = !DILocalVariable(name: "u_port", arg: 1, scope: !5945, file: !423, line: 394, type: !5556)
!5948 = !DILocalVariable(name: "base", scope: !5945, file: !423, line: 396, type: !7)
!5949 = !DILocalVariable(name: "IER", scope: !5945, file: !423, line: 397, type: !1017)
!5950 = !DILocalVariable(name: "LCR", scope: !5945, file: !423, line: 397, type: !1017)
!5951 = !DILocation(line: 0, scope: !5945)
!5952 = !DILocation(line: 396, column: 25, scope: !5945)
!5953 = !DILocation(line: 399, column: 11, scope: !5945)
!5954 = !DILocation(line: 400, column: 33, scope: !5945)
!5955 = !DILocation(line: 402, column: 11, scope: !5945)
!5956 = !DILocation(line: 403, column: 9, scope: !5945)
!5957 = !DILocation(line: 404, column: 33, scope: !5945)
!5958 = !DILocation(line: 406, column: 35, scope: !5945)
!5959 = !DILocation(line: 406, column: 33, scope: !5945)
!5960 = !DILocation(line: 408, column: 5, scope: !5945)
!5961 = !DILocation(line: 408, column: 38, scope: !5945)
!5962 = !DILocation(line: 409, column: 1, scope: !5945)
!5963 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !423, file: !423, line: 411, type: !713, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5964)
!5964 = !{!5965, !5966, !5967, !5968}
!5965 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5963, file: !423, line: 411, type: !452)
!5966 = !DILocalVariable(name: "u_port", scope: !5963, file: !423, line: 413, type: !5556)
!5967 = !DILocalVariable(name: "base", scope: !5963, file: !423, line: 414, type: !7)
!5968 = !DILocalVariable(name: "IIR", scope: !5963, file: !423, line: 415, type: !1017)
!5969 = !DILocation(line: 0, scope: !5963)
!5970 = !DILocation(line: 417, column: 20, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5963, file: !423, line: 417, column: 9)
!5972 = !DILocation(line: 425, column: 11, scope: !5963)
!5973 = !DILocation(line: 426, column: 17, scope: !5963)
!5974 = !DILocation(line: 426, column: 5, scope: !5963)
!5975 = !DILocation(line: 428, column: 13, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5963, file: !423, line: 426, column: 25)
!5977 = !DILocation(line: 429, column: 13, scope: !5976)
!5978 = !DILocation(line: 433, column: 1, scope: !5963)
!5979 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !423, file: !423, line: 436, type: !5610, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !5980)
!5980 = !{!5981, !5982}
!5981 = !DILocalVariable(name: "u_port", arg: 1, scope: !5979, file: !423, line: 436, type: !5556)
!5982 = !DILocalVariable(name: "base", scope: !5979, file: !423, line: 438, type: !7)
!5983 = !DILocation(line: 0, scope: !5979)
!5984 = !DILocation(line: 438, column: 25, scope: !5979)
!5985 = !DILocation(line: 440, column: 5, scope: !5979)
!5986 = !DILocation(line: 440, column: 33, scope: !5979)
!5987 = !DILocation(line: 441, column: 5, scope: !5979)
!5988 = !DILocation(line: 441, column: 33, scope: !5979)
!5989 = !DILocation(line: 442, column: 5, scope: !5979)
!5990 = !DILocation(line: 442, column: 34, scope: !5979)
!5991 = !DILocation(line: 443, column: 5, scope: !5979)
!5992 = !DILocation(line: 443, column: 35, scope: !5979)
!5993 = !DILocation(line: 445, column: 33, scope: !5979)
!5994 = !DILocation(line: 446, column: 5, scope: !5979)
!5995 = !DILocation(line: 446, column: 33, scope: !5979)
!5996 = !DILocation(line: 447, column: 5, scope: !5979)
!5997 = !DILocation(line: 447, column: 33, scope: !5979)
!5998 = !DILocation(line: 449, column: 33, scope: !5979)
!5999 = !DILocation(line: 450, column: 33, scope: !5979)
!6000 = !DILocation(line: 451, column: 33, scope: !5979)
!6001 = !DILocation(line: 453, column: 33, scope: !5979)
!6002 = !DILocation(line: 454, column: 33, scope: !5979)
!6003 = !DILocation(line: 455, column: 33, scope: !5979)
!6004 = !DILocation(line: 457, column: 33, scope: !5979)
!6005 = !DILocation(line: 458, column: 5, scope: !5979)
!6006 = !DILocation(line: 458, column: 33, scope: !5979)
!6007 = !DILocation(line: 459, column: 5, scope: !5979)
!6008 = !DILocation(line: 459, column: 39, scope: !5979)
!6009 = !DILocation(line: 460, column: 5, scope: !5979)
!6010 = !DILocation(line: 460, column: 40, scope: !5979)
!6011 = !DILocation(line: 461, column: 5, scope: !5979)
!6012 = !DILocation(line: 461, column: 42, scope: !5979)
!6013 = !DILocation(line: 462, column: 5, scope: !5979)
!6014 = !DILocation(line: 462, column: 42, scope: !5979)
!6015 = !DILocation(line: 463, column: 5, scope: !5979)
!6016 = !DILocation(line: 463, column: 35, scope: !5979)
!6017 = !DILocation(line: 464, column: 5, scope: !5979)
!6018 = !DILocation(line: 464, column: 41, scope: !5979)
!6019 = !DILocation(line: 465, column: 5, scope: !5979)
!6020 = !DILocation(line: 465, column: 39, scope: !5979)
!6021 = !DILocation(line: 466, column: 5, scope: !5979)
!6022 = !DILocation(line: 466, column: 38, scope: !5979)
!6023 = !DILocation(line: 467, column: 5, scope: !5979)
!6024 = !DILocation(line: 467, column: 42, scope: !5979)
!6025 = !DILocation(line: 468, column: 5, scope: !5979)
!6026 = !DILocation(line: 468, column: 45, scope: !5979)
!6027 = !DILocation(line: 469, column: 5, scope: !5979)
!6028 = !DILocation(line: 469, column: 39, scope: !5979)
!6029 = !DILocation(line: 470, column: 5, scope: !5979)
!6030 = !DILocation(line: 470, column: 39, scope: !5979)
!6031 = !DILocation(line: 471, column: 5, scope: !5979)
!6032 = !DILocation(line: 471, column: 42, scope: !5979)
!6033 = !DILocation(line: 472, column: 1, scope: !5979)
!6034 = distinct !DISubprogram(name: "uart_query_empty", scope: !423, file: !423, line: 474, type: !5610, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !422, retainedNodes: !6035)
!6035 = !{!6036, !6037}
!6036 = !DILocalVariable(name: "u_port", arg: 1, scope: !6034, file: !423, line: 474, type: !5556)
!6037 = !DILocalVariable(name: "base", scope: !6034, file: !423, line: 476, type: !7)
!6038 = !DILocation(line: 0, scope: !6034)
!6039 = !DILocation(line: 476, column: 25, scope: !6034)
!6040 = !DILocation(line: 478, column: 5, scope: !6034)
!6041 = !DILocation(line: 478, column: 14, scope: !6034)
!6042 = !DILocation(line: 478, column: 42, scope: !6034)
!6043 = !DILocation(line: 478, column: 12, scope: !6034)
!6044 = distinct !{!6044, !6040, !6045}
!6045 = !DILocation(line: 478, column: 50, scope: !6034)
!6046 = !DILocation(line: 479, column: 1, scope: !6034)
!6047 = distinct !DISubprogram(name: "log_hal_fatal_internal", scope: !456, file: !456, line: 129, type: !6048, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !6050)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{null, !444, !53, !444, null}
!6050 = !{!6051, !6052, !6053, !6054}
!6051 = !DILocalVariable(name: "func", arg: 1, scope: !6047, file: !456, line: 129, type: !444)
!6052 = !DILocalVariable(name: "line", arg: 2, scope: !6047, file: !456, line: 129, type: !53)
!6053 = !DILocalVariable(name: "message", arg: 3, scope: !6047, file: !456, line: 129, type: !444)
!6054 = !DILocalVariable(name: "ap", scope: !6047, file: !456, line: 131, type: !6055)
!6055 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !6056, line: 46, baseType: !6057)
!6056 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!6057 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6058, line: 32, baseType: !6059)
!6058 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!6059 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !456, baseType: !6060)
!6060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6061)
!6061 = !{!6062}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6060, file: !456, line: 131, baseType: !161, size: 32)
!6063 = !DILocation(line: 0, scope: !6047)
!6064 = !DILocation(line: 131, column: 5, scope: !6047)
!6065 = !DILocation(line: 131, column: 13, scope: !6047)
!6066 = !DILocation(line: 132, column: 5, scope: !6047)
!6067 = !DILocation(line: 133, column: 5, scope: !6047)
!6068 = !DILocation(line: 134, column: 5, scope: !6047)
!6069 = !DILocation(line: 135, column: 1, scope: !6047)
!6070 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !456, file: !456, line: 138, type: !6048, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !6071)
!6071 = !{!6072, !6073, !6074, !6075}
!6072 = !DILocalVariable(name: "func", arg: 1, scope: !6070, file: !456, line: 138, type: !444)
!6073 = !DILocalVariable(name: "line", arg: 2, scope: !6070, file: !456, line: 138, type: !53)
!6074 = !DILocalVariable(name: "message", arg: 3, scope: !6070, file: !456, line: 138, type: !444)
!6075 = !DILocalVariable(name: "ap", scope: !6070, file: !456, line: 140, type: !6055)
!6076 = !DILocation(line: 0, scope: !6070)
!6077 = !DILocation(line: 140, column: 5, scope: !6070)
!6078 = !DILocation(line: 140, column: 13, scope: !6070)
!6079 = !DILocation(line: 141, column: 5, scope: !6070)
!6080 = !DILocation(line: 142, column: 5, scope: !6070)
!6081 = !DILocation(line: 143, column: 5, scope: !6070)
!6082 = !DILocation(line: 144, column: 1, scope: !6070)
!6083 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !456, file: !456, line: 146, type: !6048, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !6084)
!6084 = !{!6085, !6086, !6087, !6088}
!6085 = !DILocalVariable(name: "func", arg: 1, scope: !6083, file: !456, line: 146, type: !444)
!6086 = !DILocalVariable(name: "line", arg: 2, scope: !6083, file: !456, line: 146, type: !53)
!6087 = !DILocalVariable(name: "message", arg: 3, scope: !6083, file: !456, line: 146, type: !444)
!6088 = !DILocalVariable(name: "ap", scope: !6083, file: !456, line: 148, type: !6055)
!6089 = !DILocation(line: 0, scope: !6083)
!6090 = !DILocation(line: 148, column: 5, scope: !6083)
!6091 = !DILocation(line: 148, column: 13, scope: !6083)
!6092 = !DILocation(line: 149, column: 5, scope: !6083)
!6093 = !DILocation(line: 150, column: 5, scope: !6083)
!6094 = !DILocation(line: 151, column: 5, scope: !6083)
!6095 = !DILocation(line: 152, column: 1, scope: !6083)
!6096 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !456, file: !456, line: 154, type: !6048, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !6097)
!6097 = !{!6098, !6099, !6100, !6101}
!6098 = !DILocalVariable(name: "func", arg: 1, scope: !6096, file: !456, line: 154, type: !444)
!6099 = !DILocalVariable(name: "line", arg: 2, scope: !6096, file: !456, line: 154, type: !53)
!6100 = !DILocalVariable(name: "message", arg: 3, scope: !6096, file: !456, line: 154, type: !444)
!6101 = !DILocalVariable(name: "ap", scope: !6096, file: !456, line: 156, type: !6055)
!6102 = !DILocation(line: 0, scope: !6096)
!6103 = !DILocation(line: 156, column: 5, scope: !6096)
!6104 = !DILocation(line: 156, column: 13, scope: !6096)
!6105 = !DILocation(line: 157, column: 5, scope: !6096)
!6106 = !DILocation(line: 158, column: 5, scope: !6096)
!6107 = !DILocation(line: 159, column: 5, scope: !6096)
!6108 = !DILocation(line: 160, column: 1, scope: !6096)
!6109 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !456, file: !456, line: 162, type: !6110, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !455, retainedNodes: !6112)
!6110 = !DISubroutineType(types: !6111)
!6111 = !{null, !444, !53, !444, !488, !53, null}
!6112 = !{!6113, !6114, !6115, !6116, !6117, !6118}
!6113 = !DILocalVariable(name: "func", arg: 1, scope: !6109, file: !456, line: 162, type: !444)
!6114 = !DILocalVariable(name: "line", arg: 2, scope: !6109, file: !456, line: 162, type: !53)
!6115 = !DILocalVariable(name: "message", arg: 3, scope: !6109, file: !456, line: 162, type: !444)
!6116 = !DILocalVariable(name: "data", arg: 4, scope: !6109, file: !456, line: 162, type: !488)
!6117 = !DILocalVariable(name: "length", arg: 5, scope: !6109, file: !456, line: 162, type: !53)
!6118 = !DILocalVariable(name: "ap", scope: !6109, file: !456, line: 164, type: !6055)
!6119 = !DILocation(line: 0, scope: !6109)
!6120 = !DILocation(line: 164, column: 5, scope: !6109)
!6121 = !DILocation(line: 164, column: 13, scope: !6109)
!6122 = !DILocation(line: 165, column: 5, scope: !6109)
!6123 = !DILocation(line: 166, column: 5, scope: !6109)
!6124 = !DILocation(line: 167, column: 5, scope: !6109)
!6125 = !DILocation(line: 168, column: 1, scope: !6109)
!6126 = distinct !DISubprogram(name: "hal_cache_init", scope: !493, file: !493, line: 53, type: !6127, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6130)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{!6129}
!6129 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !496, line: 172, baseType: !495)
!6130 = !{!6131, !6132}
!6131 = !DILocalVariable(name: "region", scope: !6126, file: !493, line: 55, type: !1095)
!6132 = !DILocalVariable(name: "irq_flag", scope: !6126, file: !493, line: 56, type: !136)
!6133 = !DILocation(line: 59, column: 16, scope: !6126)
!6134 = !DILocation(line: 0, scope: !6126)
!6135 = !DILocation(line: 62, column: 9, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6126, file: !493, line: 62, column: 9)
!6137 = !DILocation(line: 62, column: 9, scope: !6126)
!6138 = !DILocation(line: 64, column: 9, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6136, file: !493, line: 62, column: 39)
!6140 = !DILocation(line: 66, column: 9, scope: !6139)
!6141 = !DILocation(line: 69, column: 24, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6136, file: !493, line: 67, column: 12)
!6143 = !DILocation(line: 72, column: 9, scope: !6142)
!6144 = !DILocation(line: 77, column: 5, scope: !6126)
!6145 = !DILocation(line: 80, column: 22, scope: !6126)
!6146 = !DILocation(line: 81, column: 28, scope: !6126)
!6147 = !DILocation(line: 84, column: 19, scope: !6126)
!6148 = !DILocation(line: 85, column: 23, scope: !6126)
!6149 = !DILocation(line: 88, column: 5, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6126, file: !493, line: 88, column: 5)
!6151 = !DILocation(line: 90, column: 9, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6153, file: !493, line: 88, column: 81)
!6153 = distinct !DILexicalBlock(scope: !6150, file: !493, line: 88, column: 5)
!6154 = !DILocation(line: 90, column: 38, scope: !6152)
!6155 = !DILocation(line: 91, column: 9, scope: !6152)
!6156 = !DILocation(line: 91, column: 42, scope: !6152)
!6157 = !DILocation(line: 94, column: 45, scope: !6152)
!6158 = !DILocation(line: 94, column: 47, scope: !6152)
!6159 = !DILocation(line: 95, column: 49, scope: !6152)
!6160 = !DILocation(line: 95, column: 51, scope: !6152)
!6161 = !DILocation(line: 88, column: 77, scope: !6153)
!6162 = !DILocation(line: 88, column: 46, scope: !6153)
!6163 = distinct !{!6163, !6149, !6164}
!6164 = !DILocation(line: 96, column: 5, scope: !6150)
!6165 = !DILocation(line: 99, column: 1, scope: !6126)
!6166 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !493, file: !493, line: 327, type: !6127, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6167)
!6167 = !{!6168}
!6168 = !DILocalVariable(name: "irq_flag", scope: !6166, file: !493, line: 329, type: !136)
!6169 = !DILocation(line: 332, column: 16, scope: !6166)
!6170 = !DILocation(line: 0, scope: !6166)
!6171 = !DILocation(line: 335, column: 21, scope: !6166)
!6172 = !DILocation(line: 336, column: 21, scope: !6166)
!6173 = !DILocation(line: 339, column: 21, scope: !6166)
!6174 = !DILocation(line: 340, column: 21, scope: !6166)
!6175 = !DILocation(line: 434, column: 3, scope: !6176, inlinedAt: !6178)
!6176 = distinct !DISubprogram(name: "__ISB", scope: !6177, file: !6177, line: 432, type: !181, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !2135)
!6177 = !DIFile(filename: "../../../../..//driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!6178 = distinct !DILocation(line: 343, column: 5, scope: !6166)
!6179 = !{i64 296605}
!6180 = !DILocation(line: 346, column: 5, scope: !6166)
!6181 = !DILocation(line: 348, column: 5, scope: !6166)
!6182 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !493, file: !493, line: 101, type: !6127, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6183)
!6183 = !{!6184}
!6184 = !DILocalVariable(name: "region", scope: !6182, file: !493, line: 103, type: !1095)
!6185 = !DILocation(line: 107, column: 5, scope: !6182)
!6186 = !DILocation(line: 110, column: 22, scope: !6182)
!6187 = !DILocation(line: 111, column: 28, scope: !6182)
!6188 = !DILocation(line: 114, column: 19, scope: !6182)
!6189 = !DILocation(line: 115, column: 23, scope: !6182)
!6190 = !DILocation(line: 0, scope: !6182)
!6191 = !DILocation(line: 118, column: 5, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6182, file: !493, line: 118, column: 5)
!6193 = !DILocation(line: 120, column: 9, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !493, line: 118, column: 81)
!6195 = distinct !DILexicalBlock(scope: !6192, file: !493, line: 118, column: 5)
!6196 = !DILocation(line: 120, column: 38, scope: !6194)
!6197 = !DILocation(line: 121, column: 9, scope: !6194)
!6198 = !DILocation(line: 121, column: 42, scope: !6194)
!6199 = !DILocation(line: 124, column: 45, scope: !6194)
!6200 = !DILocation(line: 124, column: 47, scope: !6194)
!6201 = !DILocation(line: 125, column: 49, scope: !6194)
!6202 = !DILocation(line: 125, column: 51, scope: !6194)
!6203 = !DILocation(line: 118, column: 77, scope: !6195)
!6204 = !DILocation(line: 118, column: 46, scope: !6195)
!6205 = distinct !{!6205, !6191, !6206}
!6206 = !DILocation(line: 126, column: 5, scope: !6192)
!6207 = !DILocation(line: 129, column: 20, scope: !6182)
!6208 = !DILocation(line: 131, column: 5, scope: !6182)
!6209 = distinct !DISubprogram(name: "hal_cache_enable", scope: !493, file: !493, line: 134, type: !6127, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !2135)
!6210 = !DILocation(line: 137, column: 45, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6209, file: !493, line: 137, column: 9)
!6212 = !DILocation(line: 137, column: 28, scope: !6211)
!6213 = !DILocation(line: 137, column: 9, scope: !6209)
!6214 = !DILocation(line: 142, column: 22, scope: !6209)
!6215 = !DILocation(line: 145, column: 28, scope: !6209)
!6216 = !DILocation(line: 145, column: 19, scope: !6209)
!6217 = !DILocation(line: 147, column: 5, scope: !6209)
!6218 = !DILocation(line: 0, scope: !6209)
!6219 = !DILocation(line: 148, column: 1, scope: !6209)
!6220 = distinct !DISubprogram(name: "hal_cache_disable", scope: !493, file: !493, line: 150, type: !6127, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6221)
!6221 = !{!6222}
!6222 = !DILocalVariable(name: "irq_flag", scope: !6220, file: !493, line: 152, type: !136)
!6223 = !DILocation(line: 155, column: 16, scope: !6220)
!6224 = !DILocation(line: 0, scope: !6220)
!6225 = !DILocation(line: 158, column: 16, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6220, file: !493, line: 158, column: 9)
!6227 = !DILocation(line: 158, column: 26, scope: !6226)
!6228 = !DILocation(line: 158, column: 9, scope: !6220)
!6229 = !DILocation(line: 160, column: 9, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6226, file: !493, line: 158, column: 49)
!6231 = !DILocation(line: 161, column: 5, scope: !6230)
!6232 = !DILocation(line: 164, column: 22, scope: !6220)
!6233 = !DILocation(line: 167, column: 28, scope: !6220)
!6234 = !DILocation(line: 167, column: 19, scope: !6220)
!6235 = !DILocation(line: 170, column: 5, scope: !6220)
!6236 = !DILocation(line: 172, column: 5, scope: !6220)
!6237 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !493, file: !493, line: 175, type: !6238, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6240)
!6238 = !DISubroutineType(types: !6239)
!6239 = !{!6129, !1095}
!6240 = !{!6241}
!6241 = !DILocalVariable(name: "region", arg: 1, scope: !6237, file: !493, line: 175, type: !1095)
!6242 = !DILocation(line: 0, scope: !6237)
!6243 = !DILocation(line: 178, column: 16, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6237, file: !493, line: 178, column: 9)
!6245 = !DILocation(line: 178, column: 9, scope: !6237)
!6246 = !DILocation(line: 183, column: 9, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6237, file: !493, line: 183, column: 9)
!6248 = !DILocation(line: 183, column: 38, scope: !6247)
!6249 = !DILocation(line: 183, column: 9, scope: !6237)
!6250 = !DILocation(line: 184, column: 38, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6247, file: !493, line: 183, column: 62)
!6252 = !DILocation(line: 184, column: 32, scope: !6251)
!6253 = !DILocation(line: 190, column: 32, scope: !6237)
!6254 = !DILocation(line: 190, column: 23, scope: !6237)
!6255 = !DILocation(line: 192, column: 5, scope: !6237)
!6256 = !DILocation(line: 193, column: 1, scope: !6237)
!6257 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !493, file: !493, line: 195, type: !6238, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6258)
!6258 = !{!6259}
!6259 = !DILocalVariable(name: "region", arg: 1, scope: !6257, file: !493, line: 195, type: !1095)
!6260 = !DILocation(line: 0, scope: !6257)
!6261 = !DILocation(line: 198, column: 16, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6257, file: !493, line: 198, column: 9)
!6263 = !DILocation(line: 198, column: 9, scope: !6257)
!6264 = !DILocation(line: 203, column: 35, scope: !6257)
!6265 = !DILocation(line: 203, column: 31, scope: !6257)
!6266 = !DILocation(line: 203, column: 28, scope: !6257)
!6267 = !DILocation(line: 206, column: 32, scope: !6257)
!6268 = !DILocation(line: 206, column: 23, scope: !6257)
!6269 = !DILocation(line: 209, column: 41, scope: !6257)
!6270 = !DILocation(line: 209, column: 43, scope: !6257)
!6271 = !DILocation(line: 210, column: 45, scope: !6257)
!6272 = !DILocation(line: 210, column: 47, scope: !6257)
!6273 = !DILocation(line: 212, column: 5, scope: !6257)
!6274 = !DILocation(line: 213, column: 1, scope: !6257)
!6275 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !493, file: !493, line: 215, type: !6276, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6279)
!6276 = !DISubroutineType(types: !6277)
!6277 = !{!6129, !6278}
!6278 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !496, line: 182, baseType: !525)
!6279 = !{!6280}
!6280 = !DILocalVariable(name: "cache_size", arg: 1, scope: !6275, file: !493, line: 215, type: !6278)
!6281 = !DILocation(line: 0, scope: !6275)
!6282 = !DILocation(line: 218, column: 20, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6275, file: !493, line: 218, column: 9)
!6284 = !DILocation(line: 218, column: 9, scope: !6275)
!6285 = !DILocation(line: 223, column: 22, scope: !6275)
!6286 = !DILocation(line: 224, column: 37, scope: !6275)
!6287 = !DILocation(line: 224, column: 22, scope: !6275)
!6288 = !DILocation(line: 227, column: 20, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6275, file: !493, line: 227, column: 9)
!6290 = !DILocation(line: 227, column: 9, scope: !6275)
!6291 = !DILocation(line: 228, column: 26, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6289, file: !493, line: 227, column: 43)
!6293 = !DILocation(line: 229, column: 5, scope: !6292)
!6294 = !DILocation(line: 232, column: 28, scope: !6275)
!6295 = !DILocation(line: 232, column: 19, scope: !6275)
!6296 = !DILocation(line: 234, column: 5, scope: !6275)
!6297 = !DILocation(line: 235, column: 1, scope: !6275)
!6298 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !493, file: !493, line: 237, type: !6299, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6308)
!6299 = !DISubroutineType(types: !6300)
!6300 = !{!6129, !1095, !6301}
!6301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6302, size: 32)
!6302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6303)
!6303 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !496, line: 222, baseType: !6304)
!6304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !496, line: 219, size: 64, elements: !6305)
!6305 = !{!6306, !6307}
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !6304, file: !496, line: 220, baseType: !136, size: 32)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !6304, file: !496, line: 221, baseType: !136, size: 32, offset: 32)
!6308 = !{!6309, !6310}
!6309 = !DILocalVariable(name: "region", arg: 1, scope: !6298, file: !493, line: 237, type: !1095)
!6310 = !DILocalVariable(name: "region_config", arg: 2, scope: !6298, file: !493, line: 237, type: !6301)
!6311 = !DILocation(line: 0, scope: !6298)
!6312 = !DILocation(line: 240, column: 16, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6298, file: !493, line: 240, column: 9)
!6314 = !DILocation(line: 240, column: 9, scope: !6298)
!6315 = !DILocation(line: 245, column: 23, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6298, file: !493, line: 245, column: 9)
!6317 = !DILocation(line: 245, column: 9, scope: !6298)
!6318 = !DILocation(line: 250, column: 24, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6298, file: !493, line: 250, column: 9)
!6320 = !DILocation(line: 250, column: 45, scope: !6319)
!6321 = !DILocation(line: 250, column: 9, scope: !6298)
!6322 = !DILocation(line: 251, column: 9, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6319, file: !493, line: 250, column: 81)
!6324 = !DILocation(line: 256, column: 24, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6298, file: !493, line: 256, column: 9)
!6326 = !DILocation(line: 256, column: 42, scope: !6325)
!6327 = !DILocation(line: 256, column: 9, scope: !6298)
!6328 = !DILocation(line: 257, column: 9, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6325, file: !493, line: 256, column: 78)
!6330 = !DILocation(line: 262, column: 5, scope: !6298)
!6331 = !DILocation(line: 262, column: 34, scope: !6298)
!6332 = !DILocation(line: 263, column: 55, scope: !6298)
!6333 = !DILocation(line: 263, column: 93, scope: !6298)
!6334 = !DILocation(line: 263, column: 76, scope: !6298)
!6335 = !DILocation(line: 263, column: 5, scope: !6298)
!6336 = !DILocation(line: 263, column: 38, scope: !6298)
!6337 = !DILocation(line: 266, column: 34, scope: !6298)
!6338 = !DILocation(line: 269, column: 45, scope: !6298)
!6339 = !DILocation(line: 269, column: 41, scope: !6298)
!6340 = !DILocation(line: 269, column: 43, scope: !6298)
!6341 = !DILocation(line: 270, column: 49, scope: !6298)
!6342 = !DILocation(line: 270, column: 45, scope: !6298)
!6343 = !DILocation(line: 270, column: 47, scope: !6298)
!6344 = !DILocation(line: 272, column: 5, scope: !6298)
!6345 = !DILocation(line: 273, column: 1, scope: !6298)
!6346 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !493, file: !493, line: 275, type: !6347, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6349)
!6347 = !DISubroutineType(types: !6348)
!6348 = !{!6129, !136}
!6349 = !{!6350, !6351}
!6350 = !DILocalVariable(name: "address", arg: 1, scope: !6346, file: !493, line: 275, type: !136)
!6351 = !DILocalVariable(name: "irq_flag", scope: !6346, file: !493, line: 277, type: !136)
!6352 = !DILocation(line: 0, scope: !6346)
!6353 = !DILocation(line: 280, column: 17, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6346, file: !493, line: 280, column: 9)
!6355 = !DILocation(line: 280, column: 9, scope: !6346)
!6356 = !DILocation(line: 284, column: 16, scope: !6346)
!6357 = !DILocation(line: 287, column: 32, scope: !6346)
!6358 = !DILocation(line: 287, column: 21, scope: !6346)
!6359 = !DILocation(line: 288, column: 21, scope: !6346)
!6360 = !DILocation(line: 434, column: 3, scope: !6176, inlinedAt: !6361)
!6361 = distinct !DILocation(line: 291, column: 5, scope: !6346)
!6362 = !DILocation(line: 294, column: 5, scope: !6346)
!6363 = !DILocation(line: 296, column: 5, scope: !6346)
!6364 = !DILocation(line: 297, column: 1, scope: !6346)
!6365 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !493, file: !493, line: 299, type: !6366, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6368)
!6366 = !DISubroutineType(types: !6367)
!6367 = !{!6129, !136, !136}
!6368 = !{!6369, !6370, !6371, !6372}
!6369 = !DILocalVariable(name: "address", arg: 1, scope: !6365, file: !493, line: 299, type: !136)
!6370 = !DILocalVariable(name: "length", arg: 2, scope: !6365, file: !493, line: 299, type: !136)
!6371 = !DILocalVariable(name: "irq_flag", scope: !6365, file: !493, line: 301, type: !136)
!6372 = !DILocalVariable(name: "end_address", scope: !6365, file: !493, line: 302, type: !136)
!6373 = !DILocation(line: 0, scope: !6365)
!6374 = !DILocation(line: 302, column: 36, scope: !6365)
!6375 = !DILocation(line: 305, column: 47, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6365, file: !493, line: 305, column: 9)
!6377 = !DILocation(line: 310, column: 16, scope: !6365)
!6378 = !DILocation(line: 313, column: 20, scope: !6365)
!6379 = !DILocation(line: 313, column: 5, scope: !6365)
!6380 = !DILocation(line: 314, column: 9, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6365, file: !493, line: 313, column: 35)
!6382 = !DILocation(line: 315, column: 17, scope: !6381)
!6383 = distinct !{!6383, !6379, !6384}
!6384 = !DILocation(line: 316, column: 5, scope: !6365)
!6385 = !DILocation(line: 434, column: 3, scope: !6176, inlinedAt: !6386)
!6386 = distinct !DILocation(line: 319, column: 5, scope: !6365)
!6387 = !DILocation(line: 322, column: 5, scope: !6365)
!6388 = !DILocation(line: 324, column: 5, scope: !6365)
!6389 = !DILocation(line: 325, column: 1, scope: !6365)
!6390 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !493, file: !493, line: 351, type: !6347, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6391)
!6391 = !{!6392, !6393}
!6392 = !DILocalVariable(name: "address", arg: 1, scope: !6390, file: !493, line: 351, type: !136)
!6393 = !DILocalVariable(name: "irq_flag", scope: !6390, file: !493, line: 353, type: !136)
!6394 = !DILocation(line: 0, scope: !6390)
!6395 = !DILocation(line: 356, column: 17, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6390, file: !493, line: 356, column: 9)
!6397 = !DILocation(line: 356, column: 9, scope: !6390)
!6398 = !DILocation(line: 361, column: 16, scope: !6390)
!6399 = !DILocation(line: 364, column: 32, scope: !6390)
!6400 = !DILocation(line: 364, column: 21, scope: !6390)
!6401 = !DILocation(line: 365, column: 21, scope: !6390)
!6402 = !DILocation(line: 434, column: 3, scope: !6176, inlinedAt: !6403)
!6403 = distinct !DILocation(line: 368, column: 5, scope: !6390)
!6404 = !DILocation(line: 371, column: 5, scope: !6390)
!6405 = !DILocation(line: 373, column: 5, scope: !6390)
!6406 = !DILocation(line: 374, column: 1, scope: !6390)
!6407 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !493, file: !493, line: 376, type: !6366, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6408)
!6408 = !{!6409, !6410, !6411, !6412}
!6409 = !DILocalVariable(name: "address", arg: 1, scope: !6407, file: !493, line: 376, type: !136)
!6410 = !DILocalVariable(name: "length", arg: 2, scope: !6407, file: !493, line: 376, type: !136)
!6411 = !DILocalVariable(name: "irq_flag", scope: !6407, file: !493, line: 378, type: !136)
!6412 = !DILocalVariable(name: "end_address", scope: !6407, file: !493, line: 379, type: !136)
!6413 = !DILocation(line: 0, scope: !6407)
!6414 = !DILocation(line: 379, column: 36, scope: !6407)
!6415 = !DILocation(line: 382, column: 47, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6407, file: !493, line: 382, column: 9)
!6417 = !DILocation(line: 387, column: 16, scope: !6407)
!6418 = !DILocation(line: 390, column: 20, scope: !6407)
!6419 = !DILocation(line: 390, column: 5, scope: !6407)
!6420 = !DILocation(line: 391, column: 9, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6407, file: !493, line: 390, column: 35)
!6422 = !DILocation(line: 392, column: 17, scope: !6421)
!6423 = distinct !{!6423, !6419, !6424}
!6424 = !DILocation(line: 393, column: 5, scope: !6407)
!6425 = !DILocation(line: 434, column: 3, scope: !6176, inlinedAt: !6426)
!6426 = distinct !DILocation(line: 396, column: 5, scope: !6407)
!6427 = !DILocation(line: 399, column: 5, scope: !6407)
!6428 = !DILocation(line: 401, column: 5, scope: !6407)
!6429 = !DILocation(line: 402, column: 1, scope: !6407)
!6430 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !493, file: !493, line: 404, type: !6127, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6431)
!6431 = !{!6432}
!6432 = !DILocalVariable(name: "irq_flag", scope: !6430, file: !493, line: 406, type: !136)
!6433 = !DILocation(line: 409, column: 16, scope: !6430)
!6434 = !DILocation(line: 0, scope: !6430)
!6435 = !DILocation(line: 412, column: 21, scope: !6430)
!6436 = !DILocation(line: 413, column: 21, scope: !6430)
!6437 = !DILocation(line: 434, column: 3, scope: !6176, inlinedAt: !6438)
!6438 = distinct !DILocation(line: 416, column: 5, scope: !6430)
!6439 = !DILocation(line: 419, column: 5, scope: !6430)
!6440 = !DILocation(line: 421, column: 5, scope: !6430)
!6441 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !493, file: !493, line: 424, type: !6442, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6444)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{!126, !136}
!6444 = !{!6445, !6446}
!6445 = !DILocalVariable(name: "address", arg: 1, scope: !6441, file: !493, line: 424, type: !136)
!6446 = !DILocalVariable(name: "region", scope: !6441, file: !493, line: 426, type: !1095)
!6447 = !DILocation(line: 0, scope: !6441)
!6448 = !DILocation(line: 429, column: 18, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6441, file: !493, line: 429, column: 9)
!6450 = !DILocation(line: 429, column: 28, scope: !6449)
!6451 = !DILocation(line: 429, column: 9, scope: !6441)
!6452 = !DILocation(line: 435, column: 20, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6454, file: !493, line: 435, column: 13)
!6454 = distinct !DILexicalBlock(scope: !6455, file: !493, line: 433, column: 81)
!6455 = distinct !DILexicalBlock(scope: !6456, file: !493, line: 433, column: 5)
!6456 = distinct !DILexicalBlock(scope: !6441, file: !493, line: 433, column: 5)
!6457 = !DILocation(line: 435, column: 41, scope: !6453)
!6458 = !DILocation(line: 435, column: 36, scope: !6453)
!6459 = !DILocation(line: 435, column: 13, scope: !6454)
!6460 = !DILocation(line: 436, column: 30, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6462, file: !493, line: 436, column: 17)
!6462 = distinct !DILexicalBlock(scope: !6453, file: !493, line: 435, column: 53)
!6463 = !DILocation(line: 436, column: 59, scope: !6461)
!6464 = !DILocation(line: 436, column: 26, scope: !6461)
!6465 = !DILocation(line: 436, column: 85, scope: !6461)
!6466 = !DILocation(line: 436, column: 99, scope: !6461)
!6467 = !DILocation(line: 436, column: 97, scope: !6461)
!6468 = !DILocation(line: 436, column: 17, scope: !6462)
!6469 = !DILocation(line: 433, column: 77, scope: !6455)
!6470 = !DILocation(line: 433, column: 46, scope: !6455)
!6471 = !DILocation(line: 433, column: 5, scope: !6456)
!6472 = distinct !{!6472, !6471, !6473}
!6473 = !DILocation(line: 440, column: 5, scope: !6456)
!6474 = !DILocation(line: 442, column: 1, scope: !6441)
!6475 = distinct !DISubprogram(name: "hal_nvic_init", scope: !629, file: !629, line: 60, type: !6476, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !2135)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{!6478}
!6478 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !632, line: 158, baseType: !631)
!6479 = !DILocation(line: 62, column: 5, scope: !6475)
!6480 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !629, file: !629, line: 65, type: !6481, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6483)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{!6478, !452}
!6483 = !{!6484, !6485}
!6484 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6480, file: !629, line: 65, type: !452)
!6485 = !DILocalVariable(name: "status", scope: !6480, file: !629, line: 67, type: !6478)
!6486 = !DILocation(line: 0, scope: !6480)
!6487 = !DILocation(line: 69, column: 40, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6480, file: !629, line: 69, column: 9)
!6489 = !DILocation(line: 73, column: 9, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6488, file: !629, line: 72, column: 12)
!6491 = !DILocation(line: 77, column: 5, scope: !6480)
!6492 = !DILocation(line: 78, column: 1, scope: !6480)
!6493 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !644, file: !644, line: 1494, type: !6494, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6496)
!6494 = !DISubroutineType(types: !6495)
!6495 = !{null, !173}
!6496 = !{!6497}
!6497 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6493, file: !644, line: 1494, type: !173)
!6498 = !DILocation(line: 0, scope: !6493)
!6499 = !DILocation(line: 1497, column: 91, scope: !6493)
!6500 = !DILocation(line: 1497, column: 61, scope: !6493)
!6501 = !DILocation(line: 1497, column: 40, scope: !6493)
!6502 = !DILocation(line: 1497, column: 3, scope: !6493)
!6503 = !DILocation(line: 1497, column: 46, scope: !6493)
!6504 = !DILocation(line: 1498, column: 1, scope: !6493)
!6505 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !629, file: !629, line: 80, type: !6481, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6506)
!6506 = !{!6507, !6508}
!6507 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6505, file: !629, line: 80, type: !452)
!6508 = !DILocalVariable(name: "status", scope: !6505, file: !629, line: 82, type: !6478)
!6509 = !DILocation(line: 0, scope: !6505)
!6510 = !DILocation(line: 84, column: 40, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6505, file: !629, line: 84, column: 9)
!6512 = !DILocation(line: 88, column: 9, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6511, file: !629, line: 87, column: 12)
!6514 = !DILocation(line: 92, column: 5, scope: !6505)
!6515 = !DILocation(line: 93, column: 1, scope: !6505)
!6516 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !644, file: !644, line: 1507, type: !6494, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6517)
!6517 = !{!6518}
!6518 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6516, file: !644, line: 1507, type: !173)
!6519 = !DILocation(line: 0, scope: !6516)
!6520 = !DILocation(line: 1509, column: 65, scope: !6516)
!6521 = !DILocation(line: 1509, column: 44, scope: !6516)
!6522 = !DILocation(line: 1509, column: 32, scope: !6516)
!6523 = !DILocation(line: 1509, column: 3, scope: !6516)
!6524 = !DILocation(line: 1509, column: 39, scope: !6516)
!6525 = !DILocation(line: 1510, column: 1, scope: !6516)
!6526 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !629, file: !629, line: 95, type: !6527, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6529)
!6527 = !DISubroutineType(types: !6528)
!6528 = !{!136, !452}
!6529 = !{!6530, !6531}
!6530 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6526, file: !629, line: 95, type: !452)
!6531 = !DILocalVariable(name: "ret", scope: !6526, file: !629, line: 97, type: !136)
!6532 = !DILocation(line: 0, scope: !6526)
!6533 = !DILocation(line: 99, column: 40, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6526, file: !629, line: 99, column: 9)
!6535 = !DILocation(line: 102, column: 15, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6534, file: !629, line: 101, column: 12)
!6537 = !DILocation(line: 105, column: 5, scope: !6526)
!6538 = !DILocation(line: 106, column: 1, scope: !6526)
!6539 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !644, file: !644, line: 1523, type: !6540, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6542)
!6540 = !DISubroutineType(types: !6541)
!6541 = !{!136, !173}
!6542 = !{!6543}
!6543 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6539, file: !644, line: 1523, type: !173)
!6544 = !DILocation(line: 0, scope: !6539)
!6545 = !DILocation(line: 1525, column: 51, scope: !6539)
!6546 = !DILocation(line: 1525, column: 23, scope: !6539)
!6547 = !DILocation(line: 1525, column: 83, scope: !6539)
!6548 = !DILocation(line: 1525, column: 22, scope: !6539)
!6549 = !DILocation(line: 1525, column: 3, scope: !6539)
!6550 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !629, file: !629, line: 108, type: !6481, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6551)
!6551 = !{!6552, !6553}
!6552 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6550, file: !629, line: 108, type: !452)
!6553 = !DILocalVariable(name: "status", scope: !6550, file: !629, line: 110, type: !6478)
!6554 = !DILocation(line: 0, scope: !6550)
!6555 = !DILocation(line: 112, column: 40, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6550, file: !629, line: 112, column: 9)
!6557 = !DILocation(line: 116, column: 9, scope: !6558)
!6558 = distinct !DILexicalBlock(scope: !6556, file: !629, line: 115, column: 12)
!6559 = !DILocation(line: 120, column: 5, scope: !6550)
!6560 = !DILocation(line: 121, column: 1, scope: !6550)
!6561 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !644, file: !644, line: 1535, type: !6494, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6562)
!6562 = !{!6563}
!6563 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6561, file: !644, line: 1535, type: !173)
!6564 = !DILocation(line: 0, scope: !6561)
!6565 = !DILocation(line: 1537, column: 65, scope: !6561)
!6566 = !DILocation(line: 1537, column: 44, scope: !6561)
!6567 = !DILocation(line: 1537, column: 32, scope: !6561)
!6568 = !DILocation(line: 1537, column: 3, scope: !6561)
!6569 = !DILocation(line: 1537, column: 39, scope: !6561)
!6570 = !DILocation(line: 1538, column: 1, scope: !6561)
!6571 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !629, file: !629, line: 123, type: !6481, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6572)
!6572 = !{!6573, !6574}
!6573 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6571, file: !629, line: 123, type: !452)
!6574 = !DILocalVariable(name: "status", scope: !6571, file: !629, line: 125, type: !6478)
!6575 = !DILocation(line: 0, scope: !6571)
!6576 = !DILocation(line: 127, column: 40, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6571, file: !629, line: 127, column: 9)
!6578 = !DILocation(line: 131, column: 9, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6577, file: !629, line: 130, column: 12)
!6580 = !DILocation(line: 135, column: 5, scope: !6571)
!6581 = !DILocation(line: 136, column: 1, scope: !6571)
!6582 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !644, file: !644, line: 1547, type: !6494, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6583)
!6583 = !{!6584}
!6584 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6582, file: !644, line: 1547, type: !173)
!6585 = !DILocation(line: 0, scope: !6582)
!6586 = !DILocation(line: 1549, column: 65, scope: !6582)
!6587 = !DILocation(line: 1549, column: 44, scope: !6582)
!6588 = !DILocation(line: 1549, column: 32, scope: !6582)
!6589 = !DILocation(line: 1549, column: 3, scope: !6582)
!6590 = !DILocation(line: 1549, column: 39, scope: !6582)
!6591 = !DILocation(line: 1550, column: 1, scope: !6582)
!6592 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !629, file: !629, line: 138, type: !6593, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6595)
!6593 = !DISubroutineType(types: !6594)
!6594 = !{!6478, !452, !136}
!6595 = !{!6596, !6597, !6598}
!6596 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6592, file: !629, line: 138, type: !452)
!6597 = !DILocalVariable(name: "priority", arg: 2, scope: !6592, file: !629, line: 138, type: !136)
!6598 = !DILocalVariable(name: "status", scope: !6592, file: !629, line: 140, type: !6478)
!6599 = !DILocation(line: 0, scope: !6592)
!6600 = !DILocation(line: 142, column: 40, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6592, file: !629, line: 142, column: 9)
!6602 = !DILocation(line: 146, column: 9, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6601, file: !629, line: 145, column: 12)
!6604 = !DILocation(line: 150, column: 5, scope: !6592)
!6605 = !DILocation(line: 151, column: 1, scope: !6592)
!6606 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !644, file: !644, line: 1577, type: !6607, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6609)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{null, !173, !136}
!6609 = !{!6610, !6611}
!6610 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6606, file: !644, line: 1577, type: !173)
!6611 = !DILocalVariable(name: "priority", arg: 2, scope: !6606, file: !644, line: 1577, type: !136)
!6612 = !DILocation(line: 0, scope: !6606)
!6613 = !DILocation(line: 1582, column: 34, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !644, line: 1581, column: 8)
!6615 = distinct !DILexicalBlock(scope: !6606, file: !644, line: 1579, column: 6)
!6616 = !DILocation(line: 1582, column: 5, scope: !6614)
!6617 = !DILocation(line: 1582, column: 32, scope: !6614)
!6618 = !DILocation(line: 1583, column: 1, scope: !6606)
!6619 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !629, file: !629, line: 153, type: !6527, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6620)
!6620 = !{!6621, !6622}
!6621 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6619, file: !629, line: 153, type: !452)
!6622 = !DILocalVariable(name: "ret", scope: !6619, file: !629, line: 155, type: !136)
!6623 = !DILocation(line: 0, scope: !6619)
!6624 = !DILocation(line: 157, column: 40, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6619, file: !629, line: 157, column: 9)
!6626 = !DILocation(line: 160, column: 15, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6625, file: !629, line: 159, column: 12)
!6628 = !DILocation(line: 163, column: 5, scope: !6619)
!6629 = !DILocation(line: 164, column: 1, scope: !6619)
!6630 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !644, file: !644, line: 1597, type: !6540, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6631)
!6631 = !{!6632}
!6632 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6630, file: !644, line: 1597, type: !173)
!6633 = !DILocation(line: 0, scope: !6630)
!6634 = !DILocation(line: 1603, column: 23, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6636, file: !644, line: 1602, column: 8)
!6636 = distinct !DILexicalBlock(scope: !6630, file: !644, line: 1600, column: 6)
!6637 = !DILocation(line: 1603, column: 60, scope: !6635)
!6638 = !DILocation(line: 1604, column: 1, scope: !6630)
!6639 = distinct !DISubprogram(name: "isrC_main", scope: !629, file: !629, line: 178, type: !6476, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6640)
!6640 = !{!6641, !6642}
!6641 = !DILocalVariable(name: "status", scope: !6639, file: !629, line: 180, type: !6478)
!6642 = !DILocalVariable(name: "irq_number", scope: !6639, file: !629, line: 181, type: !452)
!6643 = !DILocation(line: 0, scope: !6639)
!6644 = !DILocation(line: 185, column: 5, scope: !6639)
!6645 = !DILocation(line: 188, column: 34, scope: !6639)
!6646 = !DILocation(line: 189, column: 24, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6639, file: !629, line: 189, column: 9)
!6648 = !DILocation(line: 192, column: 48, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6647, file: !629, line: 192, column: 16)
!6650 = !DILocation(line: 192, column: 62, scope: !6649)
!6651 = !DILocation(line: 192, column: 16, scope: !6647)
!6652 = !DILocation(line: 194, column: 9, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6649, file: !629, line: 192, column: 71)
!6654 = !DILocation(line: 195, column: 9, scope: !6653)
!6655 = !DILocation(line: 197, column: 55, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6649, file: !629, line: 196, column: 12)
!6657 = !DILocation(line: 197, column: 41, scope: !6656)
!6658 = !DILocation(line: 197, column: 53, scope: !6656)
!6659 = !DILocation(line: 198, column: 41, scope: !6656)
!6660 = !DILocation(line: 198, column: 9, scope: !6656)
!6661 = !DILocation(line: 202, column: 5, scope: !6639)
!6662 = !DILocation(line: 203, column: 1, scope: !6639)
!6663 = distinct !DISubprogram(name: "get_current_irq", scope: !629, file: !629, line: 166, type: !2167, scopeLine: 167, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6664)
!6664 = !{!6665}
!6665 = !DILocalVariable(name: "irq_num", scope: !6663, file: !629, line: 168, type: !136)
!6666 = !DILocation(line: 168, column: 31, scope: !6663)
!6667 = !DILocation(line: 168, column: 36, scope: !6663)
!6668 = !DILocation(line: 0, scope: !6663)
!6669 = !DILocation(line: 169, column: 21, scope: !6663)
!6670 = !DILocation(line: 169, column: 5, scope: !6663)
!6671 = distinct !DISubprogram(name: "get_pending_irq", scope: !629, file: !629, line: 55, type: !2167, scopeLine: 56, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !2135)
!6672 = !DILocation(line: 57, column: 19, scope: !6671)
!6673 = !DILocation(line: 57, column: 51, scope: !6671)
!6674 = !DILocation(line: 57, column: 5, scope: !6671)
!6675 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !629, file: !629, line: 205, type: !6676, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6679)
!6676 = !DISubroutineType(types: !6677)
!6677 = !{!6478, !452, !6678}
!6678 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !632, line: 175, baseType: !712)
!6679 = !{!6680, !6681, !6682}
!6680 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6675, file: !629, line: 205, type: !452)
!6681 = !DILocalVariable(name: "callback", arg: 2, scope: !6675, file: !629, line: 205, type: !6678)
!6682 = !DILocalVariable(name: "mask", scope: !6675, file: !629, line: 207, type: !136)
!6683 = !DILocation(line: 0, scope: !6675)
!6684 = !DILocation(line: 209, column: 24, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6675, file: !629, line: 209, column: 9)
!6686 = !DILocation(line: 213, column: 12, scope: !6675)
!6687 = !DILocation(line: 214, column: 5, scope: !6675)
!6688 = !DILocation(line: 215, column: 37, scope: !6675)
!6689 = !DILocation(line: 215, column: 51, scope: !6675)
!6690 = !DILocation(line: 216, column: 37, scope: !6675)
!6691 = !DILocation(line: 216, column: 49, scope: !6675)
!6692 = !DILocation(line: 217, column: 5, scope: !6675)
!6693 = !DILocation(line: 219, column: 5, scope: !6675)
!6694 = !DILocation(line: 220, column: 1, scope: !6675)
!6695 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !629, file: !629, line: 222, type: !6696, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6698)
!6696 = !DISubroutineType(types: !6697)
!6697 = !{!6478, !3543}
!6698 = !{!6699}
!6699 = !DILocalVariable(name: "mask", arg: 1, scope: !6695, file: !629, line: 222, type: !3543)
!6700 = !DILocation(line: 0, scope: !6695)
!6701 = !DILocation(line: 224, column: 13, scope: !6695)
!6702 = !DILocation(line: 224, column: 11, scope: !6695)
!6703 = !DILocation(line: 225, column: 5, scope: !6695)
!6704 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !629, file: !629, line: 228, type: !6705, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !6707)
!6705 = !DISubroutineType(types: !6706)
!6706 = !{!6478, !136}
!6707 = !{!6708}
!6708 = !DILocalVariable(name: "mask", arg: 1, scope: !6704, file: !629, line: 228, type: !136)
!6709 = !DILocation(line: 0, scope: !6704)
!6710 = !DILocation(line: 230, column: 5, scope: !6704)
!6711 = !DILocation(line: 231, column: 5, scope: !6704)
!6712 = distinct !DISubprogram(name: "hal_flash_init", scope: !2069, file: !2069, line: 42, type: !6713, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2068, retainedNodes: !6716)
!6713 = !DISubroutineType(types: !6714)
!6714 = !{!6715}
!6715 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !241, line: 119, baseType: !2071)
!6716 = !{!6717}
!6717 = !DILocalVariable(name: "ret_value", scope: !6712, file: !2069, line: 44, type: !640)
!6718 = !DILocation(line: 0, scope: !6712)
!6719 = !DILocation(line: 45, column: 17, scope: !6712)
!6720 = !DILocation(line: 46, column: 12, scope: !6712)
!6721 = !DILocation(line: 46, column: 5, scope: !6712)
!6722 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !2069, file: !2069, line: 49, type: !6713, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2068, retainedNodes: !2135)
!6723 = !DILocation(line: 51, column: 5, scope: !6722)
!6724 = distinct !DISubprogram(name: "hal_flash_erase", scope: !2069, file: !2069, line: 54, type: !6725, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2068, retainedNodes: !6728)
!6725 = !DISubroutineType(types: !6726)
!6726 = !{!6715, !136, !6727}
!6727 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !241, line: 127, baseType: !240)
!6728 = !{!6729, !6730, !6731}
!6729 = !DILocalVariable(name: "start_address", arg: 1, scope: !6724, file: !2069, line: 54, type: !136)
!6730 = !DILocalVariable(name: "block", arg: 2, scope: !6724, file: !2069, line: 54, type: !6727)
!6731 = !DILocalVariable(name: "ret_value", scope: !6724, file: !2069, line: 56, type: !640)
!6732 = !DILocation(line: 0, scope: !6724)
!6733 = !DILocation(line: 57, column: 17, scope: !6724)
!6734 = !DILocation(line: 58, column: 12, scope: !6724)
!6735 = !DILocation(line: 58, column: 5, scope: !6724)
!6736 = distinct !DISubprogram(name: "hal_flash_read", scope: !2069, file: !2069, line: 62, type: !6737, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2068, retainedNodes: !6739)
!6737 = !DISubroutineType(types: !6738)
!6738 = !{!6715, !136, !340, !136}
!6739 = !{!6740, !6741, !6742}
!6740 = !DILocalVariable(name: "start_address", arg: 1, scope: !6736, file: !2069, line: 62, type: !136)
!6741 = !DILocalVariable(name: "buffer", arg: 2, scope: !6736, file: !2069, line: 62, type: !340)
!6742 = !DILocalVariable(name: "length", arg: 3, scope: !6736, file: !2069, line: 62, type: !136)
!6743 = !DILocation(line: 0, scope: !6736)
!6744 = !DILocation(line: 64, column: 50, scope: !6736)
!6745 = !DILocation(line: 64, column: 27, scope: !6736)
!6746 = !DILocation(line: 64, column: 5, scope: !6736)
!6747 = !DILocation(line: 65, column: 5, scope: !6736)
!6748 = distinct !DISubprogram(name: "hal_flash_write", scope: !2069, file: !2069, line: 68, type: !6749, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2068, retainedNodes: !6751)
!6749 = !DISubroutineType(types: !6750)
!6750 = !{!6715, !136, !3126, !136}
!6751 = !{!6752, !6753, !6754, !6755}
!6752 = !DILocalVariable(name: "address", arg: 1, scope: !6748, file: !2069, line: 68, type: !136)
!6753 = !DILocalVariable(name: "data", arg: 2, scope: !6748, file: !2069, line: 68, type: !3126)
!6754 = !DILocalVariable(name: "length", arg: 3, scope: !6748, file: !2069, line: 68, type: !136)
!6755 = !DILocalVariable(name: "ret_value", scope: !6748, file: !2069, line: 70, type: !640)
!6756 = !DILocation(line: 0, scope: !6748)
!6757 = !DILocation(line: 70, column: 25, scope: !6748)
!6758 = !DILocation(line: 71, column: 12, scope: !6748)
!6759 = !DILocation(line: 71, column: 5, scope: !6748)
!6760 = distinct !DISubprogram(name: "hal_gpt_init", scope: !721, file: !721, line: 82, type: !6761, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6764)
!6761 = !DISubroutineType(types: !6762)
!6762 = !{!2971, !6763}
!6763 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !226, line: 663, baseType: !723)
!6764 = !{!6765}
!6765 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6760, file: !721, line: 82, type: !6763)
!6766 = !DILocation(line: 0, scope: !6760)
!6767 = !DILocation(line: 84, column: 9, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6760, file: !721, line: 84, column: 9)
!6769 = !DILocation(line: 84, column: 33, scope: !6768)
!6770 = !DILocation(line: 84, column: 9, scope: !6760)
!6771 = !DILocation(line: 88, column: 9, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6760, file: !721, line: 88, column: 9)
!6773 = !DILocation(line: 88, column: 9, scope: !6760)
!6774 = !DILocation(line: 89, column: 9, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6772, file: !721, line: 88, column: 50)
!6776 = !DILocation(line: 90, column: 9, scope: !6775)
!6777 = !DILocation(line: 92, column: 12, scope: !6760)
!6778 = !DILocation(line: 92, column: 5, scope: !6760)
!6779 = !DILocation(line: 96, column: 43, scope: !6760)
!6780 = !DILocation(line: 98, column: 5, scope: !6760)
!6781 = !DILocation(line: 99, column: 1, scope: !6760)
!6782 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !721, file: !721, line: 63, type: !6783, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6785)
!6783 = !DISubroutineType(types: !6784)
!6784 = !{!126, !6763}
!6785 = !{!6786}
!6786 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6782, file: !721, line: 63, type: !6763)
!6787 = !DILocation(line: 0, scope: !6782)
!6788 = !DILocation(line: 65, column: 19, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6782, file: !721, line: 65, column: 9)
!6790 = !DILocation(line: 65, column: 34, scope: !6789)
!6791 = !DILocation(line: 70, column: 1, scope: !6782)
!6792 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !721, file: !721, line: 101, type: !6761, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6793)
!6793 = !{!6794}
!6794 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6792, file: !721, line: 101, type: !6763)
!6795 = !DILocation(line: 0, scope: !6792)
!6796 = !DILocation(line: 103, column: 9, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6792, file: !721, line: 103, column: 9)
!6798 = !DILocation(line: 103, column: 9, scope: !6792)
!6799 = !DILocation(line: 104, column: 9, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6797, file: !721, line: 103, column: 50)
!6801 = !DILocation(line: 105, column: 9, scope: !6800)
!6802 = !DILocation(line: 108, column: 9, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6792, file: !721, line: 108, column: 9)
!6804 = !DILocation(line: 108, column: 33, scope: !6803)
!6805 = !DILocation(line: 108, column: 48, scope: !6803)
!6806 = !DILocation(line: 108, column: 9, scope: !6792)
!6807 = !DILocation(line: 109, column: 9, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6803, file: !721, line: 108, column: 68)
!6809 = !DILocation(line: 110, column: 9, scope: !6808)
!6810 = !DILocation(line: 113, column: 12, scope: !6792)
!6811 = !DILocation(line: 113, column: 5, scope: !6792)
!6812 = !DILocation(line: 116, column: 29, scope: !6792)
!6813 = !DILocation(line: 116, column: 43, scope: !6792)
!6814 = !DILocation(line: 117, column: 5, scope: !6792)
!6815 = !DILocation(line: 118, column: 1, scope: !6792)
!6816 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !721, file: !721, line: 120, type: !6817, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6820)
!6817 = !DISubroutineType(types: !6818)
!6818 = !{!2971, !6819, !3543}
!6819 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !226, line: 674, baseType: !225)
!6820 = !{!6821, !6822}
!6821 = !DILocalVariable(name: "clock_source", arg: 1, scope: !6816, file: !721, line: 120, type: !6819)
!6822 = !DILocalVariable(name: "count", arg: 2, scope: !6816, file: !721, line: 120, type: !3543)
!6823 = !DILocation(line: 0, scope: !6816)
!6824 = !DILocation(line: 122, column: 9, scope: !6816)
!6825 = !DILocation(line: 123, column: 50, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !721, line: 123, column: 13)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !721, line: 122, column: 51)
!6828 = distinct !DILexicalBlock(scope: !6816, file: !721, line: 122, column: 9)
!6829 = !DILocation(line: 123, column: 65, scope: !6826)
!6830 = !DILocation(line: 123, column: 13, scope: !6827)
!6831 = !DILocation(line: 124, column: 13, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6826, file: !721, line: 123, column: 86)
!6833 = !DILocation(line: 125, column: 9, scope: !6832)
!6834 = !DILocation(line: 126, column: 18, scope: !6827)
!6835 = !DILocation(line: 126, column: 16, scope: !6827)
!6836 = !DILocation(line: 127, column: 49, scope: !6827)
!6837 = !DILocation(line: 128, column: 5, scope: !6827)
!6838 = !DILocation(line: 129, column: 50, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !721, line: 129, column: 13)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !721, line: 128, column: 57)
!6841 = distinct !DILexicalBlock(scope: !6828, file: !721, line: 128, column: 16)
!6842 = !DILocation(line: 129, column: 65, scope: !6839)
!6843 = !DILocation(line: 129, column: 13, scope: !6840)
!6844 = !DILocation(line: 130, column: 13, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6839, file: !721, line: 129, column: 86)
!6846 = !DILocation(line: 131, column: 9, scope: !6845)
!6847 = !DILocation(line: 132, column: 18, scope: !6840)
!6848 = !DILocation(line: 132, column: 46, scope: !6840)
!6849 = !DILocation(line: 132, column: 65, scope: !6840)
!6850 = !DILocation(line: 132, column: 43, scope: !6840)
!6851 = !DILocation(line: 132, column: 16, scope: !6840)
!6852 = !DILocation(line: 133, column: 49, scope: !6840)
!6853 = !DILocation(line: 134, column: 5, scope: !6840)
!6854 = !DILocation(line: 135, column: 50, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !721, line: 135, column: 13)
!6856 = distinct !DILexicalBlock(scope: !6857, file: !721, line: 134, column: 58)
!6857 = distinct !DILexicalBlock(scope: !6841, file: !721, line: 134, column: 16)
!6858 = !DILocation(line: 135, column: 65, scope: !6855)
!6859 = !DILocation(line: 135, column: 13, scope: !6856)
!6860 = !DILocation(line: 136, column: 13, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6855, file: !721, line: 135, column: 86)
!6862 = !DILocation(line: 137, column: 9, scope: !6861)
!6863 = !DILocation(line: 138, column: 18, scope: !6856)
!6864 = !DILocation(line: 138, column: 16, scope: !6856)
!6865 = !DILocation(line: 139, column: 49, scope: !6856)
!6866 = !DILocation(line: 141, column: 9, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6857, file: !721, line: 140, column: 11)
!6868 = !DILocation(line: 142, column: 9, scope: !6867)
!6869 = !DILocation(line: 146, column: 1, scope: !6816)
!6870 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !721, file: !721, line: 148, type: !6871, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6873)
!6871 = !DISubroutineType(types: !6872)
!6872 = !{!2971, !136, !136, !3543}
!6873 = !{!6874, !6875, !6876}
!6874 = !DILocalVariable(name: "start_count", arg: 1, scope: !6870, file: !721, line: 148, type: !136)
!6875 = !DILocalVariable(name: "end_count", arg: 2, scope: !6870, file: !721, line: 148, type: !136)
!6876 = !DILocalVariable(name: "duration_count", arg: 3, scope: !6870, file: !721, line: 148, type: !3543)
!6877 = !DILocation(line: 0, scope: !6870)
!6878 = !DILocation(line: 150, column: 24, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6870, file: !721, line: 150, column: 9)
!6880 = !DILocation(line: 150, column: 9, scope: !6870)
!6881 = !DILocation(line: 0, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6870, file: !721, line: 154, column: 9)
!6883 = !DILocation(line: 160, column: 5, scope: !6870)
!6884 = !DILocation(line: 161, column: 1, scope: !6870)
!6885 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !721, file: !721, line: 163, type: !6886, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6889)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{!2971, !6763, !6888}
!6888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!6889 = !{!6890, !6891}
!6890 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6885, file: !721, line: 163, type: !6763)
!6891 = !DILocalVariable(name: "running_status", arg: 2, scope: !6885, file: !721, line: 164, type: !6888)
!6892 = !DILocation(line: 0, scope: !6885)
!6893 = !DILocation(line: 166, column: 18, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6885, file: !721, line: 166, column: 9)
!6895 = !DILocation(line: 166, column: 9, scope: !6885)
!6896 = !DILocation(line: 167, column: 9, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6894, file: !721, line: 166, column: 34)
!6898 = !DILocation(line: 168, column: 9, scope: !6897)
!6899 = !DILocation(line: 170, column: 47, scope: !6885)
!6900 = !DILocation(line: 170, column: 21, scope: !6885)
!6901 = !DILocation(line: 171, column: 5, scope: !6885)
!6902 = !DILocation(line: 172, column: 1, scope: !6885)
!6903 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !721, file: !721, line: 174, type: !6904, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6906)
!6904 = !DISubroutineType(types: !6905)
!6905 = !{!2971, !6763, !751, !161}
!6906 = !{!6907, !6908, !6909}
!6907 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6903, file: !721, line: 174, type: !6763)
!6908 = !DILocalVariable(name: "callback", arg: 2, scope: !6903, file: !721, line: 175, type: !751)
!6909 = !DILocalVariable(name: "user_data", arg: 3, scope: !6903, file: !721, line: 176, type: !161)
!6910 = !DILocation(line: 0, scope: !6903)
!6911 = !DILocation(line: 178, column: 9, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6903, file: !721, line: 178, column: 9)
!6913 = !DILocation(line: 178, column: 9, scope: !6903)
!6914 = !DILocation(line: 179, column: 9, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6912, file: !721, line: 178, column: 50)
!6916 = !DILocation(line: 180, column: 9, scope: !6915)
!6917 = !DILocation(line: 182, column: 33, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6903, file: !721, line: 182, column: 9)
!6919 = !DILocation(line: 182, column: 47, scope: !6918)
!6920 = !DILocation(line: 182, column: 9, scope: !6903)
!6921 = !DILocation(line: 185, column: 18, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6903, file: !721, line: 185, column: 9)
!6923 = !DILocation(line: 185, column: 9, scope: !6903)
!6924 = !DILocation(line: 188, column: 46, scope: !6903)
!6925 = !DILocation(line: 188, column: 56, scope: !6903)
!6926 = !DILocation(line: 189, column: 46, scope: !6903)
!6927 = !DILocation(line: 189, column: 56, scope: !6903)
!6928 = !DILocation(line: 190, column: 5, scope: !6903)
!6929 = !DILocation(line: 191, column: 1, scope: !6903)
!6930 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !721, file: !721, line: 218, type: !6931, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6934)
!6931 = !DISubroutineType(types: !6932)
!6932 = !{!2971, !6763, !136, !6933}
!6933 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !218, line: 383, baseType: !734)
!6934 = !{!6935, !6936, !6937}
!6935 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6930, file: !721, line: 218, type: !6763)
!6936 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !6930, file: !721, line: 218, type: !136)
!6937 = !DILocalVariable(name: "timer_type", arg: 3, scope: !6930, file: !721, line: 218, type: !6933)
!6938 = !DILocation(line: 0, scope: !6930)
!6939 = !DILocation(line: 220, column: 9, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6930, file: !721, line: 220, column: 9)
!6941 = !DILocation(line: 220, column: 9, scope: !6930)
!6942 = !DILocation(line: 221, column: 9, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6940, file: !721, line: 220, column: 50)
!6944 = !DILocation(line: 222, column: 9, scope: !6943)
!6945 = !DILocation(line: 225, column: 33, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6930, file: !721, line: 225, column: 9)
!6947 = !DILocation(line: 225, column: 47, scope: !6946)
!6948 = !DILocation(line: 225, column: 9, scope: !6930)
!6949 = !DILocation(line: 229, column: 25, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6930, file: !721, line: 229, column: 9)
!6951 = !DILocation(line: 229, column: 9, scope: !6930)
!6952 = !DILocation(line: 234, column: 17, scope: !6930)
!6953 = !DILocation(line: 235, column: 17, scope: !6930)
!6954 = !DILocation(line: 236, column: 17, scope: !6930)
!6955 = !DILocation(line: 233, column: 5, scope: !6930)
!6956 = !DILocation(line: 237, column: 5, scope: !6930)
!6957 = !DILocation(line: 238, column: 29, scope: !6930)
!6958 = !DILocation(line: 238, column: 44, scope: !6930)
!6959 = !DILocation(line: 239, column: 5, scope: !6930)
!6960 = !DILocation(line: 240, column: 1, scope: !6930)
!6961 = distinct !DISubprogram(name: "hal_gpt_translate_timeout_time", scope: !721, file: !721, line: 72, type: !6962, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6964)
!6962 = !DISubroutineType(types: !6963)
!6963 = !{!136, !136}
!6964 = !{!6965}
!6965 = !DILocalVariable(name: "mili_seconds", arg: 1, scope: !6961, file: !721, line: 72, type: !136)
!6966 = !DILocation(line: 0, scope: !6961)
!6967 = !DILocation(line: 74, column: 37, scope: !6961)
!6968 = !DILocation(line: 74, column: 47, scope: !6961)
!6969 = !DILocation(line: 74, column: 63, scope: !6961)
!6970 = !DILocation(line: 74, column: 42, scope: !6961)
!6971 = !DILocation(line: 74, column: 73, scope: !6961)
!6972 = !DILocation(line: 74, column: 89, scope: !6961)
!6973 = !DILocation(line: 74, column: 68, scope: !6961)
!6974 = !DILocation(line: 74, column: 100, scope: !6961)
!6975 = !DILocation(line: 74, column: 116, scope: !6961)
!6976 = !DILocation(line: 74, column: 95, scope: !6961)
!6977 = !DILocation(line: 74, column: 5, scope: !6961)
!6978 = distinct !DISubprogram(name: "hal_gpt_translate_type", scope: !721, file: !721, line: 77, type: !6979, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6981)
!6979 = !DISubroutineType(types: !6980)
!6980 = !{!126, !6933}
!6981 = !{!6982}
!6982 = !DILocalVariable(name: "type", arg: 1, scope: !6978, file: !721, line: 77, type: !6933)
!6983 = !DILocation(line: 0, scope: !6978)
!6984 = !DILocation(line: 79, column: 38, scope: !6978)
!6985 = !DILocation(line: 79, column: 5, scope: !6978)
!6986 = distinct !DISubprogram(name: "hal_gpt_map_callback", scope: !721, file: !721, line: 213, type: !6987, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6990)
!6987 = !DISubroutineType(types: !6988)
!6988 = !{!6989, !6763}
!6989 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_internal_callback_t", file: !721, line: 211, baseType: !180)
!6990 = !{!6991}
!6991 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6986, file: !721, line: 213, type: !6763)
!6992 = !DILocation(line: 0, scope: !6986)
!6993 = !DILocation(line: 215, column: 23, scope: !6986)
!6994 = !DILocation(line: 215, column: 12, scope: !6986)
!6995 = !DILocation(line: 215, column: 5, scope: !6986)
!6996 = distinct !DISubprogram(name: "hal_gpt_callback0", scope: !721, file: !721, line: 193, type: !181, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !6997)
!6997 = !{!6998}
!6998 = !DILocalVariable(name: "context", scope: !6996, file: !721, line: 195, type: !6999)
!6999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 32)
!7000 = !DILocation(line: 196, column: 26, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6996, file: !721, line: 196, column: 9)
!7002 = !DILocation(line: 196, column: 14, scope: !7001)
!7003 = !DILocation(line: 196, column: 9, scope: !6996)
!7004 = !DILocation(line: 197, column: 36, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7001, file: !721, line: 196, column: 36)
!7006 = !DILocation(line: 197, column: 9, scope: !7005)
!7007 = !DILocation(line: 198, column: 5, scope: !7005)
!7008 = !DILocation(line: 199, column: 45, scope: !6996)
!7009 = !DILocation(line: 200, column: 1, scope: !6996)
!7010 = distinct !DISubprogram(name: "hal_gpt_callback1", scope: !721, file: !721, line: 202, type: !181, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !7011)
!7011 = !{!7012}
!7012 = !DILocalVariable(name: "context", scope: !7010, file: !721, line: 204, type: !6999)
!7013 = !DILocation(line: 205, column: 26, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7010, file: !721, line: 205, column: 9)
!7015 = !DILocation(line: 205, column: 14, scope: !7014)
!7016 = !DILocation(line: 205, column: 9, scope: !7010)
!7017 = !DILocation(line: 206, column: 36, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7014, file: !721, line: 205, column: 36)
!7019 = !DILocation(line: 206, column: 9, scope: !7018)
!7020 = !DILocation(line: 207, column: 5, scope: !7018)
!7021 = !DILocation(line: 208, column: 45, scope: !7010)
!7022 = !DILocation(line: 209, column: 1, scope: !7010)
!7023 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !721, file: !721, line: 242, type: !6761, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !7024)
!7024 = !{!7025}
!7025 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !7023, file: !721, line: 242, type: !6763)
!7026 = !DILocation(line: 0, scope: !7023)
!7027 = !DILocation(line: 244, column: 9, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7023, file: !721, line: 244, column: 9)
!7029 = !DILocation(line: 244, column: 9, scope: !7023)
!7030 = !DILocation(line: 245, column: 9, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7028, file: !721, line: 244, column: 50)
!7032 = !DILocation(line: 246, column: 9, scope: !7031)
!7033 = !DILocation(line: 248, column: 5, scope: !7023)
!7034 = !DILocation(line: 249, column: 29, scope: !7023)
!7035 = !DILocation(line: 249, column: 44, scope: !7023)
!7036 = !DILocation(line: 250, column: 5, scope: !7023)
!7037 = !DILocation(line: 251, column: 1, scope: !7023)
!7038 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !721, file: !721, line: 253, type: !7039, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !7041)
!7039 = !DISubroutineType(types: !7040)
!7040 = !{!2971, !136}
!7041 = !{!7042}
!7042 = !DILocalVariable(name: "ms", arg: 1, scope: !7038, file: !721, line: 253, type: !136)
!7043 = !DILocation(line: 0, scope: !7038)
!7044 = !DILocation(line: 255, column: 46, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7038, file: !721, line: 255, column: 9)
!7046 = !DILocation(line: 255, column: 61, scope: !7045)
!7047 = !DILocation(line: 255, column: 9, scope: !7038)
!7048 = !DILocation(line: 256, column: 9, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7045, file: !721, line: 255, column: 82)
!7050 = !DILocation(line: 257, column: 5, scope: !7049)
!7051 = !DILocation(line: 258, column: 5, scope: !7038)
!7052 = !DILocation(line: 259, column: 57, scope: !7038)
!7053 = !DILocation(line: 260, column: 5, scope: !7038)
!7054 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !721, file: !721, line: 264, type: !7039, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !720, retainedNodes: !7055)
!7055 = !{!7056}
!7056 = !DILocalVariable(name: "us", arg: 1, scope: !7054, file: !721, line: 264, type: !136)
!7057 = !DILocation(line: 0, scope: !7054)
!7058 = !DILocation(line: 266, column: 46, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7054, file: !721, line: 266, column: 9)
!7060 = !DILocation(line: 266, column: 61, scope: !7059)
!7061 = !DILocation(line: 266, column: 9, scope: !7054)
!7062 = !DILocation(line: 267, column: 9, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7059, file: !721, line: 266, column: 82)
!7064 = !DILocation(line: 268, column: 5, scope: !7063)
!7065 = !DILocation(line: 269, column: 5, scope: !7054)
!7066 = !DILocation(line: 270, column: 57, scope: !7054)
!7067 = !DILocation(line: 271, column: 5, scope: !7054)
!7068 = distinct !DISubprogram(name: "uart_send_handler", scope: !760, file: !760, line: 213, type: !5610, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7069)
!7069 = !{!7070, !7071, !7072}
!7070 = !DILocalVariable(name: "u_port", arg: 1, scope: !7068, file: !760, line: 213, type: !5556)
!7071 = !DILocalVariable(name: "length", scope: !7068, file: !760, line: 215, type: !136)
!7072 = !DILocalVariable(name: "irq_status", scope: !7068, file: !760, line: 216, type: !136)
!7073 = !DILocation(line: 0, scope: !7068)
!7074 = !DILocation(line: 215, column: 5, scope: !7068)
!7075 = !DILocation(line: 216, column: 5, scope: !7068)
!7076 = !DILocation(line: 218, column: 9, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7068, file: !760, line: 218, column: 9)
!7078 = !DILocation(line: 218, column: 54, scope: !7077)
!7079 = !DILocation(line: 218, column: 9, scope: !7068)
!7080 = !DILocation(line: 219, column: 9, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7077, file: !760, line: 218, column: 64)
!7082 = !DILocation(line: 220, column: 9, scope: !7081)
!7083 = !DILocation(line: 221, column: 53, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7081, file: !760, line: 221, column: 13)
!7085 = !DILocation(line: 221, column: 78, scope: !7084)
!7086 = !DILocation(line: 221, column: 85, scope: !7084)
!7087 = !DILocation(line: 221, column: 13, scope: !7081)
!7088 = !DILocation(line: 222, column: 17, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7090, file: !760, line: 222, column: 17)
!7090 = distinct !DILexicalBlock(scope: !7084, file: !760, line: 221, column: 91)
!7091 = !DILocation(line: 222, column: 17, scope: !7090)
!7092 = !DILocation(line: 223, column: 48, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7089, file: !760, line: 222, column: 58)
!7094 = !DILocation(line: 223, column: 17, scope: !7093)
!7095 = !DILocation(line: 224, column: 49, scope: !7093)
!7096 = !DILocation(line: 225, column: 13, scope: !7093)
!7097 = !DILocation(line: 227, column: 41, scope: !7081)
!7098 = !DILocation(line: 227, column: 9, scope: !7081)
!7099 = !DILocation(line: 228, column: 5, scope: !7081)
!7100 = !DILocation(line: 229, column: 54, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7077, file: !760, line: 228, column: 12)
!7102 = !DILocation(line: 231, column: 1, scope: !7068)
!7103 = distinct !DISubprogram(name: "hal_uart_init", scope: !760, file: !760, line: 234, type: !7104, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7108)
!7104 = !DISubroutineType(types: !7105)
!7105 = !{!7106, !867, !7107}
!7106 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !763, line: 351, baseType: !762)
!7107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!7108 = !{!7109, !7110}
!7109 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7103, file: !760, line: 234, type: !867)
!7110 = !DILocalVariable(name: "uart_config", arg: 2, scope: !7103, file: !760, line: 234, type: !7107)
!7111 = !DILocation(line: 0, scope: !7103)
!7112 = !DILocation(line: 236, column: 10, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7103, file: !760, line: 236, column: 9)
!7114 = !DILocation(line: 236, column: 9, scope: !7103)
!7115 = !DILocation(line: 239, column: 41, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7103, file: !760, line: 239, column: 9)
!7117 = !DILocation(line: 239, column: 9, scope: !7103)
!7118 = !DILocation(line: 242, column: 5, scope: !7103)
!7119 = !DILocation(line: 243, column: 45, scope: !7103)
!7120 = !DILocation(line: 243, column: 12, scope: !7103)
!7121 = !DILocation(line: 244, column: 12, scope: !7103)
!7122 = !DILocation(line: 243, column: 5, scope: !7103)
!7123 = !DILocation(line: 245, column: 58, scope: !7103)
!7124 = !DILocation(line: 246, column: 30, scope: !7103)
!7125 = !{i32 0, i32 2}
!7126 = !DILocation(line: 246, column: 5, scope: !7103)
!7127 = !DILocation(line: 247, column: 5, scope: !7103)
!7128 = !DILocation(line: 249, column: 31, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7103, file: !760, line: 249, column: 9)
!7130 = !DILocation(line: 249, column: 28, scope: !7129)
!7131 = !DILocation(line: 249, column: 9, scope: !7103)
!7132 = !DILocation(line: 254, column: 5, scope: !7103)
!7133 = !DILocation(line: 255, column: 5, scope: !7103)
!7134 = !DILocation(line: 255, column: 53, scope: !7103)
!7135 = !DILocation(line: 256, column: 5, scope: !7103)
!7136 = !DILocation(line: 256, column: 40, scope: !7103)
!7137 = !DILocation(line: 257, column: 82, scope: !7103)
!7138 = !DILocation(line: 257, column: 39, scope: !7103)
!7139 = !DILocation(line: 257, column: 5, scope: !7103)
!7140 = !DILocation(line: 257, column: 37, scope: !7103)
!7141 = !DILocation(line: 260, column: 5, scope: !7103)
!7142 = !DILocation(line: 261, column: 1, scope: !7103)
!7143 = distinct !DISubprogram(name: "hal_uart_is_config_valid", scope: !760, file: !760, line: 93, type: !7144, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7148)
!7144 = !DISubroutineType(types: !7145)
!7145 = !{!126, !867, !7146}
!7146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7147, size: 32)
!7147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !821)
!7148 = !{!7149, !7150}
!7149 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7143, file: !760, line: 93, type: !867)
!7150 = !DILocalVariable(name: "uart_config", arg: 2, scope: !7143, file: !760, line: 93, type: !7146)
!7151 = !DILocation(line: 0, scope: !7143)
!7152 = !DILocation(line: 95, column: 10, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7143, file: !760, line: 95, column: 9)
!7154 = !DILocation(line: 95, column: 9, scope: !7143)
!7155 = !DILocation(line: 101, column: 23, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7143, file: !760, line: 101, column: 9)
!7157 = !DILocation(line: 101, column: 32, scope: !7156)
!7158 = !DILocation(line: 101, column: 60, scope: !7156)
!7159 = !DILocation(line: 102, column: 27, scope: !7156)
!7160 = !DILocation(line: 102, column: 34, scope: !7156)
!7161 = !DILocation(line: 102, column: 58, scope: !7156)
!7162 = !DILocation(line: 103, column: 27, scope: !7156)
!7163 = !DILocation(line: 103, column: 36, scope: !7156)
!7164 = !DILocation(line: 103, column: 59, scope: !7156)
!7165 = !DILocation(line: 104, column: 27, scope: !7156)
!7166 = !DILocation(line: 104, column: 39, scope: !7156)
!7167 = !DILocation(line: 101, column: 9, scope: !7143)
!7168 = !DILocation(line: 109, column: 1, scope: !7143)
!7169 = distinct !DISubprogram(name: "hal_uart_translate_port", scope: !760, file: !760, line: 139, type: !7170, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7172)
!7170 = !DISubroutineType(types: !7171)
!7171 = !{!5556, !867}
!7172 = !{!7173}
!7173 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7169, file: !760, line: 139, type: !867)
!7174 = !DILocation(line: 0, scope: !7169)
!7175 = !DILocation(line: 141, column: 24, scope: !7169)
!7176 = !DILocation(line: 141, column: 12, scope: !7169)
!7177 = !DILocation(line: 141, column: 5, scope: !7169)
!7178 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !760, file: !760, line: 593, type: !7179, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7181)
!7179 = !DISubroutineType(types: !7180)
!7180 = !{!7106, !867, !7146}
!7181 = !{!7182, !7183}
!7182 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7178, file: !760, line: 593, type: !867)
!7183 = !DILocalVariable(name: "config", arg: 2, scope: !7178, file: !760, line: 593, type: !7146)
!7184 = !DILocation(line: 0, scope: !7178)
!7185 = !DILocation(line: 595, column: 10, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7178, file: !760, line: 595, column: 9)
!7187 = !DILocation(line: 595, column: 9, scope: !7178)
!7188 = !DILocation(line: 598, column: 45, scope: !7178)
!7189 = !DILocation(line: 598, column: 12, scope: !7178)
!7190 = !DILocation(line: 598, column: 59, scope: !7178)
!7191 = !DILocation(line: 598, column: 5, scope: !7178)
!7192 = !DILocation(line: 599, column: 23, scope: !7178)
!7193 = !DILocation(line: 600, column: 59, scope: !7178)
!7194 = !DILocation(line: 600, column: 23, scope: !7178)
!7195 = !DILocation(line: 601, column: 62, scope: !7178)
!7196 = !DILocation(line: 601, column: 23, scope: !7178)
!7197 = !DILocation(line: 602, column: 57, scope: !7178)
!7198 = !DILocation(line: 602, column: 23, scope: !7178)
!7199 = !DILocation(line: 603, column: 58, scope: !7178)
!7200 = !DILocation(line: 603, column: 23, scope: !7178)
!7201 = !DILocation(line: 599, column: 5, scope: !7178)
!7202 = !DILocation(line: 604, column: 5, scope: !7178)
!7203 = !DILocation(line: 605, column: 1, scope: !7178)
!7204 = distinct !DISubprogram(name: "hal_uart_translate_baudrate", scope: !760, file: !760, line: 145, type: !7205, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7207)
!7205 = !DISubroutineType(types: !7206)
!7206 = !{!136, !825}
!7207 = !{!7208, !7209}
!7208 = !DILocalVariable(name: "bandrate", arg: 1, scope: !7204, file: !760, line: 145, type: !825)
!7209 = !DILocalVariable(name: "baudrate_tbl", scope: !7204, file: !760, line: 147, type: !7210)
!7210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 416, elements: !406)
!7211 = !DILocation(line: 0, scope: !7204)
!7212 = !DILocation(line: 147, column: 14, scope: !7204)
!7213 = !DILocation(line: 151, column: 12, scope: !7204)
!7214 = !DILocation(line: 151, column: 5, scope: !7204)
!7215 = distinct !DISubprogram(name: "hal_uart_translate_word_length", scope: !760, file: !760, line: 155, type: !7216, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7218)
!7216 = !DISubroutineType(types: !7217)
!7217 = !{!1017, !827}
!7218 = !{!7219, !7220}
!7219 = !DILocalVariable(name: "word_length", arg: 1, scope: !7215, file: !760, line: 155, type: !827)
!7220 = !DILocalVariable(name: "databit_tbl", scope: !7215, file: !760, line: 157, type: !7221)
!7221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 64, elements: !350)
!7222 = !DILocation(line: 0, scope: !7215)
!7223 = !DILocation(line: 157, column: 14, scope: !7215)
!7224 = !DILocation(line: 160, column: 12, scope: !7215)
!7225 = !DILocation(line: 160, column: 5, scope: !7215)
!7226 = distinct !DISubprogram(name: "hal_uart_translate_parity", scope: !760, file: !760, line: 164, type: !7227, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7229)
!7227 = !DISubroutineType(types: !7228)
!7228 = !{!1017, !831}
!7229 = !{!7230, !7231}
!7230 = !DILocalVariable(name: "parity", arg: 1, scope: !7226, file: !760, line: 164, type: !831)
!7231 = !DILocalVariable(name: "parity_tbl", scope: !7226, file: !760, line: 166, type: !7232)
!7232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 80, elements: !701)
!7233 = !DILocation(line: 0, scope: !7226)
!7234 = !DILocation(line: 166, column: 14, scope: !7226)
!7235 = !DILocation(line: 169, column: 12, scope: !7226)
!7236 = !DILocation(line: 169, column: 5, scope: !7226)
!7237 = distinct !DISubprogram(name: "hal_uart_translate_stopbit", scope: !760, file: !760, line: 173, type: !7238, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7240)
!7238 = !DISubroutineType(types: !7239)
!7239 = !{!1017, !829}
!7240 = !{!7241, !7242}
!7241 = !DILocalVariable(name: "stopbit", arg: 1, scope: !7237, file: !760, line: 173, type: !829)
!7242 = !DILocalVariable(name: "stopbit_tbl", scope: !7237, file: !760, line: 175, type: !7243)
!7243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 48, elements: !1159)
!7244 = !DILocation(line: 0, scope: !7237)
!7245 = !DILocation(line: 175, column: 14, scope: !7237)
!7246 = !DILocation(line: 178, column: 12, scope: !7237)
!7247 = !DILocation(line: 178, column: 5, scope: !7237)
!7248 = distinct !DISubprogram(name: "hal_uart_is_port_valid", scope: !760, file: !760, line: 87, type: !7249, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7251)
!7249 = !DISubroutineType(types: !7250)
!7250 = !{!126, !867}
!7251 = !{!7252}
!7252 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7248, file: !760, line: 87, type: !867)
!7253 = !DILocation(line: 0, scope: !7248)
!7254 = !DILocation(line: 89, column: 23, scope: !7248)
!7255 = !DILocation(line: 89, column: 5, scope: !7248)
!7256 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !760, file: !760, line: 264, type: !7257, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7259)
!7257 = !DISubroutineType(types: !7258)
!7258 = !{!7106, !867}
!7259 = !{!7260}
!7260 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7256, file: !760, line: 264, type: !867)
!7261 = !DILocation(line: 0, scope: !7256)
!7262 = !DILocation(line: 266, column: 10, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7256, file: !760, line: 266, column: 9)
!7264 = !DILocation(line: 266, column: 9, scope: !7256)
!7265 = !DILocation(line: 269, column: 41, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7256, file: !760, line: 269, column: 9)
!7267 = !DILocation(line: 269, column: 62, scope: !7266)
!7268 = !DILocation(line: 269, column: 9, scope: !7256)
!7269 = !DILocation(line: 272, column: 5, scope: !7256)
!7270 = !DILocation(line: 275, column: 22, scope: !7256)
!7271 = !DILocation(line: 275, column: 5, scope: !7256)
!7272 = !DILocation(line: 278, column: 26, scope: !7256)
!7273 = !DILocation(line: 278, column: 5, scope: !7256)
!7274 = !DILocation(line: 279, column: 5, scope: !7256)
!7275 = !DILocation(line: 279, column: 53, scope: !7256)
!7276 = !DILocation(line: 280, column: 5, scope: !7256)
!7277 = !DILocation(line: 280, column: 40, scope: !7256)
!7278 = !DILocation(line: 281, column: 5, scope: !7256)
!7279 = !DILocation(line: 282, column: 44, scope: !7256)
!7280 = !DILocation(line: 282, column: 5, scope: !7256)
!7281 = !DILocation(line: 284, column: 5, scope: !7256)
!7282 = !DILocation(line: 286, column: 5, scope: !7256)
!7283 = !DILocation(line: 287, column: 1, scope: !7256)
!7284 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !760, file: !760, line: 290, type: !7285, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7287)
!7285 = !DISubroutineType(types: !7286)
!7286 = !{null, !867, !332}
!7287 = !{!7288, !7289, !7290}
!7288 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7284, file: !760, line: 290, type: !867)
!7289 = !DILocalVariable(name: "byte", arg: 2, scope: !7284, file: !760, line: 290, type: !332)
!7290 = !DILocalVariable(name: "int_no", scope: !7284, file: !760, line: 292, type: !5556)
!7291 = !DILocation(line: 0, scope: !7284)
!7292 = !DILocation(line: 292, column: 26, scope: !7284)
!7293 = !DILocation(line: 294, column: 16, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7284, file: !760, line: 294, column: 9)
!7295 = !DILocation(line: 294, column: 9, scope: !7284)
!7296 = !DILocation(line: 295, column: 9, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7294, file: !760, line: 294, column: 34)
!7298 = !DILocation(line: 296, column: 5, scope: !7297)
!7299 = !DILocation(line: 299, column: 1, scope: !7284)
!7300 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !760, file: !760, line: 302, type: !7301, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7303)
!7301 = !DISubroutineType(types: !7302)
!7302 = !{!136, !867, !3126, !136}
!7303 = !{!7304, !7305, !7306, !7307, !7308}
!7304 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7300, file: !760, line: 302, type: !867)
!7305 = !DILocalVariable(name: "data", arg: 2, scope: !7300, file: !760, line: 302, type: !3126)
!7306 = !DILocalVariable(name: "size", arg: 3, scope: !7300, file: !760, line: 302, type: !136)
!7307 = !DILocalVariable(name: "int_no", scope: !7300, file: !760, line: 304, type: !5556)
!7308 = !DILocalVariable(name: "index", scope: !7300, file: !760, line: 305, type: !136)
!7309 = !DILocation(line: 0, scope: !7300)
!7310 = !DILocation(line: 304, column: 26, scope: !7300)
!7311 = !DILocation(line: 307, column: 14, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7300, file: !760, line: 307, column: 9)
!7313 = !DILocation(line: 307, column: 9, scope: !7300)
!7314 = !DILocation(line: 313, column: 53, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7316, file: !760, line: 312, column: 48)
!7316 = distinct !DILexicalBlock(scope: !7317, file: !760, line: 312, column: 9)
!7317 = distinct !DILexicalBlock(scope: !7318, file: !760, line: 312, column: 9)
!7318 = distinct !DILexicalBlock(scope: !7319, file: !760, line: 311, column: 33)
!7319 = distinct !DILexicalBlock(scope: !7300, file: !760, line: 311, column: 9)
!7320 = !DILocation(line: 313, column: 13, scope: !7315)
!7321 = !DILocation(line: 312, column: 44, scope: !7316)
!7322 = !DILocation(line: 312, column: 31, scope: !7316)
!7323 = !DILocation(line: 312, column: 9, scope: !7317)
!7324 = distinct !{!7324, !7323, !7325}
!7325 = !DILocation(line: 314, column: 9, scope: !7317)
!7326 = !DILocation(line: 318, column: 1, scope: !7300)
!7327 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !760, file: !760, line: 320, type: !7301, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7328)
!7328 = !{!7329, !7330, !7331, !7332, !7333, !7334, !7335}
!7329 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7327, file: !760, line: 320, type: !867)
!7330 = !DILocalVariable(name: "data", arg: 2, scope: !7327, file: !760, line: 320, type: !3126)
!7331 = !DILocalVariable(name: "size", arg: 3, scope: !7327, file: !760, line: 320, type: !136)
!7332 = !DILocalVariable(name: "actual_space", scope: !7327, file: !760, line: 322, type: !136)
!7333 = !DILocalVariable(name: "send_size", scope: !7327, file: !760, line: 322, type: !136)
!7334 = !DILocalVariable(name: "ch", scope: !7327, file: !760, line: 323, type: !2898)
!7335 = !DILocalVariable(name: "irq_status", scope: !7327, file: !760, line: 325, type: !136)
!7336 = !DILocation(line: 0, scope: !7327)
!7337 = !DILocation(line: 322, column: 5, scope: !7327)
!7338 = !DILocation(line: 325, column: 5, scope: !7327)
!7339 = !DILocation(line: 328, column: 10, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7327, file: !760, line: 328, column: 9)
!7341 = !DILocation(line: 328, column: 9, scope: !7327)
!7342 = !DILocation(line: 332, column: 15, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7327, file: !760, line: 332, column: 9)
!7344 = !DILocation(line: 332, column: 24, scope: !7343)
!7345 = !DILocation(line: 335, column: 42, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7327, file: !760, line: 335, column: 9)
!7347 = !DILocation(line: 335, column: 9, scope: !7327)
!7348 = !DILocation(line: 341, column: 5, scope: !7327)
!7349 = !DILocation(line: 342, column: 9, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7327, file: !760, line: 342, column: 9)
!7351 = !DILocation(line: 342, column: 44, scope: !7350)
!7352 = !DILocation(line: 342, column: 9, scope: !7327)
!7353 = !DILocation(line: 343, column: 38, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7350, file: !760, line: 342, column: 54)
!7355 = !DILocation(line: 343, column: 9, scope: !7354)
!7356 = !DILocation(line: 344, column: 44, scope: !7354)
!7357 = !DILocation(line: 345, column: 5, scope: !7354)
!7358 = !DILocation(line: 346, column: 37, scope: !7327)
!7359 = !DILocation(line: 346, column: 5, scope: !7327)
!7360 = !DILocation(line: 349, column: 30, scope: !7327)
!7361 = !DILocation(line: 349, column: 5, scope: !7327)
!7362 = !DILocation(line: 350, column: 9, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7327, file: !760, line: 350, column: 9)
!7364 = !DILocation(line: 350, column: 22, scope: !7363)
!7365 = !DILocation(line: 355, column: 5, scope: !7327)
!7366 = !DILocation(line: 357, column: 22, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7327, file: !760, line: 357, column: 9)
!7368 = !DILocation(line: 357, column: 19, scope: !7367)
!7369 = !DILocation(line: 357, column: 9, scope: !7327)
!7370 = !DILocation(line: 358, column: 14, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7367, file: !760, line: 357, column: 36)
!7372 = !{i32 14, i32 18}
!7373 = !DILocation(line: 359, column: 9, scope: !7371)
!7374 = !DILocation(line: 360, column: 5, scope: !7371)
!7375 = !DILocation(line: 362, column: 1, scope: !7327)
!7376 = distinct !DISubprogram(name: "uart_channel_to_dma_channel", scope: !760, file: !760, line: 191, type: !7377, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7379)
!7377 = !DISubroutineType(types: !7378)
!7378 = !{!2898, !5556, !126}
!7379 = !{!7380, !7381, !7382}
!7380 = !DILocalVariable(name: "port", arg: 1, scope: !7376, file: !760, line: 191, type: !5556)
!7381 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7376, file: !760, line: 191, type: !126)
!7382 = !DILocalVariable(name: "ch", scope: !7376, file: !760, line: 193, type: !2898)
!7383 = !DILocation(line: 0, scope: !7376)
!7384 = !DILocation(line: 195, column: 14, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7376, file: !760, line: 195, column: 9)
!7386 = !DILocation(line: 195, column: 9, scope: !7376)
!7387 = !DILocation(line: 209, column: 5, scope: !7376)
!7388 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !760, file: !760, line: 365, type: !7389, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7391)
!7389 = !DISubroutineType(types: !7390)
!7390 = !{!332, !867}
!7391 = !{!7392, !7393}
!7392 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7388, file: !760, line: 365, type: !867)
!7393 = !DILocalVariable(name: "int_no", scope: !7388, file: !760, line: 367, type: !5556)
!7394 = !DILocation(line: 0, scope: !7388)
!7395 = !DILocation(line: 367, column: 26, scope: !7388)
!7396 = !DILocation(line: 369, column: 16, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7388, file: !760, line: 369, column: 9)
!7398 = !DILocation(line: 369, column: 9, scope: !7388)
!7399 = !DILocation(line: 370, column: 22, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7397, file: !760, line: 369, column: 33)
!7401 = !DILocation(line: 370, column: 9, scope: !7400)
!7402 = !DILocation(line: 0, scope: !7397)
!7403 = !DILocation(line: 375, column: 1, scope: !7388)
!7404 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !760, file: !760, line: 377, type: !7405, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7407)
!7405 = !DISubroutineType(types: !7406)
!7406 = !{!136, !867}
!7407 = !{!7408, !7409}
!7408 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7404, file: !760, line: 377, type: !867)
!7409 = !DILocalVariable(name: "int_no", scope: !7404, file: !760, line: 379, type: !5556)
!7410 = !DILocation(line: 0, scope: !7404)
!7411 = !DILocation(line: 379, column: 26, scope: !7404)
!7412 = !DILocation(line: 381, column: 16, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7404, file: !760, line: 381, column: 9)
!7414 = !DILocation(line: 381, column: 9, scope: !7404)
!7415 = !DILocation(line: 382, column: 16, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7413, file: !760, line: 381, column: 33)
!7417 = !DILocation(line: 382, column: 9, scope: !7416)
!7418 = !DILocation(line: 0, scope: !7413)
!7419 = !DILocation(line: 387, column: 1, scope: !7404)
!7420 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !760, file: !760, line: 390, type: !7421, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7423)
!7421 = !DISubroutineType(types: !7422)
!7422 = !{!136, !867, !340, !136}
!7423 = !{!7424, !7425, !7426, !7427, !7428}
!7424 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7420, file: !760, line: 390, type: !867)
!7425 = !DILocalVariable(name: "buffer", arg: 2, scope: !7420, file: !760, line: 390, type: !340)
!7426 = !DILocalVariable(name: "size", arg: 3, scope: !7420, file: !760, line: 390, type: !136)
!7427 = !DILocalVariable(name: "int_no", scope: !7420, file: !760, line: 392, type: !5556)
!7428 = !DILocalVariable(name: "index", scope: !7420, file: !760, line: 393, type: !136)
!7429 = !DILocation(line: 0, scope: !7420)
!7430 = !DILocation(line: 392, column: 26, scope: !7420)
!7431 = !DILocation(line: 395, column: 16, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7420, file: !760, line: 395, column: 9)
!7433 = !DILocation(line: 395, column: 9, scope: !7420)
!7434 = !DILocation(line: 401, column: 38, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !760, line: 400, column: 48)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !760, line: 400, column: 9)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !760, line: 400, column: 9)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !760, line: 399, column: 33)
!7439 = distinct !DILexicalBlock(scope: !7420, file: !760, line: 399, column: 9)
!7440 = !DILocation(line: 401, column: 13, scope: !7435)
!7441 = !DILocation(line: 401, column: 27, scope: !7435)
!7442 = !DILocation(line: 400, column: 44, scope: !7436)
!7443 = !DILocation(line: 400, column: 31, scope: !7436)
!7444 = !DILocation(line: 400, column: 9, scope: !7437)
!7445 = distinct !{!7445, !7444, !7446}
!7446 = !DILocation(line: 402, column: 9, scope: !7437)
!7447 = !DILocation(line: 406, column: 1, scope: !7420)
!7448 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !760, file: !760, line: 408, type: !7421, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7449)
!7449 = !{!7450, !7451, !7452, !7453, !7454, !7455}
!7450 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7448, file: !760, line: 408, type: !867)
!7451 = !DILocalVariable(name: "buffer", arg: 2, scope: !7448, file: !760, line: 408, type: !340)
!7452 = !DILocalVariable(name: "size", arg: 3, scope: !7448, file: !760, line: 408, type: !136)
!7453 = !DILocalVariable(name: "actual_size", scope: !7448, file: !760, line: 410, type: !136)
!7454 = !DILocalVariable(name: "receive_size", scope: !7448, file: !760, line: 410, type: !136)
!7455 = !DILocalVariable(name: "ch", scope: !7448, file: !760, line: 411, type: !2898)
!7456 = !DILocation(line: 0, scope: !7448)
!7457 = !DILocation(line: 410, column: 5, scope: !7448)
!7458 = !DILocation(line: 413, column: 10, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7448, file: !760, line: 413, column: 9)
!7460 = !DILocation(line: 413, column: 9, scope: !7448)
!7461 = !DILocation(line: 417, column: 17, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7448, file: !760, line: 417, column: 9)
!7463 = !DILocation(line: 417, column: 26, scope: !7462)
!7464 = !DILocation(line: 421, column: 30, scope: !7448)
!7465 = !DILocation(line: 421, column: 5, scope: !7448)
!7466 = !DILocation(line: 422, column: 9, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7448, file: !760, line: 422, column: 9)
!7468 = !DILocation(line: 422, column: 21, scope: !7467)
!7469 = !DILocation(line: 427, column: 5, scope: !7448)
!7470 = !DILocation(line: 429, column: 25, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7448, file: !760, line: 429, column: 9)
!7472 = !DILocation(line: 429, column: 22, scope: !7471)
!7473 = !DILocation(line: 429, column: 9, scope: !7448)
!7474 = !DILocation(line: 430, column: 14, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7471, file: !760, line: 429, column: 38)
!7476 = !DILocation(line: 431, column: 9, scope: !7475)
!7477 = !DILocation(line: 432, column: 5, scope: !7475)
!7478 = !DILocation(line: 435, column: 1, scope: !7448)
!7479 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !760, file: !760, line: 438, type: !7405, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7480)
!7480 = !{!7481, !7482}
!7481 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7479, file: !760, line: 438, type: !867)
!7482 = !DILocalVariable(name: "length", scope: !7479, file: !760, line: 440, type: !136)
!7483 = !DILocation(line: 0, scope: !7479)
!7484 = !DILocation(line: 440, column: 5, scope: !7479)
!7485 = !DILocation(line: 440, column: 14, scope: !7479)
!7486 = !DILocation(line: 442, column: 10, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7479, file: !760, line: 442, column: 9)
!7488 = !DILocation(line: 442, column: 9, scope: !7479)
!7489 = !DILocation(line: 446, column: 30, scope: !7479)
!7490 = !DILocation(line: 446, column: 5, scope: !7479)
!7491 = !DILocation(line: 447, column: 12, scope: !7479)
!7492 = !DILocation(line: 447, column: 5, scope: !7479)
!7493 = !DILocation(line: 448, column: 1, scope: !7479)
!7494 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !760, file: !760, line: 451, type: !7405, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7495)
!7495 = !{!7496, !7497}
!7496 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7494, file: !760, line: 451, type: !867)
!7497 = !DILocalVariable(name: "length", scope: !7494, file: !760, line: 453, type: !136)
!7498 = !DILocation(line: 0, scope: !7494)
!7499 = !DILocation(line: 453, column: 5, scope: !7494)
!7500 = !DILocation(line: 453, column: 14, scope: !7494)
!7501 = !DILocation(line: 455, column: 10, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7494, file: !760, line: 455, column: 9)
!7503 = !DILocation(line: 455, column: 9, scope: !7494)
!7504 = !DILocation(line: 459, column: 30, scope: !7494)
!7505 = !DILocation(line: 459, column: 5, scope: !7494)
!7506 = !DILocation(line: 461, column: 12, scope: !7494)
!7507 = !DILocation(line: 461, column: 5, scope: !7494)
!7508 = !DILocation(line: 462, column: 1, scope: !7494)
!7509 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !760, file: !760, line: 543, type: !7510, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7512)
!7510 = !DISubroutineType(types: !7511)
!7511 = !{!7106, !867, !838, !161}
!7512 = !{!7513, !7514, !7515, !7516}
!7513 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7509, file: !760, line: 543, type: !867)
!7514 = !DILocalVariable(name: "user_callback", arg: 2, scope: !7509, file: !760, line: 544, type: !838)
!7515 = !DILocalVariable(name: "user_data", arg: 3, scope: !7509, file: !760, line: 545, type: !161)
!7516 = !DILocalVariable(name: "ch", scope: !7509, file: !760, line: 547, type: !2898)
!7517 = !DILocation(line: 0, scope: !7509)
!7518 = !DILocation(line: 549, column: 10, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7509, file: !760, line: 549, column: 9)
!7520 = !DILocation(line: 549, column: 9, scope: !7509)
!7521 = !DILocation(line: 556, column: 53, scope: !7509)
!7522 = !DILocation(line: 556, column: 62, scope: !7509)
!7523 = !DILocation(line: 557, column: 53, scope: !7509)
!7524 = !DILocation(line: 557, column: 63, scope: !7509)
!7525 = !DILocation(line: 558, column: 37, scope: !7509)
!7526 = !DILocation(line: 558, column: 54, scope: !7509)
!7527 = !DILocation(line: 560, column: 39, scope: !7509)
!7528 = !DILocation(line: 561, column: 39, scope: !7509)
!7529 = !DILocation(line: 560, column: 5, scope: !7509)
!7530 = !DILocation(line: 562, column: 5, scope: !7509)
!7531 = !DILocation(line: 564, column: 44, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7509, file: !760, line: 564, column: 9)
!7533 = !DILocation(line: 564, column: 9, scope: !7509)
!7534 = !DILocation(line: 565, column: 9, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7532, file: !760, line: 564, column: 59)
!7536 = !DILocation(line: 566, column: 5, scope: !7535)
!7537 = !DILocation(line: 567, column: 9, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7532, file: !760, line: 566, column: 12)
!7539 = !DILocation(line: 569, column: 10, scope: !7509)
!7540 = !DILocation(line: 570, column: 5, scope: !7509)
!7541 = !DILocation(line: 572, column: 5, scope: !7509)
!7542 = !DILocation(line: 572, column: 53, scope: !7509)
!7543 = !DILocation(line: 573, column: 35, scope: !7509)
!7544 = !DILocation(line: 573, column: 5, scope: !7509)
!7545 = !DILocation(line: 574, column: 5, scope: !7509)
!7546 = !DILocation(line: 575, column: 25, scope: !7509)
!7547 = !DILocation(line: 575, column: 5, scope: !7509)
!7548 = !DILocation(line: 578, column: 5, scope: !7509)
!7549 = !DILocation(line: 579, column: 1, scope: !7509)
!7550 = !DILocation(line: 0, scope: !864)
!7551 = !DILocation(line: 539, column: 12, scope: !864)
!7552 = !DILocation(line: 539, column: 5, scope: !864)
!7553 = distinct !DISubprogram(name: "hal_uart_send_callback0", scope: !760, file: !760, line: 511, type: !181, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7554)
!7554 = !{!7555}
!7555 = !DILocalVariable(name: "callback_context", scope: !7556, file: !760, line: 514, type: !7558)
!7556 = distinct !DILexicalBlock(scope: !7557, file: !760, line: 513, column: 60)
!7557 = distinct !DILexicalBlock(scope: !7553, file: !760, line: 513, column: 9)
!7558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 32)
!7559 = !DILocation(line: 513, column: 42, scope: !7557)
!7560 = !DILocation(line: 513, column: 9, scope: !7553)
!7561 = !DILocation(line: 515, column: 39, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7556, file: !760, line: 515, column: 13)
!7563 = !DILocation(line: 515, column: 18, scope: !7562)
!7564 = !DILocation(line: 515, column: 13, scope: !7556)
!7565 = !DILocation(line: 516, column: 89, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7562, file: !760, line: 515, column: 49)
!7567 = !DILocation(line: 516, column: 13, scope: !7566)
!7568 = !DILocation(line: 517, column: 9, scope: !7566)
!7569 = !DILocation(line: 519, column: 32, scope: !7553)
!7570 = !DILocation(line: 519, column: 5, scope: !7553)
!7571 = !DILocation(line: 520, column: 1, scope: !7553)
!7572 = distinct !DISubprogram(name: "hal_uart_send_callback1", scope: !760, file: !760, line: 523, type: !181, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7573)
!7573 = !{!7574}
!7574 = !DILocalVariable(name: "callback_context", scope: !7575, file: !760, line: 526, type: !7558)
!7575 = distinct !DILexicalBlock(scope: !7576, file: !760, line: 525, column: 60)
!7576 = distinct !DILexicalBlock(scope: !7572, file: !760, line: 525, column: 9)
!7577 = !DILocation(line: 525, column: 42, scope: !7576)
!7578 = !DILocation(line: 525, column: 9, scope: !7572)
!7579 = !DILocation(line: 527, column: 39, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7575, file: !760, line: 527, column: 13)
!7581 = !DILocation(line: 527, column: 18, scope: !7580)
!7582 = !DILocation(line: 527, column: 13, scope: !7575)
!7583 = !DILocation(line: 528, column: 89, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7580, file: !760, line: 527, column: 49)
!7585 = !DILocation(line: 528, column: 13, scope: !7584)
!7586 = !DILocation(line: 529, column: 9, scope: !7584)
!7587 = !DILocation(line: 531, column: 32, scope: !7572)
!7588 = !DILocation(line: 531, column: 5, scope: !7572)
!7589 = !DILocation(line: 532, column: 1, scope: !7572)
!7590 = distinct !DISubprogram(name: "hal_uart_check_irq_disable", scope: !760, file: !760, line: 464, type: !7591, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7593)
!7591 = !DISubroutineType(types: !7592)
!7592 = !{null, !5556, !126}
!7593 = !{!7594, !7595, !7596, !7597, !7598, !7600}
!7594 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7590, file: !760, line: 464, type: !5556)
!7595 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7590, file: !760, line: 464, type: !126)
!7596 = !DILocalVariable(name: "avail_size", scope: !7590, file: !760, line: 466, type: !136)
!7597 = !DILocalVariable(name: "avail_space", scope: !7590, file: !760, line: 466, type: !136)
!7598 = !DILocalVariable(name: "dma_config", scope: !7590, file: !760, line: 467, type: !7599)
!7599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 32)
!7600 = !DILocalVariable(name: "ch", scope: !7590, file: !760, line: 468, type: !2898)
!7601 = !DILocation(line: 0, scope: !7590)
!7602 = !DILocation(line: 466, column: 5, scope: !7590)
!7603 = !DILocation(line: 471, column: 9, scope: !7590)
!7604 = !DILocation(line: 472, column: 9, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7606, file: !760, line: 471, column: 16)
!7606 = distinct !DILexicalBlock(scope: !7590, file: !760, line: 471, column: 9)
!7607 = !DILocation(line: 473, column: 13, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7605, file: !760, line: 473, column: 13)
!7609 = !DILocation(line: 473, column: 39, scope: !7608)
!7610 = !DILocation(line: 473, column: 24, scope: !7608)
!7611 = !DILocation(line: 473, column: 13, scope: !7605)
!7612 = !DILocation(line: 478, column: 9, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7606, file: !760, line: 477, column: 12)
!7614 = !DILocation(line: 479, column: 13, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7613, file: !760, line: 479, column: 13)
!7616 = !DILocation(line: 479, column: 40, scope: !7615)
!7617 = !DILocation(line: 479, column: 77, scope: !7615)
!7618 = !DILocation(line: 479, column: 63, scope: !7615)
!7619 = !DILocation(line: 479, column: 25, scope: !7615)
!7620 = !DILocation(line: 479, column: 13, scope: !7613)
!7621 = !DILocation(line: 0, scope: !7606)
!7622 = !DILocation(line: 484, column: 1, scope: !7590)
!7623 = distinct !DISubprogram(name: "hal_uart_receive_callback0", scope: !760, file: !760, line: 486, type: !181, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7624)
!7624 = !{!7625}
!7625 = !DILocalVariable(name: "callback_context", scope: !7626, file: !760, line: 490, type: !7558)
!7626 = distinct !DILexicalBlock(scope: !7627, file: !760, line: 489, column: 70)
!7627 = distinct !DILexicalBlock(scope: !7623, file: !760, line: 488, column: 9)
!7628 = !DILocation(line: 488, column: 43, scope: !7627)
!7629 = !DILocation(line: 488, column: 61, scope: !7627)
!7630 = !DILocation(line: 489, column: 14, scope: !7627)
!7631 = !DILocation(line: 489, column: 63, scope: !7627)
!7632 = !DILocation(line: 488, column: 9, scope: !7623)
!7633 = !DILocation(line: 491, column: 39, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7626, file: !760, line: 491, column: 13)
!7635 = !DILocation(line: 491, column: 18, scope: !7634)
!7636 = !DILocation(line: 491, column: 13, scope: !7626)
!7637 = !DILocation(line: 492, column: 88, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7634, file: !760, line: 491, column: 49)
!7639 = !DILocation(line: 492, column: 13, scope: !7638)
!7640 = !DILocation(line: 493, column: 9, scope: !7638)
!7641 = !DILocation(line: 495, column: 32, scope: !7623)
!7642 = !DILocation(line: 495, column: 5, scope: !7623)
!7643 = !DILocation(line: 496, column: 1, scope: !7623)
!7644 = distinct !DISubprogram(name: "hal_uart_receive_callback1", scope: !760, file: !760, line: 499, type: !181, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7645)
!7645 = !{!7646}
!7646 = !DILocalVariable(name: "callback_context", scope: !7647, file: !760, line: 503, type: !7558)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !760, line: 502, column: 70)
!7648 = distinct !DILexicalBlock(scope: !7644, file: !760, line: 501, column: 9)
!7649 = !DILocation(line: 501, column: 43, scope: !7648)
!7650 = !DILocation(line: 501, column: 61, scope: !7648)
!7651 = !DILocation(line: 502, column: 14, scope: !7648)
!7652 = !DILocation(line: 502, column: 63, scope: !7648)
!7653 = !DILocation(line: 501, column: 9, scope: !7644)
!7654 = !DILocation(line: 504, column: 39, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7647, file: !760, line: 504, column: 13)
!7656 = !DILocation(line: 504, column: 18, scope: !7655)
!7657 = !DILocation(line: 504, column: 13, scope: !7647)
!7658 = !DILocation(line: 505, column: 88, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7655, file: !760, line: 504, column: 49)
!7660 = !DILocation(line: 505, column: 13, scope: !7659)
!7661 = !DILocation(line: 506, column: 9, scope: !7659)
!7662 = !DILocation(line: 508, column: 32, scope: !7644)
!7663 = !DILocation(line: 508, column: 5, scope: !7644)
!7664 = !DILocation(line: 509, column: 1, scope: !7644)
!7665 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !760, file: !760, line: 582, type: !7666, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7668)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{!7106, !867, !825}
!7668 = !{!7669, !7670}
!7669 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7665, file: !760, line: 582, type: !867)
!7670 = !DILocalVariable(name: "baudrate", arg: 2, scope: !7665, file: !760, line: 582, type: !825)
!7671 = !DILocation(line: 0, scope: !7665)
!7672 = !DILocation(line: 584, column: 11, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7665, file: !760, line: 584, column: 9)
!7674 = !DILocation(line: 584, column: 46, scope: !7673)
!7675 = !DILocation(line: 588, column: 37, scope: !7665)
!7676 = !DILocation(line: 588, column: 50, scope: !7665)
!7677 = !DILocation(line: 588, column: 59, scope: !7665)
!7678 = !DILocation(line: 589, column: 12, scope: !7665)
!7679 = !DILocation(line: 589, column: 5, scope: !7665)
!7680 = !DILocation(line: 590, column: 1, scope: !7665)
!7681 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !760, file: !760, line: 608, type: !7682, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7686)
!7682 = !DISubroutineType(types: !7683)
!7683 = !{!7106, !867, !7684}
!7684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7685, size: 32)
!7685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !846)
!7686 = !{!7687, !7688}
!7687 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7681, file: !760, line: 608, type: !867)
!7688 = !DILocalVariable(name: "uart_dma_config", arg: 2, scope: !7681, file: !760, line: 608, type: !7684)
!7689 = !DILocation(line: 0, scope: !7681)
!7690 = !DILocation(line: 610, column: 10, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7681, file: !760, line: 610, column: 9)
!7692 = !DILocation(line: 610, column: 9, scope: !7681)
!7693 = !DILocation(line: 614, column: 10, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7681, file: !760, line: 614, column: 9)
!7695 = !DILocation(line: 614, column: 9, scope: !7681)
!7696 = !DILocation(line: 618, column: 37, scope: !7681)
!7697 = !DILocation(line: 618, column: 56, scope: !7681)
!7698 = !DILocation(line: 619, column: 45, scope: !7681)
!7699 = !DILocation(line: 619, column: 12, scope: !7681)
!7700 = !DILocation(line: 620, column: 12, scope: !7681)
!7701 = !DILocation(line: 619, column: 5, scope: !7681)
!7702 = !DILocation(line: 621, column: 5, scope: !7681)
!7703 = !DILocation(line: 622, column: 5, scope: !7681)
!7704 = !DILocation(line: 623, column: 33, scope: !7681)
!7705 = !DILocation(line: 624, column: 50, scope: !7681)
!7706 = !DILocation(line: 625, column: 50, scope: !7681)
!7707 = !DILocation(line: 626, column: 50, scope: !7681)
!7708 = !DILocation(line: 627, column: 50, scope: !7681)
!7709 = !DILocation(line: 628, column: 33, scope: !7681)
!7710 = !DILocation(line: 623, column: 5, scope: !7681)
!7711 = !DILocation(line: 630, column: 50, scope: !7681)
!7712 = !DILocation(line: 631, column: 50, scope: !7681)
!7713 = !DILocation(line: 632, column: 50, scope: !7681)
!7714 = !DILocation(line: 629, column: 5, scope: !7681)
!7715 = !DILocation(line: 634, column: 5, scope: !7681)
!7716 = !DILocation(line: 635, column: 1, scope: !7681)
!7717 = distinct !DISubprogram(name: "hal_uart_is_dma_config_valid", scope: !760, file: !760, line: 112, type: !7718, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7720)
!7718 = !DISubroutineType(types: !7719)
!7719 = !{!126, !7684}
!7720 = !{!7721}
!7721 = !DILocalVariable(name: "dma_config", arg: 1, scope: !7717, file: !760, line: 112, type: !7684)
!7722 = !DILocation(line: 0, scope: !7717)
!7723 = !DILocation(line: 114, column: 14, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7717, file: !760, line: 114, column: 9)
!7725 = !DILocation(line: 114, column: 9, scope: !7717)
!7726 = !DILocation(line: 117, column: 29, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7717, file: !760, line: 117, column: 9)
!7728 = !DILocation(line: 117, column: 14, scope: !7727)
!7729 = !DILocation(line: 117, column: 9, scope: !7717)
!7730 = !DILocation(line: 120, column: 21, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7717, file: !760, line: 120, column: 9)
!7732 = !DILocation(line: 120, column: 61, scope: !7731)
!7733 = !DILocation(line: 120, column: 47, scope: !7731)
!7734 = !DILocation(line: 120, column: 9, scope: !7717)
!7735 = !DILocation(line: 123, column: 61, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7717, file: !760, line: 123, column: 9)
!7737 = !DILocation(line: 123, column: 47, scope: !7736)
!7738 = !DILocation(line: 123, column: 9, scope: !7717)
!7739 = !DILocation(line: 126, column: 29, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7717, file: !760, line: 126, column: 9)
!7741 = !DILocation(line: 126, column: 14, scope: !7740)
!7742 = !DILocation(line: 126, column: 9, scope: !7717)
!7743 = !DILocation(line: 129, column: 21, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7717, file: !760, line: 129, column: 9)
!7745 = !DILocation(line: 129, column: 58, scope: !7744)
!7746 = !DILocation(line: 129, column: 44, scope: !7744)
!7747 = !DILocation(line: 129, column: 9, scope: !7717)
!7748 = !DILocation(line: 136, column: 1, scope: !7717)
!7749 = distinct !DISubprogram(name: "hal_uart_translate_timeout", scope: !760, file: !760, line: 182, type: !6962, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7750)
!7750 = !{!7751, !7752}
!7751 = !DILocalVariable(name: "timeout_us", arg: 1, scope: !7749, file: !760, line: 182, type: !136)
!7752 = !DILocalVariable(name: "ticks_per_us", scope: !7749, file: !760, line: 184, type: !136)
!7753 = !DILocation(line: 0, scope: !7749)
!7754 = !DILocation(line: 186, column: 20, scope: !7749)
!7755 = !DILocation(line: 186, column: 39, scope: !7749)
!7756 = !DILocation(line: 188, column: 25, scope: !7749)
!7757 = !DILocation(line: 188, column: 5, scope: !7749)
!7758 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !760, file: !760, line: 637, type: !7257, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7759)
!7759 = !{!7760, !7761}
!7760 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7758, file: !760, line: 637, type: !867)
!7761 = !DILocalVariable(name: "int_no", scope: !7758, file: !760, line: 639, type: !5556)
!7762 = !DILocation(line: 0, scope: !7758)
!7763 = !DILocation(line: 641, column: 10, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7758, file: !760, line: 641, column: 9)
!7765 = !DILocation(line: 641, column: 9, scope: !7758)
!7766 = !DILocation(line: 645, column: 14, scope: !7758)
!7767 = !DILocation(line: 646, column: 5, scope: !7758)
!7768 = !DILocation(line: 648, column: 5, scope: !7758)
!7769 = !DILocation(line: 649, column: 1, scope: !7758)
!7770 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !760, file: !760, line: 651, type: !7771, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7773)
!7771 = !DISubroutineType(types: !7772)
!7772 = !{!7106, !867, !128, !128, !128}
!7773 = !{!7774, !7775, !7776, !7777, !7778}
!7774 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7770, file: !760, line: 651, type: !867)
!7775 = !DILocalVariable(name: "xon", arg: 2, scope: !7770, file: !760, line: 652, type: !128)
!7776 = !DILocalVariable(name: "xoff", arg: 3, scope: !7770, file: !760, line: 653, type: !128)
!7777 = !DILocalVariable(name: "escape_character", arg: 4, scope: !7770, file: !760, line: 654, type: !128)
!7778 = !DILocalVariable(name: "int_no", scope: !7770, file: !760, line: 656, type: !5556)
!7779 = !DILocation(line: 0, scope: !7770)
!7780 = !DILocation(line: 658, column: 10, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7770, file: !760, line: 658, column: 9)
!7782 = !DILocation(line: 658, column: 9, scope: !7770)
!7783 = !DILocation(line: 662, column: 14, scope: !7770)
!7784 = !DILocation(line: 663, column: 5, scope: !7770)
!7785 = !DILocation(line: 665, column: 5, scope: !7770)
!7786 = !DILocation(line: 666, column: 1, scope: !7770)
!7787 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !760, file: !760, line: 668, type: !7257, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7788)
!7788 = !{!7789, !7790}
!7789 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7787, file: !760, line: 668, type: !867)
!7790 = !DILocalVariable(name: "int_no", scope: !7787, file: !760, line: 670, type: !5556)
!7791 = !DILocation(line: 0, scope: !7787)
!7792 = !DILocation(line: 672, column: 10, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7787, file: !760, line: 672, column: 9)
!7794 = !DILocation(line: 672, column: 9, scope: !7787)
!7795 = !DILocation(line: 676, column: 14, scope: !7787)
!7796 = !DILocation(line: 677, column: 5, scope: !7787)
!7797 = !DILocation(line: 679, column: 5, scope: !7787)
!7798 = !DILocation(line: 680, column: 1, scope: !7787)
!7799 = distinct !DISubprogram(name: "hal_uart_set_dma_timeout", scope: !760, file: !760, line: 683, type: !7800, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !7802)
!7800 = !DISubroutineType(types: !7801)
!7801 = !{!7106, !867, !136}
!7802 = !{!7803, !7804}
!7803 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7799, file: !760, line: 683, type: !867)
!7804 = !DILocalVariable(name: "timeout", arg: 2, scope: !7799, file: !760, line: 683, type: !136)
!7805 = !DILocation(line: 0, scope: !7799)
!7806 = !DILocation(line: 685, column: 10, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7799, file: !760, line: 685, column: 9)
!7808 = !DILocation(line: 685, column: 9, scope: !7799)
!7809 = !DILocation(line: 689, column: 19, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7799, file: !760, line: 689, column: 9)
!7811 = !DILocation(line: 0, scope: !7810)
!7812 = !DILocation(line: 696, column: 1, scope: !7799)
!7813 = distinct !DISubprogram(name: "hal_dwt_reset", scope: !875, file: !875, line: 47, type: !181, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !874, retainedNodes: !2135)
!7814 = !DILocation(line: 49, column: 16, scope: !7813)
!7815 = !DILocation(line: 50, column: 16, scope: !7813)
!7816 = !DILocation(line: 51, column: 16, scope: !7813)
!7817 = !DILocation(line: 52, column: 16, scope: !7813)
!7818 = !DILocation(line: 53, column: 16, scope: !7813)
!7819 = !DILocation(line: 54, column: 16, scope: !7813)
!7820 = !DILocation(line: 55, column: 16, scope: !7813)
!7821 = !DILocation(line: 56, column: 16, scope: !7813)
!7822 = !DILocation(line: 57, column: 20, scope: !7813)
!7823 = !DILocation(line: 58, column: 20, scope: !7813)
!7824 = !DILocation(line: 59, column: 20, scope: !7813)
!7825 = !DILocation(line: 60, column: 20, scope: !7813)
!7826 = !DILocation(line: 61, column: 1, scope: !7813)
!7827 = distinct !DISubprogram(name: "hal_dwt_init", scope: !875, file: !875, line: 62, type: !181, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !874, retainedNodes: !2135)
!7828 = !DILocation(line: 70, column: 22, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7827, file: !875, line: 70, column: 9)
!7830 = !DILocation(line: 70, column: 28, scope: !7829)
!7831 = !DILocation(line: 70, column: 9, scope: !7827)
!7832 = !DILocation(line: 72, column: 9, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7829, file: !875, line: 70, column: 62)
!7834 = !DILocation(line: 75, column: 26, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7833, file: !875, line: 75, column: 13)
!7836 = !DILocation(line: 75, column: 32, scope: !7835)
!7837 = !DILocation(line: 75, column: 13, scope: !7833)
!7838 = !DILocation(line: 76, column: 30, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !875, line: 75, column: 63)
!7840 = !DILocation(line: 77, column: 9, scope: !7839)
!7841 = !DILocation(line: 79, column: 28, scope: !7833)
!7842 = !DILocation(line: 79, column: 33, scope: !7833)
!7843 = !DILocation(line: 79, column: 21, scope: !7833)
!7844 = !DILocation(line: 83, column: 20, scope: !7833)
!7845 = !DILocation(line: 84, column: 20, scope: !7833)
!7846 = !DILocation(line: 85, column: 20, scope: !7833)
!7847 = !DILocation(line: 86, column: 20, scope: !7833)
!7848 = !DILocation(line: 92, column: 5, scope: !7833)
!7849 = !DILocation(line: 93, column: 1, scope: !7827)
!7850 = distinct !DISubprogram(name: "hal_dwt_request_watchpoint", scope: !875, file: !875, line: 120, type: !7851, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !874, retainedNodes: !7854)
!7851 = !DISubroutineType(types: !7852)
!7852 = !{!640, !136, !136, !136, !7853}
!7853 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_FUNC_TYPE", file: !878, line: 48, baseType: !877)
!7854 = !{!7855, !7856, !7857, !7858, !7859}
!7855 = !DILocalVariable(name: "index", arg: 1, scope: !7850, file: !875, line: 120, type: !136)
!7856 = !DILocalVariable(name: "addr_base", arg: 2, scope: !7850, file: !875, line: 120, type: !136)
!7857 = !DILocalVariable(name: "addr_mask", arg: 3, scope: !7850, file: !875, line: 120, type: !136)
!7858 = !DILocalVariable(name: "func", arg: 4, scope: !7850, file: !875, line: 120, type: !7853)
!7859 = !DILocalVariable(name: "offset", scope: !7850, file: !875, line: 122, type: !136)
!7860 = !DILocation(line: 0, scope: !7850)
!7861 = !DILocation(line: 129, column: 22, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7850, file: !875, line: 129, column: 9)
!7863 = !DILocation(line: 129, column: 28, scope: !7862)
!7864 = !DILocation(line: 129, column: 9, scope: !7850)
!7865 = !DILocation(line: 131, column: 23, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !875, line: 131, column: 13)
!7867 = distinct !DILexicalBlock(scope: !7862, file: !875, line: 129, column: 62)
!7868 = !DILocation(line: 131, column: 20, scope: !7866)
!7869 = !DILocation(line: 131, column: 36, scope: !7866)
!7870 = !DILocation(line: 135, column: 33, scope: !7867)
!7871 = !DILocation(line: 138, column: 23, scope: !7867)
!7872 = !DILocation(line: 138, column: 33, scope: !7867)
!7873 = !DILocation(line: 139, column: 23, scope: !7867)
!7874 = !DILocation(line: 139, column: 33, scope: !7867)
!7875 = !DILocation(line: 140, column: 58, scope: !7867)
!7876 = !DILocation(line: 140, column: 40, scope: !7867)
!7877 = !DILocation(line: 140, column: 68, scope: !7867)
!7878 = !DILocation(line: 140, column: 97, scope: !7867)
!7879 = !DILocation(line: 140, column: 37, scope: !7867)
!7880 = !DILocation(line: 142, column: 9, scope: !7867)
!7881 = !DILocation(line: 0, scope: !7862)
!7882 = !DILocation(line: 146, column: 1, scope: !7850)
!7883 = distinct !DISubprogram(name: "customer_flash_suspend_bit", scope: !925, file: !925, line: 178, type: !7884, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !7886)
!7884 = !DISubroutineType(types: !7885)
!7885 = !{!132}
!7886 = !{!7887}
!7887 = !DILocalVariable(name: "suspend_bit", scope: !7883, file: !925, line: 181, type: !132)
!7888 = !DILocation(line: 0, scope: !7883)
!7889 = !DILocation(line: 182, column: 5, scope: !7883)
!7890 = distinct !DISubprogram(name: "customer_switch_spi_mode_command", scope: !925, file: !925, line: 185, type: !7891, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !2135)
!7891 = !DISubroutineType(types: !7892)
!7892 = !{!323}
!7893 = !DILocation(line: 188, column: 4, scope: !7890)
!7894 = distinct !DISubprogram(name: "customer_switch_spiq_mode_command", scope: !925, file: !925, line: 191, type: !7891, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !2135)
!7895 = !DILocation(line: 194, column: 5, scope: !7894)
!7896 = distinct !DISubprogram(name: "customer_flash_read_SR2_comand", scope: !925, file: !925, line: 197, type: !7884, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !7897)
!7897 = !{!7898}
!7898 = !DILocalVariable(name: "cmd", scope: !7896, file: !925, line: 201, type: !132)
!7899 = !DILocation(line: 0, scope: !7896)
!7900 = !DILocation(line: 202, column: 5, scope: !7896)
!7901 = distinct !DISubprogram(name: "customer_flash_register", scope: !925, file: !925, line: 207, type: !7902, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !2135)
!7902 = !DISubroutineType(types: !7903)
!7903 = !{!927}
!7904 = !DILocation(line: 209, column: 5, scope: !7901)
!7905 = distinct !DISubprogram(name: "main", scope: !951, file: !951, line: 108, type: !996, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !7906)
!7906 = !{!7907, !7909}
!7907 = !DILocalVariable(name: "hist", scope: !7905, file: !951, line: 114, type: !7908)
!7908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!7909 = !DILocalVariable(name: "i", scope: !7905, file: !951, line: 115, type: !53)
!7910 = !DILocation(line: 110, column: 5, scope: !7905)
!7911 = !DILocation(line: 0, scope: !7905)
!7912 = !DILocation(line: 116, column: 5, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7905, file: !951, line: 116, column: 5)
!7914 = !DILocation(line: 117, column: 29, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7916, file: !951, line: 116, column: 41)
!7916 = distinct !DILexicalBlock(scope: !7913, file: !951, line: 116, column: 5)
!7917 = !DILocation(line: 117, column: 9, scope: !7915)
!7918 = !DILocation(line: 117, column: 27, scope: !7915)
!7919 = !DILocation(line: 116, column: 37, scope: !7916)
!7920 = !DILocation(line: 116, column: 19, scope: !7916)
!7921 = distinct !{!7921, !7912, !7922}
!7922 = !DILocation(line: 118, column: 5, scope: !7913)
!7923 = !DILocation(line: 119, column: 29, scope: !7905)
!7924 = !DILocation(line: 120, column: 29, scope: !7905)
!7925 = !DILocation(line: 121, column: 29, scope: !7905)
!7926 = !DILocation(line: 122, column: 29, scope: !7905)
!7927 = !DILocation(line: 123, column: 29, scope: !7905)
!7928 = !DILocation(line: 124, column: 29, scope: !7905)
!7929 = !DILocation(line: 125, column: 29, scope: !7905)
!7930 = !DILocation(line: 126, column: 29, scope: !7905)
!7931 = !DILocation(line: 131, column: 5, scope: !7905)
!7932 = !DILocation(line: 136, column: 5, scope: !7905)
!7933 = !DILocation(line: 147, column: 5, scope: !7905)
!7934 = !DILocation(line: 150, column: 5, scope: !7905)
!7935 = !DILocation(line: 157, column: 5, scope: !7905)
!7936 = !DILocation(line: 157, column: 5, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7938, file: !951, line: 157, column: 5)
!7938 = distinct !DILexicalBlock(scope: !7905, file: !951, line: 157, column: 5)
!7939 = distinct !{!7939, !7940, !7941}
!7940 = !DILocation(line: 157, column: 5, scope: !7938)
!7941 = !DILocation(line: 157, column: 13, scope: !7938)
!7942 = distinct !DISubprogram(name: "cli_def_task", scope: !951, file: !951, line: 101, type: !753, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !7943)
!7943 = !{!7944}
!7944 = !DILocalVariable(name: "param", arg: 1, scope: !7942, file: !951, line: 101, type: !161)
!7945 = !DILocation(line: 0, scope: !7942)
!7946 = !DILocation(line: 103, column: 5, scope: !7942)
!7947 = !DILocation(line: 104, column: 9, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !951, line: 103, column: 14)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !951, line: 103, column: 5)
!7950 = distinct !DILexicalBlock(scope: !7942, file: !951, line: 103, column: 5)
!7951 = !DILocation(line: 103, column: 5, scope: !7949)
!7952 = distinct !{!7952, !7953, !7954}
!7953 = !DILocation(line: 103, column: 5, scope: !7950)
!7954 = !DILocation(line: 105, column: 5, scope: !7950)
!7955 = distinct !DISubprogram(name: "cli_helloworld", scope: !951, file: !951, line: 72, type: !982, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !950, retainedNodes: !7956)
!7956 = !{!7957, !7958}
!7957 = !DILocalVariable(name: "argc", arg: 1, scope: !7955, file: !951, line: 72, type: !128)
!7958 = !DILocalVariable(name: "argv", arg: 2, scope: !7955, file: !951, line: 72, type: !984)
!7959 = !DILocation(line: 0, scope: !7955)
!7960 = !DILocation(line: 74, column: 5, scope: !7955)
!7961 = !DILocation(line: 75, column: 5, scope: !7955)
!7962 = distinct !DISubprogram(name: "SysTick_Set", scope: !1026, file: !1026, line: 70, type: !6962, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !7963)
!7963 = !{!7964, !7965}
!7964 = !DILocalVariable(name: "ticks", arg: 1, scope: !7962, file: !1026, line: 70, type: !136)
!7965 = !DILocalVariable(name: "val", scope: !7962, file: !1026, line: 72, type: !136)
!7966 = !DILocation(line: 0, scope: !7962)
!7967 = !DILocation(line: 74, column: 16, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7962, file: !1026, line: 74, column: 9)
!7969 = !DILocation(line: 74, column: 21, scope: !7968)
!7970 = !DILocation(line: 74, column: 9, scope: !7962)
!7971 = !DILocation(line: 78, column: 20, scope: !7962)
!7972 = !DILocation(line: 80, column: 19, scope: !7962)
!7973 = !DILocation(line: 83, column: 20, scope: !7962)
!7974 = !DILocation(line: 84, column: 20, scope: !7962)
!7975 = !DILocation(line: 86, column: 19, scope: !7962)
!7976 = !DILocation(line: 88, column: 5, scope: !7962)
!7977 = !DILocation(line: 89, column: 1, scope: !7962)
!7978 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !1026, file: !1026, line: 98, type: !181, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !2135)
!7979 = !DILocation(line: 100, column: 28, scope: !7978)
!7980 = !DILocation(line: 101, column: 1, scope: !7978)
!7981 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !1026, file: !1026, line: 110, type: !2167, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !2135)
!7982 = !DILocation(line: 112, column: 12, scope: !7981)
!7983 = !DILocation(line: 112, column: 5, scope: !7981)
!7984 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1026, file: !1026, line: 122, type: !181, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !2135)
!7985 = !DILocation(line: 124, column: 23, scope: !7984)
!7986 = !DILocation(line: 124, column: 21, scope: !7984)
!7987 = !DILocation(line: 125, column: 1, scope: !7984)
!7988 = distinct !DISubprogram(name: "SystemInit", scope: !1026, file: !1026, line: 136, type: !181, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !2135)
!7989 = !DILocation(line: 140, column: 16, scope: !7988)
!7990 = !DILocation(line: 144, column: 16, scope: !7988)
!7991 = !DILocation(line: 147, column: 16, scope: !7988)
!7992 = !DILocation(line: 150, column: 1, scope: !7988)
!7993 = distinct !DISubprogram(name: "CachePreInit", scope: !1026, file: !1026, line: 158, type: !181, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !2135)
!7994 = !DILocation(line: 161, column: 22, scope: !7993)
!7995 = !DILocation(line: 164, column: 21, scope: !7993)
!7996 = !DILocation(line: 167, column: 21, scope: !7993)
!7997 = !DILocation(line: 170, column: 29, scope: !7993)
!7998 = !DILocation(line: 171, column: 33, scope: !7993)
!7999 = !DILocation(line: 173, column: 28, scope: !7993)
!8000 = !DILocation(line: 178, column: 30, scope: !7993)
!8001 = !DILocation(line: 192, column: 1, scope: !7993)
!8002 = distinct !DISubprogram(name: "system_init", scope: !1086, file: !1086, line: 206, type: !181, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !8003)
!8003 = !{!8004}
!8004 = !DILocalVariable(name: "t", scope: !8002, file: !1086, line: 208, type: !8005)
!8005 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !8006, line: 42, baseType: !8007)
!8006 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!8007 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !131, line: 200, baseType: !8008)
!8008 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!8009 = !DILocation(line: 208, column: 5, scope: !8002)
!8010 = !DILocation(line: 0, scope: !8002)
!8011 = !DILocation(line: 208, column: 17, scope: !8002)
!8012 = !DILocation(line: 210, column: 5, scope: !8002)
!8013 = !DILocation(line: 212, column: 5, scope: !8002)
!8014 = !DILocation(line: 216, column: 5, scope: !8002)
!8015 = !DILocation(line: 220, column: 5, scope: !8002)
!8016 = !DILocation(line: 223, column: 5, scope: !8002)
!8017 = !DILocation(line: 225, column: 5, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8002, file: !1086, line: 225, column: 5)
!8019 = !DILocation(line: 226, column: 1, scope: !8002)
!8020 = distinct !DISubprogram(name: "SystemClock_Config", scope: !1086, file: !1086, line: 82, type: !181, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !2135)
!8021 = !DILocation(line: 85, column: 5, scope: !8020)
!8022 = !DILocation(line: 86, column: 1, scope: !8020)
!8023 = distinct !DISubprogram(name: "prvSetupHardware", scope: !1086, file: !1086, line: 133, type: !181, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !2135)
!8024 = !DILocation(line: 150, column: 5, scope: !8023)
!8025 = !DILocation(line: 153, column: 5, scope: !8023)
!8026 = !DILocation(line: 159, column: 5, scope: !8023)
!8027 = !DILocation(line: 162, column: 5, scope: !8023)
!8028 = !DILocation(line: 165, column: 9, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8023, file: !1086, line: 165, column: 9)
!8030 = !DILocation(line: 169, column: 5, scope: !8023)
!8031 = !DILocation(line: 170, column: 1, scope: !8023)
!8032 = distinct !DISubprogram(name: "_main_sys_random_init", scope: !1086, file: !1086, line: 176, type: !181, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !8033)
!8033 = !{!8034, !8035}
!8034 = !DILocalVariable(name: "seed", scope: !8032, file: !1086, line: 180, type: !136)
!8035 = !DILocalVariable(name: "s", scope: !8032, file: !1086, line: 181, type: !3536)
!8036 = !DILocation(line: 180, column: 5, scope: !8032)
!8037 = !DILocation(line: 183, column: 9, scope: !8032)
!8038 = !DILocation(line: 0, scope: !8032)
!8039 = !DILocation(line: 185, column: 11, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8032, file: !1086, line: 185, column: 9)
!8041 = !DILocation(line: 185, column: 9, scope: !8032)
!8042 = !DILocation(line: 186, column: 13, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8040, file: !1086, line: 185, column: 34)
!8044 = !DILocation(line: 190, column: 9, scope: !8032)
!8045 = !DILocation(line: 191, column: 29, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8047, file: !1086, line: 190, column: 34)
!8047 = distinct !DILexicalBlock(scope: !8032, file: !1086, line: 190, column: 9)
!8048 = !DILocation(line: 191, column: 9, scope: !8046)
!8049 = !DILocation(line: 194, column: 9, scope: !8032)
!8050 = !DILocation(line: 195, column: 9, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !1086, line: 194, column: 34)
!8052 = distinct !DILexicalBlock(scope: !8032, file: !1086, line: 194, column: 9)
!8053 = !DILocation(line: 196, column: 5, scope: !8051)
!8054 = !DILocation(line: 200, column: 1, scope: !8032)
!8055 = distinct !DISubprogram(name: "cache_enable", scope: !1086, file: !1086, line: 105, type: !8056, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !8058)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{!640, !6278}
!8058 = !{!8059, !8060, !8061}
!8059 = !DILocalVariable(name: "cache_size", arg: 1, scope: !8055, file: !1086, line: 105, type: !6278)
!8060 = !DILocalVariable(name: "region", scope: !8055, file: !1086, line: 107, type: !1095)
!8061 = !DILocalVariable(name: "region_number", scope: !8055, file: !1086, line: 107, type: !1095)
!8062 = !DILocation(line: 0, scope: !8055)
!8063 = !DILocation(line: 114, column: 5, scope: !8055)
!8064 = !DILocation(line: 117, column: 5, scope: !8055)
!8065 = !DILocation(line: 119, column: 9, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8067, file: !1086, line: 118, column: 73)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !1086, line: 118, column: 5)
!8068 = distinct !DILexicalBlock(scope: !8055, file: !1086, line: 118, column: 5)
!8069 = !DILocation(line: 120, column: 9, scope: !8066)
!8070 = !DILocation(line: 122, column: 5, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8055, file: !1086, line: 122, column: 5)
!8072 = !DILocation(line: 123, column: 9, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !1086, line: 122, column: 53)
!8074 = distinct !DILexicalBlock(scope: !8071, file: !1086, line: 122, column: 5)
!8075 = !DILocation(line: 122, column: 49, scope: !8074)
!8076 = !DILocation(line: 122, column: 19, scope: !8074)
!8077 = distinct !{!8077, !8070, !8078}
!8078 = !DILocation(line: 124, column: 5, scope: !8071)
!8079 = !DILocation(line: 125, column: 5, scope: !8055)
!8080 = !DILocation(line: 127, column: 1, scope: !8055)
!8081 = distinct !DISubprogram(name: "_close", scope: !1107, file: !1107, line: 11, type: !1001, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !8082)
!8082 = !{!8083}
!8083 = !DILocalVariable(name: "file", arg: 1, scope: !8081, file: !1107, line: 11, type: !53)
!8084 = !DILocation(line: 0, scope: !8081)
!8085 = !DILocation(line: 13, column: 5, scope: !8081)
!8086 = distinct !DISubprogram(name: "_fstat", scope: !1107, file: !1107, line: 16, type: !8087, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !8131)
!8087 = !DISubroutineType(types: !8088)
!8088 = !{!53, !53, !8089}
!8089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8090, size: 32)
!8090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !8091, line: 27, size: 704, elements: !8092)
!8091 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!8092 = !{!8093, !8096, !8099, !8102, !8105, !8108, !8111, !8112, !8115, !8121, !8122, !8123, !8126, !8129}
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !8090, file: !8091, line: 29, baseType: !8094, size: 16)
!8094 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !1111, line: 161, baseType: !8095)
!8095 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !1149, line: 56, baseType: !1126)
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !8090, file: !8091, line: 30, baseType: !8097, size: 16, offset: 16)
!8097 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !1111, line: 139, baseType: !8098)
!8098 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !1149, line: 75, baseType: !435)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !8090, file: !8091, line: 31, baseType: !8100, size: 32, offset: 32)
!8100 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !1111, line: 189, baseType: !8101)
!8101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !1149, line: 90, baseType: !137)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !8090, file: !8091, line: 32, baseType: !8103, size: 16, offset: 64)
!8103 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !1111, line: 194, baseType: !8104)
!8104 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !1149, line: 209, baseType: !435)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !8090, file: !8091, line: 33, baseType: !8106, size: 16, offset: 80)
!8106 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !1111, line: 165, baseType: !8107)
!8107 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !1149, line: 60, baseType: !435)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !8090, file: !8091, line: 34, baseType: !8109, size: 16, offset: 96)
!8109 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !1111, line: 169, baseType: !8110)
!8110 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !1149, line: 63, baseType: !435)
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !8090, file: !8091, line: 35, baseType: !8094, size: 16, offset: 112)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !8090, file: !8091, line: 36, baseType: !8113, size: 32, offset: 128)
!8113 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1111, line: 157, baseType: !8114)
!8114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1149, line: 102, baseType: !1166)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !8090, file: !8091, line: 42, baseType: !8116, size: 128, offset: 192)
!8116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !8117, line: 47, size: 128, elements: !8118)
!8117 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!8118 = !{!8119, !8120}
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !8116, file: !8117, line: 48, baseType: !8005, size: 64)
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !8116, file: !8117, line: 49, baseType: !304, size: 32, offset: 64)
!8121 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !8090, file: !8091, line: 43, baseType: !8116, size: 128, offset: 320)
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !8090, file: !8091, line: 44, baseType: !8116, size: 128, offset: 448)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !8090, file: !8091, line: 45, baseType: !8124, size: 32, offset: 576)
!8124 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !1111, line: 102, baseType: !8125)
!8125 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !1149, line: 34, baseType: !304)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !8090, file: !8091, line: 46, baseType: !8127, size: 32, offset: 608)
!8127 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !1111, line: 97, baseType: !8128)
!8128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !1149, line: 30, baseType: !304)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !8090, file: !8091, line: 48, baseType: !8130, size: 64, offset: 640)
!8130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 64, elements: !446)
!8131 = !{!8132, !8133}
!8132 = !DILocalVariable(name: "file", arg: 1, scope: !8086, file: !1107, line: 16, type: !53)
!8133 = !DILocalVariable(name: "st", arg: 2, scope: !8086, file: !1107, line: 16, type: !8089)
!8134 = !DILocation(line: 0, scope: !8086)
!8135 = !DILocation(line: 18, column: 5, scope: !8086)
!8136 = distinct !DISubprogram(name: "_isatty", scope: !1107, file: !1107, line: 22, type: !1001, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !8137)
!8137 = !{!8138}
!8138 = !DILocalVariable(name: "file", arg: 1, scope: !8136, file: !1107, line: 22, type: !53)
!8139 = !DILocation(line: 0, scope: !8136)
!8140 = !DILocation(line: 24, column: 5, scope: !8136)
!8141 = distinct !DISubprogram(name: "_lseek", scope: !1107, file: !1107, line: 27, type: !8142, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !8144)
!8142 = !DISubroutineType(types: !8143)
!8143 = !{!53, !53, !53, !53}
!8144 = !{!8145, !8146, !8147}
!8145 = !DILocalVariable(name: "file", arg: 1, scope: !8141, file: !1107, line: 27, type: !53)
!8146 = !DILocalVariable(name: "ptr", arg: 2, scope: !8141, file: !1107, line: 27, type: !53)
!8147 = !DILocalVariable(name: "dir", arg: 3, scope: !8141, file: !1107, line: 27, type: !53)
!8148 = !DILocation(line: 0, scope: !8141)
!8149 = !DILocation(line: 29, column: 5, scope: !8141)
!8150 = distinct !DISubprogram(name: "_open", scope: !1107, file: !1107, line: 32, type: !8151, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !8153)
!8151 = !DISubroutineType(types: !8152)
!8152 = !{!53, !444, !53, !53}
!8153 = !{!8154, !8155, !8156}
!8154 = !DILocalVariable(name: "name", arg: 1, scope: !8150, file: !1107, line: 32, type: !444)
!8155 = !DILocalVariable(name: "flags", arg: 2, scope: !8150, file: !1107, line: 32, type: !53)
!8156 = !DILocalVariable(name: "mode", arg: 3, scope: !8150, file: !1107, line: 32, type: !53)
!8157 = !DILocation(line: 0, scope: !8150)
!8158 = !DILocation(line: 34, column: 5, scope: !8150)
!8159 = distinct !DISubprogram(name: "_read", scope: !1107, file: !1107, line: 37, type: !8160, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !8162)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{!53, !53, !331, !53}
!8162 = !{!8163, !8164, !8165}
!8163 = !DILocalVariable(name: "file", arg: 1, scope: !8159, file: !1107, line: 37, type: !53)
!8164 = !DILocalVariable(name: "ptr", arg: 2, scope: !8159, file: !1107, line: 37, type: !331)
!8165 = !DILocalVariable(name: "len", arg: 3, scope: !8159, file: !1107, line: 37, type: !53)
!8166 = !DILocation(line: 0, scope: !8159)
!8167 = !DILocation(line: 39, column: 5, scope: !8159)
!8168 = distinct !DISubprogram(name: "_write", scope: !1107, file: !1107, line: 52, type: !8160, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !8169)
!8169 = !{!8170, !8171, !8172, !8173}
!8170 = !DILocalVariable(name: "file", arg: 1, scope: !8168, file: !1107, line: 52, type: !53)
!8171 = !DILocalVariable(name: "ptr", arg: 2, scope: !8168, file: !1107, line: 52, type: !331)
!8172 = !DILocalVariable(name: "len", arg: 3, scope: !8168, file: !1107, line: 52, type: !53)
!8173 = !DILocalVariable(name: "i", scope: !8168, file: !1107, line: 54, type: !53)
!8174 = !DILocation(line: 0, scope: !8168)
!8175 = !DILocation(line: 56, column: 19, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !1107, line: 56, column: 5)
!8177 = distinct !DILexicalBlock(scope: !8168, file: !1107, line: 56, column: 5)
!8178 = !DILocation(line: 56, column: 5, scope: !8177)
!8179 = !DILocation(line: 57, column: 26, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8176, file: !1107, line: 56, column: 31)
!8181 = !DILocation(line: 57, column: 22, scope: !8180)
!8182 = !DILocation(line: 57, column: 9, scope: !8180)
!8183 = !DILocation(line: 56, column: 27, scope: !8176)
!8184 = distinct !{!8184, !8178, !8185}
!8185 = !DILocation(line: 58, column: 5, scope: !8177)
!8186 = !DILocation(line: 60, column: 5, scope: !8168)
!8187 = !DILocation(line: 0, scope: !1106)
!8188 = !DILocation(line: 71, column: 5, scope: !1106)
!8189 = !{i64 1110}
!8190 = !DILocation(line: 73, column: 14, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !1106, file: !1107, line: 73, column: 9)
!8192 = !DILocation(line: 73, column: 11, scope: !8191)
!8193 = !DILocation(line: 73, column: 9, scope: !1106)
!8194 = !DILocation(line: 79, column: 32, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !1106, file: !1107, line: 79, column: 9)
!8196 = !DILocation(line: 79, column: 15, scope: !8195)
!8197 = !DILocation(line: 90, column: 1, scope: !1106)
!8198 = !DILocation(line: 79, column: 9, scope: !1106)
!8199 = distinct !DISubprogram(name: "_exit", scope: !1107, file: !1107, line: 92, type: !1249, scopeLine: 93, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !8200)
!8200 = !{!8201}
!8201 = !DILocalVariable(name: "__status", arg: 1, scope: !8199, file: !1107, line: 92, type: !53)
!8202 = !DILocation(line: 0, scope: !8199)
!8203 = !DILocation(line: 94, column: 5, scope: !8199)
!8204 = !DILocation(line: 95, column: 5, scope: !8199)
!8205 = distinct !{!8205, !8204, !8206}
!8206 = !DILocation(line: 97, column: 5, scope: !8199)
!8207 = distinct !DISubprogram(name: "_kill", scope: !1107, file: !1107, line: 101, type: !8208, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !8210)
!8208 = !DISubroutineType(types: !8209)
!8209 = !{!53, !53, !53}
!8210 = !{!8211, !8212}
!8211 = !DILocalVariable(name: "pid", arg: 1, scope: !8207, file: !1107, line: 101, type: !53)
!8212 = !DILocalVariable(name: "sig", arg: 2, scope: !8207, file: !1107, line: 101, type: !53)
!8213 = !DILocation(line: 0, scope: !8207)
!8214 = !DILocation(line: 103, column: 5, scope: !8207)
!8215 = !DILocation(line: 104, column: 5, scope: !8207)
!8216 = distinct !DISubprogram(name: "_getpid", scope: !1107, file: !1107, line: 108, type: !8217, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1297, retainedNodes: !2135)
!8217 = !DISubroutineType(types: !8218)
!8218 = !{!8219}
!8219 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !1111, line: 174, baseType: !8220)
!8220 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !1149, line: 52, baseType: !53)
!8221 = !DILocation(line: 110, column: 5, scope: !8216)
!8222 = !DILocation(line: 111, column: 5, scope: !8216)
!8223 = distinct !DISubprogram(name: "gpio_mode_init", scope: !2082, file: !2082, line: 93, type: !181, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2081, retainedNodes: !8224)
!8224 = !{!8225, !8226}
!8225 = !DILocalVariable(name: "i", scope: !8223, file: !2082, line: 95, type: !136)
!8226 = !DILocalVariable(name: "mode_temp", scope: !8223, file: !2082, line: 98, type: !8227)
!8227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 320, elements: !8228)
!8228 = !{!8229}
!8229 = !DISubrange(count: 10)
!8230 = !DILocation(line: 98, column: 14, scope: !8223)
!8231 = !DILocation(line: 0, scope: !8223)
!8232 = !DILocation(line: 100, column: 5, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8223, file: !2082, line: 100, column: 5)
!8234 = !DILocation(line: 101, column: 9, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8236, file: !2082, line: 100, column: 50)
!8236 = distinct !DILexicalBlock(scope: !8233, file: !2082, line: 100, column: 5)
!8237 = !DILocation(line: 100, column: 46, scope: !8236)
!8238 = !DILocation(line: 100, column: 19, scope: !8236)
!8239 = distinct !{!8239, !8232, !8240}
!8240 = !DILocation(line: 103, column: 5, scope: !8233)
!8241 = !DILocation(line: 106, column: 1, scope: !8223)
!8242 = distinct !DISubprogram(name: "gpio_oe_init", scope: !2082, file: !2082, line: 114, type: !181, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2081, retainedNodes: !8243)
!8243 = !{!8244, !8245}
!8244 = !DILocalVariable(name: "i", scope: !8242, file: !2082, line: 116, type: !136)
!8245 = !DILocalVariable(name: "oe_temp", scope: !8242, file: !2082, line: 119, type: !8246)
!8246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 96, elements: !1159)
!8247 = !DILocation(line: 0, scope: !8242)
!8248 = !DILocation(line: 122, column: 9, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !2082, line: 121, column: 48)
!8250 = distinct !DILexicalBlock(scope: !8251, file: !2082, line: 121, column: 5)
!8251 = distinct !DILexicalBlock(scope: !8242, file: !2082, line: 121, column: 5)
!8252 = !DILocation(line: 125, column: 1, scope: !8242)
!8253 = distinct !DISubprogram(name: "gpio_ies_init", scope: !2082, file: !2082, line: 133, type: !181, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2081, retainedNodes: !8254)
!8254 = !{!8255, !8256}
!8255 = !DILocalVariable(name: "i", scope: !8253, file: !2082, line: 135, type: !136)
!8256 = !DILocalVariable(name: "ies_temp", scope: !8253, file: !2082, line: 138, type: !8246)
!8257 = !DILocation(line: 0, scope: !8253)
!8258 = !DILocation(line: 141, column: 9, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !2082, line: 140, column: 49)
!8260 = distinct !DILexicalBlock(scope: !8261, file: !2082, line: 140, column: 5)
!8261 = distinct !DILexicalBlock(scope: !8253, file: !2082, line: 140, column: 5)
!8262 = !DILocation(line: 145, column: 33, scope: !8253)
!8263 = !DILocation(line: 146, column: 33, scope: !8253)
!8264 = !DILocation(line: 147, column: 33, scope: !8253)
!8265 = !DILocation(line: 150, column: 33, scope: !8253)
!8266 = !DILocation(line: 151, column: 33, scope: !8253)
!8267 = !DILocation(line: 152, column: 33, scope: !8253)
!8268 = !DILocation(line: 155, column: 35, scope: !8253)
!8269 = !DILocation(line: 156, column: 35, scope: !8253)
!8270 = !DILocation(line: 157, column: 35, scope: !8253)
!8271 = !DILocation(line: 160, column: 35, scope: !8253)
!8272 = !DILocation(line: 161, column: 35, scope: !8253)
!8273 = !DILocation(line: 162, column: 35, scope: !8253)
!8274 = !DILocation(line: 165, column: 35, scope: !8253)
!8275 = !DILocation(line: 166, column: 35, scope: !8253)
!8276 = !DILocation(line: 167, column: 35, scope: !8253)
!8277 = !DILocation(line: 170, column: 35, scope: !8253)
!8278 = !DILocation(line: 171, column: 35, scope: !8253)
!8279 = !DILocation(line: 172, column: 35, scope: !8253)
!8280 = !DILocation(line: 174, column: 1, scope: !8253)
!8281 = distinct !DISubprogram(name: "gpio_pull_up_init", scope: !2082, file: !2082, line: 182, type: !181, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2081, retainedNodes: !8282)
!8282 = !{!8283, !8284}
!8283 = !DILocalVariable(name: "i", scope: !8281, file: !2082, line: 184, type: !136)
!8284 = !DILocalVariable(name: "pull_up_temp", scope: !8281, file: !2082, line: 187, type: !8246)
!8285 = !DILocation(line: 0, scope: !8281)
!8286 = !DILocation(line: 190, column: 9, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8288, file: !2082, line: 189, column: 53)
!8288 = distinct !DILexicalBlock(scope: !8289, file: !2082, line: 189, column: 5)
!8289 = distinct !DILexicalBlock(scope: !8281, file: !2082, line: 189, column: 5)
!8290 = !DILocation(line: 194, column: 33, scope: !8281)
!8291 = !DILocation(line: 202, column: 33, scope: !8281)
!8292 = !DILocation(line: 210, column: 35, scope: !8281)
!8293 = !DILocation(line: 218, column: 35, scope: !8281)
!8294 = !DILocation(line: 226, column: 35, scope: !8281)
!8295 = !DILocation(line: 234, column: 35, scope: !8281)
!8296 = !DILocation(line: 241, column: 1, scope: !8281)
!8297 = distinct !DISubprogram(name: "gpio_pull_down_init", scope: !2082, file: !2082, line: 250, type: !181, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2081, retainedNodes: !8298)
!8298 = !{!8299, !8300}
!8299 = !DILocalVariable(name: "i", scope: !8297, file: !2082, line: 252, type: !136)
!8300 = !DILocalVariable(name: "pull_down_temp", scope: !8297, file: !2082, line: 255, type: !8246)
!8301 = !DILocation(line: 0, scope: !8297)
!8302 = !DILocation(line: 258, column: 9, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !2082, line: 257, column: 55)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !2082, line: 257, column: 5)
!8305 = distinct !DILexicalBlock(scope: !8297, file: !2082, line: 257, column: 5)
!8306 = !DILocation(line: 261, column: 1, scope: !8297)
!8307 = distinct !DISubprogram(name: "gpio_output_init", scope: !2082, file: !2082, line: 269, type: !181, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2081, retainedNodes: !8308)
!8308 = !{!8309, !8310}
!8309 = !DILocalVariable(name: "i", scope: !8307, file: !2082, line: 271, type: !136)
!8310 = !DILocalVariable(name: "output_temp", scope: !8307, file: !2082, line: 274, type: !8246)
!8311 = !DILocation(line: 0, scope: !8307)
!8312 = !DILocation(line: 277, column: 9, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8314, file: !2082, line: 276, column: 52)
!8314 = distinct !DILexicalBlock(scope: !8315, file: !2082, line: 276, column: 5)
!8315 = distinct !DILexicalBlock(scope: !8307, file: !2082, line: 276, column: 5)
!8316 = !DILocation(line: 281, column: 1, scope: !8307)
!8317 = distinct !DISubprogram(name: "bsp_ept_gpio_set_control_by_cm4", scope: !2082, file: !2082, line: 289, type: !181, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2081, retainedNodes: !2135)
!8318 = !DILocation(line: 292, column: 39, scope: !8317)
!8319 = !DILocation(line: 293, column: 39, scope: !8317)
!8320 = !DILocation(line: 294, column: 39, scope: !8317)
!8321 = !DILocation(line: 295, column: 1, scope: !8317)
!8322 = distinct !DISubprogram(name: "bsp_ept_gpio_setting_init", scope: !2082, file: !2082, line: 302, type: !181, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2081, retainedNodes: !2135)
!8323 = !DILocation(line: 304, column: 5, scope: !8322)
!8324 = !DILocation(line: 305, column: 5, scope: !8322)
!8325 = !DILocation(line: 306, column: 5, scope: !8322)
!8326 = !DILocation(line: 307, column: 5, scope: !8322)
!8327 = !DILocation(line: 308, column: 5, scope: !8322)
!8328 = !DILocation(line: 309, column: 5, scope: !8322)
!8329 = !DILocation(line: 310, column: 1, scope: !8322)
!8330 = distinct !DISubprogram(name: "xTaskGenericCreate", scope: !1309, file: !1309, line: 547, type: !8331, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8349)
!8331 = !DISubroutineType(types: !8332)
!8332 = !{!1337, !8333, !443, !8335, !8336, !1332, !8337, !8339, !8340}
!8333 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskFunction_t", file: !8334, line: 77, baseType: !752)
!8334 = !DIFile(filename: "../../../../..//kernel/rtos/FreeRTOS/Source/include/projdefs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/apps/minicli/GCC")
!8335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!8336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !161)
!8337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8338)
!8338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!8339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1334)
!8340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8341)
!8341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8342, size: 32)
!8342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8343)
!8343 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoryRegion_t", file: !1317, line: 148, baseType: !8344)
!8344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMEMORY_REGION", file: !1317, line: 143, size: 96, elements: !8345)
!8345 = !{!8346, !8347, !8348}
!8346 = !DIDerivedType(tag: DW_TAG_member, name: "pvBaseAddress", scope: !8344, file: !1317, line: 145, baseType: !161, size: 32)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "ulLengthInBytes", scope: !8344, file: !1317, line: 146, baseType: !136, size: 32, offset: 32)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "ulParameters", scope: !8344, file: !1317, line: 147, baseType: !136, size: 32, offset: 64)
!8349 = !{!8350, !8351, !8352, !8353, !8354, !8355, !8356, !8357, !8358, !8359, !8360}
!8350 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !8330, file: !1309, line: 547, type: !8333)
!8351 = !DILocalVariable(name: "pcName", arg: 2, scope: !8330, file: !1309, line: 547, type: !443)
!8352 = !DILocalVariable(name: "usStackDepth", arg: 3, scope: !8330, file: !1309, line: 547, type: !8335)
!8353 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !8330, file: !1309, line: 547, type: !8336)
!8354 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !8330, file: !1309, line: 547, type: !1332)
!8355 = !DILocalVariable(name: "pxCreatedTask", arg: 6, scope: !8330, file: !1309, line: 547, type: !8337)
!8356 = !DILocalVariable(name: "puxStackBuffer", arg: 7, scope: !8330, file: !1309, line: 547, type: !8339)
!8357 = !DILocalVariable(name: "xRegions", arg: 8, scope: !8330, file: !1309, line: 547, type: !8340)
!8358 = !DILocalVariable(name: "xReturn", scope: !8330, file: !1309, line: 549, type: !1337)
!8359 = !DILocalVariable(name: "pxNewTCB", scope: !8330, file: !1309, line: 550, type: !1338)
!8360 = !DILocalVariable(name: "pxTopOfStack", scope: !8330, file: !1309, line: 551, type: !1334)
!8361 = !DILocation(line: 0, scope: !8330)
!8362 = !DILocation(line: 553, column: 2, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8330, file: !1309, line: 553, column: 2)
!8364 = !DILocation(line: 553, column: 2, scope: !8330)
!8365 = !DILocation(line: 553, column: 2, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8363, file: !1309, line: 553, column: 2)
!8367 = !DILocation(line: 554, column: 2, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8330, file: !1309, line: 554, column: 2)
!8369 = !DILocation(line: 554, column: 2, scope: !8330)
!8370 = !DILocation(line: 554, column: 2, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8368, file: !1309, line: 554, column: 2)
!8372 = !DILocation(line: 558, column: 13, scope: !8330)
!8373 = !DILocation(line: 560, column: 15, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8330, file: !1309, line: 560, column: 6)
!8375 = !DILocation(line: 560, column: 6, scope: !8330)
!8376 = !DILocation(line: 596, column: 29, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8378, file: !1309, line: 595, column: 3)
!8378 = distinct !DILexicalBlock(scope: !8374, file: !1309, line: 561, column: 2)
!8379 = !DILocation(line: 596, column: 41, scope: !8377)
!8380 = !DILocation(line: 596, column: 54, scope: !8377)
!8381 = !DILocation(line: 596, column: 37, scope: !8377)
!8382 = !DILocation(line: 597, column: 41, scope: !8377)
!8383 = !DILocation(line: 597, column: 82, scope: !8377)
!8384 = !DILocation(line: 597, column: 19, scope: !8377)
!8385 = !DILocation(line: 617, column: 3, scope: !8378)
!8386 = !DILocation(line: 629, column: 29, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8378, file: !1309, line: 628, column: 3)
!8388 = !DILocation(line: 629, column: 14, scope: !8387)
!8389 = !DILocation(line: 629, column: 27, scope: !8387)
!8390 = !DILocation(line: 633, column: 32, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8378, file: !1309, line: 633, column: 7)
!8392 = !DILocation(line: 633, column: 7, scope: !8378)
!8393 = !DILocation(line: 638, column: 19, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8391, file: !1309, line: 634, column: 3)
!8395 = !DILocation(line: 639, column: 3, scope: !8394)
!8396 = !DILocation(line: 647, column: 3, scope: !8378)
!8397 = !DILocation(line: 649, column: 26, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8378, file: !1309, line: 648, column: 3)
!8399 = !DILocation(line: 650, column: 8, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8398, file: !1309, line: 650, column: 8)
!8401 = !DILocation(line: 650, column: 21, scope: !8400)
!8402 = !DILocation(line: 650, column: 8, scope: !8398)
!8403 = !DILocation(line: 654, column: 18, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8400, file: !1309, line: 651, column: 4)
!8405 = !DILocation(line: 656, column: 9, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8404, file: !1309, line: 656, column: 9)
!8407 = !DILocation(line: 656, column: 32, scope: !8406)
!8408 = !DILocation(line: 656, column: 9, scope: !8404)
!8409 = !DILocation(line: 661, column: 6, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8406, file: !1309, line: 657, column: 5)
!8411 = !DILocation(line: 662, column: 5, scope: !8410)
!8412 = !DILocation(line: 673, column: 9, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !1309, line: 673, column: 9)
!8414 = distinct !DILexicalBlock(scope: !8400, file: !1309, line: 669, column: 4)
!8415 = !DILocation(line: 673, column: 27, scope: !8413)
!8416 = !DILocation(line: 673, column: 9, scope: !8414)
!8417 = !DILocation(line: 675, column: 10, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !1309, line: 675, column: 10)
!8419 = distinct !DILexicalBlock(scope: !8413, file: !1309, line: 674, column: 5)
!8420 = !DILocation(line: 675, column: 24, scope: !8418)
!8421 = !DILocation(line: 675, column: 35, scope: !8418)
!8422 = !DILocation(line: 675, column: 10, scope: !8419)
!8423 = !DILocation(line: 677, column: 20, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8418, file: !1309, line: 676, column: 6)
!8425 = !DILocation(line: 678, column: 6, scope: !8424)
!8426 = !DILocation(line: 690, column: 16, scope: !8398)
!8427 = !DILocation(line: 695, column: 15, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8398, file: !1309, line: 693, column: 4)
!8429 = !DILocation(line: 695, column: 27, scope: !8428)
!8430 = !DILocation(line: 700, column: 4, scope: !8398)
!8431 = !DILocation(line: 705, column: 3, scope: !8378)
!8432 = !DILocation(line: 715, column: 7, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !1309, line: 715, column: 7)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !1309, line: 714, column: 2)
!8435 = distinct !DILexicalBlock(scope: !8330, file: !1309, line: 713, column: 6)
!8436 = !DILocation(line: 715, column: 25, scope: !8433)
!8437 = !DILocation(line: 715, column: 7, scope: !8434)
!8438 = !DILocation(line: 719, column: 8, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8440, file: !1309, line: 719, column: 8)
!8440 = distinct !DILexicalBlock(scope: !8433, file: !1309, line: 716, column: 3)
!8441 = !DILocation(line: 719, column: 22, scope: !8439)
!8442 = !DILocation(line: 719, column: 33, scope: !8439)
!8443 = !DILocation(line: 719, column: 8, scope: !8440)
!8444 = !DILocation(line: 721, column: 5, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !1309, line: 721, column: 5)
!8446 = distinct !DILexicalBlock(scope: !8439, file: !1309, line: 720, column: 4)
!8447 = !{i64 2148466224}
!8448 = !{i64 2148466264}
!8449 = !DILocation(line: 722, column: 4, scope: !8446)
!8450 = !DILocation(line: 734, column: 2, scope: !8330)
!8451 = distinct !DISubprogram(name: "prvAllocateTCBAndStack", scope: !1309, file: !1309, line: 3021, type: !8452, scopeLine: 3022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8454)
!8452 = !DISubroutineType(types: !8453)
!8453 = !{!1338, !8335, !8339}
!8454 = !{!8455, !8456, !8457, !8458}
!8455 = !DILocalVariable(name: "usStackDepth", arg: 1, scope: !8451, file: !1309, line: 3021, type: !8335)
!8456 = !DILocalVariable(name: "puxStackBuffer", arg: 2, scope: !8451, file: !1309, line: 3021, type: !8339)
!8457 = !DILocalVariable(name: "pxNewTCB", scope: !8451, file: !1309, line: 3023, type: !1338)
!8458 = !DILocalVariable(name: "pxStack", scope: !8459, file: !1309, line: 3051, type: !1334)
!8459 = distinct !DILexicalBlock(scope: !8451, file: !1309, line: 3050, column: 2)
!8460 = !DILocation(line: 0, scope: !8451)
!8461 = !DILocation(line: 3054, column: 31, scope: !8459)
!8462 = !DILocation(line: 0, scope: !8459)
!8463 = !DILocation(line: 3056, column: 15, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8459, file: !1309, line: 3056, column: 7)
!8465 = !DILocation(line: 3056, column: 7, scope: !8459)
!8466 = !DILocation(line: 3060, column: 27, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8464, file: !1309, line: 3057, column: 3)
!8468 = !DILocation(line: 3062, column: 17, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8467, file: !1309, line: 3062, column: 8)
!8470 = !DILocation(line: 3062, column: 8, scope: !8467)
!8471 = !DILocation(line: 3071, column: 5, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !8469, file: !1309, line: 3068, column: 4)
!8473 = !DILocation(line: 3065, column: 15, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8469, file: !1309, line: 3063, column: 4)
!8475 = !DILocation(line: 3065, column: 23, scope: !8474)
!8476 = !DILocation(line: 3060, column: 15, scope: !8467)
!8477 = !DILocation(line: 3087, column: 68, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8479, file: !1309, line: 3085, column: 3)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !1309, line: 3082, column: 2)
!8480 = distinct !DILexicalBlock(scope: !8451, file: !1309, line: 3081, column: 6)
!8481 = !DILocation(line: 3087, column: 92, scope: !8478)
!8482 = !DILocation(line: 3087, column: 13, scope: !8478)
!8483 = !DILocation(line: 3090, column: 2, scope: !8479)
!8484 = !DILocation(line: 3092, column: 2, scope: !8451)
!8485 = distinct !DISubprogram(name: "prvInitialiseTCBVariables", scope: !1309, file: !1309, line: 2802, type: !8486, scopeLine: 2803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8489)
!8486 = !DISubroutineType(types: !8487)
!8487 = !{null, !8488, !443, !1332, !8340, !8335}
!8488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!8489 = !{!8490, !8491, !8492, !8493, !8494, !8495}
!8490 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !8485, file: !1309, line: 2802, type: !8488)
!8491 = !DILocalVariable(name: "pcName", arg: 2, scope: !8485, file: !1309, line: 2802, type: !443)
!8492 = !DILocalVariable(name: "uxPriority", arg: 3, scope: !8485, file: !1309, line: 2802, type: !1332)
!8493 = !DILocalVariable(name: "xRegions", arg: 4, scope: !8485, file: !1309, line: 2802, type: !8340)
!8494 = !DILocalVariable(name: "usStackDepth", arg: 5, scope: !8485, file: !1309, line: 2802, type: !8335)
!8495 = !DILocalVariable(name: "x", scope: !8485, file: !1309, line: 2804, type: !1332)
!8496 = !DILocation(line: 0, scope: !8485)
!8497 = !DILocation(line: 2807, column: 2, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8485, file: !1309, line: 2807, column: 2)
!8499 = !DILocation(line: 2809, column: 28, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8501, file: !1309, line: 2808, column: 2)
!8501 = distinct !DILexicalBlock(scope: !8498, file: !1309, line: 2807, column: 2)
!8502 = !DILocation(line: 2809, column: 3, scope: !8500)
!8503 = !DILocation(line: 2809, column: 26, scope: !8500)
!8504 = !DILocation(line: 2814, column: 7, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8500, file: !1309, line: 2814, column: 7)
!8506 = !DILocation(line: 2814, column: 19, scope: !8505)
!8507 = !DILocation(line: 2814, column: 7, scope: !8500)
!8508 = distinct !{!8508, !8497, !8509}
!8509 = !DILocation(line: 2822, column: 2, scope: !8498)
!8510 = !DILocation(line: 2826, column: 2, scope: !8485)
!8511 = !DILocation(line: 2826, column: 51, scope: !8485)
!8512 = !DILocation(line: 2830, column: 6, scope: !8485)
!8513 = !DILocation(line: 2839, column: 9, scope: !8485)
!8514 = !DILocation(line: 2839, column: 20, scope: !8485)
!8515 = !DILocation(line: 2842, column: 10, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8485, file: !1309, line: 2841, column: 2)
!8517 = !DILocation(line: 2842, column: 25, scope: !8516)
!8518 = !DILocation(line: 2843, column: 10, scope: !8516)
!8519 = !DILocation(line: 2843, column: 24, scope: !8516)
!8520 = !DILocation(line: 2847, column: 33, scope: !8485)
!8521 = !DILocation(line: 2847, column: 2, scope: !8485)
!8522 = !DILocation(line: 2848, column: 33, scope: !8485)
!8523 = !DILocation(line: 2848, column: 2, scope: !8485)
!8524 = !DILocation(line: 2852, column: 2, scope: !8485)
!8525 = !DILocation(line: 2855, column: 2, scope: !8485)
!8526 = !DILocation(line: 2856, column: 2, scope: !8485)
!8527 = !DILocation(line: 2889, column: 10, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8485, file: !1309, line: 2888, column: 2)
!8529 = !DILocation(line: 2889, column: 26, scope: !8528)
!8530 = !DILocation(line: 2890, column: 10, scope: !8528)
!8531 = !DILocation(line: 2890, column: 23, scope: !8528)
!8532 = !DILocation(line: 2900, column: 1, scope: !8485)
!8533 = distinct !DISubprogram(name: "prvInitialiseTaskLists", scope: !1309, file: !1309, line: 2918, type: !181, scopeLine: 2919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8534)
!8534 = !{!8535}
!8535 = !DILocalVariable(name: "uxPriority", scope: !8533, file: !1309, line: 2920, type: !1332)
!8536 = !DILocation(line: 0, scope: !8533)
!8537 = !DILocation(line: 2922, column: 2, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8533, file: !1309, line: 2922, column: 2)
!8539 = !DILocation(line: 2924, column: 23, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !1309, line: 2923, column: 2)
!8541 = distinct !DILexicalBlock(scope: !8538, file: !1309, line: 2922, column: 2)
!8542 = !DILocation(line: 2924, column: 3, scope: !8540)
!8543 = !DILocation(line: 2922, column: 101, scope: !8541)
!8544 = !DILocation(line: 2922, column: 51, scope: !8541)
!8545 = distinct !{!8545, !8537, !8546}
!8546 = !DILocation(line: 2925, column: 2, scope: !8538)
!8547 = !DILocation(line: 2927, column: 2, scope: !8533)
!8548 = !DILocation(line: 2928, column: 2, scope: !8533)
!8549 = !DILocation(line: 2929, column: 2, scope: !8533)
!8550 = !DILocation(line: 2933, column: 3, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8533, file: !1309, line: 2932, column: 2)
!8552 = !DILocation(line: 2939, column: 3, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8533, file: !1309, line: 2938, column: 2)
!8554 = !DILocation(line: 2945, column: 20, scope: !8533)
!8555 = !DILocation(line: 2946, column: 28, scope: !8533)
!8556 = !DILocation(line: 2947, column: 1, scope: !8533)
!8557 = distinct !DISubprogram(name: "vTaskDelete", scope: !1309, file: !1309, line: 740, type: !8558, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8560)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{null, !1336}
!8560 = !{!8561, !8562}
!8561 = !DILocalVariable(name: "xTaskToDelete", arg: 1, scope: !8557, file: !1309, line: 740, type: !1336)
!8562 = !DILocalVariable(name: "pxTCB", scope: !8557, file: !1309, line: 742, type: !1338)
!8563 = !DILocation(line: 0, scope: !8557)
!8564 = !DILocation(line: 744, column: 3, scope: !8557)
!8565 = !DILocation(line: 748, column: 12, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8557, file: !1309, line: 745, column: 3)
!8567 = !DILocation(line: 754, column: 32, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8566, file: !1309, line: 754, column: 8)
!8569 = !DILocation(line: 754, column: 8, scope: !8568)
!8570 = !DILocation(line: 754, column: 53, scope: !8568)
!8571 = !DILocation(line: 754, column: 8, scope: !8566)
!8572 = !DILocation(line: 756, column: 5, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !1309, line: 756, column: 5)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !1309, line: 756, column: 5)
!8575 = distinct !DILexicalBlock(scope: !8568, file: !1309, line: 755, column: 4)
!8576 = !DILocation(line: 756, column: 5, scope: !8574)
!8577 = !DILocation(line: 756, column: 5, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8573, file: !1309, line: 756, column: 5)
!8579 = !DILocation(line: 764, column: 8, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8566, file: !1309, line: 764, column: 8)
!8581 = !DILocation(line: 764, column: 62, scope: !8580)
!8582 = !DILocation(line: 764, column: 8, scope: !8566)
!8583 = !DILocation(line: 766, column: 14, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8580, file: !1309, line: 765, column: 4)
!8585 = !DILocation(line: 767, column: 4, scope: !8584)
!8586 = !DILocation(line: 773, column: 4, scope: !8566)
!8587 = !DILocation(line: 778, column: 4, scope: !8566)
!8588 = !DILocation(line: 782, column: 16, scope: !8566)
!8589 = !DILocation(line: 786, column: 3, scope: !8557)
!8590 = !DILocation(line: 790, column: 7, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8557, file: !1309, line: 790, column: 7)
!8592 = !DILocation(line: 790, column: 25, scope: !8591)
!8593 = !DILocation(line: 790, column: 7, scope: !8557)
!8594 = !DILocation(line: 792, column: 17, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8596, file: !1309, line: 792, column: 8)
!8596 = distinct !DILexicalBlock(scope: !8591, file: !1309, line: 791, column: 3)
!8597 = !DILocation(line: 792, column: 14, scope: !8595)
!8598 = !DILocation(line: 792, column: 8, scope: !8596)
!8599 = !DILocation(line: 794, column: 5, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8601, file: !1309, line: 794, column: 5)
!8601 = distinct !DILexicalBlock(scope: !8595, file: !1309, line: 793, column: 4)
!8602 = !DILocation(line: 794, column: 5, scope: !8601)
!8603 = !DILocation(line: 794, column: 5, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8600, file: !1309, line: 794, column: 5)
!8605 = !DILocation(line: 802, column: 5, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8601, file: !1309, line: 802, column: 5)
!8607 = !{i64 2148467631}
!8608 = !{i64 2148467671}
!8609 = !DILocation(line: 803, column: 4, scope: !8601)
!8610 = !DILocation(line: 808, column: 5, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8595, file: !1309, line: 805, column: 4)
!8612 = !DILocation(line: 810, column: 6, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8611, file: !1309, line: 809, column: 5)
!8614 = !DILocation(line: 812, column: 5, scope: !8611)
!8615 = !DILocation(line: 815, column: 2, scope: !8557)
!8616 = distinct !DISubprogram(name: "prvResetNextTaskUnblockTime", scope: !1309, file: !1309, line: 3267, type: !181, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8617)
!8617 = !{!8618}
!8618 = !DILocalVariable(name: "pxTCB", scope: !8616, file: !1309, line: 3269, type: !1338)
!8619 = !DILocation(line: 3271, column: 6, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8616, file: !1309, line: 3271, column: 6)
!8621 = !DILocation(line: 3271, column: 6, scope: !8616)
!8622 = !DILocation(line: 3286, column: 27, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8620, file: !1309, line: 3281, column: 2)
!8624 = !DILocation(line: 0, scope: !8616)
!8625 = !DILocation(line: 3287, column: 26, scope: !8623)
!8626 = !DILocation(line: 0, scope: !8620)
!8627 = !DILocation(line: 3289, column: 1, scope: !8616)
!8628 = distinct !DISubprogram(name: "vTaskDelayUntil", scope: !1309, file: !1309, line: 822, type: !8629, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8634)
!8629 = !DISubroutineType(types: !8630)
!8630 = !{null, !8631, !8633}
!8631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8632)
!8632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 32)
!8633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1352)
!8634 = !{!8635, !8636, !8637, !8638, !8639, !8640}
!8635 = !DILocalVariable(name: "pxPreviousWakeTime", arg: 1, scope: !8628, file: !1309, line: 822, type: !8631)
!8636 = !DILocalVariable(name: "xTimeIncrement", arg: 2, scope: !8628, file: !1309, line: 822, type: !8633)
!8637 = !DILocalVariable(name: "xTimeToWake", scope: !8628, file: !1309, line: 824, type: !1352)
!8638 = !DILocalVariable(name: "xAlreadyYielded", scope: !8628, file: !1309, line: 825, type: !1337)
!8639 = !DILocalVariable(name: "xShouldDelay", scope: !8628, file: !1309, line: 825, type: !1337)
!8640 = !DILocalVariable(name: "xConstTickCount", scope: !8641, file: !1309, line: 835, type: !8633)
!8641 = distinct !DILexicalBlock(scope: !8628, file: !1309, line: 832, column: 3)
!8642 = !DILocation(line: 0, scope: !8628)
!8643 = !DILocation(line: 827, column: 3, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8628, file: !1309, line: 827, column: 3)
!8645 = !DILocation(line: 827, column: 3, scope: !8628)
!8646 = !DILocation(line: 827, column: 3, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8644, file: !1309, line: 827, column: 3)
!8648 = !DILocation(line: 828, column: 3, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8628, file: !1309, line: 828, column: 3)
!8650 = !DILocation(line: 828, column: 3, scope: !8628)
!8651 = !DILocation(line: 828, column: 3, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8649, file: !1309, line: 828, column: 3)
!8653 = !DILocation(line: 829, column: 3, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8628, file: !1309, line: 829, column: 3)
!8655 = !DILocation(line: 829, column: 3, scope: !8628)
!8656 = !DILocation(line: 829, column: 3, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8654, file: !1309, line: 829, column: 3)
!8658 = !DILocation(line: 831, column: 3, scope: !8628)
!8659 = !DILocation(line: 835, column: 39, scope: !8641)
!8660 = !DILocation(line: 0, scope: !8641)
!8661 = !DILocation(line: 838, column: 18, scope: !8641)
!8662 = !DILocation(line: 838, column: 38, scope: !8641)
!8663 = !DILocation(line: 840, column: 24, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8641, file: !1309, line: 840, column: 8)
!8665 = !DILocation(line: 0, scope: !8664)
!8666 = !DILocation(line: 840, column: 8, scope: !8641)
!8667 = !DILocation(line: 847, column: 47, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8669, file: !1309, line: 847, column: 9)
!8669 = distinct !DILexicalBlock(scope: !8664, file: !1309, line: 841, column: 4)
!8670 = !DILocation(line: 861, column: 47, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8672, file: !1309, line: 861, column: 9)
!8672 = distinct !DILexicalBlock(scope: !8664, file: !1309, line: 857, column: 4)
!8673 = !DILocation(line: 872, column: 24, scope: !8641)
!8674 = !DILocation(line: 874, column: 8, scope: !8641)
!8675 = !DILocation(line: 880, column: 26, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8677, file: !1309, line: 880, column: 9)
!8677 = distinct !DILexicalBlock(scope: !8678, file: !1309, line: 875, column: 4)
!8678 = distinct !DILexicalBlock(scope: !8641, file: !1309, line: 874, column: 8)
!8679 = !DILocation(line: 880, column: 40, scope: !8676)
!8680 = !DILocation(line: 880, column: 9, scope: !8676)
!8681 = !DILocation(line: 880, column: 61, scope: !8676)
!8682 = !DILocation(line: 880, column: 9, scope: !8677)
!8683 = !DILocation(line: 885, column: 6, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8676, file: !1309, line: 881, column: 5)
!8685 = !DILocation(line: 886, column: 5, scope: !8684)
!8686 = !DILocation(line: 892, column: 5, scope: !8677)
!8687 = !DILocation(line: 893, column: 4, scope: !8677)
!8688 = !DILocation(line: 899, column: 21, scope: !8628)
!8689 = !DILocation(line: 903, column: 23, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8628, file: !1309, line: 903, column: 7)
!8691 = !DILocation(line: 903, column: 7, scope: !8628)
!8692 = !DILocation(line: 905, column: 4, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !1309, line: 905, column: 4)
!8694 = distinct !DILexicalBlock(scope: !8690, file: !1309, line: 904, column: 3)
!8695 = !{i64 2148468872}
!8696 = !{i64 2148468912}
!8697 = !DILocation(line: 906, column: 3, scope: !8694)
!8698 = !DILocation(line: 911, column: 2, scope: !8628)
!8699 = distinct !DISubprogram(name: "vTaskSuspendAll", scope: !1309, file: !1309, line: 1628, type: !181, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !2135)
!8700 = !DILocation(line: 1634, column: 2, scope: !8699)
!8701 = !DILocation(line: 1635, column: 1, scope: !8699)
!8702 = distinct !DISubprogram(name: "prvAddCurrentTaskToDelayedList", scope: !1309, file: !1309, line: 2991, type: !8703, scopeLine: 2992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8705)
!8703 = !DISubroutineType(types: !8704)
!8704 = !{null, !8633}
!8705 = !{!8706}
!8706 = !DILocalVariable(name: "xTimeToWake", arg: 1, scope: !8702, file: !1309, line: 2991, type: !8633)
!8707 = !DILocation(line: 0, scope: !8702)
!8708 = !DILocation(line: 2994, column: 2, scope: !8702)
!8709 = !DILocation(line: 2996, column: 20, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8702, file: !1309, line: 2996, column: 6)
!8711 = !DILocation(line: 2996, column: 18, scope: !8710)
!8712 = !DILocation(line: 2996, column: 6, scope: !8702)
!8713 = !DILocation(line: 2999, column: 16, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8710, file: !1309, line: 2997, column: 2)
!8715 = !DILocation(line: 2999, column: 46, scope: !8714)
!8716 = !DILocation(line: 2999, column: 60, scope: !8714)
!8717 = !DILocation(line: 2999, column: 3, scope: !8714)
!8718 = !DILocation(line: 3000, column: 2, scope: !8714)
!8719 = !DILocation(line: 3004, column: 16, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8710, file: !1309, line: 3002, column: 2)
!8721 = !DILocation(line: 3004, column: 38, scope: !8720)
!8722 = !DILocation(line: 3004, column: 52, scope: !8720)
!8723 = !DILocation(line: 3004, column: 3, scope: !8720)
!8724 = !DILocation(line: 3009, column: 21, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8720, file: !1309, line: 3009, column: 7)
!8726 = !DILocation(line: 3009, column: 19, scope: !8725)
!8727 = !DILocation(line: 3009, column: 7, scope: !8720)
!8728 = !DILocation(line: 3011, column: 25, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8725, file: !1309, line: 3010, column: 3)
!8730 = !DILocation(line: 3012, column: 3, scope: !8729)
!8731 = !DILocation(line: 3018, column: 1, scope: !8702)
!8732 = distinct !DISubprogram(name: "xTaskResumeAll", scope: !1309, file: !1309, line: 1666, type: !8733, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8735)
!8733 = !DISubroutineType(types: !8734)
!8734 = !{!1337}
!8735 = !{!8736, !8737}
!8736 = !DILocalVariable(name: "pxTCB", scope: !8732, file: !1309, line: 1668, type: !1338)
!8737 = !DILocalVariable(name: "xAlreadyYielded", scope: !8732, file: !1309, line: 1669, type: !1337)
!8738 = !DILocation(line: 0, scope: !8732)
!8739 = !DILocation(line: 1673, column: 2, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8732, file: !1309, line: 1673, column: 2)
!8741 = !DILocation(line: 1673, column: 2, scope: !8732)
!8742 = !DILocation(line: 1673, column: 2, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8740, file: !1309, line: 1673, column: 2)
!8744 = !DILocation(line: 1680, column: 2, scope: !8732)
!8745 = !DILocation(line: 1682, column: 3, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8732, file: !1309, line: 1681, column: 2)
!8747 = !DILocation(line: 1684, column: 7, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8746, file: !1309, line: 1684, column: 7)
!8749 = !DILocation(line: 1684, column: 28, scope: !8748)
!8750 = !DILocation(line: 1684, column: 7, scope: !8746)
!8751 = !DILocation(line: 1686, column: 8, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8753, file: !1309, line: 1686, column: 8)
!8753 = distinct !DILexicalBlock(scope: !8748, file: !1309, line: 1685, column: 3)
!8754 = !DILocation(line: 1686, column: 31, scope: !8752)
!8755 = !DILocation(line: 1686, column: 8, scope: !8753)
!8756 = !DILocation(line: 1690, column: 12, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8752, file: !1309, line: 1687, column: 4)
!8758 = !DILocation(line: 1690, column: 5, scope: !8757)
!8759 = !DILocation(line: 1692, column: 26, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8757, file: !1309, line: 1691, column: 5)
!8761 = !DILocation(line: 1693, column: 39, scope: !8760)
!8762 = !DILocation(line: 1693, column: 15, scope: !8760)
!8763 = !DILocation(line: 1694, column: 39, scope: !8760)
!8764 = !DILocation(line: 1694, column: 15, scope: !8760)
!8765 = !DILocation(line: 1695, column: 6, scope: !8760)
!8766 = !DILocation(line: 1699, column: 17, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8760, file: !1309, line: 1699, column: 10)
!8768 = !DILocation(line: 1699, column: 31, scope: !8767)
!8769 = !DILocation(line: 1699, column: 45, scope: !8767)
!8770 = !DILocation(line: 1699, column: 28, scope: !8767)
!8771 = !DILocation(line: 1699, column: 10, scope: !8760)
!8772 = !DILocation(line: 1701, column: 21, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8767, file: !1309, line: 1700, column: 6)
!8774 = !DILocation(line: 1702, column: 6, scope: !8773)
!8775 = distinct !{!8775, !8758, !8776}
!8776 = !DILocation(line: 1707, column: 5, scope: !8757)
!8777 = !DILocation(line: 1713, column: 9, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8757, file: !1309, line: 1713, column: 9)
!8779 = !DILocation(line: 1713, column: 23, scope: !8778)
!8780 = !DILocation(line: 1713, column: 9, scope: !8757)
!8781 = !DILocation(line: 1715, column: 13, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8778, file: !1309, line: 1714, column: 5)
!8783 = !DILocation(line: 1715, column: 27, scope: !8782)
!8784 = !DILocation(line: 1715, column: 6, scope: !8782)
!8785 = !DILocation(line: 1717, column: 11, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8787, file: !1309, line: 1717, column: 11)
!8787 = distinct !DILexicalBlock(scope: !8782, file: !1309, line: 1716, column: 6)
!8788 = !DILocation(line: 1717, column: 32, scope: !8786)
!8789 = !DILocation(line: 1717, column: 11, scope: !8787)
!8790 = !DILocation(line: 1719, column: 22, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8786, file: !1309, line: 1718, column: 7)
!8792 = !DILocation(line: 1720, column: 7, scope: !8791)
!8793 = !DILocation(line: 1725, column: 7, scope: !8787)
!8794 = distinct !{!8794, !8784, !8795}
!8795 = !DILocation(line: 1726, column: 6, scope: !8782)
!8796 = !DILocation(line: 1733, column: 9, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8757, file: !1309, line: 1733, column: 9)
!8798 = !DILocation(line: 1733, column: 23, scope: !8797)
!8799 = !DILocation(line: 1733, column: 9, scope: !8757)
!8800 = !DILocation(line: 1740, column: 6, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8802, file: !1309, line: 1740, column: 6)
!8802 = distinct !DILexicalBlock(scope: !8797, file: !1309, line: 1734, column: 5)
!8803 = !{i64 2148478178}
!8804 = !{i64 2148478218}
!8805 = !DILocation(line: 1741, column: 5, scope: !8802)
!8806 = !DILocation(line: 1753, column: 2, scope: !8732)
!8807 = !DILocation(line: 1755, column: 2, scope: !8732)
!8808 = distinct !DISubprogram(name: "xTaskIncrementTick", scope: !1309, file: !1309, line: 1934, type: !8733, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8809)
!8809 = !{!8810, !8811, !8812, !8813, !8817}
!8810 = !DILocalVariable(name: "pxTCB", scope: !8808, file: !1309, line: 1936, type: !1338)
!8811 = !DILocalVariable(name: "xItemValue", scope: !8808, file: !1309, line: 1937, type: !1352)
!8812 = !DILocalVariable(name: "xSwitchRequired", scope: !8808, file: !1309, line: 1938, type: !1337)
!8813 = !DILocalVariable(name: "xConstTickCount", scope: !8814, file: !1309, line: 1953, type: !8633)
!8814 = distinct !DILexicalBlock(scope: !8815, file: !1309, line: 1950, column: 3)
!8815 = distinct !DILexicalBlock(scope: !8816, file: !1309, line: 1945, column: 2)
!8816 = distinct !DILexicalBlock(scope: !8808, file: !1309, line: 1944, column: 6)
!8817 = !DILocalVariable(name: "pxTemp", scope: !8818, file: !1309, line: 1957, type: !1373)
!8818 = distinct !DILexicalBlock(scope: !8819, file: !1309, line: 1957, column: 5)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !1309, line: 1956, column: 4)
!8820 = distinct !DILexicalBlock(scope: !8814, file: !1309, line: 1955, column: 8)
!8821 = !DILocation(line: 0, scope: !8808)
!8822 = !DILocation(line: 1944, column: 6, scope: !8816)
!8823 = !DILocation(line: 1944, column: 27, scope: !8816)
!8824 = !DILocation(line: 1944, column: 6, scope: !8808)
!8825 = !DILocation(line: 1948, column: 3, scope: !8815)
!8826 = !DILocation(line: 1953, column: 39, scope: !8814)
!8827 = !DILocation(line: 0, scope: !8814)
!8828 = !DILocation(line: 1955, column: 24, scope: !8820)
!8829 = !DILocation(line: 1955, column: 8, scope: !8814)
!8830 = !DILocation(line: 1957, column: 5, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8818, file: !1309, line: 1957, column: 5)
!8832 = !DILocation(line: 1957, column: 5, scope: !8818)
!8833 = !DILocation(line: 1957, column: 5, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8831, file: !1309, line: 1957, column: 5)
!8835 = !DILocation(line: 0, scope: !8818)
!8836 = !DILocation(line: 1958, column: 4, scope: !8819)
!8837 = !DILocation(line: 1968, column: 27, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8814, file: !1309, line: 1968, column: 8)
!8839 = !DILocation(line: 1968, column: 24, scope: !8838)
!8840 = !DILocation(line: 1968, column: 8, scope: !8814)
!8841 = !DILocation(line: 1972, column: 10, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8843, file: !1309, line: 1972, column: 10)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !1309, line: 1971, column: 5)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !1309, line: 1970, column: 5)
!8845 = distinct !DILexicalBlock(scope: !8846, file: !1309, line: 1970, column: 5)
!8846 = distinct !DILexicalBlock(scope: !8838, file: !1309, line: 1969, column: 4)
!8847 = !DILocation(line: 1972, column: 10, scope: !8843)
!8848 = !DILocation(line: 1988, column: 27, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8842, file: !1309, line: 1983, column: 6)
!8850 = !DILocation(line: 1989, column: 20, scope: !8849)
!8851 = !DILocation(line: 1991, column: 27, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8849, file: !1309, line: 1991, column: 11)
!8853 = !DILocation(line: 1991, column: 11, scope: !8849)
!8854 = !DILocation(line: 2007, column: 16, scope: !8849)
!8855 = !DILocation(line: 2011, column: 11, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8849, file: !1309, line: 2011, column: 11)
!8857 = !DILocation(line: 2011, column: 65, scope: !8856)
!8858 = !DILocation(line: 2011, column: 11, scope: !8849)
!8859 = !DILocation(line: 2013, column: 17, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8856, file: !1309, line: 2012, column: 7)
!8861 = !DILocation(line: 2014, column: 7, scope: !8860)
!8862 = !DILocation(line: 2022, column: 7, scope: !8849)
!8863 = !DILocation(line: 2032, column: 19, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !1309, line: 2032, column: 12)
!8865 = distinct !DILexicalBlock(scope: !8849, file: !1309, line: 2027, column: 7)
!8866 = !DILocation(line: 2032, column: 33, scope: !8864)
!8867 = !DILocation(line: 2032, column: 47, scope: !8864)
!8868 = !DILocation(line: 2032, column: 30, scope: !8864)
!8869 = !DILocation(line: 2032, column: 12, scope: !8865)
!8870 = distinct !{!8870, !8871, !8872}
!8871 = !DILocation(line: 1970, column: 5, scope: !8845)
!8872 = !DILocation(line: 2043, column: 5, scope: !8845)
!8873 = !DILocation(line: 0, scope: !8842)
!8874 = !DILocation(line: 2052, column: 8, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8876, file: !1309, line: 2052, column: 8)
!8876 = distinct !DILexicalBlock(scope: !8815, file: !1309, line: 2051, column: 3)
!8877 = !DILocation(line: 1938, column: 12, scope: !8808)
!8878 = !DILocation(line: 2052, column: 86, scope: !8875)
!8879 = !DILocation(line: 2052, column: 8, scope: !8876)
!8880 = !DILocation(line: 2080, column: 3, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8816, file: !1309, line: 2079, column: 2)
!8882 = !DILocation(line: 2093, column: 7, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8884, file: !1309, line: 2093, column: 7)
!8884 = distinct !DILexicalBlock(scope: !8808, file: !1309, line: 2092, column: 2)
!8885 = !DILocation(line: 2093, column: 21, scope: !8883)
!8886 = !DILocation(line: 2093, column: 7, scope: !8884)
!8887 = !DILocation(line: 2104, column: 2, scope: !8808)
!8888 = distinct !DISubprogram(name: "vTaskDelay", scope: !1309, file: !1309, line: 918, type: !8703, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8889)
!8889 = !{!8890, !8891, !8892}
!8890 = !DILocalVariable(name: "xTicksToDelay", arg: 1, scope: !8888, file: !1309, line: 918, type: !8633)
!8891 = !DILocalVariable(name: "xTimeToWake", scope: !8888, file: !1309, line: 920, type: !1352)
!8892 = !DILocalVariable(name: "xAlreadyYielded", scope: !8888, file: !1309, line: 921, type: !1337)
!8893 = !DILocation(line: 0, scope: !8888)
!8894 = !DILocation(line: 925, column: 21, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8888, file: !1309, line: 925, column: 7)
!8896 = !DILocation(line: 925, column: 7, scope: !8888)
!8897 = !DILocation(line: 927, column: 4, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !1309, line: 927, column: 4)
!8899 = distinct !DILexicalBlock(scope: !8895, file: !1309, line: 926, column: 3)
!8900 = !DILocation(line: 927, column: 4, scope: !8899)
!8901 = !DILocation(line: 927, column: 4, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8898, file: !1309, line: 927, column: 4)
!8903 = !DILocation(line: 928, column: 4, scope: !8899)
!8904 = !DILocation(line: 942, column: 19, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8899, file: !1309, line: 929, column: 4)
!8906 = !DILocation(line: 942, column: 30, scope: !8905)
!8907 = !DILocation(line: 947, column: 26, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8905, file: !1309, line: 947, column: 9)
!8909 = !DILocation(line: 947, column: 40, scope: !8908)
!8910 = !DILocation(line: 947, column: 9, scope: !8908)
!8911 = !DILocation(line: 947, column: 61, scope: !8908)
!8912 = !DILocation(line: 947, column: 9, scope: !8905)
!8913 = !DILocation(line: 952, column: 6, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8908, file: !1309, line: 948, column: 5)
!8915 = !DILocation(line: 953, column: 5, scope: !8914)
!8916 = !DILocation(line: 958, column: 5, scope: !8905)
!8917 = !DILocation(line: 960, column: 22, scope: !8899)
!8918 = !DILocation(line: 961, column: 3, scope: !8899)
!8919 = !DILocation(line: 969, column: 7, scope: !8888)
!8920 = !DILocation(line: 971, column: 4, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !1309, line: 971, column: 4)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !1309, line: 970, column: 3)
!8923 = distinct !DILexicalBlock(scope: !8888, file: !1309, line: 969, column: 7)
!8924 = !{i64 2148469642}
!8925 = !{i64 2148469682}
!8926 = !DILocation(line: 972, column: 3, scope: !8922)
!8927 = !DILocation(line: 977, column: 2, scope: !8888)
!8928 = distinct !DISubprogram(name: "uxTaskPriorityGet", scope: !1309, file: !1309, line: 1054, type: !8929, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8931)
!8929 = !DISubroutineType(types: !8930)
!8930 = !{!1332, !1336}
!8931 = !{!8932, !8933, !8934}
!8932 = !DILocalVariable(name: "xTask", arg: 1, scope: !8928, file: !1309, line: 1054, type: !1336)
!8933 = !DILocalVariable(name: "pxTCB", scope: !8928, file: !1309, line: 1056, type: !1338)
!8934 = !DILocalVariable(name: "uxReturn", scope: !8928, file: !1309, line: 1057, type: !1332)
!8935 = !DILocation(line: 0, scope: !8928)
!8936 = !DILocation(line: 1059, column: 3, scope: !8928)
!8937 = !DILocation(line: 1063, column: 12, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8928, file: !1309, line: 1060, column: 3)
!8939 = !DILocation(line: 1064, column: 22, scope: !8938)
!8940 = !DILocation(line: 1066, column: 3, scope: !8928)
!8941 = !DILocation(line: 1068, column: 3, scope: !8928)
!8942 = distinct !DISubprogram(name: "uxTaskPriorityGetFromISR", scope: !1309, file: !1309, line: 1076, type: !8929, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8943)
!8943 = !{!8944, !8945, !8946, !8947}
!8944 = !DILocalVariable(name: "xTask", arg: 1, scope: !8942, file: !1309, line: 1076, type: !1336)
!8945 = !DILocalVariable(name: "pxTCB", scope: !8942, file: !1309, line: 1078, type: !1338)
!8946 = !DILocalVariable(name: "uxReturn", scope: !8942, file: !1309, line: 1079, type: !1332)
!8947 = !DILocalVariable(name: "uxSavedInterruptState", scope: !8942, file: !1309, line: 1079, type: !1332)
!8948 = !DILocation(line: 0, scope: !8942)
!8949 = !DILocation(line: 1097, column: 3, scope: !8942)
!8950 = !DILocation(line: 231, column: 2, scope: !8951, inlinedAt: !8955)
!8951 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !1333, file: !1333, line: 227, type: !2167, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8952)
!8952 = !{!8953, !8954}
!8953 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !8951, file: !1333, line: 229, type: !136)
!8954 = !DILocalVariable(name: "ulNewBASEPRI", scope: !8951, file: !1333, line: 229, type: !136)
!8955 = distinct !DILocation(line: 1099, column: 27, scope: !8942)
!8956 = !{i64 806750, i64 806787, i64 806819, i64 806855, i64 806882}
!8957 = !DILocation(line: 0, scope: !8951, inlinedAt: !8955)
!8958 = !DILocation(line: 1103, column: 12, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8942, file: !1309, line: 1100, column: 3)
!8960 = !DILocation(line: 1104, column: 22, scope: !8959)
!8961 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !8962, file: !1333, line: 247, type: !136)
!8962 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !1333, file: !1333, line: 247, type: !2198, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8963)
!8963 = !{!8961}
!8964 = !DILocation(line: 0, scope: !8962, inlinedAt: !8965)
!8965 = distinct !DILocation(line: 1106, column: 3, scope: !8942)
!8966 = !DILocation(line: 249, column: 2, scope: !8962, inlinedAt: !8965)
!8967 = !{i64 807283}
!8968 = !DILocation(line: 1108, column: 3, scope: !8942)
!8969 = distinct !DISubprogram(name: "vTaskPrioritySet", scope: !1309, file: !1309, line: 1116, type: !8970, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !8972)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{null, !1336, !1332}
!8972 = !{!8973, !8974, !8975, !8976, !8977, !8978}
!8973 = !DILocalVariable(name: "xTask", arg: 1, scope: !8969, file: !1309, line: 1116, type: !1336)
!8974 = !DILocalVariable(name: "uxNewPriority", arg: 2, scope: !8969, file: !1309, line: 1116, type: !1332)
!8975 = !DILocalVariable(name: "pxTCB", scope: !8969, file: !1309, line: 1118, type: !1338)
!8976 = !DILocalVariable(name: "uxCurrentBasePriority", scope: !8969, file: !1309, line: 1119, type: !1332)
!8977 = !DILocalVariable(name: "uxPriorityUsedOnEntry", scope: !8969, file: !1309, line: 1119, type: !1332)
!8978 = !DILocalVariable(name: "xYieldRequired", scope: !8969, file: !1309, line: 1120, type: !1337)
!8979 = !DILocation(line: 0, scope: !8969)
!8980 = !DILocation(line: 1122, column: 3, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8969, file: !1309, line: 1122, column: 3)
!8982 = !DILocation(line: 1122, column: 3, scope: !8969)
!8983 = !DILocation(line: 1122, column: 3, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8981, file: !1309, line: 1122, column: 3)
!8985 = !DILocation(line: 1125, column: 7, scope: !8969)
!8986 = !DILocation(line: 1134, column: 3, scope: !8969)
!8987 = !DILocation(line: 1138, column: 12, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8969, file: !1309, line: 1135, column: 3)
!8989 = !DILocation(line: 1144, column: 36, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8988, file: !1309, line: 1143, column: 4)
!8991 = !DILocation(line: 1152, column: 30, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8988, file: !1309, line: 1152, column: 8)
!8993 = !DILocation(line: 1152, column: 8, scope: !8988)
!8994 = !DILocation(line: 1156, column: 23, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8996, file: !1309, line: 1156, column: 9)
!8996 = distinct !DILexicalBlock(scope: !8992, file: !1309, line: 1153, column: 4)
!8997 = !DILocation(line: 0, scope: !8995)
!8998 = !DILocation(line: 1156, column: 9, scope: !8996)
!8999 = !DILocation(line: 1163, column: 28, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !9001, file: !1309, line: 1163, column: 11)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !1309, line: 1159, column: 6)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !1309, line: 1158, column: 10)
!9003 = distinct !DILexicalBlock(scope: !8995, file: !1309, line: 1157, column: 5)
!9004 = !DILocation(line: 1163, column: 42, scope: !9000)
!9005 = !DILocation(line: 1163, column: 25, scope: !9000)
!9006 = !DILocation(line: 1163, column: 11, scope: !9001)
!9007 = !DILocation(line: 1196, column: 36, scope: !8996)
!9008 = !DILocation(line: 1202, column: 32, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9010, file: !1309, line: 1202, column: 10)
!9010 = distinct !DILexicalBlock(scope: !8996, file: !1309, line: 1199, column: 5)
!9011 = !DILocation(line: 1202, column: 10, scope: !9010)
!9012 = !DILocation(line: 1204, column: 25, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9009, file: !1309, line: 1203, column: 6)
!9014 = !DILocation(line: 1205, column: 6, scope: !9013)
!9015 = !DILocation(line: 1212, column: 28, scope: !9010)
!9016 = !DILocation(line: 1222, column: 11, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !8996, file: !1309, line: 1222, column: 9)
!9018 = !DILocation(line: 1222, column: 102, scope: !9017)
!9019 = !DILocation(line: 1222, column: 9, scope: !8996)
!9020 = !DILocation(line: 1224, column: 6, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9017, file: !1309, line: 1223, column: 5)
!9022 = !DILocation(line: 1225, column: 5, scope: !9021)
!9023 = !DILocation(line: 1235, column: 9, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !8996, file: !1309, line: 1235, column: 9)
!9025 = !DILocation(line: 1235, column: 9, scope: !8996)
!9026 = !DILocation(line: 1240, column: 10, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9028, file: !1309, line: 1240, column: 10)
!9028 = distinct !DILexicalBlock(scope: !9024, file: !1309, line: 1236, column: 5)
!9029 = !DILocation(line: 1240, column: 55, scope: !9027)
!9030 = !DILocation(line: 1240, column: 10, scope: !9028)
!9031 = !DILocation(line: 1245, column: 7, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9027, file: !1309, line: 1241, column: 6)
!9033 = !DILocation(line: 1246, column: 6, scope: !9032)
!9034 = !DILocation(line: 1251, column: 6, scope: !9028)
!9035 = !DILocation(line: 1252, column: 5, scope: !9028)
!9036 = !DILocation(line: 1258, column: 9, scope: !8996)
!9037 = !DILocation(line: 1260, column: 6, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !1309, line: 1260, column: 6)
!9039 = distinct !DILexicalBlock(scope: !9040, file: !1309, line: 1259, column: 5)
!9040 = distinct !DILexicalBlock(scope: !8996, file: !1309, line: 1258, column: 9)
!9041 = !{i64 2148471860}
!9042 = !{i64 2148471900}
!9043 = !DILocation(line: 1261, column: 5, scope: !9039)
!9044 = !DILocation(line: 1272, column: 3, scope: !8969)
!9045 = !DILocation(line: 1273, column: 2, scope: !8969)
!9046 = distinct !DISubprogram(name: "vTaskSuspend", scope: !1309, file: !1309, line: 1280, type: !8558, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9047)
!9047 = !{!9048, !9049}
!9048 = !DILocalVariable(name: "xTaskToSuspend", arg: 1, scope: !9046, file: !1309, line: 1280, type: !1336)
!9049 = !DILocalVariable(name: "pxTCB", scope: !9046, file: !1309, line: 1282, type: !1338)
!9050 = !DILocation(line: 0, scope: !9046)
!9051 = !DILocation(line: 1284, column: 3, scope: !9046)
!9052 = !DILocation(line: 1288, column: 12, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9046, file: !1309, line: 1285, column: 3)
!9054 = !DILocation(line: 1294, column: 32, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9053, file: !1309, line: 1294, column: 8)
!9056 = !DILocation(line: 1294, column: 8, scope: !9055)
!9057 = !DILocation(line: 1294, column: 53, scope: !9055)
!9058 = !DILocation(line: 1294, column: 8, scope: !9053)
!9059 = !DILocation(line: 1296, column: 5, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9061, file: !1309, line: 1296, column: 5)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !1309, line: 1296, column: 5)
!9062 = distinct !DILexicalBlock(scope: !9055, file: !1309, line: 1295, column: 4)
!9063 = !DILocation(line: 1296, column: 5, scope: !9061)
!9064 = !DILocation(line: 1296, column: 5, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9060, file: !1309, line: 1296, column: 5)
!9066 = !DILocation(line: 1304, column: 8, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9053, file: !1309, line: 1304, column: 8)
!9068 = !DILocation(line: 1304, column: 62, scope: !9067)
!9069 = !DILocation(line: 1304, column: 8, scope: !9053)
!9070 = !DILocation(line: 1306, column: 14, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9067, file: !1309, line: 1305, column: 4)
!9072 = !DILocation(line: 1307, column: 4, scope: !9071)
!9073 = !DILocation(line: 1313, column: 4, scope: !9053)
!9074 = !DILocation(line: 1315, column: 3, scope: !9046)
!9075 = !DILocation(line: 1317, column: 16, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9046, file: !1309, line: 1317, column: 7)
!9077 = !DILocation(line: 1317, column: 13, scope: !9076)
!9078 = !DILocation(line: 0, scope: !9076)
!9079 = !DILocation(line: 1317, column: 7, scope: !9046)
!9080 = !DILocation(line: 1319, column: 8, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9076, file: !1309, line: 1318, column: 3)
!9082 = !DILocation(line: 1322, column: 5, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9084, file: !1309, line: 1322, column: 5)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !1309, line: 1320, column: 4)
!9085 = distinct !DILexicalBlock(scope: !9081, file: !1309, line: 1319, column: 8)
!9086 = !DILocation(line: 1322, column: 5, scope: !9084)
!9087 = !DILocation(line: 1322, column: 5, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9083, file: !1309, line: 1322, column: 5)
!9089 = !DILocation(line: 1323, column: 5, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9084, file: !1309, line: 1323, column: 5)
!9091 = !{i64 2148473310}
!9092 = !{i64 2148473350}
!9093 = !DILocation(line: 1324, column: 4, scope: !9084)
!9094 = !DILocation(line: 1330, column: 9, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9096, file: !1309, line: 1330, column: 9)
!9096 = distinct !DILexicalBlock(scope: !9085, file: !1309, line: 1326, column: 4)
!9097 = !DILocation(line: 1330, column: 59, scope: !9095)
!9098 = !DILocation(line: 1330, column: 56, scope: !9095)
!9099 = !DILocation(line: 1330, column: 9, scope: !9096)
!9100 = !DILocation(line: 1336, column: 19, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9095, file: !1309, line: 1331, column: 5)
!9102 = !DILocation(line: 1337, column: 5, scope: !9101)
!9103 = !DILocation(line: 1340, column: 6, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9095, file: !1309, line: 1339, column: 5)
!9105 = !DILocation(line: 1346, column: 8, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9076, file: !1309, line: 1345, column: 3)
!9107 = !DILocation(line: 1351, column: 5, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9109, file: !1309, line: 1347, column: 4)
!9109 = distinct !DILexicalBlock(scope: !9106, file: !1309, line: 1346, column: 8)
!9110 = !DILocation(line: 1353, column: 6, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9108, file: !1309, line: 1352, column: 5)
!9112 = !DILocation(line: 1355, column: 5, scope: !9108)
!9113 = !DILocation(line: 1356, column: 4, scope: !9108)
!9114 = !DILocation(line: 1362, column: 2, scope: !9046)
!9115 = !DILocation(line: 2200, column: 6, scope: !1398)
!9116 = !DILocation(line: 2200, column: 27, scope: !1398)
!9117 = !DILocation(line: 2200, column: 6, scope: !1393)
!9118 = !DILocation(line: 2204, column: 17, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !1398, file: !1309, line: 2201, column: 2)
!9120 = !DILocation(line: 2205, column: 2, scope: !9119)
!9121 = !DILocation(line: 2208, column: 17, scope: !1397)
!9122 = !DILocation(line: 2239, column: 3, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9124, file: !1309, line: 2239, column: 3)
!9124 = distinct !DILexicalBlock(scope: !1397, file: !1309, line: 2239, column: 3)
!9125 = !DILocation(line: 2239, column: 3, scope: !9124)
!9126 = !DILocation(line: 2239, column: 3, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9128, file: !1309, line: 2239, column: 3)
!9128 = distinct !DILexicalBlock(scope: !9123, file: !1309, line: 2239, column: 3)
!9129 = !DILocation(line: 2239, column: 3, scope: !9128)
!9130 = !DILocation(line: 2239, column: 3, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9127, file: !1309, line: 2239, column: 3)
!9132 = !DILocation(line: 2240, column: 3, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9134, file: !1309, line: 2240, column: 3)
!9134 = distinct !DILexicalBlock(scope: !1397, file: !1309, line: 2240, column: 3)
!9135 = !DILocation(line: 2240, column: 3, scope: !9134)
!9136 = !DILocation(line: 2240, column: 3, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9138, file: !1309, line: 2240, column: 3)
!9138 = distinct !DILexicalBlock(scope: !9133, file: !1309, line: 2240, column: 3)
!9139 = !DILocation(line: 2240, column: 3, scope: !9138)
!9140 = !DILocation(line: 2240, column: 3, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9137, file: !1309, line: 2240, column: 3)
!9142 = !DILocation(line: 2244, column: 3, scope: !1396)
!9143 = !DILocalVariable(name: "ulBitmap", arg: 1, scope: !9144, file: !1333, line: 172, type: !136)
!9144 = distinct !DISubprogram(name: "ucPortCountLeadingZeros", scope: !1333, file: !1333, line: 172, type: !9145, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9147)
!9145 = !DISubroutineType(types: !9146)
!9146 = !{!128, !136}
!9147 = !{!9143, !9148}
!9148 = !DILocalVariable(name: "ucReturn", scope: !9144, file: !1333, line: 174, type: !128)
!9149 = !DILocation(line: 0, scope: !9144, inlinedAt: !9150)
!9150 = distinct !DILocation(line: 2244, column: 3, scope: !1396)
!9151 = !DILocation(line: 176, column: 3, scope: !9144, inlinedAt: !9150)
!9152 = !{i64 804842}
!9153 = !DILocation(line: 0, scope: !1396)
!9154 = !DILocation(line: 2244, column: 3, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !1396, file: !1309, line: 2244, column: 3)
!9156 = !DILocation(line: 2244, column: 3, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9155, file: !1309, line: 2244, column: 3)
!9158 = !DILocation(line: 0, scope: !1400)
!9159 = !DILocation(line: 2244, column: 3, scope: !1400)
!9160 = !DILocation(line: 2244, column: 3, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !1400, file: !1309, line: 2244, column: 3)
!9162 = !DILocation(line: 2244, column: 3, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9161, file: !1309, line: 2244, column: 3)
!9164 = !DILocation(line: 2255, column: 1, scope: !1393)
!9165 = distinct !DISubprogram(name: "vTaskResume", scope: !1309, file: !1309, line: 1415, type: !8558, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9166)
!9166 = !{!9167, !9168}
!9167 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !9165, file: !1309, line: 1415, type: !1336)
!9168 = !DILocalVariable(name: "pxTCB", scope: !9165, file: !1309, line: 1417, type: !8488)
!9169 = !DILocation(line: 0, scope: !9165)
!9170 = !DILocation(line: 1420, column: 3, scope: !9165)
!9171 = !DILocation(line: 1420, column: 3, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9173, file: !1309, line: 1420, column: 3)
!9173 = distinct !DILexicalBlock(scope: !9165, file: !1309, line: 1420, column: 3)
!9174 = !DILocation(line: 1424, column: 25, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9165, file: !1309, line: 1424, column: 7)
!9176 = !DILocation(line: 1417, column: 24, scope: !9165)
!9177 = !DILocation(line: 1424, column: 39, scope: !9175)
!9178 = !DILocation(line: 1424, column: 36, scope: !9175)
!9179 = !DILocation(line: 1424, column: 7, scope: !9165)
!9180 = !DILocation(line: 1426, column: 4, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9175, file: !1309, line: 1425, column: 3)
!9182 = !DILocation(line: 1428, column: 9, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9184, file: !1309, line: 1428, column: 9)
!9184 = distinct !DILexicalBlock(scope: !9181, file: !1309, line: 1427, column: 4)
!9185 = !DILocation(line: 1428, column: 41, scope: !9183)
!9186 = !DILocation(line: 1428, column: 9, scope: !9184)
!9187 = !DILocation(line: 1434, column: 40, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9183, file: !1309, line: 1429, column: 5)
!9189 = !DILocation(line: 1434, column: 15, scope: !9188)
!9190 = !DILocation(line: 1435, column: 6, scope: !9188)
!9191 = !DILocation(line: 1438, column: 17, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9188, file: !1309, line: 1438, column: 10)
!9193 = !DILocation(line: 1438, column: 31, scope: !9192)
!9194 = !DILocation(line: 1438, column: 45, scope: !9192)
!9195 = !DILocation(line: 1438, column: 28, scope: !9192)
!9196 = !DILocation(line: 1438, column: 10, scope: !9188)
!9197 = !DILocation(line: 1443, column: 7, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9199, file: !1309, line: 1443, column: 7)
!9199 = distinct !DILexicalBlock(scope: !9192, file: !1309, line: 1439, column: 6)
!9200 = !{i64 2148475215}
!9201 = !{i64 2148475255}
!9202 = !DILocation(line: 1444, column: 6, scope: !9199)
!9203 = !DILocation(line: 1455, column: 4, scope: !9181)
!9204 = !DILocation(line: 1456, column: 3, scope: !9181)
!9205 = !DILocation(line: 1461, column: 2, scope: !9165)
!9206 = distinct !DISubprogram(name: "prvTaskIsTaskSuspended", scope: !1309, file: !1309, line: 1369, type: !9207, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9210)
!9207 = !DISubroutineType(types: !9208)
!9208 = !{!1337, !9209}
!9209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1336)
!9210 = !{!9211, !9212, !9213}
!9211 = !DILocalVariable(name: "xTask", arg: 1, scope: !9206, file: !1309, line: 1369, type: !9209)
!9212 = !DILocalVariable(name: "xReturn", scope: !9206, file: !1309, line: 1371, type: !1337)
!9213 = !DILocalVariable(name: "pxTCB", scope: !9206, file: !1309, line: 1372, type: !9214)
!9214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9215)
!9215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9216, size: 32)
!9216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!9217 = !DILocation(line: 0, scope: !9206)
!9218 = !DILocation(line: 1378, column: 3, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9206, file: !1309, line: 1378, column: 3)
!9220 = !DILocation(line: 1378, column: 3, scope: !9206)
!9221 = !DILocation(line: 1378, column: 3, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9219, file: !1309, line: 1378, column: 3)
!9223 = !DILocation(line: 1381, column: 7, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9206, file: !1309, line: 1381, column: 7)
!9225 = !DILocation(line: 1381, column: 7, scope: !9206)
!9226 = !DILocation(line: 1384, column: 8, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9228, file: !1309, line: 1384, column: 8)
!9228 = distinct !DILexicalBlock(scope: !9224, file: !1309, line: 1382, column: 3)
!9229 = !DILocation(line: 1384, column: 8, scope: !9228)
!9230 = !DILocation(line: 1407, column: 3, scope: !9206)
!9231 = distinct !DISubprogram(name: "xTaskResumeFromISR", scope: !1309, file: !1309, line: 1469, type: !9232, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9234)
!9232 = !DISubroutineType(types: !9233)
!9233 = !{!1337, !1336}
!9234 = !{!9235, !9236, !9237, !9238}
!9235 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !9231, file: !1309, line: 1469, type: !1336)
!9236 = !DILocalVariable(name: "xYieldRequired", scope: !9231, file: !1309, line: 1471, type: !1337)
!9237 = !DILocalVariable(name: "pxTCB", scope: !9231, file: !1309, line: 1472, type: !8488)
!9238 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !9231, file: !1309, line: 1473, type: !1332)
!9239 = !DILocation(line: 0, scope: !9231)
!9240 = !DILocation(line: 1475, column: 3, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9231, file: !1309, line: 1475, column: 3)
!9242 = !DILocation(line: 1475, column: 3, scope: !9231)
!9243 = !DILocation(line: 1475, column: 3, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9241, file: !1309, line: 1475, column: 3)
!9245 = !DILocation(line: 1493, column: 3, scope: !9231)
!9246 = !DILocation(line: 231, column: 2, scope: !8951, inlinedAt: !9247)
!9247 = distinct !DILocation(line: 1495, column: 28, scope: !9231)
!9248 = !DILocation(line: 0, scope: !8951, inlinedAt: !9247)
!9249 = !DILocation(line: 1497, column: 8, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9251, file: !1309, line: 1497, column: 8)
!9251 = distinct !DILexicalBlock(scope: !9231, file: !1309, line: 1496, column: 3)
!9252 = !DILocation(line: 1497, column: 40, scope: !9250)
!9253 = !DILocation(line: 1497, column: 8, scope: !9251)
!9254 = !DILocation(line: 1502, column: 9, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9256, file: !1309, line: 1502, column: 9)
!9256 = distinct !DILexicalBlock(scope: !9250, file: !1309, line: 1498, column: 4)
!9257 = !DILocation(line: 1502, column: 30, scope: !9255)
!9258 = !DILocation(line: 1502, column: 9, scope: !9256)
!9259 = !DILocation(line: 1506, column: 17, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9261, file: !1309, line: 1506, column: 10)
!9261 = distinct !DILexicalBlock(scope: !9255, file: !1309, line: 1503, column: 5)
!9262 = !DILocation(line: 1506, column: 31, scope: !9260)
!9263 = !DILocation(line: 1506, column: 45, scope: !9260)
!9264 = !DILocation(line: 1506, column: 28, scope: !9260)
!9265 = !DILocation(line: 1506, column: 10, scope: !9261)
!9266 = !DILocation(line: 1515, column: 40, scope: !9261)
!9267 = !DILocation(line: 1515, column: 15, scope: !9261)
!9268 = !DILocation(line: 1516, column: 6, scope: !9261)
!9269 = !DILocation(line: 1517, column: 5, scope: !9261)
!9270 = !DILocation(line: 1523, column: 56, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9255, file: !1309, line: 1519, column: 5)
!9272 = !DILocation(line: 1523, column: 6, scope: !9271)
!9273 = !DILocation(line: 0, scope: !8962, inlinedAt: !9274)
!9274 = distinct !DILocation(line: 1531, column: 3, scope: !9231)
!9275 = !DILocation(line: 249, column: 2, scope: !8962, inlinedAt: !9274)
!9276 = !DILocation(line: 1533, column: 3, scope: !9231)
!9277 = distinct !DISubprogram(name: "vTaskStartScheduler", scope: !1309, file: !1309, line: 1539, type: !181, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9278)
!9278 = !{!9279}
!9279 = !DILocalVariable(name: "xReturn", scope: !9277, file: !1309, line: 1541, type: !1337)
!9280 = !DILocation(line: 1553, column: 13, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9277, file: !1309, line: 1551, column: 2)
!9282 = !DILocation(line: 0, scope: !9277)
!9283 = !DILocation(line: 1559, column: 15, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9285, file: !1309, line: 1559, column: 7)
!9285 = distinct !DILexicalBlock(scope: !9277, file: !1309, line: 1558, column: 2)
!9286 = !DILocation(line: 1559, column: 7, scope: !9285)
!9287 = !DILocation(line: 1561, column: 14, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9284, file: !1309, line: 1560, column: 3)
!9289 = !DILocation(line: 1562, column: 3, scope: !9288)
!9290 = !DILocation(line: 1570, column: 6, scope: !9277)
!9291 = !DILocation(line: 215, column: 2, scope: !9292, inlinedAt: !9295)
!9292 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !1333, file: !1333, line: 211, type: !181, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9293)
!9293 = !{!9294}
!9294 = !DILocalVariable(name: "ulNewBASEPRI", scope: !9292, file: !1333, line: 213, type: !136)
!9295 = distinct !DILocation(line: 1577, column: 3, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9297, file: !1309, line: 1571, column: 2)
!9297 = distinct !DILexicalBlock(scope: !9277, file: !1309, line: 1570, column: 6)
!9298 = !{i64 806362, i64 806395, i64 806431, i64 806458}
!9299 = !DILocation(line: 0, scope: !9292, inlinedAt: !9295)
!9300 = !DILocation(line: 1587, column: 21, scope: !9296)
!9301 = !DILocation(line: 1588, column: 14, scope: !9296)
!9302 = !DILocation(line: 1597, column: 7, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9296, file: !1309, line: 1597, column: 7)
!9304 = !DILocation(line: 1606, column: 2, scope: !9296)
!9305 = !DILocation(line: 1612, column: 3, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9307, file: !1309, line: 1612, column: 3)
!9307 = distinct !DILexicalBlock(scope: !9308, file: !1309, line: 1612, column: 3)
!9308 = distinct !DILexicalBlock(scope: !9297, file: !1309, line: 1608, column: 2)
!9309 = !DILocation(line: 1614, column: 1, scope: !9277)
!9310 = distinct !DISubprogram(name: "prvIdleTask", scope: !1309, file: !1309, line: 2653, type: !753, scopeLine: 2654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9311)
!9311 = !{!9312}
!9312 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !9310, file: !1309, line: 2653, type: !161)
!9313 = !DILocation(line: 0, scope: !9310)
!9314 = !DILocation(line: 2658, column: 2, scope: !9310)
!9315 = !DILocation(line: 2661, column: 3, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9317, file: !1309, line: 2659, column: 2)
!9317 = distinct !DILexicalBlock(scope: !9318, file: !1309, line: 2658, column: 2)
!9318 = distinct !DILexicalBlock(scope: !9310, file: !1309, line: 2658, column: 2)
!9319 = !DILocation(line: 2684, column: 8, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9321, file: !1309, line: 2684, column: 8)
!9321 = distinct !DILexicalBlock(scope: !9316, file: !1309, line: 2674, column: 3)
!9322 = !DILocation(line: 2684, column: 78, scope: !9320)
!9323 = !DILocation(line: 2684, column: 8, scope: !9321)
!9324 = distinct !{!9324, !9325, !9326}
!9325 = !DILocation(line: 2658, column: 2, scope: !9318)
!9326 = !DILocation(line: 2754, column: 2, scope: !9318)
!9327 = !DILocation(line: 2686, column: 5, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9329, file: !1309, line: 2686, column: 5)
!9329 = distinct !DILexicalBlock(scope: !9320, file: !1309, line: 2685, column: 4)
!9330 = !{i64 2148488461}
!9331 = !{i64 2148488501}
!9332 = !DILocation(line: 2687, column: 4, scope: !9329)
!9333 = distinct !DISubprogram(name: "prvCheckTasksWaitingTermination", scope: !1309, file: !1309, line: 2950, type: !181, scopeLine: 2951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9334)
!9334 = !{!9335, !9337}
!9335 = !DILocalVariable(name: "xListIsEmpty", scope: !9336, file: !1309, line: 2954, type: !1337)
!9336 = distinct !DILexicalBlock(scope: !9333, file: !1309, line: 2953, column: 2)
!9337 = !DILocalVariable(name: "pxTCB", scope: !9338, file: !1309, line: 2968, type: !1338)
!9338 = distinct !DILexicalBlock(scope: !9339, file: !1309, line: 2967, column: 4)
!9339 = distinct !DILexicalBlock(scope: !9340, file: !1309, line: 2966, column: 8)
!9340 = distinct !DILexicalBlock(scope: !9336, file: !1309, line: 2959, column: 3)
!9341 = !DILocation(line: 2958, column: 10, scope: !9336)
!9342 = !DILocation(line: 2958, column: 25, scope: !9336)
!9343 = !DILocation(line: 2958, column: 3, scope: !9336)
!9344 = !DILocation(line: 2960, column: 4, scope: !9340)
!9345 = !DILocation(line: 2962, column: 20, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9340, file: !1309, line: 2961, column: 4)
!9347 = !DILocation(line: 0, scope: !9336)
!9348 = !DILocation(line: 2964, column: 13, scope: !9340)
!9349 = !DILocation(line: 2966, column: 8, scope: !9340)
!9350 = !DILocation(line: 2970, column: 5, scope: !9338)
!9351 = !DILocation(line: 2972, column: 26, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9338, file: !1309, line: 2971, column: 5)
!9353 = !DILocation(line: 0, scope: !9338)
!9354 = !DILocation(line: 2973, column: 39, scope: !9352)
!9355 = !DILocation(line: 2973, column: 15, scope: !9352)
!9356 = !DILocation(line: 2974, column: 6, scope: !9352)
!9357 = !DILocation(line: 2975, column: 6, scope: !9352)
!9358 = !DILocation(line: 2977, column: 5, scope: !9338)
!9359 = !DILocation(line: 2979, column: 5, scope: !9338)
!9360 = !DILocation(line: 2980, column: 4, scope: !9338)
!9361 = distinct !{!9361, !9343, !9362}
!9362 = !DILocation(line: 2985, column: 3, scope: !9336)
!9363 = !DILocation(line: 2988, column: 1, scope: !9333)
!9364 = distinct !DISubprogram(name: "prvDeleteTCB", scope: !1309, file: !1309, line: 3231, type: !9365, scopeLine: 3232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9367)
!9365 = !DISubroutineType(types: !9366)
!9366 = !{null, !1338}
!9367 = !{!9368}
!9368 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !9364, file: !1309, line: 3231, type: !1338)
!9369 = !DILocation(line: 0, scope: !9364)
!9370 = !DILocation(line: 3257, column: 4, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9364, file: !1309, line: 3256, column: 3)
!9372 = !DILocation(line: 3261, column: 14, scope: !9364)
!9373 = !DILocation(line: 3261, column: 3, scope: !9364)
!9374 = !DILocation(line: 3262, column: 2, scope: !9364)
!9375 = distinct !DISubprogram(name: "vTaskEndScheduler", scope: !1309, file: !1309, line: 1617, type: !181, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !2135)
!9376 = !DILocation(line: 215, column: 2, scope: !9292, inlinedAt: !9377)
!9377 = distinct !DILocation(line: 1622, column: 2, scope: !9375)
!9378 = !DILocation(line: 0, scope: !9292, inlinedAt: !9377)
!9379 = !DILocation(line: 1623, column: 20, scope: !9375)
!9380 = !DILocation(line: 1624, column: 2, scope: !9375)
!9381 = !DILocation(line: 1625, column: 1, scope: !9375)
!9382 = distinct !DISubprogram(name: "xTaskGetTickCount", scope: !1309, file: !1309, line: 1759, type: !9383, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9385)
!9383 = !DISubroutineType(types: !9384)
!9384 = !{!1352}
!9385 = !{!9386}
!9386 = !DILocalVariable(name: "xTicks", scope: !9382, file: !1309, line: 1761, type: !1352)
!9387 = !DILocation(line: 1766, column: 12, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9382, file: !1309, line: 1765, column: 2)
!9389 = !DILocation(line: 0, scope: !9382)
!9390 = !DILocation(line: 1770, column: 2, scope: !9382)
!9391 = distinct !DISubprogram(name: "xTaskGetTickCountFromISR", scope: !1309, file: !1309, line: 1774, type: !9383, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9392)
!9392 = !{!9393, !9394}
!9393 = !DILocalVariable(name: "xReturn", scope: !9391, file: !1309, line: 1776, type: !1352)
!9394 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !9391, file: !1309, line: 1777, type: !1332)
!9395 = !DILocation(line: 1793, column: 2, scope: !9391)
!9396 = !DILocation(line: 0, scope: !9391)
!9397 = !DILocation(line: 1797, column: 13, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9391, file: !1309, line: 1796, column: 2)
!9399 = !DILocation(line: 1801, column: 2, scope: !9391)
!9400 = distinct !DISubprogram(name: "uxTaskGetNumberOfTasks", scope: !1309, file: !1309, line: 1805, type: !9401, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !2135)
!9401 = !DISubroutineType(types: !9402)
!9402 = !{!1332}
!9403 = !DILocation(line: 1809, column: 9, scope: !9400)
!9404 = !DILocation(line: 1809, column: 2, scope: !9400)
!9405 = distinct !DISubprogram(name: "pcTaskGetTaskName", scope: !1309, file: !1309, line: 1815, type: !9406, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9408)
!9406 = !DISubroutineType(types: !9407)
!9407 = !{!331, !1336}
!9408 = !{!9409, !9410}
!9409 = !DILocalVariable(name: "xTaskToQuery", arg: 1, scope: !9405, file: !1309, line: 1815, type: !1336)
!9410 = !DILocalVariable(name: "pxTCB", scope: !9405, file: !1309, line: 1817, type: !1338)
!9411 = !DILocation(line: 0, scope: !9405)
!9412 = !DILocation(line: 1820, column: 11, scope: !9405)
!9413 = !DILocation(line: 1821, column: 3, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9405, file: !1309, line: 1821, column: 3)
!9415 = !DILocation(line: 1821, column: 3, scope: !9405)
!9416 = !DILocation(line: 1821, column: 3, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9414, file: !1309, line: 1821, column: 3)
!9418 = !DILocation(line: 1822, column: 13, scope: !9405)
!9419 = !DILocation(line: 1822, column: 3, scope: !9405)
!9420 = distinct !DISubprogram(name: "uxTaskGetSystemState", scope: !1309, file: !1309, line: 1830, type: !9421, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9439)
!9421 = !DISubroutineType(types: !9422)
!9422 = !{!1332, !9423, !9437, !9438}
!9423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9424)
!9424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9425, size: 32)
!9425 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskStatus_t", file: !1317, line: 176, baseType: !9426)
!9426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTASK_STATUS", file: !1317, line: 166, size: 256, elements: !9427)
!9427 = !{!9428, !9429, !9430, !9431, !9433, !9434, !9435, !9436}
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !9426, file: !1317, line: 168, baseType: !1336, size: 32)
!9429 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !9426, file: !1317, line: 169, baseType: !444, size: 32, offset: 32)
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "xTaskNumber", scope: !9426, file: !1317, line: 170, baseType: !1332, size: 32, offset: 64)
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "eCurrentState", scope: !9426, file: !1317, line: 171, baseType: !9432, size: 32, offset: 96)
!9432 = !DIDerivedType(tag: DW_TAG_typedef, name: "eTaskState", file: !1317, line: 119, baseType: !1316)
!9433 = !DIDerivedType(tag: DW_TAG_member, name: "uxCurrentPriority", scope: !9426, file: !1317, line: 172, baseType: !1332, size: 32, offset: 128)
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !9426, file: !1317, line: 173, baseType: !1332, size: 32, offset: 160)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "ulRunTimeCounter", scope: !9426, file: !1317, line: 174, baseType: !136, size: 32, offset: 192)
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "usStackHighWaterMark", scope: !9426, file: !1317, line: 175, baseType: !1017, size: 16, offset: 224)
!9437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1332)
!9438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3543)
!9439 = !{!9440, !9441, !9442, !9443, !9444}
!9440 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !9420, file: !1309, line: 1830, type: !9423)
!9441 = !DILocalVariable(name: "uxArraySize", arg: 2, scope: !9420, file: !1309, line: 1830, type: !9437)
!9442 = !DILocalVariable(name: "pulTotalRunTime", arg: 3, scope: !9420, file: !1309, line: 1830, type: !9438)
!9443 = !DILocalVariable(name: "uxTask", scope: !9420, file: !1309, line: 1832, type: !1332)
!9444 = !DILocalVariable(name: "uxQueue", scope: !9420, file: !1309, line: 1832, type: !1332)
!9445 = !DILocation(line: 0, scope: !9420)
!9446 = !DILocation(line: 1834, column: 3, scope: !9420)
!9447 = !DILocation(line: 1837, column: 23, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9449, file: !1309, line: 1837, column: 8)
!9449 = distinct !DILexicalBlock(scope: !9420, file: !1309, line: 1835, column: 3)
!9450 = !DILocation(line: 1837, column: 20, scope: !9448)
!9451 = !DILocation(line: 1837, column: 8, scope: !9449)
!9452 = !DILocation(line: 1843, column: 13, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9454, file: !1309, line: 1842, column: 5)
!9454 = distinct !DILexicalBlock(scope: !9448, file: !1309, line: 1838, column: 4)
!9455 = !DILocation(line: 1844, column: 48, scope: !9453)
!9456 = !DILocation(line: 1844, column: 82, scope: !9453)
!9457 = !DILocation(line: 1844, column: 16, scope: !9453)
!9458 = !DILocation(line: 1844, column: 13, scope: !9453)
!9459 = !DILocation(line: 1846, column: 22, scope: !9454)
!9460 = !DILocation(line: 1846, column: 5, scope: !9453)
!9461 = distinct !{!9461, !9462, !9463}
!9462 = !DILocation(line: 1841, column: 5, scope: !9454)
!9463 = !DILocation(line: 1846, column: 57, scope: !9454)
!9464 = !DILocation(line: 1850, column: 47, scope: !9454)
!9465 = !DILocation(line: 1850, column: 91, scope: !9454)
!9466 = !DILocation(line: 1850, column: 15, scope: !9454)
!9467 = !DILocation(line: 1850, column: 12, scope: !9454)
!9468 = !DILocation(line: 1851, column: 47, scope: !9454)
!9469 = !DILocation(line: 1851, column: 91, scope: !9454)
!9470 = !DILocation(line: 1851, column: 15, scope: !9454)
!9471 = !DILocation(line: 1851, column: 12, scope: !9454)
!9472 = !DILocation(line: 1857, column: 48, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9454, file: !1309, line: 1854, column: 5)
!9474 = !DILocation(line: 1857, column: 16, scope: !9473)
!9475 = !DILocation(line: 1857, column: 13, scope: !9473)
!9476 = !DILocation(line: 1865, column: 48, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9454, file: !1309, line: 1862, column: 5)
!9478 = !DILocation(line: 1865, column: 16, scope: !9477)
!9479 = !DILocation(line: 1865, column: 13, scope: !9477)
!9480 = !DILocation(line: 1882, column: 26, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9482, file: !1309, line: 1882, column: 10)
!9482 = distinct !DILexicalBlock(scope: !9454, file: !1309, line: 1881, column: 5)
!9483 = !DILocation(line: 1882, column: 10, scope: !9482)
!9484 = !DILocation(line: 1884, column: 24, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9481, file: !1309, line: 1883, column: 6)
!9486 = !DILocation(line: 1885, column: 6, scope: !9485)
!9487 = !DILocation(line: 1894, column: 12, scope: !9420)
!9488 = !DILocation(line: 1896, column: 3, scope: !9420)
!9489 = distinct !DISubprogram(name: "prvListTaskWithinSingleList", scope: !1309, file: !1309, line: 3098, type: !9490, scopeLine: 3099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9492)
!9490 = !DISubroutineType(types: !9491)
!9491 = !{!1332, !9424, !1373, !9432}
!9492 = !{!9493, !9494, !9495, !9496, !9499, !9500, !9501, !9505}
!9493 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !9489, file: !1309, line: 3098, type: !9424)
!9494 = !DILocalVariable(name: "pxList", arg: 2, scope: !9489, file: !1309, line: 3098, type: !1373)
!9495 = !DILocalVariable(name: "eState", arg: 3, scope: !9489, file: !1309, line: 3098, type: !9432)
!9496 = !DILocalVariable(name: "pxNextTCB", scope: !9489, file: !1309, line: 3100, type: !9497)
!9497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9498, size: 32)
!9498 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1339)
!9499 = !DILocalVariable(name: "pxFirstTCB", scope: !9489, file: !1309, line: 3100, type: !9497)
!9500 = !DILocalVariable(name: "uxTask", scope: !9489, file: !1309, line: 3101, type: !1332)
!9501 = !DILocalVariable(name: "pxConstList", scope: !9502, file: !1309, line: 3105, type: !1401)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !1309, line: 3105, column: 4)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !1309, line: 3104, column: 3)
!9504 = distinct !DILexicalBlock(scope: !9489, file: !1309, line: 3103, column: 7)
!9505 = !DILocalVariable(name: "pxConstList", scope: !9506, file: !1309, line: 3113, type: !1401)
!9506 = distinct !DILexicalBlock(scope: !9507, file: !1309, line: 3113, column: 5)
!9507 = distinct !DILexicalBlock(scope: !9503, file: !1309, line: 3112, column: 4)
!9508 = !DILocation(line: 0, scope: !9489)
!9509 = !DILocation(line: 3103, column: 7, scope: !9504)
!9510 = !DILocation(line: 3103, column: 41, scope: !9504)
!9511 = !DILocation(line: 3103, column: 7, scope: !9489)
!9512 = !DILocation(line: 0, scope: !9502)
!9513 = !DILocation(line: 3105, column: 4, scope: !9502)
!9514 = !DILocation(line: 3105, column: 4, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9502, file: !1309, line: 3105, column: 4)
!9516 = !DILocation(line: 3105, column: 4, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9515, file: !1309, line: 3105, column: 4)
!9518 = !DILocation(line: 3111, column: 4, scope: !9503)
!9519 = !DILocation(line: 3113, column: 5, scope: !9506)
!9520 = !DILocation(line: 0, scope: !9506)
!9521 = !DILocation(line: 3113, column: 5, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9506, file: !1309, line: 3113, column: 5)
!9523 = !DILocation(line: 3113, column: 5, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9522, file: !1309, line: 3113, column: 5)
!9525 = !DILocation(line: 3115, column: 33, scope: !9507)
!9526 = !DILocation(line: 3115, column: 41, scope: !9507)
!9527 = !DILocation(line: 3116, column: 77, scope: !9507)
!9528 = !DILocation(line: 3116, column: 33, scope: !9507)
!9529 = !DILocation(line: 3116, column: 44, scope: !9507)
!9530 = !DILocation(line: 3117, column: 58, scope: !9507)
!9531 = !DILocation(line: 3117, column: 33, scope: !9507)
!9532 = !DILocation(line: 3117, column: 45, scope: !9507)
!9533 = !DILocation(line: 3118, column: 33, scope: !9507)
!9534 = !DILocation(line: 3118, column: 47, scope: !9507)
!9535 = !DILocation(line: 3119, column: 64, scope: !9507)
!9536 = !DILocation(line: 3119, column: 33, scope: !9507)
!9537 = !DILocation(line: 3119, column: 51, scope: !9507)
!9538 = !DILocation(line: 3126, column: 10, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9507, file: !1309, line: 3122, column: 5)
!9540 = !DILocation(line: 3128, column: 11, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9542, file: !1309, line: 3128, column: 11)
!9542 = distinct !DILexicalBlock(scope: !9543, file: !1309, line: 3127, column: 6)
!9543 = distinct !DILexicalBlock(scope: !9539, file: !1309, line: 3126, column: 10)
!9544 = !DILocation(line: 3128, column: 69, scope: !9541)
!9545 = !DILocation(line: 3128, column: 11, scope: !9542)
!9546 = !DILocation(line: 3130, column: 50, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9541, file: !1309, line: 3129, column: 7)
!9548 = !DILocation(line: 3131, column: 7, scope: !9547)
!9549 = !DILocation(line: 3138, column: 62, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9507, file: !1309, line: 3137, column: 5)
!9551 = !DILocation(line: 3138, column: 34, scope: !9550)
!9552 = !DILocation(line: 3138, column: 49, scope: !9550)
!9553 = !DILocation(line: 3152, column: 34, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9507, file: !1309, line: 3151, column: 5)
!9555 = !DILocation(line: 3152, column: 51, scope: !9554)
!9556 = !DILocation(line: 3162, column: 110, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9507, file: !1309, line: 3161, column: 5)
!9558 = !DILocation(line: 3162, column: 85, scope: !9557)
!9559 = !DILocation(line: 3162, column: 57, scope: !9557)
!9560 = !DILocation(line: 3162, column: 34, scope: !9557)
!9561 = !DILocation(line: 3162, column: 55, scope: !9557)
!9562 = !DILocation(line: 3166, column: 11, scope: !9507)
!9563 = !DILocation(line: 3168, column: 23, scope: !9503)
!9564 = !DILocation(line: 3168, column: 4, scope: !9507)
!9565 = distinct !{!9565, !9518, !9566}
!9566 = !DILocation(line: 3168, column: 37, scope: !9503)
!9567 = !DILocation(line: 3175, column: 3, scope: !9489)
!9568 = distinct !DISubprogram(name: "prvTaskCheckFreeStackSpace", scope: !1309, file: !1309, line: 3183, type: !9569, scopeLine: 3184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9571)
!9569 = !DISubroutineType(types: !9570)
!9570 = !{!1017, !3126}
!9571 = !{!9572, !9573}
!9572 = !DILocalVariable(name: "pucStackByte", arg: 1, scope: !9568, file: !1309, line: 3183, type: !3126)
!9573 = !DILocalVariable(name: "ulCount", scope: !9568, file: !1309, line: 3185, type: !136)
!9574 = !DILocation(line: 0, scope: !9568)
!9575 = !DILocation(line: 3187, column: 10, scope: !9568)
!9576 = !DILocation(line: 3187, column: 24, scope: !9568)
!9577 = !DILocation(line: 3187, column: 3, scope: !9568)
!9578 = !DILocation(line: 3189, column: 17, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9568, file: !1309, line: 3188, column: 3)
!9580 = !DILocation(line: 3190, column: 11, scope: !9579)
!9581 = distinct !{!9581, !9577, !9582}
!9582 = !DILocation(line: 3191, column: 3, scope: !9568)
!9583 = !DILocation(line: 3193, column: 11, scope: !9568)
!9584 = !DILocation(line: 3195, column: 3, scope: !9568)
!9585 = distinct !DISubprogram(name: "vTaskPlaceOnEventList", scope: !1309, file: !1309, line: 2258, type: !9586, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9588)
!9586 = !DISubroutineType(types: !9587)
!9587 = !{null, !1401, !8633}
!9588 = !{!9589, !9590, !9591}
!9589 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !9585, file: !1309, line: 2258, type: !1401)
!9590 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !9585, file: !1309, line: 2258, type: !8633)
!9591 = !DILocalVariable(name: "xTimeToWake", scope: !9585, file: !1309, line: 2260, type: !1352)
!9592 = !DILocation(line: 0, scope: !9585)
!9593 = !DILocation(line: 2262, column: 2, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9585, file: !1309, line: 2262, column: 2)
!9595 = !DILocation(line: 2262, column: 2, scope: !9585)
!9596 = !DILocation(line: 2262, column: 2, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9594, file: !1309, line: 2262, column: 2)
!9598 = !DILocation(line: 2271, column: 31, scope: !9585)
!9599 = !DILocation(line: 2271, column: 45, scope: !9585)
!9600 = !DILocation(line: 2271, column: 2, scope: !9585)
!9601 = !DILocation(line: 2276, column: 23, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9585, file: !1309, line: 2276, column: 6)
!9603 = !DILocation(line: 2276, column: 37, scope: !9602)
!9604 = !DILocation(line: 2276, column: 6, scope: !9602)
!9605 = !DILocation(line: 2276, column: 58, scope: !9602)
!9606 = !DILocation(line: 2276, column: 6, scope: !9585)
!9607 = !DILocation(line: 2280, column: 3, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9602, file: !1309, line: 2277, column: 2)
!9609 = !DILocation(line: 2281, column: 2, scope: !9608)
!9610 = !DILocation(line: 2289, column: 20, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !1309, line: 2289, column: 7)
!9612 = distinct !DILexicalBlock(scope: !9585, file: !1309, line: 2288, column: 2)
!9613 = !DILocation(line: 2289, column: 7, scope: !9612)
!9614 = !DILocation(line: 2294, column: 44, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9611, file: !1309, line: 2290, column: 3)
!9616 = !DILocation(line: 2294, column: 58, scope: !9615)
!9617 = !DILocation(line: 2294, column: 4, scope: !9615)
!9618 = !DILocation(line: 2295, column: 3, scope: !9615)
!9619 = !DILocation(line: 2301, column: 18, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9611, file: !1309, line: 2297, column: 3)
!9621 = !DILocation(line: 2301, column: 29, scope: !9620)
!9622 = !DILocation(line: 2302, column: 4, scope: !9620)
!9623 = !DILocation(line: 2314, column: 1, scope: !9585)
!9624 = distinct !DISubprogram(name: "vTaskPlaceOnUnorderedEventList", scope: !1309, file: !1309, line: 2317, type: !9625, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9627)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{null, !1373, !8633, !8633}
!9627 = !{!9628, !9629, !9630, !9631}
!9628 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !9624, file: !1309, line: 2317, type: !1373)
!9629 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !9624, file: !1309, line: 2317, type: !8633)
!9630 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !9624, file: !1309, line: 2317, type: !8633)
!9631 = !DILocalVariable(name: "xTimeToWake", scope: !9624, file: !1309, line: 2319, type: !1352)
!9632 = !DILocation(line: 0, scope: !9624)
!9633 = !DILocation(line: 2321, column: 2, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9624, file: !1309, line: 2321, column: 2)
!9635 = !DILocation(line: 2321, column: 2, scope: !9624)
!9636 = !DILocation(line: 2321, column: 2, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9634, file: !1309, line: 2321, column: 2)
!9638 = !DILocation(line: 2325, column: 2, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9624, file: !1309, line: 2325, column: 2)
!9640 = !DILocation(line: 2325, column: 2, scope: !9624)
!9641 = !DILocation(line: 2325, column: 2, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9639, file: !1309, line: 2325, column: 2)
!9643 = !DILocation(line: 2330, column: 2, scope: !9624)
!9644 = !DILocation(line: 2337, column: 34, scope: !9624)
!9645 = !DILocation(line: 2337, column: 48, scope: !9624)
!9646 = !DILocation(line: 2337, column: 2, scope: !9624)
!9647 = !DILocation(line: 2342, column: 23, scope: !9648)
!9648 = distinct !DILexicalBlock(scope: !9624, file: !1309, line: 2342, column: 6)
!9649 = !DILocation(line: 2342, column: 37, scope: !9648)
!9650 = !DILocation(line: 2342, column: 6, scope: !9648)
!9651 = !DILocation(line: 2342, column: 58, scope: !9648)
!9652 = !DILocation(line: 2342, column: 6, scope: !9624)
!9653 = !DILocation(line: 2346, column: 3, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9648, file: !1309, line: 2343, column: 2)
!9655 = !DILocation(line: 2347, column: 2, scope: !9654)
!9656 = !DILocation(line: 2355, column: 20, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9658, file: !1309, line: 2355, column: 7)
!9658 = distinct !DILexicalBlock(scope: !9624, file: !1309, line: 2354, column: 2)
!9659 = !DILocation(line: 2355, column: 7, scope: !9658)
!9660 = !DILocation(line: 2360, column: 44, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9657, file: !1309, line: 2356, column: 3)
!9662 = !DILocation(line: 2360, column: 58, scope: !9661)
!9663 = !DILocation(line: 2360, column: 4, scope: !9661)
!9664 = !DILocation(line: 2361, column: 3, scope: !9661)
!9665 = !DILocation(line: 2367, column: 18, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9657, file: !1309, line: 2363, column: 3)
!9667 = !DILocation(line: 2367, column: 29, scope: !9666)
!9668 = !DILocation(line: 2368, column: 4, scope: !9666)
!9669 = !DILocation(line: 2380, column: 1, scope: !9624)
!9670 = distinct !DISubprogram(name: "vTaskPlaceOnEventListRestricted", scope: !1309, file: !1309, line: 2385, type: !9586, scopeLine: 2386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9671)
!9671 = !{!9672, !9673, !9674}
!9672 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !9670, file: !1309, line: 2385, type: !1401)
!9673 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !9670, file: !1309, line: 2385, type: !8633)
!9674 = !DILocalVariable(name: "xTimeToWake", scope: !9670, file: !1309, line: 2387, type: !1352)
!9675 = !DILocation(line: 0, scope: !9670)
!9676 = !DILocation(line: 2389, column: 3, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9670, file: !1309, line: 2389, column: 3)
!9678 = !DILocation(line: 2389, column: 3, scope: !9670)
!9679 = !DILocation(line: 2389, column: 3, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9677, file: !1309, line: 2389, column: 3)
!9681 = !DILocation(line: 2401, column: 35, scope: !9670)
!9682 = !DILocation(line: 2401, column: 49, scope: !9670)
!9683 = !DILocation(line: 2401, column: 3, scope: !9670)
!9684 = !DILocation(line: 2406, column: 24, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9670, file: !1309, line: 2406, column: 7)
!9686 = !DILocation(line: 2406, column: 38, scope: !9685)
!9687 = !DILocation(line: 2406, column: 7, scope: !9685)
!9688 = !DILocation(line: 2406, column: 59, scope: !9685)
!9689 = !DILocation(line: 2406, column: 7, scope: !9670)
!9690 = !DILocation(line: 2410, column: 4, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9685, file: !1309, line: 2407, column: 3)
!9692 = !DILocation(line: 2411, column: 3, scope: !9691)
!9693 = !DILocation(line: 2419, column: 17, scope: !9670)
!9694 = !DILocation(line: 2419, column: 28, scope: !9670)
!9695 = !DILocation(line: 2422, column: 3, scope: !9670)
!9696 = !DILocation(line: 2423, column: 2, scope: !9670)
!9697 = distinct !DISubprogram(name: "xTaskRemoveFromEventList", scope: !1309, file: !1309, line: 2428, type: !9698, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9703)
!9698 = !DISubroutineType(types: !9699)
!9699 = !{!1337, !9700}
!9700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9701)
!9701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9702, size: 32)
!9702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1374)
!9703 = !{!9704, !9705, !9706}
!9704 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !9697, file: !1309, line: 2428, type: !9700)
!9705 = !DILocalVariable(name: "pxUnblockedTCB", scope: !9697, file: !1309, line: 2430, type: !1338)
!9706 = !DILocalVariable(name: "xReturn", scope: !9697, file: !1309, line: 2431, type: !1337)
!9707 = !DILocation(line: 0, scope: !9697)
!9708 = !DILocation(line: 2446, column: 31, scope: !9697)
!9709 = !DILocation(line: 2447, column: 2, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9697, file: !1309, line: 2447, column: 2)
!9711 = !DILocation(line: 2447, column: 2, scope: !9697)
!9712 = !DILocation(line: 2447, column: 2, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9710, file: !1309, line: 2447, column: 2)
!9714 = !DILocation(line: 2448, column: 44, scope: !9697)
!9715 = !DILocation(line: 2448, column: 11, scope: !9697)
!9716 = !DILocation(line: 2450, column: 6, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9697, file: !1309, line: 2450, column: 6)
!9718 = !DILocation(line: 2450, column: 27, scope: !9717)
!9719 = !DILocation(line: 2450, column: 6, scope: !9697)
!9720 = !DILocation(line: 2452, column: 45, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9717, file: !1309, line: 2451, column: 2)
!9722 = !DILocation(line: 2452, column: 12, scope: !9721)
!9723 = !DILocation(line: 2453, column: 3, scope: !9721)
!9724 = !DILocation(line: 2454, column: 2, scope: !9721)
!9725 = !DILocation(line: 2459, column: 3, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9717, file: !1309, line: 2456, column: 2)
!9727 = !DILocation(line: 2462, column: 22, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9697, file: !1309, line: 2462, column: 6)
!9729 = !DILocation(line: 2462, column: 35, scope: !9728)
!9730 = !DILocation(line: 2462, column: 49, scope: !9728)
!9731 = !DILocation(line: 2462, column: 33, scope: !9728)
!9732 = !DILocation(line: 2462, column: 6, scope: !9697)
!9733 = !DILocation(line: 2471, column: 17, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9728, file: !1309, line: 2463, column: 2)
!9735 = !DILocation(line: 2472, column: 2, scope: !9734)
!9736 = !DILocation(line: 0, scope: !9728)
!9737 = !DILocation(line: 2492, column: 2, scope: !9697)
!9738 = distinct !DISubprogram(name: "xTaskRemoveFromUnorderedEventList", scope: !1309, file: !1309, line: 2496, type: !9739, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9741)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{!1337, !1379, !8633}
!9741 = !{!9742, !9743, !9744, !9745}
!9742 = !DILocalVariable(name: "pxEventListItem", arg: 1, scope: !9738, file: !1309, line: 2496, type: !1379)
!9743 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !9738, file: !1309, line: 2496, type: !8633)
!9744 = !DILocalVariable(name: "pxUnblockedTCB", scope: !9738, file: !1309, line: 2498, type: !1338)
!9745 = !DILocalVariable(name: "xReturn", scope: !9738, file: !1309, line: 2499, type: !1337)
!9746 = !DILocation(line: 0, scope: !9738)
!9747 = !DILocation(line: 2503, column: 2, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9738, file: !1309, line: 2503, column: 2)
!9749 = !DILocation(line: 2503, column: 2, scope: !9738)
!9750 = !DILocation(line: 2503, column: 2, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9748, file: !1309, line: 2503, column: 2)
!9752 = !DILocation(line: 2506, column: 2, scope: !9738)
!9753 = !DILocation(line: 2510, column: 31, scope: !9738)
!9754 = !DILocation(line: 2511, column: 2, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9738, file: !1309, line: 2511, column: 2)
!9756 = !DILocation(line: 2511, column: 2, scope: !9738)
!9757 = !DILocation(line: 2511, column: 2, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9755, file: !1309, line: 2511, column: 2)
!9759 = !DILocation(line: 2512, column: 11, scope: !9738)
!9760 = !DILocation(line: 2517, column: 44, scope: !9738)
!9761 = !DILocation(line: 2517, column: 11, scope: !9738)
!9762 = !DILocation(line: 2518, column: 2, scope: !9738)
!9763 = !DILocation(line: 2520, column: 22, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9738, file: !1309, line: 2520, column: 6)
!9765 = !DILocation(line: 2520, column: 35, scope: !9764)
!9766 = !DILocation(line: 2520, column: 49, scope: !9764)
!9767 = !DILocation(line: 2520, column: 33, scope: !9764)
!9768 = !DILocation(line: 2520, column: 6, scope: !9738)
!9769 = !DILocation(line: 2530, column: 17, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9764, file: !1309, line: 2521, column: 2)
!9771 = !DILocation(line: 2531, column: 2, scope: !9770)
!9772 = !DILocation(line: 0, scope: !9764)
!9773 = !DILocation(line: 2537, column: 2, scope: !9738)
!9774 = distinct !DISubprogram(name: "vTaskSetTimeOutState", scope: !1309, file: !1309, line: 2541, type: !9775, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9784)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{null, !9777}
!9777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9778)
!9778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9779, size: 32)
!9779 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !1317, line: 138, baseType: !9780)
!9780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !1317, line: 134, size: 64, elements: !9781)
!9781 = !{!9782, !9783}
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !9780, file: !1317, line: 136, baseType: !1337, size: 32)
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !9780, file: !1317, line: 137, baseType: !1352, size: 32, offset: 32)
!9784 = !{!9785}
!9785 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !9774, file: !1309, line: 2541, type: !9777)
!9786 = !DILocation(line: 0, scope: !9774)
!9787 = !DILocation(line: 2543, column: 2, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9774, file: !1309, line: 2543, column: 2)
!9789 = !DILocation(line: 2543, column: 2, scope: !9774)
!9790 = !DILocation(line: 2543, column: 2, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9788, file: !1309, line: 2543, column: 2)
!9792 = !DILocation(line: 2544, column: 30, scope: !9774)
!9793 = !DILocation(line: 2544, column: 13, scope: !9774)
!9794 = !DILocation(line: 2544, column: 28, scope: !9774)
!9795 = !DILocation(line: 2545, column: 31, scope: !9774)
!9796 = !DILocation(line: 2545, column: 13, scope: !9774)
!9797 = !DILocation(line: 2545, column: 29, scope: !9774)
!9798 = !DILocation(line: 2546, column: 1, scope: !9774)
!9799 = distinct !DISubprogram(name: "xTaskCheckForTimeOut", scope: !1309, file: !1309, line: 2549, type: !9800, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9802)
!9800 = !DISubroutineType(types: !9801)
!9801 = !{!1337, !9777, !8631}
!9802 = !{!9803, !9804, !9805, !9806}
!9803 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !9799, file: !1309, line: 2549, type: !9777)
!9804 = !DILocalVariable(name: "pxTicksToWait", arg: 2, scope: !9799, file: !1309, line: 2549, type: !8631)
!9805 = !DILocalVariable(name: "xReturn", scope: !9799, file: !1309, line: 2551, type: !1337)
!9806 = !DILocalVariable(name: "xConstTickCount", scope: !9807, file: !1309, line: 2559, type: !8633)
!9807 = distinct !DILexicalBlock(scope: !9799, file: !1309, line: 2557, column: 2)
!9808 = !DILocation(line: 0, scope: !9799)
!9809 = !DILocation(line: 2553, column: 2, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9799, file: !1309, line: 2553, column: 2)
!9811 = !DILocation(line: 2553, column: 2, scope: !9799)
!9812 = !DILocation(line: 2553, column: 2, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9810, file: !1309, line: 2553, column: 2)
!9814 = !DILocation(line: 2554, column: 2, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9799, file: !1309, line: 2554, column: 2)
!9816 = !DILocation(line: 2554, column: 2, scope: !9799)
!9817 = !DILocation(line: 2554, column: 2, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9815, file: !1309, line: 2554, column: 2)
!9819 = !DILocation(line: 2556, column: 2, scope: !9799)
!9820 = !DILocation(line: 2559, column: 38, scope: !9807)
!9821 = !DILocation(line: 0, scope: !9807)
!9822 = !DILocation(line: 2565, column: 8, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9807, file: !1309, line: 2565, column: 8)
!9824 = !DILocation(line: 2565, column: 23, scope: !9823)
!9825 = !DILocation(line: 2565, column: 8, scope: !9807)
!9826 = !DILocation(line: 2572, column: 9, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9823, file: !1309, line: 2572, column: 7)
!9828 = !DILocation(line: 2572, column: 39, scope: !9827)
!9829 = !DILocation(line: 2572, column: 25, scope: !9827)
!9830 = !DILocation(line: 0, scope: !9827)
!9831 = !DILocation(line: 2572, column: 56, scope: !9827)
!9832 = !DILocation(line: 2580, column: 30, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9827, file: !1309, line: 2580, column: 12)
!9834 = !DILocation(line: 2580, column: 61, scope: !9833)
!9835 = !DILocation(line: 2580, column: 12, scope: !9827)
!9836 = !DILocation(line: 2583, column: 19, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9833, file: !1309, line: 2581, column: 3)
!9838 = !DILocation(line: 2584, column: 4, scope: !9837)
!9839 = !DILocation(line: 2586, column: 3, scope: !9837)
!9840 = !DILocation(line: 0, scope: !9823)
!9841 = !DILocation(line: 2592, column: 2, scope: !9799)
!9842 = !DILocation(line: 2594, column: 2, scope: !9799)
!9843 = distinct !DISubprogram(name: "vTaskMissedYield", scope: !1309, file: !1309, line: 2598, type: !181, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !2135)
!9844 = !DILocation(line: 2600, column: 16, scope: !9843)
!9845 = !DILocation(line: 2601, column: 1, scope: !9843)
!9846 = distinct !DISubprogram(name: "uxTaskGetTaskNumber", scope: !1309, file: !1309, line: 2606, type: !8929, scopeLine: 2607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9847)
!9847 = !{!9848, !9849, !9850}
!9848 = !DILocalVariable(name: "xTask", arg: 1, scope: !9846, file: !1309, line: 2606, type: !1336)
!9849 = !DILocalVariable(name: "uxReturn", scope: !9846, file: !1309, line: 2608, type: !1332)
!9850 = !DILocalVariable(name: "pxTCB", scope: !9846, file: !1309, line: 2609, type: !1338)
!9851 = !DILocation(line: 0, scope: !9846)
!9852 = !DILocation(line: 2611, column: 13, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9846, file: !1309, line: 2611, column: 7)
!9854 = !DILocation(line: 2611, column: 7, scope: !9846)
!9855 = !DILocation(line: 2614, column: 22, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9853, file: !1309, line: 2612, column: 3)
!9857 = !DILocation(line: 2615, column: 3, scope: !9856)
!9858 = !DILocation(line: 0, scope: !9853)
!9859 = !DILocation(line: 2621, column: 3, scope: !9846)
!9860 = distinct !DISubprogram(name: "vTaskSetTaskNumber", scope: !1309, file: !1309, line: 2629, type: !9861, scopeLine: 2630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9863)
!9861 = !DISubroutineType(types: !9862)
!9862 = !{null, !1336, !9437}
!9863 = !{!9864, !9865, !9866}
!9864 = !DILocalVariable(name: "xTask", arg: 1, scope: !9860, file: !1309, line: 2629, type: !1336)
!9865 = !DILocalVariable(name: "uxHandle", arg: 2, scope: !9860, file: !1309, line: 2629, type: !9437)
!9866 = !DILocalVariable(name: "pxTCB", scope: !9860, file: !1309, line: 2631, type: !1338)
!9867 = !DILocation(line: 0, scope: !9860)
!9868 = !DILocation(line: 2633, column: 13, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9860, file: !1309, line: 2633, column: 7)
!9870 = !DILocation(line: 2633, column: 7, scope: !9860)
!9871 = !DILocation(line: 2636, column: 11, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9869, file: !1309, line: 2634, column: 3)
!9873 = !DILocation(line: 2636, column: 24, scope: !9872)
!9874 = !DILocation(line: 2637, column: 3, scope: !9872)
!9875 = !DILocation(line: 2638, column: 2, scope: !9860)
!9876 = distinct !DISubprogram(name: "uxTaskGetStackHighWaterMark", scope: !1309, file: !1309, line: 3203, type: !8929, scopeLine: 3204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9877)
!9877 = !{!9878, !9879, !9880, !9881}
!9878 = !DILocalVariable(name: "xTask", arg: 1, scope: !9876, file: !1309, line: 3203, type: !1336)
!9879 = !DILocalVariable(name: "pxTCB", scope: !9876, file: !1309, line: 3205, type: !1338)
!9880 = !DILocalVariable(name: "pucEndOfStack", scope: !9876, file: !1309, line: 3206, type: !340)
!9881 = !DILocalVariable(name: "uxReturn", scope: !9876, file: !1309, line: 3207, type: !1332)
!9882 = !DILocation(line: 0, scope: !9876)
!9883 = !DILocation(line: 3209, column: 11, scope: !9876)
!9884 = !DILocation(line: 3213, column: 41, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9876, file: !1309, line: 3212, column: 3)
!9886 = !DILocation(line: 3221, column: 30, scope: !9876)
!9887 = !DILocation(line: 3221, column: 14, scope: !9876)
!9888 = !DILocation(line: 3223, column: 3, scope: !9876)
!9889 = distinct !DISubprogram(name: "xTaskGetCurrentTaskHandle", scope: !1309, file: !1309, line: 3294, type: !9890, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9892)
!9890 = !DISubroutineType(types: !9891)
!9891 = !{!1336}
!9892 = !{!9893}
!9893 = !DILocalVariable(name: "xReturn", scope: !9889, file: !1309, line: 3296, type: !1336)
!9894 = !DILocation(line: 3301, column: 13, scope: !9889)
!9895 = !DILocation(line: 0, scope: !9889)
!9896 = !DILocation(line: 3303, column: 3, scope: !9889)
!9897 = distinct !DISubprogram(name: "xTaskGetSchedulerState", scope: !1309, file: !1309, line: 3311, type: !8733, scopeLine: 3312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9898)
!9898 = !{!9899}
!9899 = !DILocalVariable(name: "xReturn", scope: !9897, file: !1309, line: 3313, type: !1337)
!9900 = !DILocation(line: 3315, column: 7, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9897, file: !1309, line: 3315, column: 7)
!9902 = !DILocation(line: 3315, column: 25, scope: !9901)
!9903 = !DILocation(line: 3315, column: 7, scope: !9897)
!9904 = !DILocation(line: 3321, column: 8, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9906, file: !1309, line: 3321, column: 8)
!9906 = distinct !DILexicalBlock(scope: !9901, file: !1309, line: 3320, column: 3)
!9907 = !DILocation(line: 3321, column: 29, scope: !9905)
!9908 = !DILocation(line: 0, scope: !9901)
!9909 = !DILocation(line: 0, scope: !9897)
!9910 = !DILocation(line: 3331, column: 3, scope: !9897)
!9911 = distinct !DISubprogram(name: "vTaskPriorityInherit", scope: !1309, file: !1309, line: 3339, type: !9912, scopeLine: 3340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9914)
!9912 = !DISubroutineType(types: !9913)
!9913 = !{null, !9209}
!9914 = !{!9915, !9916}
!9915 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !9911, file: !1309, line: 3339, type: !9209)
!9916 = !DILocalVariable(name: "pxTCB", scope: !9911, file: !1309, line: 3341, type: !8488)
!9917 = !DILocation(line: 0, scope: !9911)
!9918 = !DILocation(line: 3345, column: 21, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9911, file: !1309, line: 3345, column: 7)
!9920 = !DILocation(line: 3345, column: 7, scope: !9911)
!9921 = !DILocation(line: 3347, column: 15, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9923, file: !1309, line: 3347, column: 8)
!9923 = distinct !DILexicalBlock(scope: !9919, file: !1309, line: 3346, column: 3)
!9924 = !DILocation(line: 3347, column: 28, scope: !9922)
!9925 = !DILocation(line: 3347, column: 42, scope: !9922)
!9926 = !DILocation(line: 3347, column: 26, scope: !9922)
!9927 = !DILocation(line: 3347, column: 8, scope: !9923)
!9928 = !DILocation(line: 3352, column: 11, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9930, file: !1309, line: 3352, column: 9)
!9930 = distinct !DILexicalBlock(scope: !9922, file: !1309, line: 3348, column: 4)
!9931 = !DILocation(line: 3352, column: 102, scope: !9929)
!9932 = !DILocation(line: 3352, column: 9, scope: !9930)
!9933 = !DILocation(line: 3354, column: 6, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9929, file: !1309, line: 3353, column: 5)
!9935 = !DILocation(line: 3355, column: 5, scope: !9934)
!9936 = !DILocation(line: 3363, column: 9, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9930, file: !1309, line: 3363, column: 9)
!9938 = !DILocation(line: 3363, column: 9, scope: !9930)
!9939 = !DILocation(line: 3365, column: 10, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9941, file: !1309, line: 3365, column: 10)
!9941 = distinct !DILexicalBlock(scope: !9937, file: !1309, line: 3364, column: 5)
!9942 = !DILocation(line: 3365, column: 55, scope: !9940)
!9943 = !DILocation(line: 3365, column: 10, scope: !9941)
!9944 = !DILocation(line: 3367, column: 7, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !1309, line: 3367, column: 7)
!9946 = distinct !DILexicalBlock(scope: !9947, file: !1309, line: 3367, column: 7)
!9947 = distinct !DILexicalBlock(scope: !9940, file: !1309, line: 3366, column: 6)
!9948 = !DILocation(line: 3367, column: 7, scope: !9946)
!9949 = !DILocation(line: 3367, column: 7, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9945, file: !1309, line: 3367, column: 7)
!9951 = !DILocation(line: 3375, column: 26, scope: !9941)
!9952 = !DILocation(line: 3375, column: 40, scope: !9941)
!9953 = !DILocation(line: 3375, column: 24, scope: !9941)
!9954 = !DILocation(line: 3376, column: 6, scope: !9941)
!9955 = !DILocation(line: 3377, column: 5, scope: !9941)
!9956 = !DILocation(line: 3381, column: 26, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9937, file: !1309, line: 3379, column: 5)
!9958 = !DILocation(line: 3381, column: 40, scope: !9957)
!9959 = !DILocation(line: 3381, column: 24, scope: !9957)
!9960 = !DILocation(line: 3395, column: 2, scope: !9911)
!9961 = distinct !DISubprogram(name: "xTaskPriorityDisinherit", scope: !1309, file: !1309, line: 3402, type: !9207, scopeLine: 3403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !9962)
!9962 = !{!9963, !9964, !9965}
!9963 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !9961, file: !1309, line: 3402, type: !9209)
!9964 = !DILocalVariable(name: "pxTCB", scope: !9961, file: !1309, line: 3404, type: !8488)
!9965 = !DILocalVariable(name: "xReturn", scope: !9961, file: !1309, line: 3405, type: !1337)
!9966 = !DILocation(line: 0, scope: !9961)
!9967 = !DILocation(line: 3407, column: 21, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9961, file: !1309, line: 3407, column: 7)
!9969 = !DILocation(line: 3407, column: 7, scope: !9961)
!9970 = !DILocation(line: 3409, column: 4, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9972, file: !1309, line: 3409, column: 4)
!9972 = distinct !DILexicalBlock(scope: !9968, file: !1309, line: 3408, column: 3)
!9973 = !DILocation(line: 3409, column: 4, scope: !9972)
!9974 = !DILocation(line: 3409, column: 4, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9971, file: !1309, line: 3409, column: 4)
!9976 = !DILocation(line: 3410, column: 28, scope: !9972)
!9977 = !DILocation(line: 3412, column: 15, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9972, file: !1309, line: 3412, column: 8)
!9979 = !DILocation(line: 3412, column: 36, scope: !9978)
!9980 = !DILocation(line: 3412, column: 26, scope: !9978)
!9981 = !DILocation(line: 3412, column: 8, scope: !9972)
!9982 = !DILocation(line: 3422, column: 34, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9984, file: !1309, line: 3422, column: 10)
!9984 = distinct !DILexicalBlock(scope: !9985, file: !1309, line: 3416, column: 5)
!9985 = distinct !DILexicalBlock(scope: !9986, file: !1309, line: 3415, column: 9)
!9986 = distinct !DILexicalBlock(scope: !9978, file: !1309, line: 3413, column: 4)
!9987 = !DILocation(line: 3422, column: 10, scope: !9983)
!9988 = !DILocation(line: 3422, column: 55, scope: !9983)
!9989 = !DILocation(line: 3422, column: 10, scope: !9984)
!9990 = !DILocation(line: 3424, column: 7, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9992, file: !1309, line: 3424, column: 7)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !1309, line: 3424, column: 7)
!9993 = distinct !DILexicalBlock(scope: !9983, file: !1309, line: 3423, column: 6)
!9994 = !DILocation(line: 3424, column: 7, scope: !9992)
!9995 = !DILocation(line: 3424, column: 7, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9991, file: !1309, line: 3424, column: 7)
!9997 = !DILocation(line: 3434, column: 33, scope: !9984)
!9998 = !DILocation(line: 3434, column: 24, scope: !9984)
!9999 = !DILocation(line: 3439, column: 6, scope: !9984)
!10000 = !DILocation(line: 3440, column: 6, scope: !9984)
!10001 = !DILocation(line: 3451, column: 5, scope: !9984)
!10002 = !DILocation(line: 3467, column: 3, scope: !9961)
!10003 = distinct !DISubprogram(name: "vTaskList", scope: !1309, file: !1309, line: 3565, type: !10004, scopeLine: 3566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !10006)
!10004 = !DISubroutineType(types: !10005)
!10005 = !{null, !331}
!10006 = !{!10007, !10008, !10009, !10010, !10011}
!10007 = !DILocalVariable(name: "pcWriteBuffer", arg: 1, scope: !10003, file: !1309, line: 3565, type: !331)
!10008 = !DILocalVariable(name: "pxTaskStatusArray", scope: !10003, file: !1309, line: 3567, type: !9424)
!10009 = !DILocalVariable(name: "uxArraySize", scope: !10003, file: !1309, line: 3568, type: !1420)
!10010 = !DILocalVariable(name: "x", scope: !10003, file: !1309, line: 3568, type: !1420)
!10011 = !DILocalVariable(name: "cStatus", scope: !10003, file: !1309, line: 3569, type: !332)
!10012 = !DILocation(line: 0, scope: !10003)
!10013 = !DILocation(line: 3568, column: 2, scope: !10003)
!10014 = !DILocation(line: 3568, column: 23, scope: !10003)
!10015 = !DILocation(line: 3568, column: 36, scope: !10003)
!10016 = !DILocation(line: 3597, column: 18, scope: !10003)
!10017 = !DILocation(line: 3601, column: 17, scope: !10003)
!10018 = !DILocation(line: 3601, column: 15, scope: !10003)
!10019 = !DILocation(line: 3604, column: 37, scope: !10003)
!10020 = !DILocation(line: 3604, column: 60, scope: !10003)
!10021 = !DILocation(line: 3604, column: 23, scope: !10003)
!10022 = !DILocation(line: 3606, column: 25, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10003, file: !1309, line: 3606, column: 7)
!10024 = !DILocation(line: 3606, column: 7, scope: !10003)
!10025 = !DILocation(line: 3609, column: 59, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10023, file: !1309, line: 3607, column: 3)
!10027 = !DILocation(line: 3609, column: 18, scope: !10026)
!10028 = !DILocation(line: 3609, column: 16, scope: !10026)
!10029 = !DILocation(line: 3612, column: 11, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10026, file: !1309, line: 3612, column: 4)
!10031 = !DILocation(line: 3612, column: 16, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10030, file: !1309, line: 3612, column: 4)
!10033 = !DILocation(line: 3612, column: 20, scope: !10032)
!10034 = !DILocation(line: 3612, column: 18, scope: !10032)
!10035 = !DILocation(line: 3612, column: 4, scope: !10030)
!10036 = !DILocation(line: 3614, column: 32, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10032, file: !1309, line: 3613, column: 4)
!10038 = !DILocation(line: 3614, column: 36, scope: !10037)
!10039 = !DILocation(line: 3614, column: 5, scope: !10037)
!10040 = !DILocation(line: 3636, column: 77, scope: !10037)
!10041 = !DILocation(line: 3636, column: 81, scope: !10037)
!10042 = !DILocation(line: 3636, column: 21, scope: !10037)
!10043 = !DILocation(line: 3639, column: 98, scope: !10037)
!10044 = !DILocation(line: 3639, column: 102, scope: !10037)
!10045 = !DILocation(line: 3639, column: 157, scope: !10037)
!10046 = !DILocation(line: 3639, column: 161, scope: !10037)
!10047 = !DILocation(line: 3639, column: 121, scope: !10037)
!10048 = !DILocation(line: 3639, column: 219, scope: !10037)
!10049 = !DILocation(line: 3639, column: 223, scope: !10037)
!10050 = !DILocation(line: 3639, column: 5, scope: !10037)
!10051 = !DILocation(line: 3640, column: 22, scope: !10037)
!10052 = !DILocation(line: 3640, column: 19, scope: !10037)
!10053 = !DILocation(line: 3612, column: 34, scope: !10032)
!10054 = distinct !{!10054, !10035, !10055}
!10055 = !DILocation(line: 3641, column: 4, scope: !10030)
!10056 = !DILocation(line: 3644, column: 4, scope: !10026)
!10057 = !DILocation(line: 3645, column: 3, scope: !10026)
!10058 = !DILocation(line: 3650, column: 2, scope: !10003)
!10059 = distinct !DISubprogram(name: "prvWriteNameToBuffer", scope: !1309, file: !1309, line: 3539, type: !10060, scopeLine: 3540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !10062)
!10060 = !DISubroutineType(types: !10061)
!10061 = !{!331, !331, !444}
!10062 = !{!10063, !10064, !10065}
!10063 = !DILocalVariable(name: "pcBuffer", arg: 1, scope: !10059, file: !1309, line: 3539, type: !331)
!10064 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !10059, file: !1309, line: 3539, type: !444)
!10065 = !DILocalVariable(name: "x", scope: !10059, file: !1309, line: 3541, type: !1337)
!10066 = !DILocation(line: 0, scope: !10059)
!10067 = !DILocation(line: 3544, column: 3, scope: !10059)
!10068 = !DILocation(line: 3548, column: 12, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10059, file: !1309, line: 3548, column: 3)
!10070 = !DILocation(line: 3548, column: 34, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10069, file: !1309, line: 3548, column: 3)
!10072 = !DILocation(line: 3548, column: 3, scope: !10069)
!10073 = !DILocation(line: 3550, column: 4, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10071, file: !1309, line: 3549, column: 3)
!10075 = !DILocation(line: 3550, column: 18, scope: !10074)
!10076 = !DILocation(line: 3548, column: 70, scope: !10071)
!10077 = distinct !{!10077, !10072, !10078}
!10078 = !DILocation(line: 3551, column: 3, scope: !10069)
!10079 = !DILocation(line: 0, scope: !10069)
!10080 = !DILocation(line: 3554, column: 3, scope: !10059)
!10081 = !DILocation(line: 3554, column: 17, scope: !10059)
!10082 = !DILocation(line: 3557, column: 3, scope: !10059)
!10083 = distinct !DISubprogram(name: "uxTaskResetEventItemValue", scope: !1309, file: !1309, line: 3779, type: !9383, scopeLine: 3780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !10084)
!10084 = !{!10085}
!10085 = !DILocalVariable(name: "uxReturn", scope: !10083, file: !1309, line: 3781, type: !1352)
!10086 = !DILocation(line: 3783, column: 13, scope: !10083)
!10087 = !DILocation(line: 0, scope: !10083)
!10088 = !DILocation(line: 3787, column: 2, scope: !10083)
!10089 = !DILocation(line: 3789, column: 2, scope: !10083)
!10090 = distinct !DISubprogram(name: "pvTaskIncrementMutexHeldCount", scope: !1309, file: !1309, line: 3795, type: !10091, scopeLine: 3796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !2135)
!10091 = !DISubroutineType(types: !952)
!10092 = !DILocation(line: 3799, column: 7, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10090, file: !1309, line: 3799, column: 7)
!10094 = !DILocation(line: 3799, column: 20, scope: !10093)
!10095 = !DILocation(line: 3799, column: 7, scope: !10090)
!10096 = !DILocation(line: 3801, column: 6, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10093, file: !1309, line: 3800, column: 3)
!10098 = !DILocation(line: 3801, column: 20, scope: !10097)
!10099 = !DILocation(line: 3801, column: 35, scope: !10097)
!10100 = !DILocation(line: 3802, column: 3, scope: !10097)
!10101 = !DILocation(line: 3804, column: 10, scope: !10090)
!10102 = !DILocation(line: 3804, column: 3, scope: !10090)
!10103 = distinct !DISubprogram(name: "ulTaskNotifyTake", scope: !1309, file: !1309, line: 3812, type: !10104, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !10106)
!10104 = !DISubroutineType(types: !10105)
!10105 = !{!136, !1337, !1352}
!10106 = !{!10107, !10108, !10109, !10110}
!10107 = !DILocalVariable(name: "xClearCountOnExit", arg: 1, scope: !10103, file: !1309, line: 3812, type: !1337)
!10108 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !10103, file: !1309, line: 3812, type: !1352)
!10109 = !DILocalVariable(name: "xTimeToWake", scope: !10103, file: !1309, line: 3814, type: !1352)
!10110 = !DILocalVariable(name: "ulReturn", scope: !10103, file: !1309, line: 3815, type: !136)
!10111 = !DILocation(line: 0, scope: !10103)
!10112 = !DILocation(line: 3817, column: 3, scope: !10103)
!10113 = !DILocation(line: 3820, column: 8, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10115, file: !1309, line: 3820, column: 8)
!10115 = distinct !DILexicalBlock(scope: !10103, file: !1309, line: 3818, column: 3)
!10116 = !DILocation(line: 3820, column: 22, scope: !10114)
!10117 = !DILocation(line: 3820, column: 38, scope: !10114)
!10118 = !DILocation(line: 3820, column: 8, scope: !10115)
!10119 = !DILocation(line: 3823, column: 5, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10114, file: !1309, line: 3821, column: 4)
!10121 = !DILocation(line: 3823, column: 19, scope: !10120)
!10122 = !DILocation(line: 3823, column: 32, scope: !10120)
!10123 = !DILocation(line: 3825, column: 22, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10120, file: !1309, line: 3825, column: 9)
!10125 = !DILocation(line: 3825, column: 9, scope: !10120)
!10126 = !DILocation(line: 3829, column: 27, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10128, file: !1309, line: 3829, column: 10)
!10128 = distinct !DILexicalBlock(scope: !10124, file: !1309, line: 3826, column: 5)
!10129 = !DILocation(line: 3829, column: 41, scope: !10127)
!10130 = !DILocation(line: 3829, column: 10, scope: !10127)
!10131 = !DILocation(line: 3829, column: 62, scope: !10127)
!10132 = !DILocation(line: 3829, column: 10, scope: !10128)
!10133 = !DILocation(line: 3834, column: 7, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10127, file: !1309, line: 3830, column: 6)
!10135 = !DILocation(line: 3835, column: 6, scope: !10134)
!10136 = !DILocation(line: 3843, column: 24, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10138, file: !1309, line: 3843, column: 11)
!10138 = distinct !DILexicalBlock(scope: !10128, file: !1309, line: 3842, column: 6)
!10139 = !DILocation(line: 3843, column: 11, scope: !10138)
!10140 = !DILocation(line: 3849, column: 48, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10137, file: !1309, line: 3844, column: 7)
!10142 = !DILocation(line: 3849, column: 62, scope: !10141)
!10143 = !DILocation(line: 3849, column: 8, scope: !10141)
!10144 = !DILocation(line: 3850, column: 7, scope: !10141)
!10145 = !DILocation(line: 3857, column: 22, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10137, file: !1309, line: 3852, column: 7)
!10147 = !DILocation(line: 3857, column: 33, scope: !10146)
!10148 = !DILocation(line: 3858, column: 8, scope: !10146)
!10149 = !DILocation(line: 3876, column: 6, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10128, file: !1309, line: 3876, column: 6)
!10151 = !{i64 2148494837}
!10152 = !{i64 2148494877}
!10153 = !DILocation(line: 3877, column: 5, scope: !10128)
!10154 = !DILocation(line: 3888, column: 3, scope: !10103)
!10155 = !DILocation(line: 3890, column: 3, scope: !10103)
!10156 = !DILocation(line: 3892, column: 15, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10103, file: !1309, line: 3891, column: 3)
!10158 = !DILocation(line: 3892, column: 29, scope: !10157)
!10159 = !DILocation(line: 3894, column: 17, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10157, file: !1309, line: 3894, column: 8)
!10161 = !DILocation(line: 3894, column: 8, scope: !10157)
!10162 = !DILocation(line: 3896, column: 27, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10164, file: !1309, line: 3896, column: 9)
!10164 = distinct !DILexicalBlock(scope: !10160, file: !1309, line: 3895, column: 4)
!10165 = !DILocation(line: 0, scope: !10163)
!10166 = !DILocation(line: 3896, column: 9, scope: !10164)
!10167 = !DILocation(line: 3902, column: 39, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10163, file: !1309, line: 3901, column: 5)
!10169 = !DILocation(line: 3910, column: 4, scope: !10157)
!10170 = !DILocation(line: 3910, column: 18, scope: !10157)
!10171 = !DILocation(line: 3910, column: 31, scope: !10157)
!10172 = !DILocation(line: 3912, column: 3, scope: !10103)
!10173 = !DILocation(line: 3914, column: 3, scope: !10103)
!10174 = distinct !DISubprogram(name: "xTaskNotifyWait", scope: !1309, file: !1309, line: 3922, type: !10175, scopeLine: 3923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !10177)
!10175 = !DISubroutineType(types: !10176)
!10176 = !{!1337, !136, !136, !3543, !1352}
!10177 = !{!10178, !10179, !10180, !10181, !10182, !10183}
!10178 = !DILocalVariable(name: "ulBitsToClearOnEntry", arg: 1, scope: !10174, file: !1309, line: 3922, type: !136)
!10179 = !DILocalVariable(name: "ulBitsToClearOnExit", arg: 2, scope: !10174, file: !1309, line: 3922, type: !136)
!10180 = !DILocalVariable(name: "pulNotificationValue", arg: 3, scope: !10174, file: !1309, line: 3922, type: !3543)
!10181 = !DILocalVariable(name: "xTicksToWait", arg: 4, scope: !10174, file: !1309, line: 3922, type: !1352)
!10182 = !DILocalVariable(name: "xTimeToWake", scope: !10174, file: !1309, line: 3924, type: !1352)
!10183 = !DILocalVariable(name: "xReturn", scope: !10174, file: !1309, line: 3925, type: !1337)
!10184 = !DILocation(line: 0, scope: !10174)
!10185 = !DILocation(line: 3927, column: 3, scope: !10174)
!10186 = !DILocation(line: 3930, column: 8, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10188, file: !1309, line: 3930, column: 8)
!10188 = distinct !DILexicalBlock(scope: !10174, file: !1309, line: 3928, column: 3)
!10189 = !DILocation(line: 3930, column: 22, scope: !10187)
!10190 = !DILocation(line: 3930, column: 35, scope: !10187)
!10191 = !DILocation(line: 3930, column: 8, scope: !10188)
!10192 = !DILocation(line: 3935, column: 38, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10187, file: !1309, line: 3931, column: 4)
!10194 = !DILocation(line: 3935, column: 5, scope: !10193)
!10195 = !DILocation(line: 3935, column: 19, scope: !10193)
!10196 = !DILocation(line: 3935, column: 35, scope: !10193)
!10197 = !DILocation(line: 3938, column: 5, scope: !10193)
!10198 = !DILocation(line: 3938, column: 19, scope: !10193)
!10199 = !DILocation(line: 3938, column: 32, scope: !10193)
!10200 = !DILocation(line: 3940, column: 22, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10193, file: !1309, line: 3940, column: 9)
!10202 = !DILocation(line: 3940, column: 9, scope: !10193)
!10203 = !DILocation(line: 3944, column: 27, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10205, file: !1309, line: 3944, column: 10)
!10205 = distinct !DILexicalBlock(scope: !10201, file: !1309, line: 3941, column: 5)
!10206 = !DILocation(line: 3944, column: 41, scope: !10204)
!10207 = !DILocation(line: 3944, column: 10, scope: !10204)
!10208 = !DILocation(line: 3944, column: 62, scope: !10204)
!10209 = !DILocation(line: 3944, column: 10, scope: !10205)
!10210 = !DILocation(line: 3949, column: 7, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10204, file: !1309, line: 3945, column: 6)
!10212 = !DILocation(line: 3950, column: 6, scope: !10211)
!10213 = !DILocation(line: 3958, column: 24, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10215, file: !1309, line: 3958, column: 11)
!10215 = distinct !DILexicalBlock(scope: !10205, file: !1309, line: 3957, column: 6)
!10216 = !DILocation(line: 3958, column: 11, scope: !10215)
!10217 = !DILocation(line: 3964, column: 48, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10214, file: !1309, line: 3959, column: 7)
!10219 = !DILocation(line: 3964, column: 62, scope: !10218)
!10220 = !DILocation(line: 3964, column: 8, scope: !10218)
!10221 = !DILocation(line: 3965, column: 7, scope: !10218)
!10222 = !DILocation(line: 3972, column: 22, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10214, file: !1309, line: 3967, column: 7)
!10224 = !DILocation(line: 3972, column: 33, scope: !10223)
!10225 = !DILocation(line: 3973, column: 8, scope: !10223)
!10226 = !DILocation(line: 3991, column: 6, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10205, file: !1309, line: 3991, column: 6)
!10228 = !{i64 2148495608}
!10229 = !{i64 2148495648}
!10230 = !DILocation(line: 3992, column: 5, scope: !10205)
!10231 = !DILocation(line: 4003, column: 3, scope: !10174)
!10232 = !DILocation(line: 4005, column: 3, scope: !10174)
!10233 = !DILocation(line: 4007, column: 29, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10235, file: !1309, line: 4007, column: 8)
!10235 = distinct !DILexicalBlock(scope: !10174, file: !1309, line: 4006, column: 3)
!10236 = !DILocation(line: 4007, column: 8, scope: !10235)
!10237 = !DILocation(line: 4011, column: 29, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10234, file: !1309, line: 4008, column: 4)
!10239 = !DILocation(line: 4011, column: 43, scope: !10238)
!10240 = !DILocation(line: 4011, column: 27, scope: !10238)
!10241 = !DILocation(line: 4012, column: 4, scope: !10238)
!10242 = !DILocation(line: 4018, column: 8, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10235, file: !1309, line: 4018, column: 8)
!10244 = !DILocation(line: 4018, column: 22, scope: !10243)
!10245 = !DILocation(line: 4018, column: 35, scope: !10243)
!10246 = !DILocation(line: 4018, column: 8, scope: !10235)
!10247 = !DILocation(line: 4027, column: 38, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10243, file: !1309, line: 4024, column: 4)
!10249 = !DILocation(line: 4027, column: 5, scope: !10248)
!10250 = !DILocation(line: 4027, column: 19, scope: !10248)
!10251 = !DILocation(line: 4027, column: 35, scope: !10248)
!10252 = !DILocation(line: 0, scope: !10243)
!10253 = !DILocation(line: 4031, column: 4, scope: !10235)
!10254 = !DILocation(line: 4031, column: 18, scope: !10235)
!10255 = !DILocation(line: 4031, column: 31, scope: !10235)
!10256 = !DILocation(line: 4033, column: 3, scope: !10174)
!10257 = !DILocation(line: 4035, column: 3, scope: !10174)
!10258 = distinct !DISubprogram(name: "xTaskNotify", scope: !1309, file: !1309, line: 4043, type: !10259, scopeLine: 4044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !10262)
!10259 = !DISubroutineType(types: !10260)
!10260 = !{!1337, !1336, !136, !10261}
!10261 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyAction", file: !1317, line: 129, baseType: !1324)
!10262 = !{!10263, !10264, !10265, !10266, !10267, !10268}
!10263 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !10258, file: !1309, line: 4043, type: !1336)
!10264 = !DILocalVariable(name: "ulValue", arg: 2, scope: !10258, file: !1309, line: 4043, type: !136)
!10265 = !DILocalVariable(name: "eAction", arg: 3, scope: !10258, file: !1309, line: 4043, type: !10261)
!10266 = !DILocalVariable(name: "pxTCB", scope: !10258, file: !1309, line: 4045, type: !1338)
!10267 = !DILocalVariable(name: "eOriginalNotifyState", scope: !10258, file: !1309, line: 4046, type: !1372)
!10268 = !DILocalVariable(name: "xReturn", scope: !10258, file: !1309, line: 4047, type: !1337)
!10269 = !DILocation(line: 0, scope: !10258)
!10270 = !DILocation(line: 4049, column: 3, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10258, file: !1309, line: 4049, column: 3)
!10272 = !DILocation(line: 4049, column: 3, scope: !10258)
!10273 = !DILocation(line: 4049, column: 3, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10271, file: !1309, line: 4049, column: 3)
!10275 = !DILocation(line: 4052, column: 3, scope: !10258)
!10276 = !DILocation(line: 4054, column: 34, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10258, file: !1309, line: 4053, column: 3)
!10278 = !DILocation(line: 4056, column: 24, scope: !10277)
!10279 = !DILocation(line: 4058, column: 4, scope: !10277)
!10280 = !DILocation(line: 4061, column: 13, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10277, file: !1309, line: 4059, column: 4)
!10282 = !DILocation(line: 4061, column: 29, scope: !10281)
!10283 = !DILocation(line: 4062, column: 6, scope: !10281)
!10284 = !DILocation(line: 4065, column: 15, scope: !10281)
!10285 = !DILocation(line: 4065, column: 32, scope: !10281)
!10286 = !DILocation(line: 4066, column: 6, scope: !10281)
!10287 = !DILocation(line: 4069, column: 13, scope: !10281)
!10288 = !DILocation(line: 4069, column: 29, scope: !10281)
!10289 = !DILocation(line: 4070, column: 6, scope: !10281)
!10290 = !DILocation(line: 4073, column: 31, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10281, file: !1309, line: 4073, column: 10)
!10292 = !DILocation(line: 4073, column: 10, scope: !10281)
!10293 = !DILocation(line: 4075, column: 14, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10291, file: !1309, line: 4074, column: 6)
!10295 = !DILocation(line: 4075, column: 30, scope: !10294)
!10296 = !DILocation(line: 4076, column: 6, scope: !10294)
!10297 = !DILocation(line: 4093, column: 29, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10277, file: !1309, line: 4093, column: 8)
!10299 = !DILocation(line: 4093, column: 8, scope: !10277)
!10300 = !DILocation(line: 4095, column: 38, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10298, file: !1309, line: 4094, column: 4)
!10302 = !DILocation(line: 4095, column: 14, scope: !10301)
!10303 = !DILocation(line: 4096, column: 5, scope: !10301)
!10304 = !DILocation(line: 4099, column: 5, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10301, file: !1309, line: 4099, column: 5)
!10306 = !DILocation(line: 4099, column: 5, scope: !10301)
!10307 = !DILocation(line: 4099, column: 5, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10305, file: !1309, line: 4099, column: 5)
!10309 = !DILocation(line: 4101, column: 16, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10301, file: !1309, line: 4101, column: 9)
!10311 = !DILocation(line: 4101, column: 29, scope: !10310)
!10312 = !DILocation(line: 4101, column: 43, scope: !10310)
!10313 = !DILocation(line: 4101, column: 27, scope: !10310)
!10314 = !DILocation(line: 4101, column: 9, scope: !10301)
!10315 = !DILocation(line: 4105, column: 6, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10317, file: !1309, line: 4105, column: 6)
!10317 = distinct !DILexicalBlock(scope: !10310, file: !1309, line: 4102, column: 5)
!10318 = !{i64 2148497235}
!10319 = !{i64 2148497275}
!10320 = !DILocation(line: 4106, column: 5, scope: !10317)
!10321 = !DILocation(line: 4117, column: 3, scope: !10258)
!10322 = !DILocation(line: 4119, column: 3, scope: !10258)
!10323 = distinct !DISubprogram(name: "xTaskNotifyFromISR", scope: !1309, file: !1309, line: 4127, type: !10324, scopeLine: 4128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !10326)
!10324 = !DISubroutineType(types: !10325)
!10325 = !{!1337, !1336, !136, !10261, !1566}
!10326 = !{!10327, !10328, !10329, !10330, !10331, !10332, !10333, !10334}
!10327 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !10323, file: !1309, line: 4127, type: !1336)
!10328 = !DILocalVariable(name: "ulValue", arg: 2, scope: !10323, file: !1309, line: 4127, type: !136)
!10329 = !DILocalVariable(name: "eAction", arg: 3, scope: !10323, file: !1309, line: 4127, type: !10261)
!10330 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !10323, file: !1309, line: 4127, type: !1566)
!10331 = !DILocalVariable(name: "pxTCB", scope: !10323, file: !1309, line: 4129, type: !1338)
!10332 = !DILocalVariable(name: "eOriginalNotifyState", scope: !10323, file: !1309, line: 4130, type: !1372)
!10333 = !DILocalVariable(name: "xReturn", scope: !10323, file: !1309, line: 4131, type: !1337)
!10334 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10323, file: !1309, line: 4132, type: !1332)
!10335 = !DILocation(line: 0, scope: !10323)
!10336 = !DILocation(line: 4134, column: 3, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10323, file: !1309, line: 4134, column: 3)
!10338 = !DILocation(line: 4134, column: 3, scope: !10323)
!10339 = !DILocation(line: 4134, column: 3, scope: !10340)
!10340 = distinct !DILexicalBlock(scope: !10337, file: !1309, line: 4134, column: 3)
!10341 = !DILocation(line: 4152, column: 3, scope: !10323)
!10342 = !DILocation(line: 231, column: 2, scope: !8951, inlinedAt: !10343)
!10343 = distinct !DILocation(line: 4156, column: 28, scope: !10323)
!10344 = !DILocation(line: 0, scope: !8951, inlinedAt: !10343)
!10345 = !DILocation(line: 4158, column: 34, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10323, file: !1309, line: 4157, column: 3)
!10347 = !DILocation(line: 4160, column: 24, scope: !10346)
!10348 = !DILocation(line: 4162, column: 4, scope: !10346)
!10349 = !DILocation(line: 4165, column: 13, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10346, file: !1309, line: 4163, column: 4)
!10351 = !DILocation(line: 4165, column: 29, scope: !10350)
!10352 = !DILocation(line: 4166, column: 6, scope: !10350)
!10353 = !DILocation(line: 4169, column: 15, scope: !10350)
!10354 = !DILocation(line: 4169, column: 32, scope: !10350)
!10355 = !DILocation(line: 4170, column: 6, scope: !10350)
!10356 = !DILocation(line: 4173, column: 13, scope: !10350)
!10357 = !DILocation(line: 4173, column: 29, scope: !10350)
!10358 = !DILocation(line: 4174, column: 6, scope: !10350)
!10359 = !DILocation(line: 4177, column: 31, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10350, file: !1309, line: 4177, column: 10)
!10361 = !DILocation(line: 4177, column: 10, scope: !10350)
!10362 = !DILocation(line: 4179, column: 14, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10360, file: !1309, line: 4178, column: 6)
!10364 = !DILocation(line: 4179, column: 30, scope: !10363)
!10365 = !DILocation(line: 4180, column: 6, scope: !10363)
!10366 = !DILocation(line: 4197, column: 29, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10346, file: !1309, line: 4197, column: 8)
!10368 = !DILocation(line: 4197, column: 8, scope: !10346)
!10369 = !DILocation(line: 4200, column: 5, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10371, file: !1309, line: 4200, column: 5)
!10371 = distinct !DILexicalBlock(scope: !10367, file: !1309, line: 4198, column: 4)
!10372 = !DILocation(line: 4200, column: 5, scope: !10371)
!10373 = !DILocation(line: 4200, column: 5, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10370, file: !1309, line: 4200, column: 5)
!10375 = !DILocation(line: 4202, column: 9, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10371, file: !1309, line: 4202, column: 9)
!10377 = !DILocation(line: 4202, column: 30, scope: !10376)
!10378 = !DILocation(line: 4202, column: 9, scope: !10371)
!10379 = !DILocation(line: 4204, column: 39, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10376, file: !1309, line: 4203, column: 5)
!10381 = !DILocation(line: 4204, column: 15, scope: !10380)
!10382 = !DILocation(line: 4205, column: 6, scope: !10380)
!10383 = !DILocation(line: 4206, column: 5, scope: !10380)
!10384 = !DILocation(line: 4211, column: 6, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10376, file: !1309, line: 4208, column: 5)
!10386 = !DILocation(line: 4214, column: 16, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10371, file: !1309, line: 4214, column: 9)
!10388 = !DILocation(line: 4214, column: 29, scope: !10387)
!10389 = !DILocation(line: 4214, column: 43, scope: !10387)
!10390 = !DILocation(line: 4214, column: 27, scope: !10387)
!10391 = !DILocation(line: 4214, column: 9, scope: !10371)
!10392 = !DILocation(line: 4220, column: 34, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !1309, line: 4219, column: 6)
!10394 = distinct !DILexicalBlock(scope: !10395, file: !1309, line: 4218, column: 10)
!10395 = distinct !DILexicalBlock(scope: !10387, file: !1309, line: 4215, column: 5)
!10396 = !DILocation(line: 4221, column: 6, scope: !10393)
!10397 = !DILocation(line: 0, scope: !8962, inlinedAt: !10398)
!10398 = distinct !DILocation(line: 4229, column: 3, scope: !10323)
!10399 = !DILocation(line: 249, column: 2, scope: !8962, inlinedAt: !10398)
!10400 = !DILocation(line: 4231, column: 3, scope: !10323)
!10401 = distinct !DISubprogram(name: "vTaskNotifyGiveFromISR", scope: !1309, file: !1309, line: 4239, type: !10402, scopeLine: 4240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !10404)
!10402 = !DISubroutineType(types: !10403)
!10403 = !{null, !1336, !1566}
!10404 = !{!10405, !10406, !10407, !10408, !10409}
!10405 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !10401, file: !1309, line: 4239, type: !1336)
!10406 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !10401, file: !1309, line: 4239, type: !1566)
!10407 = !DILocalVariable(name: "pxTCB", scope: !10401, file: !1309, line: 4241, type: !1338)
!10408 = !DILocalVariable(name: "eOriginalNotifyState", scope: !10401, file: !1309, line: 4242, type: !1372)
!10409 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10401, file: !1309, line: 4243, type: !1332)
!10410 = !DILocation(line: 0, scope: !10401)
!10411 = !DILocation(line: 4245, column: 3, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10401, file: !1309, line: 4245, column: 3)
!10413 = !DILocation(line: 4245, column: 3, scope: !10401)
!10414 = !DILocation(line: 4245, column: 3, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10412, file: !1309, line: 4245, column: 3)
!10416 = !DILocation(line: 4263, column: 3, scope: !10401)
!10417 = !DILocation(line: 231, column: 2, scope: !8951, inlinedAt: !10418)
!10418 = distinct !DILocation(line: 4267, column: 28, scope: !10401)
!10419 = !DILocation(line: 0, scope: !8951, inlinedAt: !10418)
!10420 = !DILocation(line: 4269, column: 34, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10401, file: !1309, line: 4268, column: 3)
!10422 = !DILocation(line: 4270, column: 24, scope: !10421)
!10423 = !DILocation(line: 4274, column: 13, scope: !10421)
!10424 = !DILocation(line: 4274, column: 30, scope: !10421)
!10425 = !DILocation(line: 4278, column: 29, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10421, file: !1309, line: 4278, column: 8)
!10427 = !DILocation(line: 4278, column: 8, scope: !10421)
!10428 = !DILocation(line: 4281, column: 5, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10430, file: !1309, line: 4281, column: 5)
!10430 = distinct !DILexicalBlock(scope: !10426, file: !1309, line: 4279, column: 4)
!10431 = !DILocation(line: 4281, column: 5, scope: !10430)
!10432 = !DILocation(line: 4281, column: 5, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10429, file: !1309, line: 4281, column: 5)
!10434 = !DILocation(line: 4283, column: 9, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10430, file: !1309, line: 4283, column: 9)
!10436 = !DILocation(line: 4283, column: 30, scope: !10435)
!10437 = !DILocation(line: 4283, column: 9, scope: !10430)
!10438 = !DILocation(line: 4285, column: 39, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10435, file: !1309, line: 4284, column: 5)
!10440 = !DILocation(line: 4285, column: 15, scope: !10439)
!10441 = !DILocation(line: 4286, column: 6, scope: !10439)
!10442 = !DILocation(line: 4287, column: 5, scope: !10439)
!10443 = !DILocation(line: 4292, column: 6, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10435, file: !1309, line: 4289, column: 5)
!10445 = !DILocation(line: 4295, column: 16, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10430, file: !1309, line: 4295, column: 9)
!10447 = !DILocation(line: 4295, column: 29, scope: !10446)
!10448 = !DILocation(line: 4295, column: 43, scope: !10446)
!10449 = !DILocation(line: 4295, column: 27, scope: !10446)
!10450 = !DILocation(line: 4295, column: 9, scope: !10430)
!10451 = !DILocation(line: 4301, column: 34, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10453, file: !1309, line: 4300, column: 6)
!10453 = distinct !DILexicalBlock(scope: !10454, file: !1309, line: 4299, column: 10)
!10454 = distinct !DILexicalBlock(scope: !10446, file: !1309, line: 4296, column: 5)
!10455 = !DILocation(line: 4302, column: 6, scope: !10452)
!10456 = !DILocation(line: 0, scope: !8962, inlinedAt: !10457)
!10457 = distinct !DILocation(line: 4310, column: 3, scope: !10401)
!10458 = !DILocation(line: 249, column: 2, scope: !8962, inlinedAt: !10457)
!10459 = !DILocation(line: 4311, column: 2, scope: !10401)
!10460 = distinct !DISubprogram(name: "uxTaskGetBottomOfStack", scope: !1309, file: !1309, line: 4351, type: !8929, scopeLine: 4352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1308, retainedNodes: !10461)
!10461 = !{!10462, !10463}
!10462 = !DILocalVariable(name: "TaskHandle_t", arg: 1, scope: !10460, file: !1309, line: 4351, type: !1336)
!10463 = !DILocalVariable(name: "pxTCB", scope: !10460, file: !1309, line: 4353, type: !1338)
!10464 = !DILocation(line: 0, scope: !10460)
!10465 = !DILocation(line: 4355, column: 24, scope: !10460)
!10466 = !DILocation(line: 4355, column: 10, scope: !10460)
!10467 = !DILocation(line: 4355, column: 47, scope: !10460)
!10468 = !DILocation(line: 4355, column: 62, scope: !10460)
!10469 = !DILocation(line: 4358, column: 33, scope: !10460)
!10470 = !DILocation(line: 4358, column: 9, scope: !10460)
!10471 = !DILocation(line: 4358, column: 2, scope: !10460)
!10472 = distinct !DISubprogram(name: "vListInitialise", scope: !2085, file: !2085, line: 79, type: !10473, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10476)
!10473 = !DISubroutineType(types: !10474)
!10474 = !{null, !10475}
!10475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2097)
!10476 = !{!10477}
!10477 = !DILocalVariable(name: "pxList", arg: 1, scope: !10472, file: !2085, line: 79, type: !10475)
!10478 = !DILocation(line: 0, scope: !10472)
!10479 = !DILocation(line: 84, column: 48, scope: !10472)
!10480 = !DILocation(line: 84, column: 10, scope: !10472)
!10481 = !DILocation(line: 84, column: 18, scope: !10472)
!10482 = !DILocation(line: 88, column: 19, scope: !10472)
!10483 = !DILocation(line: 88, column: 30, scope: !10472)
!10484 = !DILocation(line: 92, column: 19, scope: !10472)
!10485 = !DILocation(line: 92, column: 26, scope: !10472)
!10486 = !DILocation(line: 93, column: 19, scope: !10472)
!10487 = !DILocation(line: 93, column: 30, scope: !10472)
!10488 = !DILocation(line: 95, column: 10, scope: !10472)
!10489 = !DILocation(line: 95, column: 26, scope: !10472)
!10490 = !DILocation(line: 101, column: 1, scope: !10472)
!10491 = distinct !DISubprogram(name: "vListInitialiseItem", scope: !2085, file: !2085, line: 104, type: !10492, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10495)
!10492 = !DISubroutineType(types: !10493)
!10493 = !{null, !10494}
!10494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2087)
!10495 = !{!10496}
!10496 = !DILocalVariable(name: "pxItem", arg: 1, scope: !10491, file: !2085, line: 104, type: !10494)
!10497 = !DILocation(line: 0, scope: !10491)
!10498 = !DILocation(line: 107, column: 10, scope: !10491)
!10499 = !DILocation(line: 107, column: 22, scope: !10491)
!10500 = !DILocation(line: 113, column: 1, scope: !10491)
!10501 = distinct !DISubprogram(name: "vListInsertEnd", scope: !2085, file: !2085, line: 116, type: !10502, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10504)
!10502 = !DISubroutineType(types: !10503)
!10503 = !{null, !10475, !10494}
!10504 = !{!10505, !10506, !10507}
!10505 = !DILocalVariable(name: "pxList", arg: 1, scope: !10501, file: !2085, line: 116, type: !10475)
!10506 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !10501, file: !2085, line: 116, type: !10494)
!10507 = !DILocalVariable(name: "pxIndex", scope: !10501, file: !2085, line: 118, type: !10494)
!10508 = !DILocation(line: 0, scope: !10501)
!10509 = !DILocation(line: 118, column: 38, scope: !10501)
!10510 = !DILocation(line: 129, column: 17, scope: !10501)
!10511 = !DILocation(line: 129, column: 24, scope: !10501)
!10512 = !DILocation(line: 130, column: 39, scope: !10501)
!10513 = !DILocation(line: 130, column: 17, scope: !10501)
!10514 = !DILocation(line: 130, column: 28, scope: !10501)
!10515 = !DILocation(line: 131, column: 11, scope: !10501)
!10516 = !DILocation(line: 131, column: 23, scope: !10501)
!10517 = !DILocation(line: 131, column: 30, scope: !10501)
!10518 = !DILocation(line: 132, column: 22, scope: !10501)
!10519 = !DILocation(line: 135, column: 17, scope: !10501)
!10520 = !DILocation(line: 135, column: 29, scope: !10501)
!10521 = !DILocation(line: 137, column: 12, scope: !10501)
!10522 = !DILocation(line: 137, column: 29, scope: !10501)
!10523 = !DILocation(line: 138, column: 1, scope: !10501)
!10524 = distinct !DISubprogram(name: "vListInsert", scope: !2085, file: !2085, line: 141, type: !10502, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10525)
!10525 = !{!10526, !10527, !10528, !10529}
!10526 = !DILocalVariable(name: "pxList", arg: 1, scope: !10524, file: !2085, line: 141, type: !10475)
!10527 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !10524, file: !2085, line: 141, type: !10494)
!10528 = !DILocalVariable(name: "pxIterator", scope: !10524, file: !2085, line: 143, type: !2087)
!10529 = !DILocalVariable(name: "xValueOfInsertion", scope: !10524, file: !2085, line: 144, type: !8633)
!10530 = !DILocation(line: 0, scope: !10524)
!10531 = !DILocation(line: 144, column: 53, scope: !10524)
!10532 = !DILocation(line: 160, column: 24, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10524, file: !2085, line: 160, column: 6)
!10534 = !DILocation(line: 160, column: 6, scope: !10524)
!10535 = !DILocation(line: 162, column: 33, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10533, file: !2085, line: 161, column: 2)
!10537 = !DILocation(line: 195, column: 38, scope: !10524)
!10538 = !DILocation(line: 163, column: 2, scope: !10536)
!10539 = !DILocation(line: 188, column: 49, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10541, file: !2085, line: 188, column: 3)
!10541 = distinct !DILexicalBlock(scope: !10533, file: !2085, line: 165, column: 2)
!10542 = !DILocation(line: 188, column: 21, scope: !10540)
!10543 = !DILocation(line: 188, column: 8, scope: !10540)
!10544 = !DILocation(line: 0, scope: !10540)
!10545 = !DILocation(line: 188, column: 73, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10540, file: !2085, line: 188, column: 3)
!10547 = !DILocation(line: 188, column: 81, scope: !10546)
!10548 = !DILocation(line: 188, column: 92, scope: !10546)
!10549 = !DILocation(line: 188, column: 3, scope: !10540)
!10550 = distinct !{!10550, !10549, !10551}
!10551 = !DILocation(line: 192, column: 3, scope: !10540)
!10552 = !DILocation(line: 0, scope: !10533)
!10553 = !DILocation(line: 195, column: 17, scope: !10524)
!10554 = !DILocation(line: 195, column: 24, scope: !10524)
!10555 = !DILocation(line: 196, column: 25, scope: !10524)
!10556 = !DILocation(line: 196, column: 36, scope: !10524)
!10557 = !DILocation(line: 197, column: 17, scope: !10524)
!10558 = !DILocation(line: 197, column: 28, scope: !10524)
!10559 = !DILocation(line: 198, column: 21, scope: !10524)
!10560 = !DILocation(line: 202, column: 17, scope: !10524)
!10561 = !DILocation(line: 202, column: 29, scope: !10524)
!10562 = !DILocation(line: 204, column: 12, scope: !10524)
!10563 = !DILocation(line: 204, column: 29, scope: !10524)
!10564 = !DILocation(line: 205, column: 1, scope: !10524)
!10565 = distinct !DISubprogram(name: "uxListRemove", scope: !2085, file: !2085, line: 208, type: !10566, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2084, retainedNodes: !10568)
!10566 = !DISubroutineType(types: !10567)
!10567 = !{!1332, !10494}
!10568 = !{!10569, !10570}
!10569 = !DILocalVariable(name: "pxItemToRemove", arg: 1, scope: !10565, file: !2085, line: 208, type: !10494)
!10570 = !DILocalVariable(name: "pxList", scope: !10565, file: !2085, line: 212, type: !10475)
!10571 = !DILocation(line: 0, scope: !10565)
!10572 = !DILocation(line: 212, column: 54, scope: !10565)
!10573 = !DILocation(line: 214, column: 55, scope: !10565)
!10574 = !DILocation(line: 214, column: 18, scope: !10565)
!10575 = !DILocation(line: 214, column: 26, scope: !10565)
!10576 = !DILocation(line: 214, column: 37, scope: !10565)
!10577 = !DILocation(line: 215, column: 55, scope: !10565)
!10578 = !DILocation(line: 215, column: 18, scope: !10565)
!10579 = !DILocation(line: 215, column: 30, scope: !10565)
!10580 = !DILocation(line: 215, column: 37, scope: !10565)
!10581 = !DILocation(line: 218, column: 14, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10565, file: !2085, line: 218, column: 6)
!10583 = !DILocation(line: 218, column: 22, scope: !10582)
!10584 = !DILocation(line: 218, column: 6, scope: !10565)
!10585 = !DILocation(line: 220, column: 37, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10582, file: !2085, line: 219, column: 2)
!10587 = !DILocation(line: 220, column: 19, scope: !10586)
!10588 = !DILocation(line: 221, column: 2, scope: !10586)
!10589 = !DILocation(line: 227, column: 30, scope: !10565)
!10590 = !DILocation(line: 228, column: 12, scope: !10565)
!10591 = !DILocation(line: 228, column: 29, scope: !10565)
!10592 = !DILocation(line: 230, column: 2, scope: !10565)
!10593 = distinct !DISubprogram(name: "xQueueGenericReset", scope: !1451, file: !1451, line: 260, type: !10594, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !10596)
!10594 = !DISubroutineType(types: !10595)
!10595 = !{!1337, !1509, !1337}
!10596 = !{!10597, !10598, !10599}
!10597 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10593, file: !1451, line: 260, type: !1509)
!10598 = !DILocalVariable(name: "xNewQueue", arg: 2, scope: !10593, file: !1451, line: 260, type: !1337)
!10599 = !DILocalVariable(name: "pxQueue", scope: !10593, file: !1451, line: 262, type: !10600)
!10600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1453)
!10601 = !DILocation(line: 0, scope: !10593)
!10602 = !DILocation(line: 264, column: 2, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10593, file: !1451, line: 264, column: 2)
!10604 = !DILocation(line: 264, column: 2, scope: !10593)
!10605 = !DILocation(line: 264, column: 2, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10603, file: !1451, line: 264, column: 2)
!10607 = !DILocation(line: 266, column: 2, scope: !10593)
!10608 = !DILocation(line: 268, column: 30, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10593, file: !1451, line: 267, column: 2)
!10610 = !DILocation(line: 268, column: 50, scope: !10609)
!10611 = !DILocation(line: 268, column: 70, scope: !10609)
!10612 = !DILocation(line: 268, column: 59, scope: !10609)
!10613 = !DILocation(line: 268, column: 37, scope: !10609)
!10614 = !DILocation(line: 268, column: 12, scope: !10609)
!10615 = !DILocation(line: 268, column: 19, scope: !10609)
!10616 = !DILocation(line: 269, column: 12, scope: !10609)
!10617 = !DILocation(line: 269, column: 30, scope: !10609)
!10618 = !DILocation(line: 270, column: 12, scope: !10609)
!10619 = !DILocation(line: 270, column: 22, scope: !10609)
!10620 = !DILocation(line: 271, column: 67, scope: !10609)
!10621 = !DILocation(line: 271, column: 90, scope: !10609)
!10622 = !DILocation(line: 271, column: 43, scope: !10609)
!10623 = !DILocation(line: 271, column: 12, scope: !10609)
!10624 = !DILocation(line: 271, column: 14, scope: !10609)
!10625 = !DILocation(line: 271, column: 25, scope: !10609)
!10626 = !DILocation(line: 272, column: 12, scope: !10609)
!10627 = !DILocation(line: 272, column: 20, scope: !10609)
!10628 = !DILocation(line: 273, column: 12, scope: !10609)
!10629 = !DILocation(line: 273, column: 20, scope: !10609)
!10630 = !DILocation(line: 275, column: 17, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10609, file: !1451, line: 275, column: 7)
!10632 = !DILocation(line: 0, scope: !10631)
!10633 = !DILocation(line: 275, column: 7, scope: !10609)
!10634 = !DILocation(line: 282, column: 8, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10636, file: !1451, line: 282, column: 8)
!10636 = distinct !DILexicalBlock(scope: !10631, file: !1451, line: 276, column: 3)
!10637 = !DILocation(line: 282, column: 8, scope: !10636)
!10638 = !DILocation(line: 284, column: 9, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10640, file: !1451, line: 284, column: 9)
!10640 = distinct !DILexicalBlock(scope: !10635, file: !1451, line: 283, column: 4)
!10641 = !DILocation(line: 284, column: 71, scope: !10639)
!10642 = !DILocation(line: 284, column: 9, scope: !10640)
!10643 = !DILocation(line: 286, column: 6, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10645, file: !1451, line: 286, column: 6)
!10645 = distinct !DILexicalBlock(scope: !10639, file: !1451, line: 285, column: 5)
!10646 = !{i64 2148403446}
!10647 = !{i64 2148403486}
!10648 = !DILocation(line: 287, column: 5, scope: !10645)
!10649 = !DILocation(line: 301, column: 33, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10631, file: !1451, line: 299, column: 3)
!10651 = !DILocation(line: 301, column: 4, scope: !10650)
!10652 = !DILocation(line: 302, column: 33, scope: !10650)
!10653 = !DILocation(line: 302, column: 4, scope: !10650)
!10654 = !DILocation(line: 305, column: 2, scope: !10593)
!10655 = !DILocation(line: 309, column: 2, scope: !10593)
!10656 = distinct !DISubprogram(name: "xQueueGenericCreate", scope: !1451, file: !1451, line: 313, type: !10657, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !10659)
!10657 = !DISubroutineType(types: !10658)
!10658 = !{!1509, !9437, !9437, !1403}
!10659 = !{!10660, !10661, !10662, !10663, !10664, !10665, !10666}
!10660 = !DILocalVariable(name: "uxQueueLength", arg: 1, scope: !10656, file: !1451, line: 313, type: !9437)
!10661 = !DILocalVariable(name: "uxItemSize", arg: 2, scope: !10656, file: !1451, line: 313, type: !9437)
!10662 = !DILocalVariable(name: "ucQueueType", arg: 3, scope: !10656, file: !1451, line: 313, type: !1403)
!10663 = !DILocalVariable(name: "pxNewQueue", scope: !10656, file: !1451, line: 315, type: !1453)
!10664 = !DILocalVariable(name: "xQueueSizeInBytes", scope: !10656, file: !1451, line: 316, type: !1387)
!10665 = !DILocalVariable(name: "xReturn", scope: !10656, file: !1451, line: 317, type: !1509)
!10666 = !DILocalVariable(name: "pcAllocatedBuffer", scope: !10656, file: !1451, line: 318, type: !1459)
!10667 = !DILocation(line: 0, scope: !10656)
!10668 = !DILocation(line: 324, column: 2, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10656, file: !1451, line: 324, column: 2)
!10670 = !DILocation(line: 324, column: 2, scope: !10656)
!10671 = !DILocation(line: 324, column: 2, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10669, file: !1451, line: 324, column: 2)
!10673 = !DILocation(line: 326, column: 17, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10656, file: !1451, line: 326, column: 6)
!10675 = !DILocation(line: 326, column: 6, scope: !10656)
!10676 = !DILocation(line: 339, column: 35, scope: !10656)
!10677 = !DILocation(line: 341, column: 24, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10656, file: !1451, line: 341, column: 6)
!10679 = !DILocation(line: 341, column: 6, scope: !10656)
!10680 = !DILocation(line: 345, column: 7, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10678, file: !1451, line: 342, column: 2)
!10682 = !DILocation(line: 0, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10681, file: !1451, line: 345, column: 7)
!10684 = !DILocation(line: 362, column: 15, scope: !10681)
!10685 = !DILocation(line: 362, column: 24, scope: !10681)
!10686 = !DILocation(line: 363, column: 15, scope: !10681)
!10687 = !DILocation(line: 363, column: 26, scope: !10681)
!10688 = !DILocation(line: 364, column: 12, scope: !10681)
!10689 = !DILocation(line: 368, column: 16, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10681, file: !1451, line: 367, column: 3)
!10691 = !DILocation(line: 368, column: 28, scope: !10690)
!10692 = !DILocation(line: 386, column: 2, scope: !10656)
!10693 = !DILocation(line: 386, column: 2, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10695, file: !1451, line: 386, column: 2)
!10695 = distinct !DILexicalBlock(scope: !10656, file: !1451, line: 386, column: 2)
!10696 = !DILocation(line: 388, column: 2, scope: !10656)
!10697 = distinct !DISubprogram(name: "xQueueCreateMutex", scope: !1451, file: !1451, line: 394, type: !10698, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !10700)
!10698 = !DISubroutineType(types: !10699)
!10699 = !{!1509, !1403}
!10700 = !{!10701, !10702}
!10701 = !DILocalVariable(name: "ucQueueType", arg: 1, scope: !10697, file: !1451, line: 394, type: !1403)
!10702 = !DILocalVariable(name: "pxNewQueue", scope: !10697, file: !1451, line: 396, type: !1453)
!10703 = !DILocation(line: 0, scope: !10697)
!10704 = !DILocation(line: 403, column: 30, scope: !10697)
!10705 = !DILocation(line: 404, column: 7, scope: !10697)
!10706 = !DILocation(line: 407, column: 16, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10708, file: !1451, line: 405, column: 3)
!10708 = distinct !DILexicalBlock(scope: !10697, file: !1451, line: 404, column: 7)
!10709 = !DILocation(line: 407, column: 30, scope: !10707)
!10710 = !DILocation(line: 408, column: 16, scope: !10707)
!10711 = !DILocation(line: 408, column: 28, scope: !10707)
!10712 = !DILocation(line: 412, column: 16, scope: !10707)
!10713 = !DILocation(line: 412, column: 26, scope: !10707)
!10714 = !DILocation(line: 413, column: 16, scope: !10707)
!10715 = !DILocation(line: 413, column: 18, scope: !10707)
!10716 = !DILocation(line: 413, column: 29, scope: !10707)
!10717 = !DILocation(line: 418, column: 16, scope: !10707)
!10718 = !DILocation(line: 418, column: 34, scope: !10707)
!10719 = !DILocation(line: 419, column: 16, scope: !10707)
!10720 = !DILocation(line: 419, column: 25, scope: !10707)
!10721 = !DILocation(line: 420, column: 16, scope: !10707)
!10722 = !DILocation(line: 420, column: 27, scope: !10707)
!10723 = !DILocation(line: 421, column: 16, scope: !10707)
!10724 = !DILocation(line: 421, column: 24, scope: !10707)
!10725 = !DILocation(line: 422, column: 16, scope: !10707)
!10726 = !DILocation(line: 422, column: 24, scope: !10707)
!10727 = !DILocation(line: 426, column: 17, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10707, file: !1451, line: 425, column: 4)
!10729 = !DILocation(line: 426, column: 29, scope: !10728)
!10730 = !DILocation(line: 437, column: 36, scope: !10707)
!10731 = !DILocation(line: 437, column: 4, scope: !10707)
!10732 = !DILocation(line: 438, column: 36, scope: !10707)
!10733 = !DILocation(line: 438, column: 4, scope: !10707)
!10734 = !DILocation(line: 443, column: 13, scope: !10707)
!10735 = !DILocation(line: 450, column: 3, scope: !10697)
!10736 = !DILocation(line: 450, column: 3, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10738, file: !1451, line: 450, column: 3)
!10738 = distinct !DILexicalBlock(scope: !10697, file: !1451, line: 450, column: 3)
!10739 = !DILocation(line: 451, column: 3, scope: !10697)
!10740 = distinct !DISubprogram(name: "xQueueGenericSend", scope: !1451, file: !1451, line: 613, type: !10741, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !10745)
!10741 = !DISubroutineType(types: !10742)
!10742 = !{!1337, !1509, !10743, !1352, !10744}
!10743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !488)
!10744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1337)
!10745 = !{!10746, !10747, !10748, !10749, !10750, !10751, !10752, !10758}
!10746 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10740, file: !1451, line: 613, type: !1509)
!10747 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !10740, file: !1451, line: 613, type: !10743)
!10748 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !10740, file: !1451, line: 613, type: !1352)
!10749 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !10740, file: !1451, line: 613, type: !10744)
!10750 = !DILocalVariable(name: "xEntryTimeSet", scope: !10740, file: !1451, line: 615, type: !1337)
!10751 = !DILocalVariable(name: "xYieldRequired", scope: !10740, file: !1451, line: 615, type: !1337)
!10752 = !DILocalVariable(name: "xTimeOut", scope: !10740, file: !1451, line: 616, type: !10753)
!10753 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !1317, line: 138, baseType: !10754)
!10754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !1317, line: 134, size: 64, elements: !10755)
!10755 = !{!10756, !10757}
!10756 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !10754, file: !1317, line: 136, baseType: !1337, size: 32)
!10757 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !10754, file: !1317, line: 137, baseType: !1352, size: 32, offset: 32)
!10758 = !DILocalVariable(name: "pxQueue", scope: !10740, file: !1451, line: 617, type: !10600)
!10759 = !DILocation(line: 0, scope: !10740)
!10760 = !DILocation(line: 616, column: 1, scope: !10740)
!10761 = !DILocation(line: 616, column: 11, scope: !10740)
!10762 = !DILocation(line: 617, column: 27, scope: !10740)
!10763 = !DILocation(line: 619, column: 2, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10740, file: !1451, line: 619, column: 2)
!10765 = !DILocation(line: 619, column: 2, scope: !10740)
!10766 = !DILocation(line: 619, column: 2, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10764, file: !1451, line: 619, column: 2)
!10768 = !DILocation(line: 620, column: 2, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10740, file: !1451, line: 620, column: 2)
!10770 = !DILocation(line: 620, column: 2, scope: !10740)
!10771 = !DILocation(line: 620, column: 2, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10769, file: !1451, line: 620, column: 2)
!10773 = !DILocation(line: 621, column: 2, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10740, file: !1451, line: 621, column: 2)
!10775 = !DILocation(line: 621, column: 2, scope: !10740)
!10776 = !DILocation(line: 621, column: 2, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10774, file: !1451, line: 621, column: 2)
!10778 = !DILocation(line: 624, column: 3, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10780, file: !1451, line: 624, column: 3)
!10780 = distinct !DILexicalBlock(scope: !10740, file: !1451, line: 623, column: 2)
!10781 = !DILocation(line: 624, column: 3, scope: !10780)
!10782 = !DILocation(line: 624, column: 3, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10779, file: !1451, line: 624, column: 3)
!10784 = !DILocation(line: 634, column: 3, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10786, file: !1451, line: 633, column: 2)
!10786 = distinct !DILexicalBlock(scope: !10787, file: !1451, line: 632, column: 2)
!10787 = distinct !DILexicalBlock(scope: !10740, file: !1451, line: 632, column: 2)
!10788 = !DILocation(line: 640, column: 19, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !1451, line: 640, column: 8)
!10790 = distinct !DILexicalBlock(scope: !10785, file: !1451, line: 635, column: 3)
!10791 = !DILocation(line: 640, column: 48, scope: !10789)
!10792 = !DILocation(line: 640, column: 37, scope: !10789)
!10793 = !DILocation(line: 640, column: 59, scope: !10789)
!10794 = !DILocation(line: 733, column: 22, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10796, file: !1451, line: 733, column: 9)
!10796 = distinct !DILexicalBlock(scope: !10789, file: !1451, line: 732, column: 4)
!10797 = !DILocation(line: 733, column: 9, scope: !10796)
!10798 = !DILocation(line: 643, column: 22, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10789, file: !1451, line: 641, column: 4)
!10800 = !DILocation(line: 698, column: 10, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10802, file: !1451, line: 698, column: 10)
!10802 = distinct !DILexicalBlock(scope: !10799, file: !1451, line: 695, column: 5)
!10803 = !DILocation(line: 698, column: 10, scope: !10802)
!10804 = !DILocation(line: 700, column: 11, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10806, file: !1451, line: 700, column: 11)
!10806 = distinct !DILexicalBlock(scope: !10801, file: !1451, line: 699, column: 6)
!10807 = !DILocation(line: 700, column: 76, scope: !10805)
!10808 = !DILocation(line: 700, column: 11, scope: !10806)
!10809 = !DILocation(line: 706, column: 8, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10811, file: !1451, line: 706, column: 8)
!10811 = distinct !DILexicalBlock(scope: !10805, file: !1451, line: 701, column: 7)
!10812 = !{i64 2148406999}
!10813 = !{i64 2148407039}
!10814 = !DILocation(line: 707, column: 7, scope: !10811)
!10815 = !DILocation(line: 713, column: 30, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10801, file: !1451, line: 713, column: 15)
!10817 = !DILocation(line: 713, column: 15, scope: !10801)
!10818 = !DILocation(line: 719, column: 7, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10820, file: !1451, line: 719, column: 7)
!10820 = distinct !DILexicalBlock(scope: !10816, file: !1451, line: 714, column: 6)
!10821 = !{i64 2148407501}
!10822 = !{i64 2148407541}
!10823 = !DILocation(line: 720, column: 6, scope: !10820)
!10824 = !DILocation(line: 728, column: 5, scope: !10799)
!10825 = !DILocation(line: 729, column: 5, scope: !10799)
!10826 = !DILocation(line: 737, column: 6, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10795, file: !1451, line: 734, column: 5)
!10828 = !DILocation(line: 742, column: 6, scope: !10827)
!10829 = !DILocation(line: 748, column: 6, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10831, file: !1451, line: 745, column: 5)
!10831 = distinct !DILexicalBlock(scope: !10795, file: !1451, line: 744, column: 14)
!10832 = !DILocation(line: 750, column: 5, scope: !10830)
!10833 = !DILocation(line: 758, column: 3, scope: !10785)
!10834 = !DILocation(line: 763, column: 3, scope: !10785)
!10835 = !DILocation(line: 764, column: 3, scope: !10785)
!10836 = !DILocation(line: 764, column: 3, scope: !10837)
!10837 = distinct !DILexicalBlock(scope: !10838, file: !1451, line: 764, column: 3)
!10838 = distinct !DILexicalBlock(scope: !10785, file: !1451, line: 764, column: 3)
!10839 = !DILocation(line: 764, column: 3, scope: !10838)
!10840 = !DILocation(line: 764, column: 3, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10837, file: !1451, line: 764, column: 3)
!10842 = !DILocation(line: 764, column: 3, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10838, file: !1451, line: 764, column: 3)
!10844 = !DILocation(line: 764, column: 3, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10843, file: !1451, line: 764, column: 3)
!10846 = !DILocation(line: 767, column: 7, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10785, file: !1451, line: 767, column: 7)
!10848 = !DILocation(line: 767, column: 56, scope: !10847)
!10849 = !DILocation(line: 767, column: 7, scope: !10785)
!10850 = !DILocation(line: 769, column: 8, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10852, file: !1451, line: 769, column: 8)
!10852 = distinct !DILexicalBlock(scope: !10847, file: !1451, line: 768, column: 3)
!10853 = !DILocation(line: 769, column: 34, scope: !10851)
!10854 = !DILocation(line: 769, column: 8, scope: !10852)
!10855 = !DILocation(line: 772, column: 63, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10851, file: !1451, line: 770, column: 4)
!10857 = !DILocation(line: 772, column: 5, scope: !10856)
!10858 = !DILocation(line: 779, column: 5, scope: !10856)
!10859 = !DILocation(line: 786, column: 9, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10856, file: !1451, line: 786, column: 9)
!10861 = !DILocation(line: 786, column: 26, scope: !10860)
!10862 = !DILocation(line: 786, column: 9, scope: !10856)
!10863 = !DILocation(line: 788, column: 6, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10865, file: !1451, line: 788, column: 6)
!10865 = distinct !DILexicalBlock(scope: !10860, file: !1451, line: 787, column: 5)
!10866 = !{i64 2148408802}
!10867 = !{i64 2148408842}
!10868 = !DILocation(line: 789, column: 5, scope: !10865)
!10869 = !DILocation(line: 794, column: 5, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10851, file: !1451, line: 792, column: 4)
!10871 = !DILocation(line: 795, column: 14, scope: !10870)
!10872 = !DILocation(line: 801, column: 4, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10847, file: !1451, line: 799, column: 3)
!10874 = !DILocation(line: 802, column: 13, scope: !10873)
!10875 = !DILocation(line: 807, column: 4, scope: !10873)
!10876 = distinct !{!10876, !10877, !10878}
!10877 = !DILocation(line: 632, column: 2, scope: !10787)
!10878 = !DILocation(line: 809, column: 2, scope: !10787)
!10879 = !DILocation(line: 733, column: 9, scope: !10795)
!10880 = !DILocation(line: 0, scope: !10785)
!10881 = !DILocation(line: 810, column: 1, scope: !10740)
!10882 = distinct !DISubprogram(name: "prvCopyDataToQueue", scope: !1451, file: !1451, line: 1783, type: !10883, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !10885)
!10883 = !DISubroutineType(types: !10884)
!10884 = !{!1337, !10600, !488, !10744}
!10885 = !{!10886, !10887, !10888, !10889}
!10886 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !10882, file: !1451, line: 1783, type: !10600)
!10887 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !10882, file: !1451, line: 1783, type: !488)
!10888 = !DILocalVariable(name: "xPosition", arg: 3, scope: !10882, file: !1451, line: 1783, type: !10744)
!10889 = !DILocalVariable(name: "xReturn", scope: !10882, file: !1451, line: 1785, type: !1337)
!10890 = !DILocation(line: 0, scope: !10882)
!10891 = !DILocation(line: 1787, column: 15, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10882, file: !1451, line: 1787, column: 6)
!10893 = !DILocation(line: 1787, column: 26, scope: !10892)
!10894 = !DILocation(line: 1787, column: 6, scope: !10882)
!10895 = !DILocation(line: 1791, column: 17, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10897, file: !1451, line: 1791, column: 8)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !1451, line: 1790, column: 3)
!10898 = distinct !DILexicalBlock(scope: !10892, file: !1451, line: 1788, column: 2)
!10899 = !DILocation(line: 1791, column: 29, scope: !10896)
!10900 = !DILocation(line: 1791, column: 8, scope: !10897)
!10901 = !DILocation(line: 1794, column: 60, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10896, file: !1451, line: 1792, column: 4)
!10903 = !DILocation(line: 1794, column: 15, scope: !10902)
!10904 = !DILocation(line: 1795, column: 28, scope: !10902)
!10905 = !DILocation(line: 1796, column: 4, scope: !10902)
!10906 = !DILocation(line: 1804, column: 21, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10892, file: !1451, line: 1804, column: 11)
!10908 = !DILocation(line: 1804, column: 11, scope: !10892)
!10909 = !DILocation(line: 1806, column: 40, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10907, file: !1451, line: 1805, column: 2)
!10911 = !DILocation(line: 1806, column: 12, scope: !10910)
!10912 = !DILocation(line: 1807, column: 34, scope: !10910)
!10913 = !DILocation(line: 1807, column: 22, scope: !10910)
!10914 = !DILocation(line: 1808, column: 38, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10910, file: !1451, line: 1808, column: 7)
!10916 = !DILocation(line: 1808, column: 26, scope: !10915)
!10917 = !DILocation(line: 1808, column: 7, scope: !10910)
!10918 = !DILocation(line: 1810, column: 34, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10915, file: !1451, line: 1809, column: 3)
!10920 = !DILocation(line: 1810, column: 23, scope: !10919)
!10921 = !DILocation(line: 1811, column: 3, scope: !10919)
!10922 = !DILocation(line: 1819, column: 42, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10907, file: !1451, line: 1818, column: 2)
!10924 = !DILocation(line: 1819, column: 12, scope: !10923)
!10925 = !DILocation(line: 1820, column: 37, scope: !10923)
!10926 = !DILocation(line: 1820, column: 25, scope: !10923)
!10927 = !DILocation(line: 1821, column: 40, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10923, file: !1451, line: 1821, column: 7)
!10929 = !DILocation(line: 1821, column: 29, scope: !10928)
!10930 = !DILocation(line: 1821, column: 7, scope: !10923)
!10931 = !DILocation(line: 1823, column: 39, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10928, file: !1451, line: 1822, column: 3)
!10933 = !DILocation(line: 1823, column: 46, scope: !10932)
!10934 = !DILocation(line: 1823, column: 26, scope: !10932)
!10935 = !DILocation(line: 1824, column: 3, scope: !10932)
!10936 = !DILocation(line: 1830, column: 17, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10923, file: !1451, line: 1830, column: 7)
!10938 = !DILocation(line: 1830, column: 7, scope: !10923)
!10939 = !DILocation(line: 1832, column: 17, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10941, file: !1451, line: 1832, column: 8)
!10941 = distinct !DILexicalBlock(scope: !10937, file: !1451, line: 1831, column: 3)
!10942 = !DILocation(line: 1832, column: 35, scope: !10940)
!10943 = !DILocation(line: 1832, column: 8, scope: !10941)
!10944 = !DILocation(line: 1838, column: 5, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10940, file: !1451, line: 1833, column: 4)
!10946 = !DILocation(line: 1839, column: 4, scope: !10945)
!10947 = !DILocation(line: 1851, column: 15, scope: !10882)
!10948 = !DILocation(line: 1851, column: 2, scope: !10882)
!10949 = !DILocation(line: 1853, column: 2, scope: !10882)
!10950 = distinct !DISubprogram(name: "prvIsQueueFull", scope: !1451, file: !1451, line: 2029, type: !10951, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !10955)
!10951 = !DISubroutineType(types: !10952)
!10952 = !{!1337, !10953}
!10953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10954, size: 32)
!10954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1454)
!10955 = !{!10956, !10957}
!10956 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !10950, file: !1451, line: 2029, type: !10953)
!10957 = !DILocalVariable(name: "xReturn", scope: !10950, file: !1451, line: 2031, type: !1337)
!10958 = !DILocation(line: 0, scope: !10950)
!10959 = !DILocation(line: 2033, column: 2, scope: !10950)
!10960 = !DILocation(line: 2035, column: 16, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10962, file: !1451, line: 2035, column: 7)
!10962 = distinct !DILexicalBlock(scope: !10950, file: !1451, line: 2034, column: 2)
!10963 = !DILocation(line: 2035, column: 46, scope: !10961)
!10964 = !DILocation(line: 2035, column: 34, scope: !10961)
!10965 = !DILocation(line: 2044, column: 2, scope: !10950)
!10966 = !DILocation(line: 2046, column: 2, scope: !10950)
!10967 = distinct !DISubprogram(name: "prvUnlockQueue", scope: !1451, file: !1451, line: 1875, type: !10968, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !10970)
!10968 = !DISubroutineType(types: !10969)
!10969 = !{null, !10600}
!10970 = !{!10971}
!10971 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !10967, file: !1451, line: 1875, type: !10600)
!10972 = !DILocation(line: 0, scope: !10967)
!10973 = !DILocation(line: 1883, column: 2, scope: !10967)
!10974 = !DILocation(line: 1933, column: 9, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !1451, line: 1933, column: 9)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !1451, line: 1930, column: 4)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !1451, line: 1887, column: 3)
!10978 = distinct !DILexicalBlock(scope: !10967, file: !1451, line: 1884, column: 2)
!10979 = !DILocation(line: 1886, column: 19, scope: !10978)
!10980 = !DILocation(line: 1886, column: 27, scope: !10978)
!10981 = !DILocation(line: 1886, column: 3, scope: !10978)
!10982 = !DILocation(line: 1933, column: 9, scope: !10976)
!10983 = !DILocation(line: 1935, column: 10, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10985, file: !1451, line: 1935, column: 10)
!10985 = distinct !DILexicalBlock(scope: !10975, file: !1451, line: 1934, column: 5)
!10986 = !DILocation(line: 1935, column: 75, scope: !10984)
!10987 = !DILocation(line: 1935, column: 10, scope: !10985)
!10988 = !DILocation(line: 1939, column: 7, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10984, file: !1451, line: 1936, column: 6)
!10990 = !DILocation(line: 1940, column: 6, scope: !10989)
!10991 = !DILocation(line: 1953, column: 4, scope: !10977)
!10992 = distinct !{!10992, !10981, !10993}
!10993 = !DILocation(line: 1954, column: 3, scope: !10978)
!10994 = !DILocation(line: 1956, column: 20, scope: !10978)
!10995 = !DILocation(line: 1958, column: 2, scope: !10967)
!10996 = !DILocation(line: 1961, column: 2, scope: !10967)
!10997 = !DILocation(line: 1965, column: 8, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10999, file: !1451, line: 1965, column: 8)
!10999 = distinct !DILexicalBlock(scope: !11000, file: !1451, line: 1964, column: 3)
!11000 = distinct !DILexicalBlock(scope: !10967, file: !1451, line: 1962, column: 2)
!11001 = !DILocation(line: 1963, column: 19, scope: !11000)
!11002 = !DILocation(line: 1963, column: 27, scope: !11000)
!11003 = !DILocation(line: 1963, column: 3, scope: !11000)
!11004 = !DILocation(line: 1965, column: 8, scope: !10999)
!11005 = !DILocation(line: 1967, column: 9, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !11007, file: !1451, line: 1967, column: 9)
!11007 = distinct !DILexicalBlock(scope: !10998, file: !1451, line: 1966, column: 4)
!11008 = !DILocation(line: 1967, column: 71, scope: !11006)
!11009 = !DILocation(line: 1967, column: 9, scope: !11007)
!11010 = !DILocation(line: 1969, column: 6, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11006, file: !1451, line: 1968, column: 5)
!11012 = !DILocation(line: 1970, column: 5, scope: !11011)
!11013 = !DILocation(line: 1976, column: 5, scope: !11007)
!11014 = distinct !{!11014, !11003, !11015}
!11015 = !DILocation(line: 1982, column: 3, scope: !11000)
!11016 = !DILocation(line: 1984, column: 20, scope: !11000)
!11017 = !DILocation(line: 1986, column: 2, scope: !10967)
!11018 = !DILocation(line: 1987, column: 1, scope: !10967)
!11019 = distinct !DISubprogram(name: "xQueueGiveMutexRecursive", scope: !1451, file: !1451, line: 489, type: !11020, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11022)
!11020 = !DISubroutineType(types: !11021)
!11021 = !{!1337, !1509}
!11022 = !{!11023, !11024, !11025}
!11023 = !DILocalVariable(name: "xMutex", arg: 1, scope: !11019, file: !1451, line: 489, type: !1509)
!11024 = !DILocalVariable(name: "xReturn", scope: !11019, file: !1451, line: 491, type: !1337)
!11025 = !DILocalVariable(name: "pxMutex", scope: !11019, file: !1451, line: 492, type: !10600)
!11026 = !DILocation(line: 0, scope: !11019)
!11027 = !DILocation(line: 494, column: 3, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11019, file: !1451, line: 494, column: 3)
!11029 = !DILocation(line: 494, column: 3, scope: !11019)
!11030 = !DILocation(line: 494, column: 3, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11028, file: !1451, line: 494, column: 3)
!11032 = !DILocation(line: 502, column: 16, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11019, file: !1451, line: 502, column: 7)
!11034 = !DILocation(line: 502, column: 44, scope: !11033)
!11035 = !DILocation(line: 502, column: 30, scope: !11033)
!11036 = !DILocation(line: 502, column: 7, scope: !11019)
!11037 = !DILocation(line: 511, column: 15, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11033, file: !1451, line: 503, column: 3)
!11039 = !DILocation(line: 511, column: 17, scope: !11038)
!11040 = !DILocation(line: 511, column: 39, scope: !11038)
!11041 = !DILocation(line: 514, column: 40, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11038, file: !1451, line: 514, column: 8)
!11043 = !DILocation(line: 514, column: 8, scope: !11038)
!11044 = !DILocation(line: 518, column: 14, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11042, file: !1451, line: 515, column: 4)
!11046 = !DILocation(line: 519, column: 4, scope: !11045)
!11047 = !DILocation(line: 0, scope: !11033)
!11048 = !DILocation(line: 536, column: 3, scope: !11019)
!11049 = distinct !DISubprogram(name: "xQueueTakeMutexRecursive", scope: !1451, file: !1451, line: 544, type: !11050, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11052)
!11050 = !DISubroutineType(types: !11051)
!11051 = !{!1337, !1509, !1352}
!11052 = !{!11053, !11054, !11055, !11056}
!11053 = !DILocalVariable(name: "xMutex", arg: 1, scope: !11049, file: !1451, line: 544, type: !1509)
!11054 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !11049, file: !1451, line: 544, type: !1352)
!11055 = !DILocalVariable(name: "xReturn", scope: !11049, file: !1451, line: 546, type: !1337)
!11056 = !DILocalVariable(name: "pxMutex", scope: !11049, file: !1451, line: 547, type: !10600)
!11057 = !DILocation(line: 0, scope: !11049)
!11058 = !DILocation(line: 549, column: 3, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11049, file: !1451, line: 549, column: 3)
!11060 = !DILocation(line: 549, column: 3, scope: !11049)
!11061 = !DILocation(line: 549, column: 3, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11059, file: !1451, line: 549, column: 3)
!11063 = !DILocation(line: 556, column: 16, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11049, file: !1451, line: 556, column: 7)
!11065 = !DILocation(line: 556, column: 44, scope: !11064)
!11066 = !DILocation(line: 556, column: 30, scope: !11064)
!11067 = !DILocation(line: 556, column: 7, scope: !11049)
!11068 = !DILocation(line: 563, column: 14, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11064, file: !1451, line: 562, column: 3)
!11070 = !DILocation(line: 568, column: 16, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11069, file: !1451, line: 568, column: 8)
!11072 = !DILocation(line: 568, column: 8, scope: !11069)
!11073 = !DILocation(line: 0, scope: !11064)
!11074 = !DILocation(line: 578, column: 3, scope: !11049)
!11075 = distinct !DISubprogram(name: "xQueueGenericReceive", scope: !1451, file: !1451, line: 1361, type: !11076, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11078)
!11076 = !DISubroutineType(types: !11077)
!11077 = !{!1337, !1509, !8336, !1352, !10744}
!11078 = !{!11079, !11080, !11081, !11082, !11083, !11084, !11085, !11086}
!11079 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11075, file: !1451, line: 1361, type: !1509)
!11080 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !11075, file: !1451, line: 1361, type: !8336)
!11081 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !11075, file: !1451, line: 1361, type: !1352)
!11082 = !DILocalVariable(name: "xJustPeeking", arg: 4, scope: !11075, file: !1451, line: 1361, type: !10744)
!11083 = !DILocalVariable(name: "xEntryTimeSet", scope: !11075, file: !1451, line: 1363, type: !1337)
!11084 = !DILocalVariable(name: "xTimeOut", scope: !11075, file: !1451, line: 1364, type: !10753)
!11085 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !11075, file: !1451, line: 1365, type: !1459)
!11086 = !DILocalVariable(name: "pxQueue", scope: !11075, file: !1451, line: 1366, type: !10600)
!11087 = !DILocation(line: 0, scope: !11075)
!11088 = !DILocation(line: 1364, column: 1, scope: !11075)
!11089 = !DILocation(line: 1364, column: 11, scope: !11075)
!11090 = !DILocation(line: 1366, column: 27, scope: !11075)
!11091 = !DILocation(line: 1368, column: 2, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11075, file: !1451, line: 1368, column: 2)
!11093 = !DILocation(line: 1368, column: 2, scope: !11075)
!11094 = !DILocation(line: 1368, column: 2, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11092, file: !1451, line: 1368, column: 2)
!11096 = !DILocation(line: 1369, column: 2, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11075, file: !1451, line: 1369, column: 2)
!11098 = !DILocation(line: 1369, column: 2, scope: !11075)
!11099 = !DILocation(line: 1369, column: 2, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11097, file: !1451, line: 1369, column: 2)
!11101 = !DILocation(line: 1372, column: 3, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11103, file: !1451, line: 1372, column: 3)
!11103 = distinct !DILexicalBlock(scope: !11075, file: !1451, line: 1371, column: 2)
!11104 = !DILocation(line: 1372, column: 3, scope: !11103)
!11105 = !DILocation(line: 1372, column: 3, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11102, file: !1451, line: 1372, column: 3)
!11107 = !DILocation(line: 1382, column: 3, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11109, file: !1451, line: 1381, column: 2)
!11109 = distinct !DILexicalBlock(scope: !11110, file: !1451, line: 1380, column: 2)
!11110 = distinct !DILexicalBlock(scope: !11075, file: !1451, line: 1380, column: 2)
!11111 = !DILocation(line: 1386, column: 17, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !1451, line: 1386, column: 8)
!11113 = distinct !DILexicalBlock(scope: !11108, file: !1451, line: 1383, column: 3)
!11114 = !DILocation(line: 1386, column: 35, scope: !11112)
!11115 = !DILocation(line: 1386, column: 8, scope: !11113)
!11116 = !DILocation(line: 1467, column: 22, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11118, file: !1451, line: 1467, column: 9)
!11118 = distinct !DILexicalBlock(scope: !11112, file: !1451, line: 1466, column: 4)
!11119 = !DILocation(line: 1467, column: 9, scope: !11118)
!11120 = !DILocation(line: 1390, column: 39, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11112, file: !1451, line: 1387, column: 4)
!11122 = !DILocation(line: 1390, column: 41, scope: !11121)
!11123 = !DILocation(line: 1392, column: 5, scope: !11121)
!11124 = !DILocation(line: 1394, column: 22, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11121, file: !1451, line: 1394, column: 9)
!11126 = !DILocation(line: 1394, column: 9, scope: !11121)
!11127 = !DILocation(line: 1399, column: 6, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11125, file: !1451, line: 1395, column: 5)
!11129 = !DILocation(line: 1403, column: 20, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11131, file: !1451, line: 1403, column: 11)
!11131 = distinct !DILexicalBlock(scope: !11128, file: !1451, line: 1402, column: 6)
!11132 = !DILocation(line: 1403, column: 32, scope: !11130)
!11133 = !DILocation(line: 1403, column: 11, scope: !11131)
!11134 = !DILocation(line: 1407, column: 46, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11130, file: !1451, line: 1404, column: 7)
!11136 = !DILocation(line: 1407, column: 17, scope: !11135)
!11137 = !DILocation(line: 1407, column: 31, scope: !11135)
!11138 = !DILocation(line: 1408, column: 7, scope: !11135)
!11139 = !DILocation(line: 1416, column: 10, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11128, file: !1451, line: 1416, column: 10)
!11141 = !DILocation(line: 1416, column: 10, scope: !11128)
!11142 = !DILocation(line: 1418, column: 11, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11144, file: !1451, line: 1418, column: 11)
!11144 = distinct !DILexicalBlock(scope: !11140, file: !1451, line: 1417, column: 6)
!11145 = !DILocation(line: 1418, column: 73, scope: !11143)
!11146 = !DILocation(line: 1418, column: 11, scope: !11144)
!11147 = !DILocation(line: 1420, column: 8, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11149, file: !1451, line: 1420, column: 8)
!11149 = distinct !DILexicalBlock(scope: !11143, file: !1451, line: 1419, column: 7)
!11150 = !{i64 2148412078}
!11151 = !{i64 2148412118}
!11152 = !DILocation(line: 1421, column: 7, scope: !11149)
!11153 = !DILocation(line: 1438, column: 28, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11125, file: !1451, line: 1433, column: 5)
!11155 = !DILocation(line: 1442, column: 10, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11154, file: !1451, line: 1442, column: 10)
!11157 = !DILocation(line: 1442, column: 10, scope: !11154)
!11158 = !DILocation(line: 1446, column: 11, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11160, file: !1451, line: 1446, column: 11)
!11160 = distinct !DILexicalBlock(scope: !11156, file: !1451, line: 1443, column: 6)
!11161 = !DILocation(line: 1446, column: 76, scope: !11159)
!11162 = !DILocation(line: 1446, column: 11, scope: !11160)
!11163 = !DILocation(line: 1449, column: 8, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11165, file: !1451, line: 1449, column: 8)
!11165 = distinct !DILexicalBlock(scope: !11159, file: !1451, line: 1447, column: 7)
!11166 = !{i64 2148412710}
!11167 = !{i64 2148412750}
!11168 = !DILocation(line: 1450, column: 7, scope: !11165)
!11169 = !DILocation(line: 1462, column: 5, scope: !11121)
!11170 = !DILocation(line: 1463, column: 5, scope: !11121)
!11171 = !DILocation(line: 1471, column: 6, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11117, file: !1451, line: 1468, column: 5)
!11173 = !DILocation(line: 1473, column: 6, scope: !11172)
!11174 = !DILocation(line: 1479, column: 6, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11176, file: !1451, line: 1476, column: 5)
!11176 = distinct !DILexicalBlock(scope: !11117, file: !1451, line: 1475, column: 14)
!11177 = !DILocation(line: 1481, column: 5, scope: !11175)
!11178 = !DILocation(line: 1489, column: 3, scope: !11108)
!11179 = !DILocation(line: 1494, column: 3, scope: !11108)
!11180 = !DILocation(line: 1495, column: 3, scope: !11108)
!11181 = !DILocation(line: 1495, column: 3, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11183, file: !1451, line: 1495, column: 3)
!11183 = distinct !DILexicalBlock(scope: !11108, file: !1451, line: 1495, column: 3)
!11184 = !DILocation(line: 1495, column: 3, scope: !11183)
!11185 = !DILocation(line: 1495, column: 3, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11182, file: !1451, line: 1495, column: 3)
!11187 = !DILocation(line: 1495, column: 3, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11183, file: !1451, line: 1495, column: 3)
!11189 = !DILocation(line: 1495, column: 3, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11188, file: !1451, line: 1495, column: 3)
!11191 = !DILocation(line: 1498, column: 7, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11108, file: !1451, line: 1498, column: 7)
!11193 = !DILocation(line: 1498, column: 56, scope: !11192)
!11194 = !DILocation(line: 1498, column: 7, scope: !11108)
!11195 = !DILocation(line: 1500, column: 8, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11197, file: !1451, line: 1500, column: 8)
!11197 = distinct !DILexicalBlock(scope: !11192, file: !1451, line: 1499, column: 3)
!11198 = !DILocation(line: 1500, column: 35, scope: !11196)
!11199 = !DILocation(line: 1500, column: 8, scope: !11197)
!11200 = !DILocation(line: 1506, column: 19, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11202, file: !1451, line: 1506, column: 10)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !1451, line: 1505, column: 5)
!11203 = distinct !DILexicalBlock(scope: !11196, file: !1451, line: 1501, column: 4)
!11204 = !DILocation(line: 1506, column: 31, scope: !11201)
!11205 = !DILocation(line: 1506, column: 10, scope: !11202)
!11206 = !DILocation(line: 1508, column: 7, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11201, file: !1451, line: 1507, column: 6)
!11208 = !DILocation(line: 1510, column: 50, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11207, file: !1451, line: 1509, column: 7)
!11210 = !DILocation(line: 1510, column: 8, scope: !11209)
!11211 = !DILocation(line: 1512, column: 7, scope: !11207)
!11212 = !DILocation(line: 1513, column: 6, scope: !11207)
!11213 = !DILocation(line: 1521, column: 66, scope: !11203)
!11214 = !DILocation(line: 1521, column: 5, scope: !11203)
!11215 = !DILocation(line: 1522, column: 5, scope: !11203)
!11216 = !DILocation(line: 1523, column: 9, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11203, file: !1451, line: 1523, column: 9)
!11218 = !DILocation(line: 1523, column: 26, scope: !11217)
!11219 = !DILocation(line: 1523, column: 9, scope: !11203)
!11220 = !DILocation(line: 1525, column: 6, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11222, file: !1451, line: 1525, column: 6)
!11222 = distinct !DILexicalBlock(scope: !11217, file: !1451, line: 1524, column: 5)
!11223 = !{i64 2148414125}
!11224 = !{i64 2148414165}
!11225 = !DILocation(line: 1526, column: 5, scope: !11222)
!11226 = !DILocation(line: 1535, column: 5, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11196, file: !1451, line: 1533, column: 4)
!11228 = !DILocation(line: 1536, column: 14, scope: !11227)
!11229 = !DILocation(line: 1541, column: 4, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11192, file: !1451, line: 1540, column: 3)
!11231 = !DILocation(line: 1542, column: 13, scope: !11230)
!11232 = !DILocation(line: 1544, column: 4, scope: !11230)
!11233 = distinct !{!11233, !11234, !11235}
!11234 = !DILocation(line: 1380, column: 2, scope: !11110)
!11235 = !DILocation(line: 1546, column: 2, scope: !11110)
!11236 = !DILocation(line: 1467, column: 9, scope: !11117)
!11237 = !DILocation(line: 0, scope: !11108)
!11238 = !DILocation(line: 1547, column: 1, scope: !11075)
!11239 = distinct !DISubprogram(name: "prvCopyDataFromQueue", scope: !1451, file: !1451, line: 1857, type: !11240, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11242)
!11240 = !DISubroutineType(types: !11241)
!11241 = !{null, !10600, !8336}
!11242 = !{!11243, !11244}
!11243 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !11239, file: !1451, line: 1857, type: !10600)
!11244 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !11239, file: !1451, line: 1857, type: !8336)
!11245 = !DILocation(line: 0, scope: !11239)
!11246 = !DILocation(line: 1859, column: 15, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11239, file: !1451, line: 1859, column: 6)
!11248 = !DILocation(line: 1859, column: 26, scope: !11247)
!11249 = !DILocation(line: 1859, column: 6, scope: !11239)
!11250 = !DILocation(line: 1861, column: 14, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11247, file: !1451, line: 1860, column: 2)
!11252 = !DILocation(line: 1861, column: 25, scope: !11251)
!11253 = !DILocation(line: 1862, column: 41, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11251, file: !1451, line: 1862, column: 7)
!11255 = !DILocation(line: 1862, column: 29, scope: !11254)
!11256 = !DILocation(line: 1862, column: 7, scope: !11251)
!11257 = !DILocation(line: 1864, column: 37, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11254, file: !1451, line: 1863, column: 3)
!11259 = !DILocation(line: 1864, column: 26, scope: !11258)
!11260 = !DILocation(line: 1865, column: 3, scope: !11258)
!11261 = !DILocation(line: 1870, column: 63, scope: !11251)
!11262 = !DILocation(line: 1870, column: 12, scope: !11251)
!11263 = !DILocation(line: 1871, column: 2, scope: !11251)
!11264 = !DILocation(line: 1872, column: 1, scope: !11239)
!11265 = distinct !DISubprogram(name: "prvIsQueueEmpty", scope: !1451, file: !1451, line: 1990, type: !10951, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11266)
!11266 = !{!11267, !11268}
!11267 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !11265, file: !1451, line: 1990, type: !10953)
!11268 = !DILocalVariable(name: "xReturn", scope: !11265, file: !1451, line: 1992, type: !1337)
!11269 = !DILocation(line: 0, scope: !11265)
!11270 = !DILocation(line: 1994, column: 2, scope: !11265)
!11271 = !DILocation(line: 1996, column: 16, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11273, file: !1451, line: 1996, column: 7)
!11273 = distinct !DILexicalBlock(scope: !11265, file: !1451, line: 1995, column: 2)
!11274 = !DILocation(line: 1996, column: 34, scope: !11272)
!11275 = !DILocation(line: 2005, column: 2, scope: !11265)
!11276 = !DILocation(line: 2007, column: 2, scope: !11265)
!11277 = distinct !DISubprogram(name: "xQueueCreateCountingSemaphore", scope: !1451, file: !1451, line: 586, type: !11278, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11280)
!11278 = !DISubroutineType(types: !11279)
!11279 = !{!1509, !9437, !9437}
!11280 = !{!11281, !11282, !11283}
!11281 = !DILocalVariable(name: "uxMaxCount", arg: 1, scope: !11277, file: !1451, line: 586, type: !9437)
!11282 = !DILocalVariable(name: "uxInitialCount", arg: 2, scope: !11277, file: !1451, line: 586, type: !9437)
!11283 = !DILocalVariable(name: "xHandle", scope: !11277, file: !1451, line: 588, type: !1509)
!11284 = !DILocation(line: 0, scope: !11277)
!11285 = !DILocation(line: 590, column: 3, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11277, file: !1451, line: 590, column: 3)
!11287 = !DILocation(line: 590, column: 3, scope: !11277)
!11288 = !DILocation(line: 590, column: 3, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11286, file: !1451, line: 590, column: 3)
!11290 = !DILocation(line: 591, column: 3, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11277, file: !1451, line: 591, column: 3)
!11292 = !DILocation(line: 591, column: 3, scope: !11277)
!11293 = !DILocation(line: 591, column: 3, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11291, file: !1451, line: 591, column: 3)
!11295 = !DILocation(line: 593, column: 13, scope: !11277)
!11296 = !DILocation(line: 595, column: 7, scope: !11277)
!11297 = !DILocation(line: 597, column: 31, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11299, file: !1451, line: 596, column: 3)
!11299 = distinct !DILexicalBlock(scope: !11277, file: !1451, line: 595, column: 7)
!11300 = !DILocation(line: 597, column: 49, scope: !11298)
!11301 = !DILocation(line: 606, column: 3, scope: !11277)
!11302 = !DILocation(line: 606, column: 3, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11304, file: !1451, line: 606, column: 3)
!11304 = distinct !DILexicalBlock(scope: !11277, file: !1451, line: 606, column: 3)
!11305 = !DILocation(line: 607, column: 3, scope: !11277)
!11306 = distinct !DISubprogram(name: "xQueueGenericSendFromISR", scope: !1451, file: !1451, line: 1058, type: !11307, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11309)
!11307 = !DISubroutineType(types: !11308)
!11308 = !{!1337, !1509, !10743, !1565, !10744}
!11309 = !{!11310, !11311, !11312, !11313, !11314, !11315, !11316}
!11310 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11306, file: !1451, line: 1058, type: !1509)
!11311 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !11306, file: !1451, line: 1058, type: !10743)
!11312 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !11306, file: !1451, line: 1058, type: !1565)
!11313 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !11306, file: !1451, line: 1058, type: !10744)
!11314 = !DILocalVariable(name: "xReturn", scope: !11306, file: !1451, line: 1060, type: !1337)
!11315 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !11306, file: !1451, line: 1061, type: !1332)
!11316 = !DILocalVariable(name: "pxQueue", scope: !11306, file: !1451, line: 1062, type: !10600)
!11317 = !DILocation(line: 0, scope: !11306)
!11318 = !DILocation(line: 1062, column: 27, scope: !11306)
!11319 = !DILocation(line: 1064, column: 2, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11306, file: !1451, line: 1064, column: 2)
!11321 = !DILocation(line: 1064, column: 2, scope: !11306)
!11322 = !DILocation(line: 1064, column: 2, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11320, file: !1451, line: 1064, column: 2)
!11324 = !DILocation(line: 1065, column: 2, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11306, file: !1451, line: 1065, column: 2)
!11326 = !DILocation(line: 1065, column: 2, scope: !11306)
!11327 = !DILocation(line: 1065, column: 2, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11325, file: !1451, line: 1065, column: 2)
!11329 = !DILocation(line: 1066, column: 2, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11306, file: !1451, line: 1066, column: 2)
!11331 = !DILocation(line: 1066, column: 2, scope: !11306)
!11332 = !DILocation(line: 1066, column: 2, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11330, file: !1451, line: 1066, column: 2)
!11334 = !DILocation(line: 1082, column: 2, scope: !11306)
!11335 = !DILocation(line: 231, column: 2, scope: !11336, inlinedAt: !11340)
!11336 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !1333, file: !1333, line: 227, type: !2167, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11337)
!11337 = !{!11338, !11339}
!11338 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !11336, file: !1333, line: 229, type: !136)
!11339 = !DILocalVariable(name: "ulNewBASEPRI", scope: !11336, file: !1333, line: 229, type: !136)
!11340 = distinct !DILocation(line: 1089, column: 27, scope: !11306)
!11341 = !{i64 747301, i64 747338, i64 747370, i64 747406, i64 747433}
!11342 = !DILocation(line: 0, scope: !11336, inlinedAt: !11340)
!11343 = !DILocation(line: 1091, column: 18, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11345, file: !1451, line: 1091, column: 7)
!11345 = distinct !DILexicalBlock(scope: !11306, file: !1451, line: 1090, column: 2)
!11346 = !DILocation(line: 1091, column: 47, scope: !11344)
!11347 = !DILocation(line: 1091, column: 36, scope: !11344)
!11348 = !DILocation(line: 1091, column: 58, scope: !11344)
!11349 = !DILocation(line: 1100, column: 13, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11344, file: !1451, line: 1092, column: 3)
!11351 = !DILocation(line: 1104, column: 17, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11350, file: !1451, line: 1104, column: 8)
!11353 = !DILocation(line: 1104, column: 25, scope: !11352)
!11354 = !DILocation(line: 1104, column: 8, scope: !11350)
!11355 = !DILocation(line: 1159, column: 10, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11357, file: !1451, line: 1159, column: 10)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !1451, line: 1158, column: 5)
!11358 = distinct !DILexicalBlock(scope: !11352, file: !1451, line: 1105, column: 4)
!11359 = !DILocation(line: 1159, column: 10, scope: !11357)
!11360 = !DILocation(line: 1161, column: 11, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11362, file: !1451, line: 1161, column: 11)
!11362 = distinct !DILexicalBlock(scope: !11356, file: !1451, line: 1160, column: 6)
!11363 = !DILocation(line: 1161, column: 76, scope: !11361)
!11364 = !DILocation(line: 1161, column: 11, scope: !11362)
!11365 = !DILocation(line: 1167, column: 36, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11367, file: !1451, line: 1166, column: 8)
!11367 = distinct !DILexicalBlock(scope: !11368, file: !1451, line: 1165, column: 12)
!11368 = distinct !DILexicalBlock(scope: !11361, file: !1451, line: 1162, column: 7)
!11369 = !DILocation(line: 1168, column: 8, scope: !11366)
!11370 = !DILocation(line: 1190, column: 5, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11352, file: !1451, line: 1187, column: 4)
!11372 = !DILocation(line: 0, scope: !11344)
!11373 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !11374, file: !1333, line: 247, type: !136)
!11374 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !1333, file: !1333, line: 247, type: !2198, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11375)
!11375 = !{!11373}
!11376 = !DILocation(line: 0, scope: !11374, inlinedAt: !11377)
!11377 = distinct !DILocation(line: 1201, column: 2, scope: !11306)
!11378 = !DILocation(line: 249, column: 2, scope: !11374, inlinedAt: !11377)
!11379 = !{i64 747834}
!11380 = !DILocation(line: 1203, column: 2, scope: !11306)
!11381 = distinct !DISubprogram(name: "xQueueGiveFromISR", scope: !1451, file: !1451, line: 1207, type: !11382, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11384)
!11382 = !DISubroutineType(types: !11383)
!11383 = !{!1337, !1509, !1565}
!11384 = !{!11385, !11386, !11387, !11388, !11389}
!11385 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11381, file: !1451, line: 1207, type: !1509)
!11386 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !11381, file: !1451, line: 1207, type: !1565)
!11387 = !DILocalVariable(name: "xReturn", scope: !11381, file: !1451, line: 1209, type: !1337)
!11388 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !11381, file: !1451, line: 1210, type: !1332)
!11389 = !DILocalVariable(name: "pxQueue", scope: !11381, file: !1451, line: 1211, type: !10600)
!11390 = !DILocation(line: 0, scope: !11381)
!11391 = !DILocation(line: 1213, column: 2, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11381, file: !1451, line: 1213, column: 2)
!11393 = !DILocation(line: 1213, column: 2, scope: !11381)
!11394 = !DILocation(line: 1213, column: 2, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11392, file: !1451, line: 1213, column: 2)
!11396 = !DILocation(line: 1216, column: 2, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11381, file: !1451, line: 1216, column: 2)
!11398 = !DILocation(line: 1216, column: 2, scope: !11381)
!11399 = !DILocation(line: 1216, column: 2, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11397, file: !1451, line: 1216, column: 2)
!11401 = !DILocation(line: 1232, column: 2, scope: !11381)
!11402 = !DILocation(line: 231, column: 2, scope: !11336, inlinedAt: !11403)
!11403 = distinct !DILocation(line: 1239, column: 27, scope: !11381)
!11404 = !DILocation(line: 0, scope: !11336, inlinedAt: !11403)
!11405 = !DILocation(line: 1244, column: 16, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11407, file: !1451, line: 1244, column: 7)
!11407 = distinct !DILexicalBlock(scope: !11381, file: !1451, line: 1240, column: 2)
!11408 = !DILocation(line: 1244, column: 45, scope: !11406)
!11409 = !DILocation(line: 1244, column: 34, scope: !11406)
!11410 = !DILocation(line: 1244, column: 7, scope: !11407)
!11411 = !DILocation(line: 1254, column: 4, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11406, file: !1451, line: 1245, column: 3)
!11413 = !DILocation(line: 1258, column: 17, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11412, file: !1451, line: 1258, column: 8)
!11415 = !DILocation(line: 1258, column: 25, scope: !11414)
!11416 = !DILocation(line: 1258, column: 8, scope: !11412)
!11417 = !DILocation(line: 1313, column: 10, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11419, file: !1451, line: 1313, column: 10)
!11419 = distinct !DILexicalBlock(scope: !11420, file: !1451, line: 1312, column: 5)
!11420 = distinct !DILexicalBlock(scope: !11414, file: !1451, line: 1259, column: 4)
!11421 = !DILocation(line: 1313, column: 10, scope: !11419)
!11422 = !DILocation(line: 1315, column: 11, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11424, file: !1451, line: 1315, column: 11)
!11424 = distinct !DILexicalBlock(scope: !11418, file: !1451, line: 1314, column: 6)
!11425 = !DILocation(line: 1315, column: 76, scope: !11423)
!11426 = !DILocation(line: 1315, column: 11, scope: !11424)
!11427 = !DILocation(line: 1321, column: 36, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11429, file: !1451, line: 1320, column: 8)
!11429 = distinct !DILexicalBlock(scope: !11430, file: !1451, line: 1319, column: 12)
!11430 = distinct !DILexicalBlock(scope: !11423, file: !1451, line: 1316, column: 7)
!11431 = !DILocation(line: 1322, column: 8, scope: !11428)
!11432 = !DILocation(line: 1344, column: 5, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11414, file: !1451, line: 1341, column: 4)
!11434 = !DILocation(line: 0, scope: !11406)
!11435 = !DILocation(line: 0, scope: !11374, inlinedAt: !11436)
!11436 = distinct !DILocation(line: 1355, column: 2, scope: !11381)
!11437 = !DILocation(line: 249, column: 2, scope: !11374, inlinedAt: !11436)
!11438 = !DILocation(line: 1357, column: 2, scope: !11381)
!11439 = distinct !DISubprogram(name: "xQueueReceiveFromISR", scope: !1451, file: !1451, line: 1550, type: !11440, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11442)
!11440 = !DISubroutineType(types: !11441)
!11441 = !{!1337, !1509, !8336, !1565}
!11442 = !{!11443, !11444, !11445, !11446, !11447, !11448}
!11443 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11439, file: !1451, line: 1550, type: !1509)
!11444 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !11439, file: !1451, line: 1550, type: !8336)
!11445 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !11439, file: !1451, line: 1550, type: !1565)
!11446 = !DILocalVariable(name: "xReturn", scope: !11439, file: !1451, line: 1552, type: !1337)
!11447 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !11439, file: !1451, line: 1553, type: !1332)
!11448 = !DILocalVariable(name: "pxQueue", scope: !11439, file: !1451, line: 1554, type: !10600)
!11449 = !DILocation(line: 0, scope: !11439)
!11450 = !DILocation(line: 1554, column: 27, scope: !11439)
!11451 = !DILocation(line: 1556, column: 2, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11439, file: !1451, line: 1556, column: 2)
!11453 = !DILocation(line: 1556, column: 2, scope: !11439)
!11454 = !DILocation(line: 1556, column: 2, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11452, file: !1451, line: 1556, column: 2)
!11456 = !DILocation(line: 1557, column: 2, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11439, file: !1451, line: 1557, column: 2)
!11458 = !DILocation(line: 1557, column: 2, scope: !11439)
!11459 = !DILocation(line: 1557, column: 2, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11457, file: !1451, line: 1557, column: 2)
!11461 = !DILocation(line: 1573, column: 2, scope: !11439)
!11462 = !DILocation(line: 231, column: 2, scope: !11336, inlinedAt: !11463)
!11463 = distinct !DILocation(line: 1575, column: 27, scope: !11439)
!11464 = !DILocation(line: 0, scope: !11336, inlinedAt: !11463)
!11465 = !DILocation(line: 1578, column: 16, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !1451, line: 1578, column: 7)
!11467 = distinct !DILexicalBlock(scope: !11439, file: !1451, line: 1576, column: 2)
!11468 = !DILocation(line: 1578, column: 34, scope: !11466)
!11469 = !DILocation(line: 1578, column: 7, scope: !11467)
!11470 = !DILocation(line: 1582, column: 4, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11466, file: !1451, line: 1579, column: 3)
!11472 = !DILocation(line: 1583, column: 4, scope: !11471)
!11473 = !DILocation(line: 1589, column: 17, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11471, file: !1451, line: 1589, column: 8)
!11475 = !DILocation(line: 1589, column: 25, scope: !11474)
!11476 = !DILocation(line: 1589, column: 8, scope: !11471)
!11477 = !DILocation(line: 1591, column: 9, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11479, file: !1451, line: 1591, column: 9)
!11479 = distinct !DILexicalBlock(scope: !11474, file: !1451, line: 1590, column: 4)
!11480 = !DILocation(line: 1591, column: 9, scope: !11479)
!11481 = !DILocation(line: 1593, column: 10, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11483, file: !1451, line: 1593, column: 10)
!11483 = distinct !DILexicalBlock(scope: !11478, file: !1451, line: 1592, column: 5)
!11484 = !DILocation(line: 1593, column: 72, scope: !11482)
!11485 = !DILocation(line: 1593, column: 10, scope: !11483)
!11486 = !DILocation(line: 1599, column: 35, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11488, file: !1451, line: 1598, column: 7)
!11488 = distinct !DILexicalBlock(scope: !11489, file: !1451, line: 1597, column: 11)
!11489 = distinct !DILexicalBlock(scope: !11482, file: !1451, line: 1594, column: 6)
!11490 = !DILocation(line: 1600, column: 7, scope: !11487)
!11491 = !DILocation(line: 1620, column: 5, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11474, file: !1451, line: 1617, column: 4)
!11493 = !DILocation(line: 0, scope: !11466)
!11494 = !DILocation(line: 0, scope: !11374, inlinedAt: !11495)
!11495 = distinct !DILocation(line: 1631, column: 2, scope: !11439)
!11496 = !DILocation(line: 249, column: 2, scope: !11374, inlinedAt: !11495)
!11497 = !DILocation(line: 1633, column: 2, scope: !11439)
!11498 = distinct !DISubprogram(name: "xQueuePeekFromISR", scope: !1451, file: !1451, line: 1637, type: !11499, scopeLine: 1638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11501)
!11499 = !DISubroutineType(types: !11500)
!11500 = !{!1337, !1509, !8336}
!11501 = !{!11502, !11503, !11504, !11505, !11506, !11507}
!11502 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11498, file: !1451, line: 1637, type: !1509)
!11503 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !11498, file: !1451, line: 1637, type: !8336)
!11504 = !DILocalVariable(name: "xReturn", scope: !11498, file: !1451, line: 1639, type: !1337)
!11505 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !11498, file: !1451, line: 1640, type: !1332)
!11506 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !11498, file: !1451, line: 1641, type: !1459)
!11507 = !DILocalVariable(name: "pxQueue", scope: !11498, file: !1451, line: 1642, type: !10600)
!11508 = !DILocation(line: 0, scope: !11498)
!11509 = !DILocation(line: 1642, column: 27, scope: !11498)
!11510 = !DILocation(line: 1644, column: 2, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11498, file: !1451, line: 1644, column: 2)
!11512 = !DILocation(line: 1644, column: 2, scope: !11498)
!11513 = !DILocation(line: 1644, column: 2, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11511, file: !1451, line: 1644, column: 2)
!11515 = !DILocation(line: 1645, column: 2, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11498, file: !1451, line: 1645, column: 2)
!11517 = !DILocation(line: 1645, column: 2, scope: !11498)
!11518 = !DILocation(line: 1645, column: 2, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11516, file: !1451, line: 1645, column: 2)
!11520 = !DILocation(line: 1646, column: 2, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11498, file: !1451, line: 1646, column: 2)
!11522 = !DILocation(line: 1646, column: 2, scope: !11498)
!11523 = !DILocation(line: 1646, column: 2, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11521, file: !1451, line: 1646, column: 2)
!11525 = !DILocation(line: 1662, column: 2, scope: !11498)
!11526 = !DILocation(line: 231, column: 2, scope: !11336, inlinedAt: !11527)
!11527 = distinct !DILocation(line: 1664, column: 27, scope: !11498)
!11528 = !DILocation(line: 0, scope: !11336, inlinedAt: !11527)
!11529 = !DILocation(line: 1667, column: 16, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11531, file: !1451, line: 1667, column: 7)
!11531 = distinct !DILexicalBlock(scope: !11498, file: !1451, line: 1665, column: 2)
!11532 = !DILocation(line: 1667, column: 34, scope: !11530)
!11533 = !DILocation(line: 1667, column: 7, scope: !11531)
!11534 = !DILocation(line: 1673, column: 38, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11530, file: !1451, line: 1668, column: 3)
!11536 = !DILocation(line: 1673, column: 40, scope: !11535)
!11537 = !DILocation(line: 1674, column: 4, scope: !11535)
!11538 = !DILocation(line: 1675, column: 26, scope: !11535)
!11539 = !DILocation(line: 1678, column: 3, scope: !11535)
!11540 = !DILocation(line: 0, scope: !11530)
!11541 = !DILocation(line: 0, scope: !11374, inlinedAt: !11542)
!11542 = distinct !DILocation(line: 1685, column: 2, scope: !11498)
!11543 = !DILocation(line: 249, column: 2, scope: !11374, inlinedAt: !11542)
!11544 = !DILocation(line: 1687, column: 2, scope: !11498)
!11545 = distinct !DISubprogram(name: "uxQueueMessagesWaiting", scope: !1451, file: !1451, line: 1691, type: !11546, scopeLine: 1692, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11549)
!11546 = !DISubroutineType(types: !11547)
!11547 = !{!1332, !11548}
!11548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1509)
!11549 = !{!11550, !11551}
!11550 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11545, file: !1451, line: 1691, type: !11548)
!11551 = !DILocalVariable(name: "uxReturn", scope: !11545, file: !1451, line: 1693, type: !1332)
!11552 = !DILocation(line: 0, scope: !11545)
!11553 = !DILocation(line: 1695, column: 2, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11545, file: !1451, line: 1695, column: 2)
!11555 = !DILocation(line: 1695, column: 2, scope: !11545)
!11556 = !DILocation(line: 1695, column: 2, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11554, file: !1451, line: 1695, column: 2)
!11558 = !DILocation(line: 1697, column: 2, scope: !11545)
!11559 = !DILocation(line: 1699, column: 40, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11545, file: !1451, line: 1698, column: 2)
!11561 = !DILocation(line: 1701, column: 2, scope: !11545)
!11562 = !DILocation(line: 1703, column: 2, scope: !11545)
!11563 = distinct !DISubprogram(name: "uxQueueSpacesAvailable", scope: !1451, file: !1451, line: 1707, type: !11546, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11564)
!11564 = !{!11565, !11566, !11567}
!11565 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11563, file: !1451, line: 1707, type: !11548)
!11566 = !DILocalVariable(name: "uxReturn", scope: !11563, file: !1451, line: 1709, type: !1332)
!11567 = !DILocalVariable(name: "pxQueue", scope: !11563, file: !1451, line: 1710, type: !1453)
!11568 = !DILocation(line: 0, scope: !11563)
!11569 = !DILocation(line: 1713, column: 2, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11563, file: !1451, line: 1713, column: 2)
!11571 = !DILocation(line: 1713, column: 2, scope: !11563)
!11572 = !DILocation(line: 1713, column: 2, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11570, file: !1451, line: 1713, column: 2)
!11574 = !DILocation(line: 1715, column: 2, scope: !11563)
!11575 = !DILocation(line: 1717, column: 23, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11563, file: !1451, line: 1716, column: 2)
!11577 = !DILocation(line: 1717, column: 43, scope: !11576)
!11578 = !DILocation(line: 1717, column: 32, scope: !11576)
!11579 = !DILocation(line: 1719, column: 2, scope: !11563)
!11580 = !DILocation(line: 1721, column: 2, scope: !11563)
!11581 = distinct !DISubprogram(name: "uxQueueMessagesWaitingFromISR", scope: !1451, file: !1451, line: 1725, type: !11546, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11582)
!11582 = !{!11583, !11584}
!11583 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11581, file: !1451, line: 1725, type: !11548)
!11584 = !DILocalVariable(name: "uxReturn", scope: !11581, file: !1451, line: 1727, type: !1332)
!11585 = !DILocation(line: 0, scope: !11581)
!11586 = !DILocation(line: 1729, column: 2, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11581, file: !1451, line: 1729, column: 2)
!11588 = !DILocation(line: 1729, column: 2, scope: !11581)
!11589 = !DILocation(line: 1729, column: 2, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11587, file: !1451, line: 1729, column: 2)
!11591 = !DILocation(line: 1731, column: 39, scope: !11581)
!11592 = !DILocation(line: 1733, column: 2, scope: !11581)
!11593 = distinct !DISubprogram(name: "vQueueDelete", scope: !1451, file: !1451, line: 1737, type: !11594, scopeLine: 1738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11596)
!11594 = !DISubroutineType(types: !11595)
!11595 = !{null, !1509}
!11596 = !{!11597, !11598}
!11597 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11593, file: !1451, line: 1737, type: !1509)
!11598 = !DILocalVariable(name: "pxQueue", scope: !11593, file: !1451, line: 1739, type: !10600)
!11599 = !DILocation(line: 0, scope: !11593)
!11600 = !DILocation(line: 1741, column: 2, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11593, file: !1451, line: 1741, column: 2)
!11602 = !DILocation(line: 1741, column: 2, scope: !11593)
!11603 = !DILocation(line: 1741, column: 2, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11601, file: !1451, line: 1741, column: 2)
!11605 = !DILocation(line: 1746, column: 3, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11593, file: !1451, line: 1745, column: 2)
!11607 = !DILocation(line: 1749, column: 2, scope: !11593)
!11608 = !DILocation(line: 1750, column: 1, scope: !11593)
!11609 = distinct !DISubprogram(name: "vQueueUnregisterQueue", scope: !1451, file: !1451, line: 2374, type: !11594, scopeLine: 2375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11610)
!11610 = !{!11611, !11612}
!11611 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11609, file: !1451, line: 2374, type: !1509)
!11612 = !DILocalVariable(name: "ux", scope: !11609, file: !1451, line: 2376, type: !1332)
!11613 = !DILocation(line: 0, scope: !11609)
!11614 = !DILocation(line: 2380, column: 3, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11609, file: !1451, line: 2380, column: 3)
!11616 = !DILocation(line: 2382, column: 29, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11618, file: !1451, line: 2382, column: 8)
!11618 = distinct !DILexicalBlock(scope: !11619, file: !1451, line: 2381, column: 3)
!11619 = distinct !DILexicalBlock(scope: !11615, file: !1451, line: 2380, column: 3)
!11620 = !DILocation(line: 2382, column: 37, scope: !11617)
!11621 = !DILocation(line: 2382, column: 8, scope: !11618)
!11622 = !DILocation(line: 2385, column: 26, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11617, file: !1451, line: 2383, column: 4)
!11624 = !DILocation(line: 2385, column: 38, scope: !11623)
!11625 = !DILocation(line: 2386, column: 5, scope: !11623)
!11626 = !DILocation(line: 2380, column: 83, scope: !11619)
!11627 = !DILocation(line: 2380, column: 36, scope: !11619)
!11628 = distinct !{!11628, !11614, !11629}
!11629 = !DILocation(line: 2392, column: 3, scope: !11615)
!11630 = !DILocation(line: 2394, column: 2, scope: !11609)
!11631 = distinct !DISubprogram(name: "uxQueueGetQueueNumber", scope: !1451, file: !1451, line: 1755, type: !11632, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11634)
!11632 = !DISubroutineType(types: !11633)
!11633 = !{!1332, !1509}
!11634 = !{!11635}
!11635 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11631, file: !1451, line: 1755, type: !1509)
!11636 = !DILocation(line: 0, scope: !11631)
!11637 = !DILocation(line: 1757, column: 36, scope: !11631)
!11638 = !DILocation(line: 1757, column: 3, scope: !11631)
!11639 = distinct !DISubprogram(name: "vQueueSetQueueNumber", scope: !1451, file: !1451, line: 1765, type: !11640, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11642)
!11640 = !DISubroutineType(types: !11641)
!11641 = !{null, !1509, !1332}
!11642 = !{!11643, !11644}
!11643 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11639, file: !1451, line: 1765, type: !1509)
!11644 = !DILocalVariable(name: "uxQueueNumber", arg: 2, scope: !11639, file: !1451, line: 1765, type: !1332)
!11645 = !DILocation(line: 0, scope: !11639)
!11646 = !DILocation(line: 1767, column: 29, scope: !11639)
!11647 = !DILocation(line: 1767, column: 43, scope: !11639)
!11648 = !DILocation(line: 1768, column: 2, scope: !11639)
!11649 = distinct !DISubprogram(name: "ucQueueGetQueueType", scope: !1451, file: !1451, line: 1775, type: !11650, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11652)
!11650 = !DISubroutineType(types: !11651)
!11651 = !{!128, !1509}
!11652 = !{!11653}
!11653 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11649, file: !1451, line: 1775, type: !1509)
!11654 = !DILocation(line: 0, scope: !11649)
!11655 = !DILocation(line: 1777, column: 36, scope: !11649)
!11656 = !DILocation(line: 1777, column: 3, scope: !11649)
!11657 = distinct !DISubprogram(name: "xQueueIsQueueEmptyFromISR", scope: !1451, file: !1451, line: 2011, type: !11658, scopeLine: 2012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11660)
!11658 = !DISubroutineType(types: !11659)
!11659 = !{!1337, !11548}
!11660 = !{!11661, !11662}
!11661 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11657, file: !1451, line: 2011, type: !11548)
!11662 = !DILocalVariable(name: "xReturn", scope: !11657, file: !1451, line: 2013, type: !1337)
!11663 = !DILocation(line: 0, scope: !11657)
!11664 = !DILocation(line: 2015, column: 2, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11657, file: !1451, line: 2015, column: 2)
!11666 = !DILocation(line: 2015, column: 2, scope: !11657)
!11667 = !DILocation(line: 2015, column: 2, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11665, file: !1451, line: 2015, column: 2)
!11669 = !DILocation(line: 2016, column: 32, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11657, file: !1451, line: 2016, column: 6)
!11671 = !DILocation(line: 2016, column: 50, scope: !11670)
!11672 = !DILocation(line: 2025, column: 2, scope: !11657)
!11673 = distinct !DISubprogram(name: "xQueueIsQueueFullFromISR", scope: !1451, file: !1451, line: 2050, type: !11658, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11674)
!11674 = !{!11675, !11676}
!11675 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11673, file: !1451, line: 2050, type: !11548)
!11676 = !DILocalVariable(name: "xReturn", scope: !11673, file: !1451, line: 2052, type: !1337)
!11677 = !DILocation(line: 0, scope: !11673)
!11678 = !DILocation(line: 2054, column: 2, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11673, file: !1451, line: 2054, column: 2)
!11680 = !DILocation(line: 2054, column: 2, scope: !11673)
!11681 = !DILocation(line: 2054, column: 2, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11679, file: !1451, line: 2054, column: 2)
!11683 = !DILocation(line: 2055, column: 32, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11673, file: !1451, line: 2055, column: 6)
!11685 = !DILocation(line: 2055, column: 79, scope: !11684)
!11686 = !DILocation(line: 2055, column: 50, scope: !11684)
!11687 = !DILocation(line: 2064, column: 2, scope: !11673)
!11688 = distinct !DISubprogram(name: "vQueueAddToRegistry", scope: !1451, file: !1451, line: 2345, type: !11689, scopeLine: 2346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11691)
!11689 = !DISubroutineType(types: !11690)
!11690 = !{null, !1509, !444}
!11691 = !{!11692, !11693, !11694}
!11692 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11688, file: !1451, line: 2345, type: !1509)
!11693 = !DILocalVariable(name: "pcQueueName", arg: 2, scope: !11688, file: !1451, line: 2345, type: !444)
!11694 = !DILocalVariable(name: "ux", scope: !11688, file: !1451, line: 2347, type: !1332)
!11695 = !DILocation(line: 0, scope: !11688)
!11696 = !DILocation(line: 2351, column: 3, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11688, file: !1451, line: 2351, column: 3)
!11698 = !DILocation(line: 2353, column: 29, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11700, file: !1451, line: 2353, column: 8)
!11700 = distinct !DILexicalBlock(scope: !11701, file: !1451, line: 2352, column: 3)
!11701 = distinct !DILexicalBlock(scope: !11697, file: !1451, line: 2351, column: 3)
!11702 = !DILocation(line: 2353, column: 41, scope: !11699)
!11703 = !DILocation(line: 2353, column: 8, scope: !11700)
!11704 = !DILocation(line: 2356, column: 38, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11699, file: !1451, line: 2354, column: 4)
!11706 = !DILocation(line: 2357, column: 26, scope: !11705)
!11707 = !DILocation(line: 2357, column: 34, scope: !11705)
!11708 = !DILocation(line: 2360, column: 5, scope: !11705)
!11709 = !DILocation(line: 2351, column: 83, scope: !11701)
!11710 = !DILocation(line: 2351, column: 36, scope: !11701)
!11711 = distinct !{!11711, !11696, !11712}
!11712 = !DILocation(line: 2366, column: 3, scope: !11697)
!11713 = !DILocation(line: 2367, column: 2, scope: !11688)
!11714 = distinct !DISubprogram(name: "vQueueWaitForMessageRestricted", scope: !1451, file: !1451, line: 2401, type: !11715, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1450, retainedNodes: !11717)
!11715 = !DISubroutineType(types: !11716)
!11716 = !{null, !1509, !1352}
!11717 = !{!11718, !11719, !11720}
!11718 = !DILocalVariable(name: "xQueue", arg: 1, scope: !11714, file: !1451, line: 2401, type: !1509)
!11719 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !11714, file: !1451, line: 2401, type: !1352)
!11720 = !DILocalVariable(name: "pxQueue", scope: !11714, file: !1451, line: 2403, type: !10600)
!11721 = !DILocation(line: 0, scope: !11714)
!11722 = !DILocation(line: 2419, column: 3, scope: !11714)
!11723 = !DILocation(line: 2419, column: 3, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11725, file: !1451, line: 2419, column: 3)
!11725 = distinct !DILexicalBlock(scope: !11714, file: !1451, line: 2419, column: 3)
!11726 = !DILocation(line: 2419, column: 3, scope: !11725)
!11727 = !DILocation(line: 2419, column: 3, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11724, file: !1451, line: 2419, column: 3)
!11729 = !DILocation(line: 2419, column: 3, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11725, file: !1451, line: 2419, column: 3)
!11731 = !DILocation(line: 2419, column: 3, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11730, file: !1451, line: 2419, column: 3)
!11733 = !DILocation(line: 2420, column: 16, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11714, file: !1451, line: 2420, column: 7)
!11735 = !DILocation(line: 2420, column: 34, scope: !11734)
!11736 = !DILocation(line: 2420, column: 7, scope: !11714)
!11737 = !DILocation(line: 2423, column: 49, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11734, file: !1451, line: 2421, column: 3)
!11739 = !DILocation(line: 2423, column: 4, scope: !11738)
!11740 = !DILocation(line: 2424, column: 3, scope: !11738)
!11741 = !DILocation(line: 2403, column: 28, scope: !11714)
!11742 = !DILocation(line: 2429, column: 3, scope: !11714)
!11743 = !DILocation(line: 2430, column: 2, scope: !11714)
!11744 = distinct !DISubprogram(name: "xTimerCreateTimerTask", scope: !1514, file: !1514, line: 240, type: !8733, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !11745)
!11745 = !{!11746}
!11746 = !DILocalVariable(name: "xReturn", scope: !11744, file: !1514, line: 242, type: !1337)
!11747 = !DILocation(line: 0, scope: !11744)
!11748 = !DILocation(line: 248, column: 2, scope: !11744)
!11749 = !DILocation(line: 250, column: 6, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11744, file: !1514, line: 250, column: 6)
!11751 = !DILocation(line: 250, column: 18, scope: !11750)
!11752 = !DILocation(line: 250, column: 6, scope: !11744)
!11753 = !DILocation(line: 261, column: 14, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11755, file: !1514, line: 259, column: 3)
!11755 = distinct !DILexicalBlock(scope: !11750, file: !1514, line: 251, column: 2)
!11756 = !DILocation(line: 270, column: 2, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11744, file: !1514, line: 270, column: 2)
!11758 = !DILocation(line: 270, column: 2, scope: !11744)
!11759 = !DILocation(line: 270, column: 2, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11757, file: !1514, line: 270, column: 2)
!11761 = !DILocation(line: 271, column: 2, scope: !11744)
!11762 = distinct !DISubprogram(name: "prvCheckForValidListAndQueue", scope: !1514, file: !1514, line: 770, type: !181, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !2135)
!11763 = !DILocation(line: 775, column: 2, scope: !11762)
!11764 = !DILocation(line: 777, column: 7, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !1514, line: 777, column: 7)
!11766 = distinct !DILexicalBlock(scope: !11762, file: !1514, line: 776, column: 2)
!11767 = !DILocation(line: 777, column: 19, scope: !11765)
!11768 = !DILocation(line: 777, column: 7, scope: !11766)
!11769 = !DILocation(line: 779, column: 4, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11765, file: !1514, line: 778, column: 3)
!11771 = !DILocation(line: 780, column: 4, scope: !11770)
!11772 = !DILocation(line: 781, column: 23, scope: !11770)
!11773 = !DILocation(line: 782, column: 24, scope: !11770)
!11774 = !DILocation(line: 783, column: 18, scope: !11770)
!11775 = !DILocation(line: 783, column: 16, scope: !11770)
!11776 = !DILocation(line: 784, column: 4, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11770, file: !1514, line: 784, column: 4)
!11778 = !DILocation(line: 784, column: 4, scope: !11770)
!11779 = !DILocation(line: 784, column: 4, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11777, file: !1514, line: 784, column: 4)
!11781 = !DILocation(line: 788, column: 9, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11783, file: !1514, line: 788, column: 9)
!11783 = distinct !DILexicalBlock(scope: !11770, file: !1514, line: 787, column: 4)
!11784 = !DILocation(line: 788, column: 21, scope: !11782)
!11785 = !DILocation(line: 788, column: 9, scope: !11783)
!11786 = !DILocation(line: 790, column: 6, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11782, file: !1514, line: 789, column: 5)
!11788 = !DILocation(line: 791, column: 5, scope: !11787)
!11789 = !DILocation(line: 804, column: 2, scope: !11762)
!11790 = !DILocation(line: 805, column: 1, scope: !11762)
!11791 = distinct !DISubprogram(name: "prvTimerTask", scope: !1514, file: !1514, line: 418, type: !753, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !11792)
!11792 = !{!11793, !11794, !11795}
!11793 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !11791, file: !1514, line: 418, type: !161)
!11794 = !DILocalVariable(name: "xNextExpireTime", scope: !11791, file: !1514, line: 420, type: !1352)
!11795 = !DILocalVariable(name: "xListWasEmpty", scope: !11791, file: !1514, line: 421, type: !1337)
!11796 = !DILocation(line: 0, scope: !11791)
!11797 = !DILocation(line: 421, column: 1, scope: !11791)
!11798 = !DILocation(line: 426, column: 2, scope: !11791)
!11799 = !DILocation(line: 430, column: 21, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11801, file: !1514, line: 427, column: 2)
!11801 = distinct !DILexicalBlock(scope: !11802, file: !1514, line: 426, column: 2)
!11802 = distinct !DILexicalBlock(scope: !11791, file: !1514, line: 426, column: 2)
!11803 = !DILocation(line: 434, column: 48, scope: !11800)
!11804 = !DILocation(line: 434, column: 3, scope: !11800)
!11805 = !DILocation(line: 437, column: 3, scope: !11800)
!11806 = !DILocation(line: 426, column: 2, scope: !11801)
!11807 = distinct !{!11807, !11808, !11809}
!11808 = !DILocation(line: 426, column: 2, scope: !11802)
!11809 = !DILocation(line: 438, column: 2, scope: !11802)
!11810 = distinct !DISubprogram(name: "prvGetNextExpireTime", scope: !1514, file: !1514, line: 495, type: !1563, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !11811)
!11811 = !{!11812, !11813}
!11812 = !DILocalVariable(name: "pxListWasEmpty", arg: 1, scope: !11810, file: !1514, line: 495, type: !1565)
!11813 = !DILocalVariable(name: "xNextExpireTime", scope: !11810, file: !1514, line: 497, type: !1352)
!11814 = !DILocation(line: 0, scope: !11810)
!11815 = !DILocation(line: 506, column: 20, scope: !11810)
!11816 = !DILocation(line: 506, column: 18, scope: !11810)
!11817 = !DILocation(line: 507, column: 6, scope: !11810)
!11818 = !DILocation(line: 509, column: 21, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11820, file: !1514, line: 508, column: 2)
!11820 = distinct !DILexicalBlock(scope: !11810, file: !1514, line: 507, column: 6)
!11821 = !DILocation(line: 510, column: 2, scope: !11819)
!11822 = !DILocation(line: 0, scope: !11820)
!11823 = !DILocation(line: 517, column: 2, scope: !11810)
!11824 = distinct !DISubprogram(name: "prvProcessTimerOrBlockTask", scope: !1514, file: !1514, line: 442, type: !11825, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !11827)
!11825 = !DISubroutineType(types: !11826)
!11826 = !{null, !8633, !10744}
!11827 = !{!11828, !11829, !11830, !11831}
!11828 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !11824, file: !1514, line: 442, type: !8633)
!11829 = !DILocalVariable(name: "xListWasEmpty", arg: 2, scope: !11824, file: !1514, line: 442, type: !10744)
!11830 = !DILocalVariable(name: "xTimeNow", scope: !11824, file: !1514, line: 444, type: !1352)
!11831 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !11824, file: !1514, line: 445, type: !1337)
!11832 = !DILocation(line: 0, scope: !11824)
!11833 = !DILocation(line: 445, column: 1, scope: !11824)
!11834 = !DILocation(line: 447, column: 2, scope: !11824)
!11835 = !DILocation(line: 454, column: 14, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11824, file: !1514, line: 448, column: 2)
!11837 = !DILocation(line: 455, column: 7, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11836, file: !1514, line: 455, column: 7)
!11839 = !DILocation(line: 455, column: 31, scope: !11838)
!11840 = !DILocation(line: 455, column: 7, scope: !11836)
!11841 = !DILocation(line: 458, column: 24, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11843, file: !1514, line: 458, column: 8)
!11843 = distinct !DILexicalBlock(scope: !11838, file: !1514, line: 456, column: 3)
!11844 = !DILocation(line: 458, column: 37, scope: !11842)
!11845 = !DILocation(line: 460, column: 14, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11842, file: !1514, line: 459, column: 4)
!11847 = !DILocation(line: 461, column: 5, scope: !11846)
!11848 = !DILocation(line: 462, column: 4, scope: !11846)
!11849 = !DILocation(line: 471, column: 37, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11842, file: !1514, line: 464, column: 4)
!11851 = !DILocation(line: 471, column: 68, scope: !11850)
!11852 = !DILocation(line: 471, column: 5, scope: !11850)
!11853 = !DILocation(line: 473, column: 9, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11850, file: !1514, line: 473, column: 9)
!11855 = !DILocation(line: 473, column: 26, scope: !11854)
!11856 = !DILocation(line: 473, column: 9, scope: !11850)
!11857 = !DILocation(line: 479, column: 6, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11859, file: !1514, line: 479, column: 6)
!11859 = distinct !DILexicalBlock(scope: !11854, file: !1514, line: 474, column: 5)
!11860 = !{i64 2148397493}
!11861 = !{i64 2148397533}
!11862 = !DILocation(line: 480, column: 5, scope: !11859)
!11863 = !DILocation(line: 489, column: 13, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11838, file: !1514, line: 488, column: 3)
!11865 = !DILocation(line: 492, column: 1, scope: !11824)
!11866 = distinct !DISubprogram(name: "prvProcessReceivedCommands", scope: !1514, file: !1514, line: 585, type: !181, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !11867)
!11867 = !{!11868, !11882, !11883, !11884, !11885}
!11868 = !DILocalVariable(name: "xMessage", scope: !11866, file: !1514, line: 587, type: !11869)
!11869 = !DIDerivedType(tag: DW_TAG_typedef, name: "DaemonTaskMessage_t", file: !1514, line: 155, baseType: !11870)
!11870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerQueueMessage", file: !1514, line: 142, size: 96, elements: !11871)
!11871 = !{!11872, !11873}
!11872 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageID", scope: !11870, file: !1514, line: 144, baseType: !1337, size: 32)
!11873 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !11870, file: !1514, line: 154, baseType: !11874, size: 64, offset: 32)
!11874 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11870, file: !1514, line: 145, size: 64, elements: !11875)
!11875 = !{!11876}
!11876 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerParameters", scope: !11874, file: !1514, line: 147, baseType: !11877, size: 64)
!11877 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerParameter_t", file: !1514, line: 130, baseType: !11878)
!11878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerParameters", file: !1514, line: 126, size: 64, elements: !11879)
!11879 = !{!11880, !11881}
!11880 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageValue", scope: !11878, file: !1514, line: 128, baseType: !1352, size: 32)
!11881 = !DIDerivedType(tag: DW_TAG_member, name: "pxTimer", scope: !11878, file: !1514, line: 129, baseType: !1516, size: 32, offset: 32)
!11882 = !DILocalVariable(name: "pxTimer", scope: !11866, file: !1514, line: 588, type: !1516)
!11883 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !11866, file: !1514, line: 589, type: !1337)
!11884 = !DILocalVariable(name: "xResult", scope: !11866, file: !1514, line: 589, type: !1337)
!11885 = !DILocalVariable(name: "xTimeNow", scope: !11866, file: !1514, line: 590, type: !1352)
!11886 = !DILocation(line: 587, column: 1, scope: !11866)
!11887 = !DILocation(line: 587, column: 21, scope: !11866)
!11888 = !DILocation(line: 589, column: 1, scope: !11866)
!11889 = !DILocation(line: 592, column: 9, scope: !11866)
!11890 = !DILocation(line: 592, column: 62, scope: !11866)
!11891 = !DILocation(line: 592, column: 2, scope: !11866)
!11892 = !DILocation(line: 618, column: 16, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11894, file: !1514, line: 618, column: 7)
!11894 = distinct !DILexicalBlock(scope: !11866, file: !1514, line: 593, column: 2)
!11895 = !DILocation(line: 618, column: 27, scope: !11893)
!11896 = !DILocation(line: 618, column: 7, scope: !11894)
!11897 = !DILocation(line: 622, column: 42, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11893, file: !1514, line: 619, column: 3)
!11899 = !DILocation(line: 0, scope: !11866)
!11900 = !DILocation(line: 624, column: 8, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11898, file: !1514, line: 624, column: 8)
!11902 = !DILocation(line: 624, column: 8, scope: !11898)
!11903 = !DILocation(line: 627, column: 14, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11901, file: !1514, line: 625, column: 4)
!11905 = !DILocation(line: 628, column: 4, scope: !11904)
!11906 = !DILocation(line: 642, column: 15, scope: !11898)
!11907 = !DILocation(line: 644, column: 21, scope: !11898)
!11908 = !DILocation(line: 644, column: 4, scope: !11898)
!11909 = !DILocation(line: 652, column: 76, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11911, file: !1514, line: 652, column: 10)
!11911 = distinct !DILexicalBlock(scope: !11898, file: !1514, line: 645, column: 4)
!11912 = !DILocation(line: 652, column: 101, scope: !11910)
!11913 = !DILocation(line: 652, column: 90, scope: !11910)
!11914 = !DILocation(line: 652, column: 10, scope: !11910)
!11915 = !DILocation(line: 652, column: 176, scope: !11910)
!11916 = !DILocation(line: 652, column: 10, scope: !11911)
!11917 = !DILocation(line: 656, column: 16, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11910, file: !1514, line: 653, column: 6)
!11919 = !DILocation(line: 656, column: 36, scope: !11918)
!11920 = !DILocation(line: 656, column: 7, scope: !11918)
!11921 = !DILocation(line: 659, column: 20, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11918, file: !1514, line: 659, column: 11)
!11923 = !DILocation(line: 659, column: 33, scope: !11922)
!11924 = !DILocation(line: 659, column: 11, scope: !11918)
!11925 = !DILocation(line: 661, column: 106, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11922, file: !1514, line: 660, column: 7)
!11927 = !DILocation(line: 661, column: 131, scope: !11926)
!11928 = !DILocation(line: 661, column: 120, scope: !11926)
!11929 = !DILocation(line: 661, column: 18, scope: !11926)
!11930 = !DILocation(line: 662, column: 8, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11926, file: !1514, line: 662, column: 8)
!11932 = !DILocation(line: 662, column: 8, scope: !11926)
!11933 = !DILocation(line: 662, column: 8, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11931, file: !1514, line: 662, column: 8)
!11935 = !DILocation(line: 684, column: 65, scope: !11911)
!11936 = !DILocation(line: 684, column: 15, scope: !11911)
!11937 = !DILocation(line: 684, column: 35, scope: !11911)
!11938 = !DILocation(line: 685, column: 6, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11911, file: !1514, line: 685, column: 6)
!11940 = !DILocation(line: 685, column: 6, scope: !11911)
!11941 = !DILocation(line: 685, column: 6, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11939, file: !1514, line: 685, column: 6)
!11943 = !DILocation(line: 693, column: 74, scope: !11911)
!11944 = !DILocation(line: 693, column: 63, scope: !11911)
!11945 = !DILocation(line: 693, column: 15, scope: !11911)
!11946 = !DILocation(line: 694, column: 6, scope: !11911)
!11947 = !DILocation(line: 699, column: 17, scope: !11911)
!11948 = !DILocation(line: 699, column: 6, scope: !11911)
!11949 = !DILocation(line: 700, column: 6, scope: !11911)
!11950 = distinct !{!11950, !11891, !11951}
!11951 = !DILocation(line: 707, column: 2, scope: !11866)
!11952 = !DILocation(line: 708, column: 1, scope: !11866)
!11953 = !DILocation(line: 0, scope: !1562)
!11954 = !DILocation(line: 526, column: 13, scope: !1562)
!11955 = !DILocation(line: 528, column: 17, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !1562, file: !1514, line: 528, column: 6)
!11957 = !DILocation(line: 528, column: 15, scope: !11956)
!11958 = !DILocation(line: 528, column: 6, scope: !1562)
!11959 = !DILocation(line: 530, column: 3, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11956, file: !1514, line: 529, column: 2)
!11961 = !DILocation(line: 532, column: 2, scope: !11960)
!11962 = !DILocation(line: 0, scope: !11956)
!11963 = !DILocation(line: 538, column: 12, scope: !1562)
!11964 = !DILocation(line: 540, column: 2, scope: !1562)
!11965 = distinct !DISubprogram(name: "prvInsertTimerInActiveList", scope: !1514, file: !1514, line: 544, type: !11966, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !11969)
!11966 = !DISubroutineType(types: !11967)
!11967 = !{!1337, !11968, !8633, !8633, !8633}
!11968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1516)
!11969 = !{!11970, !11971, !11972, !11973, !11974}
!11970 = !DILocalVariable(name: "pxTimer", arg: 1, scope: !11965, file: !1514, line: 544, type: !11968)
!11971 = !DILocalVariable(name: "xNextExpiryTime", arg: 2, scope: !11965, file: !1514, line: 544, type: !8633)
!11972 = !DILocalVariable(name: "xTimeNow", arg: 3, scope: !11965, file: !1514, line: 544, type: !8633)
!11973 = !DILocalVariable(name: "xCommandTime", arg: 4, scope: !11965, file: !1514, line: 544, type: !8633)
!11974 = !DILocalVariable(name: "xProcessTimerNow", scope: !11965, file: !1514, line: 546, type: !1337)
!11975 = !DILocation(line: 0, scope: !11965)
!11976 = !DILocation(line: 548, column: 2, scope: !11965)
!11977 = !DILocation(line: 549, column: 2, scope: !11965)
!11978 = !DILocation(line: 551, column: 22, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11965, file: !1514, line: 551, column: 6)
!11980 = !DILocation(line: 551, column: 6, scope: !11965)
!11981 = !DILocation(line: 555, column: 18, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11983, file: !1514, line: 555, column: 7)
!11983 = distinct !DILexicalBlock(scope: !11979, file: !1514, line: 552, column: 2)
!11984 = !DILocation(line: 555, column: 47, scope: !11982)
!11985 = !DILocation(line: 555, column: 35, scope: !11982)
!11986 = !DILocation(line: 555, column: 7, scope: !11983)
!11987 = !DILocation(line: 568, column: 18, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11989, file: !1514, line: 568, column: 7)
!11989 = distinct !DILexicalBlock(scope: !11979, file: !1514, line: 567, column: 2)
!11990 = !DILocation(line: 568, column: 35, scope: !11988)
!11991 = !DILocation(line: 0, scope: !11979)
!11992 = !DILocation(line: 581, column: 2, scope: !11965)
!11993 = distinct !DISubprogram(name: "xTimerGenericCommand", scope: !1514, file: !1514, line: 316, type: !11994, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !11996)
!11994 = !DISubroutineType(types: !11995)
!11995 = !{!1337, !1541, !10744, !8633, !1565, !8633}
!11996 = !{!11997, !11998, !11999, !12000, !12001, !12002, !12003}
!11997 = !DILocalVariable(name: "xTimer", arg: 1, scope: !11993, file: !1514, line: 316, type: !1541)
!11998 = !DILocalVariable(name: "xCommandID", arg: 2, scope: !11993, file: !1514, line: 316, type: !10744)
!11999 = !DILocalVariable(name: "xOptionalValue", arg: 3, scope: !11993, file: !1514, line: 316, type: !8633)
!12000 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !11993, file: !1514, line: 316, type: !1565)
!12001 = !DILocalVariable(name: "xTicksToWait", arg: 5, scope: !11993, file: !1514, line: 316, type: !8633)
!12002 = !DILocalVariable(name: "xReturn", scope: !11993, file: !1514, line: 318, type: !1337)
!12003 = !DILocalVariable(name: "xMessage", scope: !11993, file: !1514, line: 319, type: !11869)
!12004 = !DILocation(line: 0, scope: !11993)
!12005 = !DILocation(line: 319, column: 1, scope: !11993)
!12006 = !DILocation(line: 319, column: 21, scope: !11993)
!12007 = !DILocation(line: 323, column: 6, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !11993, file: !1514, line: 323, column: 6)
!12009 = !DILocation(line: 323, column: 18, scope: !12008)
!12010 = !DILocation(line: 323, column: 6, scope: !11993)
!12011 = !DILocation(line: 326, column: 12, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12008, file: !1514, line: 324, column: 2)
!12013 = !DILocation(line: 326, column: 23, scope: !12012)
!12014 = !DILocation(line: 327, column: 31, scope: !12012)
!12015 = !DILocation(line: 327, column: 45, scope: !12012)
!12016 = !DILocation(line: 328, column: 31, scope: !12012)
!12017 = !DILocation(line: 328, column: 39, scope: !12012)
!12018 = !DILocation(line: 330, column: 18, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12012, file: !1514, line: 330, column: 7)
!12020 = !DILocation(line: 330, column: 7, scope: !12012)
!12021 = !DILocation(line: 332, column: 8, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12023, file: !1514, line: 332, column: 8)
!12023 = distinct !DILexicalBlock(scope: !12019, file: !1514, line: 331, column: 3)
!12024 = !DILocation(line: 332, column: 33, scope: !12022)
!12025 = !DILocation(line: 0, scope: !12022)
!12026 = !DILocation(line: 332, column: 8, scope: !12023)
!12027 = !DILocation(line: 334, column: 15, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12022, file: !1514, line: 333, column: 4)
!12029 = !DILocation(line: 335, column: 4, scope: !12028)
!12030 = !DILocation(line: 338, column: 15, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12022, file: !1514, line: 337, column: 4)
!12032 = !DILocation(line: 343, column: 14, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12019, file: !1514, line: 342, column: 3)
!12034 = !DILocation(line: 354, column: 1, scope: !11993)
!12035 = !DILocation(line: 353, column: 2, scope: !11993)
!12036 = distinct !DISubprogram(name: "prvSwitchTimerLists", scope: !1514, file: !1514, line: 711, type: !181, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !12037)
!12037 = !{!12038, !12039, !12040, !12041, !12042}
!12038 = !DILocalVariable(name: "xNextExpireTime", scope: !12036, file: !1514, line: 713, type: !1352)
!12039 = !DILocalVariable(name: "xReloadTime", scope: !12036, file: !1514, line: 713, type: !1352)
!12040 = !DILocalVariable(name: "pxTemp", scope: !12036, file: !1514, line: 714, type: !1546)
!12041 = !DILocalVariable(name: "pxTimer", scope: !12036, file: !1514, line: 715, type: !1516)
!12042 = !DILocalVariable(name: "xResult", scope: !12036, file: !1514, line: 716, type: !1337)
!12043 = !DILocation(line: 722, column: 9, scope: !12036)
!12044 = !DILocation(line: 722, column: 2, scope: !12036)
!12045 = !DILocation(line: 724, column: 21, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12036, file: !1514, line: 723, column: 2)
!12047 = !DILocation(line: 0, scope: !12036)
!12048 = !DILocation(line: 727, column: 27, scope: !12046)
!12049 = !DILocation(line: 728, column: 38, scope: !12046)
!12050 = !DILocation(line: 728, column: 12, scope: !12046)
!12051 = !DILocation(line: 734, column: 12, scope: !12046)
!12052 = !DILocation(line: 734, column: 3, scope: !12046)
!12053 = !DILocation(line: 736, column: 16, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12046, file: !1514, line: 736, column: 7)
!12055 = !DILocation(line: 736, column: 29, scope: !12054)
!12056 = !DILocation(line: 736, column: 7, scope: !12046)
!12057 = !DILocation(line: 744, column: 47, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12054, file: !1514, line: 737, column: 3)
!12059 = !DILocation(line: 744, column: 36, scope: !12058)
!12060 = !DILocation(line: 745, column: 20, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12058, file: !1514, line: 745, column: 8)
!12062 = !DILocation(line: 745, column: 8, scope: !12058)
!12063 = !DILocation(line: 747, column: 5, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12061, file: !1514, line: 746, column: 4)
!12065 = !DILocation(line: 748, column: 5, scope: !12064)
!12066 = !DILocation(line: 749, column: 18, scope: !12064)
!12067 = !DILocation(line: 749, column: 5, scope: !12064)
!12068 = !DILocation(line: 750, column: 4, scope: !12064)
!12069 = !DILocation(line: 753, column: 15, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12061, file: !1514, line: 752, column: 4)
!12071 = !DILocation(line: 754, column: 5, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !12070, file: !1514, line: 754, column: 5)
!12073 = !DILocation(line: 754, column: 5, scope: !12070)
!12074 = !DILocation(line: 754, column: 5, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12072, file: !1514, line: 754, column: 5)
!12076 = distinct !{!12076, !12044, !12077}
!12077 = !DILocation(line: 762, column: 2, scope: !12036)
!12078 = !DILocation(line: 765, column: 23, scope: !12036)
!12079 = !DILocation(line: 765, column: 21, scope: !12036)
!12080 = !DILocation(line: 766, column: 22, scope: !12036)
!12081 = !DILocation(line: 767, column: 1, scope: !12036)
!12082 = distinct !DISubprogram(name: "prvProcessExpiredTimer", scope: !1514, file: !1514, line: 378, type: !12083, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !12085)
!12083 = !DISubroutineType(types: !12084)
!12084 = !{null, !8633, !8633}
!12085 = !{!12086, !12087, !12088, !12089}
!12086 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !12082, file: !1514, line: 378, type: !8633)
!12087 = !DILocalVariable(name: "xTimeNow", arg: 2, scope: !12082, file: !1514, line: 378, type: !8633)
!12088 = !DILocalVariable(name: "xResult", scope: !12082, file: !1514, line: 380, type: !1337)
!12089 = !DILocalVariable(name: "pxTimer", scope: !12082, file: !1514, line: 381, type: !11968)
!12090 = !DILocation(line: 0, scope: !12082)
!12091 = !DILocation(line: 381, column: 41, scope: !12082)
!12092 = !DILocation(line: 385, column: 37, scope: !12082)
!12093 = !DILocation(line: 385, column: 11, scope: !12082)
!12094 = !DILocation(line: 390, column: 15, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12082, file: !1514, line: 390, column: 6)
!12096 = !DILocation(line: 390, column: 28, scope: !12095)
!12097 = !DILocation(line: 390, column: 6, scope: !12082)
!12098 = !DILocation(line: 381, column: 27, scope: !12082)
!12099 = !DILocation(line: 395, column: 73, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12101, file: !1514, line: 395, column: 7)
!12101 = distinct !DILexicalBlock(scope: !12095, file: !1514, line: 391, column: 2)
!12102 = !DILocation(line: 395, column: 62, scope: !12100)
!12103 = !DILocation(line: 395, column: 7, scope: !12100)
!12104 = !DILocation(line: 395, column: 124, scope: !12100)
!12105 = !DILocation(line: 395, column: 7, scope: !12101)
!12106 = !DILocation(line: 399, column: 14, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12100, file: !1514, line: 396, column: 3)
!12108 = !DILocation(line: 400, column: 4, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12107, file: !1514, line: 400, column: 4)
!12110 = !DILocation(line: 400, column: 4, scope: !12107)
!12111 = !DILocation(line: 400, column: 4, scope: !12112)
!12112 = distinct !DILexicalBlock(scope: !12109, file: !1514, line: 400, column: 4)
!12113 = !DILocation(line: 414, column: 11, scope: !12082)
!12114 = !DILocation(line: 414, column: 2, scope: !12082)
!12115 = !DILocation(line: 415, column: 1, scope: !12082)
!12116 = distinct !DISubprogram(name: "xTimerCreate", scope: !1514, file: !1514, line: 275, type: !12117, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !12119)
!12117 = !DISubroutineType(types: !12118)
!12118 = !{!1541, !443, !8633, !9437, !8336, !1536}
!12119 = !{!12120, !12121, !12122, !12123, !12124, !12125}
!12120 = !DILocalVariable(name: "pcTimerName", arg: 1, scope: !12116, file: !1514, line: 275, type: !443)
!12121 = !DILocalVariable(name: "xTimerPeriodInTicks", arg: 2, scope: !12116, file: !1514, line: 275, type: !8633)
!12122 = !DILocalVariable(name: "uxAutoReload", arg: 3, scope: !12116, file: !1514, line: 275, type: !9437)
!12123 = !DILocalVariable(name: "pvTimerID", arg: 4, scope: !12116, file: !1514, line: 275, type: !8336)
!12124 = !DILocalVariable(name: "pxCallbackFunction", arg: 5, scope: !12116, file: !1514, line: 275, type: !1536)
!12125 = !DILocalVariable(name: "pxNewTimer", scope: !12116, file: !1514, line: 277, type: !1516)
!12126 = !DILocation(line: 0, scope: !12116)
!12127 = !DILocation(line: 280, column: 26, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12116, file: !1514, line: 280, column: 6)
!12129 = !DILocation(line: 280, column: 6, scope: !12116)
!12130 = !DILocation(line: 286, column: 30, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12128, file: !1514, line: 285, column: 2)
!12132 = !DILocation(line: 287, column: 18, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12131, file: !1514, line: 287, column: 7)
!12134 = !DILocation(line: 287, column: 7, scope: !12131)
!12135 = !DILocation(line: 291, column: 4, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12133, file: !1514, line: 288, column: 3)
!12137 = !DILocation(line: 294, column: 16, scope: !12136)
!12138 = !DILocation(line: 294, column: 28, scope: !12136)
!12139 = !DILocation(line: 295, column: 16, scope: !12136)
!12140 = !DILocation(line: 295, column: 36, scope: !12136)
!12141 = !DILocation(line: 296, column: 16, scope: !12136)
!12142 = !DILocation(line: 296, column: 29, scope: !12136)
!12143 = !DILocation(line: 297, column: 16, scope: !12136)
!12144 = !DILocation(line: 297, column: 26, scope: !12136)
!12145 = !DILocation(line: 298, column: 16, scope: !12136)
!12146 = !DILocation(line: 298, column: 35, scope: !12136)
!12147 = !DILocation(line: 299, column: 40, scope: !12136)
!12148 = !DILocation(line: 299, column: 4, scope: !12136)
!12149 = !DILocation(line: 302, column: 3, scope: !12136)
!12150 = !DILocation(line: 310, column: 2, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12152, file: !1514, line: 310, column: 2)
!12152 = distinct !DILexicalBlock(scope: !12116, file: !1514, line: 310, column: 2)
!12153 = !DILocation(line: 312, column: 2, scope: !12116)
!12154 = distinct !DISubprogram(name: "pcTimerGetTimerName", scope: !1514, file: !1514, line: 370, type: !12155, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !12157)
!12155 = !DISubroutineType(types: !12156)
!12156 = !{!444, !1541}
!12157 = !{!12158, !12159}
!12158 = !DILocalVariable(name: "xTimer", arg: 1, scope: !12154, file: !1514, line: 370, type: !1541)
!12159 = !DILocalVariable(name: "pxTimer", scope: !12154, file: !1514, line: 372, type: !1516)
!12160 = !DILocation(line: 0, scope: !12154)
!12161 = !DILocation(line: 374, column: 18, scope: !12154)
!12162 = !DILocation(line: 374, column: 2, scope: !12154)
!12163 = distinct !DISubprogram(name: "xTimerIsTimerActive", scope: !1514, file: !1514, line: 808, type: !12164, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !12166)
!12164 = !DISubroutineType(types: !12165)
!12165 = !{!1337, !1541}
!12166 = !{!12167, !12168, !12169}
!12167 = !DILocalVariable(name: "xTimer", arg: 1, scope: !12163, file: !1514, line: 808, type: !1541)
!12168 = !DILocalVariable(name: "xTimerIsInActiveList", scope: !12163, file: !1514, line: 810, type: !1337)
!12169 = !DILocalVariable(name: "pxTimer", scope: !12163, file: !1514, line: 811, type: !1516)
!12170 = !DILocation(line: 0, scope: !12163)
!12171 = !DILocation(line: 814, column: 2, scope: !12163)
!12172 = !DILocation(line: 819, column: 44, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12163, file: !1514, line: 815, column: 2)
!12174 = !DILocation(line: 819, column: 41, scope: !12173)
!12175 = !DILocation(line: 821, column: 2, scope: !12163)
!12176 = !DILocation(line: 823, column: 2, scope: !12163)
!12177 = distinct !DISubprogram(name: "pvTimerGetTimerID", scope: !1514, file: !1514, line: 827, type: !12178, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1513, retainedNodes: !12181)
!12178 = !DISubroutineType(types: !12179)
!12179 = !{!161, !12180}
!12180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1541)
!12181 = !{!12182, !12183}
!12182 = !DILocalVariable(name: "xTimer", arg: 1, scope: !12177, file: !1514, line: 827, type: !12180)
!12183 = !DILocalVariable(name: "pxTimer", scope: !12177, file: !1514, line: 829, type: !11968)
!12184 = !DILocation(line: 0, scope: !12177)
!12185 = !DILocation(line: 831, column: 18, scope: !12177)
!12186 = !DILocation(line: 831, column: 2, scope: !12177)
!12187 = distinct !DISubprogram(name: "pxPortInitialiseStack", scope: !1579, file: !1579, line: 222, type: !12188, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !12190)
!12188 = !DISubroutineType(types: !12189)
!12189 = !{!1334, !1334, !8333, !161}
!12190 = !{!12191, !12192, !12193}
!12191 = !DILocalVariable(name: "pxTopOfStack", arg: 1, scope: !12187, file: !1579, line: 222, type: !1334)
!12192 = !DILocalVariable(name: "pxCode", arg: 2, scope: !12187, file: !1579, line: 222, type: !8333)
!12193 = !DILocalVariable(name: "pvParameters", arg: 3, scope: !12187, file: !1579, line: 222, type: !161)
!12194 = !DILocation(line: 0, scope: !12187)
!12195 = !DILocation(line: 229, column: 14, scope: !12187)
!12196 = !DILocation(line: 231, column: 16, scope: !12187)
!12197 = !DILocation(line: 232, column: 14, scope: !12187)
!12198 = !DILocation(line: 233, column: 18, scope: !12187)
!12199 = !DILocation(line: 233, column: 16, scope: !12187)
!12200 = !DILocation(line: 234, column: 14, scope: !12187)
!12201 = !DILocation(line: 235, column: 16, scope: !12187)
!12202 = !DILocation(line: 238, column: 15, scope: !12187)
!12203 = !DILocation(line: 239, column: 18, scope: !12187)
!12204 = !DILocation(line: 239, column: 16, scope: !12187)
!12205 = !DILocation(line: 243, column: 14, scope: !12187)
!12206 = !DILocation(line: 244, column: 16, scope: !12187)
!12207 = !DILocation(line: 246, column: 15, scope: !12187)
!12208 = !DILocation(line: 248, column: 2, scope: !12187)
!12209 = distinct !DISubprogram(name: "prvTaskExitError", scope: !1579, file: !1579, line: 252, type: !181, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !2135)
!12210 = !DILocation(line: 260, column: 2, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12209, file: !1579, line: 260, column: 2)
!12212 = !DILocation(line: 260, column: 2, scope: !12209)
!12213 = !DILocation(line: 260, column: 2, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12211, file: !1579, line: 260, column: 2)
!12215 = !DILocation(line: 215, column: 2, scope: !12216, inlinedAt: !12219)
!12216 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !1333, file: !1333, line: 211, type: !181, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !12217)
!12217 = !{!12218}
!12218 = !DILocalVariable(name: "ulNewBASEPRI", scope: !12216, file: !1333, line: 213, type: !136)
!12219 = distinct !DILocation(line: 261, column: 2, scope: !12209)
!12220 = !{i64 657654, i64 657687, i64 657723, i64 657750}
!12221 = !DILocation(line: 0, scope: !12216, inlinedAt: !12219)
!12222 = !DILocation(line: 262, column: 2, scope: !12209)
!12223 = !DILocation(line: 262, column: 2, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12225, file: !1579, line: 262, column: 2)
!12225 = distinct !DILexicalBlock(scope: !12209, file: !1579, line: 262, column: 2)
!12226 = distinct !{!12226, !12227, !12228}
!12227 = !DILocation(line: 262, column: 2, scope: !12225)
!12228 = !DILocation(line: 262, column: 11, scope: !12225)
!12229 = distinct !DISubprogram(name: "vPortCurrentTaskStackOverflowCheck", scope: !1579, file: !1579, line: 268, type: !181, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !12230)
!12230 = !{!12231, !12232}
!12231 = !DILocalVariable(name: "stack_start_address", scope: !12229, file: !1579, line: 270, type: !136)
!12232 = !DILocalVariable(name: "ret", scope: !12229, file: !1579, line: 271, type: !640)
!12233 = !DILocation(line: 273, column: 24, scope: !12229)
!12234 = !DILocation(line: 0, scope: !12229)
!12235 = !DILocation(line: 276, column: 8, scope: !12229)
!12236 = !DILocation(line: 281, column: 1, scope: !12229)
!12237 = distinct !DISubprogram(name: "SVC_Handler", scope: !1579, file: !1579, line: 287, type: !181, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !2135)
!12238 = !DILocation(line: 289, column: 2, scope: !12237)
!12239 = !{i64 11674, i64 11700, i64 11789, i64 11939, i64 11982, i64 12128, i64 12194, i64 12283, i64 12374, i64 12519, i64 12585, i64 12607, i64 12635, i64 12666, i64 12690, i64 12709, i64 12734}
!12240 = !DILocation(line: 312, column: 1, scope: !12237)
!12241 = distinct !DISubprogram(name: "xPortStartScheduler", scope: !1579, file: !1579, line: 335, type: !8733, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !12242)
!12242 = !{!12243, !12245, !12247}
!12243 = !DILocalVariable(name: "ulOriginalPriority", scope: !12244, file: !1579, line: 343, type: !250)
!12244 = distinct !DILexicalBlock(scope: !12241, file: !1579, line: 342, column: 2)
!12245 = !DILocalVariable(name: "pucFirstUserPriorityRegister", scope: !12244, file: !1579, line: 344, type: !12246)
!12246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !247)
!12247 = !DILocalVariable(name: "ucMaxPriorityValue", scope: !12244, file: !1579, line: 345, type: !248)
!12248 = !DILocation(line: 343, column: 3, scope: !12244)
!12249 = !DILocation(line: 343, column: 21, scope: !12244)
!12250 = !DILocation(line: 0, scope: !12244)
!12251 = !DILocation(line: 345, column: 3, scope: !12244)
!12252 = !DILocation(line: 345, column: 20, scope: !12244)
!12253 = !DILocation(line: 353, column: 24, scope: !12244)
!12254 = !DILocation(line: 353, column: 22, scope: !12244)
!12255 = !DILocation(line: 357, column: 33, scope: !12244)
!12256 = !DILocation(line: 360, column: 24, scope: !12244)
!12257 = !DILocation(line: 360, column: 22, scope: !12244)
!12258 = !DILocation(line: 363, column: 65, scope: !12244)
!12259 = !DILocation(line: 363, column: 63, scope: !12244)
!12260 = !DILocation(line: 363, column: 24, scope: !12244)
!12261 = !DILocation(line: 368, column: 12, scope: !12244)
!12262 = !DILocation(line: 368, column: 55, scope: !12244)
!12263 = !DILocation(line: 368, column: 3, scope: !12244)
!12264 = !DILocation(line: 370, column: 22, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12244, file: !1579, line: 369, column: 3)
!12266 = !DILocation(line: 371, column: 23, scope: !12265)
!12267 = distinct !{!12267, !12263, !12268}
!12268 = !DILocation(line: 372, column: 3, scope: !12244)
!12269 = !DILocation(line: 376, column: 22, scope: !12244)
!12270 = !DILocation(line: 377, column: 22, scope: !12244)
!12271 = !DILocation(line: 381, column: 35, scope: !12244)
!12272 = !DILocation(line: 381, column: 33, scope: !12244)
!12273 = !DILocation(line: 382, column: 2, scope: !12241)
!12274 = !DILocation(line: 386, column: 23, scope: !12241)
!12275 = !DILocation(line: 388, column: 23, scope: !12241)
!12276 = !DILocation(line: 392, column: 2, scope: !12241)
!12277 = !DILocation(line: 395, column: 20, scope: !12241)
!12278 = !DILocation(line: 398, column: 2, scope: !12241)
!12279 = !DILocation(line: 401, column: 17, scope: !12241)
!12280 = !DILocation(line: 404, column: 2, scope: !12241)
!12281 = !DILocation(line: 410, column: 2, scope: !12241)
!12282 = !DILocation(line: 413, column: 2, scope: !12241)
!12283 = distinct !DISubprogram(name: "vPortEnableVFP", scope: !1579, file: !1579, line: 741, type: !181, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !2135)
!12284 = !DILocation(line: 743, column: 2, scope: !12283)
!12285 = !{i64 28402, i64 28478, i64 28502, i64 28517, i64 28609, i64 28633}
!12286 = !DILocation(line: 752, column: 1, scope: !12283)
!12287 = distinct !DISubprogram(name: "prvPortStartFirstTask", scope: !1579, file: !1579, line: 315, type: !181, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !2135)
!12288 = !DILocation(line: 317, column: 2, scope: !12287)
!12289 = !{i64 12920, i64 13009, i64 13036, i64 13063, i64 13138, i64 13194, i64 13216, i64 13235, i64 13254, i64 13314}
!12290 = !DILocation(line: 329, column: 1, scope: !12287)
!12291 = distinct !DISubprogram(name: "vPortEndScheduler", scope: !1579, file: !1579, line: 417, type: !181, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !2135)
!12292 = !DILocation(line: 421, column: 2, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12291, file: !1579, line: 421, column: 2)
!12294 = !DILocation(line: 421, column: 2, scope: !12291)
!12295 = !DILocation(line: 421, column: 2, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12293, file: !1579, line: 421, column: 2)
!12297 = !DILocation(line: 422, column: 1, scope: !12291)
!12298 = distinct !DISubprogram(name: "vPortEnterCritical", scope: !1579, file: !1579, line: 425, type: !181, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !2135)
!12299 = !DILocation(line: 215, column: 2, scope: !12216, inlinedAt: !12300)
!12300 = distinct !DILocation(line: 427, column: 2, scope: !12298)
!12301 = !DILocation(line: 0, scope: !12216, inlinedAt: !12300)
!12302 = !DILocation(line: 428, column: 19, scope: !12298)
!12303 = !DILocation(line: 435, column: 24, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12298, file: !1579, line: 435, column: 6)
!12305 = !DILocation(line: 435, column: 6, scope: !12298)
!12306 = !DILocation(line: 437, column: 3, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12308, file: !1579, line: 437, column: 3)
!12308 = distinct !DILexicalBlock(scope: !12304, file: !1579, line: 436, column: 2)
!12309 = !DILocation(line: 437, column: 3, scope: !12308)
!12310 = !DILocation(line: 437, column: 3, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12307, file: !1579, line: 437, column: 3)
!12312 = !DILocation(line: 439, column: 1, scope: !12298)
!12313 = distinct !DISubprogram(name: "vPortExitCritical", scope: !1579, file: !1579, line: 442, type: !181, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !2135)
!12314 = !DILocation(line: 444, column: 2, scope: !12315)
!12315 = distinct !DILexicalBlock(scope: !12313, file: !1579, line: 444, column: 2)
!12316 = !DILocation(line: 444, column: 2, scope: !12313)
!12317 = !DILocation(line: 444, column: 2, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12315, file: !1579, line: 444, column: 2)
!12319 = !DILocation(line: 445, column: 19, scope: !12313)
!12320 = !DILocation(line: 446, column: 24, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12313, file: !1579, line: 446, column: 6)
!12322 = !DILocation(line: 446, column: 6, scope: !12313)
!12323 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !12324, file: !1333, line: 247, type: !136)
!12324 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !1333, file: !1333, line: 247, type: !2198, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !12325)
!12325 = !{!12323}
!12326 = !DILocation(line: 0, scope: !12324, inlinedAt: !12327)
!12327 = distinct !DILocation(line: 448, column: 3, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12321, file: !1579, line: 447, column: 2)
!12329 = !DILocation(line: 249, column: 2, scope: !12324, inlinedAt: !12327)
!12330 = !{i64 658575}
!12331 = !DILocation(line: 449, column: 2, scope: !12328)
!12332 = !DILocation(line: 450, column: 1, scope: !12313)
!12333 = distinct !DISubprogram(name: "PendSV_Handler", scope: !1579, file: !1579, line: 469, type: !181, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !2135)
!12334 = !DILocation(line: 473, column: 2, scope: !12333)
!12335 = !{i64 18243, i64 18266, i64 18289, i64 18376, i64 18399, i64 18421, i64 18446, i64 18465, i64 18481, i64 18559, i64 18584, i64 18600, i64 18701, i64 18721, i64 18755, i64 18771, i64 18836, i64 18852, i64 18943, i64 18959, i64 18987, i64 19012, i64 19040, i64 19059, i64 19080, i64 19258, i64 19436, i64 19460, i64 19488, i64 19516, i64 19532, i64 19620, i64 19645, i64 19661, i64 19725, i64 19741, i64 19849, i64 19869, i64 19903, i64 19919, i64 19944, i64 19963, i64 20148, i64 20164, i64 20185, i64 20201, i64 20223}
!12336 = !DILocation(line: 537, column: 1, scope: !12333)
!12337 = distinct !DISubprogram(name: "SysTick_Handler", scope: !1579, file: !1579, line: 540, type: !181, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !12338)
!12338 = !{!12339}
!12339 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !12337, file: !1579, line: 547, type: !1332)
!12340 = !DILocation(line: 231, column: 2, scope: !12341, inlinedAt: !12345)
!12341 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !1333, file: !1333, line: 227, type: !2167, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !12342)
!12342 = !{!12343, !12344}
!12343 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !12341, file: !1333, line: 229, type: !136)
!12344 = !DILocalVariable(name: "ulNewBASEPRI", scope: !12341, file: !1333, line: 229, type: !136)
!12345 = distinct !DILocation(line: 548, column: 27, scope: !12337)
!12346 = !{i64 658042, i64 658079, i64 658111, i64 658147, i64 658174}
!12347 = !DILocation(line: 0, scope: !12341, inlinedAt: !12345)
!12348 = !DILocation(line: 0, scope: !12337)
!12349 = !DILocation(line: 552, column: 3, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12337, file: !1579, line: 549, column: 2)
!12351 = !DILocation(line: 555, column: 7, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12350, file: !1579, line: 555, column: 7)
!12353 = !DILocation(line: 555, column: 28, scope: !12352)
!12354 = !DILocation(line: 555, column: 7, scope: !12350)
!12355 = !DILocation(line: 559, column: 26, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12352, file: !1579, line: 556, column: 3)
!12357 = !DILocation(line: 560, column: 3, scope: !12356)
!12358 = !DILocation(line: 0, scope: !12324, inlinedAt: !12359)
!12359 = distinct !DILocation(line: 562, column: 2, scope: !12337)
!12360 = !DILocation(line: 249, column: 2, scope: !12324, inlinedAt: !12359)
!12361 = !DILocation(line: 564, column: 1, scope: !12337)
!12362 = distinct !DISubprogram(name: "vPortValidateInterruptPriority", scope: !1579, file: !1579, line: 757, type: !181, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1578, retainedNodes: !12363)
!12363 = !{!12364, !12365}
!12364 = !DILocalVariable(name: "ulCurrentInterrupt", scope: !12362, file: !1579, line: 759, type: !136)
!12365 = !DILocalVariable(name: "ucCurrentPriority", scope: !12362, file: !1579, line: 760, type: !128)
!12366 = !DILocation(line: 763, column: 3, scope: !12362)
!12367 = !{i64 28942}
!12368 = !DILocation(line: 0, scope: !12362)
!12369 = !DILocation(line: 766, column: 26, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12362, file: !1579, line: 766, column: 7)
!12371 = !DILocation(line: 766, column: 7, scope: !12362)
!12372 = !DILocation(line: 769, column: 24, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12370, file: !1579, line: 767, column: 3)
!12374 = !DILocation(line: 794, column: 4, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12373, file: !1579, line: 794, column: 4)
!12376 = !DILocation(line: 794, column: 4, scope: !12373)
!12377 = !DILocation(line: 794, column: 4, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12375, file: !1579, line: 794, column: 4)
!12379 = !DILocation(line: 810, column: 3, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12362, file: !1579, line: 810, column: 3)
!12381 = !DILocation(line: 810, column: 3, scope: !12362)
!12382 = !DILocation(line: 810, column: 3, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12380, file: !1579, line: 810, column: 3)
!12384 = !DILocation(line: 811, column: 2, scope: !12362)
!12385 = distinct !DISubprogram(name: "pvPortMalloc", scope: !1602, file: !1602, line: 162, type: !12386, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12388)
!12386 = !DISubroutineType(types: !12387)
!12387 = !{!161, !1387}
!12388 = !{!12389, !12390, !12391, !12392, !12393}
!12389 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !12385, file: !1602, line: 162, type: !1387)
!12390 = !DILocalVariable(name: "pxBlock", scope: !12385, file: !1602, line: 164, type: !1604)
!12391 = !DILocalVariable(name: "pxPreviousBlock", scope: !12385, file: !1602, line: 164, type: !1604)
!12392 = !DILocalVariable(name: "pxNewBlockLink", scope: !12385, file: !1602, line: 164, type: !1604)
!12393 = !DILocalVariable(name: "pvReturn", scope: !12385, file: !1602, line: 165, type: !161)
!12394 = !DILocation(line: 0, scope: !12385)
!12395 = !DILocation(line: 178, column: 2, scope: !12385)
!12396 = !DILocation(line: 182, column: 7, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12398, file: !1602, line: 182, column: 7)
!12398 = distinct !DILexicalBlock(scope: !12385, file: !1602, line: 179, column: 2)
!12399 = !DILocation(line: 182, column: 13, scope: !12397)
!12400 = !DILocation(line: 182, column: 7, scope: !12398)
!12401 = !DILocation(line: 184, column: 4, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12397, file: !1602, line: 183, column: 3)
!12403 = !DILocation(line: 185, column: 3, scope: !12402)
!12404 = !DILocation(line: 195, column: 23, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12398, file: !1602, line: 195, column: 7)
!12406 = !DILocation(line: 195, column: 21, scope: !12405)
!12407 = !DILocation(line: 195, column: 44, scope: !12405)
!12408 = !DILocation(line: 195, column: 7, scope: !12398)
!12409 = !DILocation(line: 201, column: 17, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12411, file: !1602, line: 200, column: 4)
!12411 = distinct !DILexicalBlock(scope: !12412, file: !1602, line: 199, column: 8)
!12412 = distinct !DILexicalBlock(scope: !12405, file: !1602, line: 196, column: 3)
!12413 = !DILocation(line: 205, column: 23, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12410, file: !1602, line: 205, column: 9)
!12415 = !DILocation(line: 205, column: 51, scope: !12414)
!12416 = !DILocation(line: 205, column: 9, scope: !12410)
!12417 = !DILocation(line: 221, column: 22, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12412, file: !1602, line: 221, column: 8)
!12419 = !DILocation(line: 221, column: 28, scope: !12418)
!12420 = !DILocation(line: 226, column: 22, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12418, file: !1602, line: 222, column: 4)
!12422 = !DILocation(line: 227, column: 23, scope: !12421)
!12423 = !DILocation(line: 227, column: 34, scope: !12421)
!12424 = !DILocation(line: 227, column: 50, scope: !12421)
!12425 = !DILocation(line: 227, column: 64, scope: !12421)
!12426 = !DILocation(line: 227, column: 80, scope: !12421)
!12427 = !DILocation(line: 227, column: 5, scope: !12421)
!12428 = distinct !{!12428, !12427, !12429}
!12429 = !DILocation(line: 231, column: 5, scope: !12421)
!12430 = !DILocation(line: 0, scope: !12421)
!12431 = !DILocation(line: 235, column: 20, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12421, file: !1602, line: 235, column: 9)
!12433 = !DILocation(line: 235, column: 17, scope: !12432)
!12434 = !DILocation(line: 235, column: 9, scope: !12421)
!12435 = !DILocation(line: 239, column: 63, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12432, file: !1602, line: 236, column: 5)
!12437 = !DILocation(line: 239, column: 81, scope: !12436)
!12438 = !DILocation(line: 246, column: 50, scope: !12436)
!12439 = !DILocation(line: 246, column: 39, scope: !12436)
!12440 = !DILocation(line: 250, column: 21, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12436, file: !1602, line: 250, column: 10)
!12442 = !DILocation(line: 250, column: 32, scope: !12441)
!12443 = !DILocation(line: 250, column: 48, scope: !12441)
!12444 = !DILocation(line: 250, column: 10, scope: !12436)
!12445 = !DILocation(line: 256, column: 39, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12441, file: !1602, line: 251, column: 6)
!12447 = !DILocation(line: 256, column: 63, scope: !12446)
!12448 = !DILocation(line: 256, column: 24, scope: !12446)
!12449 = !DILocation(line: 257, column: 7, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12446, file: !1602, line: 257, column: 7)
!12451 = !DILocation(line: 257, column: 7, scope: !12446)
!12452 = !DILocation(line: 257, column: 7, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12450, file: !1602, line: 257, column: 7)
!12454 = !DILocation(line: 261, column: 45, scope: !12446)
!12455 = !DILocation(line: 261, column: 56, scope: !12446)
!12456 = !DILocation(line: 261, column: 23, scope: !12446)
!12457 = !DILocation(line: 261, column: 34, scope: !12446)
!12458 = !DILocation(line: 262, column: 27, scope: !12446)
!12459 = !DILocation(line: 265, column: 7, scope: !12446)
!12460 = !DILocation(line: 272, column: 38, scope: !12436)
!12461 = !DILocation(line: 266, column: 6, scope: !12446)
!12462 = !DILocation(line: 272, column: 26, scope: !12436)
!12463 = !DILocation(line: 274, column: 32, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12436, file: !1602, line: 274, column: 10)
!12465 = !DILocation(line: 274, column: 30, scope: !12464)
!12466 = !DILocation(line: 274, column: 10, scope: !12436)
!12467 = !DILocation(line: 276, column: 38, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12464, file: !1602, line: 275, column: 6)
!12469 = !DILocation(line: 277, column: 6, scope: !12468)
!12470 = !DILocation(line: 285, column: 29, scope: !12436)
!12471 = !DILocation(line: 285, column: 26, scope: !12436)
!12472 = !DILocation(line: 286, column: 31, scope: !12436)
!12473 = !DILocation(line: 287, column: 5, scope: !12436)
!12474 = !DILocation(line: 305, column: 11, scope: !12385)
!12475 = !DILocation(line: 321, column: 2, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12385, file: !1602, line: 321, column: 2)
!12477 = !DILocation(line: 321, column: 2, scope: !12385)
!12478 = !DILocation(line: 321, column: 2, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12476, file: !1602, line: 321, column: 2)
!12480 = !DILocation(line: 322, column: 2, scope: !12385)
!12481 = distinct !DISubprogram(name: "prvHeapInit", scope: !1602, file: !1602, line: 392, type: !181, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12482)
!12482 = !{!12483, !12484, !12485, !12486}
!12483 = !DILocalVariable(name: "pxFirstFreeBlock", scope: !12481, file: !1602, line: 394, type: !1604)
!12484 = !DILocalVariable(name: "pucAlignedHeap", scope: !12481, file: !1602, line: 395, type: !340)
!12485 = !DILocalVariable(name: "ulAddress", scope: !12481, file: !1602, line: 396, type: !136)
!12486 = !DILocalVariable(name: "xTotalHeapSize", scope: !12481, file: !1602, line: 397, type: !1387)
!12487 = !DILocation(line: 0, scope: !12481)
!12488 = !DILocation(line: 412, column: 25, scope: !12481)
!12489 = !DILocation(line: 413, column: 20, scope: !12481)
!12490 = !DILocation(line: 420, column: 8, scope: !12481)
!12491 = !DILocation(line: 421, column: 20, scope: !12481)
!12492 = !DILocation(line: 422, column: 25, scope: !12481)
!12493 = !DILocation(line: 427, column: 31, scope: !12481)
!12494 = !DILocation(line: 428, column: 38, scope: !12481)
!12495 = !DILocation(line: 428, column: 36, scope: !12481)
!12496 = !DILocation(line: 434, column: 33, scope: !12481)
!12497 = !DILocation(line: 435, column: 22, scope: !12481)
!12498 = !DILocation(line: 438, column: 21, scope: !12481)
!12499 = !DILocation(line: 439, column: 1, scope: !12481)
!12500 = distinct !DISubprogram(name: "prvInsertBlockIntoFreeList", scope: !1602, file: !1602, line: 442, type: !12501, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12503)
!12501 = !DISubroutineType(types: !12502)
!12502 = !{null, !1604}
!12503 = !{!12504, !12505, !12506}
!12504 = !DILocalVariable(name: "pxBlockToInsert", arg: 1, scope: !12500, file: !1602, line: 442, type: !1604)
!12505 = !DILocalVariable(name: "pxIterator", scope: !12500, file: !1602, line: 444, type: !1604)
!12506 = !DILocalVariable(name: "puc", scope: !12500, file: !1602, line: 445, type: !340)
!12507 = !DILocation(line: 0, scope: !12500)
!12508 = !DILocation(line: 449, column: 7, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12500, file: !1602, line: 449, column: 2)
!12510 = !DILocation(line: 0, scope: !12509)
!12511 = !DILocation(line: 449, column: 41, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12509, file: !1602, line: 449, column: 2)
!12513 = !DILocation(line: 449, column: 57, scope: !12512)
!12514 = !DILocation(line: 449, column: 2, scope: !12509)
!12515 = distinct !{!12515, !12514, !12516}
!12516 = !DILocation(line: 452, column: 2, scope: !12509)
!12517 = !DILocation(line: 456, column: 8, scope: !12500)
!12518 = !DILocation(line: 457, column: 26, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12500, file: !1602, line: 457, column: 6)
!12520 = !DILocation(line: 457, column: 12, scope: !12519)
!12521 = !DILocation(line: 457, column: 42, scope: !12519)
!12522 = !DILocation(line: 457, column: 39, scope: !12519)
!12523 = !DILocation(line: 457, column: 6, scope: !12500)
!12524 = !DILocation(line: 459, column: 26, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12519, file: !1602, line: 458, column: 2)
!12526 = !DILocation(line: 461, column: 2, scope: !12525)
!12527 = !DILocation(line: 469, column: 8, scope: !12500)
!12528 = !DILocation(line: 470, column: 31, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12500, file: !1602, line: 470, column: 6)
!12530 = !DILocation(line: 470, column: 12, scope: !12529)
!12531 = !DILocation(line: 470, column: 47, scope: !12529)
!12532 = !DILocation(line: 470, column: 44, scope: !12529)
!12533 = !DILocation(line: 470, column: 6, scope: !12500)
!12534 = !DILocation(line: 475, column: 64, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12536, file: !1602, line: 473, column: 3)
!12536 = distinct !DILexicalBlock(scope: !12537, file: !1602, line: 472, column: 7)
!12537 = distinct !DILexicalBlock(scope: !12529, file: !1602, line: 471, column: 2)
!12538 = !DILocation(line: 475, column: 32, scope: !12535)
!12539 = !DILocation(line: 476, column: 51, scope: !12535)
!12540 = !DILocation(line: 476, column: 68, scope: !12535)
!12541 = !DILocation(line: 477, column: 3, scope: !12535)
!12542 = !DILocation(line: 0, scope: !12529)
!12543 = !DILocation(line: 492, column: 17, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12500, file: !1602, line: 492, column: 6)
!12545 = !DILocation(line: 492, column: 6, scope: !12500)
!12546 = !DILocation(line: 494, column: 31, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12544, file: !1602, line: 493, column: 2)
!12548 = !DILocation(line: 495, column: 2, scope: !12547)
!12549 = !DILocation(line: 500, column: 1, scope: !12500)
!12550 = distinct !DISubprogram(name: "vPortFree", scope: !1602, file: !1602, line: 326, type: !753, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12551)
!12551 = !{!12552, !12553, !12554}
!12552 = !DILocalVariable(name: "pv", arg: 1, scope: !12550, file: !1602, line: 326, type: !161)
!12553 = !DILocalVariable(name: "puc", scope: !12550, file: !1602, line: 328, type: !340)
!12554 = !DILocalVariable(name: "pxLink", scope: !12550, file: !1602, line: 329, type: !1604)
!12555 = !DILocation(line: 0, scope: !12550)
!12556 = !DILocation(line: 331, column: 9, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12550, file: !1602, line: 331, column: 6)
!12558 = !DILocation(line: 331, column: 6, scope: !12550)
!12559 = !DILocation(line: 335, column: 7, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12557, file: !1602, line: 332, column: 2)
!12561 = !DILocation(line: 338, column: 12, scope: !12560)
!12562 = !DILocation(line: 341, column: 3, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12560, file: !1602, line: 341, column: 3)
!12564 = !DILocation(line: 341, column: 3, scope: !12560)
!12565 = !DILocation(line: 341, column: 3, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12563, file: !1602, line: 341, column: 3)
!12567 = !DILocation(line: 342, column: 3, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12560, file: !1602, line: 342, column: 3)
!12569 = !DILocation(line: 342, column: 3, scope: !12560)
!12570 = !DILocation(line: 342, column: 3, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12568, file: !1602, line: 342, column: 3)
!12572 = !DILocation(line: 344, column: 17, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12560, file: !1602, line: 344, column: 7)
!12574 = !DILocation(line: 344, column: 30, scope: !12573)
!12575 = !DILocation(line: 344, column: 28, scope: !12573)
!12576 = !DILocation(line: 344, column: 51, scope: !12573)
!12577 = !DILocation(line: 344, column: 7, scope: !12560)
!12578 = !DILocation(line: 346, column: 16, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12580, file: !1602, line: 346, column: 8)
!12580 = distinct !DILexicalBlock(scope: !12573, file: !1602, line: 345, column: 3)
!12581 = !DILocation(line: 346, column: 32, scope: !12579)
!12582 = !DILocation(line: 346, column: 8, scope: !12580)
!12583 = !DILocation(line: 350, column: 27, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12579, file: !1602, line: 347, column: 4)
!12585 = !DILocation(line: 350, column: 24, scope: !12584)
!12586 = !DILocation(line: 352, column: 5, scope: !12584)
!12587 = !DILocation(line: 355, column: 37, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12584, file: !1602, line: 353, column: 5)
!12589 = !DILocation(line: 355, column: 26, scope: !12588)
!12590 = !DILocation(line: 357, column: 6, scope: !12588)
!12591 = !DILocation(line: 359, column: 14, scope: !12584)
!12592 = !DILocation(line: 360, column: 4, scope: !12584)
!12593 = !DILocation(line: 371, column: 1, scope: !12550)
!12594 = distinct !DISubprogram(name: "xPortGetFreeHeapSize", scope: !1602, file: !1602, line: 374, type: !12595, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !2135)
!12595 = !DISubroutineType(types: !12596)
!12596 = !{!1387}
!12597 = !DILocation(line: 376, column: 9, scope: !12594)
!12598 = !DILocation(line: 376, column: 2, scope: !12594)
!12599 = distinct !DISubprogram(name: "xPortGetMinimumEverFreeHeapSize", scope: !1602, file: !1602, line: 380, type: !12595, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !2135)
!12600 = !DILocation(line: 382, column: 9, scope: !12599)
!12601 = !DILocation(line: 382, column: 2, scope: !12599)
!12602 = distinct !DISubprogram(name: "vPortInitialiseBlocks", scope: !1602, file: !1602, line: 386, type: !181, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !2135)
!12603 = !DILocation(line: 389, column: 1, scope: !12602)
!12604 = distinct !DISubprogram(name: "pvPortCalloc", scope: !1602, file: !1602, line: 505, type: !12605, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12607)
!12605 = !DISubroutineType(types: !12606)
!12606 = !{!161, !1387, !1387}
!12607 = !{!12608, !12609, !12610}
!12608 = !DILocalVariable(name: "nmemb", arg: 1, scope: !12604, file: !1602, line: 505, type: !1387)
!12609 = !DILocalVariable(name: "size", arg: 2, scope: !12604, file: !1602, line: 505, type: !1387)
!12610 = !DILocalVariable(name: "pvReturn", scope: !12604, file: !1602, line: 507, type: !161)
!12611 = !DILocation(line: 0, scope: !12604)
!12612 = !DILocation(line: 516, column: 35, scope: !12604)
!12613 = !DILocation(line: 516, column: 16, scope: !12604)
!12614 = !DILocation(line: 518, column: 9, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12604, file: !1602, line: 518, column: 9)
!12616 = !DILocation(line: 518, column: 9, scope: !12604)
!12617 = !DILocation(line: 520, column: 9, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12615, file: !1602, line: 519, column: 5)
!12619 = !DILocation(line: 521, column: 5, scope: !12618)
!12620 = !DILocation(line: 523, column: 5, scope: !12604)
!12621 = distinct !DISubprogram(name: "pvPortRealloc", scope: !1602, file: !1602, line: 528, type: !12622, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12624)
!12622 = !DISubroutineType(types: !12623)
!12623 = !{!161, !161, !1387}
!12624 = !{!12625, !12626, !12627, !12628, !12629, !12630}
!12625 = !DILocalVariable(name: "pv", arg: 1, scope: !12621, file: !1602, line: 528, type: !161)
!12626 = !DILocalVariable(name: "size", arg: 2, scope: !12621, file: !1602, line: 528, type: !1387)
!12627 = !DILocalVariable(name: "pvReturn", scope: !12621, file: !1602, line: 530, type: !161)
!12628 = !DILocalVariable(name: "xBlockSize", scope: !12621, file: !1602, line: 531, type: !1387)
!12629 = !DILocalVariable(name: "puc", scope: !12621, file: !1602, line: 532, type: !340)
!12630 = !DILocalVariable(name: "pxLink", scope: !12621, file: !1602, line: 533, type: !1604)
!12631 = !DILocation(line: 0, scope: !12621)
!12632 = !DILocation(line: 535, column: 16, scope: !12621)
!12633 = !DILocation(line: 537, column: 12, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12621, file: !1602, line: 537, column: 9)
!12635 = !DILocation(line: 537, column: 9, scope: !12621)
!12636 = !DILocation(line: 540, column: 13, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !12634, file: !1602, line: 538, column: 5)
!12638 = !DILocation(line: 546, column: 9, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12637, file: !1602, line: 546, column: 9)
!12640 = !DILocation(line: 546, column: 9, scope: !12637)
!12641 = !DILocation(line: 546, column: 9, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12639, file: !1602, line: 546, column: 9)
!12643 = !DILocation(line: 547, column: 9, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12637, file: !1602, line: 547, column: 9)
!12645 = !DILocation(line: 547, column: 9, scope: !12637)
!12646 = !DILocation(line: 547, column: 9, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12644, file: !1602, line: 547, column: 9)
!12648 = !DILocation(line: 550, column: 31, scope: !12637)
!12649 = !DILocation(line: 550, column: 45, scope: !12637)
!12650 = !DILocation(line: 550, column: 44, scope: !12637)
!12651 = !DILocation(line: 550, column: 42, scope: !12637)
!12652 = !DILocation(line: 553, column: 34, scope: !12637)
!12653 = !DILocation(line: 555, column: 23, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12637, file: !1602, line: 555, column: 12)
!12655 = !DILocation(line: 0, scope: !12654)
!12656 = !DILocation(line: 561, column: 9, scope: !12637)
!12657 = !DILocation(line: 562, column: 5, scope: !12637)
!12658 = !DILocation(line: 564, column: 5, scope: !12621)
!12659 = distinct !DISubprogram(name: "pvPortMallocNC", scope: !1602, file: !1602, line: 570, type: !12386, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12660)
!12660 = !{!12661}
!12661 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !12659, file: !1602, line: 570, type: !1387)
!12662 = !DILocation(line: 0, scope: !12659)
!12663 = !DILocation(line: 649, column: 12, scope: !12659)
!12664 = !DILocation(line: 649, column: 5, scope: !12659)
!12665 = distinct !DISubprogram(name: "vPortFreeNC", scope: !1602, file: !1602, line: 652, type: !753, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12666)
!12666 = !{!12667}
!12667 = !DILocalVariable(name: "pv", arg: 1, scope: !12665, file: !1602, line: 652, type: !161)
!12668 = !DILocation(line: 0, scope: !12665)
!12669 = !DILocation(line: 680, column: 5, scope: !12665)
!12670 = !DILocation(line: 682, column: 1, scope: !12665)
!12671 = distinct !DISubprogram(name: "__wrap_malloc", scope: !1602, file: !1602, line: 686, type: !12386, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12672)
!12672 = !{!12673}
!12673 = !DILocalVariable(name: "size", arg: 1, scope: !12671, file: !1602, line: 686, type: !1387)
!12674 = !DILocation(line: 0, scope: !12671)
!12675 = !DILocation(line: 688, column: 12, scope: !12671)
!12676 = !DILocation(line: 688, column: 5, scope: !12671)
!12677 = distinct !DISubprogram(name: "__wrap_calloc", scope: !1602, file: !1602, line: 690, type: !12605, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12678)
!12678 = !{!12679, !12680}
!12679 = !DILocalVariable(name: "nmemb", arg: 1, scope: !12677, file: !1602, line: 690, type: !1387)
!12680 = !DILocalVariable(name: "size", arg: 2, scope: !12677, file: !1602, line: 690, type: !1387)
!12681 = !DILocation(line: 0, scope: !12677)
!12682 = !DILocation(line: 692, column: 12, scope: !12677)
!12683 = !DILocation(line: 692, column: 5, scope: !12677)
!12684 = distinct !DISubprogram(name: "__wrap_realloc", scope: !1602, file: !1602, line: 694, type: !12622, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12685)
!12685 = !{!12686, !12687}
!12686 = !DILocalVariable(name: "pv", arg: 1, scope: !12684, file: !1602, line: 694, type: !161)
!12687 = !DILocalVariable(name: "size", arg: 2, scope: !12684, file: !1602, line: 694, type: !1387)
!12688 = !DILocation(line: 0, scope: !12684)
!12689 = !DILocation(line: 696, column: 12, scope: !12684)
!12690 = !DILocation(line: 696, column: 5, scope: !12684)
!12691 = distinct !DISubprogram(name: "__wrap_free", scope: !1602, file: !1602, line: 698, type: !753, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1601, retainedNodes: !12692)
!12692 = !{!12693}
!12693 = !DILocalVariable(name: "pv", arg: 1, scope: !12691, file: !1602, line: 698, type: !161)
!12694 = !DILocation(line: 0, scope: !12691)
!12695 = !DILocation(line: 700, column: 6, scope: !12691)
!12696 = !DILocation(line: 701, column: 1, scope: !12691)
!12697 = distinct !DISubprogram(name: "vPortSetupTimerInterrupt", scope: !2111, file: !2111, line: 769, type: !181, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !2135)
!12698 = !DILocation(line: 781, column: 22, scope: !12697)
!12699 = !DILocation(line: 781, column: 45, scope: !12697)
!12700 = !DILocation(line: 781, column: 67, scope: !12697)
!12701 = !DILocation(line: 781, column: 19, scope: !12697)
!12702 = !DILocation(line: 782, column: 19, scope: !12697)
!12703 = !DILocation(line: 783, column: 1, scope: !12697)
!12704 = distinct !DISubprogram(name: "abort", scope: !1632, file: !1632, line: 108, type: !181, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !2135)
!12705 = !DILocation(line: 110, column: 5, scope: !12704)
!12706 = !{i64 4281}
!12707 = !DILocation(line: 111, column: 14, scope: !12704)
!12708 = !DILocation(line: 112, column: 45, scope: !12704)
!12709 = !DILocation(line: 113, column: 5, scope: !12704)
!12710 = !DILocation(line: 113, column: 5, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12712, file: !1632, line: 113, column: 5)
!12712 = distinct !DILexicalBlock(scope: !12704, file: !1632, line: 113, column: 5)
!12713 = distinct !{!12713, !12714, !12715}
!12714 = !DILocation(line: 113, column: 5, scope: !12712)
!12715 = !DILocation(line: 113, column: 13, scope: !12712)
!12716 = distinct !DISubprogram(name: "platform_assert", scope: !1632, file: !1632, line: 116, type: !12717, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !12719)
!12717 = !DISubroutineType(types: !12718)
!12718 = !{null, !444, !444, !53}
!12719 = !{!12720, !12721, !12722}
!12720 = !DILocalVariable(name: "expr", arg: 1, scope: !12716, file: !1632, line: 116, type: !444)
!12721 = !DILocalVariable(name: "file", arg: 2, scope: !12716, file: !1632, line: 116, type: !444)
!12722 = !DILocalVariable(name: "line", arg: 3, scope: !12716, file: !1632, line: 116, type: !53)
!12723 = !DILocation(line: 0, scope: !12716)
!12724 = !DILocation(line: 118, column: 5, scope: !12716)
!12725 = !{i64 4480}
!12726 = !DILocation(line: 119, column: 14, scope: !12716)
!12727 = !DILocation(line: 120, column: 26, scope: !12716)
!12728 = !DILocation(line: 121, column: 22, scope: !12716)
!12729 = !DILocation(line: 122, column: 22, scope: !12716)
!12730 = !DILocation(line: 123, column: 22, scope: !12716)
!12731 = !DILocation(line: 124, column: 45, scope: !12716)
!12732 = !DILocation(line: 125, column: 5, scope: !12716)
!12733 = !DILocation(line: 125, column: 5, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12735, file: !1632, line: 125, column: 5)
!12735 = distinct !DILexicalBlock(scope: !12716, file: !1632, line: 125, column: 5)
!12736 = distinct !{!12736, !12737, !12738}
!12737 = !DILocation(line: 125, column: 5, scope: !12735)
!12738 = !DILocation(line: 125, column: 13, scope: !12735)
!12739 = distinct !DISubprogram(name: "exception_dump_config", scope: !1632, file: !1632, line: 128, type: !1249, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !12740)
!12740 = !{!12741}
!12741 = !DILocalVariable(name: "flag", arg: 1, scope: !12739, file: !1632, line: 128, type: !53)
!12742 = !DILocation(line: 0, scope: !12739)
!12743 = !DILocation(line: 130, column: 17, scope: !12739)
!12744 = !DILocation(line: 131, column: 1, scope: !12739)
!12745 = distinct !DISubprogram(name: "exception_register_callbacks", scope: !1632, file: !1632, line: 142, type: !12746, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !12749)
!12746 = !DISubroutineType(types: !12747)
!12747 = !{!126, !12748}
!12748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 32)
!12749 = !{!12750, !12751}
!12750 = !DILocalVariable(name: "cb", arg: 1, scope: !12745, file: !1632, line: 142, type: !12748)
!12751 = !DILocalVariable(name: "i", scope: !12745, file: !1632, line: 144, type: !53)
!12752 = !DILocation(line: 0, scope: !12745)
!12753 = !DILocation(line: 146, column: 26, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12745, file: !1632, line: 146, column: 9)
!12755 = !DILocation(line: 146, column: 32, scope: !12754)
!12756 = !DILocation(line: 146, column: 9, scope: !12745)
!12757 = !DILocation(line: 150, column: 22, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !1632, line: 150, column: 8)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !1632, line: 150, column: 8)
!12760 = distinct !DILexicalBlock(scope: !12754, file: !1632, line: 148, column: 12)
!12761 = !DILocation(line: 150, column: 8, scope: !12759)
!12762 = !DILocation(line: 151, column: 45, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12764, file: !1632, line: 151, column: 17)
!12764 = distinct !DILexicalBlock(scope: !12758, file: !1632, line: 150, column: 53)
!12765 = !DILocation(line: 151, column: 53, scope: !12763)
!12766 = !DILocation(line: 152, column: 14, scope: !12763)
!12767 = !DILocation(line: 152, column: 45, scope: !12763)
!12768 = !DILocation(line: 152, column: 60, scope: !12763)
!12769 = !DILocation(line: 152, column: 53, scope: !12763)
!12770 = !DILocation(line: 151, column: 17, scope: !12764)
!12771 = !DILocation(line: 150, column: 49, scope: !12758)
!12772 = distinct !{!12772, !12761, !12773}
!12773 = !DILocation(line: 155, column: 8, scope: !12759)
!12774 = !DILocation(line: 156, column: 57, scope: !12760)
!12775 = !DILocation(line: 156, column: 65, scope: !12760)
!12776 = !DILocation(line: 157, column: 71, scope: !12760)
!12777 = !DILocation(line: 157, column: 57, scope: !12760)
!12778 = !DILocation(line: 157, column: 65, scope: !12760)
!12779 = !DILocation(line: 158, column: 30, scope: !12760)
!12780 = !DILocation(line: 159, column: 8, scope: !12760)
!12781 = !DILocation(line: 0, scope: !12754)
!12782 = !DILocation(line: 161, column: 1, scope: !12745)
!12783 = distinct !DISubprogram(name: "exception_init", scope: !1632, file: !1632, line: 163, type: !181, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !12784)
!12784 = !{!12785}
!12785 = !DILocalVariable(name: "i", scope: !12783, file: !1632, line: 165, type: !53)
!12786 = !DILocation(line: 167, column: 14, scope: !12783)
!12787 = !DILocation(line: 170, column: 5, scope: !12783)
!12788 = !DILocation(line: 0, scope: !12783)
!12789 = !DILocation(line: 177, column: 38, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12791, file: !1632, line: 177, column: 5)
!12791 = distinct !DILexicalBlock(scope: !12783, file: !1632, line: 177, column: 5)
!12792 = !DILocation(line: 177, column: 19, scope: !12790)
!12793 = !DILocation(line: 177, column: 5, scope: !12791)
!12794 = !DILocation(line: 178, column: 41, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12796, file: !1632, line: 178, column: 13)
!12796 = distinct !DILexicalBlock(scope: !12790, file: !1632, line: 177, column: 50)
!12797 = !DILocation(line: 178, column: 13, scope: !12795)
!12798 = !DILocation(line: 178, column: 13, scope: !12796)
!12799 = !DILocation(line: 179, column: 13, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12795, file: !1632, line: 178, column: 50)
!12801 = !DILocation(line: 180, column: 9, scope: !12800)
!12802 = !DILocation(line: 177, column: 46, scope: !12790)
!12803 = distinct !{!12803, !12793, !12804}
!12804 = !DILocation(line: 181, column: 5, scope: !12791)
!12805 = !DILocation(line: 183, column: 21, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12783, file: !1632, line: 183, column: 9)
!12807 = !DILocation(line: 183, column: 9, scope: !12783)
!12808 = !DILocation(line: 185, column: 28, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12806, file: !1632, line: 183, column: 31)
!12810 = !DILocation(line: 186, column: 28, scope: !12809)
!12811 = !DILocation(line: 187, column: 28, scope: !12809)
!12812 = !DILocation(line: 184, column: 9, scope: !12809)
!12813 = !DILocation(line: 188, column: 5, scope: !12809)
!12814 = !DILocation(line: 189, column: 1, scope: !12783)
!12815 = distinct !DISubprogram(name: "NMI_Handler", scope: !1632, file: !1632, line: 196, type: !181, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !2135)
!12816 = !DILocation(line: 198, column: 1, scope: !12815)
!12817 = distinct !DISubprogram(name: "printUsageErrorMsg", scope: !1632, file: !1632, line: 200, type: !2198, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !12818)
!12818 = !{!12819}
!12819 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !12817, file: !1632, line: 200, type: !136)
!12820 = !DILocation(line: 0, scope: !12817)
!12821 = !DILocation(line: 202, column: 5, scope: !12817)
!12822 = !DILocation(line: 204, column: 32, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12817, file: !1632, line: 204, column: 9)
!12824 = !DILocation(line: 204, column: 9, scope: !12817)
!12825 = !DILocation(line: 205, column: 9, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12823, file: !1632, line: 204, column: 38)
!12827 = !DILocation(line: 206, column: 5, scope: !12826)
!12828 = !DILocation(line: 207, column: 32, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12817, file: !1632, line: 207, column: 9)
!12830 = !DILocation(line: 207, column: 9, scope: !12817)
!12831 = !DILocation(line: 208, column: 9, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12829, file: !1632, line: 207, column: 38)
!12833 = !DILocation(line: 209, column: 5, scope: !12832)
!12834 = !DILocation(line: 210, column: 32, scope: !12835)
!12835 = distinct !DILexicalBlock(scope: !12817, file: !1632, line: 210, column: 9)
!12836 = !DILocation(line: 210, column: 9, scope: !12817)
!12837 = !DILocation(line: 211, column: 9, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12835, file: !1632, line: 210, column: 38)
!12839 = !DILocation(line: 212, column: 5, scope: !12838)
!12840 = !DILocation(line: 213, column: 32, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12817, file: !1632, line: 213, column: 9)
!12842 = !DILocation(line: 213, column: 9, scope: !12817)
!12843 = !DILocation(line: 214, column: 9, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !12841, file: !1632, line: 213, column: 38)
!12845 = !DILocation(line: 215, column: 5, scope: !12844)
!12846 = !DILocation(line: 216, column: 32, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12817, file: !1632, line: 216, column: 9)
!12848 = !DILocation(line: 216, column: 9, scope: !12817)
!12849 = !DILocation(line: 217, column: 9, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12847, file: !1632, line: 216, column: 38)
!12851 = !DILocation(line: 218, column: 5, scope: !12850)
!12852 = !DILocation(line: 219, column: 32, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12817, file: !1632, line: 219, column: 9)
!12854 = !DILocation(line: 219, column: 9, scope: !12817)
!12855 = !DILocation(line: 220, column: 9, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12853, file: !1632, line: 219, column: 38)
!12857 = !DILocation(line: 221, column: 5, scope: !12856)
!12858 = !DILocation(line: 222, column: 1, scope: !12817)
!12859 = distinct !DISubprogram(name: "printMemoryManagementErrorMsg", scope: !1632, file: !1632, line: 224, type: !2198, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !12860)
!12860 = !{!12861}
!12861 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !12859, file: !1632, line: 224, type: !136)
!12862 = !DILocation(line: 0, scope: !12859)
!12863 = !DILocation(line: 226, column: 5, scope: !12859)
!12864 = !DILocation(line: 228, column: 20, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12859, file: !1632, line: 228, column: 9)
!12866 = !DILocation(line: 228, column: 32, scope: !12865)
!12867 = !DILocation(line: 228, column: 9, scope: !12859)
!12868 = !DILocation(line: 229, column: 9, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12865, file: !1632, line: 228, column: 38)
!12870 = !DILocation(line: 230, column: 5, scope: !12869)
!12871 = !DILocation(line: 231, column: 20, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12859, file: !1632, line: 231, column: 9)
!12873 = !DILocation(line: 231, column: 32, scope: !12872)
!12874 = !DILocation(line: 231, column: 9, scope: !12859)
!12875 = !DILocation(line: 232, column: 9, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12872, file: !1632, line: 231, column: 38)
!12877 = !DILocation(line: 233, column: 5, scope: !12876)
!12878 = !DILocation(line: 234, column: 20, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12859, file: !1632, line: 234, column: 9)
!12880 = !DILocation(line: 234, column: 32, scope: !12879)
!12881 = !DILocation(line: 234, column: 9, scope: !12859)
!12882 = !DILocation(line: 235, column: 9, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12879, file: !1632, line: 234, column: 38)
!12884 = !DILocation(line: 236, column: 5, scope: !12883)
!12885 = !DILocation(line: 237, column: 20, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12859, file: !1632, line: 237, column: 9)
!12887 = !DILocation(line: 237, column: 32, scope: !12886)
!12888 = !DILocation(line: 237, column: 9, scope: !12859)
!12889 = !DILocation(line: 238, column: 72, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12886, file: !1632, line: 237, column: 38)
!12891 = !DILocation(line: 238, column: 9, scope: !12890)
!12892 = !DILocation(line: 239, column: 5, scope: !12890)
!12893 = !DILocation(line: 240, column: 20, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12859, file: !1632, line: 240, column: 9)
!12895 = !DILocation(line: 240, column: 32, scope: !12894)
!12896 = !DILocation(line: 240, column: 9, scope: !12859)
!12897 = !DILocation(line: 241, column: 9, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12894, file: !1632, line: 240, column: 38)
!12899 = !DILocation(line: 242, column: 5, scope: !12898)
!12900 = !DILocation(line: 243, column: 20, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12859, file: !1632, line: 243, column: 9)
!12902 = !DILocation(line: 243, column: 32, scope: !12901)
!12903 = !DILocation(line: 243, column: 9, scope: !12859)
!12904 = !DILocation(line: 244, column: 62, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12901, file: !1632, line: 243, column: 38)
!12906 = !DILocation(line: 244, column: 9, scope: !12905)
!12907 = !DILocation(line: 245, column: 5, scope: !12905)
!12908 = !DILocation(line: 246, column: 1, scope: !12859)
!12909 = distinct !DISubprogram(name: "printBusFaultErrorMsg", scope: !1632, file: !1632, line: 248, type: !2198, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !12910)
!12910 = !{!12911}
!12911 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !12909, file: !1632, line: 248, type: !136)
!12912 = !DILocation(line: 0, scope: !12909)
!12913 = !DILocation(line: 250, column: 5, scope: !12909)
!12914 = !DILocation(line: 253, column: 32, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12909, file: !1632, line: 253, column: 9)
!12916 = !DILocation(line: 253, column: 9, scope: !12909)
!12917 = !DILocation(line: 254, column: 9, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12915, file: !1632, line: 253, column: 38)
!12919 = !DILocation(line: 255, column: 5, scope: !12918)
!12920 = !DILocation(line: 256, column: 32, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12909, file: !1632, line: 256, column: 9)
!12922 = !DILocation(line: 256, column: 9, scope: !12909)
!12923 = !DILocation(line: 257, column: 9, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12921, file: !1632, line: 256, column: 38)
!12925 = !DILocation(line: 258, column: 5, scope: !12924)
!12926 = !DILocation(line: 259, column: 32, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12909, file: !1632, line: 259, column: 9)
!12928 = !DILocation(line: 259, column: 9, scope: !12909)
!12929 = !DILocation(line: 260, column: 9, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12927, file: !1632, line: 259, column: 38)
!12931 = !DILocation(line: 261, column: 5, scope: !12930)
!12932 = !DILocation(line: 262, column: 32, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12909, file: !1632, line: 262, column: 9)
!12934 = !DILocation(line: 262, column: 9, scope: !12909)
!12935 = !DILocation(line: 263, column: 9, scope: !12936)
!12936 = distinct !DILexicalBlock(scope: !12933, file: !1632, line: 262, column: 38)
!12937 = !DILocation(line: 264, column: 5, scope: !12936)
!12938 = !DILocation(line: 265, column: 32, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12909, file: !1632, line: 265, column: 9)
!12940 = !DILocation(line: 265, column: 9, scope: !12909)
!12941 = !DILocation(line: 266, column: 90, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12939, file: !1632, line: 265, column: 38)
!12943 = !DILocation(line: 266, column: 9, scope: !12942)
!12944 = !DILocation(line: 267, column: 5, scope: !12942)
!12945 = !DILocation(line: 268, column: 32, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12909, file: !1632, line: 268, column: 9)
!12947 = !DILocation(line: 268, column: 9, scope: !12909)
!12948 = !DILocation(line: 269, column: 9, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12946, file: !1632, line: 268, column: 38)
!12950 = !DILocation(line: 270, column: 5, scope: !12949)
!12951 = !DILocation(line: 271, column: 32, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12909, file: !1632, line: 271, column: 9)
!12953 = !DILocation(line: 271, column: 9, scope: !12909)
!12954 = !DILocation(line: 272, column: 61, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12952, file: !1632, line: 271, column: 38)
!12956 = !DILocation(line: 272, column: 9, scope: !12955)
!12957 = !DILocation(line: 273, column: 5, scope: !12955)
!12958 = !DILocation(line: 274, column: 1, scope: !12909)
!12959 = distinct !DISubprogram(name: "exception_reboot", scope: !1632, file: !1632, line: 799, type: !181, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !2135)
!12960 = !DILocation(line: 805, column: 5, scope: !12959)
!12961 = distinct !DISubprogram(name: "stackDump", scope: !1632, file: !1632, line: 823, type: !12962, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !12964)
!12962 = !DISubroutineType(types: !12963)
!12963 = !{null, !3543}
!12964 = !{!12965}
!12965 = !DILocalVariable(name: "stack", arg: 1, scope: !12961, file: !1632, line: 823, type: !3543)
!12966 = !DILocation(line: 0, scope: !12961)
!12967 = !DILocation(line: 825, column: 24, scope: !12961)
!12968 = !DILocation(line: 825, column: 22, scope: !12961)
!12969 = !DILocation(line: 826, column: 24, scope: !12961)
!12970 = !DILocation(line: 826, column: 22, scope: !12961)
!12971 = !DILocation(line: 827, column: 24, scope: !12961)
!12972 = !DILocation(line: 827, column: 22, scope: !12961)
!12973 = !DILocation(line: 828, column: 24, scope: !12961)
!12974 = !DILocation(line: 828, column: 22, scope: !12961)
!12975 = !DILocation(line: 829, column: 24, scope: !12961)
!12976 = !DILocation(line: 829, column: 22, scope: !12961)
!12977 = !DILocation(line: 830, column: 25, scope: !12961)
!12978 = !DILocation(line: 830, column: 42, scope: !12961)
!12979 = !DILocation(line: 830, column: 22, scope: !12961)
!12980 = !DILocation(line: 831, column: 24, scope: !12961)
!12981 = !DILocation(line: 831, column: 22, scope: !12961)
!12982 = !DILocation(line: 832, column: 24, scope: !12961)
!12983 = !DILocation(line: 832, column: 22, scope: !12961)
!12984 = !DILocation(line: 833, column: 24, scope: !12961)
!12985 = !DILocation(line: 833, column: 22, scope: !12961)
!12986 = !DILocation(line: 836, column: 23, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12961, file: !1632, line: 836, column: 10)
!12988 = !DILocation(line: 836, column: 34, scope: !12987)
!12989 = !DILocation(line: 836, column: 42, scope: !12987)
!12990 = !DILocation(line: 836, column: 10, scope: !12961)
!12991 = !DILocation(line: 837, column: 26, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12987, file: !1632, line: 836, column: 49)
!12993 = !DILocation(line: 837, column: 24, scope: !12992)
!12994 = !DILocation(line: 838, column: 26, scope: !12992)
!12995 = !DILocation(line: 838, column: 24, scope: !12992)
!12996 = !DILocation(line: 839, column: 26, scope: !12992)
!12997 = !DILocation(line: 839, column: 24, scope: !12992)
!12998 = !DILocation(line: 840, column: 26, scope: !12992)
!12999 = !DILocation(line: 840, column: 24, scope: !12992)
!13000 = !DILocation(line: 841, column: 26, scope: !12992)
!13001 = !DILocation(line: 841, column: 24, scope: !12992)
!13002 = !DILocation(line: 842, column: 26, scope: !12992)
!13003 = !DILocation(line: 842, column: 24, scope: !12992)
!13004 = !DILocation(line: 843, column: 26, scope: !12992)
!13005 = !DILocation(line: 843, column: 24, scope: !12992)
!13006 = !DILocation(line: 844, column: 26, scope: !12992)
!13007 = !DILocation(line: 844, column: 24, scope: !12992)
!13008 = !DILocation(line: 845, column: 26, scope: !12992)
!13009 = !DILocation(line: 845, column: 24, scope: !12992)
!13010 = !DILocation(line: 846, column: 26, scope: !12992)
!13011 = !DILocation(line: 846, column: 24, scope: !12992)
!13012 = !DILocation(line: 847, column: 27, scope: !12992)
!13013 = !DILocation(line: 847, column: 25, scope: !12992)
!13014 = !DILocation(line: 848, column: 27, scope: !12992)
!13015 = !DILocation(line: 848, column: 25, scope: !12992)
!13016 = !DILocation(line: 849, column: 27, scope: !12992)
!13017 = !DILocation(line: 849, column: 25, scope: !12992)
!13018 = !DILocation(line: 850, column: 27, scope: !12992)
!13019 = !DILocation(line: 850, column: 25, scope: !12992)
!13020 = !DILocation(line: 851, column: 27, scope: !12992)
!13021 = !DILocation(line: 851, column: 25, scope: !12992)
!13022 = !DILocation(line: 852, column: 27, scope: !12992)
!13023 = !DILocation(line: 852, column: 25, scope: !12992)
!13024 = !DILocation(line: 853, column: 29, scope: !12992)
!13025 = !DILocation(line: 853, column: 27, scope: !12992)
!13026 = !DILocation(line: 854, column: 24, scope: !12992)
!13027 = !DILocation(line: 855, column: 5, scope: !12992)
!13028 = !DILocation(line: 858, column: 16, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !12961, file: !1632, line: 858, column: 10)
!13030 = !DILocation(line: 858, column: 20, scope: !13029)
!13031 = !DILocation(line: 858, column: 44, scope: !13029)
!13032 = !DILocation(line: 859, column: 24, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13029, file: !1632, line: 858, column: 74)
!13034 = !DILocation(line: 860, column: 5, scope: !13033)
!13035 = !DILocation(line: 862, column: 5, scope: !12961)
!13036 = !DILocation(line: 863, column: 44, scope: !12961)
!13037 = !DILocation(line: 863, column: 5, scope: !12961)
!13038 = !DILocation(line: 864, column: 44, scope: !12961)
!13039 = !DILocation(line: 864, column: 5, scope: !12961)
!13040 = !DILocation(line: 865, column: 44, scope: !12961)
!13041 = !DILocation(line: 865, column: 5, scope: !12961)
!13042 = !DILocation(line: 866, column: 44, scope: !12961)
!13043 = !DILocation(line: 866, column: 5, scope: !12961)
!13044 = !DILocation(line: 867, column: 44, scope: !12961)
!13045 = !DILocation(line: 867, column: 5, scope: !12961)
!13046 = !DILocation(line: 868, column: 44, scope: !12961)
!13047 = !DILocation(line: 868, column: 5, scope: !12961)
!13048 = !DILocation(line: 869, column: 44, scope: !12961)
!13049 = !DILocation(line: 869, column: 5, scope: !12961)
!13050 = !DILocation(line: 870, column: 44, scope: !12961)
!13051 = !DILocation(line: 870, column: 5, scope: !12961)
!13052 = !DILocation(line: 871, column: 44, scope: !12961)
!13053 = !DILocation(line: 871, column: 5, scope: !12961)
!13054 = !DILocation(line: 872, column: 44, scope: !12961)
!13055 = !DILocation(line: 872, column: 5, scope: !12961)
!13056 = !DILocation(line: 873, column: 44, scope: !12961)
!13057 = !DILocation(line: 873, column: 5, scope: !12961)
!13058 = !DILocation(line: 874, column: 44, scope: !12961)
!13059 = !DILocation(line: 874, column: 5, scope: !12961)
!13060 = !DILocation(line: 875, column: 44, scope: !12961)
!13061 = !DILocation(line: 875, column: 5, scope: !12961)
!13062 = !DILocation(line: 876, column: 44, scope: !12961)
!13063 = !DILocation(line: 876, column: 5, scope: !12961)
!13064 = !DILocation(line: 877, column: 44, scope: !12961)
!13065 = !DILocation(line: 877, column: 5, scope: !12961)
!13066 = !DILocation(line: 878, column: 48, scope: !12961)
!13067 = !DILocation(line: 878, column: 5, scope: !12961)
!13068 = !DILocation(line: 881, column: 21, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !12961, file: !1632, line: 881, column: 9)
!13070 = !DILocation(line: 881, column: 32, scope: !13069)
!13071 = !DILocation(line: 881, column: 9, scope: !12961)
!13072 = !DILocation(line: 882, column: 29, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13069, file: !1632, line: 881, column: 39)
!13074 = !DILocation(line: 884, column: 5, scope: !13073)
!13075 = !DILocation(line: 0, scope: !13069)
!13076 = !DILocation(line: 889, column: 34, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !12961, file: !1632, line: 889, column: 10)
!13078 = !DILocation(line: 889, column: 42, scope: !13077)
!13079 = !DILocation(line: 889, column: 10, scope: !12961)
!13080 = !DILocation(line: 890, column: 29, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13077, file: !1632, line: 889, column: 49)
!13082 = !DILocation(line: 891, column: 48, scope: !13081)
!13083 = !DILocation(line: 891, column: 9, scope: !13081)
!13084 = !DILocation(line: 892, column: 48, scope: !13081)
!13085 = !DILocation(line: 892, column: 9, scope: !13081)
!13086 = !DILocation(line: 893, column: 48, scope: !13081)
!13087 = !DILocation(line: 893, column: 9, scope: !13081)
!13088 = !DILocation(line: 894, column: 48, scope: !13081)
!13089 = !DILocation(line: 894, column: 9, scope: !13081)
!13090 = !DILocation(line: 895, column: 48, scope: !13081)
!13091 = !DILocation(line: 895, column: 9, scope: !13081)
!13092 = !DILocation(line: 896, column: 48, scope: !13081)
!13093 = !DILocation(line: 896, column: 9, scope: !13081)
!13094 = !DILocation(line: 897, column: 48, scope: !13081)
!13095 = !DILocation(line: 897, column: 9, scope: !13081)
!13096 = !DILocation(line: 898, column: 48, scope: !13081)
!13097 = !DILocation(line: 898, column: 9, scope: !13081)
!13098 = !DILocation(line: 899, column: 48, scope: !13081)
!13099 = !DILocation(line: 899, column: 9, scope: !13081)
!13100 = !DILocation(line: 900, column: 48, scope: !13081)
!13101 = !DILocation(line: 900, column: 9, scope: !13081)
!13102 = !DILocation(line: 901, column: 48, scope: !13081)
!13103 = !DILocation(line: 901, column: 9, scope: !13081)
!13104 = !DILocation(line: 902, column: 48, scope: !13081)
!13105 = !DILocation(line: 902, column: 9, scope: !13081)
!13106 = !DILocation(line: 903, column: 48, scope: !13081)
!13107 = !DILocation(line: 903, column: 9, scope: !13081)
!13108 = !DILocation(line: 904, column: 48, scope: !13081)
!13109 = !DILocation(line: 904, column: 9, scope: !13081)
!13110 = !DILocation(line: 905, column: 48, scope: !13081)
!13111 = !DILocation(line: 905, column: 9, scope: !13081)
!13112 = !DILocation(line: 906, column: 48, scope: !13081)
!13113 = !DILocation(line: 906, column: 9, scope: !13081)
!13114 = !DILocation(line: 907, column: 48, scope: !13081)
!13115 = !DILocation(line: 907, column: 9, scope: !13081)
!13116 = !DILocation(line: 908, column: 48, scope: !13081)
!13117 = !DILocation(line: 908, column: 9, scope: !13081)
!13118 = !DILocation(line: 909, column: 48, scope: !13081)
!13119 = !DILocation(line: 909, column: 9, scope: !13081)
!13120 = !DILocation(line: 910, column: 48, scope: !13081)
!13121 = !DILocation(line: 910, column: 9, scope: !13081)
!13122 = !DILocation(line: 911, column: 48, scope: !13081)
!13123 = !DILocation(line: 911, column: 9, scope: !13081)
!13124 = !DILocation(line: 912, column: 48, scope: !13081)
!13125 = !DILocation(line: 912, column: 9, scope: !13081)
!13126 = !DILocation(line: 913, column: 48, scope: !13081)
!13127 = !DILocation(line: 913, column: 9, scope: !13081)
!13128 = !DILocation(line: 914, column: 48, scope: !13081)
!13129 = !DILocation(line: 914, column: 9, scope: !13081)
!13130 = !DILocation(line: 915, column: 48, scope: !13081)
!13131 = !DILocation(line: 915, column: 9, scope: !13081)
!13132 = !DILocation(line: 916, column: 48, scope: !13081)
!13133 = !DILocation(line: 916, column: 9, scope: !13081)
!13134 = !DILocation(line: 917, column: 48, scope: !13081)
!13135 = !DILocation(line: 917, column: 9, scope: !13081)
!13136 = !DILocation(line: 918, column: 48, scope: !13081)
!13137 = !DILocation(line: 918, column: 9, scope: !13081)
!13138 = !DILocation(line: 919, column: 48, scope: !13081)
!13139 = !DILocation(line: 919, column: 9, scope: !13081)
!13140 = !DILocation(line: 920, column: 48, scope: !13081)
!13141 = !DILocation(line: 920, column: 9, scope: !13081)
!13142 = !DILocation(line: 921, column: 48, scope: !13081)
!13143 = !DILocation(line: 921, column: 9, scope: !13081)
!13144 = !DILocation(line: 922, column: 48, scope: !13081)
!13145 = !DILocation(line: 922, column: 9, scope: !13081)
!13146 = !DILocation(line: 923, column: 50, scope: !13081)
!13147 = !DILocation(line: 923, column: 9, scope: !13081)
!13148 = !DILocation(line: 924, column: 5, scope: !13081)
!13149 = !DILocation(line: 926, column: 48, scope: !12961)
!13150 = !DILocation(line: 926, column: 5, scope: !12961)
!13151 = !DILocation(line: 927, column: 48, scope: !12961)
!13152 = !DILocation(line: 927, column: 5, scope: !12961)
!13153 = !DILocation(line: 928, column: 48, scope: !12961)
!13154 = !DILocation(line: 928, column: 5, scope: !12961)
!13155 = !DILocation(line: 929, column: 48, scope: !12961)
!13156 = !DILocation(line: 929, column: 5, scope: !12961)
!13157 = !DILocation(line: 959, column: 9, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !12961, file: !1632, line: 959, column: 9)
!13159 = !DILocation(line: 959, column: 9, scope: !12961)
!13160 = !DILocation(line: 960, column: 9, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13158, file: !1632, line: 959, column: 33)
!13162 = !DILocation(line: 961, column: 5, scope: !13161)
!13163 = !DILocation(line: 962, column: 1, scope: !12961)
!13164 = distinct !DISubprogram(name: "reboot_check", scope: !1632, file: !1632, line: 808, type: !13165, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !2135)
!13165 = !DISubroutineType(types: !13166)
!13166 = !{!126}
!13167 = !DILocation(line: 810, column: 13, scope: !13164)
!13168 = !DILocation(line: 810, column: 25, scope: !13164)
!13169 = !DILocation(line: 810, column: 5, scope: !13164)
!13170 = distinct !DISubprogram(name: "memoryDumpAll", scope: !1632, file: !1632, line: 964, type: !181, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !13171)
!13171 = !{!13172, !13173, !13174}
!13172 = !DILocalVariable(name: "current", scope: !13170, file: !1632, line: 966, type: !1717)
!13173 = !DILocalVariable(name: "end", scope: !13170, file: !1632, line: 966, type: !1717)
!13174 = !DILocalVariable(name: "i", scope: !13170, file: !1632, line: 967, type: !7)
!13175 = !DILocation(line: 0, scope: !13170)
!13176 = !DILocation(line: 971, column: 33, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13178, file: !1632, line: 971, column: 14)
!13178 = distinct !DILexicalBlock(scope: !13179, file: !1632, line: 969, column: 24)
!13179 = distinct !DILexicalBlock(scope: !13180, file: !1632, line: 969, column: 5)
!13180 = distinct !DILexicalBlock(scope: !13170, file: !1632, line: 969, column: 5)
!13181 = !DILocation(line: 971, column: 15, scope: !13177)
!13182 = !DILocation(line: 971, column: 14, scope: !13178)
!13183 = !DILocation(line: 1000, column: 38, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13185, file: !1632, line: 1000, column: 5)
!13185 = distinct !DILexicalBlock(scope: !13170, file: !1632, line: 1000, column: 5)
!13186 = !DILocation(line: 1000, column: 19, scope: !13184)
!13187 = !DILocation(line: 1000, column: 5, scope: !13185)
!13188 = !DILocation(line: 975, column: 33, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13178, file: !1632, line: 975, column: 14)
!13190 = !DILocation(line: 975, column: 15, scope: !13189)
!13191 = !DILocation(line: 975, column: 14, scope: !13178)
!13192 = !DILocation(line: 979, column: 37, scope: !13178)
!13193 = !DILocation(line: 980, column: 37, scope: !13178)
!13194 = !DILocation(line: 982, column: 24, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13196, file: !1632, line: 982, column: 9)
!13196 = distinct !DILexicalBlock(scope: !13178, file: !1632, line: 982, column: 9)
!13197 = !DILocation(line: 982, column: 9, scope: !13196)
!13198 = !DILocation(line: 984, column: 17, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13200, file: !1632, line: 984, column: 17)
!13200 = distinct !DILexicalBlock(scope: !13195, file: !1632, line: 982, column: 45)
!13201 = !DILocation(line: 984, column: 32, scope: !13199)
!13202 = !DILocation(line: 0, scope: !13200)
!13203 = !DILocation(line: 984, column: 37, scope: !13199)
!13204 = !DILocation(line: 986, column: 27, scope: !13199)
!13205 = !DILocation(line: 986, column: 17, scope: !13199)
!13206 = !DILocation(line: 986, column: 32, scope: !13199)
!13207 = !DILocation(line: 986, column: 37, scope: !13199)
!13208 = !DILocation(line: 987, column: 27, scope: !13199)
!13209 = !DILocation(line: 987, column: 17, scope: !13199)
!13210 = !DILocation(line: 987, column: 32, scope: !13199)
!13211 = !DILocation(line: 984, column: 17, scope: !13200)
!13212 = !DILocation(line: 994, column: 20, scope: !13200)
!13213 = !DILocation(line: 992, column: 20, scope: !13200)
!13214 = !DILocation(line: 995, column: 30, scope: !13200)
!13215 = !DILocation(line: 995, column: 20, scope: !13200)
!13216 = !DILocation(line: 996, column: 30, scope: !13200)
!13217 = !DILocation(line: 996, column: 20, scope: !13200)
!13218 = !DILocation(line: 991, column: 13, scope: !13200)
!13219 = !DILocation(line: 997, column: 10, scope: !13200)
!13220 = !DILocation(line: 982, column: 39, scope: !13195)
!13221 = distinct !{!13221, !13197, !13222}
!13222 = !DILocation(line: 997, column: 10, scope: !13196)
!13223 = !DILocation(line: 969, column: 20, scope: !13179)
!13224 = distinct !{!13224, !13225, !13226}
!13225 = !DILocation(line: 969, column: 5, scope: !13180)
!13226 = !DILocation(line: 998, column: 5, scope: !13180)
!13227 = !DILocation(line: 1001, column: 41, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13229, file: !1632, line: 1001, column: 13)
!13229 = distinct !DILexicalBlock(scope: !13184, file: !1632, line: 1000, column: 50)
!13230 = !DILocation(line: 1001, column: 13, scope: !13228)
!13231 = !DILocation(line: 1001, column: 13, scope: !13229)
!13232 = !DILocation(line: 1002, column: 13, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13228, file: !1632, line: 1001, column: 50)
!13234 = !DILocation(line: 1003, column: 9, scope: !13233)
!13235 = !DILocation(line: 1000, column: 46, scope: !13184)
!13236 = distinct !{!13236, !13187, !13237}
!13237 = !DILocation(line: 1004, column: 5, scope: !13185)
!13238 = !DILocation(line: 1006, column: 5, scope: !13170)
!13239 = !DILocation(line: 1017, column: 1, scope: !13170)
!13240 = distinct !DISubprogram(name: "Hard_Fault_Handler", scope: !1632, file: !1632, line: 1040, type: !12962, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !13241)
!13241 = !{!13242}
!13242 = !DILocalVariable(name: "stack", arg: 1, scope: !13240, file: !1632, line: 1040, type: !3543)
!13243 = !DILocation(line: 0, scope: !13240)
!13244 = !DILocation(line: 1042, column: 5, scope: !13240)
!13245 = !DILocation(line: 1043, column: 57, scope: !13240)
!13246 = !DILocation(line: 1043, column: 5, scope: !13240)
!13247 = !DILocation(line: 1044, column: 15, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13240, file: !1632, line: 1044, column: 9)
!13249 = !DILocation(line: 1044, column: 20, scope: !13248)
!13250 = !DILocation(line: 1044, column: 33, scope: !13248)
!13251 = !DILocation(line: 1044, column: 9, scope: !13240)
!13252 = !DILocation(line: 1045, column: 9, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13248, file: !1632, line: 1044, column: 39)
!13254 = !DILocation(line: 1046, column: 61, scope: !13253)
!13255 = !DILocation(line: 1046, column: 9, scope: !13253)
!13256 = !DILocation(line: 1047, column: 19, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13253, file: !1632, line: 1047, column: 13)
!13258 = !DILocation(line: 1047, column: 38, scope: !13257)
!13259 = !DILocation(line: 1047, column: 13, scope: !13253)
!13260 = !DILocation(line: 1048, column: 37, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13257, file: !1632, line: 1047, column: 44)
!13262 = !DILocation(line: 1048, column: 13, scope: !13261)
!13263 = !DILocation(line: 1049, column: 9, scope: !13261)
!13264 = !DILocation(line: 1050, column: 19, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13253, file: !1632, line: 1050, column: 13)
!13266 = !DILocation(line: 1050, column: 24, scope: !13265)
!13267 = !DILocation(line: 1050, column: 38, scope: !13265)
!13268 = !DILocation(line: 1050, column: 13, scope: !13253)
!13269 = !DILocation(line: 1051, column: 40, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13265, file: !1632, line: 1050, column: 45)
!13271 = !DILocation(line: 1051, column: 13, scope: !13270)
!13272 = !DILocation(line: 1052, column: 9, scope: !13270)
!13273 = !DILocation(line: 1053, column: 19, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13253, file: !1632, line: 1053, column: 13)
!13275 = !DILocation(line: 1053, column: 24, scope: !13274)
!13276 = !DILocation(line: 1053, column: 38, scope: !13274)
!13277 = !DILocation(line: 1053, column: 13, scope: !13253)
!13278 = !DILocation(line: 1054, column: 48, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13274, file: !1632, line: 1053, column: 45)
!13280 = !DILocation(line: 1054, column: 13, scope: !13279)
!13281 = !DILocation(line: 1055, column: 9, scope: !13279)
!13282 = !DILocation(line: 1058, column: 5, scope: !13240)
!13283 = !DILocation(line: 1060, column: 5, scope: !13240)
!13284 = !DILocation(line: 1065, column: 5, scope: !13240)
!13285 = distinct !{!13285, !13284, !13286}
!13286 = !DILocation(line: 1065, column: 14, scope: !13240)
!13287 = distinct !DISubprogram(name: "MemManage_Fault_Handler", scope: !1632, file: !1632, line: 1069, type: !12962, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !13288)
!13288 = !{!13289}
!13289 = !DILocalVariable(name: "stack", arg: 1, scope: !13287, file: !1632, line: 1069, type: !3543)
!13290 = !DILocation(line: 0, scope: !13287)
!13291 = !DILocation(line: 1071, column: 5, scope: !13287)
!13292 = !DILocation(line: 1072, column: 57, scope: !13287)
!13293 = !DILocation(line: 1072, column: 5, scope: !13287)
!13294 = !DILocation(line: 1073, column: 15, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13287, file: !1632, line: 1073, column: 9)
!13296 = !DILocation(line: 1073, column: 20, scope: !13295)
!13297 = !DILocation(line: 1073, column: 28, scope: !13295)
!13298 = !DILocation(line: 1073, column: 9, scope: !13287)
!13299 = !DILocation(line: 1074, column: 44, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13295, file: !1632, line: 1073, column: 34)
!13301 = !DILocation(line: 1074, column: 9, scope: !13300)
!13302 = !DILocation(line: 1075, column: 5, scope: !13300)
!13303 = !DILocation(line: 1077, column: 5, scope: !13287)
!13304 = !DILocation(line: 1079, column: 5, scope: !13287)
!13305 = !DILocation(line: 1084, column: 5, scope: !13287)
!13306 = distinct !{!13306, !13305, !13307}
!13307 = !DILocation(line: 1084, column: 14, scope: !13287)
!13308 = distinct !DISubprogram(name: "Bus_Fault_Handler", scope: !1632, file: !1632, line: 1088, type: !12962, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !13309)
!13309 = !{!13310}
!13310 = !DILocalVariable(name: "stack", arg: 1, scope: !13308, file: !1632, line: 1088, type: !3543)
!13311 = !DILocation(line: 0, scope: !13308)
!13312 = !DILocation(line: 1090, column: 5, scope: !13308)
!13313 = !DILocation(line: 1091, column: 57, scope: !13308)
!13314 = !DILocation(line: 1091, column: 5, scope: !13308)
!13315 = !DILocation(line: 1092, column: 15, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13308, file: !1632, line: 1092, column: 9)
!13317 = !DILocation(line: 1092, column: 20, scope: !13316)
!13318 = !DILocation(line: 1092, column: 30, scope: !13316)
!13319 = !DILocation(line: 1092, column: 9, scope: !13308)
!13320 = !DILocation(line: 1093, column: 36, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13316, file: !1632, line: 1092, column: 36)
!13322 = !DILocation(line: 1093, column: 9, scope: !13321)
!13323 = !DILocation(line: 1094, column: 5, scope: !13321)
!13324 = !DILocation(line: 1096, column: 5, scope: !13308)
!13325 = !DILocation(line: 1098, column: 5, scope: !13308)
!13326 = !DILocation(line: 1103, column: 5, scope: !13308)
!13327 = distinct !{!13327, !13326, !13328}
!13328 = !DILocation(line: 1103, column: 14, scope: !13308)
!13329 = distinct !DISubprogram(name: "Usage_Fault_Handler", scope: !1632, file: !1632, line: 1107, type: !12962, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !13330)
!13330 = !{!13331}
!13331 = !DILocalVariable(name: "stack", arg: 1, scope: !13329, file: !1632, line: 1107, type: !3543)
!13332 = !DILocation(line: 0, scope: !13329)
!13333 = !DILocation(line: 1109, column: 5, scope: !13329)
!13334 = !DILocation(line: 1110, column: 57, scope: !13329)
!13335 = !DILocation(line: 1110, column: 5, scope: !13329)
!13336 = !DILocation(line: 1111, column: 15, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13329, file: !1632, line: 1111, column: 9)
!13338 = !DILocation(line: 1111, column: 34, scope: !13337)
!13339 = !DILocation(line: 1111, column: 9, scope: !13329)
!13340 = !DILocation(line: 1112, column: 33, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13337, file: !1632, line: 1111, column: 40)
!13342 = !DILocation(line: 1112, column: 9, scope: !13341)
!13343 = !DILocation(line: 1113, column: 5, scope: !13341)
!13344 = !DILocation(line: 1115, column: 5, scope: !13329)
!13345 = !DILocation(line: 1117, column: 5, scope: !13329)
!13346 = !DILocation(line: 1122, column: 5, scope: !13329)
!13347 = distinct !{!13347, !13346, !13348}
!13348 = !DILocation(line: 1122, column: 14, scope: !13329)
!13349 = distinct !DISubprogram(name: "Debug_Monitor_Handler", scope: !1632, file: !1632, line: 1127, type: !12962, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !13350)
!13350 = !{!13351, !13352, !13353, !13354}
!13351 = !DILocalVariable(name: "stack", arg: 1, scope: !13349, file: !1632, line: 1127, type: !3543)
!13352 = !DILocalVariable(name: "offset", scope: !13349, file: !1632, line: 1129, type: !136)
!13353 = !DILocalVariable(name: "stack_end", scope: !13349, file: !1632, line: 1129, type: !136)
!13354 = !DILocalVariable(name: "is_match", scope: !13349, file: !1632, line: 1129, type: !136)
!13355 = !DILocation(line: 0, scope: !13349)
!13356 = !DILocation(line: 1131, column: 5, scope: !13349)
!13357 = !DILocation(line: 1136, column: 22, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13349, file: !1632, line: 1134, column: 5)
!13359 = !DILocation(line: 1137, column: 21, scope: !13358)
!13360 = !DILocation(line: 1138, column: 63, scope: !13358)
!13361 = !DILocation(line: 1138, column: 9, scope: !13358)
!13362 = !DILocation(line: 1141, column: 5, scope: !13349)
!13363 = !DILocation(line: 1143, column: 5, scope: !13349)
!13364 = !DILocation(line: 1148, column: 5, scope: !13349)
!13365 = distinct !{!13365, !13364, !13366}
!13366 = !DILocation(line: 1148, column: 14, scope: !13349)
!13367 = distinct !DISubprogram(name: "CommonFault_Handler", scope: !1632, file: !1632, line: 1165, type: !181, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !2135)
!13368 = !DILocation(line: 1167, column: 5, scope: !13367)
!13369 = !{i64 35854, i64 35936, i64 35979, i64 36060, i64 36103, i64 36184, i64 36265, i64 36346, i64 36427, i64 36508, i64 36589, i64 36670, i64 36751, i64 36832, i64 36913, i64 36994, i64 37075, i64 37156, i64 37199, i64 37280, i64 37361, i64 37442, i64 37485, i64 37566, i64 37609, i64 37652, i64 37695, i64 37776, i64 37819, i64 37862, i64 37905}
!13370 = !DILocation(line: 1201, column: 1, scope: !13367)
!13371 = distinct !DISubprogram(name: "HardFault_Handler", scope: !1632, file: !1632, line: 1208, type: !181, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !2135)
!13372 = !DILocation(line: 1210, column: 5, scope: !13371)
!13373 = !{i64 38128, i64 38172, i64 38215}
!13374 = !DILocation(line: 1216, column: 1, scope: !13371)
!13375 = distinct !DISubprogram(name: "MemManage_Handler", scope: !1632, file: !1632, line: 1223, type: !181, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !2135)
!13376 = !DILocation(line: 1225, column: 5, scope: !13375)
!13377 = !{i64 38441, i64 38485, i64 38528}
!13378 = !DILocation(line: 1231, column: 1, scope: !13375)
!13379 = distinct !DISubprogram(name: "BusFault_Handler", scope: !1632, file: !1632, line: 1238, type: !181, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !2135)
!13380 = !DILocation(line: 1240, column: 5, scope: !13379)
!13381 = !{i64 38749, i64 38793, i64 38836}
!13382 = !DILocation(line: 1246, column: 1, scope: !13379)
!13383 = distinct !DISubprogram(name: "UsageFault_Handler", scope: !1632, file: !1632, line: 1253, type: !181, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !2135)
!13384 = !DILocation(line: 1255, column: 5, scope: !13383)
!13385 = !{i64 39061, i64 39105, i64 39148}
!13386 = !DILocation(line: 1261, column: 1, scope: !13383)
!13387 = distinct !DISubprogram(name: "DebugMon_Handler", scope: !1632, file: !1632, line: 1264, type: !181, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1631, retainedNodes: !2135)
!13388 = !DILocation(line: 1266, column: 5, scope: !13387)
!13389 = !{i64 39302, i64 39346, i64 39389}
!13390 = !DILocation(line: 1272, column: 1, scope: !13387)
!13391 = distinct !DISubprogram(name: "vApplicationStackOverflowHook", scope: !2122, file: !2122, line: 100, type: !13392, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !13394)
!13392 = !DISubroutineType(types: !13393)
!13393 = !{null, !1336, !331}
!13394 = !{!13395, !13396}
!13395 = !DILocalVariable(name: "xTask", arg: 1, scope: !13391, file: !2122, line: 100, type: !1336)
!13396 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !13391, file: !2122, line: 100, type: !331)
!13397 = !DILocation(line: 0, scope: !13391)
!13398 = !DILocation(line: 102, column: 40, scope: !13391)
!13399 = !DILocation(line: 102, column: 5, scope: !13391)
!13400 = !DILocation(line: 103, column: 5, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13402, file: !2122, line: 103, column: 5)
!13402 = distinct !DILexicalBlock(scope: !13391, file: !2122, line: 103, column: 5)
!13403 = !DILocation(line: 104, column: 1, scope: !13391)
!13404 = distinct !DISubprogram(name: "print_module_log", scope: !1830, file: !1830, line: 1102, type: !481, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13405)
!13405 = !{!13406, !13407, !13408, !13409, !13410, !13411}
!13406 = !DILocalVariable(name: "handle", arg: 1, scope: !13404, file: !1830, line: 1102, type: !161)
!13407 = !DILocalVariable(name: "func", arg: 2, scope: !13404, file: !1830, line: 1103, type: !444)
!13408 = !DILocalVariable(name: "line", arg: 3, scope: !13404, file: !1830, line: 1104, type: !53)
!13409 = !DILocalVariable(name: "level", arg: 4, scope: !13404, file: !1830, line: 1105, type: !477)
!13410 = !DILocalVariable(name: "message", arg: 5, scope: !13404, file: !1830, line: 1106, type: !444)
!13411 = !DILocalVariable(name: "ap", scope: !13404, file: !1830, line: 1108, type: !13412)
!13412 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !6056, line: 46, baseType: !13413)
!13413 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6058, line: 32, baseType: !13414)
!13414 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1830, baseType: !13415)
!13415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !13416)
!13416 = !{!13417}
!13417 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !13415, file: !1830, line: 1044, baseType: !161, size: 32)
!13418 = !DILocation(line: 0, scope: !13404)
!13419 = !DILocation(line: 1108, column: 5, scope: !13404)
!13420 = !DILocation(line: 1108, column: 13, scope: !13404)
!13421 = !DILocation(line: 1109, column: 5, scope: !13404)
!13422 = !DILocation(line: 1110, column: 5, scope: !13404)
!13423 = !DILocation(line: 1111, column: 5, scope: !13404)
!13424 = !DILocation(line: 1112, column: 1, scope: !13404)
!13425 = distinct !DISubprogram(name: "dump_module_buffer", scope: !1830, file: !1830, line: 1200, type: !486, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13426)
!13426 = !{!13427, !13428, !13429, !13430, !13431, !13432, !13433, !13434}
!13427 = !DILocalVariable(name: "handle", arg: 1, scope: !13425, file: !1830, line: 1200, type: !161)
!13428 = !DILocalVariable(name: "func", arg: 2, scope: !13425, file: !1830, line: 1201, type: !444)
!13429 = !DILocalVariable(name: "line", arg: 3, scope: !13425, file: !1830, line: 1202, type: !53)
!13430 = !DILocalVariable(name: "level", arg: 4, scope: !13425, file: !1830, line: 1203, type: !477)
!13431 = !DILocalVariable(name: "data", arg: 5, scope: !13425, file: !1830, line: 1204, type: !488)
!13432 = !DILocalVariable(name: "length", arg: 6, scope: !13425, file: !1830, line: 1205, type: !53)
!13433 = !DILocalVariable(name: "message", arg: 7, scope: !13425, file: !1830, line: 1206, type: !444)
!13434 = !DILocalVariable(name: "ap", scope: !13425, file: !1830, line: 1208, type: !13412)
!13435 = !DILocation(line: 0, scope: !13425)
!13436 = !DILocation(line: 1208, column: 5, scope: !13425)
!13437 = !DILocation(line: 1208, column: 13, scope: !13425)
!13438 = !DILocation(line: 1209, column: 5, scope: !13425)
!13439 = !DILocation(line: 1210, column: 5, scope: !13425)
!13440 = !DILocation(line: 1211, column: 5, scope: !13425)
!13441 = !DILocation(line: 1212, column: 1, scope: !13425)
!13442 = distinct !DISubprogram(name: "vdump_module_buffer", scope: !1830, file: !1830, line: 1114, type: !13443, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13445)
!13443 = !DISubroutineType(types: !13444)
!13444 = !{null, !161, !444, !53, !477, !488, !53, !444, !13412}
!13445 = !{!13446, !13447, !13448, !13449, !13450, !13451, !13452, !13453, !13454, !13455, !13456, !13463, !13465, !13466}
!13446 = !DILocalVariable(name: "handle", arg: 1, scope: !13442, file: !1830, line: 1114, type: !161)
!13447 = !DILocalVariable(name: "func", arg: 2, scope: !13442, file: !1830, line: 1115, type: !444)
!13448 = !DILocalVariable(name: "line", arg: 3, scope: !13442, file: !1830, line: 1116, type: !53)
!13449 = !DILocalVariable(name: "level", arg: 4, scope: !13442, file: !1830, line: 1117, type: !477)
!13450 = !DILocalVariable(name: "data", arg: 5, scope: !13442, file: !1830, line: 1118, type: !488)
!13451 = !DILocalVariable(name: "length", arg: 6, scope: !13442, file: !1830, line: 1119, type: !53)
!13452 = !DILocalVariable(name: "message", arg: 7, scope: !13442, file: !1830, line: 1120, type: !444)
!13453 = !DILocalVariable(name: "list", arg: 8, scope: !13442, file: !1830, line: 1121, type: !13412)
!13454 = !DILocalVariable(name: "context", scope: !13442, file: !1830, line: 1123, type: !1896)
!13455 = !DILocalVariable(name: "additional_length", scope: !13442, file: !1830, line: 1124, type: !53)
!13456 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !13457, file: !1830, line: 1133, type: !1332)
!13457 = distinct !DILexicalBlock(scope: !13458, file: !1830, line: 1132, column: 39)
!13458 = distinct !DILexicalBlock(scope: !13459, file: !1830, line: 1132, column: 17)
!13459 = distinct !DILexicalBlock(scope: !13460, file: !1830, line: 1131, column: 62)
!13460 = distinct !DILexicalBlock(scope: !13461, file: !1830, line: 1129, column: 13)
!13461 = distinct !DILexicalBlock(scope: !13462, file: !1830, line: 1127, column: 49)
!13462 = distinct !DILexicalBlock(scope: !13442, file: !1830, line: 1126, column: 9)
!13463 = !DILocalVariable(name: "syslog_buffer", scope: !13464, file: !1830, line: 1151, type: !1905)
!13464 = distinct !DILexicalBlock(scope: !13460, file: !1830, line: 1149, column: 16)
!13465 = !DILocalVariable(name: "log_message", scope: !13464, file: !1830, line: 1152, type: !1858)
!13466 = !DILocalVariable(name: "hex_dump_message", scope: !13464, file: !1830, line: 1153, type: !13467)
!13467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!13468 = !DILocation(line: 0, scope: !13442)
!13469 = !DILocation(line: 1126, column: 19, scope: !13462)
!13470 = !DILocation(line: 1126, column: 30, scope: !13462)
!13471 = !DILocation(line: 1127, column: 13, scope: !13462)
!13472 = !DILocation(line: 1127, column: 26, scope: !13462)
!13473 = !DILocation(line: 1127, column: 38, scope: !13462)
!13474 = !DILocation(line: 1126, column: 9, scope: !13442)
!13475 = !DILocation(line: 1129, column: 14, scope: !13460)
!13476 = !DILocation(line: 1130, column: 17, scope: !13460)
!13477 = !DILocation(line: 1130, column: 21, scope: !13460)
!13478 = !DILocation(line: 1130, column: 46, scope: !13460)
!13479 = !DILocation(line: 1131, column: 21, scope: !13460)
!13480 = !DILocation(line: 1131, column: 25, scope: !13460)
!13481 = !DILocation(line: 1131, column: 47, scope: !13460)
!13482 = !DILocation(line: 1131, column: 55, scope: !13460)
!13483 = !DILocation(line: 1129, column: 13, scope: !13461)
!13484 = !DILocation(line: 1132, column: 17, scope: !13458)
!13485 = !DILocation(line: 1132, column: 34, scope: !13458)
!13486 = !DILocation(line: 1132, column: 17, scope: !13459)
!13487 = !DILocation(line: 231, column: 2, scope: !13488, inlinedAt: !13492)
!13488 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !1333, file: !1333, line: 227, type: !2167, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13489)
!13489 = !{!13490, !13491}
!13490 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !13488, file: !1333, line: 229, type: !136)
!13491 = !DILocalVariable(name: "ulNewBASEPRI", scope: !13488, file: !1333, line: 229, type: !136)
!13492 = distinct !DILocation(line: 1134, column: 42, scope: !13457)
!13493 = !{i64 690507, i64 690544, i64 690576, i64 690612, i64 690639}
!13494 = !DILocation(line: 0, scope: !13488, inlinedAt: !13492)
!13495 = !DILocation(line: 0, scope: !13457)
!13496 = !DILocation(line: 1135, column: 21, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13457, file: !1830, line: 1135, column: 21)
!13498 = !DILocation(line: 1135, column: 38, scope: !13497)
!13499 = !DILocation(line: 1135, column: 21, scope: !13457)
!13500 = !DILocation(line: 1138, column: 28, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13497, file: !1830, line: 1135, column: 63)
!13502 = !DILocation(line: 1139, column: 37, scope: !13501)
!13503 = !DILocation(line: 1140, column: 28, scope: !13501)
!13504 = !DILocation(line: 1137, column: 21, scope: !13501)
!13505 = !DILocation(line: 1143, column: 17, scope: !13501)
!13506 = !DILocation(line: 1144, column: 17, scope: !13457)
!13507 = !DILocation(line: 1145, column: 17, scope: !13457)
!13508 = !DILocation(line: 1146, column: 17, scope: !13457)
!13509 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !13510, file: !1333, line: 247, type: !136)
!13510 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !1333, file: !1333, line: 247, type: !2198, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13511)
!13511 = !{!13509}
!13512 = !DILocation(line: 0, scope: !13510, inlinedAt: !13513)
!13513 = distinct !DILocation(line: 1147, column: 17, scope: !13457)
!13514 = !DILocation(line: 249, column: 2, scope: !13510, inlinedAt: !13513)
!13515 = !{i64 691040}
!13516 = !DILocation(line: 1148, column: 13, scope: !13457)
!13517 = !DILocation(line: 1151, column: 13, scope: !13464)
!13518 = !DILocation(line: 1151, column: 46, scope: !13464)
!13519 = !DILocation(line: 0, scope: !13464)
!13520 = !DILocation(line: 1151, column: 30, scope: !13464)
!13521 = !DILocation(line: 1155, column: 22, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13464, file: !1830, line: 1155, column: 17)
!13523 = !DILocation(line: 1155, column: 17, scope: !13464)
!13524 = !DILocation(line: 1159, column: 44, scope: !13464)
!13525 = !DILocation(line: 1160, column: 26, scope: !13464)
!13526 = !DILocation(line: 1160, column: 39, scope: !13464)
!13527 = !DILocation(line: 1161, column: 46, scope: !13464)
!13528 = !DILocation(line: 1162, column: 54, scope: !13464)
!13529 = !DILocation(line: 1162, column: 31, scope: !13464)
!13530 = !DILocation(line: 1162, column: 43, scope: !13464)
!13531 = !DILocation(line: 1163, column: 31, scope: !13464)
!13532 = !DILocation(line: 1163, column: 43, scope: !13464)
!13533 = !DILocation(line: 1164, column: 31, scope: !13464)
!13534 = !DILocation(line: 1164, column: 41, scope: !13464)
!13535 = !DILocation(line: 1165, column: 31, scope: !13464)
!13536 = !DILocation(line: 1165, column: 43, scope: !13464)
!13537 = !DILocation(line: 1166, column: 43, scope: !13464)
!13538 = !DILocation(line: 1166, column: 31, scope: !13464)
!13539 = !DILocation(line: 1166, column: 41, scope: !13464)
!13540 = !DILocation(line: 1170, column: 47, scope: !13464)
!13541 = !DILocation(line: 1170, column: 19, scope: !13464)
!13542 = !DILocation(line: 1172, column: 17, scope: !13464)
!13543 = !DILocation(line: 1177, column: 24, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13464, file: !1830, line: 1177, column: 17)
!13545 = !DILocation(line: 1177, column: 17, scope: !13464)
!13546 = !DILocation(line: 1178, column: 23, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13548, file: !1830, line: 1178, column: 22)
!13548 = distinct !DILexicalBlock(scope: !13544, file: !1830, line: 1177, column: 46)
!13549 = !DILocation(line: 1178, column: 45, scope: !13547)
!13550 = !DILocation(line: 1178, column: 53, scope: !13547)
!13551 = !DILocation(line: 0, scope: !13548)
!13552 = !DILocation(line: 1184, column: 38, scope: !13464)
!13553 = !DILocation(line: 1184, column: 13, scope: !13464)
!13554 = !DILocation(line: 1185, column: 31, scope: !13464)
!13555 = !DILocation(line: 1185, column: 43, scope: !13464)
!13556 = !DILocation(line: 1187, column: 31, scope: !13464)
!13557 = !DILocation(line: 1187, column: 47, scope: !13464)
!13558 = !DILocation(line: 1188, column: 17, scope: !13559)
!13559 = distinct !DILexicalBlock(scope: !13464, file: !1830, line: 1188, column: 17)
!13560 = !DILocation(line: 1188, column: 17, scope: !13464)
!13561 = !DILocation(line: 1189, column: 67, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13563, file: !1830, line: 1189, column: 21)
!13563 = distinct !DILexicalBlock(scope: !13559, file: !1830, line: 1188, column: 36)
!13564 = !DILocation(line: 1189, column: 56, scope: !13562)
!13565 = !DILocation(line: 1189, column: 100, scope: !13562)
!13566 = !DILocation(line: 1189, column: 21, scope: !13563)
!13567 = !DILocation(line: 1190, column: 76, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13562, file: !1830, line: 1189, column: 109)
!13569 = !DILocation(line: 1190, column: 21, scope: !13568)
!13570 = !DILocation(line: 1191, column: 51, scope: !13568)
!13571 = !DILocation(line: 1192, column: 17, scope: !13568)
!13572 = !DILocation(line: 1195, column: 13, scope: !13464)
!13573 = !DILocation(line: 1196, column: 9, scope: !13460)
!13574 = !DILocation(line: 1198, column: 1, scope: !13442)
!13575 = distinct !DISubprogram(name: "get_current_time_in_ms", scope: !1830, file: !1830, line: 601, type: !13576, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13578)
!13576 = !DISubroutineType(types: !13577)
!13577 = !{!7}
!13578 = !{!13579, !13580}
!13579 = !DILocalVariable(name: "count", scope: !13575, file: !1830, line: 603, type: !136)
!13580 = !DILocalVariable(name: "count64", scope: !13575, file: !1830, line: 604, type: !1914)
!13581 = !DILocation(line: 603, column: 5, scope: !13575)
!13582 = !DILocation(line: 0, scope: !13575)
!13583 = !DILocation(line: 603, column: 14, scope: !13575)
!13584 = !DILocation(line: 605, column: 5, scope: !13575)
!13585 = !DILocation(line: 606, column: 26, scope: !13575)
!13586 = !DILocation(line: 606, column: 16, scope: !13575)
!13587 = !DILocation(line: 606, column: 32, scope: !13575)
!13588 = !DILocation(line: 606, column: 37, scope: !13575)
!13589 = !DILocation(line: 607, column: 12, scope: !13575)
!13590 = !DILocation(line: 608, column: 1, scope: !13575)
!13591 = !DILocation(line: 607, column: 5, scope: !13575)
!13592 = distinct !DISubprogram(name: "hex_dump_data", scope: !1830, file: !1830, line: 865, type: !13593, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13595)
!13593 = !DISubroutineType(types: !13594)
!13594 = !{null, !444, !53}
!13595 = !{!13596, !13597, !13598}
!13596 = !DILocalVariable(name: "data", arg: 1, scope: !13592, file: !1830, line: 865, type: !444)
!13597 = !DILocalVariable(name: "length", arg: 2, scope: !13592, file: !1830, line: 865, type: !53)
!13598 = !DILocalVariable(name: "index", scope: !13592, file: !1830, line: 867, type: !53)
!13599 = !DILocation(line: 0, scope: !13592)
!13600 = !DILocation(line: 868, column: 27, scope: !13601)
!13601 = distinct !DILexicalBlock(scope: !13602, file: !1830, line: 868, column: 5)
!13602 = distinct !DILexicalBlock(scope: !13592, file: !1830, line: 868, column: 5)
!13603 = !DILocation(line: 868, column: 5, scope: !13602)
!13604 = !DILocation(line: 869, column: 30, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13601, file: !1830, line: 868, column: 46)
!13606 = !DILocation(line: 869, column: 24, scope: !13605)
!13607 = !DILocation(line: 869, column: 9, scope: !13605)
!13608 = !DILocation(line: 870, column: 20, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13605, file: !1830, line: 870, column: 13)
!13610 = !DILocation(line: 870, column: 25, scope: !13609)
!13611 = !DILocation(line: 870, column: 30, scope: !13609)
!13612 = !DILocation(line: 870, column: 13, scope: !13605)
!13613 = !DILocation(line: 874, column: 23, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13605, file: !1830, line: 874, column: 13)
!13615 = !DILocation(line: 874, column: 13, scope: !13605)
!13616 = !DILocation(line: 0, scope: !13605)
!13617 = distinct !{!13617, !13603, !13618}
!13618 = !DILocation(line: 877, column: 5, scope: !13602)
!13619 = !DILocation(line: 878, column: 20, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13592, file: !1830, line: 878, column: 9)
!13621 = !DILocation(line: 879, column: 9, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13620, file: !1830, line: 878, column: 40)
!13623 = !DILocation(line: 880, column: 5, scope: !13622)
!13624 = !DILocation(line: 881, column: 1, scope: !13592)
!13625 = distinct !DISubprogram(name: "buffer_pool_alloc", scope: !1830, file: !1830, line: 562, type: !13626, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13628)
!13626 = !DISubroutineType(types: !13627)
!13627 = !{!1905}
!13628 = !{!13629, !13630}
!13629 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !13625, file: !1830, line: 564, type: !1332)
!13630 = !DILocalVariable(name: "index", scope: !13625, file: !1830, line: 565, type: !136)
!13631 = !DILocation(line: 231, column: 2, scope: !13488, inlinedAt: !13632)
!13632 = distinct !DILocation(line: 567, column: 30, scope: !13625)
!13633 = !DILocation(line: 0, scope: !13488, inlinedAt: !13632)
!13634 = !DILocation(line: 0, scope: !13625)
!13635 = !DILocation(line: 568, column: 5, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13625, file: !1830, line: 568, column: 5)
!13637 = !DILocation(line: 568, column: 50, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13636, file: !1830, line: 568, column: 5)
!13639 = !DILocation(line: 568, column: 27, scope: !13638)
!13640 = distinct !{!13640, !13635, !13641}
!13641 = !DILocation(line: 574, column: 5, scope: !13636)
!13642 = !DILocation(line: 569, column: 14, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13644, file: !1830, line: 569, column: 13)
!13644 = distinct !DILexicalBlock(scope: !13638, file: !1830, line: 568, column: 54)
!13645 = !DILocation(line: 569, column: 40, scope: !13643)
!13646 = !DILocation(line: 569, column: 13, scope: !13644)
!13647 = !DILocation(line: 570, column: 48, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13643, file: !1830, line: 569, column: 50)
!13649 = !DILocation(line: 0, scope: !13510, inlinedAt: !13650)
!13650 = distinct !DILocation(line: 571, column: 13, scope: !13648)
!13651 = !DILocation(line: 249, column: 2, scope: !13510, inlinedAt: !13650)
!13652 = !DILocation(line: 572, column: 13, scope: !13648)
!13653 = !DILocation(line: 575, column: 22, scope: !13625)
!13654 = !DILocation(line: 0, scope: !13510, inlinedAt: !13655)
!13655 = distinct !DILocation(line: 576, column: 5, scope: !13625)
!13656 = !DILocation(line: 249, column: 2, scope: !13510, inlinedAt: !13655)
!13657 = !DILocation(line: 582, column: 5, scope: !13625)
!13658 = !DILocation(line: 583, column: 1, scope: !13625)
!13659 = distinct !DISubprogram(name: "log_queue_send", scope: !1830, file: !1830, line: 621, type: !13660, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13663)
!13660 = !DISubroutineType(types: !13661)
!13661 = !{null, !13662}
!13662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 32)
!13663 = !{!13664, !13665}
!13664 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !13659, file: !1830, line: 621, type: !13662)
!13665 = !DILocalVariable(name: "xTaskWokenByPost", scope: !13666, file: !1830, line: 624, type: !1337)
!13666 = distinct !DILexicalBlock(scope: !13667, file: !1830, line: 623, column: 39)
!13667 = distinct !DILexicalBlock(scope: !13659, file: !1830, line: 623, column: 9)
!13668 = !DILocation(line: 0, scope: !13659)
!13669 = !DILocation(line: 623, column: 9, scope: !13667)
!13670 = !DILocation(line: 623, column: 31, scope: !13667)
!13671 = !DILocation(line: 623, column: 9, scope: !13659)
!13672 = !DILocation(line: 624, column: 9, scope: !13666)
!13673 = !DILocation(line: 0, scope: !13666)
!13674 = !DILocation(line: 624, column: 20, scope: !13666)
!13675 = !DILocation(line: 625, column: 13, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13666, file: !1830, line: 625, column: 13)
!13677 = !DILocation(line: 625, column: 75, scope: !13676)
!13678 = !DILocation(line: 625, column: 13, scope: !13666)
!13679 = !DILocation(line: 626, column: 33, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13676, file: !1830, line: 625, column: 95)
!13681 = !DILocation(line: 626, column: 13, scope: !13680)
!13682 = !DILocation(line: 627, column: 9, scope: !13680)
!13683 = !DILocation(line: 628, column: 13, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !1830, line: 628, column: 13)
!13685 = distinct !DILexicalBlock(scope: !13676, file: !1830, line: 627, column: 16)
!13686 = !DILocation(line: 628, column: 13, scope: !13685)
!13687 = !DILocation(line: 628, column: 13, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13684, file: !1830, line: 628, column: 13)
!13689 = !{i64 2148484999}
!13690 = !{i64 2148485039}
!13691 = !DILocation(line: 630, column: 5, scope: !13667)
!13692 = !DILocation(line: 630, column: 5, scope: !13666)
!13693 = !DILocation(line: 631, column: 9, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13667, file: !1830, line: 630, column: 12)
!13695 = !DILocation(line: 633, column: 1, scope: !13659)
!13696 = distinct !DISubprogram(name: "buffer_pool_release", scope: !1830, file: !1830, line: 587, type: !13697, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13699)
!13697 = !DISubroutineType(types: !13698)
!13698 = !{null, !1905}
!13699 = !{!13700, !13701, !13702}
!13700 = !DILocalVariable(name: "syslog_buffer", arg: 1, scope: !13696, file: !1830, line: 587, type: !1905)
!13701 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !13696, file: !1830, line: 589, type: !1332)
!13702 = !DILocalVariable(name: "log_message", scope: !13696, file: !1830, line: 590, type: !1858)
!13703 = !DILocation(line: 0, scope: !13696)
!13704 = !DILocation(line: 590, column: 51, scope: !13696)
!13705 = !DILocation(line: 231, column: 2, scope: !13488, inlinedAt: !13706)
!13706 = distinct !DILocation(line: 592, column: 30, scope: !13696)
!13707 = !DILocation(line: 0, scope: !13488, inlinedAt: !13706)
!13708 = !DILocation(line: 593, column: 20, scope: !13696)
!13709 = !DILocation(line: 593, column: 29, scope: !13696)
!13710 = !DILocation(line: 594, column: 23, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13696, file: !1830, line: 594, column: 9)
!13712 = !DILocation(line: 594, column: 36, scope: !13711)
!13713 = !DILocation(line: 595, column: 13, scope: !13711)
!13714 = !DILocation(line: 595, column: 49, scope: !13711)
!13715 = !DILocation(line: 595, column: 16, scope: !13711)
!13716 = !DILocation(line: 594, column: 9, scope: !13696)
!13717 = !DILocation(line: 596, column: 9, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13711, file: !1830, line: 595, column: 68)
!13719 = !DILocation(line: 597, column: 5, scope: !13718)
!13720 = !DILocation(line: 0, scope: !13510, inlinedAt: !13721)
!13721 = distinct !DILocation(line: 598, column: 5, scope: !13696)
!13722 = !DILocation(line: 249, column: 2, scope: !13510, inlinedAt: !13721)
!13723 = !DILocation(line: 599, column: 1, scope: !13696)
!13724 = distinct !DISubprogram(name: "vprint_module_log", scope: !1830, file: !1830, line: 1046, type: !13725, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13727)
!13725 = !DISubroutineType(types: !13726)
!13726 = !{null, !161, !444, !53, !477, !444, !13412}
!13727 = !{!13728, !13729, !13730, !13731, !13732, !13733, !13734, !13735, !13742, !13744, !13745}
!13728 = !DILocalVariable(name: "handle", arg: 1, scope: !13724, file: !1830, line: 1046, type: !161)
!13729 = !DILocalVariable(name: "func", arg: 2, scope: !13724, file: !1830, line: 1047, type: !444)
!13730 = !DILocalVariable(name: "line", arg: 3, scope: !13724, file: !1830, line: 1048, type: !53)
!13731 = !DILocalVariable(name: "level", arg: 4, scope: !13724, file: !1830, line: 1049, type: !477)
!13732 = !DILocalVariable(name: "message", arg: 5, scope: !13724, file: !1830, line: 1050, type: !444)
!13733 = !DILocalVariable(name: "list", arg: 6, scope: !13724, file: !1830, line: 1051, type: !13412)
!13734 = !DILocalVariable(name: "context", scope: !13724, file: !1830, line: 1053, type: !1896)
!13735 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !13736, file: !1830, line: 1061, type: !1332)
!13736 = distinct !DILexicalBlock(scope: !13737, file: !1830, line: 1060, column: 39)
!13737 = distinct !DILexicalBlock(scope: !13738, file: !1830, line: 1060, column: 17)
!13738 = distinct !DILexicalBlock(scope: !13739, file: !1830, line: 1059, column: 62)
!13739 = distinct !DILexicalBlock(scope: !13740, file: !1830, line: 1057, column: 13)
!13740 = distinct !DILexicalBlock(scope: !13741, file: !1830, line: 1055, column: 49)
!13741 = distinct !DILexicalBlock(scope: !13724, file: !1830, line: 1054, column: 9)
!13742 = !DILocalVariable(name: "syslog_buffer", scope: !13743, file: !1830, line: 1078, type: !1905)
!13743 = distinct !DILexicalBlock(scope: !13739, file: !1830, line: 1076, column: 16)
!13744 = !DILocalVariable(name: "log_message", scope: !13743, file: !1830, line: 1079, type: !1858)
!13745 = !DILocalVariable(name: "normal_log_message", scope: !13743, file: !1830, line: 1080, type: !13746)
!13746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!13747 = !DILocation(line: 0, scope: !13724)
!13748 = !DILocation(line: 1054, column: 19, scope: !13741)
!13749 = !DILocation(line: 1054, column: 30, scope: !13741)
!13750 = !DILocation(line: 1055, column: 13, scope: !13741)
!13751 = !DILocation(line: 1055, column: 26, scope: !13741)
!13752 = !DILocation(line: 1055, column: 38, scope: !13741)
!13753 = !DILocation(line: 1054, column: 9, scope: !13724)
!13754 = !DILocation(line: 1057, column: 14, scope: !13739)
!13755 = !DILocation(line: 1058, column: 17, scope: !13739)
!13756 = !DILocation(line: 1058, column: 21, scope: !13739)
!13757 = !DILocation(line: 1058, column: 46, scope: !13739)
!13758 = !DILocation(line: 1059, column: 21, scope: !13739)
!13759 = !DILocation(line: 1059, column: 25, scope: !13739)
!13760 = !DILocation(line: 1059, column: 47, scope: !13739)
!13761 = !DILocation(line: 1059, column: 55, scope: !13739)
!13762 = !DILocation(line: 1057, column: 13, scope: !13740)
!13763 = !DILocation(line: 1060, column: 17, scope: !13737)
!13764 = !DILocation(line: 1060, column: 34, scope: !13737)
!13765 = !DILocation(line: 1060, column: 17, scope: !13738)
!13766 = !DILocation(line: 231, column: 2, scope: !13488, inlinedAt: !13767)
!13767 = distinct !DILocation(line: 1062, column: 42, scope: !13736)
!13768 = !DILocation(line: 0, scope: !13488, inlinedAt: !13767)
!13769 = !DILocation(line: 0, scope: !13736)
!13770 = !DILocation(line: 1063, column: 21, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13736, file: !1830, line: 1063, column: 21)
!13772 = !DILocation(line: 1063, column: 38, scope: !13771)
!13773 = !DILocation(line: 1063, column: 21, scope: !13736)
!13774 = !DILocation(line: 1066, column: 28, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13771, file: !1830, line: 1063, column: 63)
!13776 = !DILocation(line: 1067, column: 37, scope: !13775)
!13777 = !DILocation(line: 1068, column: 28, scope: !13775)
!13778 = !DILocation(line: 1065, column: 21, scope: !13775)
!13779 = !DILocation(line: 1071, column: 17, scope: !13775)
!13780 = !DILocation(line: 1072, column: 17, scope: !13736)
!13781 = !DILocation(line: 1073, column: 17, scope: !13736)
!13782 = !DILocation(line: 0, scope: !13510, inlinedAt: !13783)
!13783 = distinct !DILocation(line: 1074, column: 17, scope: !13736)
!13784 = !DILocation(line: 249, column: 2, scope: !13510, inlinedAt: !13783)
!13785 = !DILocation(line: 1075, column: 13, scope: !13736)
!13786 = !DILocation(line: 1078, column: 13, scope: !13743)
!13787 = !DILocation(line: 1078, column: 46, scope: !13743)
!13788 = !DILocation(line: 0, scope: !13743)
!13789 = !DILocation(line: 1078, column: 30, scope: !13743)
!13790 = !DILocation(line: 1082, column: 22, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13743, file: !1830, line: 1082, column: 17)
!13792 = !DILocation(line: 1082, column: 17, scope: !13743)
!13793 = !DILocation(line: 1085, column: 44, scope: !13743)
!13794 = !DILocation(line: 1086, column: 26, scope: !13743)
!13795 = !DILocation(line: 1086, column: 39, scope: !13743)
!13796 = !DILocation(line: 1087, column: 48, scope: !13743)
!13797 = !DILocation(line: 1088, column: 56, scope: !13743)
!13798 = !DILocation(line: 1088, column: 33, scope: !13743)
!13799 = !DILocation(line: 1088, column: 45, scope: !13743)
!13800 = !DILocation(line: 1089, column: 33, scope: !13743)
!13801 = !DILocation(line: 1089, column: 45, scope: !13743)
!13802 = !DILocation(line: 1090, column: 33, scope: !13743)
!13803 = !DILocation(line: 1090, column: 43, scope: !13743)
!13804 = !DILocation(line: 1091, column: 33, scope: !13743)
!13805 = !DILocation(line: 1091, column: 45, scope: !13743)
!13806 = !DILocation(line: 1092, column: 45, scope: !13743)
!13807 = !DILocation(line: 1092, column: 33, scope: !13743)
!13808 = !DILocation(line: 1092, column: 43, scope: !13743)
!13809 = !DILocation(line: 1096, column: 49, scope: !13743)
!13810 = !DILocation(line: 1096, column: 19, scope: !13743)
!13811 = !DILocation(line: 1097, column: 13, scope: !13743)
!13812 = !DILocation(line: 1098, column: 9, scope: !13739)
!13813 = !DILocation(line: 1100, column: 1, scope: !13724)
!13814 = distinct !DISubprogram(name: "log_uart_init", scope: !1830, file: !1830, line: 185, type: !7257, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13815)
!13815 = !{!13816, !13817, !13825}
!13816 = !DILocalVariable(name: "port", arg: 1, scope: !13814, file: !1830, line: 185, type: !867)
!13817 = !DILocalVariable(name: "uart_config", scope: !13814, file: !1830, line: 187, type: !13818)
!13818 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !763, line: 378, baseType: !13819)
!13819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !763, line: 373, size: 128, elements: !13820)
!13820 = !{!13821, !13822, !13823, !13824}
!13821 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !13819, file: !763, line: 374, baseType: !825, size: 32)
!13822 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !13819, file: !763, line: 375, baseType: !827, size: 32, offset: 32)
!13823 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !13819, file: !763, line: 376, baseType: !829, size: 32, offset: 64)
!13824 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !13819, file: !763, line: 377, baseType: !831, size: 32, offset: 96)
!13825 = !DILocalVariable(name: "ret", scope: !13814, file: !1830, line: 188, type: !7106)
!13826 = !DILocation(line: 0, scope: !13814)
!13827 = !DILocation(line: 187, column: 5, scope: !13814)
!13828 = !DILocation(line: 187, column: 23, scope: !13814)
!13829 = !DILocation(line: 191, column: 17, scope: !13814)
!13830 = !DILocation(line: 191, column: 26, scope: !13814)
!13831 = !DILocation(line: 192, column: 17, scope: !13814)
!13832 = !DILocation(line: 192, column: 24, scope: !13814)
!13833 = !DILocation(line: 193, column: 17, scope: !13814)
!13834 = !DILocation(line: 193, column: 26, scope: !13814)
!13835 = !DILocation(line: 194, column: 17, scope: !13814)
!13836 = !DILocation(line: 194, column: 29, scope: !13814)
!13837 = !DILocation(line: 196, column: 21, scope: !13814)
!13838 = !DILocation(line: 197, column: 11, scope: !13814)
!13839 = !DILocation(line: 199, column: 22, scope: !13814)
!13840 = !DILocation(line: 202, column: 1, scope: !13814)
!13841 = !DILocation(line: 201, column: 5, scope: !13814)
!13842 = distinct !DISubprogram(name: "log_putchar", scope: !1830, file: !1830, line: 204, type: !13843, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13845)
!13843 = !DISubroutineType(types: !13844)
!13844 = !{null, !332}
!13845 = !{!13846}
!13846 = !DILocalVariable(name: "byte", arg: 1, scope: !13842, file: !1830, line: 204, type: !332)
!13847 = !DILocation(line: 0, scope: !13842)
!13848 = !DILocation(line: 206, column: 23, scope: !13842)
!13849 = !DILocation(line: 206, column: 5, scope: !13842)
!13850 = !DILocation(line: 207, column: 1, scope: !13842)
!13851 = distinct !DISubprogram(name: "buffer_pool_init", scope: !1830, file: !1830, line: 524, type: !181, scopeLine: 525, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !2135)
!13852 = !DILocation(line: 526, column: 5, scope: !13851)
!13853 = !DILocation(line: 527, column: 1, scope: !13851)
!13854 = distinct !DISubprogram(name: "log_queue_create", scope: !1830, file: !1830, line: 613, type: !181, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !2135)
!13855 = !DILocation(line: 615, column: 19, scope: !13854)
!13856 = !DILocation(line: 615, column: 17, scope: !13854)
!13857 = !DILocation(line: 616, column: 14, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13854, file: !1830, line: 616, column: 9)
!13859 = !DILocation(line: 616, column: 9, scope: !13854)
!13860 = !DILocation(line: 617, column: 9, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13858, file: !1830, line: 616, column: 30)
!13862 = !DILocation(line: 618, column: 5, scope: !13861)
!13863 = !DILocation(line: 619, column: 1, scope: !13854)
!13864 = distinct !DISubprogram(name: "log_queue_receive", scope: !1830, file: !1830, line: 635, type: !13865, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13867)
!13865 = !DISubroutineType(types: !13866)
!13866 = !{!53, !13662}
!13867 = !{!13868, !13869}
!13868 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !13864, file: !1830, line: 635, type: !13662)
!13869 = !DILocalVariable(name: "ret_val", scope: !13864, file: !1830, line: 637, type: !1337)
!13870 = !DILocation(line: 0, scope: !13864)
!13871 = !DILocation(line: 637, column: 26, scope: !13864)
!13872 = !DILocation(line: 638, column: 20, scope: !13864)
!13873 = !DILocation(line: 638, column: 12, scope: !13864)
!13874 = !DILocation(line: 638, column: 5, scope: !13864)
!13875 = distinct !DISubprogram(name: "print_normal_log", scope: !1830, file: !1830, line: 854, type: !13876, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13880)
!13876 = !DISubroutineType(types: !13877)
!13877 = !{null, !13878}
!13878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13879, size: 32)
!13879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1868)
!13880 = !{!13881}
!13881 = !DILocalVariable(name: "normal_log_message", arg: 1, scope: !13875, file: !1830, line: 854, type: !13878)
!13882 = !DILocation(line: 0, scope: !13875)
!13883 = !DILocation(line: 857, column: 46, scope: !13875)
!13884 = !DILocation(line: 858, column: 32, scope: !13875)
!13885 = !DILocation(line: 859, column: 12, scope: !13875)
!13886 = !DILocation(line: 860, column: 32, scope: !13875)
!13887 = !DILocation(line: 861, column: 32, scope: !13875)
!13888 = !DILocation(line: 856, column: 5, scope: !13875)
!13889 = !DILocation(line: 862, column: 30, scope: !13875)
!13890 = !DILocation(line: 862, column: 5, scope: !13875)
!13891 = !DILocation(line: 863, column: 1, scope: !13875)
!13892 = distinct !DISubprogram(name: "print_hex_dump", scope: !1830, file: !1830, line: 883, type: !13893, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13897)
!13893 = !DISubroutineType(types: !13894)
!13894 = !{null, !13895}
!13895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13896, size: 32)
!13896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1881)
!13897 = !{!13898}
!13898 = !DILocalVariable(name: "hex_dump_message", arg: 1, scope: !13892, file: !1830, line: 883, type: !13895)
!13899 = !DILocation(line: 0, scope: !13892)
!13900 = !DILocation(line: 886, column: 44, scope: !13892)
!13901 = !DILocation(line: 887, column: 30, scope: !13892)
!13902 = !DILocation(line: 888, column: 12, scope: !13892)
!13903 = !DILocation(line: 889, column: 30, scope: !13892)
!13904 = !DILocation(line: 890, column: 30, scope: !13892)
!13905 = !DILocation(line: 885, column: 5, scope: !13892)
!13906 = !DILocation(line: 891, column: 30, scope: !13892)
!13907 = !DILocation(line: 891, column: 5, scope: !13892)
!13908 = !DILocation(line: 892, column: 27, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13892, file: !1830, line: 892, column: 9)
!13910 = !DILocation(line: 892, column: 39, scope: !13909)
!13911 = !DILocation(line: 0, scope: !13909)
!13912 = !DILocation(line: 892, column: 9, scope: !13892)
!13913 = !DILocation(line: 893, column: 9, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13909, file: !1830, line: 892, column: 61)
!13915 = !DILocation(line: 894, column: 41, scope: !13914)
!13916 = !DILocation(line: 894, column: 76, scope: !13914)
!13917 = !DILocation(line: 894, column: 88, scope: !13914)
!13918 = !DILocation(line: 894, column: 9, scope: !13914)
!13919 = !DILocation(line: 895, column: 5, scope: !13914)
!13920 = !DILocation(line: 896, column: 9, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13909, file: !1830, line: 895, column: 12)
!13922 = !DILocation(line: 898, column: 1, scope: !13892)
!13923 = distinct !DISubprogram(name: "process_log_message", scope: !1830, file: !1830, line: 900, type: !13924, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13928)
!13924 = !DISubroutineType(types: !13925)
!13925 = !{null, !13926}
!13926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13927, size: 32)
!13927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1859)
!13928 = !{!13929, !13930}
!13929 = !DILocalVariable(name: "log_message", arg: 1, scope: !13923, file: !1830, line: 900, type: !13926)
!13930 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !13931, file: !1830, line: 903, type: !1332)
!13931 = distinct !DILexicalBlock(scope: !13932, file: !1830, line: 902, column: 28)
!13932 = distinct !DILexicalBlock(scope: !13923, file: !1830, line: 902, column: 9)
!13933 = !DILocation(line: 0, scope: !13923)
!13934 = !DILocation(line: 902, column: 9, scope: !13932)
!13935 = !DILocation(line: 902, column: 9, scope: !13923)
!13936 = !DILocation(line: 231, column: 2, scope: !13488, inlinedAt: !13937)
!13937 = distinct !DILocation(line: 903, column: 46, scope: !13931)
!13938 = !DILocation(line: 0, scope: !13488, inlinedAt: !13937)
!13939 = !DILocation(line: 0, scope: !13931)
!13940 = !DILocation(line: 904, column: 67, scope: !13931)
!13941 = !DILocation(line: 904, column: 9, scope: !13931)
!13942 = !DILocation(line: 905, column: 27, scope: !13931)
!13943 = !DILocation(line: 0, scope: !13510, inlinedAt: !13944)
!13944 = distinct !DILocation(line: 906, column: 9, scope: !13931)
!13945 = !DILocation(line: 249, column: 2, scope: !13510, inlinedAt: !13944)
!13946 = !DILocation(line: 907, column: 5, scope: !13931)
!13947 = !DILocation(line: 909, column: 49, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13923, file: !1830, line: 909, column: 9)
!13949 = !DILocation(line: 909, column: 33, scope: !13948)
!13950 = !DILocation(line: 909, column: 9, scope: !13923)
!13951 = !DILocation(line: 910, column: 40, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13948, file: !1830, line: 909, column: 63)
!13953 = !DILocation(line: 910, column: 42, scope: !13952)
!13954 = !DILocation(line: 910, column: 9, scope: !13952)
!13955 = !DILocation(line: 911, column: 5, scope: !13952)
!13956 = !DILocation(line: 912, column: 40, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13948, file: !1830, line: 911, column: 12)
!13958 = !DILocation(line: 912, column: 9, scope: !13957)
!13959 = !DILocation(line: 914, column: 1, scope: !13923)
!13960 = distinct !DISubprogram(name: "syslog_task_entry", scope: !1830, file: !1830, line: 966, type: !753, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13961)
!13961 = !{!13962, !13963}
!13962 = !DILocalVariable(name: "args", arg: 1, scope: !13960, file: !1830, line: 966, type: !161)
!13963 = !DILocalVariable(name: "log_buffer", scope: !13964, file: !1830, line: 983, type: !1905)
!13964 = distinct !DILexicalBlock(scope: !13965, file: !1830, line: 982, column: 14)
!13965 = distinct !DILexicalBlock(scope: !13966, file: !1830, line: 982, column: 5)
!13966 = distinct !DILexicalBlock(scope: !13960, file: !1830, line: 982, column: 5)
!13967 = !DILocation(line: 0, scope: !13960)
!13968 = !DILocation(line: 979, column: 23, scope: !13960)
!13969 = !DILocation(line: 980, column: 5, scope: !13960)
!13970 = !DILocation(line: 982, column: 5, scope: !13960)
!13971 = !DILocation(line: 983, column: 9, scope: !13964)
!13972 = !DILocation(line: 0, scope: !13964)
!13973 = !DILocation(line: 983, column: 26, scope: !13964)
!13974 = !DILocation(line: 984, column: 18, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13964, file: !1830, line: 984, column: 13)
!13976 = !DILocation(line: 984, column: 15, scope: !13975)
!13977 = !DILocation(line: 984, column: 13, scope: !13964)
!13978 = !DILocation(line: 993, column: 42, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13975, file: !1830, line: 984, column: 50)
!13980 = !DILocation(line: 993, column: 41, scope: !13979)
!13981 = !DILocation(line: 993, column: 24, scope: !13979)
!13982 = !DILocation(line: 993, column: 4, scope: !13979)
!13983 = !DILocation(line: 995, column: 33, scope: !13979)
!13984 = !DILocation(line: 995, column: 13, scope: !13979)
!13985 = !DILocation(line: 996, column: 9, scope: !13979)
!13986 = !DILocation(line: 997, column: 5, scope: !13965)
!13987 = !DILocation(line: 982, column: 5, scope: !13965)
!13988 = distinct !{!13988, !13989, !13990}
!13989 = !DILocation(line: 982, column: 5, scope: !13966)
!13990 = !DILocation(line: 997, column: 5, scope: !13966)
!13991 = distinct !DISubprogram(name: "log_init", scope: !1830, file: !1830, line: 1000, type: !13992, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !13999)
!13992 = !DISubroutineType(types: !13993)
!13993 = !{null, !1928, !13994, !1935}
!13994 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_load_fn", file: !459, line: 117, baseType: !13995)
!13995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13996, size: 32)
!13996 = !DISubroutineType(types: !13997)
!13997 = !{!136, !13998}
!13998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 32)
!13999 = !{!14000, !14001, !14002, !14003}
!14000 = !DILocalVariable(name: "save", arg: 1, scope: !13991, file: !1830, line: 1000, type: !1928)
!14001 = !DILocalVariable(name: "load", arg: 2, scope: !13991, file: !1830, line: 1001, type: !13994)
!14002 = !DILocalVariable(name: "entries", arg: 3, scope: !13991, file: !1830, line: 1002, type: !1935)
!14003 = !DILocalVariable(name: "exception_config", scope: !13991, file: !1830, line: 1004, type: !14004)
!14004 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !1798, line: 99, baseType: !14005)
!14005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1798, line: 95, size: 64, elements: !14006)
!14006 = !{!14007, !14008}
!14007 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !14005, file: !1798, line: 97, baseType: !1802, size: 32)
!14008 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !14005, file: !1798, line: 98, baseType: !1802, size: 32, offset: 32)
!14009 = !DILocation(line: 0, scope: !13991)
!14010 = !DILocation(line: 1004, column: 5, scope: !13991)
!14011 = !DILocation(line: 1004, column: 27, scope: !13991)
!14012 = !DILocation(line: 1006, column: 9, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !13991, file: !1830, line: 1006, column: 9)
!14014 = !DILocation(line: 1006, column: 26, scope: !14013)
!14015 = !DILocation(line: 1006, column: 9, scope: !13991)
!14016 = !DILocation(line: 1011, column: 22, scope: !13991)
!14017 = !DILocation(line: 1012, column: 5, scope: !13991)
!14018 = !DILocation(line: 1013, column: 5, scope: !13991)
!14019 = !DILocation(line: 1014, column: 23, scope: !13991)
!14020 = !DILocation(line: 1016, column: 22, scope: !13991)
!14021 = !DILocation(line: 1016, column: 30, scope: !13991)
!14022 = !DILocation(line: 1017, column: 22, scope: !13991)
!14023 = !DILocation(line: 1017, column: 30, scope: !13991)
!14024 = !DILocation(line: 1018, column: 5, scope: !13991)
!14025 = !DILocation(line: 1021, column: 19, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !13991, file: !1830, line: 1021, column: 9)
!14027 = !DILocation(line: 1021, column: 16, scope: !14026)
!14028 = !DILocation(line: 1021, column: 9, scope: !13991)
!14029 = !DILocation(line: 1027, column: 9, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14026, file: !1830, line: 1026, column: 53)
!14031 = !DILocation(line: 1028, column: 5, scope: !14030)
!14032 = !DILocation(line: 1030, column: 24, scope: !13991)
!14033 = !DILocation(line: 1031, column: 22, scope: !13991)
!14034 = !DILocation(line: 1034, column: 27, scope: !13991)
!14035 = !DILocation(line: 1035, column: 27, scope: !13991)
!14036 = !DILocation(line: 1037, column: 9, scope: !14037)
!14037 = distinct !DILexicalBlock(scope: !13991, file: !1830, line: 1037, column: 9)
!14038 = !DILocation(line: 1037, column: 9, scope: !13991)
!14039 = !DILocation(line: 1039, column: 13, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14041, file: !1830, line: 1039, column: 13)
!14041 = distinct !DILexicalBlock(scope: !14037, file: !1830, line: 1037, column: 15)
!14042 = !DILocation(line: 1039, column: 34, scope: !14040)
!14043 = !DILocation(line: 1039, column: 13, scope: !14041)
!14044 = !DILocation(line: 1040, column: 13, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !14046, file: !1830, line: 1040, column: 13)
!14046 = distinct !DILexicalBlock(scope: !14040, file: !1830, line: 1039, column: 40)
!14047 = !DILocation(line: 1041, column: 9, scope: !14046)
!14048 = !DILocation(line: 1043, column: 22, scope: !13991)
!14049 = !DILocation(line: 1044, column: 1, scope: !13991)
!14050 = distinct !DISubprogram(name: "syslog_exception_cb", scope: !1830, file: !1830, line: 513, type: !181, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !2135)
!14051 = !DILocation(line: 518, column: 5, scope: !14050)
!14052 = !DILocation(line: 519, column: 1, scope: !14050)
!14053 = distinct !DISubprogram(name: "syslog_buffer_dump", scope: !1830, file: !1830, line: 483, type: !181, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14054)
!14054 = !{!14055, !14056, !14057}
!14055 = !DILocalVariable(name: "index", scope: !14053, file: !1830, line: 485, type: !136)
!14056 = !DILocalVariable(name: "pHead", scope: !14053, file: !1830, line: 486, type: !1905)
!14057 = !DILocalVariable(name: "pCurr", scope: !14053, file: !1830, line: 486, type: !1905)
!14058 = !DILocation(line: 0, scope: !14053)
!14059 = !DILocation(line: 489, column: 5, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14053, file: !1830, line: 489, column: 5)
!14061 = !DILocation(line: 491, column: 13, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !1830, line: 491, column: 13)
!14063 = distinct !DILexicalBlock(scope: !14064, file: !1830, line: 489, column: 54)
!14064 = distinct !DILexicalBlock(scope: !14060, file: !1830, line: 489, column: 5)
!14065 = !DILocation(line: 491, column: 39, scope: !14062)
!14066 = !DILocation(line: 491, column: 13, scope: !14063)
!14067 = !DILocation(line: 492, column: 50, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14062, file: !1830, line: 491, column: 49)
!14069 = !DILocation(line: 492, column: 48, scope: !14068)
!14070 = !DILocation(line: 494, column: 9, scope: !14068)
!14071 = !DILocation(line: 489, column: 50, scope: !14064)
!14072 = !DILocation(line: 489, column: 27, scope: !14064)
!14073 = distinct !{!14073, !14059, !14074}
!14074 = !DILocation(line: 495, column: 5, scope: !14060)
!14075 = !DILocation(line: 498, column: 13, scope: !14053)
!14076 = !DILocation(line: 500, column: 5, scope: !14053)
!14077 = !DILocation(line: 503, column: 5, scope: !14053)
!14078 = !DILocation(line: 505, column: 43, scope: !14079)
!14079 = distinct !DILexicalBlock(scope: !14053, file: !1830, line: 503, column: 19)
!14080 = !DILocation(line: 505, column: 17, scope: !14079)
!14081 = !DILocation(line: 506, column: 25, scope: !14079)
!14082 = !DILocation(line: 507, column: 46, scope: !14079)
!14083 = !DILocation(line: 507, column: 29, scope: !14079)
!14084 = !DILocation(line: 507, column: 9, scope: !14079)
!14085 = distinct !{!14085, !14077, !14086}
!14086 = !DILocation(line: 508, column: 5, scope: !14053)
!14087 = !DILocation(line: 509, column: 1, scope: !14053)
!14088 = distinct !DISubprogram(name: "sort_syslog_buffer", scope: !1830, file: !1830, line: 338, type: !14089, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14091)
!14089 = !DISubroutineType(types: !14090)
!14090 = !{!1905, !1905}
!14091 = !{!14092, !14093, !14094, !14095}
!14092 = !DILocalVariable(name: "pList", arg: 1, scope: !14088, file: !1830, line: 338, type: !1905)
!14093 = !DILocalVariable(name: "pHead", scope: !14088, file: !1830, line: 340, type: !1905)
!14094 = !DILocalVariable(name: "pCurr", scope: !14088, file: !1830, line: 340, type: !1905)
!14095 = !DILocalVariable(name: "p", scope: !14088, file: !1830, line: 340, type: !1905)
!14096 = !DILocation(line: 0, scope: !14088)
!14097 = !DILocation(line: 342, column: 15, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14088, file: !1830, line: 342, column: 9)
!14099 = !DILocation(line: 342, column: 23, scope: !14098)
!14100 = !DILocation(line: 342, column: 33, scope: !14098)
!14101 = !DILocation(line: 342, column: 42, scope: !14098)
!14102 = !DILocation(line: 342, column: 9, scope: !14088)
!14103 = !DILocation(line: 348, column: 43, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14088, file: !1830, line: 346, column: 27)
!14105 = !DILocation(line: 348, column: 17, scope: !14104)
!14106 = !DILocation(line: 349, column: 20, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14104, file: !1830, line: 349, column: 13)
!14108 = !DILocation(line: 349, column: 29, scope: !14107)
!14109 = !DILocation(line: 349, column: 32, scope: !14107)
!14110 = !DILocation(line: 349, column: 48, scope: !14107)
!14111 = !DILocation(line: 349, column: 46, scope: !14107)
!14112 = !DILocation(line: 349, column: 13, scope: !14104)
!14113 = !DILocation(line: 0, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14107, file: !1830, line: 353, column: 14)
!14115 = !DILocation(line: 356, column: 23, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14117, file: !1830, line: 356, column: 19)
!14117 = distinct !DILexicalBlock(scope: !14114, file: !1830, line: 355, column: 30)
!14118 = !DILocation(line: 356, column: 32, scope: !14116)
!14119 = !DILocation(line: 356, column: 38, scope: !14116)
!14120 = !DILocation(line: 357, column: 35, scope: !14116)
!14121 = !DILocation(line: 357, column: 33, scope: !14116)
!14122 = !DILocation(line: 356, column: 19, scope: !14117)
!14123 = distinct !{!14123, !14124, !14125}
!14124 = !DILocation(line: 355, column: 12, scope: !14114)
!14125 = !DILocation(line: 363, column: 12, scope: !14114)
!14126 = !DILocation(line: 358, column: 35, scope: !14127)
!14127 = distinct !DILexicalBlock(scope: !14116, file: !1830, line: 357, column: 76)
!14128 = !DILocation(line: 360, column: 19, scope: !14127)
!14129 = !DILocation(line: 0, scope: !14107)
!14130 = !DILocation(line: 346, column: 18, scope: !14088)
!14131 = !DILocation(line: 346, column: 5, scope: !14088)
!14132 = distinct !{!14132, !14131, !14133}
!14133 = !DILocation(line: 365, column: 5, scope: !14088)
!14134 = !DILocation(line: 367, column: 1, scope: !14088)
!14135 = distinct !DISubprogram(name: "syslog_get_config", scope: !1830, file: !1830, line: 1215, type: !14136, scopeLine: 1216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14138)
!14136 = !DISubroutineType(types: !14137)
!14137 = !{null, !13998}
!14138 = !{!14139}
!14139 = !DILocalVariable(name: "config", arg: 1, scope: !14135, file: !1830, line: 1215, type: !13998)
!14140 = !DILocation(line: 0, scope: !14135)
!14141 = !DILocation(line: 1217, column: 15, scope: !14135)
!14142 = !DILocation(line: 1218, column: 1, scope: !14135)
!14143 = distinct !DISubprogram(name: "syslog_set_filter", scope: !1830, file: !1830, line: 1271, type: !14144, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14146)
!14144 = !DISubroutineType(types: !14145)
!14145 = !{!53, !331, !331, !331, !53}
!14146 = !{!14147, !14148, !14149, !14150, !14151, !14152, !14153}
!14147 = !DILocalVariable(name: "module_name", arg: 1, scope: !14143, file: !1830, line: 1271, type: !331)
!14148 = !DILocalVariable(name: "log_switch_str", arg: 2, scope: !14143, file: !1830, line: 1271, type: !331)
!14149 = !DILocalVariable(name: "print_level_str", arg: 3, scope: !14143, file: !1830, line: 1271, type: !331)
!14150 = !DILocalVariable(name: "save", arg: 4, scope: !14143, file: !1830, line: 1271, type: !53)
!14151 = !DILocalVariable(name: "i", scope: !14143, file: !1830, line: 1273, type: !53)
!14152 = !DILocalVariable(name: "log_switch", scope: !14143, file: !1830, line: 1274, type: !53)
!14153 = !DILocalVariable(name: "print_level", scope: !14143, file: !1830, line: 1275, type: !53)
!14154 = !DILocation(line: 0, scope: !14143)
!14155 = !DILocation(line: 1277, column: 18, scope: !14143)
!14156 = !DILocation(line: 1278, column: 20, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14143, file: !1830, line: 1278, column: 9)
!14158 = !DILocation(line: 1278, column: 9, scope: !14143)
!14159 = !DILocation(line: 1282, column: 19, scope: !14143)
!14160 = !DILocation(line: 1283, column: 21, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14143, file: !1830, line: 1283, column: 9)
!14162 = !DILocation(line: 1283, column: 9, scope: !14143)
!14163 = !DILocation(line: 1287, column: 9, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14143, file: !1830, line: 1287, column: 9)
!14165 = !DILocation(line: 1287, column: 34, scope: !14164)
!14166 = !DILocation(line: 0, scope: !14164)
!14167 = !DILocation(line: 1287, column: 9, scope: !14143)
!14168 = !DILocation(line: 1289, column: 35, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14170, file: !1830, line: 1289, column: 13)
!14170 = distinct !DILexicalBlock(scope: !14164, file: !1830, line: 1287, column: 40)
!14171 = !DILocation(line: 1289, column: 13, scope: !14170)
!14172 = !DILocation(line: 1294, column: 16, scope: !14170)
!14173 = !DILocation(line: 1294, column: 9, scope: !14170)
!14174 = !DILocation(line: 1295, column: 39, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14170, file: !1830, line: 1294, column: 42)
!14176 = !DILocation(line: 1295, column: 50, scope: !14175)
!14177 = !DILocation(line: 1296, column: 27, scope: !14175)
!14178 = !DILocation(line: 1296, column: 13, scope: !14175)
!14179 = !DILocation(line: 1296, column: 39, scope: !14175)
!14180 = !DILocation(line: 1296, column: 51, scope: !14175)
!14181 = !DILocation(line: 1297, column: 14, scope: !14175)
!14182 = distinct !{!14182, !14173, !14183}
!14183 = !DILocation(line: 1298, column: 9, scope: !14170)
!14184 = !DILocation(line: 1302, column: 13, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14164, file: !1830, line: 1300, column: 12)
!14186 = !DILocation(line: 1304, column: 15, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14185, file: !1830, line: 1304, column: 13)
!14188 = !DILocation(line: 1304, column: 13, scope: !14185)
!14189 = !DILocation(line: 1307, column: 23, scope: !14185)
!14190 = !DILocation(line: 1307, column: 9, scope: !14185)
!14191 = !DILocation(line: 1307, column: 35, scope: !14185)
!14192 = !DILocation(line: 1307, column: 46, scope: !14185)
!14193 = !DILocation(line: 1308, column: 23, scope: !14185)
!14194 = !DILocation(line: 1308, column: 9, scope: !14185)
!14195 = !DILocation(line: 1308, column: 35, scope: !14185)
!14196 = !DILocation(line: 1308, column: 47, scope: !14185)
!14197 = !DILocation(line: 1312, column: 9, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14143, file: !1830, line: 1312, column: 9)
!14199 = !DILocation(line: 1312, column: 9, scope: !14143)
!14200 = !DILocation(line: 1313, column: 23, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14198, file: !1830, line: 1312, column: 15)
!14202 = !DILocation(line: 1313, column: 9, scope: !14201)
!14203 = !DILocation(line: 1314, column: 5, scope: !14201)
!14204 = !DILocation(line: 1317, column: 1, scope: !14143)
!14205 = distinct !DISubprogram(name: "str_to_log_switch", scope: !1830, file: !1830, line: 1484, type: !14206, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14208)
!14206 = !DISubroutineType(types: !14207)
!14207 = !{!53, !444}
!14208 = !{!14209, !14210}
!14209 = !DILocalVariable(name: "log_switch_str", arg: 1, scope: !14205, file: !1830, line: 1484, type: !444)
!14210 = !DILocalVariable(name: "i", scope: !14205, file: !1830, line: 1486, type: !53)
!14211 = !DILocation(line: 0, scope: !14205)
!14212 = !DILocation(line: 1488, column: 5, scope: !14213)
!14213 = distinct !DILexicalBlock(scope: !14205, file: !1830, line: 1488, column: 5)
!14214 = !DILocation(line: 1489, column: 37, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14216, file: !1830, line: 1489, column: 13)
!14216 = distinct !DILexicalBlock(scope: !14217, file: !1830, line: 1488, column: 69)
!14217 = distinct !DILexicalBlock(scope: !14213, file: !1830, line: 1488, column: 5)
!14218 = !DILocation(line: 1489, column: 14, scope: !14215)
!14219 = !DILocation(line: 1489, column: 13, scope: !14216)
!14220 = !DILocation(line: 1494, column: 1, scope: !14205)
!14221 = distinct !DISubprogram(name: "str_to_print_level", scope: !1830, file: !1830, line: 1496, type: !14206, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14222)
!14222 = !{!14223, !14224}
!14223 = !DILocalVariable(name: "print_level_str", arg: 1, scope: !14221, file: !1830, line: 1496, type: !444)
!14224 = !DILocalVariable(name: "i", scope: !14221, file: !1830, line: 1498, type: !53)
!14225 = !DILocation(line: 0, scope: !14221)
!14226 = !DILocation(line: 1500, column: 5, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14221, file: !1830, line: 1500, column: 5)
!14228 = !DILocation(line: 1501, column: 38, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14230, file: !1830, line: 1501, column: 13)
!14230 = distinct !DILexicalBlock(scope: !14231, file: !1830, line: 1500, column: 70)
!14231 = distinct !DILexicalBlock(scope: !14227, file: !1830, line: 1500, column: 5)
!14232 = !DILocation(line: 1501, column: 14, scope: !14229)
!14233 = !DILocation(line: 1501, column: 13, scope: !14230)
!14234 = !DILocation(line: 1500, column: 66, scope: !14231)
!14235 = !DILocation(line: 1500, column: 19, scope: !14231)
!14236 = distinct !{!14236, !14226, !14237}
!14237 = !DILocation(line: 1504, column: 5, scope: !14227)
!14238 = !DILocation(line: 1506, column: 1, scope: !14221)
!14239 = distinct !DISubprogram(name: "syslog_get_index_from_module_name", scope: !1830, file: !1830, line: 1252, type: !14240, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14242)
!14240 = !DISubroutineType(types: !14241)
!14241 = !{!53, !1935, !444}
!14242 = !{!14243, !14244, !14245}
!14243 = !DILocalVariable(name: "filters", arg: 1, scope: !14239, file: !1830, line: 1252, type: !1935)
!14244 = !DILocalVariable(name: "module_name", arg: 2, scope: !14239, file: !1830, line: 1252, type: !444)
!14245 = !DILocalVariable(name: "i", scope: !14239, file: !1830, line: 1254, type: !53)
!14246 = !DILocation(line: 0, scope: !14239)
!14247 = !DILocation(line: 1256, column: 17, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14239, file: !1830, line: 1256, column: 9)
!14249 = !DILocation(line: 1256, column: 9, scope: !14239)
!14250 = !DILocation(line: 1260, column: 12, scope: !14239)
!14251 = !DILocation(line: 1260, column: 5, scope: !14239)
!14252 = !DILocation(line: 1261, column: 33, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14254, file: !1830, line: 1261, column: 13)
!14254 = distinct !DILexicalBlock(scope: !14239, file: !1830, line: 1260, column: 24)
!14255 = !DILocation(line: 1261, column: 14, scope: !14253)
!14256 = !DILocation(line: 1261, column: 13, scope: !14254)
!14257 = !DILocation(line: 1264, column: 10, scope: !14254)
!14258 = distinct !{!14258, !14251, !14259}
!14259 = !DILocation(line: 1265, column: 5, scope: !14239)
!14260 = !DILocation(line: 1269, column: 1, scope: !14239)
!14261 = distinct !DISubprogram(name: "syslog_at_set_filter", scope: !1830, file: !1830, line: 1319, type: !14262, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14264)
!14262 = !DISubroutineType(types: !14263)
!14263 = !{!53, !331, !53, !53, !53}
!14264 = !{!14265, !14266, !14267, !14268, !14269}
!14265 = !DILocalVariable(name: "module_name", arg: 1, scope: !14261, file: !1830, line: 1319, type: !331)
!14266 = !DILocalVariable(name: "log_switch", arg: 2, scope: !14261, file: !1830, line: 1319, type: !53)
!14267 = !DILocalVariable(name: "print_level", arg: 3, scope: !14261, file: !1830, line: 1319, type: !53)
!14268 = !DILocalVariable(name: "save", arg: 4, scope: !14261, file: !1830, line: 1319, type: !53)
!14269 = !DILocalVariable(name: "i", scope: !14261, file: !1830, line: 1321, type: !53)
!14270 = !DILocation(line: 0, scope: !14261)
!14271 = !DILocation(line: 1323, column: 9, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14261, file: !1830, line: 1323, column: 9)
!14273 = !DILocation(line: 1323, column: 34, scope: !14272)
!14274 = !DILocation(line: 0, scope: !14272)
!14275 = !DILocation(line: 1323, column: 9, scope: !14261)
!14276 = !DILocation(line: 1325, column: 35, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14278, file: !1830, line: 1325, column: 13)
!14278 = distinct !DILexicalBlock(scope: !14272, file: !1830, line: 1323, column: 40)
!14279 = !DILocation(line: 1325, column: 13, scope: !14278)
!14280 = !DILocation(line: 1330, column: 16, scope: !14278)
!14281 = !DILocation(line: 1330, column: 9, scope: !14278)
!14282 = !DILocation(line: 1331, column: 39, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14278, file: !1830, line: 1330, column: 42)
!14284 = !DILocation(line: 1331, column: 50, scope: !14283)
!14285 = !DILocation(line: 1332, column: 27, scope: !14283)
!14286 = !DILocation(line: 1332, column: 13, scope: !14283)
!14287 = !DILocation(line: 1332, column: 39, scope: !14283)
!14288 = !DILocation(line: 1332, column: 51, scope: !14283)
!14289 = !DILocation(line: 1333, column: 14, scope: !14283)
!14290 = distinct !{!14290, !14281, !14291}
!14291 = !DILocation(line: 1334, column: 9, scope: !14278)
!14292 = !DILocation(line: 1338, column: 13, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14272, file: !1830, line: 1336, column: 12)
!14294 = !DILocation(line: 1340, column: 15, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14293, file: !1830, line: 1340, column: 13)
!14296 = !DILocation(line: 1340, column: 13, scope: !14293)
!14297 = !DILocation(line: 1343, column: 23, scope: !14293)
!14298 = !DILocation(line: 1343, column: 9, scope: !14293)
!14299 = !DILocation(line: 1343, column: 35, scope: !14293)
!14300 = !DILocation(line: 1343, column: 46, scope: !14293)
!14301 = !DILocation(line: 1344, column: 23, scope: !14293)
!14302 = !DILocation(line: 1344, column: 9, scope: !14293)
!14303 = !DILocation(line: 1344, column: 35, scope: !14293)
!14304 = !DILocation(line: 1344, column: 47, scope: !14293)
!14305 = !DILocation(line: 1348, column: 9, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14261, file: !1830, line: 1348, column: 9)
!14307 = !DILocation(line: 1348, column: 9, scope: !14261)
!14308 = !DILocation(line: 1349, column: 23, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14306, file: !1830, line: 1348, column: 15)
!14310 = !DILocation(line: 1349, column: 9, scope: !14309)
!14311 = !DILocation(line: 1350, column: 5, scope: !14309)
!14312 = !DILocation(line: 1353, column: 1, scope: !14261)
!14313 = distinct !DISubprogram(name: "syslog_convert_filter_str2val", scope: !1830, file: !1830, line: 1358, type: !14314, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14316)
!14314 = !DISubroutineType(types: !14315)
!14315 = !{!53, !1935, !331}
!14316 = !{!14317, !14318, !14319, !14320, !14321, !14322, !14323, !14324, !14325, !14326, !14327}
!14317 = !DILocalVariable(name: "filters", arg: 1, scope: !14313, file: !1830, line: 1358, type: !1935)
!14318 = !DILocalVariable(name: "buff", arg: 2, scope: !14313, file: !1830, line: 1358, type: !331)
!14319 = !DILocalVariable(name: "pos", scope: !14313, file: !1830, line: 1360, type: !53)
!14320 = !DILocalVariable(name: "i", scope: !14313, file: !1830, line: 1361, type: !53)
!14321 = !DILocalVariable(name: "module_name", scope: !14313, file: !1830, line: 1362, type: !331)
!14322 = !DILocalVariable(name: "log_switch_str", scope: !14313, file: !1830, line: 1363, type: !331)
!14323 = !DILocalVariable(name: "print_level_str", scope: !14313, file: !1830, line: 1364, type: !331)
!14324 = !DILocalVariable(name: "done", scope: !14313, file: !1830, line: 1365, type: !126)
!14325 = !DILocalVariable(name: "log_switch", scope: !14313, file: !1830, line: 1366, type: !136)
!14326 = !DILocalVariable(name: "print_level", scope: !14313, file: !1830, line: 1367, type: !136)
!14327 = !DILocalVariable(name: "type", scope: !14313, file: !1830, line: 1368, type: !128)
!14328 = !DILocation(line: 0, scope: !14313)
!14329 = !DILocation(line: 1362, column: 5, scope: !14313)
!14330 = !DILocation(line: 1363, column: 5, scope: !14313)
!14331 = !DILocation(line: 1364, column: 5, scope: !14313)
!14332 = !DILocation(line: 1368, column: 5, scope: !14313)
!14333 = !DILocation(line: 1370, column: 5, scope: !14313)
!14334 = !DILocation(line: 1376, column: 34, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14313, file: !1830, line: 1370, column: 19)
!14336 = !DILocation(line: 1376, column: 13, scope: !14335)
!14337 = !DILocation(line: 1377, column: 15, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14335, file: !1830, line: 1377, column: 13)
!14339 = !DILocation(line: 1377, column: 20, scope: !14338)
!14340 = !DILocation(line: 1377, column: 32, scope: !14338)
!14341 = !DILocation(line: 1377, column: 23, scope: !14338)
!14342 = !DILocation(line: 1377, column: 37, scope: !14338)
!14343 = !DILocation(line: 1377, column: 13, scope: !14335)
!14344 = !DILocation(line: 1382, column: 24, scope: !14335)
!14345 = !DILocation(line: 1383, column: 23, scope: !14335)
!14346 = !DILocation(line: 1389, column: 34, scope: !14335)
!14347 = !DILocation(line: 1389, column: 13, scope: !14335)
!14348 = !DILocation(line: 1390, column: 15, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14335, file: !1830, line: 1390, column: 13)
!14350 = !DILocation(line: 1390, column: 13, scope: !14335)
!14351 = !DILocation(line: 1395, column: 24, scope: !14335)
!14352 = !DILocation(line: 1395, column: 17, scope: !14335)
!14353 = !DILocation(line: 1397, column: 24, scope: !14335)
!14354 = !DILocation(line: 1398, column: 23, scope: !14335)
!14355 = !DILocation(line: 1404, column: 34, scope: !14335)
!14356 = !DILocation(line: 1404, column: 13, scope: !14335)
!14357 = !DILocation(line: 1405, column: 15, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14335, file: !1830, line: 1405, column: 13)
!14359 = !DILocation(line: 1405, column: 13, scope: !14335)
!14360 = !DILocation(line: 1410, column: 24, scope: !14335)
!14361 = !DILocation(line: 1410, column: 17, scope: !14335)
!14362 = !DILocation(line: 1410, column: 31, scope: !14335)
!14363 = !DILocation(line: 1412, column: 24, scope: !14335)
!14364 = !DILocation(line: 1413, column: 23, scope: !14335)
!14365 = !DILocation(line: 1417, column: 56, scope: !14335)
!14366 = !DILocation(line: 1417, column: 13, scope: !14335)
!14367 = !DILocation(line: 1420, column: 15, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14335, file: !1830, line: 1420, column: 13)
!14369 = !DILocation(line: 1420, column: 13, scope: !14335)
!14370 = !DILocation(line: 1424, column: 26, scope: !14335)
!14371 = !DILocation(line: 1424, column: 22, scope: !14335)
!14372 = !DILocation(line: 1427, column: 13, scope: !14373)
!14373 = distinct !DILexicalBlock(scope: !14335, file: !1830, line: 1427, column: 13)
!14374 = !DILocation(line: 1427, column: 18, scope: !14373)
!14375 = !DILocation(line: 1427, column: 13, scope: !14335)
!14376 = !DILocation(line: 1434, column: 27, scope: !14335)
!14377 = !DILocation(line: 1434, column: 23, scope: !14335)
!14378 = !DILocation(line: 1437, column: 13, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14335, file: !1830, line: 1437, column: 13)
!14380 = !DILocation(line: 1437, column: 18, scope: !14379)
!14381 = !DILocation(line: 1437, column: 13, scope: !14335)
!14382 = !DILocation(line: 1432, column: 22, scope: !14335)
!14383 = !DILocation(line: 1442, column: 23, scope: !14335)
!14384 = !DILocation(line: 1444, column: 9, scope: !14335)
!14385 = !DILocation(line: 1444, column: 21, scope: !14335)
!14386 = !DILocation(line: 1444, column: 32, scope: !14335)
!14387 = !DILocation(line: 1445, column: 9, scope: !14335)
!14388 = !DILocation(line: 1445, column: 21, scope: !14335)
!14389 = !DILocation(line: 1445, column: 33, scope: !14335)
!14390 = distinct !{!14390, !14333, !14391}
!14391 = !DILocation(line: 1446, column: 5, scope: !14313)
!14392 = !DILocation(line: 1449, column: 1, scope: !14313)
!14393 = distinct !DISubprogram(name: "syslog_get_a_string", scope: !1830, file: !1830, line: 1227, type: !14394, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14396)
!14394 = !DISubroutineType(types: !14395)
!14395 = !{!53, !444, !984}
!14396 = !{!14397, !14398, !14399}
!14397 = !DILocalVariable(name: "p", arg: 1, scope: !14393, file: !1830, line: 1227, type: !444)
!14398 = !DILocalVariable(name: "pp", arg: 2, scope: !14393, file: !1830, line: 1227, type: !984)
!14399 = !DILocalVariable(name: "start", scope: !14393, file: !1830, line: 1229, type: !444)
!14400 = !DILocation(line: 0, scope: !14393)
!14401 = !DILocation(line: 1231, column: 5, scope: !14393)
!14402 = !DILocation(line: 1231, column: 12, scope: !14393)
!14403 = !DILocation(line: 1232, column: 10, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14393, file: !1830, line: 1231, column: 23)
!14405 = distinct !{!14405, !14401, !14406}
!14406 = !DILocation(line: 1233, column: 5, scope: !14393)
!14407 = !DILocation(line: 1239, column: 13, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14409, file: !1830, line: 1238, column: 21)
!14409 = distinct !DILexicalBlock(scope: !14393, file: !1830, line: 1238, column: 9)
!14410 = !DILocation(line: 1240, column: 9, scope: !14408)
!14411 = !DILocation(line: 1243, column: 9, scope: !14393)
!14412 = !DILocation(line: 1245, column: 5, scope: !14393)
!14413 = !DILocation(line: 1245, column: 12, scope: !14393)
!14414 = !DILocation(line: 1245, column: 22, scope: !14393)
!14415 = !DILocation(line: 1246, column: 10, scope: !14416)
!14416 = distinct !DILexicalBlock(scope: !14393, file: !1830, line: 1245, column: 37)
!14417 = distinct !{!14417, !14412, !14418}
!14418 = !DILocation(line: 1247, column: 5, scope: !14393)
!14419 = !DILocation(line: 1249, column: 15, scope: !14393)
!14420 = !DILocation(line: 1249, column: 5, scope: !14393)
!14421 = !DILocation(line: 1250, column: 1, scope: !14393)
!14422 = distinct !DISubprogram(name: "syslog_convert_filter_val2str", scope: !1830, file: !1830, line: 1451, type: !14423, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14428)
!14423 = !DISubroutineType(types: !14424)
!14424 = !{!53, !14425, !331}
!14425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14426, size: 32)
!14426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14427, size: 32)
!14427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1897)
!14428 = !{!14429, !14430, !14431, !14432, !14433}
!14429 = !DILocalVariable(name: "filters", arg: 1, scope: !14422, file: !1830, line: 1451, type: !14425)
!14430 = !DILocalVariable(name: "buff", arg: 2, scope: !14422, file: !1830, line: 1451, type: !331)
!14431 = !DILocalVariable(name: "i", scope: !14422, file: !1830, line: 1453, type: !53)
!14432 = !DILocalVariable(name: "pos", scope: !14422, file: !1830, line: 1454, type: !53)
!14433 = !DILocalVariable(name: "n", scope: !14422, file: !1830, line: 1455, type: !53)
!14434 = !DILocation(line: 0, scope: !14422)
!14435 = !DILocation(line: 1457, column: 20, scope: !14422)
!14436 = !DILocation(line: 1457, column: 23, scope: !14422)
!14437 = !DILocation(line: 1457, column: 5, scope: !14422)
!14438 = !DILocation(line: 1458, column: 23, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14422, file: !1830, line: 1457, column: 35)
!14440 = !DILocation(line: 1458, column: 52, scope: !14439)
!14441 = !DILocation(line: 1459, column: 24, scope: !14439)
!14442 = !DILocation(line: 1459, column: 21, scope: !14439)
!14443 = !DILocation(line: 1460, column: 33, scope: !14439)
!14444 = !DILocation(line: 1461, column: 33, scope: !14439)
!14445 = !DILocation(line: 1462, column: 33, scope: !14439)
!14446 = !DILocation(line: 1458, column: 13, scope: !14439)
!14447 = !DILocation(line: 1463, column: 13, scope: !14439)
!14448 = !DILocation(line: 1464, column: 10, scope: !14439)
!14449 = distinct !{!14449, !14437, !14450}
!14450 = !DILocation(line: 1465, column: 5, scope: !14422)
!14451 = !DILocation(line: 1467, column: 5, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14422, file: !1830, line: 1467, column: 5)
!14453 = !DILocation(line: 1467, column: 5, scope: !14422)
!14454 = !DILocation(line: 1467, column: 5, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14452, file: !1830, line: 1467, column: 5)
!14456 = !DILocation(line: 1469, column: 5, scope: !14422)
!14457 = distinct !DISubprogram(name: "log_switch_to_str", scope: !1830, file: !1830, line: 1472, type: !14458, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14460)
!14458 = !DISubroutineType(types: !14459)
!14459 = !{!444, !475}
!14460 = !{!14461}
!14461 = !DILocalVariable(name: "log_switch", arg: 1, scope: !14457, file: !1830, line: 1472, type: !475)
!14462 = !DILocation(line: 0, scope: !14457)
!14463 = !DILocation(line: 1474, column: 5, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14457, file: !1830, line: 1474, column: 5)
!14465 = !DILocation(line: 1474, column: 5, scope: !14457)
!14466 = !DILocation(line: 1474, column: 5, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14464, file: !1830, line: 1474, column: 5)
!14468 = !DILocation(line: 1475, column: 13, scope: !14457)
!14469 = !DILocation(line: 1475, column: 5, scope: !14457)
!14470 = distinct !DISubprogram(name: "print_level_to_str", scope: !1830, file: !1830, line: 1478, type: !14471, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14473)
!14471 = !DISubroutineType(types: !14472)
!14472 = !{!444, !477}
!14473 = !{!14474}
!14474 = !DILocalVariable(name: "print_level", arg: 1, scope: !14470, file: !1830, line: 1478, type: !477)
!14475 = !DILocation(line: 0, scope: !14470)
!14476 = !DILocation(line: 1480, column: 5, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14470, file: !1830, line: 1480, column: 5)
!14478 = !DILocation(line: 1480, column: 5, scope: !14470)
!14479 = !DILocation(line: 1480, column: 5, scope: !14480)
!14480 = distinct !DILexicalBlock(scope: !14477, file: !1830, line: 1480, column: 5)
!14481 = !DILocation(line: 1481, column: 13, scope: !14470)
!14482 = !DILocation(line: 1481, column: 5, scope: !14470)
!14483 = distinct !DISubprogram(name: "__wrap_printf", scope: !1830, file: !1830, line: 1508, type: !14484, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1829, retainedNodes: !14486)
!14484 = !DISubroutineType(types: !14485)
!14485 = !{!53, !444, null}
!14486 = !{!14487, !14488, !14489, !14490}
!14487 = !DILocalVariable(name: "format", arg: 1, scope: !14483, file: !1830, line: 1508, type: !444)
!14488 = !DILocalVariable(name: "ap", scope: !14483, file: !1830, line: 1510, type: !13412)
!14489 = !DILocalVariable(name: "ret", scope: !14483, file: !1830, line: 1511, type: !53)
!14490 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !14483, file: !1830, line: 1512, type: !1332)
!14491 = !DILocation(line: 0, scope: !14483)
!14492 = !DILocation(line: 1510, column: 5, scope: !14483)
!14493 = !DILocation(line: 1510, column: 13, scope: !14483)
!14494 = !DILocation(line: 1514, column: 11, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14483, file: !1830, line: 1514, column: 10)
!14496 = !DILocation(line: 1514, column: 10, scope: !14483)
!14497 = !DILocation(line: 231, column: 2, scope: !13488, inlinedAt: !14498)
!14498 = distinct !DILocation(line: 1518, column: 30, scope: !14483)
!14499 = !DILocation(line: 0, scope: !13488, inlinedAt: !14498)
!14500 = !DILocation(line: 1520, column: 5, scope: !14483)
!14501 = !DILocation(line: 1521, column: 11, scope: !14483)
!14502 = !DILocation(line: 1522, column: 5, scope: !14483)
!14503 = !DILocation(line: 0, scope: !13510, inlinedAt: !14504)
!14504 = distinct !DILocation(line: 1524, column: 5, scope: !14483)
!14505 = !DILocation(line: 249, column: 2, scope: !13510, inlinedAt: !14504)
!14506 = !DILocation(line: 1526, column: 5, scope: !14483)
!14507 = !DILocation(line: 1527, column: 1, scope: !14483)
!14508 = distinct !DISubprogram(name: "__io_putchar", scope: !1958, file: !1958, line: 166, type: !1001, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !14509)
!14509 = !{!14510}
!14510 = !DILocalVariable(name: "ch", arg: 1, scope: !14508, file: !1958, line: 166, type: !53)
!14511 = !DILocation(line: 0, scope: !14508)
!14512 = !DILocation(line: 168, column: 12, scope: !14508)
!14513 = !DILocation(line: 168, column: 5, scope: !14508)
!14514 = distinct !DISubprogram(name: "bsp_io_def_uart_putchar", scope: !1958, file: !1958, line: 192, type: !1001, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !14515)
!14515 = !{!14516, !14517}
!14516 = !DILocalVariable(name: "ch", arg: 1, scope: !14514, file: !1958, line: 192, type: !53)
!14517 = !DILocalVariable(name: "n", scope: !14514, file: !1958, line: 194, type: !136)
!14518 = !DILocation(line: 0, scope: !14514)
!14519 = !DILocation(line: 196, column: 10, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14514, file: !1958, line: 196, column: 9)
!14521 = !DILocation(line: 196, column: 9, scope: !14514)
!14522 = !DILocation(line: 200, column: 9, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14514, file: !1958, line: 200, column: 9)
!14524 = !DILocation(line: 200, column: 9, scope: !14514)
!14525 = !DILocation(line: 202, column: 17, scope: !14526)
!14526 = distinct !DILexicalBlock(scope: !14527, file: !1958, line: 201, column: 12)
!14527 = distinct !DILexicalBlock(scope: !14523, file: !1958, line: 200, column: 39)
!14528 = !DILocation(line: 203, column: 19, scope: !14527)
!14529 = !DILocation(line: 203, column: 21, scope: !14527)
!14530 = !DILocation(line: 203, column: 24, scope: !14527)
!14531 = !DILocation(line: 203, column: 79, scope: !14527)
!14532 = !DILocation(line: 203, column: 9, scope: !14526)
!14533 = distinct !{!14533, !14534, !14535}
!14534 = !DILocation(line: 201, column: 9, scope: !14527)
!14535 = !DILocation(line: 203, column: 88, scope: !14527)
!14536 = !DILocation(line: 205, column: 13, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14527, file: !1958, line: 205, column: 13)
!14538 = !DILocation(line: 205, column: 16, scope: !14537)
!14539 = !DILocation(line: 205, column: 13, scope: !14527)
!14540 = !DILocation(line: 209, column: 17, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14527, file: !1958, line: 208, column: 12)
!14542 = !DILocation(line: 210, column: 19, scope: !14527)
!14543 = !DILocation(line: 210, column: 21, scope: !14527)
!14544 = !DILocation(line: 210, column: 24, scope: !14527)
!14545 = !DILocation(line: 210, column: 79, scope: !14527)
!14546 = !DILocation(line: 210, column: 9, scope: !14541)
!14547 = distinct !{!14547, !14548, !14549}
!14548 = !DILocation(line: 208, column: 9, scope: !14527)
!14549 = !DILocation(line: 210, column: 88, scope: !14527)
!14550 = !DILocation(line: 213, column: 17, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14552, file: !1958, line: 212, column: 12)
!14552 = distinct !DILexicalBlock(scope: !14523, file: !1958, line: 211, column: 12)
!14553 = !DILocation(line: 214, column: 18, scope: !14552)
!14554 = !DILocation(line: 214, column: 9, scope: !14551)
!14555 = distinct !{!14555, !14556, !14557}
!14556 = !DILocation(line: 212, column: 9, scope: !14552)
!14557 = !DILocation(line: 214, column: 20, scope: !14552)
!14558 = !DILocation(line: 216, column: 13, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14552, file: !1958, line: 216, column: 13)
!14560 = !DILocation(line: 216, column: 16, scope: !14559)
!14561 = !DILocation(line: 216, column: 13, scope: !14552)
!14562 = !DILocation(line: 220, column: 17, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14552, file: !1958, line: 219, column: 12)
!14564 = !DILocation(line: 221, column: 18, scope: !14552)
!14565 = !DILocation(line: 221, column: 9, scope: !14563)
!14566 = distinct !{!14566, !14567, !14568}
!14567 = !DILocation(line: 219, column: 9, scope: !14552)
!14568 = !DILocation(line: 221, column: 20, scope: !14552)
!14569 = !DILocation(line: 224, column: 12, scope: !14514)
!14570 = !DILocation(line: 224, column: 5, scope: !14514)
!14571 = !DILocation(line: 225, column: 1, scope: !14514)
!14572 = distinct !DISubprogram(name: "_uart_dma_blocking_is_safe", scope: !1958, file: !1958, line: 138, type: !14573, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !2135)
!14573 = !DISubroutineType(types: !14574)
!14574 = !{!1460}
!14575 = !DILocation(line: 141, column: 9, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14572, file: !1958, line: 141, column: 9)
!14577 = !DILocation(line: 141, column: 34, scope: !14576)
!14578 = !DILocation(line: 141, column: 59, scope: !14576)
!14579 = !DILocation(line: 470, column: 3, scope: !14580, inlinedAt: !14583)
!14580 = distinct !DISubprogram(name: "__get_PRIMASK", scope: !2166, file: !2166, line: 466, type: !2167, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !14581)
!14581 = !{!14582}
!14582 = !DILocalVariable(name: "result", scope: !14580, file: !2166, line: 468, type: !136)
!14583 = distinct !DILocation(line: 142, column: 9, scope: !14576)
!14584 = !{i64 535695}
!14585 = !DILocation(line: 0, scope: !14580, inlinedAt: !14583)
!14586 = !DILocation(line: 142, column: 25, scope: !14576)
!14587 = !DILocation(line: 142, column: 59, scope: !14576)
!14588 = !DILocation(line: 143, column: 16, scope: !14576)
!14589 = !DILocation(line: 143, column: 21, scope: !14576)
!14590 = !DILocation(line: 143, column: 76, scope: !14576)
!14591 = !DILocation(line: 141, column: 9, scope: !14572)
!14592 = !DILocation(line: 149, column: 5, scope: !14572)
!14593 = !DILocation(line: 0, scope: !14572)
!14594 = !DILocation(line: 150, column: 1, scope: !14572)
!14595 = distinct !DISubprogram(name: "__io_getchar", scope: !1958, file: !1958, line: 172, type: !996, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !2135)
!14596 = !DILocation(line: 174, column: 12, scope: !14595)
!14597 = !DILocation(line: 174, column: 5, scope: !14595)
!14598 = distinct !DISubprogram(name: "bsp_io_def_uart_getchar", scope: !1958, file: !1958, line: 228, type: !996, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !14599)
!14599 = !{!14600, !14602}
!14600 = !DILocalVariable(name: "len", scope: !14601, file: !1958, line: 246, type: !136)
!14601 = distinct !DILexicalBlock(scope: !14598, file: !1958, line: 245, column: 5)
!14602 = !DILocalVariable(name: "ret", scope: !14603, file: !1958, line: 251, type: !128)
!14603 = distinct !DILexicalBlock(scope: !14604, file: !1958, line: 250, column: 22)
!14604 = distinct !DILexicalBlock(scope: !14601, file: !1958, line: 250, column: 13)
!14605 = !DILocation(line: 248, column: 15, scope: !14601)
!14606 = !DILocation(line: 0, scope: !14601)
!14607 = !DILocation(line: 250, column: 17, scope: !14604)
!14608 = !DILocation(line: 250, column: 13, scope: !14601)
!14609 = !DILocation(line: 270, column: 13, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14604, file: !1958, line: 269, column: 16)
!14611 = !DILocation(line: 251, column: 13, scope: !14603)
!14612 = !DILocation(line: 0, scope: !14603)
!14613 = !DILocation(line: 253, column: 13, scope: !14603)
!14614 = !DILocation(line: 268, column: 20, scope: !14603)
!14615 = !DILocation(line: 269, column: 9, scope: !14604)
!14616 = !DILocation(line: 273, column: 1, scope: !14598)
!14617 = distinct !DISubprogram(name: "log_write", scope: !1958, file: !1958, line: 275, type: !14618, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !14620)
!14618 = !DISubroutineType(types: !14619)
!14619 = !{!53, !331, !53}
!14620 = !{!14621, !14622, !14623, !14624}
!14621 = !DILocalVariable(name: "buf", arg: 1, scope: !14617, file: !1958, line: 275, type: !331)
!14622 = !DILocalVariable(name: "len", arg: 2, scope: !14617, file: !1958, line: 275, type: !53)
!14623 = !DILocalVariable(name: "left", scope: !14617, file: !1958, line: 277, type: !53)
!14624 = !DILocalVariable(name: "last_char", scope: !14617, file: !1958, line: 278, type: !332)
!14625 = !DILocation(line: 0, scope: !14617)
!14626 = !DILocation(line: 280, column: 10, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14617, file: !1958, line: 280, column: 9)
!14628 = !DILocation(line: 280, column: 22, scope: !14627)
!14629 = !DILocation(line: 284, column: 23, scope: !14617)
!14630 = !DILocation(line: 284, column: 29, scope: !14617)
!14631 = !DILocation(line: 284, column: 17, scope: !14617)
!14632 = !DILocation(line: 286, column: 9, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14617, file: !1958, line: 286, column: 9)
!14634 = !DILocation(line: 286, column: 9, scope: !14617)
!14635 = !DILocation(line: 0, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14633, file: !1958, line: 287, column: 5)
!14637 = !DILocation(line: 291, column: 75, scope: !14638)
!14638 = distinct !DILexicalBlock(scope: !14636, file: !1958, line: 290, column: 12)
!14639 = !DILocation(line: 291, column: 21, scope: !14638)
!14640 = !DILocation(line: 291, column: 18, scope: !14638)
!14641 = !DILocation(line: 292, column: 18, scope: !14636)
!14642 = !DILocation(line: 292, column: 23, scope: !14636)
!14643 = !DILocation(line: 292, column: 26, scope: !14636)
!14644 = !DILocation(line: 292, column: 9, scope: !14638)
!14645 = distinct !{!14645, !14646, !14647}
!14646 = !DILocation(line: 290, column: 9, scope: !14636)
!14647 = !DILocation(line: 292, column: 63, scope: !14636)
!14648 = !DILocation(line: 294, column: 23, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14636, file: !1958, line: 294, column: 13)
!14650 = !DILocation(line: 294, column: 13, scope: !14636)
!14651 = !DILocation(line: 301, column: 21, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14636, file: !1958, line: 300, column: 12)
!14653 = !DILocation(line: 301, column: 18, scope: !14652)
!14654 = !DILocation(line: 302, column: 18, scope: !14636)
!14655 = !DILocation(line: 302, column: 23, scope: !14636)
!14656 = !DILocation(line: 302, column: 26, scope: !14636)
!14657 = !DILocation(line: 302, column: 9, scope: !14652)
!14658 = distinct !{!14658, !14659, !14660}
!14659 = !DILocation(line: 300, column: 9, scope: !14636)
!14660 = !DILocation(line: 302, column: 63, scope: !14636)
!14661 = !DILocation(line: 0, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14633, file: !1958, line: 305, column: 5)
!14663 = !DILocation(line: 309, column: 75, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14662, file: !1958, line: 308, column: 12)
!14665 = !DILocation(line: 309, column: 21, scope: !14664)
!14666 = !DILocation(line: 309, column: 18, scope: !14664)
!14667 = !DILocation(line: 310, column: 9, scope: !14664)
!14668 = distinct !{!14668, !14669, !14670}
!14669 = !DILocation(line: 308, column: 9, scope: !14662)
!14670 = !DILocation(line: 310, column: 22, scope: !14662)
!14671 = !DILocation(line: 312, column: 23, scope: !14672)
!14672 = distinct !DILexicalBlock(scope: !14662, file: !1958, line: 312, column: 13)
!14673 = !DILocation(line: 312, column: 13, scope: !14662)
!14674 = !DILocation(line: 319, column: 21, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14662, file: !1958, line: 318, column: 12)
!14676 = !DILocation(line: 319, column: 18, scope: !14675)
!14677 = !DILocation(line: 320, column: 9, scope: !14675)
!14678 = distinct !{!14678, !14679, !14680}
!14679 = !DILocation(line: 318, column: 9, scope: !14662)
!14680 = !DILocation(line: 320, column: 22, scope: !14662)
!14681 = !DILocation(line: 324, column: 1, scope: !14617)
!14682 = distinct !DISubprogram(name: "bsp_io_def_uart_init", scope: !1958, file: !1958, line: 326, type: !181, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !14683)
!14683 = !{!14684}
!14684 = !DILocalVariable(name: "dma_config", scope: !14682, file: !1958, line: 328, type: !14685)
!14685 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !763, line: 390, baseType: !14686)
!14686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !763, line: 382, size: 224, elements: !14687)
!14687 = !{!14688, !14689, !14690, !14691, !14692, !14693, !14694}
!14688 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !14686, file: !763, line: 383, baseType: !340, size: 32)
!14689 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !14686, file: !763, line: 384, baseType: !136, size: 32, offset: 32)
!14690 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !14686, file: !763, line: 385, baseType: !136, size: 32, offset: 64)
!14691 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !14686, file: !763, line: 386, baseType: !340, size: 32, offset: 96)
!14692 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !14686, file: !763, line: 387, baseType: !136, size: 32, offset: 128)
!14693 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !14686, file: !763, line: 388, baseType: !136, size: 32, offset: 160)
!14694 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !14686, file: !763, line: 389, baseType: !136, size: 32, offset: 192)
!14695 = !DILocation(line: 328, column: 5, scope: !14682)
!14696 = !DILocation(line: 328, column: 29, scope: !14682)
!14697 = !DILocation(line: 338, column: 5, scope: !14682)
!14698 = !DILocation(line: 339, column: 17, scope: !14682)
!14699 = !DILocation(line: 342, column: 23, scope: !14682)
!14700 = !DILocation(line: 342, column: 21, scope: !14682)
!14701 = !DILocation(line: 343, column: 23, scope: !14682)
!14702 = !DILocation(line: 343, column: 21, scope: !14682)
!14703 = !DILocation(line: 345, column: 5, scope: !14682)
!14704 = !DILocation(line: 347, column: 5, scope: !14682)
!14705 = !DILocation(line: 348, column: 1, scope: !14682)
!14706 = distinct !DISubprogram(name: "_uart_event", scope: !1958, file: !1958, line: 106, type: !840, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1957, retainedNodes: !14707)
!14707 = !{!14708, !14709, !14710}
!14708 = !DILocalVariable(name: "event", arg: 1, scope: !14706, file: !1958, line: 106, type: !842)
!14709 = !DILocalVariable(name: "user_data", arg: 2, scope: !14706, file: !1958, line: 106, type: !161)
!14710 = !DILocalVariable(name: "x_higher_priority_task_woken", scope: !14706, file: !1958, line: 108, type: !1337)
!14711 = !DILocation(line: 0, scope: !14706)
!14712 = !DILocation(line: 108, column: 5, scope: !14706)
!14713 = !DILocation(line: 108, column: 17, scope: !14706)
!14714 = !DILocation(line: 110, column: 5, scope: !14706)
!14715 = !DILocation(line: 116, column: 9, scope: !14716)
!14716 = distinct !DILexicalBlock(scope: !14706, file: !1958, line: 110, column: 20)
!14717 = !DILocation(line: 0, scope: !14716)
!14718 = !DILocation(line: 127, column: 5, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14706, file: !1958, line: 127, column: 5)
!14720 = !DILocation(line: 127, column: 5, scope: !14706)
!14721 = !DILocation(line: 127, column: 5, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14719, file: !1958, line: 127, column: 5)
!14723 = !{i64 2148352443}
!14724 = !{i64 2148352483}
!14725 = !DILocation(line: 128, column: 1, scope: !14706)
