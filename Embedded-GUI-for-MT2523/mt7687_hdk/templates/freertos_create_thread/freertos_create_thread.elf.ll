; ModuleID = './build/freertos_create_thread.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.flash_info_t = type { i8*, i8, i32, i32, i32, i8, i8, i8 }
%struct.log_control_block_t = type { i8*, i32, i32, void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* }
%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.hal_gpt_context_t = type { i32, %struct.hal_gpt_callback_context, i8 }
%struct.hal_gpt_callback_context = type { void (i8*)*, i8* }
%struct.uart_context_t = type { i8, %struct.hal_uart_config_t, i8, %struct.hal_uart_callback_config_t, i8, %struct.hal_uart_dma_config_t }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.hal_uart_callback_config_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.tskTaskControlBlock = type { i32*, %struct.xLIST_ITEM, %struct.xLIST_ITEM, i32, i32*, [6 x i8], i32, i32, i32, i32, i32, i32 }
%struct.xLIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM*, i8*, i8* }
%struct.xLIST = type { i32, %struct.xLIST_ITEM*, %struct.xMINI_LIST_ITEM }
%struct.xMINI_LIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM* }
%struct.QUEUE_REGISTRY_ITEM = type { i8*, i8* }
%struct.A_BLOCK_LINK = type { %struct.A_BLOCK_LINK*, i32 }
%struct.exception_config_t = type { i32, [6 x %struct.exception_config_type] }
%struct.exception_config_type = type { void ()*, void ()* }
%struct.TaskContextType = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.memory_region_type = type { i8*, i32*, i32*, i32 }
%struct.syslog_buffer_t = type { i32, [292 x i8] }
%struct.syslog_config_s = type { {}*, %struct.log_control_block_t** }
%struct.__va_list = type { i8* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.xMEMORY_REGION = type { i8*, i32, i32 }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.__tm*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct.__tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }
%struct.xTASK_STATUS = type { i8*, i8*, i32, i32, i32, i32, i32, i16 }
%struct.QueueDefinition = type { i8*, i8*, i8*, %struct.__va_list, %struct.xLIST, %struct.xLIST, i32, i32, i32, i32, i32, i32, i8 }
%struct.tmrTimerQueueMessage = type { i32, %union.anon }
%union.anon = type { %struct.tmrTimerParameters }
%struct.tmrTimerParameters = type { i32, %struct.tmrTimerControl* }
%struct.tmrTimerControl = type { i8*, %struct.xLIST_ITEM, i32, i32, i8*, void (i8*)*, i32 }
%struct.normal_log_message_t = type { i8*, i32, i8*, i32, i32, [257 x i8] }
%struct.hex_dump_message_t = type { i8*, i32, i8*, i32, i32, [129 x i8], i32, [128 x i8], i8* }
%struct.log_message_t = type { i32, %union.anon.24 }
%union.anon.24 = type { %struct.hex_dump_message_t }

@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !0
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !67
@.str = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/flash_sfc.c\00", align 1
@__func__.gpt_get_current_time = private unnamed_addr constant [21 x i8] c"gpt_get_current_time\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@sf_Mutex = internal unnamed_addr global i1 false, align 4, !dbg !80
@__func__.free_sf_lock = private unnamed_addr constant [13 x i8] c"free_sf_lock\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"SF_DAL_FLAG_BUSY()\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@suspend_time = dso_local local_unnamed_addr global i32 0, align 4, !dbg !72
@resume_suspend_on_ready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !74
@resume_suspend_on_checkready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !76
@g_u4ClkCnt1ms = dso_local local_unnamed_addr global i32 0, align 4, !dbg !81
@.str.3 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.4 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/gpt.c\00", align 1
@GPTTimer.0 = internal unnamed_addr global void ()* null, align 4, !dbg !160
@GPTTimer.1 = internal unnamed_addr global void ()* null, align 4, !dbg !161
@g_sfc_security_enable = dso_local local_unnamed_addr global i32 0, align 4, !dbg !162
@.str.9 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.10 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/sfc.c\00", align 1
@switch.table.sfc_direct_read_setup = private unnamed_addr constant [3 x i32] [i32 16, i32 112, i32 113], align 4
@gSFC_max_data_size = dso_local local_unnamed_addr global i32 128, align 4, !dbg !181
@cmdlist_switchqpi_winbond = dso_local constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !212
@cmdlist_switchspi_winbond = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !217
@cmdlist_switchspiq_winbond = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !222
@cmdlist_suspend_winbond = dso_local global [4 x i8] c"\01\01u\00", align 1, !dbg !227
@cmdlist_resume_winbond = dso_local global [4 x i8] c"\01\01z\00", align 1, !dbg !230
@cmdlist_switchspiq_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !232
@cmdlist_switchqpi_mxic = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !237
@cmdlist_switchspi_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01\00\00", align 1, !dbg !239
@cmdlist_switchspiq_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !241
@cmdlist_switchqpi_gd = dso_local local_unnamed_addr constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !243
@cmdlist_switchspi_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\00\00", align 1, !dbg !245
@cmdlist_switchspi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\00\00", align 1, !dbg !247
@cmdlist_switchspiq_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !249
@cmdlist_switchqpi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !251
@cmdlist_switchspi_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\01\00", align 1, !dbg !253
@cmdlist_switchspiq_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !255
@cmdlist_switchqpi_micron = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !257
@cmdlist_flash_reset_spimode = dso_local constant [7 x i8] c"\01\01f\01\01\99\00", align 1, !dbg !259
@cmdlist_flash_reset_qpimode = dso_local constant [7 x i8] c"\03\01f\03\01\99\00", align 1, !dbg !264
@spi_chip_info = dso_local local_unnamed_addr global %struct.flash_info_t* null, align 4, !dbg !266
@gd_write_sr2_1 = dso_local local_unnamed_addr global i32 0, align 4, !dbg !268
@support_flash_id = dso_local local_unnamed_addr global i32 0, align 4, !dbg !270
@gucFlashSFCMode = dso_local local_unnamed_addr global i32 0, align 4, !dbg !70
@chips_data = internal constant [13 x %struct.flash_info_t] [%struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.23, i32 0, i32 0), i8 -1, i32 -1, i32 4096, i32 256, i8 0, i8 0, i8 0 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), i8 -17, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8 -17, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8 -17, i32 1075052544, i32 4096, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i8 -62, i32 538312704, i32 16384, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8 -62, i32 538181632, i32 4096, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8 -62, i32 588578816, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0), i8 -56, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i8 -56, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8 -56, i32 1108738048, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21.24, i32 0, i32 0), i8 32, i32 -1172832256, i32 65536, i32 256, i8 50, i8 107, i8 -21 }], align 4, !dbg !273
@sf_drvier_status = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !64
@__FUNCTION__.flash_check_device = private unnamed_addr constant [19 x i8] c"flash_check_device\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c" Check flash device Failed !! \0A\0D\00", align 1
@.str.1.22 = private unnamed_addr constant [31 x i8] c"spi device id: %x %x %x (%x)\0A\0D\00", align 1
@.str.2.25 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.3.26 = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/spi_flash.c\00", align 1
@__FUNCTION__.flash_config = private unnamed_addr constant [13 x i8] c"flash_config\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"spi device id: %x %x %x (%x)\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"find flash: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Don't support flash: %s\0A\00", align 1
@__FUNCTION__.flash_init = private unnamed_addr constant [11 x i8] c"flash_init\00", align 1
@__func__.flash_wait_ready = private unnamed_addr constant [17 x i8] c"flash_wait_ready\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__FUNCTION__.flash_read_sr2 = private unnamed_addr constant [15 x i8] c"flash_read_sr2\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"flash_read_sr2: no init flash !\0A\00", align 1
@__func__.flash_write = private unnamed_addr constant [12 x i8] c"flash_write\00", align 1
@.str.9.23 = private unnamed_addr constant [10 x i8] c"DEF_FLASH\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"W25Q32JV\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"W25Q16DV\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"W25Q80DV\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"MX25L3233F\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"MX25L1635F\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"MX25V1635F\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"MX25V8035F\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"KH25V1635F\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"GD25Q32CSIG\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"GD25Q16CSIG\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"GD25VE32C\00", align 1
@.str.21.24 = private unnamed_addr constant [9 x i8] c"N25Q128A\00", align 1
@gXtalFreq = internal unnamed_addr global i32 0, align 4, !dbg !278
@gCpuFrequency = internal unnamed_addr global i32 0, align 4, !dbg !288
@switch.table.top_xtal_init = private unnamed_addr constant [8 x i32] [i32 20000000, i32 40000000, i32 26000000, i32 52000000, i32 40000000, i32 40000000, i32 40000000, i32 40000000], align 4
@switch.table.top_xtal_init.1 = private unnamed_addr constant [8 x i32] [i32 16, i32 512, i32 64, i32 1024, i32 512, i32 512, i32 512, i32 512], align 4
@.str.55 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.56 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@__const.halUART_SetFormat.fraction_L_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 16, i16 68, i16 146, i16 41, i16 170, i16 182, i16 219, i16 173, i16 255, i16 255], align 2
@__const.halUART_SetFormat.fraction_M_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3], align 2
@gUartClkFreq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !290
@.str.57 = private unnamed_addr constant [4 x i8] c"hal\00", align 1
@log_control_block_hal = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !340
@g_cache_status = dso_local global i8 0, align 1, !dbg !377
@.str.66 = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt7687/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1.67 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_cache_con = dso_local local_unnamed_addr global %union.CACHE_CON_Type zeroinitializer, align 4, !dbg !460
@g_cache_region_en = dso_local local_unnamed_addr global i32 0, align 4, !dbg !465
@g_cache_entry = dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type] zeroinitializer, align 4, !dbg !468
@nvic_function_table = dso_local local_unnamed_addr global [96 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !513
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.78 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@g_gpt_context = internal global [5 x %struct.hal_gpt_context_t] zeroinitializer, align 4, !dbg !605
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.81 = private unnamed_addr constant [18 x i8] c"Invalid port: %d.\00", align 1
@__FUNCTION__.hal_gpt_deinit = private unnamed_addr constant [15 x i8] c"hal_gpt_deinit\00", align 1
@.str.1.82 = private unnamed_addr constant [23 x i8] c"Should call  port: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_free_run_count = private unnamed_addr constant [27 x i8] c"hal_gpt_get_free_run_count\00", align 1
@.str.2.85 = private unnamed_addr constant [23 x i8] c"Invalid parameter: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_running_status = private unnamed_addr constant [27 x i8] c"hal_gpt_get_running_status\00", align 1
@.str.3.86 = private unnamed_addr constant [45 x i8] c"Invalid hal_gpt_stop_timer to stop port: %d.\00", align 1
@__FUNCTION__.hal_gpt_register_callback = private unnamed_addr constant [26 x i8] c"hal_gpt_register_callback\00", align 1
@.str.4.87 = private unnamed_addr constant [51 x i8] c"Invalid port: %d. Only port 0 or 1 works as timer.\00", align 1
@__FUNCTION__.hal_gpt_start_timer_ms = private unnamed_addr constant [23 x i8] c"hal_gpt_start_timer_ms\00", align 1
@__FUNCTION__.hal_gpt_stop_timer = private unnamed_addr constant [19 x i8] c"hal_gpt_stop_timer\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !644
@g_uart_context_table = internal global [2 x %struct.uart_context_t] zeroinitializer, align 4, !dbg !700
@g_uart_send_lock_status = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !746
@g_uart_sleep_handler = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !743
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.56, i32 0, i32 0)], align 4, !dbg !327
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [2 x i32] [i32 0, i32 5], align 4, !dbg !335
@hal_uart_map_receive_callback.func_tbl = internal unnamed_addr constant [2 x void ()*] [void ()* @hal_uart_receive_callback0, void ()* @hal_uart_receive_callback1], align 4, !dbg !749
@__const.hal_uart_translate_baudrate.baudrate_tbl = private unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4
@__const.hal_uart_translate_word_length.databit_tbl = private unnamed_addr constant [4 x i16] [i16 0, i16 1, i16 2, i16 3], align 2
@__const.hal_uart_translate_parity.parity_tbl = private unnamed_addr constant [5 x i16] [i16 0, i16 8, i16 24, i16 0, i16 0], align 2
@__const.hal_uart_translate_stopbit.stopbit_tbl = private unnamed_addr constant [3 x i16] [i16 0, i16 4, i16 4], align 2
@DWT_NUMCOMP = internal unnamed_addr global i32 0, align 4, !dbg !760
@cmdlist_switchqpi_default = dso_local local_unnamed_addr constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !810
@cmdlist_switchspi_default = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !830
@cmdlist_switchspiq_default = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !832
@customer_flash_info = dso_local local_unnamed_addr constant %struct.flash_info_t zeroinitializer, align 4, !dbg !834
@__const.gpio_mode_init.mode_temp = private unnamed_addr constant [10 x i32] [i32 -2004322441, i32 -2004318072, i32 -2004318072, i32 -2004596600, i32 -2005464952, i32 -2004318072, i32 -2004318072, i32 -2004457336, i32 -2004318072, i32 8], align 4
@.str.100 = private unnamed_addr constant [9 x i8] c"freertos\00", align 1
@log_control_block_freertos = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.100, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !836
@.str.1.101 = private unnamed_addr constant [17 x i8] c"freertos_example\00", align 1
@__FUNCTION__.vTestTask = private unnamed_addr constant [10 x i8] c"vTestTask\00", align 1
@.str.2.102 = private unnamed_addr constant [22 x i8] c"Hello World from %d\0A\0D\00", align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !866
@__FUNCTION__._main_sys_random_init = private unnamed_addr constant [22 x i8] c"_main_sys_random_init\00", align 1
@.str.1.113 = private unnamed_addr constant [18 x i8] c"trng init failed\0A\00", align 1
@.str.114 = private unnamed_addr constant [6 x i8] c"flash\00", align 1
@__FLASH_segment_start__ = external dso_local global [0 x i32], align 4
@__FLASH_segment_end__ = external dso_local global [0 x i32], align 4
@.str.1.115 = private unnamed_addr constant [5 x i8] c"sram\00", align 1
@__SRAM_segment_start__ = external dso_local global [0 x i32], align 4
@__SRAM_segment_end__ = external dso_local global [0 x i32], align 4
@.str.2.116 = private unnamed_addr constant [8 x i8] c"ramtext\00", align 1
@__ramtext_start__ = external dso_local global [0 x i32], align 4
@__ramtext_end__ = external dso_local global [0 x i32], align 4
@.str.3.117 = private unnamed_addr constant [7 x i8] c"tcmbss\00", align 1
@__tcmbss_start__ = external dso_local global [0 x i32], align 4
@__tcmbss_end__ = external dso_local global [0 x i32], align 4
@.str.4.118 = private unnamed_addr constant [4 x i8] c"scs\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !926
@end = external dso_local global i8, align 1
@.str.119 = private unnamed_addr constant [7 x i8] c"_exit\0A\00", align 1
@.str.1.120 = private unnamed_addr constant [10 x i8] c"_kill %d\0A\00", align 1
@.str.2.121 = private unnamed_addr constant [9 x i8] c"_getpid\0A\00", align 1
@pxCurrentTCB = dso_local global %struct.tskTaskControlBlock* null, align 4, !dbg !1128
@.str.124 = private unnamed_addr constant [11 x i8] c"pxTaskCode\00", align 1
@.str.1.125 = private unnamed_addr constant [51 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/tasks.c\00", align 1
@.str.2.126 = private unnamed_addr constant [67 x i8] c"( ( uxPriority & ( ~portPRIVILEGE_BIT ) ) < configMAX_PRIORITIES )\00", align 1
@uxCurrentNumberOfTasks = internal global i32 0, align 4, !dbg !1242
@xSchedulerRunning = internal global i32 0, align 4, !dbg !1245
@uxTaskNumber = internal unnamed_addr global i32 0, align 4, !dbg !1248
@uxTopReadyPriority = internal global i32 0, align 4, !dbg !1250
@pxReadyTasksLists = internal global [20 x %struct.xLIST] zeroinitializer, align 4, !dbg !1228
@xTasksWaitingTermination = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1238
@uxTasksDeleted = internal global i32 0, align 4, !dbg !1252
@uxSchedulerSuspended = internal global i32 0, align 4, !dbg !1254
@.str.4.127 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended == 0\00", align 1
@.str.5.130 = private unnamed_addr constant [19 x i8] c"pxPreviousWakeTime\00", align 1
@.str.6.131 = private unnamed_addr constant [24 x i8] c"( xTimeIncrement > 0U )\00", align 1
@xTickCount = internal global i32 0, align 4, !dbg !1256
@.str.7.134 = private unnamed_addr constant [41 x i8] c"( uxNewPriority < configMAX_PRIORITIES )\00", align 1
@xSuspendedTaskList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1240
@.str.8.136 = private unnamed_addr constant [14 x i8] c"xTaskToResume\00", align 1
@xPendingReadyList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1236
@.str.9.139 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.10.140 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.11.132 = private unnamed_addr constant [21 x i8] c"uxSchedulerSuspended\00", align 1
@xYieldPending = internal global i32 0, align 4, !dbg !1259
@uxPendedTicks = internal global i32 0, align 4, !dbg !1261
@.str.12.143 = private unnamed_addr constant [6 x i8] c"pxTCB\00", align 1
@pxDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !1231
@pxOverflowDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !1234
@.str.13.133 = private unnamed_addr constant [43 x i8] c"( listLIST_IS_EMPTY( pxDelayedTaskList ) )\00", align 1
@xNumOfOverflows = internal global i32 0, align 4, !dbg !1263
@xNextTaskUnblockTime = internal global i32 -1, align 4, !dbg !1265
@vTaskSwitchContext.ucExpectedStackBytes = internal constant [20 x i8] c"\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5", align 1, !dbg !1213
@.str.14.135 = private unnamed_addr constant [71 x i8] c"listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0\00", align 1
@.str.15.144 = private unnamed_addr constant [12 x i8] c"pxEventList\00", align 1
@.str.16.145 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended != 0\00", align 1
@.str.17.146 = private unnamed_addr constant [15 x i8] c"pxUnblockedTCB\00", align 1
@.str.18.147 = private unnamed_addr constant [32 x i8] c"uxSchedulerSuspended != pdFALSE\00", align 1
@.str.19.148 = private unnamed_addr constant [10 x i8] c"pxTimeOut\00", align 1
@.str.20.149 = private unnamed_addr constant [14 x i8] c"pxTicksToWait\00", align 1
@.str.21.150 = private unnamed_addr constant [21 x i8] c"pxTCB->uxMutexesHeld\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"\09%c\09%u\09%u\09%u\0D\0A\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"xTaskToNotify\00", align 1
@.str.24 = private unnamed_addr constant [62 x i8] c"listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"xTask\00", align 1
@xDelayedTaskList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1267
@xDelayedTaskList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1269
@switch.table.vTaskList = private unnamed_addr constant [4 x i32] [i32 82, i32 66, i32 83, i32 68], align 4
@.str.161 = private unnamed_addr constant [8 x i8] c"pxQueue\00", align 1
@.str.1.162 = private unnamed_addr constant [51 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/queue.c\00", align 1
@.str.2.163 = private unnamed_addr constant [34 x i8] c"uxQueueLength > ( UBaseType_t ) 0\00", align 1
@.str.3.164 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.4.165 = private unnamed_addr constant [11 x i8] c"pxNewQueue\00", align 1
@.str.5.169 = private unnamed_addr constant [8 x i8] c"pxMutex\00", align 1
@.str.6.171 = private unnamed_addr constant [16 x i8] c"uxMaxCount != 0\00", align 1
@.str.7.172 = private unnamed_addr constant [29 x i8] c"uxInitialCount <= uxMaxCount\00", align 1
@.str.8.173 = private unnamed_addr constant [8 x i8] c"xHandle\00", align 1
@.str.9.166 = private unnamed_addr constant [80 x i8] c"!( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.10.167 = private unnamed_addr constant [71 x i8] c"!( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) )\00", align 1
@.str.11.168 = private unnamed_addr constant [86 x i8] c"!( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) )\00", align 1
@.str.12.174 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize == 0\00", align 1
@.str.13.170 = private unnamed_addr constant [75 x i8] c"!( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.14.175 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize != 0\00", align 1
@.str.15.176 = private unnamed_addr constant [7 x i8] c"xQueue\00", align 1
@xQueueRegistry = dso_local local_unnamed_addr global [8 x %struct.QUEUE_REGISTRY_ITEM] zeroinitializer, align 4, !dbg !1272
@xTimerQueue = internal unnamed_addr global i8* null, align 4, !dbg !1335
@.str.179 = private unnamed_addr constant [8 x i8] c"Tmr Svc\00", align 1
@.str.1.180 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.2.181 = private unnamed_addr constant [52 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/timers.c\00", align 1
@.str.3.186 = private unnamed_addr constant [28 x i8] c"( xTimerPeriodInTicks > 0 )\00", align 1
@pxCurrentTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !1368
@prvSampleTimeNow.xLastTime = internal unnamed_addr global i32 0, align 4, !dbg !1384
@.str.4.182 = private unnamed_addr constant [8 x i8] c"xResult\00", align 1
@pxOverflowTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !1394
@.str.5.183 = private unnamed_addr constant [37 x i8] c"( pxTimer->xTimerPeriodInTicks > 0 )\00", align 1
@xActiveTimerList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1396
@xActiveTimerList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !1398
@.str.6.184 = private unnamed_addr constant [12 x i8] c"xTimerQueue\00", align 1
@.str.7.185 = private unnamed_addr constant [5 x i8] c"TmrQ\00", align 1
@ucMaxSysCallPriority = internal unnamed_addr global i8 0, align 1, !dbg !1400
@ulMaxPRIGROUPValue = internal unnamed_addr global i32 0, align 4, !dbg !1419
@uxCriticalNesting = internal unnamed_addr global i32 -1431655766, align 4, !dbg !1421
@.str.195 = private unnamed_addr constant [28 x i8] c"uxCriticalNesting == 1000UL\00", align 1
@.str.1.190 = private unnamed_addr constant [72 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c\00", align 1
@.str.2.198 = private unnamed_addr constant [53 x i8] c"( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0\00", align 1
@.str.3.201 = private unnamed_addr constant [18 x i8] c"uxCriticalNesting\00", align 1
@.str.4.204 = private unnamed_addr constant [42 x i8] c"ucCurrentPriority >= ucMaxSysCallPriority\00", align 1
@.str.5.205 = private unnamed_addr constant [66 x i8] c"( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue\00", align 1
@.str.6.189 = private unnamed_addr constant [26 x i8] c"uxCriticalNesting == ~0UL\00", align 1
@pxEnd = internal unnamed_addr global %struct.A_BLOCK_LINK* null, align 4, !dbg !1423
@xBlockAllocatedBit = internal unnamed_addr global i1 false, align 4, !dbg !1452
@.str.1.209 = private unnamed_addr constant [69 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c\00", align 1
@xFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !1443
@xStart = internal global %struct.A_BLOCK_LINK zeroinitializer, align 4, !dbg !1439
@.str.2.208 = private unnamed_addr constant [67 x i8] c"( ( ( uint32_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@xMinimumEverFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !1445
@.str.3.210 = private unnamed_addr constant [61 x i8] c"( ( ( uint32_t ) pvReturn ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@.str.4.213 = private unnamed_addr constant [49 x i8] c"( pxLink->xBlockSize & xBlockAllocatedBit ) != 0\00", align 1
@.str.5.214 = private unnamed_addr constant [32 x i8] c"pxLink->pxNextFreeBlock == NULL\00", align 1
@ucHeap = internal global [65536 x i8] zeroinitializer, align 1, !dbg !1447
@SystemCoreClock = dso_local local_unnamed_addr global i32 40000000, align 4, !dbg !924
@xExceptionStack = internal global [192 x i32] zeroinitializer, align 4, !dbg !1453
@pxExceptionStack = dso_local local_unnamed_addr global i32* getelementptr inbounds ([192 x i32], [192 x i32]* @xExceptionStack, i32 0, i32 191), align 4, !dbg !1539
@assert_expr.0 = internal unnamed_addr global i1 false, align 4, !dbg !1633
@assert_expr.1 = internal unnamed_addr global i8* null, align 4, !dbg !1634
@assert_expr.2 = internal unnamed_addr global i8* null, align 4, !dbg !1635
@assert_expr.3 = internal unnamed_addr global i32 0, align 4, !dbg !1636
@reboot_flag = internal unnamed_addr global i32 0, align 4, !dbg !1611
@exception_config = internal unnamed_addr global %struct.exception_config_t zeroinitializer, align 4, !dbg !1613
@.str.219 = private unnamed_addr constant [40 x i8] c"assert failed: %s, file: %s, line: %d\0A\0D\00", align 1
@.str.1.220 = private unnamed_addr constant [14 x i8] c"Usage fault: \00", align 1
@.str.2.221 = private unnamed_addr constant [17 x i8] c"Divide by zero\0A\0D\00", align 1
@.str.3.222 = private unnamed_addr constant [19 x i8] c"Unaligned access\0A\0D\00", align 1
@.str.4.223 = private unnamed_addr constant [20 x i8] c"Coprocessor error\0A\0D\00", align 1
@.str.5.224 = private unnamed_addr constant [21 x i8] c"Invalid EXC_RETURN\0A\0D\00", align 1
@.str.6.225 = private unnamed_addr constant [16 x i8] c"Invalid state\0A\0D\00", align 1
@.str.7.226 = private unnamed_addr constant [24 x i8] c"Undefined instruction\0A\0D\00", align 1
@.str.8.227 = private unnamed_addr constant [26 x i8] c"Memory Management fault: \00", align 1
@.str.9.228 = private unnamed_addr constant [63 x i8] c"A MemManage fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.10.229 = private unnamed_addr constant [56 x i8] c"A derived MemManage fault occurred on exception entry\0A\0D\00", align 1
@.str.11.230 = private unnamed_addr constant [57 x i8] c"A derived MemManage fault occurred on exception return\0A\0D\00", align 1
@.str.12.231 = private unnamed_addr constant [32 x i8] c"Data access violation @0x%08x\0A\0D\00", align 1
@.str.13.232 = private unnamed_addr constant [64 x i8] c"MPU or Execute Never (XN) default memory map access violation\0A\0D\00", align 1
@.str.14.233 = private unnamed_addr constant [22 x i8] c"SCB->MMFAR = 0x%08x\0A\0D\00", align 1
@.str.15.234 = private unnamed_addr constant [12 x i8] c"Bus fault: \00", align 1
@.str.16.235 = private unnamed_addr constant [57 x i8] c"A bus fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.17.236 = private unnamed_addr constant [54 x i8] c"A derived bus fault has occurred on exception entry\0A\0D\00", align 1
@.str.18.237 = private unnamed_addr constant [55 x i8] c"A derived bus fault has occurred on exception return\0A\0D\00", align 1
@.str.19.238 = private unnamed_addr constant [43 x i8] c"Imprecise data access error has occurred\0A\0D\00", align 1
@.str.20.239 = private unnamed_addr constant [50 x i8] c"A precise data access error has occurred @x%08x\0A\0D\00", align 1
@.str.21.240 = private unnamed_addr constant [54 x i8] c"A bus fault on an instruction prefetch has occurred\0A\0D\00", align 1
@.str.22.241 = private unnamed_addr constant [21 x i8] c"SCB->BFAR = 0x%08x\0A\0D\00", align 1
@taskContext = internal global %struct.TaskContextType zeroinitializer, align 4, !dbg !1628
@pTaskContext = dso_local local_unnamed_addr global %struct.TaskContextType* @taskContext, align 4, !dbg !1542
@.str.23.242 = private unnamed_addr constant [15 x i8] c"r0  = 0x%08x\0A\0D\00", align 1
@.str.24.243 = private unnamed_addr constant [15 x i8] c"r1  = 0x%08x\0A\0D\00", align 1
@.str.25.244 = private unnamed_addr constant [15 x i8] c"r2  = 0x%08x\0A\0D\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"r3  = 0x%08x\0A\0D\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"r4  = 0x%08x\0A\0D\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"r5  = 0x%08x\0A\0D\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"r6  = 0x%08x\0A\0D\00", align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"r7  = 0x%08x\0A\0D\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"r8  = 0x%08x\0A\0D\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"r9  = 0x%08x\0A\0D\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"r10 = 0x%08x\0A\0D\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"r11 = 0x%08x\0A\0D\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"r12 = 0x%08x\0A\0D\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"lr  = 0x%08x\0A\0D\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"pc  = 0x%08x\0A\0D\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"psr = 0x%08x\0A\0D\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"EXC_RET = 0x%08x\0A\0D\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"s0  = 0x%08x\0A\0D\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"s1  = 0x%08x\0A\0D\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"s2  = 0x%08x\0A\0D\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"s3  = 0x%08x\0A\0D\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"s4  = 0x%08x\0A\0D\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"s5  = 0x%08x\0A\0D\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"s6  = 0x%08x\0A\0D\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"s7  = 0x%08x\0A\0D\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"s8  = 0x%08x\0A\0D\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"s9  = 0x%08x\0A\0D\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"s10 = 0x%08x\0A\0D\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"s11 = 0x%08x\0A\0D\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"s12 = 0x%08x\0A\0D\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"s13 = 0x%08x\0A\0D\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"s14 = 0x%08x\0A\0D\00", align 1
@.str.55.245 = private unnamed_addr constant [15 x i8] c"s15 = 0x%08x\0A\0D\00", align 1
@.str.56 = private unnamed_addr constant [15 x i8] c"s16 = 0x%08x\0A\0D\00", align 1
@.str.57.246 = private unnamed_addr constant [15 x i8] c"s17 = 0x%08x\0A\0D\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"s18 = 0x%08x\0A\0D\00", align 1
@.str.59 = private unnamed_addr constant [15 x i8] c"s19 = 0x%08x\0A\0D\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"s20 = 0x%08x\0A\0D\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"s21 = 0x%08x\0A\0D\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"s22 = 0x%08x\0A\0D\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"s23 = 0x%08x\0A\0D\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"s24 = 0x%08x\0A\0D\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"s25 = 0x%08x\0A\0D\00", align 1
@.str.66.247 = private unnamed_addr constant [15 x i8] c"s26 = 0x%08x\0A\0D\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"s27 = 0x%08x\0A\0D\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"s28 = 0x%08x\0A\0D\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"s29 = 0x%08x\0A\0D\00", align 1
@.str.70 = private unnamed_addr constant [15 x i8] c"s30 = 0x%08x\0A\0D\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"s31 = 0x%08x\0A\0D\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"fpscr = 0x%08x\0A\0D\00", align 1
@.str.73 = private unnamed_addr constant [19 x i8] c"CONTROL = 0x%08x\0A\0D\00", align 1
@.str.74 = private unnamed_addr constant [19 x i8] c"MSP     = 0x%08x\0A\0D\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"PSP     = 0x%08x\0A\0D\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"sp      = 0x%08x\0A\0D\00", align 1
@memory_regions = dso_local local_unnamed_addr constant [6 x %struct.memory_region_type] [%struct.memory_region_type { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.114, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_end__, i32 0, i32 0), i32 0 }, %struct.memory_region_type { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.115, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.116, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.117, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.118, i32 0, i32 0), i32* inttoptr (i32 -536813568 to i32*), i32* inttoptr (i32 -536809472 to i32*), i32 1 }, %struct.memory_region_type zeroinitializer], align 4, !dbg !1637
@.str.77 = private unnamed_addr constant [30 x i8] c"0x%08x: %08x %08x %08x %08x\0A\0D\00", align 1
@.str.78.248 = private unnamed_addr constant [27 x i8] c"\0A\0Dmemory dump completed.\0A\0D\00", align 1
@.str.79 = private unnamed_addr constant [26 x i8] c"\0A\0DIn Hard Fault Handler\0A\0D\00", align 1
@.str.80 = private unnamed_addr constant [21 x i8] c"SCB->HFSR = 0x%08x\0A\0D\00", align 1
@.str.81.249 = private unnamed_addr constant [20 x i8] c"Forced Hard Fault\0A\0D\00", align 1
@.str.82 = private unnamed_addr constant [21 x i8] c"SCB->CFSR = 0x%08x\0A\0D\00", align 1
@.str.83 = private unnamed_addr constant [31 x i8] c"\0A\0DIn MemManage Fault Handler\0A\0D\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"\0A\0DIn Bus Fault Handler\0A\0D\00", align 1
@.str.85 = private unnamed_addr constant [27 x i8] c"\0A\0DIn Usage Fault Handler\0A\0D\00", align 1
@.str.86 = private unnamed_addr constant [35 x i8] c"\0A\0DIn Debug Monitor Fault Handler\0D\0A\00", align 1
@.str.87 = private unnamed_addr constant [42 x i8] c"Task stack overflow:%c, stack end:0x%x \0D\0A\00", align 1
@.str.252 = private unnamed_addr constant [24 x i8] c"stack overflow: %x %s\0D\0A\00", align 1
@.str.1.253 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.254 = private unnamed_addr constant [53 x i8] c"../../../../../kernel/service/src/os_port_callback.c\00", align 1
@.str.257 = private unnamed_addr constant [7 x i8] c"common\00", align 1
@log_control_block_common = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.257, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !1651
@g_log_uart_port = internal unnamed_addr global i32 0, align 4, !dbg !1750
@syslog_init_done = internal unnamed_addr global i32 0, align 4, !dbg !1752
@syslog_buffer_pool = internal global [16 x %struct.syslog_buffer_t] zeroinitializer, align 4, !dbg !1733
@syslog_drop_count = internal unnamed_addr global i32 0, align 4, !dbg !1754
@g_log_queue = internal unnamed_addr global i8* null, align 4, !dbg !1756
@.str.1.276 = private unnamed_addr constant [45 x i8] c"log_queue_create: create log queue failed.\0D\0A\00", align 1
@.str.2.265 = private unnamed_addr constant [34 x i8] c"[T: %u M: %s C: %s F: %s L: %d]: \00", align 1
@print_level_table = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.264, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.269, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20.270, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.271, i32 0, i32 0)], align 4, !dbg !1758
@.str.3.264 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.4.277 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1
@.str.5.267 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.6.266 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.7.268 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8.278 = private unnamed_addr constant [29 x i8] c"\09\09>>> log drop count = %u\0D\0A\0A\00", align 1
@syslog_task_ready = internal unnamed_addr global i1 false, align 4, !dbg !1768
@.str.9.281 = private unnamed_addr constant [7 x i8] c"SYSLOG\00", align 1
@syslog_task_handle = internal global i8* null, align 4, !dbg !1731
@.str.10.282 = private unnamed_addr constant [39 x i8] c"log_init: create syslog task failed.\0D\0A\00", align 1
@syslog_config = internal global %struct.syslog_config_s zeroinitializer, align 8, !dbg !1736
@__FUNCTION__.log_init = private unnamed_addr constant [9 x i8] c"log_init\00", align 1
@.str.11.283 = private unnamed_addr constant [27 x i8] c"load syslog config failed\0A\00", align 1
@.str.12.285 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.13.289 = private unnamed_addr constant [19 x i8] c"%s%s 0x%01x 0x%01x\00", align 1
@.str.14.288 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15.290 = private unnamed_addr constant [24 x i8] c"pos < SYSLOG_FILTER_LEN\00", align 1
@.str.16.291 = private unnamed_addr constant [43 x i8] c"../../../../../kernel/service/src/syslog.c\00", align 1
@.str.17.292 = private unnamed_addr constant [43 x i8] c"log_switch - DEBUG_LOG_ON <= DEBUG_LOG_OFF\00", align 1
@log_switch_table = internal unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.287, i32 0, i32 0)], align 4, !dbg !1765
@.str.18.293 = private unnamed_addr constant [53 x i8] c"print_level - PRINT_LEVEL_DEBUG <= PRINT_LEVEL_ERROR\00", align 1
@.str.19.269 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.20.270 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.21.271 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.22.284 = private unnamed_addr constant [29 x i8] c"\0A\0D>>> dump syslog buffer\0A\0D\0A\0D\00", align 1
@.str.23.286 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.24.287 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 07:55:42 GMT +00:00\00", align 1, !dbg !1769
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !1774
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt7687_hdk\00", align 1, !dbg !1780

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_get_current_time() local_unnamed_addr #0 section ".ramTEXT" !dbg !1915 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !1922
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #17, !dbg !1922
  call void @llvm.dbg.value(metadata i32 0, metadata !1919, metadata !DIExpression()), !dbg !1923
  store i32 0, i32* %1, align 4, !dbg !1924
  call void @llvm.dbg.value(metadata i32* %1, metadata !1919, metadata !DIExpression(DW_OP_deref)), !dbg !1923
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #18, !dbg !1925
  call void @llvm.dbg.value(metadata i32 %3, metadata !1920, metadata !DIExpression()), !dbg !1923
  %4 = icmp eq i32 %3, 0, !dbg !1926
  br i1 %4, label %6, label %5, !dbg !1928

5:                                                ; preds = %0
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 92, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpt_get_current_time, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !1929
  unreachable, !dbg !1929

6:                                                ; preds = %0
  %7 = load i32, i32* %1, align 4, !dbg !1931
  call void @llvm.dbg.value(metadata i32 %7, metadata !1919, metadata !DIExpression()), !dbg !1923
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #17, !dbg !1932
  ret i32 %7, !dbg !1933
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !1934 {
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !1936
  ret void, !dbg !1937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !1938 {
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !1939
  ret void, !dbg !1940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !1941 {
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !1942
  ret void, !dbg !1943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !1944 {
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !1945
  ret void, !dbg !1946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_sf_lock() local_unnamed_addr #0 !dbg !1947 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !1952
  call void @llvm.dbg.value(metadata i32 %1, metadata !1951, metadata !DIExpression()), !dbg !1953
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !1954
  br i1 %2, label %4, label %3, !dbg !1956

3:                                                ; preds = %0
  store i1 true, i1* @sf_Mutex, align 4, !dbg !1957
  br label %4, !dbg !1959

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !1960
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !1960
  ret i32 %5, !dbg !1961
}

; Function Attrs: noinline nounwind optsize
define dso_local void @free_sf_lock() local_unnamed_addr #0 !dbg !1962 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !1965
  call void @llvm.dbg.value(metadata i32 %1, metadata !1964, metadata !DIExpression()), !dbg !1966
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !1967
  br i1 %2, label %3, label %4, !dbg !1969

3:                                                ; preds = %0
  store i1 false, i1* @sf_Mutex, align 4, !dbg !1970
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !1972
  ret void, !dbg !1973

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !1974
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.free_sf_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !1976
  unreachable, !dbg !1976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_sf_lock() local_unnamed_addr #0 !dbg !1977 {
  br label %1, !dbg !1980

1:                                                ; preds = %1, %0
  %2 = tail call i32 @get_sf_lock() #20, !dbg !1981
  call void @llvm.dbg.value(metadata i32 %2, metadata !1979, metadata !DIExpression()), !dbg !1983
  %3 = icmp eq i32 %2, 0, !dbg !1984
  br i1 %3, label %4, label %1, !dbg !1985, !llvm.loop !1986

4:                                                ; preds = %1
  ret void, !dbg !1988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_sf_lock() local_unnamed_addr #0 !dbg !1989 {
  tail call void @free_sf_lock() #20, !dbg !1990
  ret void, !dbg !1991
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_config(i8 noundef zeroext %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !1992 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1996, metadata !DIExpression()), !dbg !1999
  call void @llvm.dbg.value(metadata i32 0, metadata !1997, metadata !DIExpression()), !dbg !1999
  tail call fastcc void @sfc_pad_config() #20, !dbg !2000
  %2 = tail call i32 @gpt_get_current_time() #20, !dbg !2001
  %3 = tail call %struct.flash_info_t* @customer_flash_register() #18, !dbg !2002
  %4 = icmp eq %struct.flash_info_t* %3, null, !dbg !2004
  br i1 %4, label %6, label %5, !dbg !2005

5:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !2006
  br label %6, !dbg !2008

6:                                                ; preds = %5, %1
  %7 = tail call i32 @flash_check_device() #18, !dbg !2009
  ret i32 0, !dbg !2010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_pad_config() unnamed_addr #5 !dbg !2011 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2013, metadata !DIExpression()), !dbg !2014
  %1 = load volatile i32, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !2015
  call void @llvm.dbg.value(metadata i32 %1, metadata !2013, metadata !DIExpression()), !dbg !2014
  %2 = or i32 %1, 32256, !dbg !2016
  call void @llvm.dbg.value(metadata i32 %2, metadata !2013, metadata !DIExpression()), !dbg !2014
  store volatile i32 %2, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !2017
  ret void, !dbg !2018
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_flash_direct_read(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !2019 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2023, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i8* %1, metadata !2024, metadata !DIExpression()), !dbg !2026
  call void @llvm.dbg.value(metadata i32 %2, metadata !2025, metadata !DIExpression()), !dbg !2026
  tail call void @retrieve_sf_lock() #20, !dbg !2027
  %4 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %0, i32 noundef %2) #18, !dbg !2028
  tail call void @release_sf_lock() #20, !dbg !2029
  ret void, !dbg !2030
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_read(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !2031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2035, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.value(metadata i32 %1, metadata !2036, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.value(metadata i8* %2, metadata !2037, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.value(metadata i32 0, metadata !2038, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.value(metadata i32 %1, metadata !2039, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.value(metadata i32 0, metadata !2040, metadata !DIExpression()), !dbg !2041
  tail call void @retrieve_sf_lock() #20, !dbg !2042
  call void @llvm.dbg.value(metadata i32 %1, metadata !2039, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.value(metadata i32 %0, metadata !2035, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.value(metadata i8* %2, metadata !2037, metadata !DIExpression()), !dbg !2041
  %4 = icmp ugt i32 %1, 127, !dbg !2043
  br i1 %4, label %5, label %19, !dbg !2044

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %1, %3 ]
  %7 = phi i32 [ %16, %14 ], [ %0, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !2039, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.value(metadata i32 %7, metadata !2035, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.value(metadata i8* %8, metadata !2037, metadata !DIExpression()), !dbg !2041
  call void @llvm.dbg.value(metadata i32 128, metadata !2040, metadata !DIExpression()), !dbg !2041
  %9 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !2045
  switch i32 %9, label %14 [
    i32 0, label %10
    i32 1, label %12
  ], !dbg !2048

10:                                               ; preds = %5
  %11 = tail call i32 @flash_read(i8* noundef %8, i32 noundef %7, i32 noundef 128) #18, !dbg !2049
  br label %14, !dbg !2051

12:                                               ; preds = %5
  %13 = tail call i32 @flash_fast_read(i8* noundef %8, i32 noundef %7, i32 noundef 128, i32 noundef 1) #18, !dbg !2052
  br label %14, !dbg !2055

14:                                               ; preds = %5, %12, %10
  %15 = getelementptr inbounds i8, i8* %8, i32 128, !dbg !2056
  call void @llvm.dbg.value(metadata i8* %15, metadata !2037, metadata !DIExpression()), !dbg !2041
  %16 = add i32 %7, 128, !dbg !2057
  call void @llvm.dbg.value(metadata i32 %16, metadata !2035, metadata !DIExpression()), !dbg !2041
  %17 = add i32 %6, -128, !dbg !2058
  call void @llvm.dbg.value(metadata i32 %17, metadata !2039, metadata !DIExpression()), !dbg !2041
  %18 = icmp ugt i32 %17, 127, !dbg !2043
  br i1 %18, label %5, label %19, !dbg !2044, !llvm.loop !2059

19:                                               ; preds = %14, %3
  %20 = phi i8* [ %2, %3 ], [ %15, %14 ]
  %21 = phi i32 [ %0, %3 ], [ %16, %14 ]
  %22 = phi i32 [ %1, %3 ], [ %17, %14 ], !dbg !2041
  %23 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !2061
  switch i32 %23, label %28 [
    i32 0, label %24
    i32 1, label %26
  ], !dbg !2063

24:                                               ; preds = %19
  %25 = tail call i32 @flash_read(i8* noundef %20, i32 noundef %21, i32 noundef %22) #18, !dbg !2064
  br label %28, !dbg !2066

26:                                               ; preds = %19
  %27 = tail call i32 @flash_fast_read(i8* noundef %20, i32 noundef %21, i32 noundef %22, i32 noundef 1) #18, !dbg !2067
  br label %28, !dbg !2070

28:                                               ; preds = %19, %26, %24
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !2071
  tail call void @release_sf_lock() #20, !dbg !2072
  ret i32 0, !dbg !2073
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_write(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !2074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2079, metadata !DIExpression()), !dbg !2083
  call void @llvm.dbg.value(metadata i32 %1, metadata !2080, metadata !DIExpression()), !dbg !2083
  call void @llvm.dbg.value(metadata i8* %2, metadata !2081, metadata !DIExpression()), !dbg !2083
  call void @llvm.dbg.value(metadata i32 0, metadata !2082, metadata !DIExpression()), !dbg !2083
  tail call void @retrieve_sf_lock() #20, !dbg !2084
  %4 = tail call i32 @hal_cache_invalidate_all_cache_lines() #18, !dbg !2085
  %5 = tail call i32 @hal_cache_disable() #18, !dbg !2086
  %6 = tail call i32 @flash_write(i8* noundef %2, i32 noundef %0, i32 noundef %1) #18, !dbg !2087
  call void @llvm.dbg.value(metadata i32 %6, metadata !2082, metadata !DIExpression()), !dbg !2083
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !2088
  %7 = tail call i32 @hal_cache_enable() #18, !dbg !2089
  tail call void @release_sf_lock() #20, !dbg !2090
  ret i32 %6, !dbg !2091
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !2092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2096, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.value(metadata i32 %1, metadata !2097, metadata !DIExpression()), !dbg !2099
  call void @llvm.dbg.value(metadata i32 0, metadata !2098, metadata !DIExpression()), !dbg !2099
  tail call void @retrieve_sf_lock() #20, !dbg !2100
  %3 = tail call i32 @hal_cache_invalidate_all_cache_lines() #18, !dbg !2101
  %4 = tail call i32 @hal_cache_disable() #18, !dbg !2102
  %5 = tail call i32 @flash_write_enable() #18, !dbg !2103
  %6 = tail call i32 @flash_unprotect() #18, !dbg !2104
  switch i32 %1, label %22 [
    i32 0, label %7
    i32 1, label %12
    i32 2, label %17
  ], !dbg !2105

7:                                                ; preds = %2
  %8 = and i32 %0, 4095, !dbg !2106
  %9 = icmp eq i32 %8, 0, !dbg !2110
  br i1 %9, label %10, label %22, !dbg !2111

10:                                               ; preds = %7
  %11 = tail call i32 @flash_erase_page(i32 noundef %0) #18, !dbg !2112
  call void @llvm.dbg.value(metadata i32 %11, metadata !2098, metadata !DIExpression()), !dbg !2099
  br label %22, !dbg !2113

12:                                               ; preds = %2
  %13 = and i32 %0, 32767, !dbg !2114
  %14 = icmp eq i32 %13, 0, !dbg !2118
  br i1 %14, label %15, label %22, !dbg !2119

15:                                               ; preds = %12
  %16 = tail call i32 @flash_erase_sector_32k(i32 noundef %0) #18, !dbg !2120
  call void @llvm.dbg.value(metadata i32 %16, metadata !2098, metadata !DIExpression()), !dbg !2099
  br label %22, !dbg !2121

17:                                               ; preds = %2
  %18 = and i32 %0, 65535, !dbg !2122
  %19 = icmp eq i32 %18, 0, !dbg !2126
  br i1 %19, label %20, label %22, !dbg !2127

20:                                               ; preds = %17
  %21 = tail call i32 @flash_erase_sector(i32 noundef %0) #18, !dbg !2128
  call void @llvm.dbg.value(metadata i32 %21, metadata !2098, metadata !DIExpression()), !dbg !2099
  br label %22, !dbg !2129

22:                                               ; preds = %10, %20, %15, %2, %17, %12, %7
  %23 = phi i32 [ -3, %7 ], [ -3, %12 ], [ -3, %17 ], [ %11, %10 ], [ %16, %15 ], [ %21, %20 ], [ 0, %2 ], !dbg !2099
  %24 = tail call i32 @hal_cache_enable() #18, !dbg !2099
  tail call void @release_sf_lock() #20, !dbg !2099
  ret i32 %23, !dbg !2130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ramTEXT" !dbg !2131 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #17, !dbg !2135
  call void @llvm.dbg.value(metadata i8 0, metadata !2133, metadata !DIExpression()), !dbg !2136
  store i8 0, i8* %1, align 1, !dbg !2137
  call void @llvm.dbg.value(metadata i32 0, metadata !2134, metadata !DIExpression()), !dbg !2136
  %2 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !2138
  call void @llvm.dbg.value(metadata i32 %2, metadata !2134, metadata !DIExpression()), !dbg !2136
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2139, !range !2141
  %4 = icmp ne i8 %3, 0, !dbg !2139
  %5 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %4, i1 true, i1 %6, !dbg !2142
  br i1 %7, label %27, label %8, !dbg !2142

8:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i8* %1, metadata !2133, metadata !DIExpression(DW_OP_deref)), !dbg !2136
  %9 = call i32 @flash_read_sr(i8* noundef nonnull %1) #18, !dbg !2143
  %10 = icmp slt i32 %9, 0, !dbg !2146
  br i1 %10, label %11, label %12, !dbg !2147

11:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 333, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2148
  unreachable, !dbg !2148

12:                                               ; preds = %8
  %13 = load i8, i8* %1, align 1, !dbg !2150
  call void @llvm.dbg.value(metadata i8 %13, metadata !2133, metadata !DIExpression()), !dbg !2136
  %14 = and i8 %13, 1, !dbg !2152
  %15 = icmp eq i8 %14, 0, !dbg !2153
  br i1 %15, label %26, label %16, !dbg !2154

16:                                               ; preds = %12
  call void @flash_suspend_Winbond() #18, !dbg !2155
  br label %17, !dbg !2157

17:                                               ; preds = %21, %16
  call void @llvm.dbg.value(metadata i8* %1, metadata !2133, metadata !DIExpression(DW_OP_deref)), !dbg !2136
  %18 = call i32 @flash_read_sr(i8* noundef nonnull %1) #18, !dbg !2158
  %19 = icmp slt i32 %18, 0, !dbg !2161
  br i1 %19, label %20, label %21, !dbg !2162

20:                                               ; preds = %17
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 344, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2163
  unreachable, !dbg !2163

21:                                               ; preds = %17
  %22 = load i8, i8* %1, align 1, !dbg !2165
  call void @llvm.dbg.value(metadata i8 %22, metadata !2133, metadata !DIExpression()), !dbg !2136
  %23 = and i8 %22, 1, !dbg !2167
  %24 = icmp eq i8 %23, 0, !dbg !2168
  br i1 %24, label %25, label %17, !dbg !2169, !llvm.loop !2170

25:                                               ; preds = %21
  call void @SF_DAL_FLAG_SUS_SET() #20, !dbg !2172
  br label %27, !dbg !2173

26:                                               ; preds = %12
  call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !2174
  br label %27

27:                                               ; preds = %25, %26, %0
  call void @restore_interrupt_mask(i32 noundef %2) #18, !dbg !2176
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #17, !dbg !2177
  ret void, !dbg !2177
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !2178 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2182, metadata !DIExpression()), !dbg !2193
  call void @llvm.dbg.value(metadata i32 %1, metadata !2183, metadata !DIExpression()), !dbg !2193
  call void @llvm.dbg.value(metadata i32 0, metadata !2185, metadata !DIExpression()), !dbg !2193
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17, !dbg !2194
  call void @llvm.dbg.value(metadata i8 0, metadata !2188, metadata !DIExpression()), !dbg !2193
  store i8 0, i8* %3, align 1, !dbg !2195
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17, !dbg !2196
  call void @llvm.dbg.value(metadata i8 0, metadata !2189, metadata !DIExpression()), !dbg !2193
  store i8 0, i8* %4, align 1, !dbg !2197
  call void @llvm.dbg.value(metadata i8* %3, metadata !2188, metadata !DIExpression(DW_OP_deref)), !dbg !2193
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %3) #18, !dbg !2198
  %6 = icmp slt i32 %5, 0, !dbg !2200
  br i1 %6, label %7, label %8, !dbg !2201

7:                                                ; preds = %2
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 368, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2202
  unreachable, !dbg !2202

8:                                                ; preds = %2
  %9 = load i8, i8* %3, align 1, !dbg !2204
  call void @llvm.dbg.value(metadata i8 %9, metadata !2188, metadata !DIExpression()), !dbg !2193
  call void @llvm.dbg.value(metadata i8 %9, metadata !2186, metadata !DIExpression()), !dbg !2193
  call void @llvm.dbg.value(metadata i8* %4, metadata !2189, metadata !DIExpression(DW_OP_deref)), !dbg !2193
  %10 = call i32 @flash_read_sr2(i8* noundef nonnull %4) #18, !dbg !2206
  %11 = icmp slt i32 %10, 0, !dbg !2208
  br i1 %11, label %12, label %13, !dbg !2209

12:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 374, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2210
  unreachable, !dbg !2210

13:                                               ; preds = %8
  %14 = load i8, i8* %4, align 1, !dbg !2212
  call void @llvm.dbg.value(metadata i8 %14, metadata !2189, metadata !DIExpression()), !dbg !2193
  call void @llvm.dbg.value(metadata i8 %14, metadata !2187, metadata !DIExpression()), !dbg !2193
  %15 = call i32 @save_and_set_interrupt_mask() #18, !dbg !2214
  call void @llvm.dbg.value(metadata i32 %15, metadata !2185, metadata !DIExpression()), !dbg !2193
  %16 = and i8 %9, 1, !dbg !2215
  %17 = icmp eq i8 %16, 0, !dbg !2216
  br i1 %17, label %18, label %46, !dbg !2217

18:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8 12, metadata !2190, metadata !DIExpression()), !dbg !2218
  %19 = load i32, i32* @support_flash_id, align 4, !dbg !2219
  switch i32 %19, label %28 [
    i32 239, label %20
    i32 200, label %20
    i32 255, label %25
    i32 32, label %24
  ], !dbg !2221

20:                                               ; preds = %18, %18
  call void @llvm.dbg.value(metadata i8 -128, metadata !2190, metadata !DIExpression()), !dbg !2218
  %21 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !2222
  %22 = icmp eq i32 %21, 49, !dbg !2225
  %23 = select i1 %22, i32 132, i32 128, !dbg !2226
  br label %28, !dbg !2226

24:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i8 66, metadata !2190, metadata !DIExpression()), !dbg !2218
  br label %28, !dbg !2227

25:                                               ; preds = %18
  %26 = call zeroext i8 @customer_flash_suspend_bit() #18, !dbg !2231
  call void @llvm.dbg.value(metadata i8 %26, metadata !2190, metadata !DIExpression()), !dbg !2218
  %27 = zext i8 %26 to i32, !dbg !2234
  br label %28, !dbg !2234

28:                                               ; preds = %20, %18, %25, %24
  %29 = phi i32 [ 66, %24 ], [ %27, %25 ], [ %23, %20 ], [ 12, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !2190, metadata !DIExpression()), !dbg !2218
  %30 = zext i8 %14 to i32, !dbg !2235
  %31 = and i32 %29, %30, !dbg !2237
  %32 = icmp eq i32 %31, 0, !dbg !2238
  br i1 %32, label %33, label %38, !dbg !2239

33:                                               ; preds = %28
  %34 = icmp ne i32 %29, 0, !dbg !2240
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %34, i1 true, i1 %36, !dbg !2241
  br i1 %37, label %43, label %38, !dbg !2241

38:                                               ; preds = %33, %28
  %39 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !2242, !range !2141
  %40 = icmp eq i8 %39, 0, !dbg !2242
  br i1 %40, label %41, label %42, !dbg !2242

41:                                               ; preds = %38
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 407, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #19, !dbg !2242
  unreachable, !dbg !2242

42:                                               ; preds = %38
  call void @flash_resume_Winbond() #18, !dbg !2244
  call void @llvm.dbg.value(metadata i32 -121, metadata !2184, metadata !DIExpression()), !dbg !2193
  br label %44, !dbg !2245

43:                                               ; preds = %33
  call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !2246
  call void @llvm.dbg.value(metadata i32 0, metadata !2184, metadata !DIExpression()), !dbg !2193
  br label %44

44:                                               ; preds = %43, %42
  %45 = phi i32 [ 0, %43 ], [ -121, %42 ]
  call void @SF_DAL_FLAG_SUS_CLR() #20, !dbg !2248
  br label %46, !dbg !2249

46:                                               ; preds = %44, %13
  %47 = phi i32 [ -121, %13 ], [ %45, %44 ], !dbg !2250
  call void @llvm.dbg.value(metadata i32 %47, metadata !2184, metadata !DIExpression()), !dbg !2193
  call void @restore_interrupt_mask(i32 noundef %15) #18, !dbg !2249
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17, !dbg !2251
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17, !dbg !2251
  ret i32 %47, !dbg !2252
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readnone %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !2253 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2257, metadata !DIExpression()), !dbg !2265
  call void @llvm.dbg.value(metadata i32 %1, metadata !2258, metadata !DIExpression()), !dbg !2265
  call void @llvm.dbg.value(metadata i8 %2, metadata !2259, metadata !DIExpression()), !dbg !2265
  call void @llvm.dbg.value(metadata i32 0, metadata !2261, metadata !DIExpression()), !dbg !2265
  call void @llvm.dbg.value(metadata i16 0, metadata !2263, metadata !DIExpression()), !dbg !2265
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #17, !dbg !2266
  call void @llvm.dbg.value(metadata i8 0, metadata !2264, metadata !DIExpression()), !dbg !2265
  store i8 0, i8* %4, align 1, !dbg !2267
  call void @llvm.dbg.value(metadata i8* %4, metadata !2264, metadata !DIExpression(DW_OP_deref)), !dbg !2265
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %4) #18, !dbg !2268
  %6 = icmp slt i32 %5, 0, !dbg !2270
  br i1 %6, label %7, label %8, !dbg !2271

7:                                                ; preds = %3
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 449, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #19, !dbg !2272
  unreachable, !dbg !2272

8:                                                ; preds = %3
  %9 = load i8, i8* %4, align 1, !dbg !2274
  call void @llvm.dbg.value(metadata i8 %9, metadata !2264, metadata !DIExpression()), !dbg !2265
  call void @llvm.dbg.value(metadata i8 %9, metadata !2263, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2265
  %10 = call i32 @save_and_set_interrupt_mask() #18, !dbg !2276
  call void @llvm.dbg.value(metadata i32 %10, metadata !2260, metadata !DIExpression()), !dbg !2265
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !2277, !range !2141
  %12 = icmp eq i8 %11, 0, !dbg !2277
  br i1 %12, label %18, label %13, !dbg !2279

13:                                               ; preds = %8
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !2280, !range !2141
  %15 = icmp eq i8 %14, 0, !dbg !2280
  br i1 %15, label %16, label %17, !dbg !2280

16:                                               ; preds = %13
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #19, !dbg !2280
  unreachable, !dbg !2280

17:                                               ; preds = %13
  call void @flash_resume_Winbond() #18, !dbg !2282
  call void @SF_DAL_FLAG_SUS_CLR() #20, !dbg !2283
  call void @restore_interrupt_mask(i32 noundef %10) #18, !dbg !2284
  br label %26, !dbg !2285

18:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 %9, metadata !2263, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2265
  %19 = and i8 %9, 1, !dbg !2286
  %20 = icmp eq i8 %19, 0, !dbg !2288
  br i1 %20, label %21, label %26, !dbg !2289

21:                                               ; preds = %18
  call void @SF_DAL_FLAG_BUSY_CLR() #20, !dbg !2290
  %22 = inttoptr i32 %1 to i8*, !dbg !2292
  %23 = load volatile i8, i8* %22, align 1, !dbg !2293
  call void @llvm.dbg.value(metadata i8 %23, metadata !2262, metadata !DIExpression()), !dbg !2265
  %24 = icmp eq i8 %23, %2, !dbg !2294
  %25 = select i1 %24, i32 1, i32 -1
  br label %26

26:                                               ; preds = %21, %18, %17
  %27 = phi i32 [ 0, %17 ], [ 0, %18 ], [ %25, %21 ], !dbg !2265
  call void @llvm.dbg.value(metadata i32 %27, metadata !2261, metadata !DIExpression()), !dbg !2265
  call void @restore_interrupt_mask(i32 noundef %10) #18, !dbg !2296
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #17, !dbg !2297
  ret i32 %27, !dbg !2298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #0 !dbg !2299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2303, metadata !DIExpression()), !dbg !2306
  call void @llvm.dbg.value(metadata i32 %1, metadata !2304, metadata !DIExpression()), !dbg !2306
  call void @llvm.dbg.value(metadata i1 %2, metadata !2305, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2306
  %4 = icmp ugt i32 %0, 1, !dbg !2307
  br i1 %4, label %5, label %8, !dbg !2309

5:                                                ; preds = %3
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 75) #18, !dbg !2310
  br label %7, !dbg !2310

7:                                                ; preds = %5, %7
  br label %7, !dbg !2310, !llvm.loop !2312

8:                                                ; preds = %3
  switch i32 %0, label %21 [
    i32 0, label %9
    i32 1, label %15
  ], !dbg !2313

9:                                                ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824300 to i32*), align 4, !dbg !2314
  %10 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2317
  br i1 %2, label %11, label %13, !dbg !2319

11:                                               ; preds = %9
  %12 = or i32 %10, 2, !dbg !2320
  store volatile i32 %12, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2320
  br label %21, !dbg !2322

13:                                               ; preds = %9
  %14 = and i32 %10, -3, !dbg !2323
  store volatile i32 %14, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2323
  br label %21

15:                                               ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824284 to i32*), align 4, !dbg !2325
  %16 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2328
  br i1 %2, label %17, label %19, !dbg !2330

17:                                               ; preds = %15
  %18 = or i32 %16, 2, !dbg !2331
  store volatile i32 %18, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2331
  br label %21, !dbg !2333

19:                                               ; preds = %15
  %20 = and i32 %16, -3, !dbg !2334
  store volatile i32 %20, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2334
  br label %21

21:                                               ; preds = %8, %19, %17, %11, %13
  ret void, !dbg !2336
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !2337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2341, metadata !DIExpression()), !dbg !2342
  switch i32 %0, label %2 [
    i32 0, label %5
    i32 1, label %9
    i32 4, label %13
  ], !dbg !2343

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 96) #18, !dbg !2344
  br label %4, !dbg !2344

4:                                                ; preds = %2, %4
  br label %4, !dbg !2344, !llvm.loop !2347

5:                                                ; preds = %1
  %6 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2348
  %7 = or i32 %6, 1, !dbg !2348
  store volatile i32 %7, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2348
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #18, !dbg !2351
  br label %16, !dbg !2352

9:                                                ; preds = %1
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2353
  %11 = or i32 %10, 1, !dbg !2353
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2353
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #18, !dbg !2356
  br label %16, !dbg !2357

13:                                               ; preds = %1
  %14 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2358
  %15 = or i32 %14, 1, !dbg !2358
  store volatile i32 %15, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2358
  br label %16, !dbg !2361

16:                                               ; preds = %9, %13, %5
  ret void, !dbg !2362
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPT_Stop(i32 noundef %0) local_unnamed_addr #5 !dbg !2363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2365, metadata !DIExpression()), !dbg !2366
  switch i32 %0, label %18 [
    i32 0, label %2
    i32 1, label %7
    i32 2, label %12
    i32 4, label %15
  ], !dbg !2367

2:                                                ; preds = %1
  %3 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2368
  %4 = and i32 %3, -2, !dbg !2368
  store volatile i32 %4, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2368
  %5 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2371
  %6 = and i32 %5, -2, !dbg !2371
  store volatile i32 %6, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2371
  store volatile i32 1, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2372
  br label %18, !dbg !2373

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2374
  %9 = and i32 %8, -3, !dbg !2374
  store volatile i32 %9, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2374
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2377
  %11 = and i32 %10, -2, !dbg !2377
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2377
  store volatile i32 2, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2378
  br label %18, !dbg !2379

12:                                               ; preds = %1
  %13 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2380
  %14 = and i32 %13, -2, !dbg !2380
  store volatile i32 %14, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2380
  br label %18, !dbg !2383

15:                                               ; preds = %1
  %16 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2384
  %17 = and i32 %16, -2, !dbg !2384
  store volatile i32 %17, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2384
  br label %18, !dbg !2387

18:                                               ; preds = %1, %7, %15, %12, %2
  ret void, !dbg !2388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_INT_Handler(i32 %0) #0 !dbg !2389 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2391, metadata !DIExpression()), !dbg !2393
  call void @llvm.dbg.value(metadata i32 undef, metadata !2391, metadata !DIExpression()), !dbg !2393
  %2 = load volatile i32, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2394
  %3 = and i32 %2, 65535, !dbg !2395
  call void @llvm.dbg.value(metadata i32 %2, metadata !2392, metadata !DIExpression()), !dbg !2393
  store volatile i32 %3, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !2396
  %4 = and i32 %2, 1, !dbg !2397
  %5 = icmp eq i32 %4, 0, !dbg !2397
  br i1 %5, label %6, label %9, !dbg !2399

6:                                                ; preds = %1
  %7 = and i32 %2, 2, !dbg !2400
  %8 = icmp eq i32 %7, 0, !dbg !2400
  br i1 %8, label %13, label %9, !dbg !2402

9:                                                ; preds = %6, %1
  %10 = phi i32 [ 0, %1 ], [ 1, %6 ]
  %11 = phi void ()** [ @GPTTimer.0, %1 ], [ @GPTTimer.1, %6 ]
  tail call void @clear_TMR_INT_status_bit(i32 noundef %10) #18, !dbg !2403
  %12 = load void ()*, void ()** %11, align 4, !dbg !2403
  tail call void %12() #18, !dbg !2403
  br label %13, !dbg !2404

13:                                               ; preds = %9, %6
  ret void, !dbg !2404
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_init(i32 noundef %0, i32 noundef %1, void ()* noundef %2) local_unnamed_addr #0 !dbg !2405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2409, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata i32 %1, metadata !2410, metadata !DIExpression()), !dbg !2412
  call void @llvm.dbg.value(metadata void ()* %2, metadata !2411, metadata !DIExpression()), !dbg !2412
  switch i32 %0, label %4 [
    i32 4, label %7
    i32 2, label %7
    i32 1, label %7
    i32 0, label %7
  ], !dbg !2413

4:                                                ; preds = %3
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 149) #18, !dbg !2414
  br label %6, !dbg !2414

6:                                                ; preds = %4, %6
  br label %6, !dbg !2414, !llvm.loop !2417

7:                                                ; preds = %3, %3, %3, %3
  %8 = icmp ult i32 %0, 2, !dbg !2418
  br i1 %8, label %9, label %13, !dbg !2419

9:                                                ; preds = %7
  %10 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 24, void (i32)* noundef nonnull @GPT_INT_Handler) #18, !dbg !2421
  %11 = tail call i32 @hal_nvic_set_priority(i32 noundef 24, i32 noundef 5) #18, !dbg !2423
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #18, !dbg !2424
  br label %13, !dbg !2425

13:                                               ; preds = %7, %9
  switch i32 %0, label %36 [
    i32 0, label %14
    i32 1, label %20
    i32 2, label %26
    i32 4, label %31
  ], !dbg !2426

14:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.0, align 4, !dbg !2427
  %15 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2430
  %16 = or i32 %15, 1, !dbg !2430
  store volatile i32 %16, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2430
  %17 = shl i32 %1, 2, !dbg !2431
  %18 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2432
  %19 = or i32 %18, %17, !dbg !2432
  store volatile i32 %19, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !2432
  br label %36, !dbg !2433

20:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.1, align 4, !dbg !2434
  %21 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2437
  %22 = or i32 %21, 2, !dbg !2437
  store volatile i32 %22, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !2437
  %23 = shl i32 %1, 2, !dbg !2438
  %24 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2439
  %25 = or i32 %24, %23, !dbg !2439
  store volatile i32 %25, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !2439
  br label %36, !dbg !2440

26:                                               ; preds = %13
  %27 = shl i32 %1, 1, !dbg !2441
  %28 = or i32 %27, 1, !dbg !2444
  %29 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2445
  %30 = or i32 %29, %28, !dbg !2445
  store volatile i32 %30, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !2445
  br label %36, !dbg !2446

31:                                               ; preds = %13
  %32 = shl i32 %1, 1, !dbg !2447
  %33 = or i32 %32, 1, !dbg !2450
  %34 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2451
  %35 = or i32 %34, %33, !dbg !2451
  store volatile i32 %35, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !2451
  store volatile i32 0, i32* inttoptr (i32 -2096824220 to i32*), align 4, !dbg !2452
  br label %36, !dbg !2453

36:                                               ; preds = %13, %20, %31, %26, %14
  ret void, !dbg !2454
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GPT_return_current_count(i32 noundef %0) local_unnamed_addr #0 !dbg !2455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2459, metadata !DIExpression()), !dbg !2461
  switch i32 %0, label %2 [
    i32 0, label %8
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
  ], !dbg !2462

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 177) #18, !dbg !2463
  br label %4, !dbg !2463

4:                                                ; preds = %4, %2
  br label %4, !dbg !2463, !llvm.loop !2466

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !2460, metadata !DIExpression()), !dbg !2461
  br label %8, !dbg !2467

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !2460, metadata !DIExpression()), !dbg !2461
  br label %8, !dbg !2471

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !2460, metadata !DIExpression()), !dbg !2461
  br label %8, !dbg !2474

8:                                                ; preds = %1, %5, %7, %6
  %9 = phi i32* [ inttoptr (i32 -2096824252 to i32*), %5 ], [ inttoptr (i32 -2096824268 to i32*), %6 ], [ inttoptr (i32 -2096824216 to i32*), %7 ], [ inttoptr (i32 -2096824256 to i32*), %1 ]
  %10 = load volatile i32, i32* %9, align 4, !dbg !2477
  call void @llvm.dbg.value(metadata i32 %10, metadata !2460, metadata !DIExpression()), !dbg !2461
  ret i32 %10, !dbg !2478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT2Init() local_unnamed_addr #0 !dbg !2479 {
  tail call void @GPT_init(i32 noundef 2, i32 noundef 1, void ()* noundef null) #20, !dbg !2480
  ret void, !dbg !2481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT4Init() local_unnamed_addr #0 !dbg !2482 {
  tail call void @GPT_init(i32 noundef 4, i32 noundef 1, void ()* noundef null) #20, !dbg !2483
  ret void, !dbg !2484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_init() local_unnamed_addr #7 !dbg !2485 {
  ret i32 0, !dbg !2489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_deinit() local_unnamed_addr #7 !dbg !2490 {
  ret i32 0, !dbg !2491
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_trng_get_generated_random_number(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !2492 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !2497, metadata !DIExpression()), !dbg !2506
  call void @llvm.dbg.value(metadata i16 0, metadata !2498, metadata !DIExpression()), !dbg !2506
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !2500, metadata !DIExpression()), !dbg !2507
  %2 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2508
  %3 = or i32 %2, 1, !dbg !2508
  store volatile i32 %3, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2508
  call void @llvm.dbg.value(metadata i16 0, metadata !2498, metadata !DIExpression()), !dbg !2506
  br label %4, !dbg !2509

4:                                                ; preds = %1, %9
  %5 = phi i16 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i16 %5, metadata !2498, metadata !DIExpression()), !dbg !2506
  %6 = load volatile i32, i32* inttoptr (i32 -2096107504 to i32*), align 16, !dbg !2510
  %7 = and i32 %6, 1, !dbg !2510
  %8 = icmp eq i32 %7, 0, !dbg !2513
  br i1 %8, label %9, label %12, !dbg !2514

9:                                                ; preds = %4
  tail call void @delay_time(i32 noundef 32) #18, !dbg !2515
  %10 = add nuw nsw i16 %5, 1, !dbg !2516
  call void @llvm.dbg.value(metadata i16 %10, metadata !2498, metadata !DIExpression()), !dbg !2506
  %11 = icmp ult i16 %5, 99, !dbg !2517
  br i1 %11, label %4, label %12, !dbg !2509, !llvm.loop !2518

12:                                               ; preds = %4, %9
  %13 = phi i16 [ %5, %4 ], [ 100, %9 ], !dbg !2506
  %14 = load volatile i32, i32* inttoptr (i32 -2096107512 to i32*), align 8, !dbg !2520
  store i32 %14, i32* %0, align 4, !dbg !2521
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107500 to i32*), metadata !2502, metadata !DIExpression()), !dbg !2522
  %15 = load volatile i32, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !2523
  store volatile i32 1, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !2523
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !2504, metadata !DIExpression()), !dbg !2524
  %16 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2525
  %17 = and i32 %16, -2, !dbg !2525
  store volatile i32 %17, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !2525
  %18 = icmp ugt i16 %13, 99, !dbg !2526
  br i1 %18, label %19, label %20, !dbg !2528

19:                                               ; preds = %12
  store i32 0, i32* %0, align 4, !dbg !2529
  br label %20, !dbg !2531

20:                                               ; preds = %12, %19
  %21 = phi i32 [ -2, %19 ], [ 0, %12 ], !dbg !2532
  ret i32 %21, !dbg !2533
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NVIC_SetupVectorTable(i32 noundef %0) local_unnamed_addr #0 !dbg !2534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2538, metadata !DIExpression()), !dbg !2539
  store volatile i32 %0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !2540
  tail call void asm sideeffect "dsb", ""() #17, !dbg !2541, !srcloc !2542
  tail call void asm sideeffect "isb", ""() #17, !dbg !2543, !srcloc !2544
  ret void, !dbg !2545
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @NVIC_SWInt(i32 noundef %0) local_unnamed_addr #5 !dbg !2546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2550, metadata !DIExpression()), !dbg !2551
  store volatile i32 %0, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !2552
  ret void, !dbg !2553
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".ramTEXT" !dbg !2554 {
  %1 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #17, !dbg !2557, !srcloc !2564
  call void @llvm.dbg.value(metadata i32 %1, metadata !2561, metadata !DIExpression()) #17, !dbg !2565
  call void @llvm.dbg.value(metadata i32 %1, metadata !2556, metadata !DIExpression()), !dbg !2566
  tail call void asm sideeffect "cpsid i", "~{memory}"() #17, !dbg !2567, !srcloc !2570
  ret i32 %1, !dbg !2571
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !2572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2574, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.value(metadata i32 %0, metadata !2576, metadata !DIExpression()) #17, !dbg !2579
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %0) #17, !dbg !2582, !srcloc !2583
  ret void, !dbg !2584
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GPT_return_current_count() local_unnamed_addr #8 section ".ramTEXT" !dbg !2585 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096824268 to i32*), align 4, !dbg !2590
  call void @llvm.dbg.value(metadata i32 %1, metadata !2589, metadata !DIExpression()), !dbg !2591
  ret i32 %1, !dbg !2592
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_get_systime() local_unnamed_addr #8 section ".ramTEXT" !dbg !2593 {
  %1 = tail call i32 @sfc_GPT_return_current_count() #20, !dbg !2594
  ret i32 %1, !dbg !2595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_time(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2598, metadata !DIExpression()), !dbg !2601
  %2 = tail call i32 @sfc_get_systime() #20, !dbg !2602
  %3 = add i32 %2, %0, !dbg !2603
  %4 = xor i32 %3, -1, !dbg !2604
  call void @llvm.dbg.value(metadata i32 %3, metadata !2599, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2601
  %5 = tail call i32 @sfc_get_systime() #20, !dbg !2605
  call void @llvm.dbg.value(metadata i32 %5, metadata !2600, metadata !DIExpression()), !dbg !2601
  %6 = add i32 %5, %4, !dbg !2606
  %7 = icmp slt i32 %6, 0, !dbg !2606
  br i1 %7, label %8, label %12, !dbg !2607

8:                                                ; preds = %1, %8
  %9 = tail call i32 @sfc_get_systime() #20, !dbg !2608
  call void @llvm.dbg.value(metadata i32 %9, metadata !2600, metadata !DIExpression()), !dbg !2601
  %10 = add i32 %9, %4, !dbg !2606
  %11 = icmp slt i32 %10, 0, !dbg !2606
  br i1 %11, label %8, label %12, !dbg !2607, !llvm.loop !2610

12:                                               ; preds = %8, %1
  ret void, !dbg !2612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_ms(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2615, metadata !DIExpression()), !dbg !2616
  %2 = shl i32 %0, 5, !dbg !2617
  tail call void @sfc_delay_time(i32 noundef %2) #20, !dbg !2618
  ret void, !dbg !2619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfc_getMaxGPRamSize() local_unnamed_addr #7 section ".ramTEXT" !dbg !2620 {
  ret i32 128, !dbg !2623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_Init(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2626, metadata !DIExpression()), !dbg !2628
  store i32 0, i32* @g_sfc_security_enable, align 4, !dbg !2629
  store volatile i32 65536, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2630
  store volatile i32 185300880, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2631
  store volatile i32 -1296039920, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2632
  store volatile i32 0, i32* inttoptr (i32 -2096693236 to i32*), align 4, !dbg !2633
  store volatile i32 0, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !2634
  store volatile i32 0, i32* inttoptr (i32 -2096693220 to i32*), align 4, !dbg !2635
  %2 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2636
  call void @llvm.dbg.value(metadata i32 %2, metadata !2627, metadata !DIExpression()), !dbg !2628
  %3 = and i32 %2, -4194305, !dbg !2637
  call void @llvm.dbg.value(metadata i32 %3, metadata !2627, metadata !DIExpression()), !dbg !2628
  store volatile i32 %3, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2638
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !2639
  %4 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2640
  call void @llvm.dbg.value(metadata i32 %4, metadata !2627, metadata !DIExpression()), !dbg !2628
  %5 = or i32 %4, 4194304, !dbg !2641
  call void @llvm.dbg.value(metadata i32 %5, metadata !2627, metadata !DIExpression()), !dbg !2628
  store volatile i32 %5, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2642
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !2643
  %6 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2644
  call void @llvm.dbg.value(metadata i32 %6, metadata !2627, metadata !DIExpression()), !dbg !2628
  %7 = and i32 %6, -4194305, !dbg !2645
  call void @llvm.dbg.value(metadata i32 %7, metadata !2627, metadata !DIExpression()), !dbg !2628
  store volatile i32 %7, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2646
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !2647
  %8 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2648
  call void @llvm.dbg.value(metadata i32 %8, metadata !2627, metadata !DIExpression()), !dbg !2628
  %9 = or i32 %8, 4194304, !dbg !2649
  call void @llvm.dbg.value(metadata i32 %9, metadata !2627, metadata !DIExpression()), !dbg !2628
  store volatile i32 %9, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2650
  tail call void @sfc_delay_ms(i32 noundef 1) #20, !dbg !2651
  %10 = icmp eq i32 %0, 0, !dbg !2652
  br i1 %10, label %12, label %11, !dbg !2654

11:                                               ; preds = %1
  store i32 1, i32* @g_sfc_security_enable, align 4, !dbg !2655
  store volatile i32 268435456, i32* inttoptr (i32 -2096660480 to i32*), align 32768, !dbg !2657
  store volatile i32 268435456, i32* inttoptr (i32 -2096660476 to i32*), align 4, !dbg !2658
  store volatile i32 3, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2659
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2660
  store volatile i32 135, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2661
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2662
  store volatile i32 69632, i32* inttoptr (i32 -2096660460 to i32*), align 4, !dbg !2663
  br label %12, !dbg !2664

12:                                               ; preds = %11, %1
  ret void, !dbg !2665
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GetDirectMode() local_unnamed_addr #8 section ".ramTEXT" !dbg !2666 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2670
  call void @llvm.dbg.value(metadata i32 %1, metadata !2668, metadata !DIExpression(DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !2671
  %2 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2672
  %3 = lshr i32 %2, 4, !dbg !2673
  %4 = and i32 %3, 7, !dbg !2673
  call void @llvm.dbg.value(metadata i32 %4, metadata !2669, metadata !DIExpression()), !dbg !2671
  %5 = icmp ne i32 %4, 7, !dbg !2674
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %5, i1 %7, i1 false, !dbg !2676
  call void @llvm.dbg.value(metadata i32 %6, metadata !2668, metadata !DIExpression()), !dbg !2671
  %9 = icmp ult i32 %4, 2, !dbg !2676
  %10 = zext i1 %9 to i32, !dbg !2676
  %11 = select i1 %8, i32 %10, i32 3, !dbg !2676
  ret i32 %11, !dbg !2677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_direct_read_setup(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 section ".ramTEXT" !dbg !2678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2682, metadata !DIExpression()), !dbg !2685
  call void @llvm.dbg.value(metadata i32 %1, metadata !2683, metadata !DIExpression()), !dbg !2685
  call void @llvm.dbg.value(metadata i32 0, metadata !2684, metadata !DIExpression()), !dbg !2685
  %3 = add i32 %1, -1, !dbg !2686
  %4 = icmp ult i32 %3, 3, !dbg !2686
  br i1 %4, label %5, label %8, !dbg !2686

5:                                                ; preds = %2
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.sfc_direct_read_setup, i32 0, i32 %3, !dbg !2686
  %7 = load i32, i32* %6, align 4, !dbg !2686
  br label %8, !dbg !2686

8:                                                ; preds = %5, %2
  %9 = phi i32 [ 0, %2 ], [ %7, %5 ], !dbg !2685
  call void @llvm.dbg.value(metadata i32 %9, metadata !2684, metadata !DIExpression()), !dbg !2685
  %10 = or i32 %9, %0, !dbg !2687
  call void @llvm.dbg.value(metadata i32 %10, metadata !2684, metadata !DIExpression()), !dbg !2685
  store volatile i32 %10, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2688
  ret void, !dbg !2689
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sfc_Command_List(i8* noundef readonly %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !2690 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2694, metadata !DIExpression()), !dbg !2698
  call void @llvm.dbg.value(metadata i32 0, metadata !2695, metadata !DIExpression()), !dbg !2698
  call void @llvm.dbg.value(metadata i32 0, metadata !2697, metadata !DIExpression()), !dbg !2698
  %2 = icmp eq i8* %0, null, !dbg !2699
  br i1 %2, label %25, label %3, !dbg !2701

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2702
  call void @llvm.dbg.value(metadata i32 %4, metadata !2696, metadata !DIExpression()), !dbg !2698
  br label %5, !dbg !2703

5:                                                ; preds = %12, %3
  %6 = phi i32 [ 0, %3 ], [ %23, %12 ], !dbg !2698
  %7 = phi i32 [ 0, %3 ], [ %13, %12 ], !dbg !2698
  call void @llvm.dbg.value(metadata i32 %7, metadata !2697, metadata !DIExpression()), !dbg !2698
  call void @llvm.dbg.value(metadata i32 %6, metadata !2695, metadata !DIExpression()), !dbg !2698
  %8 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !2704
  %9 = load i8, i8* %8, align 1, !dbg !2704
  switch i8 %9, label %11 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %10
  ], !dbg !2706

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 1, metadata !2697, metadata !DIExpression()), !dbg !2698
  br label %12, !dbg !2707

11:                                               ; preds = %5
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2709
  br label %25, !dbg !2710

12:                                               ; preds = %5, %5, %10
  %13 = phi i32 [ 1, %10 ], [ %7, %5 ], [ %7, %5 ], !dbg !2698
  call void @llvm.dbg.value(metadata i32 %13, metadata !2697, metadata !DIExpression()), !dbg !2698
  %14 = add i32 %6, 2, !dbg !2711
  %15 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !2712
  %16 = add i32 %6, 1, !dbg !2713
  %17 = getelementptr inbounds i8, i8* %0, i32 %16, !dbg !2714
  %18 = load i8, i8* %17, align 1, !dbg !2714
  %19 = zext i8 %18 to i32, !dbg !2714
  %20 = tail call i32 @sfc_transfer(i8* noundef nonnull %15, i32 noundef %19, i8* noundef null, i32 noundef 0, i32 noundef %13) #20, !dbg !2715
  %21 = load i8, i8* %17, align 1, !dbg !2716
  %22 = zext i8 %21 to i32, !dbg !2716
  %23 = add i32 %14, %22, !dbg !2717
  call void @llvm.dbg.value(metadata i32 %23, metadata !2695, metadata !DIExpression()), !dbg !2698
  %24 = tail call i32 @flash_wait_ready(i32 noundef 1) #18, !dbg !2718
  br label %5, !dbg !2703, !llvm.loop !2719

25:                                               ; preds = %1, %11
  ret void, !dbg !2721
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_transfer(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !2722 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2727, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 %1, metadata !2728, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i8* %2, metadata !2729, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 %3, metadata !2730, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 %4, metadata !2731, metadata !DIExpression()), !dbg !2738
  %7 = bitcast i32* %6 to i8*, !dbg !2739
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !2739
  %8 = add i32 %3, %1, !dbg !2740
  %9 = icmp ugt i32 %8, 160, !dbg !2742
  br i1 %9, label %59, label %10, !dbg !2743

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !2735, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 0, metadata !2733, metadata !DIExpression()), !dbg !2738
  %11 = icmp eq i32 %1, 0, !dbg !2744
  br i1 %11, label %41, label %12, !dbg !2747

12:                                               ; preds = %10, %38
  %13 = phi i8* [ %39, %38 ], [ inttoptr (i32 -2096691200 to i8*), %10 ]
  %14 = phi i32 [ %31, %38 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !2735, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 %14, metadata !2733, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 0, metadata !2734, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 0, metadata !2732, metadata !DIExpression()), !dbg !2738
  store i32 0, i32* %6, align 4, !dbg !2748
  call void @llvm.dbg.value(metadata i32 0, metadata !2734, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 %14, metadata !2733, metadata !DIExpression()), !dbg !2738
  %15 = icmp ult i32 %14, %1, !dbg !2751
  br i1 %15, label %16, label %29, !dbg !2753

16:                                               ; preds = %12, %16
  %17 = phi i32 [ %23, %16 ], [ 0, %12 ]
  %18 = phi i32 [ %22, %16 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !2734, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 %18, metadata !2733, metadata !DIExpression()), !dbg !2738
  %19 = getelementptr inbounds i8, i8* %0, i32 %18, !dbg !2754
  %20 = load i8, i8* %19, align 1, !dbg !2754
  %21 = getelementptr inbounds i8, i8* %7, i32 %17, !dbg !2756
  store i8 %20, i8* %21, align 1, !dbg !2757
  %22 = add nuw i32 %18, 1, !dbg !2758
  call void @llvm.dbg.value(metadata i32 %22, metadata !2733, metadata !DIExpression()), !dbg !2738
  %23 = add nuw nsw i32 %17, 1, !dbg !2759
  call void @llvm.dbg.value(metadata i32 %23, metadata !2734, metadata !DIExpression()), !dbg !2738
  %24 = icmp ult i32 %22, %1, !dbg !2751
  %25 = icmp ult i32 %17, 3, !dbg !2760
  %26 = select i1 %24, i1 %25, i1 false, !dbg !2760
  br i1 %26, label %16, label %27, !dbg !2753, !llvm.loop !2761

27:                                               ; preds = %16
  %28 = load i32, i32* %6, align 4, !dbg !2763
  br label %29, !dbg !2763

29:                                               ; preds = %27, %12
  %30 = phi i32 [ 0, %12 ], [ %28, %27 ], !dbg !2763
  %31 = phi i32 [ %14, %12 ], [ %22, %27 ], !dbg !2764
  call void @llvm.dbg.value(metadata i32 %30, metadata !2732, metadata !DIExpression()), !dbg !2738
  %32 = bitcast i8* %13 to i32*, !dbg !2763
  store volatile i32 %30, i32* %32, align 4, !dbg !2763
  %33 = icmp eq i32 %31, 4, !dbg !2765
  %34 = load i32, i32* @g_sfc_security_enable, align 4
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %33, i1 %35, i1 false, !dbg !2767
  br i1 %36, label %37, label %38, !dbg !2767

37:                                               ; preds = %29
  store volatile i32 64, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2768
  store volatile i32 256, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2770
  br label %38, !dbg !2771

38:                                               ; preds = %29, %37
  %39 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !2772
  call void @llvm.dbg.value(metadata i8* %39, metadata !2735, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 %31, metadata !2733, metadata !DIExpression()), !dbg !2738
  %40 = icmp ult i32 %31, %1, !dbg !2744
  br i1 %40, label %12, label %41, !dbg !2747, !llvm.loop !2773

41:                                               ; preds = %38, %10
  %42 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !2775
  call void @llvm.dbg.value(metadata i32 %42, metadata !2737, metadata !DIExpression()), !dbg !2738
  %43 = load i32, i32* @g_sfc_security_enable, align 4, !dbg !2776
  %44 = icmp eq i32 %43, 0, !dbg !2776
  br i1 %44, label %46, label %45, !dbg !2778

45:                                               ; preds = %41
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2779
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2781
  br label %46, !dbg !2782

46:                                               ; preds = %45, %41
  store volatile i32 %1, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !2783
  store volatile i32 %3, i32* inttoptr (i32 -2096693228 to i32*), align 4, !dbg !2784
  tail call fastcc void @sfc_MacEnable(i32 noundef %4) #20, !dbg !2785
  tail call fastcc void @sfc_MacWaitReady() #20, !dbg !2786
  tail call void @restore_interrupt_mask(i32 noundef %42) #18, !dbg !2787
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -2096691200 to i8*), i32 %1), metadata !2735, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2738
  call void @llvm.dbg.value(metadata i8* %2, metadata !2729, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 0, metadata !2733, metadata !DIExpression()), !dbg !2738
  %47 = icmp eq i32 %3, 0, !dbg !2788
  br i1 %47, label %59, label %48, !dbg !2791

48:                                               ; preds = %46
  %49 = getelementptr inbounds i8, i8* inttoptr (i32 -2096691200 to i8*), i32 %1, !dbg !2792
  call void @llvm.dbg.value(metadata i8* %49, metadata !2735, metadata !DIExpression()), !dbg !2738
  br label %50, !dbg !2791

50:                                               ; preds = %48, %50
  %51 = phi i8* [ %56, %50 ], [ %2, %48 ]
  %52 = phi i8* [ %57, %50 ], [ %49, %48 ]
  %53 = phi i32 [ %55, %50 ], [ 0, %48 ]
  call void @llvm.dbg.value(metadata i8* %51, metadata !2729, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i8* %52, metadata !2735, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.value(metadata i32 %53, metadata !2733, metadata !DIExpression()), !dbg !2738
  %54 = load volatile i8, i8* %52, align 1, !dbg !2793
  store i8 %54, i8* %51, align 1, !dbg !2795
  %55 = add nuw i32 %53, 1, !dbg !2796
  call void @llvm.dbg.value(metadata i32 %55, metadata !2733, metadata !DIExpression()), !dbg !2738
  %56 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !2797
  call void @llvm.dbg.value(metadata i8* %56, metadata !2729, metadata !DIExpression()), !dbg !2738
  %57 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !2798
  call void @llvm.dbg.value(metadata i8* %57, metadata !2735, metadata !DIExpression()), !dbg !2738
  %58 = icmp eq i32 %55, %3, !dbg !2788
  br i1 %58, label %59, label %50, !dbg !2791, !llvm.loop !2799

59:                                               ; preds = %50, %46, %5
  %60 = phi i32 [ -1, %5 ], [ 0, %46 ], [ %3, %50 ], !dbg !2738
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !2801
  ret i32 %60, !dbg !2801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacEnable(i32 noundef %0) unnamed_addr #5 section ".ramTEXT" !dbg !2802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2804, metadata !DIExpression()), !dbg !2806
  %2 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2807
  call void @llvm.dbg.value(metadata i32 %2, metadata !2805, metadata !DIExpression()), !dbg !2806
  %3 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2808
  %4 = and i32 %3, 1, !dbg !2808
  %5 = or i32 %4, %0, !dbg !2810
  %6 = icmp eq i32 %5, 0, !dbg !2810
  %7 = or i32 %2, 16
  %8 = select i1 %6, i32 %2, i32 %7, !dbg !2810
  call void @llvm.dbg.value(metadata i32 %8, metadata !2805, metadata !DIExpression()), !dbg !2806
  %9 = or i32 %8, 8, !dbg !2811
  call void @llvm.dbg.value(metadata i32 %9, metadata !2805, metadata !DIExpression()), !dbg !2806
  store volatile i32 %9, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2812
  ret void, !dbg !2813
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacWaitReady() unnamed_addr #5 section ".ramTEXT" !dbg !2814 {
  tail call fastcc void @sfc_MacTrigger() #20, !dbg !2815
  tail call fastcc void @sfc_MacLeave() #20, !dbg !2816
  ret void, !dbg !2817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacTrigger() unnamed_addr #5 section ".ramTEXT" !dbg !2818 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2822, metadata !DIExpression()), !dbg !2824
  call void @llvm.dbg.value(metadata i32 0, metadata !2823, metadata !DIExpression()), !dbg !2824
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2825
  call void @llvm.dbg.value(metadata i32 %1, metadata !2822, metadata !DIExpression()), !dbg !2824
  %2 = or i32 %1, 12, !dbg !2826
  call void @llvm.dbg.value(metadata i32 %2, metadata !2822, metadata !DIExpression()), !dbg !2824
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2827
  br label %3, !dbg !2828

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2829
  %5 = and i32 %4, 2, !dbg !2830
  %6 = icmp eq i32 %5, 0, !dbg !2831
  br i1 %6, label %3, label %7, !dbg !2828, !llvm.loop !2832

7:                                                ; preds = %3, %7
  %8 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2834
  %9 = and i32 %8, 1, !dbg !2835
  %10 = icmp eq i32 %9, 0, !dbg !2836
  br i1 %10, label %11, label %7, !dbg !2836, !llvm.loop !2837

11:                                               ; preds = %7
  ret void, !dbg !2839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacLeave() unnamed_addr #5 section ".ramTEXT" !dbg !2840 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2843
  call void @llvm.dbg.value(metadata i32 %1, metadata !2842, metadata !DIExpression()), !dbg !2844
  %2 = and i32 %1, -268435477, !dbg !2845
  call void @llvm.dbg.value(metadata i32 %2, metadata !2842, metadata !DIExpression()), !dbg !2844
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2846
  %3 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2847
  call void @llvm.dbg.value(metadata i32 %3, metadata !2842, metadata !DIExpression()), !dbg !2844
  %4 = and i32 %3, -9, !dbg !2848
  call void @llvm.dbg.value(metadata i32 %4, metadata !2842, metadata !DIExpression()), !dbg !2844
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2849
  ret void, !dbg !2850
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_clear_gpram() local_unnamed_addr #5 section ".ramTEXT" !dbg !2851 {
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !2854, metadata !DIExpression()), !dbg !2855
  call void @llvm.dbg.value(metadata i32 0, metadata !2853, metadata !DIExpression()), !dbg !2855
  br label %1, !dbg !2856

1:                                                ; preds = %0, %1
  %2 = phi i8* [ inttoptr (i32 -2096691200 to i8*), %0 ], [ %5, %1 ]
  %3 = phi i32 [ 0, %0 ], [ %6, %1 ]
  call void @llvm.dbg.value(metadata i8* %2, metadata !2854, metadata !DIExpression()), !dbg !2855
  call void @llvm.dbg.value(metadata i32 %3, metadata !2853, metadata !DIExpression()), !dbg !2855
  %4 = bitcast i8* %2 to i32*, !dbg !2858
  store volatile i32 0, i32* %4, align 4, !dbg !2858
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !2861
  call void @llvm.dbg.value(metadata i8* %5, metadata !2854, metadata !DIExpression()), !dbg !2855
  %6 = add nuw nsw i32 %3, 1, !dbg !2862
  call void @llvm.dbg.value(metadata i32 %6, metadata !2853, metadata !DIExpression()), !dbg !2855
  %7 = icmp eq i32 %6, 40, !dbg !2863
  br i1 %7, label %8, label %1, !dbg !2856, !llvm.loop !2864

8:                                                ; preds = %1
  ret void, !dbg !2866
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_read(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !2867 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2871, metadata !DIExpression()), !dbg !2875
  call void @llvm.dbg.value(metadata i32 %1, metadata !2872, metadata !DIExpression()), !dbg !2875
  call void @llvm.dbg.value(metadata i8* %2, metadata !2873, metadata !DIExpression()), !dbg !2875
  call void @llvm.dbg.value(metadata i32 %3, metadata !2874, metadata !DIExpression()), !dbg !2875
  %5 = tail call i32 @sfc_transfer(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef 0) #20, !dbg !2876
  ret i32 %5, !dbg !2877
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !2878 {
  %5 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2882, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata i32 %1, metadata !2883, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata i8* %2, metadata !2884, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.value(metadata i32 %3, metadata !2885, metadata !DIExpression()), !dbg !2891
  %6 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 0, !dbg !2892
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #17, !dbg !2892
  call void @llvm.dbg.declare(metadata [160 x i8]* %5, metadata !2886, metadata !DIExpression()), !dbg !2893
  %7 = add i32 %3, %1, !dbg !2894
  call void @llvm.dbg.value(metadata i32 %7, metadata !2890, metadata !DIExpression()), !dbg !2891
  %8 = icmp ugt i32 %7, 159, !dbg !2895
  br i1 %8, label %9, label %12, !dbg !2897

9:                                                ; preds = %4
  %10 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 496) #18, !dbg !2898
  br label %11, !dbg !2898

11:                                               ; preds = %11, %9
  br label %11, !dbg !2898, !llvm.loop !2902

12:                                               ; preds = %4
  %13 = call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %0, i32 noundef %1) #18, !dbg !2903
  %14 = icmp ne i8* %2, null, !dbg !2904
  %15 = icmp ne i32 %3, 0
  %16 = and i1 %14, %15, !dbg !2906
  br i1 %16, label %17, label %20, !dbg !2906

17:                                               ; preds = %12
  %18 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 %1, !dbg !2907
  %19 = call i8* @memcpy(i8* noundef nonnull %18, i8* noundef nonnull %2, i32 noundef %3) #18, !dbg !2909
  br label %20, !dbg !2910

20:                                               ; preds = %17, %12
  %21 = call i32 @sfc_transfer(i8* noundef nonnull %6, i32 noundef %7, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !2911
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #17, !dbg !2912
  ret i32 %21, !dbg !2913
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_security_write_crc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !2914 {
  %3 = alloca [160 x i8], align 1
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2918, metadata !DIExpression()), !dbg !2923
  call void @llvm.dbg.value(metadata i32 %1, metadata !2919, metadata !DIExpression()), !dbg !2923
  %5 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 0, !dbg !2924
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #17, !dbg !2924
  call void @llvm.dbg.declare(metadata [160 x i8]* %3, metadata !2920, metadata !DIExpression()), !dbg !2925
  %6 = bitcast i32* %4 to i8*, !dbg !2926
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17, !dbg !2926
  %7 = load volatile i32, i32* inttoptr (i32 -2096660420 to i32*), align 4, !dbg !2927
  call void @llvm.dbg.value(metadata i32 %7, metadata !2921, metadata !DIExpression()), !dbg !2923
  store i32 %7, i32* %4, align 4, !dbg !2928
  %8 = add i32 %1, 4, !dbg !2929
  call void @llvm.dbg.value(metadata i32 %8, metadata !2922, metadata !DIExpression()), !dbg !2923
  %9 = call i8* @memcpy(i8* noundef nonnull %5, i8* noundef %0, i32 noundef %1) #18, !dbg !2930
  %10 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 %1, !dbg !2931
  call void @llvm.dbg.value(metadata i32* %4, metadata !2921, metadata !DIExpression(DW_OP_deref)), !dbg !2923
  %11 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef nonnull %6, i32 noundef 4) #18, !dbg !2932
  %12 = call i32 @sfc_transfer(i8* noundef nonnull %5, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !2933
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17, !dbg !2934
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #17, !dbg !2934
  ret i32 %12, !dbg !2935
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !2936 {
  %6 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !2938, metadata !DIExpression()), !dbg !2945
  call void @llvm.dbg.value(metadata i32 %1, metadata !2939, metadata !DIExpression()), !dbg !2945
  call void @llvm.dbg.value(metadata i8* %2, metadata !2940, metadata !DIExpression()), !dbg !2945
  call void @llvm.dbg.value(metadata i32 %3, metadata !2941, metadata !DIExpression()), !dbg !2945
  call void @llvm.dbg.value(metadata i32 %4, metadata !2942, metadata !DIExpression()), !dbg !2945
  %7 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 0, !dbg !2946
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #17, !dbg !2946
  call void @llvm.dbg.declare(metadata [160 x i8]* %6, metadata !2943, metadata !DIExpression()), !dbg !2947
  %8 = add i32 %3, %1, !dbg !2948
  call void @llvm.dbg.value(metadata i32 %8, metadata !2944, metadata !DIExpression()), !dbg !2945
  %9 = icmp ugt i32 %8, 160, !dbg !2949
  br i1 %9, label %10, label %13, !dbg !2951

10:                                               ; preds = %5
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 544) #18, !dbg !2952
  br label %12, !dbg !2952

12:                                               ; preds = %12, %10
  br label %12, !dbg !2952, !llvm.loop !2956

13:                                               ; preds = %5
  %14 = call i8* @memcpy(i8* noundef nonnull %7, i8* noundef %0, i32 noundef %1) #18, !dbg !2957
  %15 = icmp ne i8* %2, null, !dbg !2958
  %16 = icmp ne i32 %3, 0
  %17 = and i1 %15, %16, !dbg !2960
  br i1 %17, label %18, label %21, !dbg !2960

18:                                               ; preds = %13
  %19 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 %1, !dbg !2961
  %20 = call i8* @memcpy(i8* noundef nonnull %19, i8* noundef nonnull %2, i32 noundef %3) #18, !dbg !2963
  br label %21, !dbg !2964

21:                                               ; preds = %18, %13
  %22 = call i32 @sfc_transfer(i8* noundef nonnull %7, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !2965
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #17, !dbg !2966
  ret i32 %22, !dbg !2967
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_suspend_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !2968 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_suspend_winbond, i32 0, i32 0)) #18, !dbg !2969
  ret void, !dbg !2970
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_resume_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !2971 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_resume_winbond, i32 0, i32 0)) #18, !dbg !2972
  ret void, !dbg !2973
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_check_device() local_unnamed_addr #0 section ".ramTEXT" !dbg !2974 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !2981
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #17, !dbg !2981
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !2978, metadata !DIExpression()), !dbg !2982
  %3 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #20, !dbg !2983
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !2984
  %5 = load i8, i8* %4, align 1, !dbg !2984
  %6 = zext i8 %5 to i32, !dbg !2985
  %7 = shl nuw i32 %6, 24, !dbg !2986
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !2987
  %9 = load i8, i8* %8, align 1, !dbg !2987
  %10 = zext i8 %9 to i32, !dbg !2988
  %11 = shl nuw nsw i32 %10, 16, !dbg !2989
  %12 = or i32 %11, %7, !dbg !2990
  call void @llvm.dbg.value(metadata i32 %12, metadata !2977, metadata !DIExpression()), !dbg !2991
  %13 = call i32 @sfc_GetDirectMode() #18, !dbg !2992
  store i32 %13, i32* @gucFlashSFCMode, align 4, !dbg !2993
  call void @llvm.dbg.value(metadata i32 1, metadata !2976, metadata !DIExpression()), !dbg !2991
  %14 = load i8, i8* %2, align 1
  call void @llvm.dbg.value(metadata i32 1, metadata !2976, metadata !DIExpression()), !dbg !2991
  br label %15, !dbg !2994

15:                                               ; preds = %0, %44
  %16 = phi i32 [ 1, %0 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !2976, metadata !DIExpression()), !dbg !2991
  call void @llvm.dbg.value(metadata !DIArgList([13 x %struct.flash_info_t]* @chips_data, i32 %16), metadata !2980, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 24, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2991
  %17 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 1, !dbg !2996
  %18 = load i8, i8* %17, align 4, !dbg !2996
  %19 = icmp eq i8 %18, %14, !dbg !3000
  br i1 %19, label %20, label %44, !dbg !3001

20:                                               ; preds = %15
  %21 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 2, !dbg !3002
  %22 = load i32, i32* %21, align 4, !dbg !3002
  %23 = icmp eq i32 %22, %12, !dbg !3003
  br i1 %23, label %24, label %44, !dbg !3004

24:                                               ; preds = %20
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, !dbg !3005
  store %struct.flash_info_t* %25, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3006
  %26 = add nsw i32 %16, -4, !dbg !3008
  %27 = icmp ult i32 %26, 5, !dbg !3008
  br i1 %27, label %42, label %28, !dbg !3010

28:                                               ; preds = %24
  %29 = add nsw i32 %16, -1, !dbg !3011
  %30 = icmp ult i32 %29, 3, !dbg !3011
  br i1 %30, label %42, label %31, !dbg !3013

31:                                               ; preds = %28
  %32 = add nsw i32 %16, -9, !dbg !3014
  %33 = icmp ult i32 %32, 3, !dbg !3014
  br i1 %33, label %34, label %40, !dbg !3016

34:                                               ; preds = %31
  %35 = and i32 %16, 2147483639, !dbg !3017
  %36 = icmp eq i32 %35, 1, !dbg !3017
  %37 = icmp eq i32 %16, 11
  %38 = or i1 %37, %36, !dbg !3020
  %39 = select i1 %38, i32 49, i32 1, !dbg !3020
  store i32 %39, i32* @gd_write_sr2_1, align 4, !dbg !3021
  br label %42, !dbg !3022

40:                                               ; preds = %31
  %41 = icmp eq i32 %16, 12, !dbg !3023
  br i1 %41, label %42, label %67, !dbg !3025

42:                                               ; preds = %40, %28, %24, %34
  %43 = phi i32 [ 200, %34 ], [ 194, %24 ], [ 239, %28 ], [ 32, %40 ]
  store i32 %43, i32* @support_flash_id, align 4, !dbg !3026
  br label %67, !dbg !3027

44:                                               ; preds = %15, %20
  %45 = add nuw nsw i32 %16, 1, !dbg !3028
  call void @llvm.dbg.value(metadata i32 %45, metadata !2976, metadata !DIExpression()), !dbg !2991
  %46 = icmp eq i32 %45, 13, !dbg !3029
  br i1 %46, label %47, label %15, !dbg !2994, !llvm.loop !3030

47:                                               ; preds = %44
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3032
  %48 = load i32, i32* @support_flash_id, align 4, !dbg !3033
  %49 = icmp eq i32 %48, 255, !dbg !3035
  br i1 %49, label %50, label %67, !dbg !3036

50:                                               ; preds = %47
  %51 = call %struct.flash_info_t* @customer_flash_register() #18, !dbg !3037
  store %struct.flash_info_t* %51, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3039
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !2980, metadata !DIExpression()), !dbg !2991
  %52 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 1, !dbg !3040
  %53 = load i8, i8* %52, align 4, !dbg !3040
  %54 = load i8, i8* %2, align 1, !dbg !3042
  %55 = icmp eq i8 %53, %54, !dbg !3043
  br i1 %55, label %56, label %60, !dbg !3044

56:                                               ; preds = %50
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !2980, metadata !DIExpression()), !dbg !2991
  %57 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 2, !dbg !3045
  %58 = load i32, i32* %57, align 4, !dbg !3045
  %59 = icmp eq i32 %58, %12, !dbg !3046
  br i1 %59, label %67, label %60, !dbg !3047

60:                                               ; preds = %56, %50
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 322, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0)) #18, !dbg !3048
  %61 = load i8, i8* %2, align 1, !dbg !3050
  %62 = zext i8 %61 to i32, !dbg !3050
  %63 = load i8, i8* %4, align 1, !dbg !3050
  %64 = zext i8 %63 to i32, !dbg !3050
  %65 = load i8, i8* %8, align 1, !dbg !3050
  %66 = zext i8 %65 to i32, !dbg !3050
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 323, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef %62, i32 noundef %64, i32 noundef %66, i32 noundef %12) #18, !dbg !3050
  br label %67, !dbg !3051

67:                                               ; preds = %47, %60, %56, %40, %42
  %68 = phi i32 [ 0, %42 ], [ 0, %40 ], [ 0, %56 ], [ -1, %60 ], [ -1, %47 ]
  %69 = phi i32 [ 1, %42 ], [ 1, %40 ], [ 1, %56 ], [ 0, %60 ], [ 0, %47 ], !dbg !2991
  store i32 %68, i32* @sf_drvier_status, align 4, !dbg !2991
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #17, !dbg !3052
  ret i32 %69, !dbg !3052
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_jedec_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3053 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3057, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.value(metadata i32 %1, metadata !3058, metadata !DIExpression()), !dbg !3061
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #17, !dbg !3062
  call void @llvm.dbg.value(metadata i8 -97, metadata !3059, metadata !DIExpression()), !dbg !3061
  store i8 -97, i8* %3, align 1, !dbg !3063
  call void @llvm.dbg.value(metadata i8* %3, metadata !3059, metadata !DIExpression(DW_OP_deref)), !dbg !3061
  %4 = call i32 @sfc_read(i8* noundef nonnull %3, i32 noundef 1, i8* noundef %0, i32 noundef %1) #18, !dbg !3064
  call void @llvm.dbg.value(metadata i32 %4, metadata !3060, metadata !DIExpression()), !dbg !3061
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #17, !dbg !3065
  ret i32 %4, !dbg !3066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_switch_mode(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3071, metadata !DIExpression()), !dbg !3072
  %2 = tail call %struct.flash_info_t* @customer_flash_register() #18, !dbg !3073
  %3 = icmp eq %struct.flash_info_t* %2, null, !dbg !3075
  br i1 %3, label %5, label %4, !dbg !3076

4:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !3077
  br label %5, !dbg !3079

5:                                                ; preds = %4, %1
  %6 = tail call i32 @flash_check_device() #20, !dbg !3080
  tail call fastcc void @flash_Switch_Device_Mode(i32 noundef %0) #20, !dbg !3081
  switch i32 %0, label %14 [
    i32 1, label %7
    i32 2, label %8
    i32 3, label %13
  ], !dbg !3082

7:                                                ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 185298944, i32 noundef 1) #18, !dbg !3083
  br label %17, !dbg !3086

8:                                                ; preds = %5
  %9 = load i32, i32* @support_flash_id, align 4, !dbg !3087
  %10 = icmp eq i32 %9, 32, !dbg !3091
  br i1 %10, label %11, label %12, !dbg !3092

11:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335572992, i32 noundef 2) #18, !dbg !3093
  br label %17, !dbg !3095

12:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335589376, i32 noundef 2) #18, !dbg !3096
  br label %17

13:                                               ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 201265152, i32 noundef 3) #18, !dbg !3098
  br label %17

14:                                               ; preds = %5
  %15 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 352) #18, !dbg !3101
  br label %16, !dbg !3101

16:                                               ; preds = %14, %16
  br label %16, !dbg !3101, !llvm.loop !3105

17:                                               ; preds = %13, %12, %11, %7
  store i32 %0, i32* @gucFlashSFCMode, align 4, !dbg !3106
  ret void, !dbg !3107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_Switch_Device_Mode(i32 noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !3108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3110, metadata !DIExpression()), !dbg !3112
  switch i32 %0, label %29 [
    i32 1, label %2
    i32 2, label %11
    i32 3, label %20
  ], !dbg !3113

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), metadata !3111, metadata !DIExpression()), !dbg !3112
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !3114
  switch i32 %3, label %32 [
    i32 194, label %35
    i32 200, label %4
    i32 32, label %8
    i32 255, label %9
  ], !dbg !3117

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), metadata !3111, metadata !DIExpression()), !dbg !3112
  %5 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3118
  %6 = icmp eq i32 %5, 49, !dbg !3122
  %7 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), !dbg !3123
  call void @llvm.dbg.value(metadata i8* %7, metadata !3111, metadata !DIExpression()), !dbg !3112
  br label %35, !dbg !3124

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), metadata !3111, metadata !DIExpression()), !dbg !3112
  br label %35, !dbg !3125

9:                                                ; preds = %2
  %10 = tail call i8* @customer_switch_spi_mode_command() #18, !dbg !3128
  call void @llvm.dbg.value(metadata i8* %10, metadata !3111, metadata !DIExpression()), !dbg !3112
  br label %35, !dbg !3131

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), metadata !3111, metadata !DIExpression()), !dbg !3112
  %12 = load i32, i32* @support_flash_id, align 4, !dbg !3132
  switch i32 %12, label %33 [
    i32 194, label %35
    i32 200, label %13
    i32 32, label %17
    i32 255, label %18
  ], !dbg !3134

13:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !3111, metadata !DIExpression()), !dbg !3112
  %14 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3135
  %15 = icmp eq i32 %14, 49, !dbg !3139
  %16 = select i1 %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !3140
  call void @llvm.dbg.value(metadata i8* %16, metadata !3111, metadata !DIExpression()), !dbg !3112
  br label %35, !dbg !3141

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !3111, metadata !DIExpression()), !dbg !3112
  br label %35, !dbg !3142

18:                                               ; preds = %11
  %19 = tail call i8* @customer_switch_spiq_mode_command() #18, !dbg !3145
  call void @llvm.dbg.value(metadata i8* %19, metadata !3111, metadata !DIExpression()), !dbg !3112
  br label %35, !dbg !3148

20:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), metadata !3111, metadata !DIExpression()), !dbg !3112
  %21 = load i32, i32* @support_flash_id, align 4, !dbg !3149
  switch i32 %21, label %34 [
    i32 194, label %35
    i32 200, label %22
    i32 32, label %26
    i32 255, label %27
  ], !dbg !3151

22:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !3111, metadata !DIExpression()), !dbg !3112
  %23 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3152
  %24 = icmp eq i32 %23, 49, !dbg !3156
  %25 = select i1 %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchqpi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !3157
  call void @llvm.dbg.value(metadata i8* %25, metadata !3111, metadata !DIExpression()), !dbg !3112
  br label %35, !dbg !3158

26:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !3111, metadata !DIExpression()), !dbg !3112
  br label %35, !dbg !3159

27:                                               ; preds = %20
  %28 = tail call i8* @customer_switch_spiq_mode_command() #18, !dbg !3162
  call void @llvm.dbg.value(metadata i8* %28, metadata !3111, metadata !DIExpression()), !dbg !3112
  br label %35, !dbg !3165

29:                                               ; preds = %1
  %30 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 268) #18, !dbg !3166
  br label %31, !dbg !3166

31:                                               ; preds = %31, %29
  br label %31, !dbg !3166, !llvm.loop !3169

32:                                               ; preds = %2
  br label %35, !dbg !3170

33:                                               ; preds = %11
  br label %35, !dbg !3170

34:                                               ; preds = %20
  br label %35, !dbg !3170

35:                                               ; preds = %20, %34, %11, %33, %2, %32, %26, %27, %22, %17, %18, %13, %8, %9, %4
  %36 = phi i8* [ %25, %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %26 ], [ %28, %27 ], [ %16, %13 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %17 ], [ %19, %18 ], [ %7, %4 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), %8 ], [ %10, %9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_mxic, i32 0, i32 0), %2 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), %32 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %11 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), %33 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %20 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), %34 ], !dbg !3171
  call void @llvm.dbg.value(metadata i8* %36, metadata !3111, metadata !DIExpression()), !dbg !3112
  tail call void @sfc_Command_List(i8* noundef %36) #18, !dbg !3170
  ret void, !dbg !3172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_config() local_unnamed_addr #0 section ".ramTEXT" !dbg !3173 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3179
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #17, !dbg !3179
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3177, metadata !DIExpression()), !dbg !3180
  %3 = tail call i32 @sfc_getMaxGPRamSize() #18, !dbg !3181
  store i32 %3, i32* @gSFC_max_data_size, align 4, !dbg !3182
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3183
  %4 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #20, !dbg !3184
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !3185
  %6 = load i8, i8* %5, align 1, !dbg !3185
  %7 = zext i8 %6 to i32, !dbg !3186
  %8 = shl nuw i32 %7, 24, !dbg !3187
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !3188
  %10 = load i8, i8* %9, align 1, !dbg !3188
  %11 = zext i8 %10 to i32, !dbg !3189
  %12 = shl nuw nsw i32 %11, 16, !dbg !3190
  %13 = or i32 %12, %8, !dbg !3191
  call void @llvm.dbg.value(metadata i32 %13, metadata !3176, metadata !DIExpression()), !dbg !3192
  %14 = load i8, i8* %2, align 1, !dbg !3193
  %15 = zext i8 %14 to i32, !dbg !3193
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 385, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i32 noundef %15, i32 noundef %7, i32 noundef %11, i32 noundef %13) #18, !dbg !3193
  call void @llvm.dbg.value(metadata i32 1, metadata !3175, metadata !DIExpression()), !dbg !3192
  br label %16, !dbg !3194

16:                                               ; preds = %0, %43
  %17 = phi i32 [ 1, %0 ], [ %44, %43 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !3175, metadata !DIExpression()), !dbg !3192
  %18 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, !dbg !3196
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %18, metadata !3178, metadata !DIExpression()), !dbg !3192
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 1, !dbg !3199
  %20 = load i8, i8* %19, align 4, !dbg !3199
  %21 = load i8, i8* %2, align 1, !dbg !3201
  %22 = icmp eq i8 %20, %21, !dbg !3202
  br i1 %22, label %23, label %43, !dbg !3203

23:                                               ; preds = %16
  %24 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 2, !dbg !3204
  %25 = load i32, i32* %24, align 4, !dbg !3204
  %26 = icmp eq i32 %25, %13, !dbg !3205
  br i1 %26, label %27, label %43, !dbg !3206

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %18, i32 0, i32 0, !dbg !3207
  %29 = load i8*, i8** %28, align 4, !dbg !3207
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 390, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %29) #18, !dbg !3207
  store %struct.flash_info_t* %18, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3209
  %30 = add nsw i32 %17, -4, !dbg !3210
  %31 = icmp ult i32 %30, 5, !dbg !3210
  br i1 %31, label %41, label %32, !dbg !3212

32:                                               ; preds = %27
  %33 = add nsw i32 %17, -1, !dbg !3213
  %34 = icmp ult i32 %33, 3, !dbg !3213
  br i1 %34, label %41, label %35, !dbg !3215

35:                                               ; preds = %32
  %36 = add nsw i32 %17, -9, !dbg !3216
  %37 = icmp ult i32 %36, 3, !dbg !3216
  br i1 %37, label %41, label %38, !dbg !3218

38:                                               ; preds = %35
  %39 = icmp eq i32 %17, 12, !dbg !3219
  br i1 %39, label %40, label %43, !dbg !3221

40:                                               ; preds = %38
  store i32 32, i32* @support_flash_id, align 4, !dbg !3222
  call void @llvm.dbg.value(metadata i32 %44, metadata !3175, metadata !DIExpression()), !dbg !3192
  br label %66, !dbg !3224

41:                                               ; preds = %35, %32, %27
  %42 = phi i32 [ 194, %27 ], [ 239, %32 ], [ 200, %35 ]
  store i32 %42, i32* @support_flash_id, align 4, !dbg !3225
  br label %43, !dbg !3226

43:                                               ; preds = %41, %16, %23, %38
  %44 = add nuw nsw i32 %17, 1, !dbg !3226
  call void @llvm.dbg.value(metadata i32 %44, metadata !3175, metadata !DIExpression()), !dbg !3192
  %45 = icmp eq i32 %44, 13, !dbg !3227
  br i1 %45, label %46, label %16, !dbg !3194, !llvm.loop !3228

46:                                               ; preds = %43
  %47 = load i32, i32* @support_flash_id, align 4, !dbg !3230
  %48 = icmp eq i32 %47, 255, !dbg !3232
  br i1 %48, label %49, label %66, !dbg !3224

49:                                               ; preds = %46
  %50 = call %struct.flash_info_t* @customer_flash_register() #18, !dbg !3233
  store %struct.flash_info_t* %50, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3235
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !3178, metadata !DIExpression()), !dbg !3192
  %51 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 1, !dbg !3236
  %52 = load i8, i8* %51, align 4, !dbg !3236
  %53 = load i8, i8* %2, align 1, !dbg !3238
  %54 = icmp eq i8 %52, %53, !dbg !3239
  br i1 %54, label %55, label %59, !dbg !3240

55:                                               ; preds = %49
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !3178, metadata !DIExpression()), !dbg !3192
  %56 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 2, !dbg !3241
  %57 = load i32, i32* %56, align 4, !dbg !3241
  %58 = icmp eq i32 %57, %13, !dbg !3242
  br i1 %58, label %71, label %59, !dbg !3243

59:                                               ; preds = %55, %49
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 411, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0)) #18, !dbg !3244
  %60 = load i8, i8* %2, align 1, !dbg !3246
  %61 = zext i8 %60 to i32, !dbg !3246
  %62 = load i8, i8* %5, align 1, !dbg !3246
  %63 = zext i8 %62 to i32, !dbg !3246
  %64 = load i8, i8* %9, align 1, !dbg !3246
  %65 = zext i8 %64 to i32, !dbg !3246
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 412, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef %61, i32 noundef %63, i32 noundef %65, i32 noundef %13) #18, !dbg !3246
  br label %66, !dbg !3247

66:                                               ; preds = %40, %59, %46
  %67 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3248
  %68 = icmp eq %struct.flash_info_t* %67, null, !dbg !3248
  br i1 %68, label %69, label %71, !dbg !3250

69:                                               ; preds = %66
  %70 = inttoptr i32 %13 to i8*, !dbg !3251
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 417, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %70) #18, !dbg !3251
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3253
  br label %71, !dbg !3254

71:                                               ; preds = %66, %69, %55
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3192
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #17, !dbg !3255
  ret void, !dbg !3255
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_init(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3256 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3258, metadata !DIExpression()), !dbg !3263
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3264
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3264
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3261, metadata !DIExpression()), !dbg !3265
  tail call void @sfc_Init(i32 noundef %0) #18, !dbg !3266
  %4 = tail call i32 @sfc_getMaxGPRamSize() #18, !dbg !3267
  store i32 %4, i32* @gSFC_max_data_size, align 4, !dbg !3268
  tail call fastcc void @flash_reset() #20, !dbg !3269
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3270
  %5 = call i32 @flash_read_jedec_id(i8* noundef nonnull %3, i32 noundef 3) #20, !dbg !3271
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3272
  %7 = load i8, i8* %6, align 1, !dbg !3272
  %8 = zext i8 %7 to i32, !dbg !3273
  %9 = shl nuw i32 %8, 24, !dbg !3274
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3275
  %11 = load i8, i8* %10, align 1, !dbg !3275
  %12 = zext i8 %11 to i32, !dbg !3276
  %13 = shl nuw nsw i32 %12, 16, !dbg !3277
  %14 = or i32 %13, %9, !dbg !3278
  call void @llvm.dbg.value(metadata i32 %14, metadata !3260, metadata !DIExpression()), !dbg !3263
  %15 = load i8, i8* %3, align 1, !dbg !3279
  %16 = zext i8 %15 to i32, !dbg !3279
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 447, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i32 noundef %16, i32 noundef %8, i32 noundef %12, i32 noundef %14) #18, !dbg !3279
  call void @llvm.dbg.value(metadata i32 1, metadata !3259, metadata !DIExpression()), !dbg !3263
  br label %17, !dbg !3280

17:                                               ; preds = %1, %31
  %18 = phi i32 [ 1, %1 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !3259, metadata !DIExpression()), !dbg !3263
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, !dbg !3282
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %19, metadata !3262, metadata !DIExpression()), !dbg !3263
  %20 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 1, !dbg !3285
  %21 = load i8, i8* %20, align 4, !dbg !3285
  %22 = load i8, i8* %3, align 1, !dbg !3287
  %23 = icmp eq i8 %21, %22, !dbg !3288
  br i1 %23, label %24, label %31, !dbg !3289

24:                                               ; preds = %17
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 2, !dbg !3290
  %26 = load i32, i32* %25, align 4, !dbg !3290
  %27 = icmp eq i32 %26, %14, !dbg !3291
  br i1 %27, label %28, label %31, !dbg !3292

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %19, i32 0, i32 0, !dbg !3293
  %30 = load i8*, i8** %29, align 4, !dbg !3293
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 452, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %30) #18, !dbg !3293
  store %struct.flash_info_t* %19, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3295
  br label %31, !dbg !3296

31:                                               ; preds = %17, %24, %28
  %32 = add nuw nsw i32 %18, 1, !dbg !3297
  call void @llvm.dbg.value(metadata i32 %32, metadata !3259, metadata !DIExpression()), !dbg !3263
  %33 = icmp eq i32 %32, 13, !dbg !3298
  br i1 %33, label %34, label %17, !dbg !3280, !llvm.loop !3299

34:                                               ; preds = %31
  %35 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3301
  %36 = icmp eq %struct.flash_info_t* %35, null, !dbg !3301
  br i1 %36, label %37, label %39, !dbg !3303

37:                                               ; preds = %34
  %38 = inttoptr i32 %14 to i8*, !dbg !3304
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %38) #18, !dbg !3304
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3306
  br label %39, !dbg !3307

39:                                               ; preds = %37, %34
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3308
  ret void, !dbg !3308
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_reset() unnamed_addr #0 section ".ramTEXT" !dbg !3309 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_qpimode, i32 0, i32 0)) #18, !dbg !3310
  tail call void @sfc_delay_ms(i32 noundef 1) #18, !dbg !3311
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_spimode, i32 0, i32 0)) #18, !dbg !3312
  tail call void @sfc_delay_ms(i32 noundef 1) #18, !dbg !3313
  ret void, !dbg !3314
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_wait_ready(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3315 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3319, metadata !DIExpression()), !dbg !3322
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3323
  call void @llvm.dbg.value(metadata i8 0, metadata !3321, metadata !DIExpression()), !dbg !3322
  store i8 0, i8* %2, align 1, !dbg !3324
  call void @llvm.dbg.value(metadata i32 0, metadata !3320, metadata !DIExpression()), !dbg !3322
  %3 = mul i32 %0, 1000
  %4 = add i32 %3, 1000
  call void @llvm.dbg.value(metadata i32 0, metadata !3320, metadata !DIExpression()), !dbg !3322
  %5 = icmp sgt i32 %4, 0, !dbg !3325
  br i1 %5, label %6, label %18, !dbg !3328

6:                                                ; preds = %1, %15
  %7 = phi i32 [ %16, %15 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3320, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.value(metadata i8* %2, metadata !3321, metadata !DIExpression(DW_OP_deref)), !dbg !3322
  %8 = call i32 @flash_read_sr(i8* noundef nonnull %2) #20, !dbg !3329
  %9 = icmp slt i32 %8, 0, !dbg !3332
  br i1 %9, label %18, label %10, !dbg !3333

10:                                               ; preds = %6
  %11 = load i8, i8* %2, align 1, !dbg !3334
  call void @llvm.dbg.value(metadata i8 %11, metadata !3321, metadata !DIExpression()), !dbg !3322
  %12 = and i8 %11, 1, !dbg !3336
  %13 = icmp eq i8 %12, 0, !dbg !3336
  br i1 %13, label %14, label %15, !dbg !3337

14:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3338
  ret i32 0, !dbg !3339

15:                                               ; preds = %10
  call void @sfc_delay_ms(i32 noundef 1) #18, !dbg !3341
  %16 = add nuw nsw i32 %7, 1, !dbg !3342
  call void @llvm.dbg.value(metadata i32 %16, metadata !3320, metadata !DIExpression()), !dbg !3322
  %17 = icmp eq i32 %16, %4, !dbg !3325
  br i1 %17, label %18, label %6, !dbg !3328, !llvm.loop !3343

18:                                               ; preds = %15, %6, %1
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 491, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.flash_wait_ready, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0)) #19, !dbg !3345
  unreachable, !dbg !3345
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3346 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3350, metadata !DIExpression()), !dbg !3353
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3354
  call void @llvm.dbg.value(metadata i8 5, metadata !3352, metadata !DIExpression()), !dbg !3353
  store i8 5, i8* %2, align 1, !dbg !3355
  call void @llvm.dbg.value(metadata i8* %2, metadata !3352, metadata !DIExpression(DW_OP_deref)), !dbg !3353
  %3 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #18, !dbg !3356
  call void @llvm.dbg.value(metadata i32 %3, metadata !3351, metadata !DIExpression()), !dbg !3353
  %4 = icmp ne i32 %3, 1, !dbg !3357
  %5 = sext i1 %4 to i32, !dbg !3353
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3359
  ret i32 %5, !dbg !3359
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3360 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3362, metadata !DIExpression()), !dbg !3366
  call void @llvm.dbg.value(metadata i32 %1, metadata !3363, metadata !DIExpression()), !dbg !3366
  %4 = bitcast i32* %3 to i8*, !dbg !3367
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !3367
  call void @llvm.dbg.value(metadata i32 0, metadata !3364, metadata !DIExpression()), !dbg !3366
  store i32 144, i32* %3, align 4, !dbg !3368
  call void @llvm.dbg.value(metadata i8 undef, metadata !3364, metadata !DIExpression()), !dbg !3366
  call void @llvm.dbg.value(metadata i32* %3, metadata !3364, metadata !DIExpression(DW_OP_deref)), !dbg !3366
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #18, !dbg !3369
  call void @llvm.dbg.value(metadata i32 %5, metadata !3365, metadata !DIExpression()), !dbg !3366
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17, !dbg !3370
  ret i32 %5, !dbg !3371
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id_quad(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3372 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3374, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.value(metadata i32 %1, metadata !3375, metadata !DIExpression()), !dbg !3378
  %4 = bitcast i32* %3 to i8*, !dbg !3379
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !3379
  call void @llvm.dbg.value(metadata i32 0, metadata !3376, metadata !DIExpression()), !dbg !3378
  store i32 144, i32* %3, align 4, !dbg !3380
  call void @llvm.dbg.value(metadata i8 undef, metadata !3376, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.value(metadata i32* %3, metadata !3376, metadata !DIExpression(DW_OP_deref)), !dbg !3378
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #18, !dbg !3381
  call void @llvm.dbg.value(metadata i32 %5, metadata !3377, metadata !DIExpression()), !dbg !3378
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17, !dbg !3382
  ret i32 %5, !dbg !3383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !3384 {
  %4 = alloca [4 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3388, metadata !DIExpression()), !dbg !3393
  call void @llvm.dbg.value(metadata i32 %1, metadata !3389, metadata !DIExpression()), !dbg !3393
  call void @llvm.dbg.value(metadata i32 %2, metadata !3390, metadata !DIExpression()), !dbg !3393
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 0, !dbg !3394
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !3394
  call void @llvm.dbg.declare(metadata [4 x i8]* %4, metadata !3391, metadata !DIExpression()), !dbg !3395
  %6 = icmp eq i32 %2, 0, !dbg !3396
  br i1 %6, label %18, label %7, !dbg !3398

7:                                                ; preds = %3
  %8 = tail call i32 @flash_wait_ready(i32 noundef 1) #20, !dbg !3399
  store i32 1, i32* @sf_drvier_status, align 4, !dbg !3401
  store i8 3, i8* %5, align 1, !dbg !3402
  %9 = lshr i32 %1, 16, !dbg !3403
  %10 = trunc i32 %9 to i8, !dbg !3404
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 1, !dbg !3405
  store i8 %10, i8* %11, align 1, !dbg !3406
  %12 = lshr i32 %1, 8, !dbg !3407
  %13 = trunc i32 %12 to i8, !dbg !3408
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 2, !dbg !3409
  store i8 %13, i8* %14, align 1, !dbg !3410
  %15 = trunc i32 %1 to i8, !dbg !3411
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 3, !dbg !3412
  store i8 %15, i8* %16, align 1, !dbg !3413
  %17 = call i32 @sfc_read(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %0, i32 noundef %2) #18, !dbg !3414
  call void @llvm.dbg.value(metadata i32 %17, metadata !3392, metadata !DIExpression()), !dbg !3393
  br label %18, !dbg !3415

18:                                               ; preds = %3, %7
  %19 = phi i32 [ %17, %7 ], [ 0, %3 ], !dbg !3393
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !3416
  ret i32 %19, !dbg !3416
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_fast_read(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !3417 {
  %5 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3421, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 %1, metadata !3422, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 %2, metadata !3423, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 %3, metadata !3424, metadata !DIExpression()), !dbg !3430
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0, !dbg !3431
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #17, !dbg !3431
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !3425, metadata !DIExpression()), !dbg !3432
  %7 = icmp eq i32 %2, 0, !dbg !3433
  br i1 %7, label %33, label %8, !dbg !3435

8:                                                ; preds = %4
  %9 = tail call i32 @flash_wait_ready(i32 noundef 1) #20, !dbg !3436
  store i8 11, i8* %6, align 1, !dbg !3438
  %10 = lshr i32 %1, 16, !dbg !3439
  %11 = trunc i32 %10 to i8, !dbg !3440
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 1, !dbg !3441
  store i8 %11, i8* %12, align 1, !dbg !3442
  %13 = lshr i32 %1, 8, !dbg !3443
  %14 = trunc i32 %13 to i8, !dbg !3444
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 2, !dbg !3445
  store i8 %14, i8* %15, align 1, !dbg !3446
  %16 = trunc i32 %1 to i8, !dbg !3447
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 3, !dbg !3448
  store i8 %16, i8* %17, align 1, !dbg !3449
  call void @llvm.dbg.value(metadata i32 4, metadata !3427, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 0, metadata !3429, metadata !DIExpression()), !dbg !3430
  %18 = icmp sgt i32 %3, 0, !dbg !3450
  br i1 %18, label %19, label %30, !dbg !3453

19:                                               ; preds = %8
  %20 = add nsw i32 %3, -1, !dbg !3453
  %21 = call i32 @llvm.umin.i32(i32 %20, i32 27), !dbg !3453
  br label %22, !dbg !3453

22:                                               ; preds = %19, %22
  %23 = phi i32 [ %26, %22 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !3429, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 undef, metadata !3427, metadata !DIExpression()), !dbg !3430
  %24 = add nuw nsw i32 %23, 4, !dbg !3454
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 %24, !dbg !3456
  store i8 0, i8* %25, align 1, !dbg !3457
  call void @llvm.dbg.value(metadata i32 undef, metadata !3427, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3430
  %26 = add nuw nsw i32 %23, 1, !dbg !3458
  call void @llvm.dbg.value(metadata i32 %26, metadata !3429, metadata !DIExpression()), !dbg !3430
  %27 = icmp eq i32 %23, %21, !dbg !3459
  br i1 %27, label %28, label %22, !dbg !3453, !llvm.loop !3460

28:                                               ; preds = %22
  %29 = add nuw nsw i32 %21, 5, !dbg !3453
  br label %30, !dbg !3462

30:                                               ; preds = %28, %8
  %31 = phi i32 [ 4, %8 ], [ %29, %28 ], !dbg !3430
  %32 = call i32 @sfc_read(i8* noundef nonnull %6, i32 noundef %31, i8* noundef %0, i32 noundef %2) #18, !dbg !3462
  call void @llvm.dbg.value(metadata i32 %32, metadata !3428, metadata !DIExpression()), !dbg !3430
  br label %33, !dbg !3463

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !3430
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #17, !dbg !3464
  ret i32 %34, !dbg !3464
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr2(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3465 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3467, metadata !DIExpression()), !dbg !3470
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3471
  call void @llvm.dbg.value(metadata i8 53, metadata !3469, metadata !DIExpression()), !dbg !3470
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !3472
  switch i32 %3, label %9 [
    i32 239, label %4
    i32 200, label %4
    i32 194, label %5
    i32 32, label %6
    i32 255, label %7
  ], !dbg !3474

4:                                                ; preds = %1, %1
  call void @llvm.dbg.value(metadata i8 53, metadata !3469, metadata !DIExpression()), !dbg !3470
  store i8 53, i8* %2, align 1, !dbg !3475
  br label %10, !dbg !3477

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 43, metadata !3469, metadata !DIExpression()), !dbg !3470
  store i8 43, i8* %2, align 1, !dbg !3478
  br label %10, !dbg !3481

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 112, metadata !3469, metadata !DIExpression()), !dbg !3470
  store i8 112, i8* %2, align 1, !dbg !3482
  br label %10, !dbg !3485

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @customer_flash_read_SR2_comand() #18, !dbg !3486
  call void @llvm.dbg.value(metadata i8 %8, metadata !3469, metadata !DIExpression()), !dbg !3470
  store i8 %8, i8* %2, align 1, !dbg !3489
  br label %10, !dbg !3490

9:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.flash_read_sr2, i32 0, i32 0), i32 noundef 655, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0)) #18, !dbg !3491
  call void @llvm.dbg.value(metadata i8 5, metadata !3469, metadata !DIExpression()), !dbg !3470
  store i8 5, i8* %2, align 1, !dbg !3493
  br label %10

10:                                               ; preds = %5, %7, %9, %6, %4
  call void @llvm.dbg.value(metadata i8* %2, metadata !3469, metadata !DIExpression(DW_OP_deref)), !dbg !3470
  %11 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #18, !dbg !3494
  call void @llvm.dbg.value(metadata i32 %11, metadata !3468, metadata !DIExpression()), !dbg !3470
  %12 = icmp ne i32 %11, 1, !dbg !3495
  %13 = sext i1 %12 to i32, !dbg !3470
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3497
  ret i32 %13, !dbg !3497
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_unprotect() local_unnamed_addr #0 section ".ramTEXT" !dbg !3498 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3501
  call void @llvm.dbg.value(metadata i8 0, metadata !3500, metadata !DIExpression()), !dbg !3502
  store i8 0, i8* %1, align 1, !dbg !3503
  call void @llvm.dbg.value(metadata i8* %1, metadata !3500, metadata !DIExpression(DW_OP_deref)), !dbg !3502
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #20, !dbg !3504
  %3 = icmp slt i32 %2, 0, !dbg !3506
  br i1 %3, label %9, label %4, !dbg !3507

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !3508
  call void @llvm.dbg.value(metadata i8 %5, metadata !3500, metadata !DIExpression()), !dbg !3502
  %6 = and i8 %5, 28, !dbg !3510
  %7 = icmp eq i8 %6, 0, !dbg !3511
  br i1 %7, label %9, label %8, !dbg !3512

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 0, metadata !3500, metadata !DIExpression()), !dbg !3502
  store i8 0, i8* %1, align 1, !dbg !3513
  call void @llvm.dbg.value(metadata i8* %1, metadata !3500, metadata !DIExpression(DW_OP_deref)), !dbg !3502
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #20, !dbg !3515
  br label %9, !dbg !3516

9:                                                ; preds = %4, %8, %0
  %10 = phi i32 [ -1, %0 ], [ 0, %8 ], [ 0, %4 ], !dbg !3502
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3517
  ret i32 %10, !dbg !3517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_write_sr(i8* noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !3518 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3520, metadata !DIExpression()), !dbg !3523
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3524
  call void @llvm.dbg.value(metadata i8 1, metadata !3522, metadata !DIExpression()), !dbg !3523
  store i8 1, i8* %2, align 1, !dbg !3525
  call void @llvm.dbg.value(metadata i8* %2, metadata !3522, metadata !DIExpression(DW_OP_deref)), !dbg !3523
  %3 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #18, !dbg !3526
  call void @llvm.dbg.value(metadata i32 %3, metadata !3521, metadata !DIExpression()), !dbg !3523
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #17, !dbg !3527
  ret void, !dbg !3527
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_protect() local_unnamed_addr #0 section ".ramTEXT" !dbg !3528 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3531
  call void @llvm.dbg.value(metadata i8 0, metadata !3530, metadata !DIExpression()), !dbg !3532
  store i8 0, i8* %1, align 1, !dbg !3533
  call void @llvm.dbg.value(metadata i8* %1, metadata !3530, metadata !DIExpression(DW_OP_deref)), !dbg !3532
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #20, !dbg !3534
  %3 = icmp slt i32 %2, 0, !dbg !3536
  br i1 %3, label %7, label %4, !dbg !3537

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !3538
  call void @llvm.dbg.value(metadata i8 %5, metadata !3530, metadata !DIExpression()), !dbg !3532
  %6 = or i8 %5, 28, !dbg !3538
  call void @llvm.dbg.value(metadata i8 %6, metadata !3530, metadata !DIExpression()), !dbg !3532
  store i8 %6, i8* %1, align 1, !dbg !3538
  call void @llvm.dbg.value(metadata i8* %1, metadata !3530, metadata !DIExpression(DW_OP_deref)), !dbg !3532
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #20, !dbg !3539
  br label %7, !dbg !3540

7:                                                ; preds = %0, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %0 ], !dbg !3532
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3541
  ret i32 %8, !dbg !3541
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_enable() local_unnamed_addr #0 section ".ramTEXT" !dbg !3542 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3545
  call void @llvm.dbg.value(metadata i8 6, metadata !3544, metadata !DIExpression()), !dbg !3546
  store i8 6, i8* %1, align 1, !dbg !3547
  call void @llvm.dbg.value(metadata i8* %1, metadata !3544, metadata !DIExpression(DW_OP_deref)), !dbg !3546
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #18, !dbg !3548
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3549
  ret i32 %2, !dbg !3550
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_disable() local_unnamed_addr #0 section ".ramTEXT" !dbg !3551 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3554
  call void @llvm.dbg.value(metadata i8 4, metadata !3553, metadata !DIExpression()), !dbg !3555
  store i8 4, i8* %1, align 1, !dbg !3556
  call void @llvm.dbg.value(metadata i8* %1, metadata !3553, metadata !DIExpression(DW_OP_deref)), !dbg !3555
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #18, !dbg !3557
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #17, !dbg !3558
  ret i32 %2, !dbg !3559
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3560 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3564, metadata !DIExpression()), !dbg !3568
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3569
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3569
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3565, metadata !DIExpression()), !dbg !3570
  call void @llvm.dbg.value(metadata i32 0, metadata !3567, metadata !DIExpression()), !dbg !3568
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #20, !dbg !3571
  store i32 8, i32* @sf_drvier_status, align 4, !dbg !3573
  br label %5, !dbg !3574

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3575
  call void @llvm.dbg.value(metadata i32 %6, metadata !3567, metadata !DIExpression()), !dbg !3568
  %7 = icmp eq i32 %6, -121, !dbg !3577
  br i1 %7, label %5, label %8, !dbg !3578, !llvm.loop !3579

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !3581
  call void @llvm.dbg.value(metadata i32 %9, metadata !3566, metadata !DIExpression()), !dbg !3568
  store i8 -40, i8* %3, align 1, !dbg !3582
  %10 = lshr i32 %0, 16, !dbg !3583
  %11 = trunc i32 %10 to i8, !dbg !3584
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3585
  store i8 %11, i8* %12, align 1, !dbg !3586
  %13 = lshr i32 %0, 8, !dbg !3587
  %14 = trunc i32 %13 to i8, !dbg !3588
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3589
  store i8 %14, i8* %15, align 1, !dbg !3590
  %16 = trunc i32 %0 to i8, !dbg !3591
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3592
  store i8 %16, i8* %17, align 1, !dbg !3593
  tail call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !3594
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #18, !dbg !3595
  call void @restore_interrupt_mask(i32 noundef %9) #18, !dbg !3596
  br label %19, !dbg !3597

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3598
  call void @llvm.dbg.value(metadata i32 %20, metadata !3567, metadata !DIExpression()), !dbg !3568
  %21 = icmp eq i32 %20, -121, !dbg !3600
  br i1 %21, label %19, label %22, !dbg !3601, !llvm.loop !3602

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #20, !dbg !3604
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3605
  ret i32 0, !dbg !3605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector_32k(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3606 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3608, metadata !DIExpression()), !dbg !3612
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3613
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3613
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3609, metadata !DIExpression()), !dbg !3614
  call void @llvm.dbg.value(metadata i32 0, metadata !3611, metadata !DIExpression()), !dbg !3612
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #20, !dbg !3615
  store i32 7, i32* @sf_drvier_status, align 4, !dbg !3617
  br label %5, !dbg !3618

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3619
  call void @llvm.dbg.value(metadata i32 %6, metadata !3611, metadata !DIExpression()), !dbg !3612
  %7 = icmp eq i32 %6, -121, !dbg !3621
  br i1 %7, label %5, label %8, !dbg !3622, !llvm.loop !3623

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !3625
  call void @llvm.dbg.value(metadata i32 %9, metadata !3610, metadata !DIExpression()), !dbg !3612
  store i8 82, i8* %3, align 1, !dbg !3626
  %10 = lshr i32 %0, 16, !dbg !3627
  %11 = trunc i32 %10 to i8, !dbg !3628
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3629
  store i8 %11, i8* %12, align 1, !dbg !3630
  %13 = lshr i32 %0, 8, !dbg !3631
  %14 = trunc i32 %13 to i8, !dbg !3632
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3633
  store i8 %14, i8* %15, align 1, !dbg !3634
  %16 = trunc i32 %0 to i8, !dbg !3635
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3636
  store i8 %16, i8* %17, align 1, !dbg !3637
  tail call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !3638
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #18, !dbg !3639
  br label %19, !dbg !3640

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3641
  call void @llvm.dbg.value(metadata i32 %20, metadata !3611, metadata !DIExpression()), !dbg !3612
  %21 = icmp eq i32 %20, -121, !dbg !3643
  br i1 %21, label %19, label %22, !dbg !3644, !llvm.loop !3645

22:                                               ; preds = %19
  call void @restore_interrupt_mask(i32 noundef %9) #18, !dbg !3647
  %23 = call i32 @flash_write_disable() #20, !dbg !3648
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3649
  ret i32 0, !dbg !3649
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_page(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3650 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3652, metadata !DIExpression()), !dbg !3656
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3657
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3657
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3653, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata i32 0, metadata !3655, metadata !DIExpression()), !dbg !3656
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #20, !dbg !3659
  store i32 6, i32* @sf_drvier_status, align 4, !dbg !3661
  br label %5, !dbg !3662

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3663
  call void @llvm.dbg.value(metadata i32 %6, metadata !3655, metadata !DIExpression()), !dbg !3656
  %7 = icmp eq i32 %6, -121, !dbg !3665
  br i1 %7, label %5, label %8, !dbg !3666, !llvm.loop !3667

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !3669
  call void @llvm.dbg.value(metadata i32 %9, metadata !3654, metadata !DIExpression()), !dbg !3656
  store i8 32, i8* %3, align 1, !dbg !3670
  %10 = lshr i32 %0, 16, !dbg !3671
  %11 = trunc i32 %10 to i8, !dbg !3672
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3673
  store i8 %11, i8* %12, align 1, !dbg !3674
  %13 = lshr i32 %0, 8, !dbg !3675
  %14 = trunc i32 %13 to i8, !dbg !3676
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3677
  store i8 %14, i8* %15, align 1, !dbg !3678
  %16 = trunc i32 %0 to i8, !dbg !3679
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3680
  store i8 %16, i8* %17, align 1, !dbg !3681
  tail call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !3682
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #18, !dbg !3683
  call void @restore_interrupt_mask(i32 noundef %9) #18, !dbg !3684
  br label %19, !dbg !3685

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3686
  call void @llvm.dbg.value(metadata i32 %20, metadata !3655, metadata !DIExpression()), !dbg !3656
  %21 = icmp eq i32 %20, -121, !dbg !3688
  br i1 %21, label %19, label %22, !dbg !3689, !llvm.loop !3690

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #20, !dbg !3692
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3693
  ret i32 0, !dbg !3693
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_chip() local_unnamed_addr #0 section ".ramTEXT" !dbg !3694 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3697
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #17, !dbg !3697
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3696, metadata !DIExpression()), !dbg !3698
  %3 = tail call i32 @flash_wait_ready(i32 noundef 3) #20, !dbg !3699
  store i32 9, i32* @sf_drvier_status, align 4, !dbg !3701
  %4 = tail call i32 @flash_write_enable() #20, !dbg !3702
  %5 = tail call i32 @flash_unprotect() #20, !dbg !3703
  store i8 96, i8* %2, align 1, !dbg !3704
  %6 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef null, i32 noundef 0) #18, !dbg !3705
  %7 = call i32 @flash_wait_ready(i32 noundef 30000) #20, !dbg !3706
  %8 = call i32 @flash_write_disable() #20, !dbg !3708
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3709
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #17, !dbg !3710
  ret i32 0, !dbg !3710
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3711 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3715, metadata !DIExpression()), !dbg !3717
  call void @llvm.dbg.value(metadata i32 %1, metadata !3716, metadata !DIExpression()), !dbg !3717
  %3 = icmp sgt i32 %1, 0
  call void @llvm.dbg.value(metadata i32 %1, metadata !3716, metadata !DIExpression()), !dbg !3717
  call void @llvm.dbg.value(metadata i32 %0, metadata !3715, metadata !DIExpression()), !dbg !3717
  br i1 %3, label %4, label %14, !dbg !3718

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %12, %4 ], [ %1, %2 ]
  %6 = phi i32 [ %11, %4 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3716, metadata !DIExpression()), !dbg !3717
  call void @llvm.dbg.value(metadata i32 %6, metadata !3715, metadata !DIExpression()), !dbg !3717
  %7 = tail call i32 @flash_erase_page(i32 noundef %6) #20, !dbg !3719
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3722
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !3723
  %10 = load i32, i32* %9, align 4, !dbg !3723
  %11 = add i32 %10, %6, !dbg !3724
  call void @llvm.dbg.value(metadata i32 %11, metadata !3715, metadata !DIExpression()), !dbg !3717
  %12 = sub i32 %5, %10, !dbg !3725
  call void @llvm.dbg.value(metadata i32 %12, metadata !3716, metadata !DIExpression()), !dbg !3717
  %13 = icmp sgt i32 %12, 0, !dbg !3726
  br i1 %13, label %4, label %14, !dbg !3727, !llvm.loop !3728

14:                                               ; preds = %4, %2
  ret i32 0, !dbg !3730
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !3731 {
  %4 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3735, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 %1, metadata !3736, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 %2, metadata !3737, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 0, metadata !3740, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 0, metadata !3741, metadata !DIExpression()), !dbg !3749
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 0, !dbg !3750
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %5) #17, !dbg !3750
  call void @llvm.dbg.declare(metadata [5 x i8]* %4, metadata !3743, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.value(metadata i32 %1, metadata !3746, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i8* %0, metadata !3747, metadata !DIExpression()), !dbg !3749
  %6 = icmp eq i32 %2, 0, !dbg !3752
  br i1 %6, label %86, label %7, !dbg !3754

7:                                                ; preds = %3
  %8 = add i32 %2, %1, !dbg !3755
  %9 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3757
  %10 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 3, !dbg !3758
  %11 = load i32, i32* %10, align 4, !dbg !3758
  %12 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 4, !dbg !3759
  %13 = load i32, i32* %12, align 4, !dbg !3759
  %14 = mul i32 %13, %11, !dbg !3760
  %15 = icmp ugt i32 %8, %14, !dbg !3761
  br i1 %15, label %86, label %16, !dbg !3762

16:                                               ; preds = %7
  %17 = tail call i32 @flash_wait_ready(i32 noundef 2) #20, !dbg !3763
  br label %18

18:                                               ; preds = %16, %18
  %19 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %19, metadata !3744, metadata !DIExpression()), !dbg !3749
  %20 = icmp eq i32 %19, -121, !dbg !3767
  br i1 %20, label %18, label %21, !dbg !3768, !llvm.loop !3769

21:                                               ; preds = %18
  store i32 3, i32* @sf_drvier_status, align 4, !dbg !3772
  %22 = tail call i32 @sfc_GetDirectMode() #18, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %22, metadata !3742, metadata !DIExpression()), !dbg !3749
  %23 = icmp eq i32 %22, 2, !dbg !3774
  br i1 %23, label %24, label %29, !dbg !3776

24:                                               ; preds = %21
  %25 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3777
  %26 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %25, i32 0, i32 5, !dbg !3778
  %27 = load i8, i8* %26, align 4, !dbg !3778
  %28 = icmp eq i8 %27, 0, !dbg !3777
  br i1 %28, label %29, label %30, !dbg !3779

29:                                               ; preds = %24, %21
  br label %30

30:                                               ; preds = %24, %29
  %31 = phi i8 [ 2, %29 ], [ %27, %24 ], !dbg !3780
  store i8 %31, i8* %5, align 1, !dbg !3780
  call void @llvm.dbg.value(metadata i32 undef, metadata !3738, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i8* %0, metadata !3747, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 %1, metadata !3746, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 %2, metadata !3737, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 0, metadata !3741, metadata !DIExpression()), !dbg !3749
  %32 = icmp sgt i32 %2, 0, !dbg !3781
  br i1 %32, label %33, label %41, !dbg !3782

33:                                               ; preds = %30
  %34 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !3783
  %35 = urem i32 %1, %34, !dbg !3784
  call void @llvm.dbg.value(metadata i32 %35, metadata !3738, metadata !DIExpression()), !dbg !3749
  %36 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 1
  %37 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 2
  %38 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 3
  %39 = add i32 %1, -1
  %40 = getelementptr inbounds i8, i8* %0, i32 -1
  br label %43, !dbg !3782

41:                                               ; preds = %73, %30
  %42 = phi i32 [ 0, %30 ], [ %74, %73 ], !dbg !3749
  br label %81, !dbg !3785

43:                                               ; preds = %77, %33
  %44 = phi i32 [ %34, %33 ], [ %80, %77 ], !dbg !3786
  %45 = phi i8* [ %0, %33 ], [ %78, %77 ]
  %46 = phi i32 [ %1, %33 ], [ %79, %77 ]
  %47 = phi i32 [ %2, %33 ], [ %75, %77 ]
  %48 = phi i32 [ %35, %33 ], [ 0, %77 ]
  %49 = phi i32 [ 0, %33 ], [ %74, %77 ]
  call void @llvm.dbg.value(metadata i8* %45, metadata !3747, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 %46, metadata !3746, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 %47, metadata !3737, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 %48, metadata !3738, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 %49, metadata !3741, metadata !DIExpression()), !dbg !3749
  %50 = sub i32 %44, %48, !dbg !3786
  %51 = icmp ugt i32 %47, %50, !dbg !3786
  %52 = select i1 %51, i32 %50, i32 %47, !dbg !3786
  call void @llvm.dbg.value(metadata i32 %52, metadata !3739, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i32 0, metadata !3738, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata i8* %45, metadata !3748, metadata !DIExpression()), !dbg !3749
  %53 = lshr i32 %46, 16, !dbg !3788
  %54 = trunc i32 %53 to i8, !dbg !3789
  store i8 %54, i8* %36, align 1, !dbg !3790
  %55 = lshr i32 %46, 8, !dbg !3791
  %56 = trunc i32 %55 to i8, !dbg !3792
  store i8 %56, i8* %37, align 1, !dbg !3793
  %57 = trunc i32 %46 to i8, !dbg !3794
  store i8 %57, i8* %38, align 1, !dbg !3795
  %58 = call i32 @flash_wait_ready(i32 noundef 3) #20, !dbg !3796
  %59 = call i32 @flash_write_enable() #20, !dbg !3798
  %60 = call i32 @save_and_set_interrupt_mask() #18, !dbg !3799
  call void @llvm.dbg.value(metadata i32 %60, metadata !3745, metadata !DIExpression()), !dbg !3749
  call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !3800
  %61 = call i32 @sfc_write(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %45, i32 noundef %52) #18, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %61, metadata !3740, metadata !DIExpression()), !dbg !3749
  call void @restore_interrupt_mask(i32 noundef %60) #18, !dbg !3802
  br label %62, !dbg !3803

62:                                               ; preds = %62, %43
  %63 = load i8, i8* %40, align 1, !dbg !3804
  %64 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef null, i32 noundef %39, i8 noundef zeroext %63) #18, !dbg !3806
  call void @llvm.dbg.value(metadata i32 %64, metadata !3744, metadata !DIExpression()), !dbg !3749
  %65 = icmp eq i32 %64, 0, !dbg !3807
  br i1 %65, label %62, label %66, !dbg !3808, !llvm.loop !3809

66:                                               ; preds = %62
  %67 = icmp sgt i32 %61, 0, !dbg !3811
  br i1 %67, label %68, label %73, !dbg !3813

68:                                               ; preds = %66
  %69 = add nsw i32 %61, %49, !dbg !3814
  call void @llvm.dbg.value(metadata i32 %69, metadata !3741, metadata !DIExpression()), !dbg !3749
  %70 = icmp ult i32 %61, %52, !dbg !3816
  br i1 %70, label %71, label %73, !dbg !3818

71:                                               ; preds = %68
  %72 = call i32 @flash_write_disable() #20, !dbg !3819
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 942, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.flash_write, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0)) #19, !dbg !3821
  unreachable, !dbg !3821

73:                                               ; preds = %68, %66
  %74 = phi i32 [ %69, %68 ], [ %49, %66 ], !dbg !3749
  call void @llvm.dbg.value(metadata i32 %74, metadata !3741, metadata !DIExpression()), !dbg !3749
  %75 = sub i32 %47, %52, !dbg !3822
  call void @llvm.dbg.value(metadata i32 %75, metadata !3737, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.value(metadata !DIArgList(i32 %52, i32 %46), metadata !3746, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3749
  call void @llvm.dbg.value(metadata !DIArgList(i8* %45, i32 %52), metadata !3747, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3749
  call void @llvm.dbg.value(metadata i32 0, metadata !3738, metadata !DIExpression()), !dbg !3749
  %76 = icmp sgt i32 %75, 0, !dbg !3781
  br i1 %76, label %77, label %41, !dbg !3782, !llvm.loop !3823

77:                                               ; preds = %73
  %78 = getelementptr inbounds i8, i8* %45, i32 %52, !dbg !3825
  call void @llvm.dbg.value(metadata i8* %78, metadata !3747, metadata !DIExpression()), !dbg !3749
  %79 = add i32 %52, %46, !dbg !3826
  call void @llvm.dbg.value(metadata i32 %79, metadata !3746, metadata !DIExpression()), !dbg !3749
  %80 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !3786
  br label %43, !dbg !3782

81:                                               ; preds = %41, %81
  %82 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !3827
  call void @llvm.dbg.value(metadata i32 %82, metadata !3744, metadata !DIExpression()), !dbg !3749
  %83 = icmp eq i32 %82, -121, !dbg !3829
  br i1 %83, label %81, label %84, !dbg !3830, !llvm.loop !3831

84:                                               ; preds = %81
  %85 = call i32 @flash_write_disable() #20, !dbg !3833
  br label %86, !dbg !3834

86:                                               ; preds = %7, %3, %84
  %87 = phi i32 [ %42, %84 ], [ 0, %3 ], [ -1, %7 ], !dbg !3749
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %5) #17, !dbg !3835
  ret i32 %87, !dbg !3835
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write_security_crc(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3836 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3838, metadata !DIExpression()), !dbg !3842
  call void @llvm.dbg.value(metadata i32 4, metadata !3839, metadata !DIExpression()), !dbg !3842
  call void @llvm.dbg.value(metadata i32 0, metadata !3840, metadata !DIExpression()), !dbg !3842
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3843
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3843
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3841, metadata !DIExpression()), !dbg !3844
  %4 = and i32 %0, 4095, !dbg !3845
  %5 = icmp eq i32 %4, 0, !dbg !3845
  br i1 %5, label %6, label %29, !dbg !3847

6:                                                ; preds = %1
  %7 = add nuw i32 %0, 4, !dbg !3848
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3850
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !3851
  %10 = load i32, i32* %9, align 4, !dbg !3851
  %11 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 4, !dbg !3852
  %12 = load i32, i32* %11, align 4, !dbg !3852
  %13 = mul i32 %12, %10, !dbg !3853
  %14 = icmp ugt i32 %7, %13, !dbg !3854
  br i1 %14, label %29, label %15, !dbg !3855

15:                                               ; preds = %6
  store i32 5, i32* @sf_drvier_status, align 4, !dbg !3856
  %16 = tail call i32 @flash_wait_ready(i32 noundef 2) #20, !dbg !3857
  %17 = tail call i32 @flash_erase_page(i32 noundef %0) #20, !dbg !3859
  store i8 2, i8* %3, align 1, !dbg !3860
  %18 = lshr i32 %0, 16, !dbg !3861
  %19 = trunc i32 %18 to i8, !dbg !3862
  %20 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3863
  store i8 %19, i8* %20, align 1, !dbg !3864
  %21 = lshr i32 %0, 8, !dbg !3865
  %22 = trunc i32 %21 to i8, !dbg !3866
  %23 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3867
  store i8 %22, i8* %23, align 1, !dbg !3868
  %24 = trunc i32 %0 to i8, !dbg !3869
  %25 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3870
  store i8 %24, i8* %25, align 1, !dbg !3871
  %26 = tail call i32 @flash_write_enable() #20, !dbg !3872
  %27 = tail call i32 @flash_unprotect() #20, !dbg !3873
  %28 = call i32 @sfc_security_write_crc(i8* noundef nonnull %3, i32 noundef 4) #18, !dbg !3874
  call void @llvm.dbg.value(metadata i32 %28, metadata !3840, metadata !DIExpression()), !dbg !3842
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3875
  br label %29, !dbg !3876

29:                                               ; preds = %6, %1, %15
  %30 = phi i32 [ %28, %15 ], [ -1, %1 ], [ -1, %6 ], !dbg !3842
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #17, !dbg !3877
  ret i32 %30, !dbg !3877
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !3878 {
  %4 = alloca [4096 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3880, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %1, metadata !3881, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %2, metadata !3882, metadata !DIExpression()), !dbg !3897
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 0, !dbg !3898
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %5) #17, !dbg !3898
  call void @llvm.dbg.declare(metadata [4096 x i8]* %4, metadata !3883, metadata !DIExpression()), !dbg !3899
  call void @llvm.dbg.value(metadata i32 4096, metadata !3887, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 4095, metadata !3888, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i8* %0, metadata !3880, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %1, metadata !3881, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %2, metadata !3882, metadata !DIExpression()), !dbg !3897
  %6 = icmp sgt i32 %2, 0, !dbg !3900
  br i1 %6, label %7, label %43, !dbg !3901

7:                                                ; preds = %3, %37
  %8 = phi i8* [ %40, %37 ], [ %0, %3 ]
  %9 = phi i32 [ %41, %37 ], [ %1, %3 ]
  %10 = phi i32 [ %38, %37 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !3880, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %9, metadata !3881, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %10, metadata !3882, metadata !DIExpression()), !dbg !3897
  %11 = and i32 %9, 4095, !dbg !3902
  %12 = icmp ne i32 %11, 0, !dbg !3902
  %13 = icmp ult i32 %10, 4096
  %14 = select i1 %12, i1 true, i1 %13, !dbg !3903
  br i1 %14, label %15, label %30, !dbg !3903

15:                                               ; preds = %7
  %16 = and i32 %9, -4096, !dbg !3904
  call void @llvm.dbg.value(metadata i32 %16, metadata !3893, metadata !DIExpression()), !dbg !3905
  %17 = call i32 @flash_direct_read_nocache(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #20, !dbg !3906
  %18 = icmp eq i32 %17, 4096, !dbg !3908
  br i1 %18, label %19, label %45, !dbg !3909

19:                                               ; preds = %15
  store i32 4, i32* @sf_drvier_status, align 4, !dbg !3910
  call void @llvm.dbg.value(metadata i32 %11, metadata !3889, metadata !DIExpression()), !dbg !3905
  %20 = sub nuw nsw i32 4096, %11, !dbg !3911
  %21 = icmp ugt i32 %10, %20, !dbg !3911
  %22 = select i1 %21, i32 %20, i32 %10, !dbg !3911
  call void @llvm.dbg.value(metadata i32 %22, metadata !3894, metadata !DIExpression()), !dbg !3905
  %23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 %11, !dbg !3912
  %24 = call i8* @memcpy(i8* noundef nonnull %23, i8* noundef %8, i32 noundef %22) #18, !dbg !3913
  %25 = call i32 @flash_erase(i32 noundef %16, i32 noundef 4096) #20, !dbg !3914
  %26 = call i32 @flash_write(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #20, !dbg !3916
  %27 = icmp eq i32 %26, 4096, !dbg !3918
  br i1 %27, label %28, label %45, !dbg !3919

28:                                               ; preds = %19
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %22), metadata !3880, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3897
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %22), metadata !3881, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3897
  %29 = sub nsw i32 %10, %22, !dbg !3920
  call void @llvm.dbg.value(metadata i32 %29, metadata !3882, metadata !DIExpression()), !dbg !3897
  br label %37

30:                                               ; preds = %7
  %31 = and i32 %10, -4096, !dbg !3921
  call void @llvm.dbg.value(metadata i32 %31, metadata !3895, metadata !DIExpression()), !dbg !3922
  %32 = call i32 @flash_erase(i32 noundef %9, i32 noundef %31) #20, !dbg !3923
  %33 = call i32 @flash_write(i8* noundef %8, i32 noundef %9, i32 noundef %31) #20, !dbg !3925
  %34 = icmp eq i32 %33, %31, !dbg !3927
  br i1 %34, label %35, label %43, !dbg !3928

35:                                               ; preds = %30
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %31), metadata !3880, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3897
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %31), metadata !3881, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3897
  %36 = and i32 %10, 4095, !dbg !3929
  call void @llvm.dbg.value(metadata i8* %8, metadata !3880, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %9, metadata !3881, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %10, metadata !3882, metadata !DIExpression()), !dbg !3897
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %29, %28 ], [ %36, %35 ]
  %39 = phi i32 [ %22, %28 ], [ %31, %35 ]
  %40 = getelementptr inbounds i8, i8* %8, i32 %39, !dbg !3930
  %41 = add i32 %39, %9, !dbg !3930
  call void @llvm.dbg.value(metadata i8* %40, metadata !3880, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %41, metadata !3881, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.value(metadata i32 %38, metadata !3882, metadata !DIExpression()), !dbg !3897
  %42 = icmp sgt i32 %38, 0, !dbg !3900
  br i1 %42, label %7, label %43, !dbg !3901, !llvm.loop !3931

43:                                               ; preds = %37, %30, %3
  %44 = phi i32 [ 0, %3 ], [ -1, %30 ], [ 0, %37 ]
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3897
  br label %45, !dbg !3933

45:                                               ; preds = %19, %15, %43
  %46 = phi i32 [ %44, %43 ], [ -2, %15 ], [ -4, %19 ], !dbg !3897
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %5) #17, !dbg !3933
  ret i32 %46, !dbg !3933
}

; Function Attrs: noinline nounwind optsize
declare dso_local i32 @flash_direct_read_nocache(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #0 section ".ramTEXT"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @query_spi_flash_status() local_unnamed_addr #9 section ".ramTEXT" !dbg !3934 {
  %1 = load i32, i32* @sf_drvier_status, align 4, !dbg !3938
  switch i32 %1, label %3 [
    i32 -1, label %7
    i32 0, label %2
  ], !dbg !3940

2:                                                ; preds = %0
  br label %7, !dbg !3941

3:                                                ; preds = %0
  %4 = add i32 %1, -3, !dbg !3944
  %5 = icmp ult i32 %4, 3, !dbg !3944
  %6 = select i1 %5, i32 1, i32 2, !dbg !3946
  br label %7, !dbg !3946

7:                                                ; preds = %3, %0, %2
  %8 = phi i32 [ 0, %2 ], [ %1, %0 ], [ %6, %3 ], !dbg !3947
  ret i32 %8, !dbg !3948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_count() local_unnamed_addr #0 !dbg !3949 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 2) #18, !dbg !3950
  ret i32 %1, !dbg !3951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time(i32 noundef %0) local_unnamed_addr #0 !dbg !3952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3954, metadata !DIExpression()), !dbg !3957
  %2 = tail call i32 @get_current_count() #20, !dbg !3958
  %3 = add i32 %2, %0, !dbg !3959
  %4 = xor i32 %3, -1, !dbg !3960
  call void @llvm.dbg.value(metadata i32 %3, metadata !3955, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3957
  %5 = tail call i32 @get_current_count() #20, !dbg !3961
  call void @llvm.dbg.value(metadata i32 %5, metadata !3956, metadata !DIExpression()), !dbg !3957
  %6 = add i32 %5, %4, !dbg !3962
  %7 = icmp slt i32 %6, 0, !dbg !3962
  br i1 %7, label %8, label %12, !dbg !3963

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_count() #20, !dbg !3964
  call void @llvm.dbg.value(metadata i32 %9, metadata !3956, metadata !DIExpression()), !dbg !3957
  %10 = add i32 %9, %4, !dbg !3962
  %11 = icmp slt i32 %10, 0, !dbg !3962
  br i1 %11, label %8, label %12, !dbg !3963, !llvm.loop !3966

12:                                               ; preds = %8, %1
  ret void, !dbg !3968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time_for_gpt4(i32 noundef %0) local_unnamed_addr #0 !dbg !3969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3971, metadata !DIExpression()), !dbg !3974
  %2 = tail call i32 @get_current_gpt4_count() #20, !dbg !3975
  %3 = add i32 %2, %0, !dbg !3976
  %4 = xor i32 %3, -1, !dbg !3977
  call void @llvm.dbg.value(metadata i32 %3, metadata !3972, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3974
  %5 = tail call i32 @get_current_gpt4_count() #20, !dbg !3978
  call void @llvm.dbg.value(metadata i32 %5, metadata !3973, metadata !DIExpression()), !dbg !3974
  %6 = add i32 %5, %4, !dbg !3979
  %7 = icmp slt i32 %6, 0, !dbg !3979
  br i1 %7, label %8, label %12, !dbg !3980

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_gpt4_count() #20, !dbg !3981
  call void @llvm.dbg.value(metadata i32 %9, metadata !3973, metadata !DIExpression()), !dbg !3974
  %10 = add i32 %9, %4, !dbg !3979
  %11 = icmp slt i32 %10, 0, !dbg !3979
  br i1 %11, label %8, label %12, !dbg !3980, !llvm.loop !3983

12:                                               ; preds = %8, %1
  ret void, !dbg !3985
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_gpt4_count() local_unnamed_addr #0 !dbg !3986 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 4) #18, !dbg !3987
  ret i32 %1, !dbg !3988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3991, metadata !DIExpression()), !dbg !3993
  %2 = shl i32 %0, 5, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %2, metadata !3992, metadata !DIExpression()), !dbg !3993
  %3 = mul i32 %0, 7, !dbg !3995
  %4 = udiv i32 %3, 10, !dbg !3996
  %5 = add i32 %4, %2, !dbg !3997
  call void @llvm.dbg.value(metadata i32 %5, metadata !3992, metadata !DIExpression()), !dbg !3993
  %6 = mul i32 %0, 6, !dbg !3998
  %7 = udiv i32 %6, 100, !dbg !3999
  %8 = add i32 %5, %7, !dbg !4000
  call void @llvm.dbg.value(metadata i32 %8, metadata !3992, metadata !DIExpression()), !dbg !3993
  %9 = shl i32 %0, 3, !dbg !4001
  %10 = udiv i32 %9, 1000, !dbg !4002
  %11 = add i32 %8, %10, !dbg !4003
  call void @llvm.dbg.value(metadata i32 %11, metadata !3992, metadata !DIExpression()), !dbg !3993
  tail call void @delay_time(i32 noundef %11) #20, !dbg !4004
  ret void, !dbg !4005
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !4006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4008, metadata !DIExpression()), !dbg !4011
  %2 = tail call i32 @top_mcu_freq_get() #18, !dbg !4012
  %3 = udiv i32 %2, 1000000, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %3, metadata !4010, metadata !DIExpression()), !dbg !4011
  %4 = mul i32 %3, %0, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %4, metadata !4009, metadata !DIExpression()), !dbg !4011
  tail call void @delay_time_for_gpt4(i32 noundef %4) #20, !dbg !4015
  ret void, !dbg !4016
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvTMR_init(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2, void ()* noundef %3) local_unnamed_addr #0 !dbg !4017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4021, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata i32 %1, metadata !4022, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata i1 %2, metadata !4023, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4025
  call void @llvm.dbg.value(metadata void ()* %3, metadata !4024, metadata !DIExpression()), !dbg !4025
  tail call void @GPT_Stop(i32 noundef %0) #18, !dbg !4026
  %5 = icmp eq i32 %0, 0, !dbg !4027
  br i1 %5, label %6, label %7, !dbg !4029

6:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !4030
  br label %8, !dbg !4032

7:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !4033
  br label %8

8:                                                ; preds = %7, %6
  %9 = phi i32 [ %0, %7 ], [ 0, %6 ]
  tail call void @GPT_init(i32 noundef %9, i32 noundef 1, void ()* noundef %3) #18, !dbg !4035
  tail call void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) #18, !dbg !4036
  ret void, !dbg !4037
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !4038 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4040, metadata !DIExpression()), !dbg !4041
  tail call void @GPT_Start(i32 noundef %0) #18, !dbg !4042
  ret void, !dbg !4043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Stop(i32 noundef %0) local_unnamed_addr #0 !dbg !4044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4046, metadata !DIExpression()), !dbg !4047
  tail call void @GPT_Stop(i32 noundef %0) #18, !dbg !4048
  ret void, !dbg !4049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT2Init() local_unnamed_addr #0 !dbg !4050 {
  tail call void @CM4_GPT2Init() #18, !dbg !4051
  ret void, !dbg !4052
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT4Init() local_unnamed_addr #0 !dbg !4053 {
  tail call void @CM4_GPT4Init() #18, !dbg !4054
  ret void, !dbg !4055
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @clear_TMR_INT_status_bit(i32 noundef %0) local_unnamed_addr #5 !dbg !4056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4058, metadata !DIExpression()), !dbg !4059
  switch i32 %0, label %5 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !4060

2:                                                ; preds = %1
  br label %3, !dbg !4061

3:                                                ; preds = %1, %2
  %4 = phi i32 [ 2, %2 ], [ 1, %1 ]
  store volatile i32 %4, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !4059
  br label %5, !dbg !4064

5:                                                ; preds = %3, %1
  ret void, !dbg !4064
}

; Function Attrs: noinline nounwind optsize
define dso_local void @top_xtal_init() local_unnamed_addr #0 !dbg !4065 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4067, metadata !DIExpression()), !dbg !4069
  %1 = load volatile i32, i32* inttoptr (i32 -2097118784 to i32*), align 64, !dbg !4070
  call void @llvm.dbg.value(metadata i32 %1, metadata !4068, metadata !DIExpression()), !dbg !4069
  %2 = lshr i32 %1, 13, !dbg !4071
  %3 = and i32 %2, 7, !dbg !4072
  call void @llvm.dbg.value(metadata i32 %3, metadata !4068, metadata !DIExpression()), !dbg !4069
  %4 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !4073
  call void @llvm.dbg.value(metadata i32 %4, metadata !4067, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.value(metadata i32 %4, metadata !4067, metadata !DIExpression(DW_OP_constu, 18446744073709549568, DW_OP_and, DW_OP_stack_value)), !dbg !4069
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init, i32 0, i32 %3, !dbg !4074
  %6 = load i32, i32* %5, align 4, !dbg !4074
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init.1, i32 0, i32 %3, !dbg !4074
  %8 = load i32, i32* %7, align 4, !dbg !4074
  %9 = and i32 %4, -2048, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %9, metadata !4067, metadata !DIExpression()), !dbg !4069
  store i32 %6, i32* @gXtalFreq, align 4, !dbg !4076
  %10 = or i32 %9, %8, !dbg !4076
  call void @llvm.dbg.value(metadata i32 %10, metadata !4067, metadata !DIExpression()), !dbg !4069
  store volatile i32 %10, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !4078
  %11 = load i32, i32* @gXtalFreq, align 4, !dbg !4079
  store i32 %11, i32* @gCpuFrequency, align 4, !dbg !4080
  tail call void @SystemCoreClockUpdate() #18, !dbg !4081
  %12 = load i32, i32* @SystemCoreClock, align 4, !dbg !4082
  %13 = udiv i32 %12, 1000, !dbg !4083
  %14 = tail call i32 @SysTick_Set(i32 noundef %13) #18, !dbg !4084
  ret void, !dbg !4085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_xtal_freq_get() local_unnamed_addr #9 !dbg !4086 {
  %1 = load i32, i32* @gXtalFreq, align 4, !dbg !4087
  ret i32 %1, !dbg !4088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_mcu_freq_get() local_unnamed_addr #9 !dbg !4089 {
  %1 = load i32, i32* @gCpuFrequency, align 4, !dbg !4090
  ret i32 %1, !dbg !4091
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON() local_unnamed_addr #10 !dbg !4092 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4096
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4096
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4094, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4095, metadata !DIExpression()), !dbg !4098
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4099
  store volatile i32 %3, i32* %1, align 4, !dbg !4100
  %4 = load volatile i32, i32* %1, align 4, !dbg !4101
  %5 = lshr i32 %4, 28, !dbg !4102
  %6 = and i32 %5, 3, !dbg !4103
  store volatile i32 %6, i32* %1, align 4, !dbg !4104
  %7 = load volatile i32, i32* %1, align 4, !dbg !4105
  %8 = icmp eq i32 %7, 0, !dbg !4107
  br i1 %8, label %9, label %22, !dbg !4108

9:                                                ; preds = %0
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4109
  store volatile i32 %10, i32* %1, align 4, !dbg !4111
  %11 = load volatile i32, i32* %1, align 4, !dbg !4112
  %12 = and i32 %11, -16777217, !dbg !4113
  store volatile i32 %12, i32* %1, align 4, !dbg !4114
  %13 = load volatile i32, i32* %1, align 4, !dbg !4115
  %14 = or i32 %13, 536870912, !dbg !4116
  store volatile i32 %14, i32* %1, align 4, !dbg !4117
  %15 = load volatile i32, i32* %1, align 4, !dbg !4118
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %15) #20, !dbg !4119
  br label %16, !dbg !4120

16:                                               ; preds = %16, %9
  %17 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4121
  store volatile i32 %17, i32* %1, align 4, !dbg !4123
  %18 = load volatile i32, i32* %1, align 4, !dbg !4124
  %19 = and i32 %18, 134217728, !dbg !4125
  store volatile i32 %19, i32* %1, align 4, !dbg !4126
  %20 = load volatile i32, i32* %1, align 4, !dbg !4127
  %21 = icmp eq i32 %20, 0, !dbg !4128
  br i1 %21, label %16, label %22, !dbg !4129, !llvm.loop !4130

22:                                               ; preds = %16, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4132
  ret void, !dbg !4132
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @cmnReadRegister32(i8* noundef %0) unnamed_addr #8 !dbg !4133 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4140, metadata !DIExpression()), !dbg !4141
  %2 = bitcast i8* %0 to i32*, !dbg !4142
  %3 = load volatile i32, i32* %2, align 4, !dbg !4143
  ret i32 %3, !dbg !4144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @cmnWriteRegister32(i8* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4145 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4149, metadata !DIExpression()), !dbg !4151
  call void @llvm.dbg.value(metadata i32 %1, metadata !4150, metadata !DIExpression()), !dbg !4151
  %3 = bitcast i8* %0 to i32*, !dbg !4152
  store volatile i32 %1, i32* %3, align 4, !dbg !4153
  ret void, !dbg !4154
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON_PLL2ON(i8 noundef zeroext %0) local_unnamed_addr #10 !dbg !4155 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !4159, metadata !DIExpression()), !dbg !4162
  %3 = bitcast i32* %2 to i8*, !dbg !4163
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4163
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4160, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4161, metadata !DIExpression()), !dbg !4162
  %4 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4165
  store volatile i32 %4, i32* %2, align 4, !dbg !4166
  %5 = load volatile i32, i32* %2, align 4, !dbg !4167
  %6 = lshr i32 %5, 28, !dbg !4168
  %7 = and i32 %6, 3, !dbg !4169
  store volatile i32 %7, i32* %2, align 4, !dbg !4170
  %8 = load volatile i32, i32* %2, align 4, !dbg !4171
  %9 = icmp eq i32 %8, 3, !dbg !4173
  br i1 %9, label %38, label %10, !dbg !4174

10:                                               ; preds = %1
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4175
  store volatile i32 %11, i32* %2, align 4, !dbg !4177
  %12 = load volatile i32, i32* %2, align 4, !dbg !4178
  %13 = and i32 %12, -262145, !dbg !4179
  store volatile i32 %13, i32* %2, align 4, !dbg !4180
  %14 = load volatile i32, i32* %2, align 4, !dbg !4181
  %15 = and i32 %14, -16777217, !dbg !4182
  store volatile i32 %15, i32* %2, align 4, !dbg !4183
  %16 = load volatile i32, i32* %2, align 4, !dbg !4184
  store volatile i32 %16, i32* %2, align 4, !dbg !4185
  %17 = load volatile i32, i32* %2, align 4, !dbg !4186
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %17) #20, !dbg !4187
  %18 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4188
  store volatile i32 %18, i32* %2, align 4, !dbg !4189
  %19 = load volatile i32, i32* %2, align 4, !dbg !4190
  %20 = and i32 %19, -805306369, !dbg !4191
  store volatile i32 %20, i32* %2, align 4, !dbg !4192
  %21 = load volatile i32, i32* %2, align 4, !dbg !4193
  %22 = and i32 %21, -16777217, !dbg !4194
  store volatile i32 %22, i32* %2, align 4, !dbg !4195
  %23 = load volatile i32, i32* %2, align 4, !dbg !4196
  %24 = or i32 %23, 805306368, !dbg !4197
  store volatile i32 %24, i32* %2, align 4, !dbg !4198
  %25 = load volatile i32, i32* %2, align 4, !dbg !4199
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %25) #20, !dbg !4200
  br label %26, !dbg !4201

26:                                               ; preds = %26, %10
  %27 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4202
  store volatile i32 %27, i32* %2, align 4, !dbg !4204
  %28 = load volatile i32, i32* %2, align 4, !dbg !4205
  %29 = and i32 %28, 67108864, !dbg !4206
  store volatile i32 %29, i32* %2, align 4, !dbg !4207
  %30 = load volatile i32, i32* %2, align 4, !dbg !4208
  %31 = icmp eq i32 %30, 0, !dbg !4209
  br i1 %31, label %26, label %32, !dbg !4210, !llvm.loop !4211

32:                                               ; preds = %26
  %33 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4213
  store volatile i32 %33, i32* %2, align 4, !dbg !4214
  %34 = load volatile i32, i32* %2, align 4, !dbg !4215
  %35 = and i32 %34, -262145, !dbg !4216
  store volatile i32 %35, i32* %2, align 4, !dbg !4217
  %36 = load volatile i32, i32* %2, align 4, !dbg !4218
  %37 = and i32 %36, -16777217, !dbg !4219
  store volatile i32 %37, i32* %2, align 4, !dbg !4220
  br label %38, !dbg !4221

38:                                               ; preds = %32, %1
  %39 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4222
  store volatile i32 %39, i32* %2, align 4, !dbg !4223
  %40 = icmp eq i8 %0, 0, !dbg !4224
  %41 = load volatile i32, i32* %2, align 4, !dbg !4226
  br i1 %40, label %44, label %42, !dbg !4227

42:                                               ; preds = %38
  %43 = or i32 %41, 262144, !dbg !4228
  store volatile i32 %43, i32* %2, align 4, !dbg !4230
  br label %45, !dbg !4231

44:                                               ; preds = %38
  store volatile i32 %41, i32* %2, align 4, !dbg !4232
  br label %45

45:                                               ; preds = %44, %42
  %46 = load volatile i32, i32* %2, align 4, !dbg !4234
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %46) #20, !dbg !4235
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4236
  ret void, !dbg !4236
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1OFF_PLL2OFF() local_unnamed_addr #10 !dbg !4237 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4241
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4241
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4239, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4240, metadata !DIExpression()), !dbg !4243
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4244
  store volatile i32 %3, i32* %1, align 4, !dbg !4245
  %4 = load volatile i32, i32* %1, align 4, !dbg !4246
  %5 = and i32 %4, -805306369, !dbg !4247
  store volatile i32 %5, i32* %1, align 4, !dbg !4248
  %6 = load volatile i32, i32* %1, align 4, !dbg !4249
  %7 = and i32 %6, -16777217, !dbg !4250
  store volatile i32 %7, i32* %1, align 4, !dbg !4251
  %8 = load volatile i32, i32* %1, align 4, !dbg !4252
  store volatile i32 %8, i32* %1, align 4, !dbg !4253
  %9 = load volatile i32, i32* %1, align 4, !dbg !4254
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %9) #20, !dbg !4255
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #20, !dbg !4256
  store volatile i32 %10, i32* %1, align 4, !dbg !4257
  %11 = load volatile i32, i32* %1, align 4, !dbg !4258
  %12 = and i32 %11, -262145, !dbg !4259
  store volatile i32 %12, i32* %1, align 4, !dbg !4260
  %13 = load volatile i32, i32* %1, align 4, !dbg !4261
  %14 = and i32 %13, -16777217, !dbg !4262
  store volatile i32 %14, i32* %1, align 4, !dbg !4263
  %15 = load volatile i32, i32* %1, align 4, !dbg !4264
  store volatile i32 %15, i32* %1, align 4, !dbg !4265
  %16 = load volatile i32, i32* %1, align 4, !dbg !4266
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %16) #20, !dbg !4267
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4268
  ret void, !dbg !4268
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureToXtal() local_unnamed_addr #0 !dbg !4269 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4273
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4273
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4271, metadata !DIExpression()), !dbg !4274
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4272, metadata !DIExpression()), !dbg !4275
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4276
  store volatile i32 %3, i32* %1, align 4, !dbg !4277
  %4 = load volatile i32, i32* %1, align 4, !dbg !4278
  %5 = and i32 %4, -8, !dbg !4279
  store volatile i32 %5, i32* %1, align 4, !dbg !4280
  %6 = load volatile i32, i32* %1, align 4, !dbg !4281
  store volatile i32 %6, i32* %1, align 4, !dbg !4282
  %7 = load volatile i32, i32* %1, align 4, !dbg !4283
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #20, !dbg !4284
  %8 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4285
  store volatile i32 %8, i32* %1, align 4, !dbg !4286
  %9 = load volatile i32, i32* %1, align 4, !dbg !4287
  %10 = and i32 %9, -49153, !dbg !4288
  store volatile i32 %10, i32* %1, align 4, !dbg !4289
  %11 = load volatile i32, i32* %1, align 4, !dbg !4290
  store volatile i32 %11, i32* %1, align 4, !dbg !4291
  %12 = load volatile i32, i32* %1, align 4, !dbg !4292
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %12) #20, !dbg !4293
  br label %13, !dbg !4294

13:                                               ; preds = %13, %0
  %14 = load volatile i32, i32* %1, align 4, !dbg !4295
  %15 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4296
  %16 = icmp eq i32 %14, %15, !dbg !4297
  br i1 %16, label %17, label %13, !dbg !4294, !llvm.loop !4298

17:                                               ; preds = %13
  %18 = tail call i32 @top_xtal_freq_get() #20, !dbg !4300
  store i32 %18, i32* @gCpuFrequency, align 4, !dbg !4301
  tail call void @SystemCoreClockUpdate() #18, !dbg !4302
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !4303
  %20 = udiv i32 %19, 1000, !dbg !4304
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #18, !dbg !4305
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4306
  ret void, !dbg !4306
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo192M() local_unnamed_addr #0 !dbg !4307 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4311
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4311
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4309, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4310, metadata !DIExpression()), !dbg !4313
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 1) #20, !dbg !4314
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4315
  store volatile i32 %3, i32* %1, align 4, !dbg !4316
  %4 = load volatile i32, i32* %1, align 4, !dbg !4317
  %5 = and i32 %4, -49153, !dbg !4318
  store volatile i32 %5, i32* %1, align 4, !dbg !4319
  %6 = load volatile i32, i32* %1, align 4, !dbg !4320
  %7 = or i32 %6, 16384, !dbg !4321
  store volatile i32 %7, i32* %1, align 4, !dbg !4322
  %8 = load volatile i32, i32* %1, align 4, !dbg !4323
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #20, !dbg !4324
  br label %9, !dbg !4325

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !4326
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4327
  %12 = icmp eq i32 %10, %11, !dbg !4328
  br i1 %12, label %13, label %9, !dbg !4325, !llvm.loop !4329

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4331
  store volatile i32 %14, i32* %1, align 4, !dbg !4332
  %15 = load volatile i32, i32* %1, align 4, !dbg !4333
  %16 = and i32 %15, -1009, !dbg !4334
  store volatile i32 %16, i32* %1, align 4, !dbg !4335
  %17 = load volatile i32, i32* %1, align 4, !dbg !4336
  %18 = or i32 %17, 128, !dbg !4337
  store volatile i32 %18, i32* %1, align 4, !dbg !4338
  %19 = load volatile i32, i32* %1, align 4, !dbg !4339
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #20, !dbg !4340
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4341
  store volatile i32 %20, i32* %1, align 4, !dbg !4342
  %21 = load volatile i32, i32* %1, align 4, !dbg !4343
  %22 = and i32 %21, -8, !dbg !4344
  store volatile i32 %22, i32* %1, align 4, !dbg !4345
  %23 = load volatile i32, i32* %1, align 4, !dbg !4346
  %24 = or i32 %23, 4, !dbg !4347
  store volatile i32 %24, i32* %1, align 4, !dbg !4348
  %25 = load volatile i32, i32* %1, align 4, !dbg !4349
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #20, !dbg !4350
  store i32 192000000, i32* @gCpuFrequency, align 4, !dbg !4351
  tail call void @SystemCoreClockUpdate() #18, !dbg !4352
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !4353
  %27 = udiv i32 %26, 1000, !dbg !4354
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #18, !dbg !4355
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4356
  ret void, !dbg !4356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo160M() local_unnamed_addr #0 !dbg !4357 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4361
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4361
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4359, metadata !DIExpression()), !dbg !4362
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4360, metadata !DIExpression()), !dbg !4363
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 0) #20, !dbg !4364
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4365
  store volatile i32 %3, i32* %1, align 4, !dbg !4366
  %4 = load volatile i32, i32* %1, align 4, !dbg !4367
  %5 = and i32 %4, -49153, !dbg !4368
  store volatile i32 %5, i32* %1, align 4, !dbg !4369
  %6 = load volatile i32, i32* %1, align 4, !dbg !4370
  %7 = or i32 %6, 32768, !dbg !4371
  store volatile i32 %7, i32* %1, align 4, !dbg !4372
  %8 = load volatile i32, i32* %1, align 4, !dbg !4373
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #20, !dbg !4374
  br label %9, !dbg !4375

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !4376
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4377
  %12 = icmp eq i32 %10, %11, !dbg !4378
  br i1 %12, label %13, label %9, !dbg !4375, !llvm.loop !4379

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4381
  store volatile i32 %14, i32* %1, align 4, !dbg !4382
  %15 = load volatile i32, i32* %1, align 4, !dbg !4383
  %16 = and i32 %15, -1009, !dbg !4384
  store volatile i32 %16, i32* %1, align 4, !dbg !4385
  %17 = load volatile i32, i32* %1, align 4, !dbg !4386
  %18 = or i32 %17, 32, !dbg !4387
  store volatile i32 %18, i32* %1, align 4, !dbg !4388
  %19 = load volatile i32, i32* %1, align 4, !dbg !4389
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #20, !dbg !4390
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4391
  store volatile i32 %20, i32* %1, align 4, !dbg !4392
  %21 = load volatile i32, i32* %1, align 4, !dbg !4393
  %22 = and i32 %21, -8, !dbg !4394
  store volatile i32 %22, i32* %1, align 4, !dbg !4395
  %23 = load volatile i32, i32* %1, align 4, !dbg !4396
  %24 = or i32 %23, 4, !dbg !4397
  store volatile i32 %24, i32* %1, align 4, !dbg !4398
  %25 = load volatile i32, i32* %1, align 4, !dbg !4399
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #20, !dbg !4400
  store i32 160000000, i32* @gCpuFrequency, align 4, !dbg !4401
  tail call void @SystemCoreClockUpdate() #18, !dbg !4402
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !4403
  %27 = udiv i32 %26, 1000, !dbg !4404
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #18, !dbg !4405
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4406
  ret void, !dbg !4406
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo64M() local_unnamed_addr #0 !dbg !4407 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4411
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4411
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4409, metadata !DIExpression()), !dbg !4412
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4410, metadata !DIExpression()), !dbg !4413
  tail call void @cmnPLL1ON() #20, !dbg !4414
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4415
  store volatile i32 %3, i32* %1, align 4, !dbg !4416
  %4 = load volatile i32, i32* %1, align 4, !dbg !4417
  %5 = and i32 %4, -49153, !dbg !4418
  store volatile i32 %5, i32* %1, align 4, !dbg !4419
  %6 = load volatile i32, i32* %1, align 4, !dbg !4420
  store volatile i32 %6, i32* %1, align 4, !dbg !4421
  %7 = load volatile i32, i32* %1, align 4, !dbg !4422
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #20, !dbg !4423
  br label %8, !dbg !4424

8:                                                ; preds = %8, %0
  %9 = load volatile i32, i32* %1, align 4, !dbg !4425
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4426
  %11 = icmp eq i32 %9, %10, !dbg !4427
  br i1 %11, label %12, label %8, !dbg !4424, !llvm.loop !4428

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #20, !dbg !4430
  store volatile i32 %13, i32* %1, align 4, !dbg !4431
  %14 = load volatile i32, i32* %1, align 4, !dbg !4432
  %15 = and i32 %14, -8, !dbg !4433
  store volatile i32 %15, i32* %1, align 4, !dbg !4434
  %16 = load volatile i32, i32* %1, align 4, !dbg !4435
  %17 = or i32 %16, 2, !dbg !4436
  store volatile i32 %17, i32* %1, align 4, !dbg !4437
  %18 = load volatile i32, i32* %1, align 4, !dbg !4438
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %18) #20, !dbg !4439
  store i32 64000000, i32* @gCpuFrequency, align 4, !dbg !4440
  tail call void @SystemCoreClockUpdate() #18, !dbg !4441
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !4442
  %20 = udiv i32 %19, 1000, !dbg !4443
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #18, !dbg !4444
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4445
  ret void, !dbg !4445
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfToXtal() local_unnamed_addr #10 section ".ramTEXT" !dbg !4446 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4450
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4450
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4448, metadata !DIExpression()), !dbg !4451
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !4449, metadata !DIExpression()), !dbg !4452
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #20, !dbg !4453
  store volatile i32 %3, i32* %1, align 4, !dbg !4454
  %4 = load volatile i32, i32* %1, align 4, !dbg !4455
  %5 = and i32 %4, -24577, !dbg !4456
  store volatile i32 %5, i32* %1, align 4, !dbg !4457
  %6 = load volatile i32, i32* %1, align 4, !dbg !4458
  store volatile i32 %6, i32* %1, align 4, !dbg !4459
  %7 = load volatile i32, i32* %1, align 4, !dbg !4460
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %7) #20, !dbg !4461
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4462
  ret void, !dbg !4462
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfTo64M() local_unnamed_addr #10 section ".ramTEXT" !dbg !4463 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4473
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4473
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4465, metadata !DIExpression()), !dbg !4474
  store volatile i32 0, i32* %1, align 4, !dbg !4474
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !4466, metadata !DIExpression()), !dbg !4475
  tail call void @cmnPLL1ON() #20, !dbg !4476
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #20, !dbg !4477
  store volatile i32 %3, i32* %1, align 4, !dbg !4478
  %4 = load volatile i32, i32* %1, align 4, !dbg !4479
  %5 = and i32 %4, -24577, !dbg !4480
  store volatile i32 %5, i32* %1, align 4, !dbg !4481
  %6 = load volatile i32, i32* %1, align 4, !dbg !4482
  %7 = or i32 %6, 8192, !dbg !4483
  store volatile i32 %7, i32* %1, align 4, !dbg !4484
  %8 = load volatile i32, i32* %1, align 4, !dbg !4485
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %8) #20, !dbg !4486
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !4467, metadata !DIExpression()), !dbg !4487
  %9 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4488
  %10 = and i32 %9, -4, !dbg !4488
  store volatile i32 %10, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4488
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !4469, metadata !DIExpression()), !dbg !4489
  %11 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4490
  %12 = or i32 %11, 16, !dbg !4490
  store volatile i32 %12, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4490
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693208 to i32*), metadata !4471, metadata !DIExpression()), !dbg !4491
  %13 = load volatile i32, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !4492
  %14 = and i32 %13, -64, !dbg !4492
  %15 = or i32 %14, 24, !dbg !4492
  store volatile i32 %15, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !4492
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4493
  ret void, !dbg !4493
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc() local_unnamed_addr #8 !dbg !4494 {
  %1 = tail call i32 @getc_nowait() #20, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %1, metadata !4496, metadata !DIExpression()), !dbg !4498
  ret i32 %1, !dbg !4499
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc_nowait() local_unnamed_addr #8 !dbg !4500 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096955372 to i32*), align 4, !dbg !4503
  %2 = and i32 %1, 1, !dbg !4505
  %3 = icmp eq i32 %2, 0, !dbg !4505
  br i1 %3, label %7, label %4, !dbg !4506

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -2096955392 to i32*), align 65536, !dbg !4507
  %6 = and i32 %5, 255, !dbg !4509
  call void @llvm.dbg.value(metadata i32 %5, metadata !4502, metadata !DIExpression()), !dbg !4510
  br label %7, !dbg !4511

7:                                                ; preds = %0, %4
  %8 = phi i32 [ %6, %4 ], [ -1, %0 ], !dbg !4512
  ret i32 %8, !dbg !4513
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_output_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !4514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4519, metadata !DIExpression()), !dbg !4522
  call void @llvm.dbg.value(metadata i8 %1, metadata !4520, metadata !DIExpression()), !dbg !4522
  %3 = icmp eq i32 %0, 0, !dbg !4523
  %4 = select i1 %3, i32 -2096955392, i32 -2096889856, !dbg !4523
  call void @llvm.dbg.value(metadata i32 %4, metadata !4521, metadata !DIExpression()), !dbg !4522
  %5 = or i32 %4, 20
  %6 = inttoptr i32 %5 to i32*
  br label %7, !dbg !4524

7:                                                ; preds = %7, %2
  %8 = load volatile i32, i32* %6, align 4, !dbg !4525
  %9 = and i32 %8, 32, !dbg !4526
  %10 = icmp eq i32 %9, 0, !dbg !4527
  br i1 %10, label %7, label %11, !dbg !4524, !llvm.loop !4528

11:                                               ; preds = %7
  %12 = zext i8 %1 to i32, !dbg !4530
  %13 = inttoptr i32 %4 to i32*, !dbg !4531
  store volatile i32 %12, i32* %13, align 65536, !dbg !4532
  ret void, !dbg !4533
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_input_char(i32 noundef %0) local_unnamed_addr #5 !dbg !4534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4538, metadata !DIExpression()), !dbg !4541
  %2 = icmp eq i32 %0, 0, !dbg !4542
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4542
  call void @llvm.dbg.value(metadata i32 %3, metadata !4539, metadata !DIExpression()), !dbg !4541
  %4 = or i32 %3, 20
  %5 = inttoptr i32 %4 to i32*
  br label %6, !dbg !4543

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* %5, align 4, !dbg !4544
  %8 = and i32 %7, 1, !dbg !4545
  %9 = icmp eq i32 %8, 0, !dbg !4546
  br i1 %9, label %6, label %10, !dbg !4543, !llvm.loop !4547

10:                                               ; preds = %6
  %11 = inttoptr i32 %3 to i32*, !dbg !4549
  %12 = load volatile i32, i32* %11, align 65536, !dbg !4549
  %13 = trunc i32 %12 to i8, !dbg !4549
  call void @llvm.dbg.value(metadata i8 %13, metadata !4540, metadata !DIExpression()), !dbg !4541
  ret i8 %13, !dbg !4550
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_input_char_unblocking(i32 noundef %0) local_unnamed_addr #8 !dbg !4551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4555, metadata !DIExpression()), !dbg !4558
  %2 = icmp eq i32 %0, 0, !dbg !4559
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %3, metadata !4556, metadata !DIExpression()), !dbg !4558
  %4 = or i32 %3, 20, !dbg !4560
  %5 = inttoptr i32 %4 to i32*, !dbg !4560
  %6 = load volatile i32, i32* %5, align 4, !dbg !4560
  %7 = and i32 %6, 1, !dbg !4562
  %8 = icmp eq i32 %7, 0, !dbg !4562
  br i1 %8, label %13, label %9, !dbg !4563

9:                                                ; preds = %1
  %10 = inttoptr i32 %3 to i32*, !dbg !4564
  %11 = load volatile i32, i32* %10, align 65536, !dbg !4564
  %12 = and i32 %11, 255, !dbg !4566
  call void @llvm.dbg.value(metadata i32 %11, metadata !4557, metadata !DIExpression()), !dbg !4558
  br label %13, !dbg !4567

13:                                               ; preds = %1, %9
  %14 = phi i32 [ %12, %9 ], [ -1, %1 ], !dbg !4568
  ret i32 %14, !dbg !4569
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_HWInit(i32 noundef %0) local_unnamed_addr #0 !dbg !4570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4574, metadata !DIExpression()), !dbg !4575
  tail call void @halUART_SetFormat(i32 noundef %0, i32 noundef 115200, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 0) #20, !dbg !4576
  switch i32 %0, label %7 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !4577

2:                                                ; preds = %1
  br label %3, !dbg !4578

3:                                                ; preds = %1, %2
  %4 = phi i32* [ inttoptr (i32 -2096889780 to i32*), %2 ], [ inttoptr (i32 -2096955316 to i32*), %1 ]
  %5 = load volatile i32, i32* %4, align 4, !dbg !4582
  %6 = or i32 %5, 1, !dbg !4582
  store volatile i32 %6, i32* %4, align 4, !dbg !4582
  br label %7, !dbg !4583

7:                                                ; preds = %3, %1
  ret void, !dbg !4583
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_SetFormat(i32 noundef %0, i32 noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 !dbg !4584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4588, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %1, metadata !4589, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i16 %2, metadata !4590, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i16 %3, metadata !4591, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i16 %4, metadata !4592, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 -2096955392, metadata !4594, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, metadata !4601, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, metadata !4603, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.value(metadata i32 0, metadata !4604, metadata !DIExpression()), !dbg !4605
  %6 = tail call i32 @top_xtal_freq_get() #18, !dbg !4608
  store i32 %6, i32* @gUartClkFreq, align 4, !dbg !4609
  %7 = icmp eq i32 %0, 1, !dbg !4610
  %8 = select i1 %7, i32 -2096889856, i32 -2096955392, !dbg !4610
  call void @llvm.dbg.value(metadata i32 %8, metadata !4594, metadata !DIExpression()), !dbg !4605
  %9 = or i32 %8, 36, !dbg !4611
  %10 = inttoptr i32 %9 to i32*, !dbg !4611
  store volatile i32 3, i32* %10, align 4, !dbg !4612
  %11 = or i32 %8, 12, !dbg !4613
  %12 = inttoptr i32 %11 to i32*, !dbg !4613
  %13 = load volatile i32, i32* %12, align 4, !dbg !4613
  call void @llvm.dbg.value(metadata i32 %13, metadata !4596, metadata !DIExpression()), !dbg !4605
  %14 = or i32 %13, 128, !dbg !4614
  store volatile i32 %14, i32* %12, align 4, !dbg !4615
  %15 = load i32, i32* @gUartClkFreq, align 4, !dbg !4616
  %16 = udiv i32 %15, %1, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %16, metadata !4595, metadata !DIExpression()), !dbg !4605
  %17 = lshr i32 %16, 8, !dbg !4618
  %18 = add nuw nsw i32 %17, 1, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %18, metadata !4597, metadata !DIExpression()), !dbg !4605
  %19 = udiv i32 %16, %18, !dbg !4620
  %20 = add i32 %19, -1, !dbg !4622
  call void @llvm.dbg.value(metadata i32 %20, metadata !4598, metadata !DIExpression()), !dbg !4605
  %21 = icmp eq i32 %20, 3, !dbg !4623
  %22 = lshr i32 %20, 1, !dbg !4625
  %23 = add nsw i32 %22, -1, !dbg !4625
  %24 = select i1 %21, i32 0, i32 %23, !dbg !4625
  call void @llvm.dbg.value(metadata i32 %24, metadata !4599, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 undef, metadata !4604, metadata !DIExpression()), !dbg !4605
  %25 = mul i32 %15, 10, !dbg !4626
  %26 = udiv i32 %25, %1, !dbg !4627
  %27 = udiv i32 %26, %16, !dbg !4628
  %28 = mul i32 %19, -10, !dbg !4629
  %29 = add i32 %27, %28, !dbg !4630
  %30 = urem i32 %29, 10, !dbg !4631
  call void @llvm.dbg.value(metadata i32 %30, metadata !4600, metadata !DIExpression()), !dbg !4605
  %31 = and i32 %18, 255, !dbg !4632
  %32 = inttoptr i32 %8 to i32*, !dbg !4633
  store volatile i32 %31, i32* %32, align 65536, !dbg !4634
  %33 = lshr i32 %18, 8, !dbg !4635
  %34 = and i32 %33, 255, !dbg !4636
  %35 = or i32 %8, 4, !dbg !4637
  %36 = inttoptr i32 %35 to i32*, !dbg !4637
  store volatile i32 %34, i32* %36, align 4, !dbg !4638
  %37 = or i32 %8, 40, !dbg !4639
  %38 = inttoptr i32 %37 to i32*, !dbg !4639
  store volatile i32 %20, i32* %38, align 8, !dbg !4640
  %39 = or i32 %8, 44, !dbg !4641
  %40 = inttoptr i32 %39 to i32*, !dbg !4641
  store volatile i32 %24, i32* %40, align 4, !dbg !4642
  %41 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, i32 0, i32 %30, !dbg !4643
  %42 = load i16, i16* %41, align 2, !dbg !4643
  %43 = zext i16 %42 to i32, !dbg !4643
  %44 = or i32 %8, 88, !dbg !4644
  %45 = inttoptr i32 %44 to i32*, !dbg !4644
  store volatile i32 %43, i32* %45, align 8, !dbg !4645
  %46 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, i32 0, i32 %30, !dbg !4646
  %47 = load i16, i16* %46, align 2, !dbg !4646
  %48 = zext i16 %47 to i32, !dbg !4646
  %49 = or i32 %8, 84, !dbg !4647
  %50 = inttoptr i32 %49 to i32*, !dbg !4647
  store volatile i32 %48, i32* %50, align 4, !dbg !4648
  store volatile i32 %13, i32* %12, align 4, !dbg !4649
  %51 = or i32 %8, 8, !dbg !4650
  %52 = inttoptr i32 %51 to i32*, !dbg !4650
  store volatile i32 71, i32* %52, align 8, !dbg !4651
  %53 = inttoptr i32 %11 to i16*, !dbg !4652
  %54 = load volatile i16, i16* %53, align 4, !dbg !4652
  call void @llvm.dbg.value(metadata i16 %54, metadata !4593, metadata !DIExpression()), !dbg !4605
  %55 = and i16 %54, -64, !dbg !4653
  call void @llvm.dbg.value(metadata i16 %54, metadata !4593, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %2), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4605
  %56 = and i16 %2, -61, !dbg !4654
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %56), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i16 %55, i16 %4, i16 %56), metadata !4593, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4605
  %57 = and i16 %4, -57, !dbg !4655
  call void @llvm.dbg.value(metadata i16 undef, metadata !4593, metadata !DIExpression()), !dbg !4605
  %58 = or i16 %56, %3, !dbg !4654
  %59 = or i16 %58, %57, !dbg !4655
  %60 = or i16 %59, %55, !dbg !4656
  call void @llvm.dbg.value(metadata i16 %60, metadata !4593, metadata !DIExpression()), !dbg !4605
  store volatile i16 %60, i16* %53, align 4, !dbg !4657
  ret void, !dbg !4658
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #8 !dbg !4659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4663, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.value(metadata i32 %1, metadata !4664, metadata !DIExpression()), !dbg !4666
  call void @llvm.dbg.value(metadata i32* %2, metadata !4665, metadata !DIExpression()), !dbg !4666
  %4 = icmp eq i32 %0, 0, !dbg !4667
  %5 = icmp eq i32 %1, 0, !dbg !4669
  br i1 %4, label %6, label %16, !dbg !4670

6:                                                ; preds = %3
  br i1 %5, label %10, label %7, !dbg !4671

7:                                                ; preds = %6
  %8 = load volatile i16, i16* inttoptr (i32 -2097082568 to i16*), align 8, !dbg !4673
  %9 = zext i16 %8 to i32, !dbg !4673
  br label %26, !dbg !4676

10:                                               ; preds = %6
  %11 = load volatile i16, i16* inttoptr (i32 -2097082812 to i16*), align 4, !dbg !4677
  %12 = zext i16 %11 to i32, !dbg !4677
  store i32 %12, i32* %2, align 4, !dbg !4679
  %13 = load volatile i16, i16* inttoptr (i32 -2097082824 to i16*), align 8, !dbg !4680
  %14 = zext i16 %13 to i32, !dbg !4680
  %15 = sub nsw i32 %12, %14, !dbg !4681
  br label %26

16:                                               ; preds = %3
  br i1 %5, label %20, label %17, !dbg !4682

17:                                               ; preds = %16
  %18 = load volatile i16, i16* inttoptr (i32 -2097082056 to i16*), align 8, !dbg !4684
  %19 = zext i16 %18 to i32, !dbg !4684
  br label %26, !dbg !4687

20:                                               ; preds = %16
  %21 = load volatile i16, i16* inttoptr (i32 -2097082300 to i16*), align 4, !dbg !4688
  %22 = zext i16 %21 to i32, !dbg !4688
  store i32 %22, i32* %2, align 4, !dbg !4690
  %23 = load volatile i16, i16* inttoptr (i32 -2097082312 to i16*), align 8, !dbg !4691
  %24 = zext i16 %23 to i32, !dbg !4691
  %25 = sub nsw i32 %22, %24, !dbg !4692
  br label %26

26:                                               ; preds = %17, %20, %7, %10
  %27 = phi i32 [ %19, %17 ], [ %25, %20 ], [ %9, %7 ], [ %15, %10 ]
  store i32 %27, i32* %2, align 4, !dbg !4669
  ret void, !dbg !4693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Read_VFIFO_Data(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !4694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4698, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata i8* %1, metadata !4699, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata i32 %2, metadata !4700, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata i32 0, metadata !4701, metadata !DIExpression()), !dbg !4702
  call void @llvm.dbg.value(metadata i32 0, metadata !4701, metadata !DIExpression()), !dbg !4702
  %4 = icmp eq i32 %2, 0, !dbg !4703
  br i1 %4, label %15, label %5, !dbg !4706

5:                                                ; preds = %3, %12
  %6 = phi i32 [ %13, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4701, metadata !DIExpression()), !dbg !4702
  switch i32 %0, label %12 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !4707

7:                                                ; preds = %5
  br label %8, !dbg !4709

8:                                                ; preds = %5, %7
  %9 = phi i8* [ inttoptr (i32 2030044416 to i8*), %7 ], [ inttoptr (i32 2030043904 to i8*), %5 ]
  %10 = load volatile i8, i8* %9, align 256, !dbg !4713
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !4713
  store i8 %10, i8* %11, align 1, !dbg !4713
  br label %12, !dbg !4714

12:                                               ; preds = %8, %5
  %13 = add nuw i32 %6, 1, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %13, metadata !4701, metadata !DIExpression()), !dbg !4702
  %14 = icmp eq i32 %13, %2, !dbg !4703
  br i1 %14, label %15, label %5, !dbg !4706, !llvm.loop !4715

15:                                               ; preds = %12, %3
  ret void, !dbg !4717
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Write_VFIFO_Data(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !4718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4722, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i8* %1, metadata !4723, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 %2, metadata !4724, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 0, metadata !4725, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.value(metadata i32 0, metadata !4725, metadata !DIExpression()), !dbg !4726
  %4 = icmp eq i32 %2, 0, !dbg !4727
  br i1 %4, label %16, label %5, !dbg !4730

5:                                                ; preds = %3, %13
  %6 = phi i32 [ %14, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4725, metadata !DIExpression()), !dbg !4726
  switch i32 %0, label %13 [
    i32 0, label %7
    i32 1, label %10
  ], !dbg !4731

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !4733
  %9 = load i8, i8* %8, align 1, !dbg !4733
  store volatile i8 %9, i8* inttoptr (i32 2030043648 to i8*), align 512, !dbg !4736
  br label %13, !dbg !4737

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !4738
  %12 = load i8, i8* %11, align 1, !dbg !4738
  store volatile i8 %12, i8* inttoptr (i32 2030044160 to i8*), align 1024, !dbg !4741
  br label %13, !dbg !4742

13:                                               ; preds = %5, %7, %10
  %14 = add nuw i32 %6, 1, !dbg !4743
  call void @llvm.dbg.value(metadata i32 %14, metadata !4725, metadata !DIExpression()), !dbg !4726
  %15 = icmp eq i32 %14, %2, !dbg !4727
  br i1 %15, label %16, label %5, !dbg !4730, !llvm.loop !4744

16:                                               ; preds = %13, %3
  ret void, !dbg !4746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Tx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !4747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4751, metadata !DIExpression()), !dbg !4755
  call void @llvm.dbg.value(metadata i8* %1, metadata !4752, metadata !DIExpression()), !dbg !4755
  call void @llvm.dbg.value(metadata i32 %2, metadata !4753, metadata !DIExpression()), !dbg !4755
  call void @llvm.dbg.value(metadata i32 %3, metadata !4754, metadata !DIExpression()), !dbg !4755
  switch i32 %0, label %9 [
    i32 0, label %6
    i32 1, label %5
  ], !dbg !4756

5:                                                ; preds = %4
  br label %6, !dbg !4757

6:                                                ; preds = %4, %5
  %7 = phi i32 [ 16, %5 ], [ 14, %4 ]
  %8 = ptrtoint i8* %1 to i32, !dbg !4761
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %8, i32 noundef %2, i32 noundef %7, i32 noundef 0, i32 noundef %3, i32 noundef 0) #18, !dbg !4761
  tail call void @DMA_Vfifo_Flush(i32 noundef %7) #18, !dbg !4761
  br label %9, !dbg !4762

9:                                                ; preds = %6, %4
  ret void, !dbg !4762
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_SetAdrs(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Flush(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Rx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #0 !dbg !4763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4767, metadata !DIExpression()), !dbg !4773
  call void @llvm.dbg.value(metadata i8* %1, metadata !4768, metadata !DIExpression()), !dbg !4773
  call void @llvm.dbg.value(metadata i32 %2, metadata !4769, metadata !DIExpression()), !dbg !4773
  call void @llvm.dbg.value(metadata i32 %3, metadata !4770, metadata !DIExpression()), !dbg !4773
  call void @llvm.dbg.value(metadata i32 %4, metadata !4771, metadata !DIExpression()), !dbg !4773
  call void @llvm.dbg.value(metadata i32 %5, metadata !4772, metadata !DIExpression()), !dbg !4773
  switch i32 %0, label %11 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !4774

7:                                                ; preds = %6
  br label %8, !dbg !4775

8:                                                ; preds = %6, %7
  %9 = phi i32 [ 17, %7 ], [ 15, %6 ]
  %10 = ptrtoint i8* %1 to i32, !dbg !4779
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %10, i32 noundef %2, i32 noundef %9, i32 noundef %3, i32 noundef %4, i32 noundef %5) #18, !dbg !4779
  tail call void @DMA_Vfifo_Flush(i32 noundef %9) #18, !dbg !4779
  br label %11, !dbg !4780

11:                                               ; preds = %8, %6
  ret void, !dbg !4780
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !4781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4785, metadata !DIExpression()), !dbg !4787
  call void @llvm.dbg.value(metadata void ()* %1, metadata !4786, metadata !DIExpression()), !dbg !4787
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !4788

3:                                                ; preds = %2
  br label %4, !dbg !4789

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef %5, void ()* noundef %1) #18, !dbg !4793
  br label %6, !dbg !4794

6:                                                ; preds = %4, %2
  ret void, !dbg !4794
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !4795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4797, metadata !DIExpression()), !dbg !4799
  call void @llvm.dbg.value(metadata void ()* %1, metadata !4798, metadata !DIExpression()), !dbg !4799
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !4800

3:                                                ; preds = %2
  br label %4, !dbg !4801

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_TO_Callback(i32 noundef %5, void ()* noundef %1) #18, !dbg !4805
  br label %6, !dbg !4806

6:                                                ; preds = %4, %2
  ret void, !dbg !4806
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_TO_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !4807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4809, metadata !DIExpression()), !dbg !4813
  %2 = icmp eq i32 %0, 0, !dbg !4814
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4814
  call void @llvm.dbg.value(metadata i32 %3, metadata !4810, metadata !DIExpression()), !dbg !4813
  %4 = or i32 %3, 12, !dbg !4815
  %5 = inttoptr i32 %4 to i32*, !dbg !4815
  %6 = load volatile i32, i32* %5, align 4, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %6, metadata !4812, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4813
  store volatile i32 191, i32* %5, align 4, !dbg !4816
  %7 = or i32 %3, 8, !dbg !4817
  %8 = inttoptr i32 %7 to i32*, !dbg !4817
  %9 = load volatile i32, i32* %8, align 8, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %9, metadata !4811, metadata !DIExpression()), !dbg !4813
  %10 = and i32 %9, 65327, !dbg !4818
  %11 = or i32 %10, 208, !dbg !4818
  call void @llvm.dbg.value(metadata i32 %9, metadata !4811, metadata !DIExpression(DW_OP_constu, 208, DW_OP_or, DW_OP_stack_value)), !dbg !4813
  store volatile i32 %11, i32* %8, align 8, !dbg !4819
  %12 = or i32 %3, 68, !dbg !4820
  %13 = inttoptr i32 %12 to i32*, !dbg !4820
  store volatile i32 0, i32* %13, align 4, !dbg !4821
  store volatile i32 0, i32* %5, align 4, !dbg !4822
  %14 = or i32 %3, 16, !dbg !4823
  %15 = inttoptr i32 %14 to i32*, !dbg !4823
  store volatile i32 2, i32* %15, align 16, !dbg !4824
  %16 = and i32 %6, 65535, !dbg !4825
  store volatile i32 %16, i32* %5, align 4, !dbg !4826
  ret void, !dbg !4827
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #5 !dbg !4828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4832, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata i8 %1, metadata !4833, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata i8 %2, metadata !4834, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.value(metadata i8 %3, metadata !4835, metadata !DIExpression()), !dbg !4839
  %5 = icmp eq i32 %0, 0, !dbg !4840
  %6 = select i1 %5, i32 -2096955392, i32 -2096889856, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %6, metadata !4836, metadata !DIExpression()), !dbg !4839
  %7 = or i32 %6, 12, !dbg !4841
  %8 = inttoptr i32 %7 to i32*, !dbg !4841
  %9 = load volatile i32, i32* %8, align 4, !dbg !4841
  call void @llvm.dbg.value(metadata i32 %9, metadata !4838, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4839
  store volatile i32 191, i32* %8, align 4, !dbg !4842
  %10 = zext i8 %1 to i32, !dbg !4843
  %11 = or i32 %6, 16, !dbg !4844
  %12 = inttoptr i32 %11 to i32*, !dbg !4844
  store volatile i32 %10, i32* %12, align 16, !dbg !4845
  %13 = or i32 %6, 20, !dbg !4846
  %14 = inttoptr i32 %13 to i32*, !dbg !4846
  store volatile i32 %10, i32* %14, align 4, !dbg !4847
  %15 = zext i8 %2 to i32, !dbg !4848
  %16 = or i32 %6, 24, !dbg !4849
  %17 = inttoptr i32 %16 to i32*, !dbg !4849
  store volatile i32 %15, i32* %17, align 8, !dbg !4850
  %18 = or i32 %6, 28, !dbg !4851
  %19 = inttoptr i32 %18 to i32*, !dbg !4851
  store volatile i32 %15, i32* %19, align 4, !dbg !4852
  %20 = or i32 %6, 8, !dbg !4853
  %21 = inttoptr i32 %20 to i32*, !dbg !4853
  %22 = load volatile i32, i32* %21, align 8, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %22, metadata !4837, metadata !DIExpression()), !dbg !4839
  %23 = and i32 %22, 65525, !dbg !4854
  %24 = or i32 %23, 10, !dbg !4854
  call void @llvm.dbg.value(metadata i32 %22, metadata !4837, metadata !DIExpression(DW_OP_constu, 10, DW_OP_or, DW_OP_stack_value)), !dbg !4839
  store volatile i32 %24, i32* %21, align 8, !dbg !4855
  %25 = and i32 %9, 65535, !dbg !4856
  store volatile i32 %25, i32* %8, align 4, !dbg !4857
  %26 = zext i8 %3 to i32, !dbg !4858
  %27 = or i32 %6, 64, !dbg !4859
  %28 = inttoptr i32 %27 to i32*, !dbg !4859
  store volatile i32 %26, i32* %28, align 64, !dbg !4860
  %29 = or i32 %6, 68, !dbg !4861
  %30 = inttoptr i32 %29 to i32*, !dbg !4861
  store volatile i32 1, i32* %30, align 4, !dbg !4862
  ret void, !dbg !4863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !4864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4866, metadata !DIExpression()), !dbg !4869
  %2 = icmp eq i32 %0, 0, !dbg !4870
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4870
  call void @llvm.dbg.value(metadata i32 %3, metadata !4867, metadata !DIExpression()), !dbg !4869
  %4 = or i32 %3, 12, !dbg !4871
  %5 = inttoptr i32 %4 to i32*, !dbg !4871
  %6 = load volatile i32, i32* %5, align 4, !dbg !4871
  call void @llvm.dbg.value(metadata i32 %6, metadata !4868, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4869
  store volatile i32 191, i32* %5, align 4, !dbg !4872
  %7 = or i32 %3, 8, !dbg !4873
  %8 = inttoptr i32 %7 to i32*, !dbg !4873
  store volatile i32 0, i32* %8, align 8, !dbg !4874
  store volatile i32 0, i32* %5, align 4, !dbg !4875
  %9 = and i32 %6, 65535, !dbg !4876
  store volatile i32 %9, i32* %5, align 4, !dbg !4877
  ret void, !dbg !4878
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(i32 noundef %0) local_unnamed_addr #5 !dbg !4879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4881, metadata !DIExpression()), !dbg !4883
  %2 = icmp eq i32 %0, 0, !dbg !4884
  call void @llvm.dbg.value(metadata i32 undef, metadata !4882, metadata !DIExpression()), !dbg !4883
  %3 = select i1 %2, i32 -2096955320, i32 -2096889784, !dbg !4885
  %4 = inttoptr i32 %3 to i32*, !dbg !4885
  store volatile i32 1, i32* %4, align 8, !dbg !4886
  ret void, !dbg !4887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(i32 noundef %0) local_unnamed_addr #5 !dbg !4888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4890, metadata !DIExpression()), !dbg !4894
  %2 = icmp eq i32 %0, 0, !dbg !4895
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %3, metadata !4891, metadata !DIExpression()), !dbg !4894
  %4 = or i32 %3, 12, !dbg !4896
  %5 = inttoptr i32 %4 to i32*, !dbg !4896
  %6 = load volatile i32, i32* %5, align 4, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %6, metadata !4893, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4894
  store volatile i32 0, i32* %5, align 4, !dbg !4897
  %7 = or i32 %3, 4, !dbg !4898
  %8 = inttoptr i32 %7 to i32*, !dbg !4898
  %9 = load volatile i32, i32* %8, align 4, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %9, metadata !4892, metadata !DIExpression()), !dbg !4894
  %10 = and i32 %9, 65533, !dbg !4899
  %11 = or i32 %10, 2, !dbg !4899
  call void @llvm.dbg.value(metadata i32 %9, metadata !4892, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !4894
  store volatile i32 %11, i32* %8, align 4, !dbg !4900
  %12 = and i32 %6, 65535, !dbg !4901
  store volatile i32 %12, i32* %5, align 4, !dbg !4902
  %13 = or i32 %3, 72, !dbg !4903
  %14 = inttoptr i32 %13 to i32*, !dbg !4903
  store volatile i32 1, i32* %14, align 8, !dbg !4904
  ret void, !dbg !4905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_mask_send_interrupt(i32 noundef %0) local_unnamed_addr #5 !dbg !4906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4908, metadata !DIExpression()), !dbg !4912
  %2 = icmp eq i32 %0, 0, !dbg !4913
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4913
  call void @llvm.dbg.value(metadata i32 %3, metadata !4909, metadata !DIExpression()), !dbg !4912
  %4 = or i32 %3, 12, !dbg !4914
  %5 = inttoptr i32 %4 to i32*, !dbg !4914
  %6 = load volatile i32, i32* %5, align 4, !dbg !4914
  call void @llvm.dbg.value(metadata i32 %6, metadata !4911, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4912
  store volatile i32 0, i32* %5, align 4, !dbg !4915
  %7 = or i32 %3, 4, !dbg !4916
  %8 = inttoptr i32 %7 to i32*, !dbg !4916
  %9 = load volatile i32, i32* %8, align 4, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %9, metadata !4910, metadata !DIExpression()), !dbg !4912
  %10 = and i32 %9, 65533, !dbg !4917
  call void @llvm.dbg.value(metadata i32 %10, metadata !4910, metadata !DIExpression()), !dbg !4912
  store volatile i32 %10, i32* %8, align 4, !dbg !4918
  %11 = and i32 %6, 65535, !dbg !4919
  store volatile i32 %11, i32* %5, align 4, !dbg !4920
  %12 = or i32 %3, 72, !dbg !4921
  %13 = inttoptr i32 %12 to i32*, !dbg !4921
  store volatile i32 0, i32* %13, align 8, !dbg !4922
  ret void, !dbg !4923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !4924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4926, metadata !DIExpression()), !dbg !4930
  %2 = icmp eq i32 %0, 0, !dbg !4931
  %3 = select i1 %2, i32* inttoptr (i32 -2096955384 to i32*), i32* inttoptr (i32 -2096889848 to i32*)
  call void @llvm.dbg.value(metadata i32 undef, metadata !4927, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i32 undef, metadata !4928, metadata !DIExpression()), !dbg !4930
  %4 = load volatile i32, i32* %3, align 8, !dbg !4933
  call void @llvm.dbg.value(metadata i32 %4, metadata !4929, metadata !DIExpression()), !dbg !4930
  %5 = and i32 %4, 63, !dbg !4934
  %6 = icmp eq i32 %5, 2, !dbg !4935
  br i1 %6, label %7, label %10, !dbg !4935

7:                                                ; preds = %1
  %8 = xor i1 %2, true
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !4927, metadata !DIExpression()), !dbg !4930
  tail call void @uart_send_handler(i32 noundef %9) #18, !dbg !4936
  br label %10, !dbg !4938

10:                                               ; preds = %1, %7
  ret void, !dbg !4939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(i32 noundef %0) local_unnamed_addr #5 !dbg !4940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4942, metadata !DIExpression()), !dbg !4944
  %2 = icmp eq i32 %0, 0, !dbg !4945
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4945
  call void @llvm.dbg.value(metadata i32 %3, metadata !4943, metadata !DIExpression()), !dbg !4944
  %4 = or i32 %3, 12, !dbg !4946
  %5 = inttoptr i32 %4 to i32*, !dbg !4946
  store volatile i32 191, i32* %5, align 4, !dbg !4947
  %6 = or i32 %3, 8, !dbg !4948
  %7 = inttoptr i32 %6 to i32*, !dbg !4948
  store volatile i32 16, i32* %7, align 8, !dbg !4949
  %8 = or i32 %3, 16, !dbg !4950
  %9 = inttoptr i32 %8 to i32*, !dbg !4950
  store volatile i32 0, i32* %9, align 16, !dbg !4951
  %10 = or i32 %3, 24, !dbg !4952
  %11 = inttoptr i32 %10 to i32*, !dbg !4952
  store volatile i32 0, i32* %11, align 8, !dbg !4953
  store volatile i32 128, i32* %5, align 4, !dbg !4954
  %12 = inttoptr i32 %3 to i32*, !dbg !4955
  store volatile i32 0, i32* %12, align 65536, !dbg !4956
  %13 = or i32 %3, 4, !dbg !4957
  %14 = inttoptr i32 %13 to i32*, !dbg !4957
  store volatile i32 0, i32* %14, align 4, !dbg !4958
  store volatile i32 0, i32* %5, align 4, !dbg !4959
  store volatile i32 0, i32* %14, align 4, !dbg !4960
  store volatile i32 0, i32* %7, align 8, !dbg !4961
  store volatile i32 191, i32* %5, align 4, !dbg !4962
  store volatile i32 0, i32* %7, align 8, !dbg !4963
  store volatile i32 0, i32* %5, align 4, !dbg !4964
  store volatile i32 0, i32* %9, align 16, !dbg !4965
  %15 = or i32 %3, 28, !dbg !4966
  %16 = inttoptr i32 %15 to i32*, !dbg !4966
  store volatile i32 0, i32* %16, align 4, !dbg !4967
  %17 = or i32 %3, 36, !dbg !4968
  %18 = inttoptr i32 %17 to i32*, !dbg !4968
  store volatile i32 0, i32* %18, align 4, !dbg !4969
  %19 = or i32 %3, 40, !dbg !4970
  %20 = inttoptr i32 %19 to i32*, !dbg !4970
  store volatile i32 0, i32* %20, align 8, !dbg !4971
  %21 = or i32 %3, 44, !dbg !4972
  %22 = inttoptr i32 %21 to i32*, !dbg !4972
  store volatile i32 0, i32* %22, align 4, !dbg !4973
  %23 = or i32 %3, 52, !dbg !4974
  %24 = inttoptr i32 %23 to i32*, !dbg !4974
  store volatile i32 0, i32* %24, align 4, !dbg !4975
  %25 = or i32 %3, 60, !dbg !4976
  %26 = inttoptr i32 %25 to i32*, !dbg !4976
  store volatile i32 0, i32* %26, align 4, !dbg !4977
  %27 = or i32 %3, 64, !dbg !4978
  %28 = inttoptr i32 %27 to i32*, !dbg !4978
  store volatile i32 0, i32* %28, align 64, !dbg !4979
  %29 = or i32 %3, 68, !dbg !4980
  %30 = inttoptr i32 %29 to i32*, !dbg !4980
  store volatile i32 0, i32* %30, align 4, !dbg !4981
  %31 = or i32 %3, 72, !dbg !4982
  %32 = inttoptr i32 %31 to i32*, !dbg !4982
  store volatile i32 0, i32* %32, align 8, !dbg !4983
  %33 = or i32 %3, 76, !dbg !4984
  %34 = inttoptr i32 %33 to i32*, !dbg !4984
  store volatile i32 0, i32* %34, align 4, !dbg !4985
  %35 = or i32 %3, 80, !dbg !4986
  %36 = inttoptr i32 %35 to i32*, !dbg !4986
  store volatile i32 0, i32* %36, align 16, !dbg !4987
  %37 = or i32 %3, 84, !dbg !4988
  %38 = inttoptr i32 %37 to i32*, !dbg !4988
  store volatile i32 0, i32* %38, align 4, !dbg !4989
  %39 = or i32 %3, 88, !dbg !4990
  %40 = inttoptr i32 %39 to i32*, !dbg !4990
  store volatile i32 0, i32* %40, align 8, !dbg !4991
  %41 = or i32 %3, 96, !dbg !4992
  %42 = inttoptr i32 %41 to i32*, !dbg !4992
  store volatile i32 0, i32* %42, align 32, !dbg !4993
  ret void, !dbg !4994
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(i32 noundef %0) local_unnamed_addr #5 !dbg !4995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4997, metadata !DIExpression()), !dbg !4999
  %2 = icmp eq i32 %0, 0, !dbg !5000
  call void @llvm.dbg.value(metadata i32 undef, metadata !4998, metadata !DIExpression()), !dbg !4999
  %3 = select i1 %2, i32 -2096955372, i32 -2096889836
  %4 = inttoptr i32 %3 to i32*
  br label %5, !dbg !5001

5:                                                ; preds = %5, %1
  %6 = load volatile i32, i32* %4, align 4, !dbg !5002
  %7 = and i32 %6, 64, !dbg !5003
  %8 = icmp eq i32 %7, 0, !dbg !5004
  br i1 %8, label %5, label %9, !dbg !5001, !llvm.loop !5005

9:                                                ; preds = %5
  ret void, !dbg !5007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_fatal_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5008 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5012, metadata !DIExpression()), !dbg !5024
  call void @llvm.dbg.value(metadata i32 %1, metadata !5013, metadata !DIExpression()), !dbg !5024
  call void @llvm.dbg.value(metadata i8* %2, metadata !5014, metadata !DIExpression()), !dbg !5024
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5025
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5025
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5015, metadata !DIExpression()), !dbg !5026
  call void @llvm.va_start(i8* nonnull %5), !dbg !5027
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5028
  %7 = load i32, i32* %6, align 4, !dbg !5028
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5028
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #18, !dbg !5028
  call void @llvm.va_end(i8* nonnull %5), !dbg !5029
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5030
  ret void, !dbg !5030
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #11

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #11

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5031 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5033, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i32 %1, metadata !5034, metadata !DIExpression()), !dbg !5037
  call void @llvm.dbg.value(metadata i8* %2, metadata !5035, metadata !DIExpression()), !dbg !5037
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5038
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5038
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5036, metadata !DIExpression()), !dbg !5039
  call void @llvm.va_start(i8* nonnull %5), !dbg !5040
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5041
  %7 = load i32, i32* %6, align 4, !dbg !5041
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5041
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #18, !dbg !5041
  call void @llvm.va_end(i8* nonnull %5), !dbg !5042
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5043
  ret void, !dbg !5043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5044 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5046, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i32 %1, metadata !5047, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.value(metadata i8* %2, metadata !5048, metadata !DIExpression()), !dbg !5050
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5051
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5051
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5049, metadata !DIExpression()), !dbg !5052
  call void @llvm.va_start(i8* nonnull %5), !dbg !5053
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5054
  %7 = load i32, i32* %6, align 4, !dbg !5054
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5054
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 2, i8* noundef %2, [1 x i32] %8) #18, !dbg !5054
  call void @llvm.va_end(i8* nonnull %5), !dbg !5055
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5056
  ret void, !dbg !5056
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5057 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5059, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i32 %1, metadata !5060, metadata !DIExpression()), !dbg !5063
  call void @llvm.dbg.value(metadata i8* %2, metadata !5061, metadata !DIExpression()), !dbg !5063
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5064
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5064
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5062, metadata !DIExpression()), !dbg !5065
  call void @llvm.va_start(i8* nonnull %5), !dbg !5066
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5067
  %7 = load i32, i32* %6, align 4, !dbg !5067
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5067
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %2, [1 x i32] %8) #18, !dbg !5067
  call void @llvm.va_end(i8* nonnull %5), !dbg !5068
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !5069
  ret void, !dbg !5069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_dump_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, i8* noundef %3, i32 noundef %4, ...) local_unnamed_addr #0 !dbg !5070 {
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5074, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.value(metadata i32 %1, metadata !5075, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.value(metadata i8* %2, metadata !5076, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.value(metadata i8* %3, metadata !5077, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.value(metadata i32 %4, metadata !5078, metadata !DIExpression()), !dbg !5080
  %7 = bitcast %struct.__va_list* %6 to i8*, !dbg !5081
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !5081
  call void @llvm.dbg.declare(metadata %struct.__va_list* %6, metadata !5079, metadata !DIExpression()), !dbg !5082
  call void @llvm.va_start(i8* nonnull %7), !dbg !5083
  %8 = bitcast %struct.__va_list* %6 to i32*, !dbg !5084
  %9 = load i32, i32* %8, align 4, !dbg !5084
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !5084
  call void @vdump_module_buffer(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %3, i32 noundef %4, i8* noundef %2, [1 x i32] %10) #18, !dbg !5084
  call void @llvm.va_end(i8* nonnull %7), !dbg !5085
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !5086
  ret void, !dbg !5086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !5087 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5094
  call void @llvm.dbg.value(metadata i32 %1, metadata !5093, metadata !DIExpression()), !dbg !5095
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !5096, !range !2141
  %3 = icmp eq i8 %2, 0, !dbg !5096
  br i1 %3, label %5, label %4, !dbg !5098

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !5099
  br label %15, !dbg !5101

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !5102
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !5104
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #20, !dbg !5105
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5106
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5107
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5108
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !5109
  call void @llvm.dbg.value(metadata i32 0, metadata !5092, metadata !DIExpression()), !dbg !5095
  br label %7, !dbg !5110

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5092, metadata !DIExpression()), !dbg !5095
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %8, !dbg !5112
  store volatile i32 0, i32* %9, align 4, !dbg !5115
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %8, !dbg !5116
  store volatile i32 0, i32* %10, align 4, !dbg !5117
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !5118
  store i32 0, i32* %11, align 4, !dbg !5119
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !5120
  store i32 0, i32* %12, align 4, !dbg !5121
  %13 = add nuw nsw i32 %8, 1, !dbg !5122
  call void @llvm.dbg.value(metadata i32 %13, metadata !5092, metadata !DIExpression()), !dbg !5095
  %14 = icmp eq i32 %13, 16, !dbg !5123
  br i1 %14, label %15, label %7, !dbg !5110, !llvm.loop !5124

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !5095
  ret i32 %16, !dbg !5126
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !5127 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5130
  call void @llvm.dbg.value(metadata i32 %1, metadata !5129, metadata !DIExpression()), !dbg !5131
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5132
  %3 = and i32 %2, -31, !dbg !5132
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5132
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5133
  %5 = or i32 %4, 19, !dbg !5133
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5133
  %6 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5134
  %7 = and i32 %6, -31, !dbg !5134
  store volatile i32 %7, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5134
  %8 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5135
  %9 = or i32 %8, 3, !dbg !5135
  store volatile i32 %9, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5135
  tail call void asm sideeffect "isb", ""() #17, !dbg !5136, !srcloc !5140
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !5141
  ret i32 0, !dbg !5142
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !5143 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #20, !dbg !5146
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5147
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5148
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5149
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !5150
  call void @llvm.dbg.value(metadata i32 0, metadata !5145, metadata !DIExpression()), !dbg !5151
  br label %2, !dbg !5152

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5145, metadata !DIExpression()), !dbg !5151
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %3, !dbg !5154
  store volatile i32 0, i32* %4, align 4, !dbg !5157
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %3, !dbg !5158
  store volatile i32 0, i32* %5, align 4, !dbg !5159
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !5160
  store i32 0, i32* %6, align 4, !dbg !5161
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !5162
  store i32 0, i32* %7, align 4, !dbg !5163
  %8 = add nuw nsw i32 %3, 1, !dbg !5164
  call void @llvm.dbg.value(metadata i32 %8, metadata !5145, metadata !DIExpression()), !dbg !5151
  %9 = icmp eq i32 %8, 16, !dbg !5165
  br i1 %9, label %10, label %2, !dbg !5152, !llvm.loop !5166

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !5168
  ret i32 0, !dbg !5169
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #5 !dbg !5170 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5171
  %2 = and i32 %1, 768, !dbg !5173
  %3 = icmp eq i32 %2, 0, !dbg !5173
  br i1 %3, label %8, label %4, !dbg !5174

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5175
  %6 = or i32 %5, 13, !dbg !5175
  store volatile i32 %6, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5175
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5176
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5177
  br label %8, !dbg !5178

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !5179
  ret i32 %9, !dbg !5180
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !5181 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5184
  call void @llvm.dbg.value(metadata i32 %1, metadata !5183, metadata !DIExpression()), !dbg !5185
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5186
  %3 = and i32 %2, 1, !dbg !5188
  %4 = icmp eq i32 %3, 0, !dbg !5188
  br i1 %4, label %7, label %5, !dbg !5189

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #20, !dbg !5190
  br label %7, !dbg !5192

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5193
  %9 = and i32 %8, -2, !dbg !5193
  store volatile i32 %9, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5193
  %10 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5194
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5195
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !5196
  ret i32 0, !dbg !5197
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #5 !dbg !5198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5202, metadata !DIExpression()), !dbg !5203
  %2 = icmp ugt i32 %0, 15, !dbg !5204
  br i1 %2, label %13, label %3, !dbg !5206

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !5207
  %5 = load volatile i32, i32* %4, align 4, !dbg !5207
  %6 = and i32 %5, 256, !dbg !5209
  %7 = icmp eq i32 %6, 0, !dbg !5209
  br i1 %7, label %13, label %8, !dbg !5210

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !5211
  %10 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5213
  %11 = or i32 %10, %9, !dbg !5213
  store volatile i32 %11, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5213
  %12 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5214
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !5215
  br label %13, !dbg !5216

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !5203
  ret i32 %14, !dbg !5217
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #5 !dbg !5218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5220, metadata !DIExpression()), !dbg !5221
  %2 = icmp ugt i32 %0, 15, !dbg !5222
  br i1 %2, label %11, label %3, !dbg !5224

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !5225
  %5 = xor i32 %4, -1, !dbg !5226
  %6 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5227
  %7 = and i32 %6, %5, !dbg !5227
  store volatile i32 %7, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5227
  %8 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5228
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !5229
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !5230
  store i32 0, i32* %9, align 4, !dbg !5231
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !5232
  store i32 0, i32* %10, align 4, !dbg !5233
  br label %11, !dbg !5234

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !5221
  ret i32 %12, !dbg !5235
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #5 !dbg !5236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5241, metadata !DIExpression()), !dbg !5242
  %2 = icmp ugt i32 %0, 3, !dbg !5243
  br i1 %2, label %13, label %3, !dbg !5245

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5246
  %5 = and i32 %4, -769, !dbg !5246
  store volatile i32 %5, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5246
  %6 = shl nuw nsw i32 %0, 8, !dbg !5247
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5248
  %8 = or i32 %7, %6, !dbg !5248
  store volatile i32 %8, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5248
  %9 = icmp eq i32 %0, 0, !dbg !5249
  br i1 %9, label %10, label %11, !dbg !5251

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5252
  br label %11, !dbg !5254

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5255
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5256
  br label %13, !dbg !5257

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !5242
  ret i32 %14, !dbg !5258
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !5259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5270, metadata !DIExpression()), !dbg !5272
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !5271, metadata !DIExpression()), !dbg !5272
  %3 = icmp ugt i32 %0, 15, !dbg !5273
  br i1 %3, label %30, label %4, !dbg !5275

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !5276
  br i1 %5, label %30, label %6, !dbg !5278

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !5279
  %8 = load i32, i32* %7, align 4, !dbg !5279
  %9 = and i32 %8, 4095, !dbg !5281
  %10 = icmp eq i32 %9, 0, !dbg !5281
  br i1 %10, label %12, label %11, !dbg !5282

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.66, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.67, i32 0, i32 0)) #19, !dbg !5283
  unreachable, !dbg !5283

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !5285
  %14 = load i32, i32* %13, align 4, !dbg !5285
  %15 = and i32 %14, 4095, !dbg !5287
  %16 = icmp eq i32 %15, 0, !dbg !5287
  br i1 %16, label %18, label %17, !dbg !5288

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.66, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.67, i32 0, i32 0)) #19, !dbg !5289
  unreachable, !dbg !5289

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !5291
  store volatile i32 %8, i32* %19, align 4, !dbg !5292
  %20 = load i32, i32* %7, align 4, !dbg !5293
  %21 = load i32, i32* %13, align 4, !dbg !5294
  %22 = add i32 %21, %20, !dbg !5295
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %0, !dbg !5296
  store volatile i32 %22, i32* %23, align 4, !dbg !5297
  %24 = load volatile i32, i32* %19, align 4, !dbg !5298
  %25 = or i32 %24, 256, !dbg !5298
  store volatile i32 %25, i32* %19, align 4, !dbg !5298
  %26 = load volatile i32, i32* %19, align 4, !dbg !5299
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !5300
  store i32 %26, i32* %27, align 4, !dbg !5301
  %28 = load volatile i32, i32* %23, align 4, !dbg !5302
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !5303
  store i32 %28, i32* %29, align 4, !dbg !5304
  br label %30, !dbg !5305

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !5272
  ret i32 %31, !dbg !5306
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5311, metadata !DIExpression()), !dbg !5313
  %2 = and i32 %0, 31, !dbg !5314
  %3 = icmp eq i32 %2, 0, !dbg !5314
  br i1 %3, label %4, label %9, !dbg !5316

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5317
  call void @llvm.dbg.value(metadata i32 %5, metadata !5312, metadata !DIExpression()), !dbg !5313
  %6 = and i32 %0, -32, !dbg !5318
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5319
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5320
  %8 = or i32 %7, 5, !dbg !5320
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5320
  tail call void asm sideeffect "isb", ""() #17, !dbg !5321, !srcloc !5140
  tail call void @restore_interrupt_mask(i32 noundef %5) #18, !dbg !5323
  br label %9, !dbg !5324

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !5313
  ret i32 %10, !dbg !5325
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5330, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 %1, metadata !5331, metadata !DIExpression()), !dbg !5334
  %3 = add i32 %1, %0, !dbg !5335
  call void @llvm.dbg.value(metadata i32 %3, metadata !5333, metadata !DIExpression()), !dbg !5334
  %4 = or i32 %1, %0, !dbg !5336
  %5 = and i32 %4, 31, !dbg !5336
  %6 = icmp eq i32 %5, 0, !dbg !5336
  br i1 %6, label %7, label %16, !dbg !5336

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5338
  call void @llvm.dbg.value(metadata i32 %8, metadata !5332, metadata !DIExpression()), !dbg !5334
  call void @llvm.dbg.value(metadata i32 %0, metadata !5330, metadata !DIExpression()), !dbg !5334
  %9 = icmp ugt i32 %3, %0, !dbg !5339
  br i1 %9, label %10, label %15, !dbg !5340

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !5330, metadata !DIExpression()), !dbg !5334
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #20, !dbg !5341
  %13 = add i32 %11, 32, !dbg !5343
  call void @llvm.dbg.value(metadata i32 %13, metadata !5330, metadata !DIExpression()), !dbg !5334
  %14 = icmp ult i32 %13, %3, !dbg !5339
  br i1 %14, label %10, label %15, !dbg !5340, !llvm.loop !5344

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #17, !dbg !5346, !srcloc !5140
  tail call void @restore_interrupt_mask(i32 noundef %8) #18, !dbg !5348
  br label %16, !dbg !5349

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !5334
  ret i32 %17, !dbg !5350
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5353, metadata !DIExpression()), !dbg !5355
  %2 = and i32 %0, 31, !dbg !5356
  %3 = icmp eq i32 %2, 0, !dbg !5356
  br i1 %3, label %4, label %9, !dbg !5358

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5359
  call void @llvm.dbg.value(metadata i32 %5, metadata !5354, metadata !DIExpression()), !dbg !5355
  %6 = and i32 %0, -32, !dbg !5360
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5361
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5362
  %8 = or i32 %7, 21, !dbg !5362
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5362
  tail call void asm sideeffect "isb", ""() #17, !dbg !5363, !srcloc !5140
  tail call void @restore_interrupt_mask(i32 noundef %5) #18, !dbg !5365
  br label %9, !dbg !5366

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !5355
  ret i32 %10, !dbg !5367
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5370, metadata !DIExpression()), !dbg !5374
  call void @llvm.dbg.value(metadata i32 %1, metadata !5371, metadata !DIExpression()), !dbg !5374
  %3 = add i32 %1, %0, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %3, metadata !5373, metadata !DIExpression()), !dbg !5374
  %4 = or i32 %1, %0, !dbg !5376
  %5 = and i32 %4, 31, !dbg !5376
  %6 = icmp eq i32 %5, 0, !dbg !5376
  br i1 %6, label %7, label %16, !dbg !5376

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5378
  call void @llvm.dbg.value(metadata i32 %8, metadata !5372, metadata !DIExpression()), !dbg !5374
  call void @llvm.dbg.value(metadata i32 %0, metadata !5370, metadata !DIExpression()), !dbg !5374
  %9 = icmp ugt i32 %3, %0, !dbg !5379
  br i1 %9, label %10, label %15, !dbg !5380

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !5370, metadata !DIExpression()), !dbg !5374
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #20, !dbg !5381
  %13 = add i32 %11, 32, !dbg !5383
  call void @llvm.dbg.value(metadata i32 %13, metadata !5370, metadata !DIExpression()), !dbg !5374
  %14 = icmp ult i32 %13, %3, !dbg !5379
  br i1 %14, label %10, label %15, !dbg !5380, !llvm.loop !5384

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #17, !dbg !5386, !srcloc !5140
  tail call void @restore_interrupt_mask(i32 noundef %8) #18, !dbg !5388
  br label %16, !dbg !5389

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !5374
  ret i32 %17, !dbg !5390
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !5391 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5394
  call void @llvm.dbg.value(metadata i32 %1, metadata !5393, metadata !DIExpression()), !dbg !5395
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5396
  %3 = and i32 %2, -31, !dbg !5396
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5396
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5397
  %5 = or i32 %4, 19, !dbg !5397
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5397
  tail call void asm sideeffect "isb", ""() #17, !dbg !5398, !srcloc !5140
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !5400
  ret i32 0, !dbg !5401
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #5 !dbg !5402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5406, metadata !DIExpression()), !dbg !5408
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5409
  %3 = and i32 %2, 8, !dbg !5411
  %4 = icmp eq i32 %3, 0, !dbg !5411
  br i1 %4, label %23, label %5, !dbg !5412

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5407, metadata !DIExpression()), !dbg !5408
  %7 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5413
  %8 = shl nuw nsw i32 1, %6, !dbg !5418
  %9 = and i32 %7, %8, !dbg !5419
  %10 = icmp eq i32 %9, 0, !dbg !5419
  br i1 %10, label %20, label %11, !dbg !5420

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %6, !dbg !5421
  %13 = load volatile i32, i32* %12, align 4, !dbg !5421
  %14 = and i32 %13, -257, !dbg !5424
  %15 = icmp ugt i32 %14, %0, !dbg !5425
  br i1 %15, label %20, label %16, !dbg !5426

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %6, !dbg !5427
  %18 = load volatile i32, i32* %17, align 4, !dbg !5427
  %19 = icmp ugt i32 %18, %0, !dbg !5428
  br i1 %19, label %23, label %20, !dbg !5429

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !5430
  call void @llvm.dbg.value(metadata i32 %21, metadata !5407, metadata !DIExpression()), !dbg !5408
  %22 = icmp eq i32 %21, 16, !dbg !5431
  br i1 %22, label %23, label %5, !dbg !5432, !llvm.loop !5433

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !5408
  ret i1 %24, !dbg !5435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_nvic_init() local_unnamed_addr #7 !dbg !5436 {
  ret i32 0, !dbg !5440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5445, metadata !DIExpression()), !dbg !5447
  call void @llvm.dbg.value(metadata i32 -1, metadata !5446, metadata !DIExpression()), !dbg !5447
  %2 = icmp ugt i32 %0, 95, !dbg !5448
  br i1 %2, label %4, label %3, !dbg !5448

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #20, !dbg !5450
  call void @llvm.dbg.value(metadata i32 0, metadata !5446, metadata !DIExpression()), !dbg !5447
  br label %4, !dbg !5452

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5447
  ret i32 %5, !dbg !5453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5458, metadata !DIExpression()), !dbg !5459
  %2 = and i32 %0, 31, !dbg !5460
  %3 = shl nuw i32 1, %2, !dbg !5461
  %4 = lshr i32 %0, 5, !dbg !5462
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !5463
  store volatile i32 %3, i32* %5, align 4, !dbg !5464
  ret void, !dbg !5465
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5468, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i32 -1, metadata !5469, metadata !DIExpression()), !dbg !5470
  %2 = icmp ugt i32 %0, 95, !dbg !5471
  br i1 %2, label %4, label %3, !dbg !5471

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #20, !dbg !5473
  call void @llvm.dbg.value(metadata i32 0, metadata !5469, metadata !DIExpression()), !dbg !5470
  br label %4, !dbg !5475

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5470
  ret i32 %5, !dbg !5476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5479, metadata !DIExpression()), !dbg !5480
  %2 = and i32 %0, 31, !dbg !5481
  %3 = shl nuw i32 1, %2, !dbg !5482
  %4 = lshr i32 %0, 5, !dbg !5483
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !5484
  store volatile i32 %3, i32* %5, align 4, !dbg !5485
  ret void, !dbg !5486
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #8 !dbg !5487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 255, metadata !5492, metadata !DIExpression()), !dbg !5493
  %2 = icmp ugt i32 %0, 95, !dbg !5494
  br i1 %2, label %5, label %3, !dbg !5494

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #20, !dbg !5496
  call void @llvm.dbg.value(metadata i32 %4, metadata !5492, metadata !DIExpression()), !dbg !5493
  br label %5, !dbg !5498

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !5493
  ret i32 %6, !dbg !5499
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #8 !dbg !5500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5504, metadata !DIExpression()), !dbg !5505
  %2 = lshr i32 %0, 5, !dbg !5506
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !5507
  %4 = load volatile i32, i32* %3, align 4, !dbg !5507
  %5 = and i32 %0, 31, !dbg !5508
  %6 = lshr i32 %4, %5, !dbg !5509
  %7 = and i32 %6, 1, !dbg !5509
  ret i32 %7, !dbg !5510
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5513, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 -1, metadata !5514, metadata !DIExpression()), !dbg !5515
  %2 = icmp ugt i32 %0, 95, !dbg !5516
  br i1 %2, label %4, label %3, !dbg !5516

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #20, !dbg !5518
  call void @llvm.dbg.value(metadata i32 0, metadata !5514, metadata !DIExpression()), !dbg !5515
  br label %4, !dbg !5520

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5515
  ret i32 %5, !dbg !5521
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5522 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5524, metadata !DIExpression()), !dbg !5525
  %2 = and i32 %0, 31, !dbg !5526
  %3 = shl nuw i32 1, %2, !dbg !5527
  %4 = lshr i32 %0, 5, !dbg !5528
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !5529
  store volatile i32 %3, i32* %5, align 4, !dbg !5530
  ret void, !dbg !5531
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5534, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.value(metadata i32 -1, metadata !5535, metadata !DIExpression()), !dbg !5536
  %2 = icmp ugt i32 %0, 95, !dbg !5537
  br i1 %2, label %4, label %3, !dbg !5537

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #20, !dbg !5539
  call void @llvm.dbg.value(metadata i32 0, metadata !5535, metadata !DIExpression()), !dbg !5536
  br label %4, !dbg !5541

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5536
  ret i32 %5, !dbg !5542
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5545, metadata !DIExpression()), !dbg !5546
  %2 = and i32 %0, 31, !dbg !5547
  %3 = shl nuw i32 1, %2, !dbg !5548
  %4 = lshr i32 %0, 5, !dbg !5549
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !5550
  store volatile i32 %3, i32* %5, align 4, !dbg !5551
  ret void, !dbg !5552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !5553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5557, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata i32 %1, metadata !5558, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.value(metadata i32 -1, metadata !5559, metadata !DIExpression()), !dbg !5560
  %3 = icmp ugt i32 %0, 95, !dbg !5561
  br i1 %3, label %5, label %4, !dbg !5561

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #20, !dbg !5563
  call void @llvm.dbg.value(metadata i32 0, metadata !5559, metadata !DIExpression()), !dbg !5560
  br label %5, !dbg !5565

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !5560
  ret i32 %6, !dbg !5566
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5571, metadata !DIExpression()), !dbg !5573
  call void @llvm.dbg.value(metadata i32 %1, metadata !5572, metadata !DIExpression()), !dbg !5573
  %3 = trunc i32 %1 to i8, !dbg !5574
  %4 = shl i8 %3, 5, !dbg !5574
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5577
  store volatile i8 %4, i8* %5, align 1, !dbg !5578
  ret void, !dbg !5579
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #8 !dbg !5580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5582, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.value(metadata i32 68, metadata !5583, metadata !DIExpression()), !dbg !5584
  %2 = icmp ugt i32 %0, 95, !dbg !5585
  br i1 %2, label %5, label %3, !dbg !5585

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #20, !dbg !5587
  call void @llvm.dbg.value(metadata i32 %4, metadata !5583, metadata !DIExpression()), !dbg !5584
  br label %5, !dbg !5589

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !5584
  ret i32 %6, !dbg !5590
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #8 !dbg !5591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5593, metadata !DIExpression()), !dbg !5594
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5595
  %3 = load volatile i8, i8* %2, align 1, !dbg !5595
  %4 = lshr i8 %3, 5, !dbg !5598
  %5 = zext i8 %4 to i32, !dbg !5598
  ret i32 %5, !dbg !5599
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".ramTEXT" !dbg !5600 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !5602, metadata !DIExpression()), !dbg !5604
  tail call void @Flash_ReturnReady() #18, !dbg !5605
  %1 = tail call fastcc i32 @get_current_irq() #20, !dbg !5606
  call void @llvm.dbg.value(metadata i32 %1, metadata !5603, metadata !DIExpression()), !dbg !5604
  %2 = icmp ugt i32 %1, 95, !dbg !5607
  br i1 %2, label %12, label %3, !dbg !5607

3:                                                ; preds = %0
  %4 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !5609
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !5609
  %6 = icmp eq void (i32)* %5, null, !dbg !5611
  br i1 %6, label %7, label %8, !dbg !5612

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !5602, metadata !DIExpression()), !dbg !5604
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 194, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.78, i32 0, i32 0)) #18, !dbg !5613
  br label %12, !dbg !5615

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #20, !dbg !5616
  %10 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !5618
  store i32 %9, i32* %10, align 4, !dbg !5619
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !5620
  tail call void %11(i32 noundef %1) #18, !dbg !5621
  call void @llvm.dbg.value(metadata i32 0, metadata !5602, metadata !DIExpression()), !dbg !5604
  br label %12, !dbg !5622

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !5604
  ret i32 %13, !dbg !5623
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #8 !dbg !5624 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5627
  %2 = and i32 %1, 511, !dbg !5628
  call void @llvm.dbg.value(metadata i32 %2, metadata !5626, metadata !DIExpression()), !dbg !5629
  %3 = add nsw i32 %2, -16, !dbg !5630
  ret i32 %3, !dbg !5631
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #8 !dbg !5632 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5633
  %2 = lshr i32 %1, 22, !dbg !5634
  %3 = and i32 %2, 1, !dbg !5634
  ret i32 %3, !dbg !5635
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !5636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5641, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !5642, metadata !DIExpression()), !dbg !5644
  %3 = icmp ugt i32 %0, 95, !dbg !5645
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !5645
  br i1 %5, label %10, label %6, !dbg !5645

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5647
  call void @llvm.dbg.value(metadata i32 %7, metadata !5643, metadata !DIExpression()), !dbg !5644
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #20, !dbg !5648
  %8 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !5649
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !5650
  %9 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !5651
  store i32 0, i32* %9, align 4, !dbg !5652
  tail call void @restore_interrupt_mask(i32 noundef %7) #18, !dbg !5653
  br label %10, !dbg !5654

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !5644
  ret i32 %11, !dbg !5655
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !5656 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !5660, metadata !DIExpression()), !dbg !5661
  %2 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !5662
  store i32 %2, i32* %0, align 4, !dbg !5663
  ret i32 0, !dbg !5664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !5665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5669, metadata !DIExpression()), !dbg !5670
  tail call void @restore_interrupt_mask(i32 noundef %0) #18, !dbg !5671
  ret i32 0, !dbg !5672
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !5673 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !5678, metadata !DIExpression()), !dbg !5679
  %1 = tail call i32 @flash_sfc_config(i8 noundef zeroext 0) #18, !dbg !5680
  call void @llvm.dbg.value(metadata i32 %1, metadata !5678, metadata !DIExpression()), !dbg !5679
  %2 = ashr i32 %1, 31, !dbg !5681
  ret i32 %2, !dbg !5682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #7 !dbg !5683 {
  ret i32 0, !dbg !5684
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5690, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 %1, metadata !5691, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata i32 -1, metadata !5692, metadata !DIExpression()), !dbg !5693
  %3 = tail call i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) #18, !dbg !5694
  call void @llvm.dbg.value(metadata i32 %3, metadata !5692, metadata !DIExpression()), !dbg !5693
  %4 = ashr i32 %3, 31, !dbg !5695
  ret i32 %4, !dbg !5696
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5701, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.value(metadata i8* %1, metadata !5702, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.value(metadata i32 %2, metadata !5703, metadata !DIExpression()), !dbg !5704
  %4 = add i32 %0, 268435456, !dbg !5705
  %5 = inttoptr i32 %4 to i8*, !dbg !5706
  tail call void @hal_flash_direct_read(i8* noundef %5, i8* noundef %1, i32 noundef %2) #18, !dbg !5707
  ret i32 0, !dbg !5708
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5709 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5713, metadata !DIExpression()), !dbg !5717
  call void @llvm.dbg.value(metadata i8* %1, metadata !5714, metadata !DIExpression()), !dbg !5717
  call void @llvm.dbg.value(metadata i32 %2, metadata !5715, metadata !DIExpression()), !dbg !5717
  %4 = tail call i32 @flash_sfc_write(i32 noundef %0, i32 noundef %2, i8* noundef %1) #18, !dbg !5718
  call void @llvm.dbg.value(metadata i32 %4, metadata !5716, metadata !DIExpression()), !dbg !5717
  %5 = ashr i32 %4, 31, !dbg !5719
  ret i32 %5, !dbg !5720
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !5721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5726, metadata !DIExpression()), !dbg !5727
  %2 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !5728
  %3 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !5730
  %4 = load i8, i8* %3, align 4, !dbg !5730, !range !2141
  %5 = icmp eq i8 %4, 0, !dbg !5730
  br i1 %5, label %6, label %12, !dbg !5731

6:                                                ; preds = %1
  %7 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !5732
  br i1 %7, label %9, label %8, !dbg !5734

8:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 89, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.81, i32 0, i32 0), i32 noundef %0) #18, !dbg !5735
  br label %12, !dbg !5737

9:                                                ; preds = %6
  %10 = bitcast %struct.hal_gpt_context_t* %2 to i8*, !dbg !5738
  %11 = tail call i8* @memset(i8* noundef nonnull %10, i32 noundef 0, i32 noundef 16) #18, !dbg !5739
  store i8 1, i8* %3, align 4, !dbg !5740
  br label %12, !dbg !5741

12:                                               ; preds = %1, %9, %8
  %13 = phi i32 [ -2, %8 ], [ 0, %9 ], [ -3, %1 ], !dbg !5727
  ret i32 %13, !dbg !5742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #7 !dbg !5743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5747, metadata !DIExpression()), !dbg !5748
  %2 = icmp ult i32 %0, 5, !dbg !5749
  %3 = icmp ne i32 %0, 2
  %4 = and i1 %2, %3, !dbg !5751
  ret i1 %4, !dbg !5752
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !5753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5755, metadata !DIExpression()), !dbg !5756
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !5757
  br i1 %2, label %4, label %3, !dbg !5759

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 104, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.81, i32 0, i32 0), i32 noundef %0) #18, !dbg !5760
  br label %14, !dbg !5762

4:                                                ; preds = %1
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !5763
  %6 = getelementptr inbounds %struct.hal_gpt_context_t, %struct.hal_gpt_context_t* %5, i32 0, i32 0, !dbg !5765
  %7 = load i32, i32* %6, align 4, !dbg !5765
  %8 = icmp eq i32 %7, 0, !dbg !5766
  br i1 %8, label %10, label %9, !dbg !5767

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 109, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.82, i32 0, i32 0), i32 noundef %0) #18, !dbg !5768
  br label %14, !dbg !5770

10:                                               ; preds = %4
  %11 = bitcast %struct.hal_gpt_context_t* %5 to i8*, !dbg !5771
  %12 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 0, i32 noundef 16) #18, !dbg !5772
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !5773
  store i8 0, i8* %13, align 4, !dbg !5774
  br label %14, !dbg !5775

14:                                               ; preds = %10, %9, %3
  %15 = phi i32 [ -2, %3 ], [ -3, %9 ], [ 0, %10 ], !dbg !5756
  ret i32 %15, !dbg !5776
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !5777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5782, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.value(metadata i32* %1, metadata !5783, metadata !DIExpression()), !dbg !5784
  switch i32 %0, label %24 [
    i32 0, label %3
    i32 1, label %9
    i32 2, label %18
  ], !dbg !5785

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !5786
  %5 = icmp eq i32 %4, 1, !dbg !5790
  br i1 %5, label %7, label %6, !dbg !5791

6:                                                ; preds = %3
  tail call void @CM4_GPT2Init() #18, !dbg !5792
  br label %7, !dbg !5794

7:                                                ; preds = %6, %3
  %8 = tail call i32 @get_current_count() #18, !dbg !5795
  store i32 %8, i32* %1, align 4, !dbg !5796
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !5797
  br label %25, !dbg !5798

9:                                                ; preds = %2
  %10 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !5799
  %11 = icmp eq i32 %10, 1, !dbg !5803
  br i1 %11, label %13, label %12, !dbg !5804

12:                                               ; preds = %9
  tail call void @CM4_GPT4Init() #18, !dbg !5805
  br label %13, !dbg !5807

13:                                               ; preds = %12, %9
  %14 = tail call i32 @get_current_gpt4_count() #18, !dbg !5808
  %15 = tail call i32 @top_mcu_freq_get() #18, !dbg !5809
  %16 = udiv i32 %15, 1000000, !dbg !5810
  %17 = udiv i32 %14, %16, !dbg !5811
  store i32 %17, i32* %1, align 4, !dbg !5812
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !5813
  br label %25, !dbg !5814

18:                                               ; preds = %2
  %19 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !5815
  %20 = icmp eq i32 %19, 1, !dbg !5819
  br i1 %20, label %22, label %21, !dbg !5820

21:                                               ; preds = %18
  tail call void @CM4_GPT4Init() #18, !dbg !5821
  br label %22, !dbg !5823

22:                                               ; preds = %21, %18
  %23 = tail call i32 @get_current_gpt4_count() #18, !dbg !5824
  store i32 %23, i32* %1, align 4, !dbg !5825
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !5826
  br label %25

24:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_free_run_count, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.85, i32 0, i32 0), i32 noundef %0) #18, !dbg !5827
  br label %25, !dbg !5829

25:                                               ; preds = %7, %22, %13, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %13 ], [ 0, %22 ], [ 0, %7 ], !dbg !5784
  ret i32 %26, !dbg !5830
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #4 !dbg !5831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5835, metadata !DIExpression()), !dbg !5838
  call void @llvm.dbg.value(metadata i32 %1, metadata !5836, metadata !DIExpression()), !dbg !5838
  call void @llvm.dbg.value(metadata i32* %2, metadata !5837, metadata !DIExpression()), !dbg !5838
  %4 = icmp eq i32* %2, null, !dbg !5839
  br i1 %4, label %7, label %5, !dbg !5841

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !5842
  store i32 %6, i32* %2, align 4, !dbg !5842
  br label %7, !dbg !5844

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !5838
  ret i32 %8, !dbg !5845
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !5846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5851, metadata !DIExpression()), !dbg !5853
  call void @llvm.dbg.value(metadata i32* %1, metadata !5852, metadata !DIExpression()), !dbg !5853
  %3 = icmp ugt i32 %0, 4, !dbg !5854
  br i1 %3, label %4, label %5, !dbg !5856

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_running_status, i32 0, i32 0), i32 noundef 167, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.86, i32 0, i32 0), i32 noundef %0) #18, !dbg !5857
  br label %8, !dbg !5859

5:                                                ; preds = %2
  %6 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !5860
  %7 = load i32, i32* %6, align 4, !dbg !5860
  store i32 %7, i32* %1, align 4, !dbg !5861
  br label %8, !dbg !5862

8:                                                ; preds = %5, %4
  %9 = phi i32 [ -2, %4 ], [ 0, %5 ], !dbg !5853
  ret i32 %9, !dbg !5863
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5868, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !5869, metadata !DIExpression()), !dbg !5871
  call void @llvm.dbg.value(metadata i8* %2, metadata !5870, metadata !DIExpression()), !dbg !5871
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !5872
  br i1 %4, label %6, label %5, !dbg !5874

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_gpt_register_callback, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.87, i32 0, i32 0), i32 noundef %0) #18, !dbg !5875
  br label %15, !dbg !5877

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !5878
  %8 = load i8, i8* %7, align 4, !dbg !5878, !range !2141
  %9 = icmp eq i8 %8, 1, !dbg !5880
  br i1 %9, label %10, label %15, !dbg !5881

10:                                               ; preds = %6
  %11 = icmp eq void (i8*)* %1, null, !dbg !5882
  br i1 %11, label %15, label %12, !dbg !5884

12:                                               ; preds = %10
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !5885
  store void (i8*)* %1, void (i8*)** %13, align 4, !dbg !5886
  %14 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !5887
  store i8* %2, i8** %14, align 4, !dbg !5888
  br label %15, !dbg !5889

15:                                               ; preds = %10, %6, %12, %5
  %16 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !5871
  ret i32 %16, !dbg !5890
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5896, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.value(metadata i32 %1, metadata !5897, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.value(metadata i32 %2, metadata !5898, metadata !DIExpression()), !dbg !5899
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !5900
  br i1 %4, label %6, label %5, !dbg !5902

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_gpt_start_timer_ms, i32 0, i32 0), i32 noundef 221, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.87, i32 0, i32 0), i32 noundef %0) #18, !dbg !5903
  br label %17, !dbg !5905

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !5906
  %8 = load i8, i8* %7, align 4, !dbg !5906, !range !2141
  %9 = icmp eq i8 %8, 1, !dbg !5908
  br i1 %9, label %10, label %17, !dbg !5909

10:                                               ; preds = %6
  %11 = icmp ugt i32 %1, 130150523, !dbg !5910
  br i1 %11, label %17, label %12, !dbg !5912

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %1) #20, !dbg !5913
  %14 = tail call fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %2) #20, !dbg !5914
  %15 = tail call fastcc void ()* @hal_gpt_map_callback(i32 noundef %0) #20, !dbg !5915
  tail call void @drvTMR_init(i32 noundef %0, i32 noundef %13, i1 noundef zeroext %14, void ()* noundef nonnull %15) #18, !dbg !5916
  tail call void @TMR_Start(i32 noundef %0) #18, !dbg !5917
  %16 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !5918
  store i32 1, i32* %16, align 4, !dbg !5919
  br label %17, !dbg !5920

17:                                               ; preds = %10, %6, %12, %5
  %18 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !5899
  ret i32 %18, !dbg !5921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %0) unnamed_addr #7 !dbg !5922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5926, metadata !DIExpression()), !dbg !5927
  %2 = shl i32 %0, 5, !dbg !5928
  %3 = mul i32 %0, 7, !dbg !5929
  %4 = udiv i32 %3, 10, !dbg !5930
  %5 = add i32 %4, %2, !dbg !5931
  %6 = mul i32 %0, 6, !dbg !5932
  %7 = udiv i32 %6, 100, !dbg !5933
  %8 = add i32 %5, %7, !dbg !5934
  %9 = shl i32 %0, 3, !dbg !5935
  %10 = udiv i32 %9, 1000, !dbg !5936
  %11 = add i32 %8, %10, !dbg !5937
  ret i32 %11, !dbg !5938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %0) unnamed_addr #7 !dbg !5939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5943, metadata !DIExpression()), !dbg !5944
  %2 = icmp eq i32 %0, 1, !dbg !5945
  ret i1 %2, !dbg !5946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull void ()* @hal_gpt_map_callback(i32 noundef %0) unnamed_addr #7 !dbg !5947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5952, metadata !DIExpression()), !dbg !5953
  %2 = icmp eq i32 %0, 0, !dbg !5954
  %3 = select i1 %2, void ()* @hal_gpt_callback0, void ()* @hal_gpt_callback1, !dbg !5955
  ret void ()* %3, !dbg !5956
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback0() #0 !dbg !5957 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 0), align 4, !dbg !5961
  %2 = icmp eq void (i8*)* %1, null, !dbg !5963
  br i1 %2, label %5, label %3, !dbg !5964

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 1), align 4, !dbg !5965
  tail call void %1(i8* noundef %4) #18, !dbg !5967
  br label %5, !dbg !5968

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 0), align 4, !dbg !5969
  ret void, !dbg !5970
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback1() #0 !dbg !5971 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 0), align 4, !dbg !5974
  %2 = icmp eq void (i8*)* %1, null, !dbg !5976
  br i1 %2, label %5, label %3, !dbg !5977

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 1), align 4, !dbg !5978
  tail call void %1(i8* noundef %4) #18, !dbg !5980
  br label %5, !dbg !5981

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 0), align 4, !dbg !5982
  ret void, !dbg !5983
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !5984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5986, metadata !DIExpression()), !dbg !5987
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #20, !dbg !5988
  br i1 %2, label %4, label %3, !dbg !5990

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_gpt_stop_timer, i32 0, i32 0), i32 noundef 245, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.87, i32 0, i32 0), i32 noundef %0) #18, !dbg !5991
  br label %6, !dbg !5993

4:                                                ; preds = %1
  tail call void @TMR_Stop(i32 noundef %0) #18, !dbg !5994
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !5995
  store i32 0, i32* %5, align 4, !dbg !5996
  br label %6, !dbg !5997

6:                                                ; preds = %4, %3
  %7 = phi i32 [ -2, %3 ], [ 0, %4 ], !dbg !5987
  ret i32 %7, !dbg !5998
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !5999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6003, metadata !DIExpression()), !dbg !6004
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6005
  %3 = icmp eq i32 %2, 1, !dbg !6007
  br i1 %3, label %5, label %4, !dbg !6008

4:                                                ; preds = %1
  tail call void @CM4_GPT2Init() #18, !dbg !6009
  br label %5, !dbg !6011

5:                                                ; preds = %4, %1
  tail call void @delay_ms(i32 noundef %0) #18, !dbg !6012
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6013
  ret i32 0, !dbg !6014
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !6015 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6017, metadata !DIExpression()), !dbg !6018
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6019
  %3 = icmp eq i32 %2, 1, !dbg !6021
  br i1 %3, label %5, label %4, !dbg !6022

4:                                                ; preds = %1
  tail call void @CM4_GPT4Init() #18, !dbg !6023
  br label %5, !dbg !6025

5:                                                ; preds = %4, %1
  tail call void @delay_us(i32 noundef %0) #18, !dbg !6026
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6027
  ret i32 0, !dbg !6028
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !6029 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6031, metadata !DIExpression()), !dbg !6034
  %4 = bitcast i32* %2 to i8*, !dbg !6035
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !6035
  %5 = bitcast i32* %3 to i8*, !dbg !6036
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6036
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6037
  %7 = load i8, i8* %6, align 1, !dbg !6037, !range !2141
  %8 = icmp eq i8 %7, 0, !dbg !6039
  br i1 %8, label %9, label %26, !dbg !6040

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32* %3, metadata !6033, metadata !DIExpression(DW_OP_deref)), !dbg !6034
  %10 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %3) #18, !dbg !6041
  call void @llvm.dbg.value(metadata i32* %2, metadata !6032, metadata !DIExpression(DW_OP_deref)), !dbg !6034
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %2) #18, !dbg !6043
  %11 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !6044
  %12 = load i32, i32* %11, align 4, !dbg !6044
  %13 = load i32, i32* %2, align 4, !dbg !6046
  call void @llvm.dbg.value(metadata i32 %13, metadata !6032, metadata !DIExpression()), !dbg !6034
  %14 = icmp eq i32 %12, %13, !dbg !6047
  br i1 %14, label %15, label %23, !dbg !6048

15:                                               ; preds = %9
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6049
  %17 = load i8, i8* %16, align 1, !dbg !6049, !range !2141
  %18 = icmp eq i8 %17, 0, !dbg !6049
  br i1 %18, label %23, label %19, !dbg !6052

19:                                               ; preds = %15
  %20 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6053
  %21 = load i8, i8* %20, align 1, !dbg !6053
  %22 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %21) #18, !dbg !6055
  store i8 0, i8* %16, align 1, !dbg !6056
  br label %23, !dbg !6057

23:                                               ; preds = %15, %19, %9
  %24 = load i32, i32* %3, align 4, !dbg !6058
  call void @llvm.dbg.value(metadata i32 %24, metadata !6033, metadata !DIExpression()), !dbg !6034
  %25 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %24) #18, !dbg !6059
  br label %27, !dbg !6060

26:                                               ; preds = %1
  store i8 0, i8* %6, align 1, !dbg !6061
  br label %27

27:                                               ; preds = %26, %23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6063
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17, !dbg !6063
  ret void, !dbg !6063
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6070, metadata !DIExpression()), !dbg !6072
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6071, metadata !DIExpression()), !dbg !6072
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #20, !dbg !6073
  br i1 %3, label %4, label %24, !dbg !6075

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !6076
  %6 = load i8, i8* %5, align 4, !dbg !6076, !range !2141
  %7 = icmp eq i8 %6, 0, !dbg !6076
  br i1 %7, label %8, label %24, !dbg !6078

8:                                                ; preds = %4
  %9 = tail call i8* @memset(i8* noundef nonnull %5, i32 noundef 0, i32 noundef 64) #18, !dbg !6079
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6080
  %11 = bitcast %struct.hal_uart_config_t* %10 to i8*, !dbg !6081
  %12 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !6082
  %13 = tail call i8* @memcpy(i8* noundef nonnull %11, i8* noundef %12, i32 noundef 16) #18, !dbg !6083
  store i8 1, i8* %5, align 4, !dbg !6084
  %14 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6085, !range !6086
  tail call void @uart_reset_default_value(i32 noundef %14) #18, !dbg !6087
  tail call void @halUART_HWInit(i32 noundef %14) #18, !dbg !6088
  %15 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #20, !dbg !6089
  %16 = icmp eq i32 %15, 0, !dbg !6091
  br i1 %16, label %17, label %24, !dbg !6092

17:                                               ; preds = %8
  tail call void @uart_set_sleep_mode(i32 noundef %14) #18, !dbg !6093
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6094
  store i8 0, i8* %18, align 1, !dbg !6095
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6096
  store i8 0, i8* %19, align 1, !dbg !6097
  %20 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([2 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !6098
  %21 = load i8*, i8** %20, align 4, !dbg !6098
  %22 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %21) #18, !dbg !6099
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6100
  store i8 %22, i8* %23, align 1, !dbg !6101
  br label %24, !dbg !6102

24:                                               ; preds = %8, %4, %2, %17
  %25 = phi i32 [ 0, %17 ], [ -4, %2 ], [ -3, %4 ], [ -4, %8 ], !dbg !6072
  ret i32 %25, !dbg !6103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef readonly %1) unnamed_addr #9 !dbg !6104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6110, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6111, metadata !DIExpression()), !dbg !6112
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6113
  %4 = icmp ne %struct.hal_uart_config_t* %1, null
  %5 = and i1 %4, %3, !dbg !6115
  br i1 %5, label %6, label %22, !dbg !6115

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6116
  %8 = load i32, i32* %7, align 4, !dbg !6116
  %9 = icmp ugt i32 %8, 12, !dbg !6118
  br i1 %9, label %22, label %10, !dbg !6119

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6120
  %12 = load i32, i32* %11, align 4, !dbg !6120
  %13 = icmp ugt i32 %12, 2, !dbg !6121
  br i1 %13, label %22, label %14, !dbg !6122

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6123
  %16 = load i32, i32* %15, align 4, !dbg !6123
  %17 = icmp ugt i32 %16, 1, !dbg !6124
  br i1 %17, label %22, label %18, !dbg !6125

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6126
  %20 = load i32, i32* %19, align 4, !dbg !6126
  %21 = icmp ult i32 %20, 4, !dbg !6127
  br label %22, !dbg !6128

22:                                               ; preds = %18, %6, %10, %14, %2
  %23 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %10 ], [ false, %6 ], [ %21, %18 ], !dbg !6112
  ret i1 %23, !dbg !6129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_port(i32 noundef %0) unnamed_addr #7 !dbg !6130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6134, metadata !DIExpression()), !dbg !6135
  %2 = icmp ne i32 %0, 0, !dbg !6136
  %3 = zext i1 %2 to i32, !dbg !6137
  ret i32 %3, !dbg !6138
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6143, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6144, metadata !DIExpression()), !dbg !6145
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #20, !dbg !6146
  br i1 %3, label %4, label %22, !dbg !6148

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6149
  %6 = bitcast %struct.hal_uart_config_t* %5 to i8*, !dbg !6150
  %7 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !6151
  %8 = tail call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %7, i32 noundef 16) #18, !dbg !6152
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6153
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6154
  %11 = load i32, i32* %10, align 4, !dbg !6154
  %12 = tail call fastcc i32 @hal_uart_translate_baudrate(i32 noundef %11) #20, !dbg !6155
  %13 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6156
  %14 = load i32, i32* %13, align 4, !dbg !6156
  %15 = tail call fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %14) #20, !dbg !6157
  %16 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6158
  %17 = load i32, i32* %16, align 4, !dbg !6158
  %18 = tail call fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %17) #20, !dbg !6159
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6160
  %20 = load i32, i32* %19, align 4, !dbg !6160
  %21 = tail call fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %20) #20, !dbg !6161
  tail call void @halUART_SetFormat(i32 noundef %9, i32 noundef %12, i16 noundef zeroext %15, i16 noundef zeroext %18, i16 noundef zeroext %21) #18, !dbg !6162
  br label %22, !dbg !6163

22:                                               ; preds = %2, %4
  %23 = phi i32 [ 0, %4 ], [ -4, %2 ], !dbg !6145
  ret i32 %23, !dbg !6164
}

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_baudrate(i32 noundef %0) unnamed_addr #7 !dbg !6165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6169, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.declare(metadata [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, metadata !6170, metadata !DIExpression()), !dbg !6173
  %2 = getelementptr inbounds [13 x i32], [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, i32 0, i32 %0, !dbg !6174
  %3 = load i32, i32* %2, align 4, !dbg !6174
  ret i32 %3, !dbg !6175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %0) unnamed_addr #7 !dbg !6176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6180, metadata !DIExpression()), !dbg !6183
  call void @llvm.dbg.declare(metadata [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, metadata !6181, metadata !DIExpression()), !dbg !6184
  %2 = getelementptr inbounds [4 x i16], [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, i32 0, i32 %0, !dbg !6185
  %3 = load i16, i16* %2, align 2, !dbg !6185
  ret i16 %3, !dbg !6186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %0) unnamed_addr #7 !dbg !6187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6191, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.declare(metadata [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, metadata !6192, metadata !DIExpression()), !dbg !6195
  %2 = getelementptr inbounds [5 x i16], [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, i32 0, i32 %0, !dbg !6196
  %3 = load i16, i16* %2, align 2, !dbg !6196
  ret i16 %3, !dbg !6197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %0) unnamed_addr #7 !dbg !6198 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6202, metadata !DIExpression()), !dbg !6205
  call void @llvm.dbg.declare(metadata [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, metadata !6203, metadata !DIExpression()), !dbg !6206
  %2 = getelementptr inbounds [3 x i16], [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, i32 0, i32 %0, !dbg !6207
  %3 = load i16, i16* %2, align 2, !dbg !6207
  ret i16 %3, !dbg !6208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) unnamed_addr #7 !dbg !6209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6213, metadata !DIExpression()), !dbg !6214
  %2 = icmp ult i32 %0, 2, !dbg !6215
  ret i1 %2, !dbg !6216
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6217 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6221, metadata !DIExpression()), !dbg !6222
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6223
  br i1 %2, label %3, label %18, !dbg !6225

3:                                                ; preds = %1
  %4 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !6226
  %5 = load i8, i8* %4, align 4, !dbg !6226, !range !2141
  %6 = icmp eq i8 %5, 0, !dbg !6228
  br i1 %6, label %18, label %7, !dbg !6229

7:                                                ; preds = %3
  %8 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef 64) #18, !dbg !6230
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6231, !range !6086
  tail call void @uart_query_empty(i32 noundef %9) #18, !dbg !6232
  %10 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6233
  %11 = load i32, i32* %10, align 4, !dbg !6233
  %12 = tail call i32 @hal_nvic_disable_irq(i32 noundef %11) #18, !dbg !6234
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6235
  store i8 0, i8* %13, align 1, !dbg !6236
  %14 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6237
  store i8 0, i8* %14, align 1, !dbg !6238
  tail call void @uart_mask_send_interrupt(i32 noundef %9) #18, !dbg !6239
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6240
  %16 = load i8, i8* %15, align 1, !dbg !6240
  %17 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %16) #18, !dbg !6241
  tail call void @uart_reset_default_value(i32 noundef %9) #18, !dbg !6242
  br label %18, !dbg !6243

18:                                               ; preds = %3, %1, %7
  %19 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6222
  ret i32 %19, !dbg !6244
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !6245 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6249, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.value(metadata i8 %1, metadata !6250, metadata !DIExpression()), !dbg !6252
  %3 = icmp eq i32 %0, 0, !dbg !6253
  %4 = icmp eq i32 %0, 1, !dbg !6253
  %5 = select i1 %4, i32 1, i32 2, !dbg !6253
  %6 = select i1 %3, i32 0, i32 %5, !dbg !6253
  call void @llvm.dbg.value(metadata i32 %6, metadata !6251, metadata !DIExpression()), !dbg !6252
  %7 = icmp eq i32 %6, 2, !dbg !6254
  br i1 %7, label %9, label %8, !dbg !6256

8:                                                ; preds = %2
  tail call void @uart_output_char(i32 noundef %6, i8 noundef zeroext %1) #18, !dbg !6257
  br label %9, !dbg !6259

9:                                                ; preds = %2, %8
  ret void, !dbg !6260
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6265, metadata !DIExpression()), !dbg !6270
  call void @llvm.dbg.value(metadata i8* %1, metadata !6266, metadata !DIExpression()), !dbg !6270
  call void @llvm.dbg.value(metadata i32 %2, metadata !6267, metadata !DIExpression()), !dbg !6270
  %4 = icmp eq i32 %0, 0, !dbg !6271
  %5 = icmp eq i32 %0, 1, !dbg !6271
  %6 = select i1 %5, i32 1, i32 2, !dbg !6271
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6271
  call void @llvm.dbg.value(metadata i32 %7, metadata !6268, metadata !DIExpression()), !dbg !6270
  %8 = icmp eq i8* %1, null, !dbg !6272
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !6274
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6274
  call void @llvm.dbg.value(metadata i32 0, metadata !6269, metadata !DIExpression()), !dbg !6270
  br i1 %12, label %19, label %13, !dbg !6274

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6269, metadata !DIExpression()), !dbg !6270
  %15 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6275
  %16 = load i8, i8* %15, align 1, !dbg !6275
  tail call void @uart_output_char(i32 noundef %7, i8 noundef zeroext %16) #18, !dbg !6281
  %17 = add nuw i32 %14, 1, !dbg !6282
  call void @llvm.dbg.value(metadata i32 %17, metadata !6269, metadata !DIExpression()), !dbg !6270
  %18 = icmp eq i32 %17, %2, !dbg !6283
  br i1 %18, label %19, label %13, !dbg !6284, !llvm.loop !6285

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !6270
  ret i32 %20, !dbg !6287
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6288 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6290, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i8* %1, metadata !6291, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata i32 %2, metadata !6292, metadata !DIExpression()), !dbg !6298
  %6 = bitcast i32* %4 to i8*, !dbg !6299
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17, !dbg !6299
  %7 = bitcast i32* %5 to i8*, !dbg !6300
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !6300
  %8 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6301
  br i1 %8, label %9, label %37, !dbg !6303

9:                                                ; preds = %3
  %10 = icmp eq i8* %1, null, !dbg !6304
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6306
  br i1 %12, label %37, label %13, !dbg !6306

13:                                               ; preds = %9
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !6307
  %15 = load i8, i8* %14, align 4, !dbg !6307, !range !2141
  %16 = icmp eq i8 %15, 0, !dbg !6307
  br i1 %16, label %37, label %17, !dbg !6309

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32* %5, metadata !6297, metadata !DIExpression(DW_OP_deref)), !dbg !6298
  %18 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #18, !dbg !6310
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6311
  %20 = load i8, i8* %19, align 1, !dbg !6311, !range !2141
  %21 = icmp eq i8 %20, 0, !dbg !6313
  br i1 %21, label %22, label %26, !dbg !6314

22:                                               ; preds = %17
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6315
  %24 = load i8, i8* %23, align 1, !dbg !6315
  %25 = call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %24) #18, !dbg !6317
  store i8 1, i8* %19, align 1, !dbg !6318
  br label %26, !dbg !6319

26:                                               ; preds = %22, %17
  %27 = load i32, i32* %5, align 4, !dbg !6320
  call void @llvm.dbg.value(metadata i32 %27, metadata !6297, metadata !DIExpression()), !dbg !6298
  %28 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %27) #18, !dbg !6321
  %29 = call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6322, !range !6086
  call void @llvm.dbg.value(metadata i32* %4, metadata !6293, metadata !DIExpression(DW_OP_deref)), !dbg !6298
  call void @halUART_Get_VFIFO_Length(i32 noundef %29, i32 noundef 0, i32* noundef nonnull %4) #18, !dbg !6323
  %30 = load i32, i32* %4, align 4, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %30, metadata !6293, metadata !DIExpression()), !dbg !6298
  %31 = icmp ult i32 %30, %2, !dbg !6326
  %32 = select i1 %31, i32 %30, i32 %2
  call void @llvm.dbg.value(metadata i32 %32, metadata !6294, metadata !DIExpression()), !dbg !6298
  call void @halUART_Write_VFIFO_Data(i32 noundef %29, i8* noundef nonnull %1, i32 noundef %32) #18, !dbg !6327
  %33 = load i32, i32* %4, align 4, !dbg !6328
  call void @llvm.dbg.value(metadata i32 %33, metadata !6293, metadata !DIExpression()), !dbg !6298
  %34 = icmp eq i32 %32, %33, !dbg !6330
  br i1 %34, label %35, label %37, !dbg !6331

35:                                               ; preds = %26
  %36 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %29, i1 noundef zeroext false) #20, !dbg !6332, !range !6334
  call void @llvm.dbg.value(metadata i32 %36, metadata !6295, metadata !DIExpression()), !dbg !6298
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %36) #18, !dbg !6335
  br label %37, !dbg !6336

37:                                               ; preds = %26, %35, %13, %9, %3
  %38 = phi i32 [ 0, %3 ], [ 0, %9 ], [ 0, %13 ], [ %32, %35 ], [ %32, %26 ], !dbg !6298
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !6337
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17, !dbg !6337
  ret i32 %38, !dbg !6337
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #7 !dbg !6338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6342, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.value(metadata i1 %1, metadata !6343, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6345
  %3 = icmp eq i32 %0, 0, !dbg !6346
  %4 = select i1 %1, i32 15, i32 14, !dbg !6348
  %5 = select i1 %1, i32 17, i32 16, !dbg !6348
  %6 = select i1 %3, i32 %4, i32 %5, !dbg !6348
  call void @llvm.dbg.value(metadata i32 %6, metadata !6344, metadata !DIExpression()), !dbg !6345
  ret i32 %6, !dbg !6349
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_enable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !6350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6354, metadata !DIExpression()), !dbg !6356
  %2 = icmp eq i32 %0, 0, !dbg !6357
  %3 = icmp eq i32 %0, 1, !dbg !6357
  %4 = select i1 %3, i32 1, i32 2, !dbg !6357
  %5 = select i1 %2, i32 0, i32 %4, !dbg !6357
  call void @llvm.dbg.value(metadata i32 %5, metadata !6355, metadata !DIExpression()), !dbg !6356
  %6 = icmp ult i32 %5, 2, !dbg !6358
  br i1 %6, label %7, label %9, !dbg !6360

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @uart_input_char(i32 noundef %5) #18, !dbg !6361
  br label %9, !dbg !6363

9:                                                ; preds = %1, %7
  %10 = phi i8 [ %8, %7 ], [ 0, %1 ], !dbg !6364
  ret i8 %10, !dbg !6365
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !6366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6370, metadata !DIExpression()), !dbg !6372
  %2 = icmp eq i32 %0, 0, !dbg !6373
  %3 = icmp eq i32 %0, 1, !dbg !6373
  %4 = select i1 %3, i32 1, i32 2, !dbg !6373
  %5 = select i1 %2, i32 0, i32 %4, !dbg !6373
  call void @llvm.dbg.value(metadata i32 %5, metadata !6371, metadata !DIExpression()), !dbg !6372
  %6 = icmp ult i32 %5, 2, !dbg !6374
  br i1 %6, label %7, label %9, !dbg !6376

7:                                                ; preds = %1
  %8 = tail call i32 @uart_input_char_unblocking(i32 noundef %5) #18, !dbg !6377
  br label %9, !dbg !6379

9:                                                ; preds = %1, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %1 ], !dbg !6380
  ret i32 %10, !dbg !6381
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6386, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i8* %1, metadata !6387, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.value(metadata i32 %2, metadata !6388, metadata !DIExpression()), !dbg !6391
  %4 = icmp eq i32 %0, 0, !dbg !6392
  %5 = icmp eq i32 %0, 1, !dbg !6392
  %6 = select i1 %5, i32 1, i32 2, !dbg !6392
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6392
  call void @llvm.dbg.value(metadata i32 %7, metadata !6389, metadata !DIExpression()), !dbg !6391
  %8 = icmp eq i8* %1, null, !dbg !6393
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !6395
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6395
  call void @llvm.dbg.value(metadata i32 0, metadata !6390, metadata !DIExpression()), !dbg !6391
  br i1 %12, label %19, label %13, !dbg !6395

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6390, metadata !DIExpression()), !dbg !6391
  %15 = tail call zeroext i8 @uart_input_char(i32 noundef %7) #18, !dbg !6396
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6402
  store i8 %15, i8* %16, align 1, !dbg !6403
  %17 = add nuw i32 %14, 1, !dbg !6404
  call void @llvm.dbg.value(metadata i32 %17, metadata !6390, metadata !DIExpression()), !dbg !6391
  %18 = icmp eq i32 %17, %2, !dbg !6405
  br i1 %18, label %19, label %13, !dbg !6406, !llvm.loop !6407

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !6391
  ret i32 %20, !dbg !6409
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6410 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6412, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.value(metadata i8* %1, metadata !6413, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.value(metadata i32 %2, metadata !6414, metadata !DIExpression()), !dbg !6418
  %5 = bitcast i32* %4 to i8*, !dbg !6419
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6419
  %6 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6420
  br i1 %6, label %7, label %20, !dbg !6422

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !6423
  %9 = icmp eq i32 %2, 0
  %10 = or i1 %8, %9, !dbg !6425
  br i1 %10, label %20, label %11, !dbg !6425

11:                                               ; preds = %7
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6426, !range !6086
  call void @llvm.dbg.value(metadata i32* %4, metadata !6415, metadata !DIExpression(DW_OP_deref)), !dbg !6418
  call void @halUART_Get_VFIFO_Length(i32 noundef %12, i32 noundef 1, i32* noundef nonnull %4) #18, !dbg !6427
  %13 = load i32, i32* %4, align 4, !dbg !6428
  call void @llvm.dbg.value(metadata i32 %13, metadata !6415, metadata !DIExpression()), !dbg !6418
  %14 = icmp ult i32 %13, %2, !dbg !6430
  %15 = select i1 %14, i32 %13, i32 %2
  call void @llvm.dbg.value(metadata i32 %15, metadata !6416, metadata !DIExpression()), !dbg !6418
  call void @halUART_Read_VFIFO_Data(i32 noundef %12, i8* noundef nonnull %1, i32 noundef %15) #18, !dbg !6431
  %16 = load i32, i32* %4, align 4, !dbg !6432
  call void @llvm.dbg.value(metadata i32 %16, metadata !6415, metadata !DIExpression()), !dbg !6418
  %17 = icmp eq i32 %15, %16, !dbg !6434
  br i1 %17, label %18, label %20, !dbg !6435

18:                                               ; preds = %11
  %19 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %12, i1 noundef zeroext true) #20, !dbg !6436, !range !6334
  call void @llvm.dbg.value(metadata i32 %19, metadata !6417, metadata !DIExpression()), !dbg !6418
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %19) #18, !dbg !6438
  br label %20, !dbg !6439

20:                                               ; preds = %11, %18, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %15, %18 ], [ %15, %11 ], !dbg !6418
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6440
  ret i32 %21, !dbg !6440
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !6441 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6443, metadata !DIExpression()), !dbg !6445
  %3 = bitcast i32* %2 to i8*, !dbg !6446
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !6446
  call void @llvm.dbg.value(metadata i32 0, metadata !6444, metadata !DIExpression()), !dbg !6445
  store i32 0, i32* %2, align 4, !dbg !6447
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6448
  br i1 %4, label %5, label %8, !dbg !6450

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6451, !range !6086
  call void @llvm.dbg.value(metadata i32* %2, metadata !6444, metadata !DIExpression(DW_OP_deref)), !dbg !6445
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 0, i32* noundef nonnull %2) #18, !dbg !6452
  %7 = load i32, i32* %2, align 4, !dbg !6453
  call void @llvm.dbg.value(metadata i32 %7, metadata !6444, metadata !DIExpression()), !dbg !6445
  br label %8, !dbg !6454

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !6445
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17, !dbg !6455
  ret i32 %9, !dbg !6455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !6456 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6458, metadata !DIExpression()), !dbg !6460
  %3 = bitcast i32* %2 to i8*, !dbg !6461
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !6461
  call void @llvm.dbg.value(metadata i32 0, metadata !6459, metadata !DIExpression()), !dbg !6460
  store i32 0, i32* %2, align 4, !dbg !6462
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6463
  br i1 %4, label %5, label %8, !dbg !6465

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6466, !range !6086
  call void @llvm.dbg.value(metadata i32* %2, metadata !6459, metadata !DIExpression(DW_OP_deref)), !dbg !6460
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 1, i32* noundef nonnull %2) #18, !dbg !6467
  %7 = load i32, i32* %2, align 4, !dbg !6468
  call void @llvm.dbg.value(metadata i32 %7, metadata !6459, metadata !DIExpression()), !dbg !6460
  br label %8, !dbg !6469

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !6460
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17, !dbg !6470
  ret i32 %9, !dbg !6470
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6475, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6476, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i8* %2, metadata !6477, metadata !DIExpression()), !dbg !6479
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6480
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !6482
  br i1 %6, label %7, label %24, !dbg !6482

7:                                                ; preds = %3
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 0, !dbg !6483
  store void (i32, i8*)* %1, void (i32, i8*)** %8, align 4, !dbg !6484
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 1, !dbg !6485
  store i8* %2, i8** %9, align 4, !dbg !6486
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 2, !dbg !6487
  store i8 1, i8* %10, align 4, !dbg !6488
  %11 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6489
  %12 = tail call fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) #20, !dbg !6490
  tail call void @halUART_VDMA_Rx_Register_Callback(i32 noundef %11, void ()* noundef %12) #18, !dbg !6491
  tail call void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %11, void ()* noundef %12) #18, !dbg !6492
  %13 = icmp eq i32 %11, 0, !dbg !6493
  br i1 %13, label %14, label %15, !dbg !6495

14:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 14, void ()* noundef nonnull @hal_uart_send_callback0) #18, !dbg !6496
  br label %16, !dbg !6498

15:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 16, void ()* noundef nonnull @hal_uart_send_callback1) #18, !dbg !6499
  br label %16

16:                                               ; preds = %15, %14
  %17 = tail call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %11, i1 noundef zeroext false) #20, !dbg !6501, !range !6334
  call void @llvm.dbg.value(metadata i32 %17, metadata !6478, metadata !DIExpression()), !dbg !6479
  tail call void @DMA_Vfifo_enable_interrupt(i32 noundef %17) #18, !dbg !6502
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6503
  store i8 1, i8* %18, align 1, !dbg !6504
  %19 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6505
  %20 = load i32, i32* %19, align 4, !dbg !6505
  %21 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %20, void (i32)* noundef nonnull @uart_interrupt_handler) #18, !dbg !6506
  tail call void @uart_unmask_send_interrupt(i32 noundef %11) #18, !dbg !6507
  %22 = load i32, i32* %19, align 4, !dbg !6508
  %23 = tail call i32 @hal_nvic_enable_irq(i32 noundef %22) #18, !dbg !6509
  br label %24, !dbg !6510

24:                                               ; preds = %3, %16
  %25 = phi i32 [ 0, %16 ], [ -4, %3 ], !dbg !6479
  ret i32 %25, !dbg !6511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) unnamed_addr #7 !dbg !751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !757, metadata !DIExpression()), !dbg !6512
  %2 = getelementptr inbounds [2 x void ()*], [2 x void ()*]* @hal_uart_map_receive_callback.func_tbl, i32 0, i32 %0, !dbg !6513
  %3 = load void ()*, void ()** %2, align 4, !dbg !6513
  ret void ()* %3, !dbg !6514
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback0() #0 !dbg !6515 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !6521, !range !2141
  %2 = icmp eq i8 %1, 0, !dbg !6521
  br i1 %2, label %8, label %3, !dbg !6522

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !6523
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !6525
  br i1 %5, label %8, label %6, !dbg !6526

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !6527
  tail call void %4(i32 noundef 2, i8* noundef %7) #18, !dbg !6529
  br label %8, !dbg !6530

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #20, !dbg !6531, !range !6086
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #20, !dbg !6532
  ret void, !dbg !6533
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback1() #0 !dbg !6534 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !6539, !range !2141
  %2 = icmp eq i8 %1, 0, !dbg !6539
  br i1 %2, label %8, label %3, !dbg !6540

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !6541
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !6543
  br i1 %5, label %8, label %6, !dbg !6544

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !6545
  tail call void %4(i32 noundef 2, i8* noundef %7) #18, !dbg !6547
  br label %8, !dbg !6548

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #20, !dbg !6549, !range !6086
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #20, !dbg !6550
  ret void, !dbg !6551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_uart_check_irq_disable(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #0 !dbg !6552 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6556, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.value(metadata i1 %1, metadata !6557, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6563
  %5 = bitcast i32* %3 to i8*, !dbg !6564
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6564
  %6 = bitcast i32* %4 to i8*, !dbg !6564
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17, !dbg !6564
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !6560, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !6563
  br i1 %1, label %7, label %12, !dbg !6565

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !6560, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !6563
  call void @llvm.dbg.value(metadata i32* %3, metadata !6558, metadata !DIExpression(DW_OP_deref)), !dbg !6563
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 1, i32* noundef nonnull %3) #18, !dbg !6566
  %8 = load i32, i32* %3, align 4, !dbg !6569
  call void @llvm.dbg.value(metadata i32 %8, metadata !6558, metadata !DIExpression()), !dbg !6563
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 5, !dbg !6571
  %10 = load i32, i32* %9, align 4, !dbg !6571
  %11 = icmp ult i32 %8, %10, !dbg !6572
  br i1 %11, label %22, label %20, !dbg !6573

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32* %4, metadata !6559, metadata !DIExpression(DW_OP_deref)), !dbg !6563
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %4) #18, !dbg !6574
  %13 = load i32, i32* %4, align 4, !dbg !6576
  call void @llvm.dbg.value(metadata i32 %13, metadata !6559, metadata !DIExpression()), !dbg !6563
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !6578
  %15 = load i32, i32* %14, align 4, !dbg !6578
  %16 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 2, !dbg !6579
  %17 = load i32, i32* %16, align 4, !dbg !6579
  %18 = sub i32 %15, %17, !dbg !6580
  %19 = icmp ult i32 %13, %18, !dbg !6581
  br i1 %19, label %22, label %20, !dbg !6582

20:                                               ; preds = %12, %7
  %21 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) #20, !dbg !6583, !range !6334
  call void @DMA_Vfifo_disable_interrupt(i32 noundef %21) #18, !dbg !6583
  br label %22, !dbg !6584

22:                                               ; preds = %20, %12, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17, !dbg !6584
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17, !dbg !6584
  ret void, !dbg !6584
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_disable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback0() #0 !dbg !6585 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !6590, !range !2141
  %2 = icmp eq i8 %1, 0, !dbg !6590
  br i1 %2, label %11, label %3, !dbg !6591

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 0) #20, !dbg !6592
  %5 = icmp eq i32 %4, 0, !dbg !6593
  br i1 %5, label %11, label %6, !dbg !6594

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !6595
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !6597
  br i1 %8, label %11, label %9, !dbg !6598

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !6599
  tail call void %7(i32 noundef 1, i8* noundef %10) #18, !dbg !6601
  br label %11, !dbg !6602

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #20, !dbg !6603, !range !6086
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #20, !dbg !6604
  ret void, !dbg !6605
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback1() #0 !dbg !6606 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !6611, !range !2141
  %2 = icmp eq i8 %1, 0, !dbg !6611
  br i1 %2, label %11, label %3, !dbg !6612

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 1) #20, !dbg !6613
  %5 = icmp eq i32 %4, 0, !dbg !6614
  br i1 %5, label %11, label %6, !dbg !6615

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !6616
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !6618
  br i1 %8, label %11, label %9, !dbg !6619

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !6620
  tail call void %7(i32 noundef 1, i8* noundef %10) #18, !dbg !6622
  br label %11, !dbg !6623

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #20, !dbg !6624, !range !6086
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #20, !dbg !6625
  ret void, !dbg !6626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6631, metadata !DIExpression()), !dbg !6633
  call void @llvm.dbg.value(metadata i32 %1, metadata !6632, metadata !DIExpression()), !dbg !6633
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6634
  %4 = icmp ult i32 %1, 13
  %5 = and i1 %4, %3, !dbg !6636
  br i1 %5, label %6, label %10, !dbg !6636

6:                                                ; preds = %2
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6637
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %7, i32 0, i32 0, !dbg !6638
  store i32 %1, i32* %8, align 4, !dbg !6639
  %9 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %7) #20, !dbg !6640
  br label %10, !dbg !6641

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ -4, %2 ], !dbg !6633
  ret i32 %11, !dbg !6642
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* noundef %1) local_unnamed_addr #0 !dbg !6643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6649, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !6650, metadata !DIExpression()), !dbg !6651
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6652
  br i1 %3, label %4, label %28, !dbg !6654

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef %1) #20, !dbg !6655
  br i1 %5, label %6, label %28, !dbg !6657

6:                                                ; preds = %4
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !6658
  store i8 1, i8* %7, align 4, !dbg !6659
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, !dbg !6660
  %9 = bitcast %struct.hal_uart_dma_config_t* %8 to i8*, !dbg !6661
  %10 = bitcast %struct.hal_uart_dma_config_t* %1 to i8*, !dbg !6662
  %11 = tail call i8* @memcpy(i8* noundef nonnull %9, i8* noundef %10, i32 noundef 28) #18, !dbg !6663
  tail call void @DMA_Init() #18, !dbg !6664
  tail call void @DMA_Vfifo_init() #18, !dbg !6665
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #20, !dbg !6666
  %13 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !6667
  %14 = load i8*, i8** %13, align 4, !dbg !6667
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !6668
  %16 = load i32, i32* %15, align 4, !dbg !6668
  %17 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !6669
  %18 = load i32, i32* %17, align 4, !dbg !6669
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !6670
  %20 = load i32, i32* %19, align 4, !dbg !6670
  %21 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef 5000) #20, !dbg !6671
  tail call void @halUART_Rx_VFIFO_Initialize(i32 noundef %12, i8* noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %21) #18, !dbg !6672
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !6673
  %23 = load i8*, i8** %22, align 4, !dbg !6673
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !6674
  %25 = load i32, i32* %24, align 4, !dbg !6674
  %26 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !6675
  %27 = load i32, i32* %26, align 4, !dbg !6675
  tail call void @halUART_Tx_VFIFO_Initialize(i32 noundef %12, i8* noundef %23, i32 noundef %25, i32 noundef %27) #18, !dbg !6676
  br label %28, !dbg !6677

28:                                               ; preds = %4, %2, %6
  %29 = phi i32 [ 0, %6 ], [ -4, %2 ], [ -4, %4 ], !dbg !6651
  ret i32 %29, !dbg !6678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef readonly %0) unnamed_addr #9 !dbg !6679 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %0, metadata !6683, metadata !DIExpression()), !dbg !6684
  %2 = icmp eq %struct.hal_uart_dma_config_t* %0, null, !dbg !6685
  br i1 %2, label %27, label %3, !dbg !6687

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 3, !dbg !6688
  %5 = load i8*, i8** %4, align 4, !dbg !6688
  %6 = icmp eq i8* %5, null, !dbg !6690
  br i1 %6, label %27, label %7, !dbg !6691

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 4, !dbg !6692
  %9 = load i32, i32* %8, align 4, !dbg !6692
  %10 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 5, !dbg !6694
  %11 = load i32, i32* %10, align 4, !dbg !6694
  %12 = icmp ult i32 %9, %11, !dbg !6695
  br i1 %12, label %27, label %13, !dbg !6696

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 6, !dbg !6697
  %15 = load i32, i32* %14, align 4, !dbg !6697
  %16 = icmp ult i32 %9, %15, !dbg !6699
  br i1 %16, label %27, label %17, !dbg !6700

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 0, !dbg !6701
  %19 = load i8*, i8** %18, align 4, !dbg !6701
  %20 = icmp eq i8* %19, null, !dbg !6703
  br i1 %20, label %27, label %21, !dbg !6704

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 1, !dbg !6705
  %23 = load i32, i32* %22, align 4, !dbg !6705
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 2, !dbg !6707
  %25 = load i32, i32* %24, align 4, !dbg !6707
  %26 = icmp uge i32 %23, %25, !dbg !6708
  br label %27, !dbg !6709

27:                                               ; preds = %21, %17, %13, %7, %3, %1
  %28 = phi i1 [ false, %1 ], [ false, %3 ], [ false, %7 ], [ false, %13 ], [ false, %17 ], [ %26, %21 ], !dbg !6684
  ret i1 %28, !dbg !6710
}

; Function Attrs: optsize
declare dso_local void @DMA_Init() local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_init() local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hal_uart_translate_timeout(i32 noundef %0) unnamed_addr #0 !dbg !6711 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6713, metadata !DIExpression()), !dbg !6715
  %2 = tail call i32 @top_mcu_freq_get() #18, !dbg !6716
  %3 = udiv i32 %2, 1000000, !dbg !6717
  call void @llvm.dbg.value(metadata i32 %3, metadata !6714, metadata !DIExpression()), !dbg !6715
  %4 = mul i32 %3, %0, !dbg !6718
  ret i32 %4, !dbg !6719
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6720 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6722, metadata !DIExpression()), !dbg !6724
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6725
  br i1 %2, label %3, label %8, !dbg !6727

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !6728
  %5 = icmp eq i32 %0, 1, !dbg !6728
  %6 = select i1 %5, i32 1, i32 2, !dbg !6728
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6728
  call void @llvm.dbg.value(metadata i32 %7, metadata !6723, metadata !DIExpression()), !dbg !6724
  tail call void @uart_set_hardware_flowcontrol(i32 noundef %7) #18, !dbg !6729
  br label %8, !dbg !6730

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !6724
  ret i32 %9, !dbg !6731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !6732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6736, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i8 %1, metadata !6737, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i8 %2, metadata !6738, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.value(metadata i8 %3, metadata !6739, metadata !DIExpression()), !dbg !6741
  %5 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6742
  br i1 %5, label %6, label %11, !dbg !6744

6:                                                ; preds = %4
  %7 = icmp eq i32 %0, 0, !dbg !6745
  %8 = icmp eq i32 %0, 1, !dbg !6745
  %9 = select i1 %8, i32 1, i32 2, !dbg !6745
  %10 = select i1 %7, i32 0, i32 %9, !dbg !6745
  call void @llvm.dbg.value(metadata i32 %10, metadata !6740, metadata !DIExpression()), !dbg !6741
  tail call void @uart_set_software_flowcontrol(i32 noundef %10, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #18, !dbg !6746
  br label %11, !dbg !6747

11:                                               ; preds = %4, %6
  %12 = phi i32 [ 0, %6 ], [ -4, %4 ], !dbg !6741
  ret i32 %12, !dbg !6748
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6751, metadata !DIExpression()), !dbg !6753
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6754
  br i1 %2, label %3, label %8, !dbg !6756

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !6757
  %5 = icmp eq i32 %0, 1, !dbg !6757
  %6 = select i1 %5, i32 1, i32 2, !dbg !6757
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6757
  call void @llvm.dbg.value(metadata i32 %7, metadata !6752, metadata !DIExpression()), !dbg !6753
  tail call void @uart_disable_flowcontrol(i32 noundef %7) #18, !dbg !6758
  br label %8, !dbg !6759

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !6753
  ret i32 %9, !dbg !6760
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6765, metadata !DIExpression()), !dbg !6767
  call void @llvm.dbg.value(metadata i32 %1, metadata !6766, metadata !DIExpression()), !dbg !6767
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #20, !dbg !6768
  br i1 %3, label %4, label %8, !dbg !6770

4:                                                ; preds = %2
  %5 = icmp eq i32 %0, 0, !dbg !6771
  %6 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef %1) #20, !dbg !6773
  %7 = select i1 %5, i32 15, i32 17
  tail call void @DMA_Vfifo_Set_timeout(i32 noundef %7, i32 noundef %6) #18, !dbg !6773
  br label %8, !dbg !6774

8:                                                ; preds = %4, %2
  %9 = phi i32 [ -4, %2 ], [ 0, %4 ], !dbg !6767
  ret i32 %9, !dbg !6774
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Set_timeout(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_reset() local_unnamed_addr #5 !dbg !6775 {
  store volatile i32 0, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !6776
  store volatile i32 0, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !6777
  store volatile i32 0, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !6778
  store volatile i32 0, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !6779
  store volatile i32 0, i32* inttoptr (i32 -536866784 to i32*), align 32, !dbg !6780
  store volatile i32 0, i32* inttoptr (i32 -536866768 to i32*), align 16, !dbg !6781
  store volatile i32 0, i32* inttoptr (i32 -536866752 to i32*), align 64, !dbg !6782
  store volatile i32 0, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !6783
  %1 = load volatile i32, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !6784
  %2 = and i32 %1, -16, !dbg !6784
  store volatile i32 %2, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !6784
  %3 = load volatile i32, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !6785
  %4 = and i32 %3, -16, !dbg !6785
  store volatile i32 %4, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !6785
  %5 = load volatile i32, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !6786
  %6 = and i32 %5, -16, !dbg !6786
  store volatile i32 %6, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !6786
  %7 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !6787
  %8 = and i32 %7, -16, !dbg !6787
  store volatile i32 %8, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !6787
  ret void, !dbg !6788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_init() local_unnamed_addr #5 !dbg !6789 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !6790
  %2 = and i32 %1, 1, !dbg !6792
  %3 = icmp eq i32 %2, 0, !dbg !6792
  br i1 %3, label %4, label %22, !dbg !6793

4:                                                ; preds = %0
  tail call void @hal_dwt_reset() #20, !dbg !6794
  %5 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !6796
  %6 = and i32 %5, 65536, !dbg !6798
  %7 = icmp eq i32 %6, 0, !dbg !6798
  br i1 %7, label %8, label %11, !dbg !6799

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !6800
  %10 = or i32 %9, 16842752, !dbg !6800
  store volatile i32 %10, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !6800
  br label %11, !dbg !6802

11:                                               ; preds = %8, %4
  %12 = load volatile i32, i32* inttoptr (i32 -536866816 to i32*), align 4096, !dbg !6803
  %13 = lshr i32 %12, 28, !dbg !6804
  store i32 %13, i32* @DWT_NUMCOMP, align 4, !dbg !6805
  %14 = load volatile i32, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !6806
  %15 = or i32 %14, 31, !dbg !6806
  store volatile i32 %15, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !6806
  %16 = load volatile i32, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !6807
  %17 = or i32 %16, 31, !dbg !6807
  store volatile i32 %17, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !6807
  %18 = load volatile i32, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !6808
  %19 = or i32 %18, 31, !dbg !6808
  store volatile i32 %19, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !6808
  %20 = load volatile i32, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !6809
  %21 = or i32 %20, 31, !dbg !6809
  store volatile i32 %21, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !6809
  br label %22, !dbg !6810

22:                                               ; preds = %11, %0
  ret void, !dbg !6811
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_dwt_request_watchpoint(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #5 !dbg !6812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6817, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i32 %1, metadata !6818, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i32 %2, metadata !6819, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.value(metadata i32 %3, metadata !6820, metadata !DIExpression()), !dbg !6822
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !6823
  %6 = and i32 %5, 1, !dbg !6825
  %7 = icmp eq i32 %6, 0, !dbg !6825
  br i1 %7, label %8, label %23, !dbg !6826

8:                                                ; preds = %4
  %9 = load i32, i32* @DWT_NUMCOMP, align 4, !dbg !6827
  %10 = icmp ugt i32 %9, %0, !dbg !6830
  %11 = and i32 %2, %1
  %12 = icmp eq i32 %11, 0
  %13 = and i1 %12, %10, !dbg !6831
  br i1 %13, label %14, label %23, !dbg !6831

14:                                               ; preds = %8
  %15 = shl i32 %0, 2, !dbg !6832
  %16 = and i32 %15, 1073741820, !dbg !6832
  call void @llvm.dbg.value(metadata i32 %16, metadata !6821, metadata !DIExpression()), !dbg !6822
  %17 = getelementptr inbounds i32, i32* inttoptr (i32 -536866784 to i32*), i32 %16, !dbg !6833
  store volatile i32 %1, i32* %17, align 16, !dbg !6834
  %18 = getelementptr inbounds i32, i32* inttoptr (i32 -536866780 to i32*), i32 %16, !dbg !6835
  store volatile i32 %2, i32* %18, align 4, !dbg !6836
  %19 = getelementptr inbounds i32, i32* inttoptr (i32 -536866776 to i32*), i32 %16, !dbg !6837
  %20 = load volatile i32, i32* %19, align 8, !dbg !6838
  %21 = and i32 %20, 15, !dbg !6839
  %22 = or i32 %21, %3, !dbg !6840
  store volatile i32 %22, i32* %19, align 8, !dbg !6841
  br label %23, !dbg !6842

23:                                               ; preds = %4, %8, %14
  %24 = phi i32 [ 0, %14 ], [ -1, %8 ], [ -1, %4 ], !dbg !6843
  ret i32 %24, !dbg !6844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_suspend_bit() local_unnamed_addr #7 !dbg !6845 {
  call void @llvm.dbg.value(metadata i8 5, metadata !6849, metadata !DIExpression()), !dbg !6850
  ret i8 5, !dbg !6851
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spi_mode_command() local_unnamed_addr #7 !dbg !6852 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_default, i32 0, i32 0), !dbg !6855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spiq_mode_command() local_unnamed_addr #7 !dbg !6856 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_default, i32 0, i32 0), !dbg !6857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_read_SR2_comand() local_unnamed_addr #7 !dbg !6858 {
  call void @llvm.dbg.value(metadata i8 5, metadata !6860, metadata !DIExpression()), !dbg !6861
  ret i8 5, !dbg !6862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias %struct.flash_info_t* @customer_flash_register() local_unnamed_addr #7 !dbg !6863 {
  ret %struct.flash_info_t* null, !dbg !6866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_mode_init() local_unnamed_addr #5 !dbg !6867 {
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.gpio_mode_init.mode_temp, metadata !6870, metadata !DIExpression()), !dbg !6874
  call void @llvm.dbg.value(metadata i32 0, metadata !6869, metadata !DIExpression()), !dbg !6875
  br label %1, !dbg !6876

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6869, metadata !DIExpression()), !dbg !6875
  %3 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.gpio_mode_init.mode_temp, i32 0, i32 %2, !dbg !6878
  %4 = load i32, i32* %3, align 4, !dbg !6878
  %5 = shl nuw nsw i32 %2, 2, !dbg !6878
  %6 = add nuw nsw i32 %5, -2130563040, !dbg !6878
  %7 = inttoptr i32 %6 to i32*, !dbg !6878
  store volatile i32 %4, i32* %7, align 4, !dbg !6878
  %8 = add nuw nsw i32 %2, 1, !dbg !6881
  call void @llvm.dbg.value(metadata i32 %8, metadata !6869, metadata !DIExpression()), !dbg !6875
  %9 = icmp eq i32 %8, 10, !dbg !6882
  br i1 %9, label %10, label %1, !dbg !6876, !llvm.loop !6883

10:                                               ; preds = %1
  ret void, !dbg !6885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_oe_init() local_unnamed_addr #5 !dbg !6886 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6888, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i32 0, metadata !6888, metadata !DIExpression()), !dbg !6891
  store volatile i32 -419430160, i32* inttoptr (i32 -2097106800 to i32*), align 16, !dbg !6892
  call void @llvm.dbg.value(metadata i32 1, metadata !6888, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i32 1, metadata !6888, metadata !DIExpression()), !dbg !6891
  store volatile i32 100663495, i32* inttoptr (i32 -2097106784 to i32*), align 32, !dbg !6892
  call void @llvm.dbg.value(metadata i32 2, metadata !6888, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.value(metadata i32 2, metadata !6888, metadata !DIExpression()), !dbg !6891
  store volatile i32 0, i32* inttoptr (i32 -2097106768 to i32*), align 16, !dbg !6892
  call void @llvm.dbg.value(metadata i32 3, metadata !6888, metadata !DIExpression()), !dbg !6891
  ret void, !dbg !6896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_ies_init() local_unnamed_addr #5 !dbg !6897 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6899, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata i32 0, metadata !6899, metadata !DIExpression()), !dbg !6901
  store volatile i32 419430159, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !6902
  call void @llvm.dbg.value(metadata i32 1, metadata !6899, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata i32 1, metadata !6899, metadata !DIExpression()), !dbg !6901
  store volatile i32 -100663496, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !6902
  call void @llvm.dbg.value(metadata i32 2, metadata !6899, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata i32 2, metadata !6899, metadata !DIExpression()), !dbg !6901
  store volatile i32 511, i32* inttoptr (i32 -2097106680 to i32*), align 8, !dbg !6902
  call void @llvm.dbg.value(metadata i32 3, metadata !6899, metadata !DIExpression()), !dbg !6901
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6906
  %2 = and i32 %1, -3, !dbg !6906
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6906
  %3 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6907
  %4 = or i32 %3, 2, !dbg !6907
  store volatile i32 %4, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6907
  %5 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6908
  %6 = or i32 %5, 2048, !dbg !6908
  store volatile i32 %6, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6908
  %7 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6909
  %8 = and i32 %7, -3, !dbg !6909
  store volatile i32 %8, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6909
  %9 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6910
  %10 = or i32 %9, 2, !dbg !6910
  store volatile i32 %10, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6910
  %11 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6911
  %12 = or i32 %11, 2048, !dbg !6911
  store volatile i32 %12, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6911
  %13 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6912
  %14 = and i32 %13, -3, !dbg !6912
  store volatile i32 %14, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6912
  %15 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6913
  store volatile i32 %15, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6913
  %16 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6914
  %17 = or i32 %16, 2048, !dbg !6914
  store volatile i32 %17, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6914
  %18 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6915
  %19 = and i32 %18, -3, !dbg !6915
  store volatile i32 %19, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6915
  %20 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6916
  store volatile i32 %20, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6916
  %21 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6917
  %22 = or i32 %21, 2048, !dbg !6917
  store volatile i32 %22, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6917
  %23 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6918
  %24 = and i32 %23, -3, !dbg !6918
  store volatile i32 %24, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6918
  %25 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6919
  store volatile i32 %25, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6919
  %26 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6920
  %27 = or i32 %26, 2048, !dbg !6920
  store volatile i32 %27, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6920
  %28 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6921
  %29 = and i32 %28, -3, !dbg !6921
  store volatile i32 %29, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6921
  %30 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6922
  store volatile i32 %30, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6922
  %31 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6923
  %32 = or i32 %31, 2048, !dbg !6923
  store volatile i32 %32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6923
  ret void, !dbg !6924
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_up_init() local_unnamed_addr #5 !dbg !6925 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6927, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i32 0, metadata !6927, metadata !DIExpression()), !dbg !6929
  store volatile i32 4, i32* inttoptr (i32 -2097106944 to i32*), align 4096, !dbg !6930
  call void @llvm.dbg.value(metadata i32 1, metadata !6927, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i32 1, metadata !6927, metadata !DIExpression()), !dbg !6929
  store volatile i32 16, i32* inttoptr (i32 -2097106928 to i32*), align 16, !dbg !6930
  call void @llvm.dbg.value(metadata i32 2, metadata !6927, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.value(metadata i32 2, metadata !6927, metadata !DIExpression()), !dbg !6929
  store volatile i32 0, i32* inttoptr (i32 -2097106912 to i32*), align 32, !dbg !6930
  call void @llvm.dbg.value(metadata i32 3, metadata !6927, metadata !DIExpression()), !dbg !6929
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6934
  %2 = and i32 %1, -29, !dbg !6934
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !6934
  %3 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6935
  %4 = and i32 %3, -29, !dbg !6935
  store volatile i32 %4, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !6935
  %5 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6936
  %6 = and i32 %5, -29, !dbg !6936
  store volatile i32 %6, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !6936
  %7 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6937
  %8 = and i32 %7, -29, !dbg !6937
  store volatile i32 %8, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !6937
  %9 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6938
  %10 = and i32 %9, -29, !dbg !6938
  store volatile i32 %10, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !6938
  %11 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6939
  %12 = and i32 %11, -29, !dbg !6939
  store volatile i32 %12, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !6939
  ret void, !dbg !6940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_down_init() local_unnamed_addr #5 !dbg !6941 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6943, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i32 0, metadata !6943, metadata !DIExpression()), !dbg !6945
  store volatile i32 16776960, i32* inttoptr (i32 -2097106896 to i32*), align 16, !dbg !6946
  call void @llvm.dbg.value(metadata i32 1, metadata !6943, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i32 1, metadata !6943, metadata !DIExpression()), !dbg !6945
  store volatile i32 -100663544, i32* inttoptr (i32 -2097106880 to i32*), align 64, !dbg !6946
  call void @llvm.dbg.value(metadata i32 2, metadata !6943, metadata !DIExpression()), !dbg !6945
  call void @llvm.dbg.value(metadata i32 2, metadata !6943, metadata !DIExpression()), !dbg !6945
  store volatile i32 511, i32* inttoptr (i32 -2097106864 to i32*), align 16, !dbg !6946
  call void @llvm.dbg.value(metadata i32 3, metadata !6943, metadata !DIExpression()), !dbg !6945
  ret void, !dbg !6950
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_output_init() local_unnamed_addr #5 !dbg !6951 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6953, metadata !DIExpression()), !dbg !6955
  call void @llvm.dbg.value(metadata i32 0, metadata !6953, metadata !DIExpression()), !dbg !6955
  store volatile i32 64, i32* inttoptr (i32 -2097106848 to i32*), align 32, !dbg !6956
  call void @llvm.dbg.value(metadata i32 1, metadata !6953, metadata !DIExpression()), !dbg !6955
  call void @llvm.dbg.value(metadata i32 1, metadata !6953, metadata !DIExpression()), !dbg !6955
  store volatile i32 64, i32* inttoptr (i32 -2097106832 to i32*), align 16, !dbg !6956
  call void @llvm.dbg.value(metadata i32 2, metadata !6953, metadata !DIExpression()), !dbg !6955
  call void @llvm.dbg.value(metadata i32 2, metadata !6953, metadata !DIExpression()), !dbg !6955
  store volatile i32 0, i32* inttoptr (i32 -2097106816 to i32*), align 128, !dbg !6956
  call void @llvm.dbg.value(metadata i32 3, metadata !6953, metadata !DIExpression()), !dbg !6955
  ret void, !dbg !6960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bsp_ept_gpio_set_control_by_cm4() local_unnamed_addr #5 !dbg !6961 {
  store volatile i32 -1, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !6962
  store volatile i32 -1, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !6963
  store volatile i32 50397183, i32* inttoptr (i32 -2130571128 to i32*), align 8, !dbg !6964
  ret void, !dbg !6965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bsp_ept_gpio_setting_init() local_unnamed_addr #5 !dbg !6966 {
  tail call void @gpio_mode_init() #20, !dbg !6967
  tail call void @gpio_oe_init() #20, !dbg !6968
  tail call void @gpio_ies_init() #20, !dbg !6969
  tail call void @gpio_pull_up_init() #20, !dbg !6970
  tail call void @gpio_pull_down_init() #20, !dbg !6971
  tail call void @gpio_output_init() #20, !dbg !6972
  ret void, !dbg !6973
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #12 !dbg !6974 {
  tail call void @system_init() #18, !dbg !6977
  tail call void @log_init(void (%struct.syslog_config_s*)* noundef null, i32 (%struct.syslog_config_s*)* noundef null, %struct.log_control_block_t** noundef null) #18, !dbg !6978
  call void @llvm.dbg.value(metadata i32 0, metadata !6976, metadata !DIExpression()), !dbg !6979
  br label %1, !dbg !6980

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %5, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6976, metadata !DIExpression()), !dbg !6979
  %3 = inttoptr i32 %2 to i8*, !dbg !6982
  %4 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @vTestTask, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.101, i32 0, i32 0), i16 noundef zeroext 192, i8* noundef %3, i32 noundef 2, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #18, !dbg !6982
  %5 = add nuw nsw i32 %2, 1, !dbg !6985
  call void @llvm.dbg.value(metadata i32 %5, metadata !6976, metadata !DIExpression()), !dbg !6979
  %6 = icmp eq i32 %5, 4, !dbg !6986
  br i1 %6, label %7, label %1, !dbg !6980, !llvm.loop !6987

7:                                                ; preds = %1
  tail call void @SysInitStatus_Set() #18, !dbg !6989
  tail call void @vTaskStartScheduler() #18, !dbg !6990
  br label %8, !dbg !6991

8:                                                ; preds = %8, %7
  br label %8, !dbg !6992, !llvm.loop !6995
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @vTestTask(i8* noundef %0) #12 !dbg !6998 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7000, metadata !DIExpression()), !dbg !7004
  %3 = ptrtoint i8* %0 to i32, !dbg !7005
  call void @llvm.dbg.value(metadata i32 %3, metadata !7001, metadata !DIExpression()), !dbg !7004
  %4 = bitcast i32* %2 to i8*, !dbg !7006
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !7006
  %5 = tail call i32 @xTaskGetTickCount() #18, !dbg !7007
  call void @llvm.dbg.value(metadata i32 %5, metadata !7002, metadata !DIExpression()), !dbg !7004
  store i32 %5, i32* %2, align 4, !dbg !7008
  %6 = shl i32 1000, %3, !dbg !7009
  call void @llvm.dbg.value(metadata i32 %6, metadata !7003, metadata !DIExpression()), !dbg !7004
  br label %7, !dbg !7010

7:                                                ; preds = %7, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !7002, metadata !DIExpression(DW_OP_deref)), !dbg !7004
  call void @vTaskDelayUntil(i32* noundef nonnull %2, i32 noundef %6) #18, !dbg !7011
  %8 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_freertos, i32 0, i32 3), align 4, !dbg !7013
  call void (i8*, i8*, i32, i32, i8*, ...) %8(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_freertos to i8*), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.vTestTask, i32 0, i32 0), i32 noundef 78, i32 noundef 1, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2.102, i32 0, i32 0), i32 noundef %3) #18, !dbg !7013
  br label %7, !dbg !7010, !llvm.loop !7015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #5 !dbg !7017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7019, metadata !DIExpression()), !dbg !7021
  %2 = add i32 %0, -1, !dbg !7022
  %3 = icmp ugt i32 %2, 16777215, !dbg !7024
  br i1 %3, label %8, label %4, !dbg !7025

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7026
  call void @llvm.dbg.value(metadata i32 %5, metadata !7020, metadata !DIExpression()), !dbg !7021
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7027
  %7 = and i32 %6, -4, !dbg !7027
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7027
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !7028
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7029
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7030
  br label %8, !dbg !7031

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !7021
  ret i32 %9, !dbg !7032
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #5 !dbg !7033 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !7034
  ret void, !dbg !7035
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #8 !dbg !7036 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !7037
  ret i32 %1, !dbg !7038
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #0 !dbg !7039 {
  %1 = tail call i32 @top_mcu_freq_get() #18, !dbg !7040
  store i32 %1, i32* @SystemCoreClock, align 4, !dbg !7041
  ret void, !dbg !7042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !7043 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7044
  %2 = or i32 %1, 15728640, !dbg !7044
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7044
  store volatile i32 536870912, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7045
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7046
  %4 = or i32 %3, 458752, !dbg !7046
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7046
  ret void, !dbg !7047
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #5 !dbg !7048 {
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7049
  store volatile i32 19, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7050
  store volatile i32 3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7051
  store volatile i32 268931328, i32* inttoptr (i32 22282240 to i32*), align 262144, !dbg !7052
  store volatile i32 269713408, i32* inttoptr (i32 22282304 to i32*), align 64, !dbg !7053
  store volatile i32 1, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7054
  store volatile i32 781, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7055
  ret void, !dbg !7056
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !7057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7059, metadata !DIExpression()), !dbg !7060
  %2 = trunc i32 %0 to i8, !dbg !7061
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext %2) #18, !dbg !7062
  %3 = icmp eq i32 %0, 10, !dbg !7063
  br i1 %3, label %4, label %5, !dbg !7065

4:                                                ; preds = %1
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext 13) #18, !dbg !7066
  br label %5, !dbg !7068

5:                                                ; preds = %4, %1
  ret i32 %0, !dbg !7069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @system_init() local_unnamed_addr #0 !dbg !7070 {
  tail call fastcc void @SystemClock_Config() #20, !dbg !7071
  tail call fastcc void @prvSetupHardware() #20, !dbg !7072
  tail call fastcc void @_main_sys_random_init() #20, !dbg !7073
  ret void, !dbg !7074
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !7075 {
  tail call void @top_xtal_init() #18, !dbg !7076
  tail call void @cmnCpuClkConfigureTo192M() #18, !dbg !7077
  tail call void @cmnSerialFlashClkConfTo64M() #18, !dbg !7078
  ret void, !dbg !7079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !7080 {
  tail call fastcc void @cache_enable() #20, !dbg !7081
  tail call void @bsp_ept_gpio_setting_init() #18, !dbg !7083
  %1 = tail call i32 @log_uart_init(i32 noundef 0) #18, !dbg !7084
  %2 = tail call i32 @hal_flash_init() #18, !dbg !7085
  ret void, !dbg !7086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_main_sys_random_init() unnamed_addr #0 !dbg !7087 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !7091
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #17, !dbg !7091
  %3 = tail call i32 @hal_trng_init() #18, !dbg !7092
  call void @llvm.dbg.value(metadata i32 %3, metadata !7090, metadata !DIExpression()), !dbg !7093
  %4 = icmp eq i32 %3, 0, !dbg !7094
  br i1 %4, label %5, label %10, !dbg !7096

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !7089, metadata !DIExpression(DW_OP_deref)), !dbg !7093
  %6 = call i32 @hal_trng_get_generated_random_number(i32* noundef nonnull %1) #18, !dbg !7097
  call void @llvm.dbg.value(metadata i32 %6, metadata !7090, metadata !DIExpression()), !dbg !7093
  %7 = icmp eq i32 %6, 0, !dbg !7099
  br i1 %7, label %8, label %10, !dbg !7099

8:                                                ; preds = %5
  %9 = load i32, i32* %1, align 4, !dbg !7100
  call void @llvm.dbg.value(metadata i32 %9, metadata !7089, metadata !DIExpression()), !dbg !7093
  call void @srand(i32 noundef %9) #18, !dbg !7103
  br label %12, !dbg !7104

10:                                               ; preds = %0, %5
  %11 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !7105
  call void (i8*, i8*, i32, i32, i8*, ...) %11(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__._main_sys_random_init, i32 0, i32 0), i32 noundef 206, i32 noundef 1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.113, i32 0, i32 0)) #18, !dbg !7105
  br label %12, !dbg !7109

12:                                               ; preds = %8, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #17, !dbg !7110
  ret void, !dbg !7110
}

; Function Attrs: optsize
declare dso_local void @srand(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cache_enable() unnamed_addr #0 !dbg !7111 {
  %1 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 3, metadata !7115, metadata !DIExpression()), !dbg !7125
  %2 = bitcast i64* %1 to i8*, !dbg !7126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #17, !dbg !7126
  call void @llvm.dbg.value(metadata i64 3360107803414528, metadata !7118, metadata !DIExpression()), !dbg !7125
  store i64 3360107803414528, i64* %1, align 8, !dbg !7127
  call void @llvm.dbg.value(metadata i32 1, metadata !7117, metadata !DIExpression()), !dbg !7125
  %3 = tail call i32 @hal_cache_init() #18, !dbg !7128
  %4 = tail call i32 @hal_cache_set_size(i32 noundef 3) #18, !dbg !7129
  call void @llvm.dbg.value(metadata i32 undef, metadata !7116, metadata !DIExpression()), !dbg !7125
  %5 = bitcast i64* %1 to %struct.hal_cache_region_config_t*, !dbg !7130
  call void @llvm.dbg.value(metadata i64* %1, metadata !7118, metadata !DIExpression(DW_OP_deref)), !dbg !7125
  %6 = call i32 @hal_cache_region_config(i32 noundef 0, %struct.hal_cache_region_config_t* noundef nonnull %5) #18, !dbg !7134
  %7 = call i32 @hal_cache_region_enable(i32 noundef 0) #18, !dbg !7135
  call void @llvm.dbg.value(metadata i32 1, metadata !7116, metadata !DIExpression()), !dbg !7125
  br label %8, !dbg !7136

8:                                                ; preds = %0, %8
  %9 = phi i32 [ 1, %0 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7116, metadata !DIExpression()), !dbg !7125
  %10 = call i32 @hal_cache_region_disable(i32 noundef %9) #18, !dbg !7138
  %11 = add nuw nsw i32 %9, 1, !dbg !7141
  call void @llvm.dbg.value(metadata i32 %11, metadata !7116, metadata !DIExpression()), !dbg !7125
  %12 = icmp eq i32 %11, 16, !dbg !7142
  br i1 %12, label %13, label %8, !dbg !7136, !llvm.loop !7143

13:                                               ; preds = %8
  %14 = call i32 @hal_cache_enable() #18, !dbg !7145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #17, !dbg !7146
  ret void, !dbg !7146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #7 !dbg !7147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7149, metadata !DIExpression()), !dbg !7150
  ret i32 0, !dbg !7151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #7 !dbg !7152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7202, metadata !DIExpression()), !dbg !7204
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !7203, metadata !DIExpression()), !dbg !7204
  ret i32 0, !dbg !7205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #7 !dbg !7206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7208, metadata !DIExpression()), !dbg !7209
  ret i32 1, !dbg !7210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !7211 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7215, metadata !DIExpression()), !dbg !7218
  call void @llvm.dbg.value(metadata i32 %1, metadata !7216, metadata !DIExpression()), !dbg !7218
  call void @llvm.dbg.value(metadata i32 %2, metadata !7217, metadata !DIExpression()), !dbg !7218
  ret i32 0, !dbg !7219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !7220 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7224, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i32 %1, metadata !7225, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.value(metadata i32 %2, metadata !7226, metadata !DIExpression()), !dbg !7227
  ret i32 -1, !dbg !7228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #7 !dbg !7229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7233, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata i8* %1, metadata !7234, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata i32 %2, metadata !7235, metadata !DIExpression()), !dbg !7236
  ret i32 0, !dbg !7237
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !7238 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7240, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.value(metadata i8* %1, metadata !7241, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.value(metadata i32 %2, metadata !7242, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.value(metadata i32 0, metadata !7243, metadata !DIExpression()), !dbg !7244
  %4 = icmp sgt i32 %2, 0, !dbg !7245
  br i1 %4, label %5, label %14, !dbg !7248

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7243, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.value(metadata i8* %7, metadata !7241, metadata !DIExpression()), !dbg !7244
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7249
  call void @llvm.dbg.value(metadata i8* %8, metadata !7241, metadata !DIExpression()), !dbg !7244
  %9 = load i8, i8* %7, align 1, !dbg !7251
  %10 = zext i8 %9 to i32, !dbg !7251
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #18, !dbg !7252
  %12 = add nuw nsw i32 %6, 1, !dbg !7253
  call void @llvm.dbg.value(metadata i32 %12, metadata !7243, metadata !DIExpression()), !dbg !7244
  %13 = icmp eq i32 %12, %2, !dbg !7245
  br i1 %13, label %14, label %5, !dbg !7248, !llvm.loop !7254

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !7256
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !928 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !1124, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i32 %1, metadata !1125, metadata !DIExpression()), !dbg !7257
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #17, !dbg !7258, !srcloc !7259
  call void @llvm.dbg.value(metadata i8* %3, metadata !1127, metadata !DIExpression()), !dbg !7257
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !7260
  %5 = icmp eq i8* %4, null, !dbg !7262
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !7263
  call void @llvm.dbg.value(metadata i8* %6, metadata !1126, metadata !DIExpression()), !dbg !7257
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !7264
  %8 = icmp ult i8* %3, %7, !dbg !7266
  %9 = xor i1 %8, true, !dbg !7267
  %10 = or i1 %5, %9, !dbg !7267
  br i1 %10, label %11, label %13, !dbg !7267

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !7268
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !7267
  br label %13, !dbg !7267

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !7268
  ret i8* %14, !dbg !7267
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @_exit(i32 noundef %0) local_unnamed_addr #12 !dbg !7269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7271, metadata !DIExpression()), !dbg !7272
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i32 0, i32 0)) #18, !dbg !7273
  br label %3, !dbg !7274

3:                                                ; preds = %1, %3
  br label %3, !dbg !7274, !llvm.loop !7275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7281, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.value(metadata i32 %1, metadata !7282, metadata !DIExpression()), !dbg !7283
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.120, i32 0, i32 0), i32 noundef %1) #18, !dbg !7284
  ret i32 -1, !dbg !7285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_getpid() local_unnamed_addr #0 !dbg !7286 {
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.121, i32 0, i32 0)) #18, !dbg !7291
  ret i32 0, !dbg !7292
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGenericCreate(void (i8*)* noundef %0, i8* nocapture noundef readonly %1, i16 noundef zeroext %2, i8* noundef %3, i32 noundef %4, i8** noundef writeonly %5, i32* noundef %6, %struct.xMEMORY_REGION* nocapture readnone %7) local_unnamed_addr #0 !dbg !7293 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !7313, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %1, metadata !7314, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i16 %2, metadata !7315, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %3, metadata !7316, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i32 %4, metadata !7317, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8** %5, metadata !7318, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i32* %6, metadata !7319, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !7320, metadata !DIExpression()), !dbg !7324
  %9 = icmp eq void (i8*)* %0, null, !dbg !7325
  br i1 %9, label %10, label %11, !dbg !7327

10:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.124, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 553) #18, !dbg !7328
  br label %11, !dbg !7328

11:                                               ; preds = %10, %8
  %12 = icmp ugt i32 %4, 19, !dbg !7330
  br i1 %12, label %13, label %14, !dbg !7332

13:                                               ; preds = %11
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2.126, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 554) #18, !dbg !7333
  br label %14, !dbg !7333

14:                                               ; preds = %13, %11
  %15 = tail call fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %2, i32* noundef %6) #20, !dbg !7335
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %15, metadata !7322, metadata !DIExpression()), !dbg !7324
  %16 = icmp eq %struct.tskTaskControlBlock* %15, null, !dbg !7336
  br i1 %16, label %68, label %17, !dbg !7338

17:                                               ; preds = %14
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i16 %2), metadata !7323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7324
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 4, !dbg !7339
  %19 = load i32*, i32** %18, align 4, !dbg !7339
  call void @llvm.dbg.value(metadata !DIArgList(i32* %19, i16 %2), metadata !7323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7324
  %20 = zext i16 %2 to i32, !dbg !7342
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %20), metadata !7323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7324
  %21 = add nsw i32 %20, -1, !dbg !7343
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %21), metadata !7323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7324
  %22 = getelementptr inbounds i32, i32* %19, i32 %21, !dbg !7344
  call void @llvm.dbg.value(metadata i32* %22, metadata !7323, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7324
  %23 = ptrtoint i32* %22 to i32, !dbg !7345
  call void @llvm.dbg.value(metadata i32 %23, metadata !7323, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !7324
  %24 = and i32 %23, -8, !dbg !7346
  call void @llvm.dbg.value(metadata i32 %24, metadata !7323, metadata !DIExpression()), !dbg !7324
  %25 = inttoptr i32 %24 to i32*, !dbg !7347
  call void @llvm.dbg.value(metadata i32* %25, metadata !7323, metadata !DIExpression()), !dbg !7324
  tail call fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef nonnull %15, i8* noundef %1, i32 noundef %4) #20, !dbg !7348
  %26 = tail call i32* @pxPortInitialiseStack(i32* noundef %25, void (i8*)* noundef %0, i8* noundef %3) #18, !dbg !7349
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 0, !dbg !7351
  store i32* %26, i32** %27, align 4, !dbg !7352
  %28 = icmp eq i8** %5, null, !dbg !7353
  br i1 %28, label %31, label %29, !dbg !7355

29:                                               ; preds = %17
  %30 = bitcast i8** %5 to %struct.tskTaskControlBlock**, !dbg !7356
  store %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** %30, align 4, !dbg !7356
  br label %31, !dbg !7358

31:                                               ; preds = %17, %29
  tail call void @vPortEnterCritical() #18, !dbg !7359
  %32 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7360
  %33 = add i32 %32, 1, !dbg !7360
  store volatile i32 %33, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7360
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7362
  %35 = icmp eq %struct.tskTaskControlBlock* %34, null, !dbg !7364
  br i1 %35, label %36, label %40, !dbg !7365

36:                                               ; preds = %31
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7366
  %37 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7368
  %38 = icmp eq i32 %37, 1, !dbg !7370
  br i1 %38, label %39, label %49, !dbg !7371

39:                                               ; preds = %36
  tail call fastcc void @prvInitialiseTaskLists() #20, !dbg !7372
  br label %49, !dbg !7374

40:                                               ; preds = %31
  %41 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !7375
  %42 = icmp eq i32 %41, 0, !dbg !7378
  br i1 %42, label %43, label %49, !dbg !7379

43:                                               ; preds = %40
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7380
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !7383
  %46 = load i32, i32* %45, align 4, !dbg !7383
  %47 = icmp ugt i32 %46, %4, !dbg !7384
  br i1 %47, label %49, label %48, !dbg !7385

48:                                               ; preds = %43
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7386
  br label %49, !dbg !7388

49:                                               ; preds = %43, %48, %40, %39, %36
  %50 = load i32, i32* @uxTaskNumber, align 4, !dbg !7389
  %51 = add i32 %50, 1, !dbg !7389
  store i32 %51, i32* @uxTaskNumber, align 4, !dbg !7389
  %52 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 6, !dbg !7390
  store i32 %51, i32* %52, align 4, !dbg !7392
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !7393
  %54 = load i32, i32* %53, align 4, !dbg !7393
  %55 = shl nuw i32 1, %54, !dbg !7393
  %56 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7393
  %57 = or i32 %56, %55, !dbg !7393
  store volatile i32 %57, i32* @uxTopReadyPriority, align 4, !dbg !7393
  %58 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %54, !dbg !7393
  %59 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 1, !dbg !7393
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %58, %struct.xLIST_ITEM* noundef nonnull %59) #18, !dbg !7393
  call void @llvm.dbg.value(metadata i32 1, metadata !7321, metadata !DIExpression()), !dbg !7324
  tail call void @vPortExitCritical() #18, !dbg !7394
  %60 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !7395
  %61 = icmp eq i32 %60, 0, !dbg !7399
  br i1 %61, label %68, label %62, !dbg !7400

62:                                               ; preds = %49
  %63 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7401
  %64 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %63, i32 0, i32 3, !dbg !7404
  %65 = load i32, i32* %64, align 4, !dbg !7404
  %66 = icmp ult i32 %65, %4, !dbg !7405
  br i1 %66, label %67, label %68, !dbg !7406

67:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7407
  tail call void asm sideeffect "dsb", ""() #17, !dbg !7407, !srcloc !7410
  tail call void asm sideeffect "isb", ""() #17, !dbg !7407, !srcloc !7411
  br label %68, !dbg !7412

68:                                               ; preds = %14, %62, %67, %49
  %69 = phi i32 [ 1, %62 ], [ 1, %67 ], [ 1, %49 ], [ -1, %14 ]
  ret i32 %69, !dbg !7413
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %0, i32* noundef %1) unnamed_addr #0 !dbg !7414 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7418, metadata !DIExpression()), !dbg !7423
  call void @llvm.dbg.value(metadata i32* %1, metadata !7419, metadata !DIExpression()), !dbg !7423
  %3 = icmp eq i32* %1, null, !dbg !7424
  br i1 %3, label %4, label %8, !dbg !7424

4:                                                ; preds = %2
  %5 = zext i16 %0 to i32, !dbg !7424
  %6 = shl nuw nsw i32 %5, 2, !dbg !7424
  %7 = tail call i8* @pvPortMalloc(i32 noundef %6) #18, !dbg !7424
  br label %10, !dbg !7424

8:                                                ; preds = %2
  %9 = bitcast i32* %1 to i8*, !dbg !7424
  br label %10, !dbg !7424

10:                                               ; preds = %8, %4
  %11 = phi i8* [ %7, %4 ], [ %9, %8 ], !dbg !7424
  call void @llvm.dbg.value(metadata i8* %11, metadata !7421, metadata !DIExpression()), !dbg !7425
  %12 = icmp eq i8* %11, null, !dbg !7426
  br i1 %12, label %24, label %13, !dbg !7428

13:                                               ; preds = %10
  %14 = tail call i8* @pvPortMalloc(i32 noundef 84) #18, !dbg !7429
  call void @llvm.dbg.value(metadata i8* %14, metadata !7420, metadata !DIExpression()), !dbg !7423
  %15 = icmp eq i8* %14, null, !dbg !7431
  br i1 %15, label %16, label %17, !dbg !7433

16:                                               ; preds = %13
  tail call void @vPortFree(i8* noundef nonnull %11) #18, !dbg !7434
  br label %24

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8* %14, metadata !7420, metadata !DIExpression()), !dbg !7423
  %18 = getelementptr inbounds i8, i8* %14, i32 48, !dbg !7436
  %19 = bitcast i8* %18 to i8**, !dbg !7438
  store i8* %11, i8** %19, align 4, !dbg !7438
  %20 = bitcast i8* %14 to %struct.tskTaskControlBlock*, !dbg !7439
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %20, metadata !7420, metadata !DIExpression()), !dbg !7423
  %21 = zext i16 %0 to i32, !dbg !7440
  %22 = shl nuw nsw i32 %21, 2, !dbg !7444
  %23 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 165, i32 noundef %22) #18, !dbg !7445
  br label %24, !dbg !7446

24:                                               ; preds = %10, %16, %17
  %25 = phi %struct.tskTaskControlBlock* [ %20, %17 ], [ null, %16 ], [ null, %10 ]
  ret %struct.tskTaskControlBlock* %25, !dbg !7447
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #0 !dbg !7448 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !7453, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i8* %1, metadata !7454, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 %2, metadata !7455, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !7456, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i16 undef, metadata !7457, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 0, metadata !7458, metadata !DIExpression()), !dbg !7459
  br label %4, !dbg !7460

4:                                                ; preds = %4, %3
  %5 = phi i32 [ 0, %3 ], [ %11, %4 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7458, metadata !DIExpression()), !dbg !7459
  %6 = getelementptr inbounds i8, i8* %1, i32 %5, !dbg !7462
  %7 = load i8, i8* %6, align 1, !dbg !7462
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 %5, !dbg !7465
  store i8 %7, i8* %8, align 1, !dbg !7466
  %9 = load i8, i8* %6, align 1, !dbg !7467
  %10 = icmp eq i8 %9, 0, !dbg !7469
  call void @llvm.dbg.value(metadata i32 %5, metadata !7458, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7459
  %11 = add nuw nsw i32 %5, 1
  %12 = icmp eq i32 %11, 6
  %13 = select i1 %10, i1 true, i1 %12, !dbg !7470
  call void @llvm.dbg.value(metadata i32 %11, metadata !7458, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.value(metadata i32 %5, metadata !7458, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7459
  br i1 %13, label %14, label %4, !dbg !7470, !llvm.loop !7471

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 5, !dbg !7473
  store i8 0, i8* %15, align 1, !dbg !7474
  %16 = icmp ult i32 %2, 19, !dbg !7475
  %17 = select i1 %16, i32 %2, i32 19, !dbg !7475
  call void @llvm.dbg.value(metadata i32 %17, metadata !7455, metadata !DIExpression()), !dbg !7459
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !7476
  store i32 %17, i32* %18, align 4, !dbg !7477
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 8, !dbg !7478
  store i32 %17, i32* %19, align 4, !dbg !7480
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 9, !dbg !7481
  store i32 0, i32* %20, align 4, !dbg !7482
  %21 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !7483
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !7484
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, !dbg !7485
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %22) #18, !dbg !7486
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, i32 3, !dbg !7487
  %24 = bitcast i8** %23 to %struct.tskTaskControlBlock**, !dbg !7487
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %24, align 4, !dbg !7487
  %25 = sub nuw nsw i32 20, %17, !dbg !7488
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 0, !dbg !7488
  store i32 %25, i32* %26, align 4, !dbg !7488
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 3, !dbg !7489
  %28 = bitcast i8** %27 to %struct.tskTaskControlBlock**, !dbg !7489
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %28, align 4, !dbg !7489
  %29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !7490
  store volatile i32 0, i32* %29, align 4, !dbg !7492
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 11, !dbg !7493
  store volatile i32 0, i32* %30, align 4, !dbg !7494
  ret void, !dbg !7495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTaskLists() unnamed_addr #0 !dbg !7496 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7498, metadata !DIExpression()), !dbg !7499
  br label %1, !dbg !7500

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7498, metadata !DIExpression()), !dbg !7499
  %3 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, !dbg !7502
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %3) #18, !dbg !7505
  %4 = add nuw nsw i32 %2, 1, !dbg !7506
  call void @llvm.dbg.value(metadata i32 %4, metadata !7498, metadata !DIExpression()), !dbg !7499
  %5 = icmp eq i32 %4, 20, !dbg !7507
  br i1 %5, label %6, label %1, !dbg !7500, !llvm.loop !7508

6:                                                ; preds = %1
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList1) #18, !dbg !7510
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList2) #18, !dbg !7511
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xPendingReadyList) #18, !dbg !7512
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xTasksWaitingTermination) #18, !dbg !7513
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xSuspendedTaskList) #18, !dbg !7515
  store volatile %struct.xLIST* @xDelayedTaskList1, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7517
  store volatile %struct.xLIST* @xDelayedTaskList2, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7518
  ret void, !dbg !7519
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelete(i8* noundef %0) local_unnamed_addr #0 !dbg !7520 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7524, metadata !DIExpression()), !dbg !7526
  tail call void @vPortEnterCritical() #18, !dbg !7527
  %2 = icmp eq i8* %0, null, !dbg !7528
  br i1 %2, label %3, label %5, !dbg !7528

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7528
  br label %7, !dbg !7528

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7528
  br label %7, !dbg !7528

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !7528
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !7525, metadata !DIExpression()), !dbg !7526
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !7530
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !7532
  %11 = icmp eq i32 %10, 0, !dbg !7533
  br i1 %11, label %12, label %23, !dbg !7534

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !7535
  %14 = load i32, i32* %13, align 4, !dbg !7535
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !7535
  %16 = load i32, i32* %15, align 4, !dbg !7535
  %17 = icmp eq i32 %16, 0, !dbg !7535
  br i1 %17, label %18, label %23, !dbg !7539

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !7540
  %20 = xor i32 %19, -1, !dbg !7540
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7540
  %22 = and i32 %21, %20, !dbg !7540
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !7540
  br label %23, !dbg !7540

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !7542
  %25 = load i8*, i8** %24, align 4, !dbg !7542
  %26 = icmp eq i8* %25, null, !dbg !7544
  br i1 %26, label %30, label %27, !dbg !7545

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !7542
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !7546
  br label %30, !dbg !7548

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xTasksWaitingTermination, %struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !7549
  %31 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !7550
  %32 = add i32 %31, 1, !dbg !7550
  store volatile i32 %32, i32* @uxTasksDeleted, align 4, !dbg !7550
  %33 = load i32, i32* @uxTaskNumber, align 4, !dbg !7551
  %34 = add i32 %33, 1, !dbg !7551
  store i32 %34, i32* @uxTaskNumber, align 4, !dbg !7551
  tail call void @vPortExitCritical() #18, !dbg !7552
  %35 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !7553
  %36 = icmp eq i32 %35, 0, !dbg !7555
  br i1 %36, label %46, label %37, !dbg !7556

37:                                               ; preds = %30
  %38 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7557
  %39 = icmp eq %struct.tskTaskControlBlock* %8, %38, !dbg !7560
  br i1 %39, label %40, label %45, !dbg !7561

40:                                               ; preds = %37
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7562
  %42 = icmp eq i32 %41, 0, !dbg !7562
  br i1 %42, label %44, label %43, !dbg !7565

43:                                               ; preds = %40
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 794) #18, !dbg !7566
  br label %44, !dbg !7566

44:                                               ; preds = %43, %40
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7568
  tail call void asm sideeffect "dsb", ""() #17, !dbg !7568, !srcloc !7570
  tail call void asm sideeffect "isb", ""() #17, !dbg !7568, !srcloc !7571
  br label %46, !dbg !7572

45:                                               ; preds = %37
  tail call void @vPortEnterCritical() #18, !dbg !7573
  tail call fastcc void @prvResetNextTaskUnblockTime() #20, !dbg !7575
  tail call void @vPortExitCritical() #18, !dbg !7577
  br label %46

46:                                               ; preds = %44, %45, %30
  ret void, !dbg !7578
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @prvResetNextTaskUnblockTime() unnamed_addr #5 !dbg !7579 {
  %1 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7582
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !7582
  %3 = load i32, i32* %2, align 4, !dbg !7582
  %4 = icmp eq i32 %3, 0, !dbg !7582
  br i1 %4, label %14, label %5, !dbg !7584

5:                                                ; preds = %0
  %6 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7585
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !7585
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !7585
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !7585
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !7585
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !7585
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !7581, metadata !DIExpression()), !dbg !7587
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, i32 0, !dbg !7588
  %13 = load i32, i32* %12, align 4, !dbg !7588
  br label %14

14:                                               ; preds = %0, %5
  %15 = phi i32 [ %13, %5 ], [ -1, %0 ]
  store volatile i32 %15, i32* @xNextTaskUnblockTime, align 4, !dbg !7589
  ret void, !dbg !7590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelayUntil(i32* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7591 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7598, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i32 %1, metadata !7599, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.value(metadata i32 0, metadata !7602, metadata !DIExpression()), !dbg !7605
  %3 = icmp eq i32* %0, null, !dbg !7606
  br i1 %3, label %4, label %5, !dbg !7608

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 827) #18, !dbg !7609
  br label %5, !dbg !7609

5:                                                ; preds = %4, %2
  %6 = icmp eq i32 %1, 0, !dbg !7611
  br i1 %6, label %7, label %8, !dbg !7613

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 828) #18, !dbg !7614
  br label %8, !dbg !7614

8:                                                ; preds = %7, %5
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7616
  %10 = icmp eq i32 %9, 0, !dbg !7616
  br i1 %10, label %12, label %11, !dbg !7618

11:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 829) #18, !dbg !7619
  br label %12, !dbg !7619

12:                                               ; preds = %11, %8
  tail call void @vTaskSuspendAll() #20, !dbg !7621
  %13 = load volatile i32, i32* @xTickCount, align 4, !dbg !7622
  call void @llvm.dbg.value(metadata i32 %13, metadata !7603, metadata !DIExpression()), !dbg !7623
  %14 = load i32, i32* %0, align 4, !dbg !7624
  %15 = add i32 %14, %1, !dbg !7625
  call void @llvm.dbg.value(metadata i32 %15, metadata !7600, metadata !DIExpression()), !dbg !7605
  %16 = icmp ult i32 %13, %14, !dbg !7626
  %17 = icmp ult i32 %15, %14, !dbg !7628
  %18 = icmp ugt i32 %15, %13
  br i1 %16, label %19, label %21, !dbg !7629

19:                                               ; preds = %12
  %20 = select i1 %17, i1 %18, i1 false, !dbg !7630
  br i1 %20, label %24, label %23, !dbg !7630

21:                                               ; preds = %12
  %22 = select i1 %17, i1 true, i1 %18, !dbg !7633
  br i1 %22, label %24, label %23, !dbg !7633

23:                                               ; preds = %21, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !7602, metadata !DIExpression()), !dbg !7605
  store i32 %15, i32* %0, align 4, !dbg !7636
  br label %38, !dbg !7637

24:                                               ; preds = %19, %21
  store i32 %15, i32* %0, align 4, !dbg !7636
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7638
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 1, !dbg !7642
  %27 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %26) #18, !dbg !7643
  %28 = icmp eq i32 %27, 0, !dbg !7644
  br i1 %28, label %29, label %37, !dbg !7645

29:                                               ; preds = %24
  %30 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7646
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %30, i32 0, i32 3, !dbg !7646
  %32 = load i32, i32* %31, align 4, !dbg !7646
  %33 = shl nuw i32 1, %32, !dbg !7646
  %34 = xor i32 %33, -1, !dbg !7646
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7646
  %36 = and i32 %35, %34, !dbg !7646
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !7646
  br label %37, !dbg !7648

37:                                               ; preds = %24, %29
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %15) #20, !dbg !7649
  br label %38, !dbg !7650

38:                                               ; preds = %23, %37
  %39 = tail call i32 @xTaskResumeAll() #20, !dbg !7651
  call void @llvm.dbg.value(metadata i32 %39, metadata !7601, metadata !DIExpression()), !dbg !7605
  %40 = icmp eq i32 %39, 0, !dbg !7652
  br i1 %40, label %41, label %42, !dbg !7654

41:                                               ; preds = %38
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7655
  tail call void asm sideeffect "dsb", ""() #17, !dbg !7655, !srcloc !7658
  tail call void asm sideeffect "isb", ""() #17, !dbg !7655, !srcloc !7659
  br label %42, !dbg !7660

42:                                               ; preds = %38, %41
  ret void, !dbg !7661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskSuspendAll() local_unnamed_addr #5 !dbg !7662 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7663
  %2 = add i32 %1, 1, !dbg !7663
  store volatile i32 %2, i32* @uxSchedulerSuspended, align 4, !dbg !7663
  ret void, !dbg !7664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0) unnamed_addr #0 !dbg !7665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7669, metadata !DIExpression()), !dbg !7670
  %2 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7671
  %3 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 1, i32 0, !dbg !7671
  store i32 %0, i32* %3, align 4, !dbg !7671
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !7672
  %5 = icmp ugt i32 %4, %0, !dbg !7674
  br i1 %5, label %6, label %10, !dbg !7675

6:                                                ; preds = %1
  %7 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7676
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7678
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !7679
  tail call void @vListInsert(%struct.xLIST* noundef %7, %struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !7680
  br label %17, !dbg !7681

10:                                               ; preds = %1
  %11 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7682
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7684
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !7685
  tail call void @vListInsert(%struct.xLIST* noundef %11, %struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !7686
  %14 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !7687
  %15 = icmp ugt i32 %14, %0, !dbg !7689
  br i1 %15, label %16, label %17, !dbg !7690

16:                                               ; preds = %10
  store volatile i32 %0, i32* @xNextTaskUnblockTime, align 4, !dbg !7691
  br label %17, !dbg !7693

17:                                               ; preds = %16, %10, %6
  ret void, !dbg !7694
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeAll() local_unnamed_addr #0 !dbg !7695 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7700, metadata !DIExpression()), !dbg !7701
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7702
  %2 = icmp eq i32 %1, 0, !dbg !7702
  br i1 %2, label %3, label %4, !dbg !7704

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11.132, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 1673) #18, !dbg !7705
  br label %4, !dbg !7705

4:                                                ; preds = %3, %0
  tail call void @vPortEnterCritical() #18, !dbg !7707
  %5 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7708
  %6 = add i32 %5, -1, !dbg !7708
  store volatile i32 %6, i32* @uxSchedulerSuspended, align 4, !dbg !7708
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7710
  %8 = icmp eq i32 %7, 0, !dbg !7712
  br i1 %8, label %9, label %58, !dbg !7713

9:                                                ; preds = %4
  %10 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !7714
  %11 = icmp eq i32 %10, 0, !dbg !7717
  br i1 %11, label %58, label %12, !dbg !7718

12:                                               ; preds = %9
  %13 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !7719
  %14 = icmp eq i32 %13, 0, !dbg !7719
  br i1 %14, label %39, label %15, !dbg !7721

15:                                               ; preds = %12, %36
  %16 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 2, i32 1), align 4, !dbg !7722
  %17 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %16, i32 0, i32 3, !dbg !7722
  %18 = bitcast i8** %17 to %struct.tskTaskControlBlock**, !dbg !7722
  %19 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %18, align 4, !dbg !7722
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %19, metadata !7699, metadata !DIExpression()), !dbg !7701
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 2, !dbg !7724
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #18, !dbg !7725
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !7726
  %23 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %22) #18, !dbg !7727
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 3, !dbg !7728
  %25 = load i32, i32* %24, align 4, !dbg !7728
  %26 = shl nuw i32 1, %25, !dbg !7728
  %27 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7728
  %28 = or i32 %27, %26, !dbg !7728
  store volatile i32 %28, i32* @uxTopReadyPriority, align 4, !dbg !7728
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %25, !dbg !7728
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %29, %struct.xLIST_ITEM* noundef nonnull %22) #18, !dbg !7728
  %30 = load i32, i32* %24, align 4, !dbg !7729
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7731
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 3, !dbg !7732
  %33 = load i32, i32* %32, align 4, !dbg !7732
  %34 = icmp ult i32 %30, %33, !dbg !7733
  br i1 %34, label %36, label %35, !dbg !7734

35:                                               ; preds = %15
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !7735
  br label %36, !dbg !7737

36:                                               ; preds = %15, %35
  %37 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !7719
  %38 = icmp eq i32 %37, 0, !dbg !7719
  br i1 %38, label %39, label %15, !dbg !7721, !llvm.loop !7738

39:                                               ; preds = %36, %12
  %40 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7740
  %41 = icmp eq i32 %40, 0, !dbg !7742
  br i1 %41, label %54, label %42, !dbg !7743

42:                                               ; preds = %39
  %43 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7744
  %44 = icmp eq i32 %43, 0, !dbg !7746
  br i1 %44, label %54, label %45, !dbg !7747

45:                                               ; preds = %42, %49
  %46 = tail call i32 @xTaskIncrementTick() #20, !dbg !7748
  %47 = icmp eq i32 %46, 0, !dbg !7751
  br i1 %47, label %49, label %48, !dbg !7752

48:                                               ; preds = %45
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !7753
  br label %49, !dbg !7755

49:                                               ; preds = %45, %48
  %50 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7756
  %51 = add i32 %50, -1, !dbg !7756
  store volatile i32 %51, i32* @uxPendedTicks, align 4, !dbg !7756
  %52 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7744
  %53 = icmp eq i32 %52, 0, !dbg !7746
  br i1 %53, label %54, label %45, !dbg !7747, !llvm.loop !7757

54:                                               ; preds = %49, %42, %39
  %55 = load volatile i32, i32* @xYieldPending, align 4, !dbg !7759
  %56 = icmp eq i32 %55, 1, !dbg !7761
  br i1 %56, label %57, label %58, !dbg !7762

57:                                               ; preds = %54
  call void @llvm.dbg.value(metadata i32 1, metadata !7700, metadata !DIExpression()), !dbg !7701
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7763
  tail call void asm sideeffect "dsb", ""() #17, !dbg !7763, !srcloc !7766
  tail call void asm sideeffect "isb", ""() #17, !dbg !7763, !srcloc !7767
  br label %58, !dbg !7768

58:                                               ; preds = %4, %9, %54, %57
  %59 = phi i32 [ 1, %57 ], [ 0, %54 ], [ 0, %9 ], [ 0, %4 ], !dbg !7701
  call void @llvm.dbg.value(metadata i32 %59, metadata !7700, metadata !DIExpression()), !dbg !7701
  tail call void @vPortExitCritical() #18, !dbg !7769
  ret i32 %59, !dbg !7770
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskIncrementTick() local_unnamed_addr #0 !dbg !7771 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7775, metadata !DIExpression()), !dbg !7784
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7785
  %2 = icmp eq i32 %1, 0, !dbg !7786
  br i1 %2, label %3, label %76, !dbg !7787

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !7788
  %5 = add i32 %4, 1, !dbg !7788
  store volatile i32 %5, i32* @xTickCount, align 4, !dbg !7788
  %6 = load volatile i32, i32* @xTickCount, align 4, !dbg !7789
  call void @llvm.dbg.value(metadata i32 %6, metadata !7776, metadata !DIExpression()), !dbg !7790
  %7 = icmp eq i32 %6, 0, !dbg !7791
  br i1 %7, label %8, label %19, !dbg !7792

8:                                                ; preds = %3
  %9 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7793
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %9, i32 0, i32 0, !dbg !7793
  %11 = load i32, i32* %10, align 4, !dbg !7793
  %12 = icmp eq i32 %11, 0, !dbg !7793
  br i1 %12, label %14, label %13, !dbg !7795

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.133, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 1957) #18, !dbg !7796
  br label %14, !dbg !7796

14:                                               ; preds = %13, %8
  %15 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7795
  call void @llvm.dbg.value(metadata %struct.xLIST* %15, metadata !7780, metadata !DIExpression()), !dbg !7798
  %16 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7795
  store volatile %struct.xLIST* %16, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7795
  store volatile %struct.xLIST* %15, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !7795
  %17 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !7795
  %18 = add nsw i32 %17, 1, !dbg !7795
  store volatile i32 %18, i32* @xNumOfOverflows, align 4, !dbg !7795
  tail call fastcc void @prvResetNextTaskUnblockTime() #20, !dbg !7795
  br label %19, !dbg !7799

19:                                               ; preds = %3, %14
  %20 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !7800
  %21 = icmp ult i32 %6, %20, !dbg !7802
  br i1 %21, label %67, label %22, !dbg !7803

22:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 0, metadata !7775, metadata !DIExpression()), !dbg !7784
  %23 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7804
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %23, i32 0, i32 0, !dbg !7804
  %25 = load i32, i32* %24, align 4, !dbg !7804
  %26 = icmp eq i32 %25, 0, !dbg !7804
  br i1 %26, label %64, label %27, !dbg !7810

27:                                               ; preds = %22, %47
  %28 = phi i32 [ %59, %47 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !7775, metadata !DIExpression()), !dbg !7784
  %29 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7811
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %29, i32 0, i32 2, i32 1, !dbg !7811
  %31 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %30, align 4, !dbg !7811
  %32 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %31, i32 0, i32 3, !dbg !7811
  %33 = bitcast i8** %32 to %struct.tskTaskControlBlock**, !dbg !7811
  %34 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %33, align 4, !dbg !7811
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %34, metadata !7773, metadata !DIExpression()), !dbg !7784
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !7813
  %36 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %35, i32 0, i32 0, !dbg !7813
  %37 = load i32, i32* %36, align 4, !dbg !7813
  call void @llvm.dbg.value(metadata i32 %37, metadata !7774, metadata !DIExpression()), !dbg !7784
  %38 = icmp ult i32 %6, %37, !dbg !7814
  br i1 %38, label %64, label %39, !dbg !7816

39:                                               ; preds = %27
  %40 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %35) #18, !dbg !7817
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, i32 4, !dbg !7818
  %42 = load i8*, i8** %41, align 4, !dbg !7818
  %43 = icmp eq i8* %42, null, !dbg !7820
  br i1 %43, label %47, label %44, !dbg !7821

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, !dbg !7818
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #18, !dbg !7822
  br label %47, !dbg !7824

47:                                               ; preds = %39, %44
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 3, !dbg !7825
  %49 = load i32, i32* %48, align 4, !dbg !7825
  %50 = shl nuw i32 1, %49, !dbg !7825
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7825
  %52 = or i32 %51, %50, !dbg !7825
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !7825
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !7825
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %35) #18, !dbg !7825
  %54 = load i32, i32* %48, align 4, !dbg !7826
  %55 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7829
  %56 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %55, i32 0, i32 3, !dbg !7830
  %57 = load i32, i32* %56, align 4, !dbg !7830
  %58 = icmp ult i32 %54, %57, !dbg !7831
  %59 = select i1 %58, i32 %28, i32 1, !dbg !7832
  call void @llvm.dbg.value(metadata i32 %59, metadata !7775, metadata !DIExpression()), !dbg !7784
  %60 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !7804
  %61 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %60, i32 0, i32 0, !dbg !7804
  %62 = load i32, i32* %61, align 4, !dbg !7804
  %63 = icmp eq i32 %62, 0, !dbg !7804
  br i1 %63, label %64, label %27, !dbg !7810, !llvm.loop !7833

64:                                               ; preds = %27, %47, %22
  %65 = phi i32 [ -1, %22 ], [ -1, %47 ], [ %37, %27 ]
  %66 = phi i32 [ 0, %22 ], [ %59, %47 ], [ %28, %27 ]
  store volatile i32 %65, i32* @xNextTaskUnblockTime, align 4, !dbg !7836
  br label %67, !dbg !7837

67:                                               ; preds = %64, %19
  %68 = phi i32 [ 0, %19 ], [ %66, %64 ], !dbg !7840
  call void @llvm.dbg.value(metadata i32 %68, metadata !7775, metadata !DIExpression()), !dbg !7784
  %69 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7837
  %70 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %69, i32 0, i32 3, !dbg !7837
  %71 = load i32, i32* %70, align 4, !dbg !7837
  %72 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %71, i32 0, !dbg !7837
  %73 = load i32, i32* %72, align 4, !dbg !7837
  %74 = icmp ugt i32 %73, 1, !dbg !7841
  %75 = select i1 %74, i32 1, i32 %68, !dbg !7842
  br label %79, !dbg !7842

76:                                               ; preds = %0
  %77 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !7843
  %78 = add i32 %77, 1, !dbg !7843
  store volatile i32 %78, i32* @uxPendedTicks, align 4, !dbg !7843
  br label %79

79:                                               ; preds = %67, %76
  %80 = phi i32 [ 0, %76 ], [ %75, %67 ], !dbg !7784
  call void @llvm.dbg.value(metadata i32 %80, metadata !7775, metadata !DIExpression()), !dbg !7784
  %81 = load volatile i32, i32* @xYieldPending, align 4, !dbg !7845
  %82 = icmp eq i32 %81, 0, !dbg !7848
  %83 = select i1 %82, i32 %80, i32 1, !dbg !7849
  call void @llvm.dbg.value(metadata i32 %83, metadata !7775, metadata !DIExpression()), !dbg !7784
  ret i32 %83, !dbg !7850
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelay(i32 noundef %0) local_unnamed_addr #0 !dbg !7851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7853, metadata !DIExpression()), !dbg !7856
  call void @llvm.dbg.value(metadata i32 0, metadata !7855, metadata !DIExpression()), !dbg !7856
  %2 = icmp eq i32 %0, 0, !dbg !7857
  br i1 %2, label %25, label %3, !dbg !7859

3:                                                ; preds = %1
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !7860
  %5 = icmp eq i32 %4, 0, !dbg !7860
  br i1 %5, label %7, label %6, !dbg !7863

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 927) #18, !dbg !7864
  br label %7, !dbg !7864

7:                                                ; preds = %6, %3
  tail call void @vTaskSuspendAll() #20, !dbg !7866
  %8 = load volatile i32, i32* @xTickCount, align 4, !dbg !7867
  %9 = add i32 %8, %0, !dbg !7869
  call void @llvm.dbg.value(metadata i32 %9, metadata !7854, metadata !DIExpression()), !dbg !7856
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7870
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 1, !dbg !7872
  %12 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %11) #18, !dbg !7873
  %13 = icmp eq i32 %12, 0, !dbg !7874
  br i1 %13, label %14, label %22, !dbg !7875

14:                                               ; preds = %7
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7876
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !7876
  %17 = load i32, i32* %16, align 4, !dbg !7876
  %18 = shl nuw i32 1, %17, !dbg !7876
  %19 = xor i32 %18, -1, !dbg !7876
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7876
  %21 = and i32 %20, %19, !dbg !7876
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !7876
  br label %22, !dbg !7878

22:                                               ; preds = %7, %14
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %9) #20, !dbg !7879
  %23 = tail call i32 @xTaskResumeAll() #20, !dbg !7880
  call void @llvm.dbg.value(metadata i32 %23, metadata !7855, metadata !DIExpression()), !dbg !7856
  %24 = icmp eq i32 %23, 0, !dbg !7881
  call void @llvm.dbg.value(metadata i32 undef, metadata !7855, metadata !DIExpression()), !dbg !7856
  br i1 %24, label %25, label %26, !dbg !7882

25:                                               ; preds = %1, %22
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7883
  tail call void asm sideeffect "dsb", ""() #17, !dbg !7883, !srcloc !7887
  tail call void asm sideeffect "isb", ""() #17, !dbg !7883, !srcloc !7888
  br label %26, !dbg !7889

26:                                               ; preds = %22, %25
  ret void, !dbg !7890
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGet(i8* noundef readonly %0) local_unnamed_addr #0 !dbg !7891 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7895, metadata !DIExpression()), !dbg !7898
  tail call void @vPortEnterCritical() #18, !dbg !7899
  %2 = icmp eq i8* %0, null, !dbg !7900
  br i1 %2, label %3, label %5, !dbg !7900

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7900
  br label %7, !dbg !7900

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7900
  br label %7, !dbg !7900

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !7900
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !7896, metadata !DIExpression()), !dbg !7898
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !7902
  %10 = load i32, i32* %9, align 4, !dbg !7902
  call void @llvm.dbg.value(metadata i32 %10, metadata !7897, metadata !DIExpression()), !dbg !7898
  tail call void @vPortExitCritical() #18, !dbg !7903
  ret i32 %10, !dbg !7904
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGetFromISR(i8* noundef readonly %0) local_unnamed_addr #0 !dbg !7905 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7907, metadata !DIExpression()), !dbg !7911
  tail call void @vPortValidateInterruptPriority() #18, !dbg !7912
  %2 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !7913, !srcloc !7919
  call void @llvm.dbg.value(metadata i32 undef, metadata !7916, metadata !DIExpression()) #17, !dbg !7920
  call void @llvm.dbg.value(metadata i32 undef, metadata !7917, metadata !DIExpression()) #17, !dbg !7920
  call void @llvm.dbg.value(metadata i32 undef, metadata !7910, metadata !DIExpression()), !dbg !7911
  %3 = icmp eq i8* %0, null, !dbg !7921
  br i1 %3, label %4, label %6, !dbg !7921

4:                                                ; preds = %1
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7921
  br label %8, !dbg !7921

6:                                                ; preds = %1
  %7 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7921
  br label %8, !dbg !7921

8:                                                ; preds = %6, %4
  %9 = phi %struct.tskTaskControlBlock* [ %5, %4 ], [ %7, %6 ], !dbg !7921
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !7913
  call void @llvm.dbg.value(metadata i32 %10, metadata !7916, metadata !DIExpression()) #17, !dbg !7920
  call void @llvm.dbg.value(metadata i32 %10, metadata !7910, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %9, metadata !7908, metadata !DIExpression()), !dbg !7911
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 3, !dbg !7923
  %12 = load i32, i32* %11, align 4, !dbg !7923
  call void @llvm.dbg.value(metadata i32 %12, metadata !7909, metadata !DIExpression()), !dbg !7911
  call void @llvm.dbg.value(metadata i32 undef, metadata !7924, metadata !DIExpression()) #17, !dbg !7927
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %10) #17, !dbg !7929, !srcloc !7930
  ret i32 %12, !dbg !7931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPrioritySet(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7932 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7936, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i32 %1, metadata !7937, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.value(metadata i32 0, metadata !7941, metadata !DIExpression()), !dbg !7942
  %3 = icmp ugt i32 %1, 19, !dbg !7943
  br i1 %3, label %4, label %5, !dbg !7945

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 1122) #18, !dbg !7946
  br label %5, !dbg !7946

5:                                                ; preds = %4, %2
  %6 = icmp ult i32 %1, 19, !dbg !7948
  %7 = select i1 %6, i32 %1, i32 19, !dbg !7948
  call void @llvm.dbg.value(metadata i32 %7, metadata !7937, metadata !DIExpression()), !dbg !7942
  tail call void @vPortEnterCritical() #18, !dbg !7949
  %8 = icmp eq i8* %0, null, !dbg !7950
  br i1 %8, label %9, label %11, !dbg !7950

9:                                                ; preds = %5
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7950
  br label %13, !dbg !7950

11:                                               ; preds = %5
  %12 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !7950
  br label %13, !dbg !7950

13:                                               ; preds = %11, %9
  %14 = phi %struct.tskTaskControlBlock* [ %10, %9 ], [ %12, %11 ], !dbg !7950
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %14, metadata !7938, metadata !DIExpression()), !dbg !7942
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 8, !dbg !7952
  %16 = load i32, i32* %15, align 4, !dbg !7952
  call void @llvm.dbg.value(metadata i32 %16, metadata !7939, metadata !DIExpression()), !dbg !7942
  %17 = icmp eq i32 %16, %7, !dbg !7954
  br i1 %17, label %64, label %18, !dbg !7956

18:                                               ; preds = %13
  %19 = icmp ule i32 %7, %16, !dbg !7957
  %20 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7960
  %21 = icmp eq %struct.tskTaskControlBlock* %14, %20, !dbg !7960
  %22 = select i1 %19, i1 true, i1 %21, !dbg !7961
  %23 = select i1 %19, i1 %21, i1 false, !dbg !7961
  br i1 %22, label %29, label %24, !dbg !7961

24:                                               ; preds = %18
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !7962
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !7967
  %27 = load i32, i32* %26, align 4, !dbg !7967
  %28 = icmp uge i32 %7, %27, !dbg !7968
  br label %29, !dbg !7969

29:                                               ; preds = %18, %24
  %30 = phi i1 [ %28, %24 ], [ %23, %18 ], !dbg !7942
  call void @llvm.dbg.value(metadata i32 undef, metadata !7941, metadata !DIExpression()), !dbg !7942
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !7970
  %32 = load i32, i32* %31, align 4, !dbg !7970
  call void @llvm.dbg.value(metadata i32 %32, metadata !7940, metadata !DIExpression()), !dbg !7942
  %33 = icmp eq i32 %16, %32, !dbg !7971
  br i1 %33, label %34, label %35, !dbg !7974

34:                                               ; preds = %29
  store i32 %7, i32* %31, align 4, !dbg !7975
  br label %35, !dbg !7977

35:                                               ; preds = %29, %34
  store i32 %7, i32* %15, align 4, !dbg !7978
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, i32 0, !dbg !7979
  %37 = load i32, i32* %36, align 4, !dbg !7979
  %38 = icmp sgt i32 %37, -1, !dbg !7981
  br i1 %38, label %39, label %41, !dbg !7982

39:                                               ; preds = %35
  %40 = sub nuw nsw i32 20, %7, !dbg !7983
  store i32 %40, i32* %36, align 4, !dbg !7983
  br label %41, !dbg !7985

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, !dbg !7986
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, i32 4, !dbg !7986
  %44 = load i8*, i8** %43, align 4, !dbg !7986
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !7986
  %46 = bitcast %struct.xLIST* %45 to i8*, !dbg !7986
  %47 = icmp eq i8* %44, %46, !dbg !7986
  br i1 %47, label %48, label %62, !dbg !7988

48:                                               ; preds = %41
  %49 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %42) #18, !dbg !7989
  %50 = icmp eq i32 %49, 0, !dbg !7992
  br i1 %50, label %51, label %56, !dbg !7993

51:                                               ; preds = %48
  %52 = shl nuw i32 1, %32, !dbg !7994
  %53 = xor i32 %52, -1, !dbg !7994
  %54 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7994
  %55 = and i32 %54, %53, !dbg !7994
  store volatile i32 %55, i32* @uxTopReadyPriority, align 4, !dbg !7994
  br label %56, !dbg !7996

56:                                               ; preds = %48, %51
  %57 = load i32, i32* %31, align 4, !dbg !7997
  %58 = shl nuw i32 1, %57, !dbg !7997
  %59 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !7997
  %60 = or i32 %59, %58, !dbg !7997
  store volatile i32 %60, i32* @uxTopReadyPriority, align 4, !dbg !7997
  %61 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %57, !dbg !7997
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %61, %struct.xLIST_ITEM* noundef nonnull %42) #18, !dbg !7997
  br label %62, !dbg !7998

62:                                               ; preds = %41, %56
  br i1 %30, label %63, label %64, !dbg !7999

63:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8000
  tail call void asm sideeffect "dsb", ""() #17, !dbg !8000, !srcloc !8004
  tail call void asm sideeffect "isb", ""() #17, !dbg !8000, !srcloc !8005
  br label %64, !dbg !8006

64:                                               ; preds = %63, %62, %13
  tail call void @vPortExitCritical() #18, !dbg !8007
  ret void, !dbg !8008
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSuspend(i8* noundef %0) local_unnamed_addr #0 !dbg !8009 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8011, metadata !DIExpression()), !dbg !8013
  tail call void @vPortEnterCritical() #18, !dbg !8014
  %2 = icmp eq i8* %0, null, !dbg !8015
  br i1 %2, label %3, label %5, !dbg !8015

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8015
  br label %7, !dbg !8015

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8015
  br label %7, !dbg !8015

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !8015
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !8012, metadata !DIExpression()), !dbg !8013
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !8017
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !8019
  %11 = icmp eq i32 %10, 0, !dbg !8020
  br i1 %11, label %12, label %23, !dbg !8021

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !8022
  %14 = load i32, i32* %13, align 4, !dbg !8022
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !8022
  %16 = load i32, i32* %15, align 4, !dbg !8022
  %17 = icmp eq i32 %16, 0, !dbg !8022
  br i1 %17, label %18, label %23, !dbg !8026

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !8027
  %20 = xor i32 %19, -1, !dbg !8027
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8027
  %22 = and i32 %21, %20, !dbg !8027
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !8027
  br label %23, !dbg !8027

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !8029
  %25 = load i8*, i8** %24, align 4, !dbg !8029
  %26 = icmp eq i8* %25, null, !dbg !8031
  br i1 %26, label %30, label %27, !dbg !8032

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !8029
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !8033
  br label %30, !dbg !8035

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !8036
  tail call void @vPortExitCritical() #18, !dbg !8037
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8038
  %32 = icmp eq %struct.tskTaskControlBlock* %8, %31, !dbg !8040
  %33 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !8041
  %34 = icmp eq i32 %33, 0, !dbg !8041
  br i1 %32, label %35, label %47, !dbg !8042

35:                                               ; preds = %30
  br i1 %34, label %41, label %36, !dbg !8043

36:                                               ; preds = %35
  %37 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8045
  %38 = icmp eq i32 %37, 0, !dbg !8045
  br i1 %38, label %40, label %39, !dbg !8049

39:                                               ; preds = %36
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4.127, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 1322) #18, !dbg !8050
  br label %40, !dbg !8050

40:                                               ; preds = %39, %36
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8052
  tail call void asm sideeffect "dsb", ""() #17, !dbg !8052, !srcloc !8054
  tail call void asm sideeffect "isb", ""() #17, !dbg !8052, !srcloc !8055
  br label %49, !dbg !8056

41:                                               ; preds = %35
  %42 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xSuspendedTaskList, i32 0, i32 0), align 4, !dbg !8057
  %43 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8060
  %44 = icmp eq i32 %42, %43, !dbg !8061
  br i1 %44, label %45, label %46, !dbg !8062

45:                                               ; preds = %41
  store volatile %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8063
  br label %49, !dbg !8065

46:                                               ; preds = %41
  tail call void @vTaskSwitchContext() #20, !dbg !8066
  br label %49

47:                                               ; preds = %30
  br i1 %34, label %49, label %48, !dbg !8068

48:                                               ; preds = %47
  tail call void @vPortEnterCritical() #18, !dbg !8070
  tail call fastcc void @prvResetNextTaskUnblockTime() #20, !dbg !8073
  tail call void @vPortExitCritical() #18, !dbg !8075
  br label %49, !dbg !8076

49:                                               ; preds = %48, %47, %40, %46, %45
  ret void, !dbg !8077
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSwitchContext() local_unnamed_addr #0 !dbg !1215 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8078
  %2 = icmp eq i32 %1, 0, !dbg !8079
  br i1 %2, label %4, label %3, !dbg !8080

3:                                                ; preds = %0
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8081
  br label %62, !dbg !8083

4:                                                ; preds = %0
  store volatile i32 0, i32* @xYieldPending, align 4, !dbg !8084
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !8085
  %6 = and i32 %5, 1, !dbg !8085
  %7 = icmp eq i32 %6, 0, !dbg !8085
  br i1 %7, label %21, label %8, !dbg !8088

8:                                                ; preds = %4
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8089
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 0, !dbg !8089
  %11 = load i32*, i32** %10, align 4, !dbg !8089
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8089
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 4, !dbg !8089
  %14 = load i32*, i32** %13, align 4, !dbg !8089
  %15 = icmp ugt i32* %11, %14, !dbg !8089
  br i1 %15, label %21, label %16, !dbg !8092

16:                                               ; preds = %8
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8093
  %18 = bitcast %struct.tskTaskControlBlock* %17 to i8*, !dbg !8093
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8093
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 5, i32 0, !dbg !8093
  tail call void @vApplicationStackOverflowHook(i8* noundef %18, i8* noundef nonnull %20) #18, !dbg !8093
  br label %21, !dbg !8093

21:                                               ; preds = %8, %16, %4
  %22 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !8095
  %23 = and i32 %22, 1, !dbg !8095
  %24 = icmp eq i32 %23, 0, !dbg !8095
  br i1 %24, label %37, label %25, !dbg !8098

25:                                               ; preds = %21
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8099
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 4, !dbg !8099
  %28 = bitcast i32** %27 to i8**, !dbg !8099
  %29 = load i8*, i8** %28, align 4, !dbg !8099
  %30 = tail call i32 @memcmp(i8* noundef %29, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @vTaskSwitchContext.ucExpectedStackBytes, i32 0, i32 0), i32 noundef 20) #18, !dbg !8099
  %31 = icmp eq i32 %30, 0, !dbg !8099
  br i1 %31, label %37, label %32, !dbg !8102

32:                                               ; preds = %25
  %33 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8103
  %34 = bitcast %struct.tskTaskControlBlock* %33 to i8*, !dbg !8103
  %35 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8103
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 5, i32 0, !dbg !8103
  tail call void @vApplicationStackOverflowHook(i8* noundef %34, i8* noundef nonnull %36) #18, !dbg !8103
  br label %37, !dbg !8103

37:                                               ; preds = %25, %32, %21
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8105
  call void @llvm.dbg.value(metadata i32 %38, metadata !8106, metadata !DIExpression()) #17, !dbg !8112
  %39 = tail call i8 asm sideeffect "clz $0, $1", "=r,r"(i32 %38) #17, !dbg !8114, !srcloc !8115
  call void @llvm.dbg.value(metadata i8 %39, metadata !8111, metadata !DIExpression()) #17, !dbg !8112
  %40 = zext i8 %39 to i32, !dbg !8105
  %41 = sub nsw i32 31, %40, !dbg !8105
  call void @llvm.dbg.value(metadata i32 %41, metadata !1217, metadata !DIExpression()), !dbg !8116
  %42 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 0, !dbg !8117
  %43 = load i32, i32* %42, align 4, !dbg !8117
  %44 = icmp eq i32 %43, 0, !dbg !8117
  br i1 %44, label %45, label %46, !dbg !8105

45:                                               ; preds = %37
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.14.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 2244) #18, !dbg !8119
  br label %46, !dbg !8119

46:                                               ; preds = %45, %37
  call void @llvm.dbg.value(metadata !DIArgList([20 x %struct.xLIST]* @pxReadyTasksLists, i32 %41), metadata !1221, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !8121
  %47 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 1, !dbg !8122
  %48 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %47, align 4, !dbg !8122
  %49 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %48, i32 0, i32 1, !dbg !8122
  %50 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %49, align 4, !dbg !8122
  store %struct.xLIST_ITEM* %50, %struct.xLIST_ITEM** %47, align 4, !dbg !8122
  %51 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 2, !dbg !8123
  %52 = bitcast %struct.xMINI_LIST_ITEM* %51 to %struct.xLIST_ITEM*, !dbg !8123
  %53 = icmp eq %struct.xLIST_ITEM* %50, %52, !dbg !8123
  br i1 %53, label %54, label %57, !dbg !8122

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %50, i32 0, i32 1, !dbg !8125
  %56 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %55, align 4, !dbg !8125
  store %struct.xLIST_ITEM* %56, %struct.xLIST_ITEM** %47, align 4, !dbg !8125
  br label %57, !dbg !8125

57:                                               ; preds = %54, %46
  %58 = phi %struct.xLIST_ITEM* [ %56, %54 ], [ %50, %46 ], !dbg !8122
  %59 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %58, i32 0, i32 3, !dbg !8122
  %60 = bitcast i8** %59 to %struct.tskTaskControlBlock**, !dbg !8122
  %61 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %60, align 4, !dbg !8122
  store volatile %struct.tskTaskControlBlock* %61, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8122
  br label %62

62:                                               ; preds = %57, %3
  ret void, !dbg !8127
}

; Function Attrs: optsize
declare dso_local i32 @memcmp(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskResume(i8* noundef %0) local_unnamed_addr #0 !dbg !8128 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8130, metadata !DIExpression()), !dbg !8132
  call void @llvm.dbg.value(metadata i8* %0, metadata !8131, metadata !DIExpression()), !dbg !8132
  %2 = icmp eq i8* %0, null, !dbg !8133
  br i1 %2, label %3, label %4, !dbg !8133

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 1420) #18, !dbg !8134
  br label %29, !dbg !8137

4:                                                ; preds = %1
  %5 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8139
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %5, metadata !8131, metadata !DIExpression()), !dbg !8132
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8140
  %7 = icmp eq %struct.tskTaskControlBlock* %6, %5, !dbg !8141
  br i1 %7, label %29, label %8, !dbg !8142

8:                                                ; preds = %4
  tail call void @vPortEnterCritical() #18, !dbg !8143
  %9 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef nonnull %0) #20, !dbg !8145
  %10 = icmp eq i32 %9, 1, !dbg !8148
  br i1 %10, label %11, label %28, !dbg !8149

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8150
  %13 = bitcast i8* %12 to %struct.xLIST_ITEM*, !dbg !8150
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !8152
  %15 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !8153
  %16 = bitcast i8* %15 to i32*, !dbg !8153
  %17 = load i32, i32* %16, align 4, !dbg !8153
  %18 = shl nuw i32 1, %17, !dbg !8153
  %19 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8153
  %20 = or i32 %19, %18, !dbg !8153
  store volatile i32 %20, i32* @uxTopReadyPriority, align 4, !dbg !8153
  %21 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %17, !dbg !8153
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %21, %struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !8153
  %22 = load i32, i32* %16, align 4, !dbg !8154
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8156
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 3, !dbg !8157
  %25 = load i32, i32* %24, align 4, !dbg !8157
  %26 = icmp ult i32 %22, %25, !dbg !8158
  br i1 %26, label %28, label %27, !dbg !8159

27:                                               ; preds = %11
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8160
  tail call void asm sideeffect "dsb", ""() #17, !dbg !8160, !srcloc !8163
  tail call void asm sideeffect "isb", ""() #17, !dbg !8160, !srcloc !8164
  br label %28, !dbg !8165

28:                                               ; preds = %8, %27, %11
  tail call void @vPortExitCritical() #18, !dbg !8166
  br label %29, !dbg !8167

29:                                               ; preds = %3, %4, %28
  ret void, !dbg !8168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvTaskIsTaskSuspended(i8* noundef readonly %0) unnamed_addr #0 !dbg !8169 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8174, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i32 0, metadata !8175, metadata !DIExpression()), !dbg !8180
  call void @llvm.dbg.value(metadata i8* %0, metadata !8176, metadata !DIExpression()), !dbg !8180
  %2 = icmp eq i8* %0, null, !dbg !8181
  br i1 %2, label %3, label %4, !dbg !8183

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 1378) #18, !dbg !8184
  br label %4, !dbg !8184

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8186
  %6 = bitcast i8* %5 to i8**, !dbg !8186
  %7 = load i8*, i8** %6, align 4, !dbg !8186
  %8 = icmp eq i8* %7, bitcast (%struct.xLIST* @xSuspendedTaskList to i8*), !dbg !8186
  br i1 %8, label %9, label %15, !dbg !8188

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !8189
  %11 = bitcast i8* %10 to i8**, !dbg !8189
  %12 = load i8*, i8** %11, align 4, !dbg !8189
  %13 = icmp eq i8* %12, null
  %14 = zext i1 %13 to i32, !dbg !8192
  br label %15, !dbg !8192

15:                                               ; preds = %9, %4
  %16 = phi i32 [ 0, %4 ], [ %14, %9 ], !dbg !8180
  call void @llvm.dbg.value(metadata i32 %16, metadata !8175, metadata !DIExpression()), !dbg !8180
  ret i32 %16, !dbg !8193
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !8194 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8198, metadata !DIExpression()), !dbg !8202
  call void @llvm.dbg.value(metadata i32 0, metadata !8199, metadata !DIExpression()), !dbg !8202
  call void @llvm.dbg.value(metadata i8* %0, metadata !8200, metadata !DIExpression()), !dbg !8202
  %2 = icmp eq i8* %0, null, !dbg !8203
  br i1 %2, label %3, label %4, !dbg !8205

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 1475) #18, !dbg !8206
  br label %4, !dbg !8206

4:                                                ; preds = %3, %1
  tail call void @vPortValidateInterruptPriority() #18, !dbg !8208
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !8209, !srcloc !7919
  call void @llvm.dbg.value(metadata i32 undef, metadata !7916, metadata !DIExpression()) #17, !dbg !8211
  call void @llvm.dbg.value(metadata i32 undef, metadata !7917, metadata !DIExpression()) #17, !dbg !8211
  call void @llvm.dbg.value(metadata i32 undef, metadata !8201, metadata !DIExpression()), !dbg !8202
  %6 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef %0) #20, !dbg !8212
  %7 = icmp eq i32 %6, 1, !dbg !8215
  br i1 %7, label %8, label %31, !dbg !8216

8:                                                ; preds = %4
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8217
  %10 = icmp eq i32 %9, 0, !dbg !8220
  br i1 %10, label %11, label %28, !dbg !8221

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !8222
  %13 = bitcast i8* %12 to i32*, !dbg !8222
  %14 = load i32, i32* %13, align 4, !dbg !8222
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8225
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !8226
  %17 = load i32, i32* %16, align 4, !dbg !8226
  %18 = icmp uge i32 %14, %17, !dbg !8227
  %19 = zext i1 %18 to i32, !dbg !8228
  call void @llvm.dbg.value(metadata i32 %19, metadata !8199, metadata !DIExpression()), !dbg !8202
  %20 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8229
  %21 = bitcast i8* %20 to %struct.xLIST_ITEM*, !dbg !8229
  %22 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !8230
  %23 = load i32, i32* %13, align 4, !dbg !8231
  %24 = shl nuw i32 1, %23, !dbg !8231
  %25 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8231
  %26 = or i32 %25, %24, !dbg !8231
  store volatile i32 %26, i32* @uxTopReadyPriority, align 4, !dbg !8231
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %23, !dbg !8231
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %27, %struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !8231
  br label %31, !dbg !8232

28:                                               ; preds = %8
  %29 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8233
  %30 = bitcast i8* %29 to %struct.xLIST_ITEM*, !dbg !8233
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %30) #18, !dbg !8235
  br label %31

31:                                               ; preds = %4, %11, %28
  %32 = phi i32 [ %19, %11 ], [ 0, %28 ], [ 0, %4 ], !dbg !8202
  %33 = extractvalue { i32, i32 } %5, 0, !dbg !8209
  call void @llvm.dbg.value(metadata i32 %33, metadata !7916, metadata !DIExpression()) #17, !dbg !8211
  call void @llvm.dbg.value(metadata i32 %33, metadata !8201, metadata !DIExpression()), !dbg !8202
  call void @llvm.dbg.value(metadata i32 %32, metadata !8199, metadata !DIExpression()), !dbg !8202
  call void @llvm.dbg.value(metadata i32 undef, metadata !7924, metadata !DIExpression()) #17, !dbg !8236
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #17, !dbg !8238, !srcloc !7930
  ret i32 %32, !dbg !8239
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskStartScheduler() local_unnamed_addr #0 !dbg !8240 {
  %1 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @prvIdleTask, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.139, i32 0, i32 0), i16 noundef zeroext 256, i8* noundef null, i32 noundef 0, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* undef) #20, !dbg !8243
  call void @llvm.dbg.value(metadata i32 %1, metadata !8242, metadata !DIExpression()), !dbg !8245
  %2 = icmp eq i32 %1, 1, !dbg !8246
  br i1 %2, label %3, label %5, !dbg !8249

3:                                                ; preds = %0
  %4 = tail call i32 @xTimerCreateTimerTask() #18, !dbg !8250
  call void @llvm.dbg.value(metadata i32 %4, metadata !8242, metadata !DIExpression()), !dbg !8245
  br label %5, !dbg !8252

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !8245
  call void @llvm.dbg.value(metadata i32 %6, metadata !8242, metadata !DIExpression()), !dbg !8245
  switch i32 %6, label %11 [
    i32 1, label %7
    i32 0, label %10
  ], !dbg !8253

7:                                                ; preds = %5
  %8 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #17, !dbg !8254, !srcloc !8261
  call void @llvm.dbg.value(metadata i32 %8, metadata !8257, metadata !DIExpression()) #17, !dbg !8262
  store volatile i32 1, i32* @xSchedulerRunning, align 4, !dbg !8263
  store volatile i32 0, i32* @xTickCount, align 4, !dbg !8264
  %9 = tail call i32 @xPortStartScheduler() #18, !dbg !8265
  br label %11, !dbg !8267

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 1612) #18, !dbg !8268
  br label %11, !dbg !8268

11:                                               ; preds = %5, %10, %7
  ret void, !dbg !8272
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvIdleTask(i8* nocapture noundef readnone %0) #12 !dbg !8273 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8275, metadata !DIExpression()), !dbg !8276
  br label %2, !dbg !8277

2:                                                ; preds = %5, %1
  tail call fastcc void @prvCheckTasksWaitingTermination() #20, !dbg !8278
  %3 = load i32, i32* getelementptr inbounds ([20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 0, i32 0), align 4, !dbg !8282
  %4 = icmp ugt i32 %3, 1, !dbg !8285
  br i1 %4, label %6, label %5, !dbg !8286

5:                                                ; preds = %2, %6
  br label %2, !dbg !8278, !llvm.loop !8287

6:                                                ; preds = %2
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8290
  tail call void asm sideeffect "dsb", ""() #17, !dbg !8290, !srcloc !8293
  tail call void asm sideeffect "isb", ""() #17, !dbg !8290, !srcloc !8294
  br label %5, !dbg !8295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckTasksWaitingTermination() unnamed_addr #0 !dbg !8296 {
  %1 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !8304
  %2 = icmp eq i32 %1, 0, !dbg !8305
  br i1 %2, label %21, label %3, !dbg !8306

3:                                                ; preds = %0, %18
  tail call void @vTaskSuspendAll() #20, !dbg !8307
  %4 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 0), align 4, !dbg !8308
  %5 = icmp eq i32 %4, 0, !dbg !8308
  call void @llvm.dbg.value(metadata i1 %5, metadata !8298, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8310
  %6 = tail call i32 @xTaskResumeAll() #20, !dbg !8311
  br i1 %5, label %18, label %7, !dbg !8312

7:                                                ; preds = %3
  tail call void @vPortEnterCritical() #18, !dbg !8313
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 2, i32 1), align 4, !dbg !8314
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !8314
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !8314
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !8314
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !8300, metadata !DIExpression()), !dbg !8316
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !8317
  %13 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %12) #18, !dbg !8318
  %14 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8319
  %15 = add i32 %14, -1, !dbg !8319
  store volatile i32 %15, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8319
  %16 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !8320
  %17 = add i32 %16, -1, !dbg !8320
  store volatile i32 %17, i32* @uxTasksDeleted, align 4, !dbg !8320
  tail call void @vPortExitCritical() #18, !dbg !8321
  tail call fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %11) #20, !dbg !8322
  br label %18, !dbg !8323

18:                                               ; preds = %3, %7
  %19 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !8304
  %20 = icmp eq i32 %19, 0, !dbg !8305
  br i1 %20, label %21, label %3, !dbg !8306, !llvm.loop !8324

21:                                               ; preds = %18, %0
  ret void, !dbg !8326
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %0) unnamed_addr #0 !dbg !8327 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !8331, metadata !DIExpression()), !dbg !8332
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 4, !dbg !8333
  %3 = bitcast i32** %2 to i8**, !dbg !8333
  %4 = load i8*, i8** %3, align 4, !dbg !8333
  tail call void @vPortFree(i8* noundef %4) #18, !dbg !8333
  %5 = bitcast %struct.tskTaskControlBlock* %0 to i8*, !dbg !8335
  tail call void @vPortFree(i8* noundef %5) #18, !dbg !8336
  ret void, !dbg !8337
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskEndScheduler() local_unnamed_addr #0 !dbg !8338 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #17, !dbg !8339, !srcloc !8261
  call void @llvm.dbg.value(metadata i32 %1, metadata !8257, metadata !DIExpression()) #17, !dbg !8341
  store volatile i32 0, i32* @xSchedulerRunning, align 4, !dbg !8342
  tail call void @vPortEndScheduler() #18, !dbg !8343
  ret void, !dbg !8344
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetTickCount() local_unnamed_addr #8 !dbg !8345 {
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !8350
  call void @llvm.dbg.value(metadata i32 %1, metadata !8349, metadata !DIExpression()), !dbg !8352
  ret i32 %1, !dbg !8353
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGetTickCountFromISR() local_unnamed_addr #0 !dbg !8354 {
  tail call void @vPortValidateInterruptPriority() #18, !dbg !8358
  call void @llvm.dbg.value(metadata i32 0, metadata !8357, metadata !DIExpression()), !dbg !8359
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !8360
  call void @llvm.dbg.value(metadata i32 %1, metadata !8356, metadata !DIExpression()), !dbg !8359
  ret i32 %1, !dbg !8362
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetNumberOfTasks() local_unnamed_addr #8 !dbg !8363 {
  %1 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8366
  ret i32 %1, !dbg !8367
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @pcTaskGetTaskName(i8* noundef readnone %0) local_unnamed_addr #0 !dbg !8368 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8372, metadata !DIExpression()), !dbg !8374
  %2 = icmp eq i8* %0, null, !dbg !8375
  br i1 %2, label %3, label %5, !dbg !8375

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8375
  br label %7, !dbg !8375

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8375
  br label %7, !dbg !8375

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !8375
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !8373, metadata !DIExpression()), !dbg !8374
  %9 = icmp eq %struct.tskTaskControlBlock* %8, null, !dbg !8376
  br i1 %9, label %10, label %11, !dbg !8378

10:                                               ; preds = %7
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 1821) #18, !dbg !8379
  br label %11, !dbg !8379

11:                                               ; preds = %10, %7
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 5, i32 0, !dbg !8381
  ret i8* %12, !dbg !8382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* nocapture noundef writeonly %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #0 !dbg !8383 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !8403, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.value(metadata i32 %1, metadata !8404, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.value(metadata i32* %2, metadata !8405, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.value(metadata i32 0, metadata !8406, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.value(metadata i32 20, metadata !8407, metadata !DIExpression()), !dbg !8408
  tail call void @vTaskSuspendAll() #20, !dbg !8409
  %4 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8410
  %5 = icmp ugt i32 %4, %1, !dbg !8413
  br i1 %5, label %32, label %6, !dbg !8414

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %3 ], !dbg !8408
  %8 = phi i32 [ %9, %6 ], [ 20, %3 ], !dbg !8408
  call void @llvm.dbg.value(metadata i32 %8, metadata !8407, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.value(metadata i32 %7, metadata !8406, metadata !DIExpression()), !dbg !8408
  %9 = add nsw i32 %8, -1, !dbg !8415
  call void @llvm.dbg.value(metadata i32 %9, metadata !8407, metadata !DIExpression()), !dbg !8408
  %10 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %7, !dbg !8418
  %11 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %9, !dbg !8419
  %12 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %10, %struct.xLIST* noundef nonnull %11, i32 noundef 1) #20, !dbg !8420
  %13 = add i32 %12, %7, !dbg !8421
  call void @llvm.dbg.value(metadata i32 %13, metadata !8406, metadata !DIExpression()), !dbg !8408
  %14 = icmp eq i32 %9, 0, !dbg !8422
  br i1 %14, label %15, label %6, !dbg !8423, !llvm.loop !8424

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %13, !dbg !8427
  %17 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !8428
  %18 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %16, %struct.xLIST* noundef %17, i32 noundef 2) #20, !dbg !8429
  %19 = add i32 %18, %13, !dbg !8430
  call void @llvm.dbg.value(metadata i32 %19, metadata !8406, metadata !DIExpression()), !dbg !8408
  %20 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %19, !dbg !8431
  %21 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !8432
  %22 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %20, %struct.xLIST* noundef %21, i32 noundef 2) #20, !dbg !8433
  %23 = add i32 %22, %19, !dbg !8434
  call void @llvm.dbg.value(metadata i32 %23, metadata !8406, metadata !DIExpression()), !dbg !8408
  %24 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %23, !dbg !8435
  %25 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %24, %struct.xLIST* noundef nonnull @xTasksWaitingTermination, i32 noundef 4) #20, !dbg !8437
  %26 = add i32 %23, %25, !dbg !8438
  call void @llvm.dbg.value(metadata i32 %26, metadata !8406, metadata !DIExpression()), !dbg !8408
  %27 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %26, !dbg !8439
  %28 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %27, %struct.xLIST* noundef nonnull @xSuspendedTaskList, i32 noundef 3) #20, !dbg !8441
  %29 = add i32 %26, %28, !dbg !8442
  call void @llvm.dbg.value(metadata i32 %29, metadata !8406, metadata !DIExpression()), !dbg !8408
  %30 = icmp eq i32* %2, null, !dbg !8443
  br i1 %30, label %32, label %31, !dbg !8446

31:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !8447
  br label %32, !dbg !8449

32:                                               ; preds = %3, %15, %31
  %33 = phi i32 [ %29, %31 ], [ %29, %15 ], [ 0, %3 ], !dbg !8408
  call void @llvm.dbg.value(metadata i32 %33, metadata !8406, metadata !DIExpression()), !dbg !8408
  %34 = tail call i32 @xTaskResumeAll() #20, !dbg !8450
  ret i32 %33, !dbg !8451
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* nocapture noundef writeonly %0, %struct.xLIST* noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !8452 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !8456, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !8457, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i32 %2, metadata !8458, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i32 0, metadata !8463, metadata !DIExpression()), !dbg !8471
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !8472
  %5 = load i32, i32* %4, align 4, !dbg !8472
  %6 = icmp eq i32 %5, 0, !dbg !8473
  br i1 %6, label %72, label %7, !dbg !8474

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !8464, metadata !DIExpression()), !dbg !8475
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 1, !dbg !8476
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !8476
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !8476
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %10, align 4, !dbg !8476
  store %struct.xLIST_ITEM* %11, %struct.xLIST_ITEM** %8, align 4, !dbg !8476
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, !dbg !8477
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !8477
  %14 = icmp eq %struct.xLIST_ITEM* %11, %13, !dbg !8477
  br i1 %14, label %15, label %18, !dbg !8476

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !8479
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !8479
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %8, align 4, !dbg !8479
  br label %18, !dbg !8479

18:                                               ; preds = %15, %7
  %19 = phi %struct.xLIST_ITEM* [ %17, %15 ], [ %11, %7 ], !dbg !8476
  %20 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %19, i32 0, i32 3, !dbg !8476
  %21 = bitcast i8** %20 to %struct.tskTaskControlBlock**, !dbg !8476
  %22 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %21, align 4, !dbg !8476
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %22, metadata !8462, metadata !DIExpression()), !dbg !8471
  %23 = icmp eq i32 %2, 3
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, i32 1
  br label %25, !dbg !8481

25:                                               ; preds = %70, %18
  %26 = phi %struct.xLIST_ITEM* [ %19, %18 ], [ %71, %70 ], !dbg !8482
  %27 = phi i32 [ 0, %18 ], [ %68, %70 ], !dbg !8471
  call void @llvm.dbg.value(metadata i32 %27, metadata !8463, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !8468, metadata !DIExpression()), !dbg !8483
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %26, i32 0, i32 1, !dbg !8482
  %29 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %28, align 4, !dbg !8482
  store %struct.xLIST_ITEM* %29, %struct.xLIST_ITEM** %8, align 4, !dbg !8482
  %30 = icmp eq %struct.xLIST_ITEM* %29, %13, !dbg !8484
  br i1 %30, label %31, label %33, !dbg !8482

31:                                               ; preds = %25
  %32 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %24, align 4, !dbg !8486
  store %struct.xLIST_ITEM* %32, %struct.xLIST_ITEM** %8, align 4, !dbg !8486
  br label %33, !dbg !8486

33:                                               ; preds = %31, %25
  %34 = phi %struct.xLIST_ITEM* [ %32, %31 ], [ %29, %25 ], !dbg !8482
  %35 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %34, i32 0, i32 3, !dbg !8482
  %36 = load i8*, i8** %35, align 4, !dbg !8482
  %37 = bitcast i8* %36 to %struct.tskTaskControlBlock*, !dbg !8482
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %37, metadata !8459, metadata !DIExpression()), !dbg !8471
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 0, !dbg !8488
  store i8* %36, i8** %38, align 4, !dbg !8489
  %39 = getelementptr inbounds i8, i8* %36, i32 52, !dbg !8490
  %40 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 1, !dbg !8491
  store i8* %39, i8** %40, align 4, !dbg !8492
  %41 = getelementptr inbounds i8, i8* %36, i32 60, !dbg !8493
  %42 = bitcast i8* %41 to i32*, !dbg !8493
  %43 = load volatile i32, i32* %42, align 4, !dbg !8493
  %44 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 2, !dbg !8494
  store i32 %43, i32* %44, align 4, !dbg !8495
  %45 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 3, !dbg !8496
  store i32 %2, i32* %45, align 4, !dbg !8497
  %46 = getelementptr inbounds i8, i8* %36, i32 44, !dbg !8498
  %47 = bitcast i8* %46 to i32*, !dbg !8498
  %48 = load volatile i32, i32* %47, align 4, !dbg !8498
  %49 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 4, !dbg !8499
  store i32 %48, i32* %49, align 4, !dbg !8500
  br i1 %23, label %50, label %56, !dbg !8501

50:                                               ; preds = %33
  %51 = getelementptr inbounds i8, i8* %36, i32 40, !dbg !8503
  %52 = bitcast i8* %51 to i8**, !dbg !8503
  %53 = load volatile i8*, i8** %52, align 4, !dbg !8503
  %54 = icmp eq i8* %53, null, !dbg !8507
  br i1 %54, label %56, label %55, !dbg !8508

55:                                               ; preds = %50
  store i32 2, i32* %45, align 4, !dbg !8509
  br label %56, !dbg !8511

56:                                               ; preds = %50, %55, %33
  %57 = getelementptr inbounds i8, i8* %36, i32 68, !dbg !8512
  %58 = bitcast i8* %57 to i32*, !dbg !8512
  %59 = load volatile i32, i32* %58, align 4, !dbg !8512
  %60 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 5, !dbg !8514
  store i32 %59, i32* %60, align 4, !dbg !8515
  %61 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 6, !dbg !8516
  store i32 0, i32* %61, align 4, !dbg !8518
  %62 = getelementptr inbounds i8, i8* %36, i32 48, !dbg !8519
  %63 = bitcast i8* %62 to i32**, !dbg !8519
  %64 = load volatile i32*, i32** %63, align 4, !dbg !8519
  %65 = bitcast i32* %64 to i8*, !dbg !8521
  %66 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %65) #20, !dbg !8522
  %67 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 7, !dbg !8523
  store i16 %66, i16* %67, align 4, !dbg !8524
  %68 = add i32 %27, 1, !dbg !8525
  call void @llvm.dbg.value(metadata i32 %68, metadata !8463, metadata !DIExpression()), !dbg !8471
  %69 = icmp eq %struct.tskTaskControlBlock* %22, %37, !dbg !8526
  br i1 %69, label %72, label %70, !dbg !8527, !llvm.loop !8528

70:                                               ; preds = %56
  %71 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !8482
  br label %25, !dbg !8527

72:                                               ; preds = %56, %3
  %73 = phi i32 [ 0, %3 ], [ %68, %56 ], !dbg !8471
  call void @llvm.dbg.value(metadata i32 %73, metadata !8463, metadata !DIExpression()), !dbg !8471
  ret i32 %73, !dbg !8530
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* nocapture noundef readonly %0) unnamed_addr #13 !dbg !8531 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8535, metadata !DIExpression()), !dbg !8537
  call void @llvm.dbg.value(metadata i32 0, metadata !8536, metadata !DIExpression()), !dbg !8537
  %2 = load i8, i8* %0, align 1, !dbg !8538
  %3 = icmp eq i8 %2, -91, !dbg !8539
  br i1 %3, label %4, label %14, !dbg !8540

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8536, metadata !DIExpression()), !dbg !8537
  call void @llvm.dbg.value(metadata i8* %6, metadata !8535, metadata !DIExpression()), !dbg !8537
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8541
  call void @llvm.dbg.value(metadata i8* %7, metadata !8535, metadata !DIExpression()), !dbg !8537
  %8 = add i32 %5, 1, !dbg !8543
  call void @llvm.dbg.value(metadata i32 %8, metadata !8536, metadata !DIExpression()), !dbg !8537
  %9 = load i8, i8* %7, align 1, !dbg !8538
  %10 = icmp eq i8 %9, -91, !dbg !8539
  br i1 %10, label %4, label %11, !dbg !8540, !llvm.loop !8544

11:                                               ; preds = %4
  %12 = lshr i32 %8, 2, !dbg !8546
  %13 = trunc i32 %12 to i16, !dbg !8546
  br label %14, !dbg !8546

14:                                               ; preds = %11, %1
  %15 = phi i16 [ 0, %1 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8536, metadata !DIExpression()), !dbg !8537
  ret i16 %15, !dbg !8547
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventList(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8548 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8552, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.value(metadata i32 %1, metadata !8553, metadata !DIExpression()), !dbg !8555
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !8556
  br i1 %3, label %4, label %5, !dbg !8558

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 2262) #18, !dbg !8559
  br label %5, !dbg !8559

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8561
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !8562
  tail call void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #18, !dbg !8563
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8564
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !8566
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !8567
  %11 = icmp eq i32 %10, 0, !dbg !8568
  br i1 %11, label %12, label %20, !dbg !8569

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8570
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !8570
  %15 = load i32, i32* %14, align 4, !dbg !8570
  %16 = shl nuw i32 1, %15, !dbg !8570
  %17 = xor i32 %16, -1, !dbg !8570
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8570
  %19 = and i32 %18, %17, !dbg !8570
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !8570
  br label %20, !dbg !8572

20:                                               ; preds = %5, %12
  %21 = icmp eq i32 %1, -1, !dbg !8573
  br i1 %21, label %22, label %25, !dbg !8576

22:                                               ; preds = %20
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8577
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 1, !dbg !8579
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %24) #18, !dbg !8580
  br label %28, !dbg !8581

25:                                               ; preds = %20
  %26 = load volatile i32, i32* @xTickCount, align 4, !dbg !8582
  %27 = add i32 %26, %1, !dbg !8584
  call void @llvm.dbg.value(metadata i32 %27, metadata !8554, metadata !DIExpression()), !dbg !8555
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %27) #20, !dbg !8585
  br label %28

28:                                               ; preds = %25, %22
  ret void, !dbg !8586
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !8587 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8591, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata i32 %1, metadata !8592, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata i32 %2, metadata !8593, metadata !DIExpression()), !dbg !8595
  %4 = icmp eq %struct.xLIST* %0, null, !dbg !8596
  br i1 %4, label %5, label %6, !dbg !8598

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 2321) #18, !dbg !8599
  br label %6, !dbg !8599

6:                                                ; preds = %5, %3
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8601
  %8 = icmp eq i32 %7, 0, !dbg !8601
  br i1 %8, label %9, label %10, !dbg !8603

9:                                                ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 2325) #18, !dbg !8604
  br label %10, !dbg !8604

10:                                               ; preds = %9, %6
  %11 = or i32 %1, -2147483648, !dbg !8606
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8606
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 2, i32 0, !dbg !8606
  store i32 %11, i32* %13, align 4, !dbg !8606
  %14 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8607
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, !dbg !8608
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %15) #18, !dbg !8609
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8610
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 1, !dbg !8612
  %18 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %17) #18, !dbg !8613
  %19 = icmp eq i32 %18, 0, !dbg !8614
  br i1 %19, label %20, label %28, !dbg !8615

20:                                               ; preds = %10
  %21 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8616
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 3, !dbg !8616
  %23 = load i32, i32* %22, align 4, !dbg !8616
  %24 = shl nuw i32 1, %23, !dbg !8616
  %25 = xor i32 %24, -1, !dbg !8616
  %26 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8616
  %27 = and i32 %26, %25, !dbg !8616
  store volatile i32 %27, i32* @uxTopReadyPriority, align 4, !dbg !8616
  br label %28, !dbg !8618

28:                                               ; preds = %10, %20
  %29 = icmp eq i32 %2, -1, !dbg !8619
  br i1 %29, label %30, label %33, !dbg !8622

30:                                               ; preds = %28
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8623
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 1, !dbg !8625
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %32) #18, !dbg !8626
  br label %36, !dbg !8627

33:                                               ; preds = %28
  %34 = load volatile i32, i32* @xTickCount, align 4, !dbg !8628
  %35 = add i32 %34, %2, !dbg !8630
  call void @llvm.dbg.value(metadata i32 %35, metadata !8594, metadata !DIExpression()), !dbg !8595
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %35) #20, !dbg !8631
  br label %36

36:                                               ; preds = %33, %30
  ret void, !dbg !8632
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8633 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8635, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i32 %1, metadata !8636, metadata !DIExpression()), !dbg !8638
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !8639
  br i1 %3, label %4, label %5, !dbg !8641

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 2389) #18, !dbg !8642
  br label %5, !dbg !8642

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8644
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !8645
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #18, !dbg !8646
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8647
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !8649
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !8650
  %11 = icmp eq i32 %10, 0, !dbg !8651
  br i1 %11, label %12, label %20, !dbg !8652

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8653
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !8653
  %15 = load i32, i32* %14, align 4, !dbg !8653
  %16 = shl nuw i32 1, %15, !dbg !8653
  %17 = xor i32 %16, -1, !dbg !8653
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8653
  %19 = and i32 %18, %17, !dbg !8653
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !8653
  br label %20, !dbg !8655

20:                                               ; preds = %5, %12
  %21 = load volatile i32, i32* @xTickCount, align 4, !dbg !8656
  %22 = add i32 %21, %1, !dbg !8657
  call void @llvm.dbg.value(metadata i32 %22, metadata !8637, metadata !DIExpression()), !dbg !8638
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %22) #20, !dbg !8658
  ret void, !dbg !8659
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromEventList(%struct.xLIST* nocapture noundef readonly %0) local_unnamed_addr #0 !dbg !8660 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !8667, metadata !DIExpression()), !dbg !8670
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !8671
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %2, align 4, !dbg !8671
  %4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 3, !dbg !8671
  %5 = bitcast i8** %4 to %struct.tskTaskControlBlock**, !dbg !8671
  %6 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %5, align 4, !dbg !8671
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !8668, metadata !DIExpression()), !dbg !8670
  %7 = icmp eq %struct.tskTaskControlBlock* %6, null, !dbg !8672
  br i1 %7, label %8, label %9, !dbg !8674

8:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 2447) #18, !dbg !8675
  br label %9, !dbg !8675

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !8677
  %11 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %10) #18, !dbg !8678
  %12 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8679
  %13 = icmp eq i32 %12, 0, !dbg !8681
  br i1 %13, label %14, label %23, !dbg !8682

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !8683
  %16 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %15) #18, !dbg !8685
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !8686
  %18 = load i32, i32* %17, align 4, !dbg !8686
  %19 = shl nuw i32 1, %18, !dbg !8686
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8686
  %21 = or i32 %20, %19, !dbg !8686
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !8686
  %22 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %18, !dbg !8686
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %22, %struct.xLIST_ITEM* noundef nonnull %15) #18, !dbg !8686
  br label %24, !dbg !8687

23:                                               ; preds = %9
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %10) #18, !dbg !8688
  br label %24

24:                                               ; preds = %23, %14
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !8690
  %26 = load i32, i32* %25, align 4, !dbg !8690
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8692
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 3, !dbg !8693
  %29 = load i32, i32* %28, align 4, !dbg !8693
  %30 = icmp ugt i32 %26, %29, !dbg !8694
  br i1 %30, label %31, label %32, !dbg !8695

31:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 1, metadata !8669, metadata !DIExpression()), !dbg !8670
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8696
  br label %32, !dbg !8698

32:                                               ; preds = %24, %31
  %33 = phi i32 [ 1, %31 ], [ 0, %24 ], !dbg !8699
  call void @llvm.dbg.value(metadata i32 %33, metadata !8669, metadata !DIExpression()), !dbg !8670
  ret i32 %33, !dbg !8700
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !8701 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !8705, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 %1, metadata !8706, metadata !DIExpression()), !dbg !8709
  %3 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8710
  %4 = icmp eq i32 %3, 0, !dbg !8710
  br i1 %4, label %5, label %6, !dbg !8712

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 2503) #18, !dbg !8713
  br label %6, !dbg !8713

6:                                                ; preds = %5, %2
  %7 = or i32 %1, -2147483648, !dbg !8715
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 0, !dbg !8715
  store i32 %7, i32* %8, align 4, !dbg !8715
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 3, !dbg !8716
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !8716
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !8716
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !8707, metadata !DIExpression()), !dbg !8709
  %12 = icmp eq %struct.tskTaskControlBlock* %11, null, !dbg !8717
  br i1 %12, label %13, label %14, !dbg !8719

13:                                               ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 2511) #18, !dbg !8720
  br label %14, !dbg !8720

14:                                               ; preds = %13, %6
  %15 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %0) #18, !dbg !8722
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !8723
  %17 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %16) #18, !dbg !8724
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 3, !dbg !8725
  %19 = load i32, i32* %18, align 4, !dbg !8725
  %20 = shl nuw i32 1, %19, !dbg !8725
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8725
  %22 = or i32 %21, %20, !dbg !8725
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !8725
  %23 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %19, !dbg !8725
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %23, %struct.xLIST_ITEM* noundef nonnull %16) #18, !dbg !8725
  %24 = load i32, i32* %18, align 4, !dbg !8726
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8728
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !8729
  %27 = load i32, i32* %26, align 4, !dbg !8729
  %28 = icmp ugt i32 %24, %27, !dbg !8730
  br i1 %28, label %29, label %30, !dbg !8731

29:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 1, metadata !8708, metadata !DIExpression()), !dbg !8709
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8732
  br label %30, !dbg !8734

30:                                               ; preds = %14, %29
  %31 = phi i32 [ 1, %29 ], [ 0, %14 ], !dbg !8735
  call void @llvm.dbg.value(metadata i32 %31, metadata !8708, metadata !DIExpression()), !dbg !8709
  ret i32 %31, !dbg !8736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef writeonly %0) local_unnamed_addr #0 !dbg !8737 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !8748, metadata !DIExpression()), !dbg !8749
  %2 = icmp eq %struct.hal_cache_region_config_t* %0, null, !dbg !8750
  br i1 %2, label %3, label %4, !dbg !8752

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 2543) #18, !dbg !8753
  br label %4, !dbg !8753

4:                                                ; preds = %3, %1
  %5 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !8755
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !8756
  store i32 %5, i32* %6, align 4, !dbg !8757
  %7 = load volatile i32, i32* @xTickCount, align 4, !dbg !8758
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 1, !dbg !8759
  store i32 %7, i32* %8, align 4, !dbg !8760
  ret void, !dbg !8761
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskCheckForTimeOut(%struct.hal_cache_region_config_t* noundef %0, i32* noundef %1) local_unnamed_addr #0 !dbg !8762 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !8766, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i32* %1, metadata !8767, metadata !DIExpression()), !dbg !8771
  %3 = icmp eq %struct.hal_cache_region_config_t* %0, null, !dbg !8772
  br i1 %3, label %4, label %5, !dbg !8774

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 2553) #18, !dbg !8775
  br label %5, !dbg !8775

5:                                                ; preds = %4, %2
  %6 = icmp eq i32* %1, null, !dbg !8777
  br i1 %6, label %7, label %8, !dbg !8779

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20.149, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 2554) #18, !dbg !8780
  br label %8, !dbg !8780

8:                                                ; preds = %7, %5
  tail call void @vPortEnterCritical() #18, !dbg !8782
  %9 = load volatile i32, i32* @xTickCount, align 4, !dbg !8783
  call void @llvm.dbg.value(metadata i32 %9, metadata !8769, metadata !DIExpression()), !dbg !8784
  %10 = load i32, i32* %1, align 4, !dbg !8785
  %11 = icmp eq i32 %10, -1, !dbg !8787
  br i1 %11, label %26, label %12, !dbg !8788

12:                                               ; preds = %8
  %13 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !8789
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !8791
  %15 = load i32, i32* %14, align 4, !dbg !8791
  %16 = icmp eq i32 %13, %15, !dbg !8792
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4, !dbg !8793
  %19 = icmp ult i32 %9, %18
  %20 = select i1 %16, i1 true, i1 %19, !dbg !8794
  br i1 %20, label %21, label %26, !dbg !8794

21:                                               ; preds = %12
  %22 = sub i32 %9, %18, !dbg !8795
  %23 = icmp ugt i32 %10, %22, !dbg !8797
  br i1 %23, label %24, label %26, !dbg !8798

24:                                               ; preds = %21
  %25 = sub i32 %10, %22, !dbg !8799
  store i32 %25, i32* %1, align 4, !dbg !8799
  tail call void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef nonnull %0) #20, !dbg !8801
  call void @llvm.dbg.value(metadata i32 0, metadata !8768, metadata !DIExpression()), !dbg !8771
  br label %26, !dbg !8802

26:                                               ; preds = %12, %21, %8, %24
  %27 = phi i32 [ 0, %24 ], [ 0, %8 ], [ 1, %21 ], [ 1, %12 ], !dbg !8803
  call void @llvm.dbg.value(metadata i32 %27, metadata !8768, metadata !DIExpression()), !dbg !8771
  tail call void @vPortExitCritical() #18, !dbg !8804
  ret i32 %27, !dbg !8805
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskMissedYield() local_unnamed_addr #5 !dbg !8806 {
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !8807
  ret void, !dbg !8808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxTaskGetTaskNumber(i8* noundef readonly %0) local_unnamed_addr #9 !dbg !8809 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8811, metadata !DIExpression()), !dbg !8814
  %2 = icmp eq i8* %0, null, !dbg !8815
  br i1 %2, label %7, label %3, !dbg !8817

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8813, metadata !DIExpression()), !dbg !8814
  %4 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !8818
  %5 = bitcast i8* %4 to i32*, !dbg !8818
  %6 = load i32, i32* %5, align 4, !dbg !8818
  call void @llvm.dbg.value(metadata i32 %6, metadata !8812, metadata !DIExpression()), !dbg !8814
  br label %7, !dbg !8820

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 0, %1 ], !dbg !8821
  call void @llvm.dbg.value(metadata i32 %8, metadata !8812, metadata !DIExpression()), !dbg !8814
  ret i32 %8, !dbg !8822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vTaskSetTaskNumber(i8* noundef writeonly %0, i32 noundef %1) local_unnamed_addr #4 !dbg !8823 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8827, metadata !DIExpression()), !dbg !8830
  call void @llvm.dbg.value(metadata i32 %1, metadata !8828, metadata !DIExpression()), !dbg !8830
  %3 = icmp eq i8* %0, null, !dbg !8831
  br i1 %3, label %7, label %4, !dbg !8833

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %0, metadata !8829, metadata !DIExpression()), !dbg !8830
  %5 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !8834
  %6 = bitcast i8* %5 to i32*, !dbg !8834
  store i32 %1, i32* %6, align 4, !dbg !8836
  br label %7, !dbg !8837

7:                                                ; preds = %4, %2
  ret void, !dbg !8838
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @uxTaskGetStackHighWaterMark(i8* noundef readonly %0) local_unnamed_addr #5 !dbg !8839 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8841, metadata !DIExpression()), !dbg !8845
  %2 = icmp eq i8* %0, null, !dbg !8846
  br i1 %2, label %3, label %5, !dbg !8846

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8846
  br label %7, !dbg !8846

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !8846
  br label %7, !dbg !8846

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !8846
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !8842, metadata !DIExpression()), !dbg !8845
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !8847
  %10 = bitcast i32** %9 to i8**, !dbg !8847
  %11 = load i8*, i8** %10, align 4, !dbg !8847
  call void @llvm.dbg.value(metadata i8* %11, metadata !8843, metadata !DIExpression()), !dbg !8845
  %12 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %11) #20, !dbg !8849
  %13 = zext i16 %12 to i32, !dbg !8850
  call void @llvm.dbg.value(metadata i32 %13, metadata !8844, metadata !DIExpression()), !dbg !8845
  ret i32 %13, !dbg !8851
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @xTaskGetCurrentTaskHandle() local_unnamed_addr #8 !dbg !8852 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8857
  %2 = bitcast %struct.tskTaskControlBlock* %1 to i8*, !dbg !8857
  call void @llvm.dbg.value(metadata i8* %2, metadata !8856, metadata !DIExpression()), !dbg !8858
  ret i8* %2, !dbg !8859
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetSchedulerState() local_unnamed_addr #8 !dbg !8860 {
  %1 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !8863
  %2 = icmp eq i32 %1, 0, !dbg !8865
  br i1 %2, label %7, label %3, !dbg !8866

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !8867
  %5 = icmp eq i32 %4, 0, !dbg !8870
  %6 = select i1 %5, i32 2, i32 0
  br label %7

7:                                                ; preds = %3, %0
  %8 = phi i32 [ 1, %0 ], [ %6, %3 ], !dbg !8871
  call void @llvm.dbg.value(metadata i32 %8, metadata !8862, metadata !DIExpression()), !dbg !8872
  ret i32 %8, !dbg !8873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPriorityInherit(i8* noundef %0) local_unnamed_addr #0 !dbg !8874 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8878, metadata !DIExpression()), !dbg !8880
  call void @llvm.dbg.value(metadata i8* %0, metadata !8879, metadata !DIExpression()), !dbg !8880
  %2 = icmp eq i8* %0, null, !dbg !8881
  br i1 %2, label %55, label %3, !dbg !8883

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !8884
  %5 = bitcast i8* %4 to i32*, !dbg !8884
  %6 = load i32, i32* %5, align 4, !dbg !8884
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8887
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %7, i32 0, i32 3, !dbg !8888
  %9 = load i32, i32* %8, align 4, !dbg !8888
  %10 = icmp ult i32 %6, %9, !dbg !8889
  br i1 %10, label %11, label %55, !dbg !8890

11:                                               ; preds = %3
  %12 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8891
  %13 = bitcast i8* %12 to i32*, !dbg !8891
  %14 = load i32, i32* %13, align 4, !dbg !8891
  %15 = icmp sgt i32 %14, -1, !dbg !8894
  br i1 %15, label %16, label %21, !dbg !8895

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8896
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !8896
  %19 = load i32, i32* %18, align 4, !dbg !8896
  %20 = sub i32 20, %19, !dbg !8896
  store i32 %20, i32* %13, align 4, !dbg !8896
  br label %21, !dbg !8898

21:                                               ; preds = %11, %16
  %22 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8899
  %23 = bitcast i8* %22 to %struct.xLIST_ITEM*, !dbg !8899
  %24 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8899
  %25 = bitcast i8* %24 to i8**, !dbg !8899
  %26 = load i8*, i8** %25, align 4, !dbg !8899
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %6, !dbg !8899
  %28 = bitcast %struct.xLIST* %27 to i8*, !dbg !8899
  %29 = icmp eq i8* %26, %28, !dbg !8899
  br i1 %29, label %30, label %51, !dbg !8901

30:                                               ; preds = %21
  %31 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %23) #18, !dbg !8902
  %32 = icmp eq i32 %31, 0, !dbg !8905
  br i1 %32, label %33, label %43, !dbg !8906

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !8907
  %35 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %34, i32 0, !dbg !8907
  %36 = load i32, i32* %35, align 4, !dbg !8907
  %37 = icmp eq i32 %36, 0, !dbg !8907
  br i1 %37, label %38, label %43, !dbg !8911

38:                                               ; preds = %33
  %39 = shl nuw i32 1, %34, !dbg !8912
  %40 = xor i32 %39, -1, !dbg !8912
  %41 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8912
  %42 = and i32 %41, %40, !dbg !8912
  store volatile i32 %42, i32* @uxTopReadyPriority, align 4, !dbg !8912
  br label %43, !dbg !8912

43:                                               ; preds = %30, %33, %38
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8914
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !8915
  %46 = load i32, i32* %45, align 4, !dbg !8915
  store i32 %46, i32* %5, align 4, !dbg !8916
  %47 = shl nuw i32 1, %46, !dbg !8917
  %48 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8917
  %49 = or i32 %48, %47, !dbg !8917
  store volatile i32 %49, i32* @uxTopReadyPriority, align 4, !dbg !8917
  %50 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %46, !dbg !8917
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %50, %struct.xLIST_ITEM* noundef nonnull %23) #18, !dbg !8917
  br label %55, !dbg !8918

51:                                               ; preds = %21
  %52 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !8919
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %52, i32 0, i32 3, !dbg !8921
  %54 = load i32, i32* %53, align 4, !dbg !8921
  store i32 %54, i32* %5, align 4, !dbg !8922
  br label %55

55:                                               ; preds = %1, %51, %43, %3
  ret void, !dbg !8923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskPriorityDisinherit(i8* noundef %0) local_unnamed_addr #0 !dbg !8924 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8926, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i8* %0, metadata !8927, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8928, metadata !DIExpression()), !dbg !8929
  %2 = icmp eq i8* %0, null, !dbg !8930
  br i1 %2, label %46, label %3, !dbg !8932

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !8933
  %5 = bitcast i8* %4 to i32*, !dbg !8933
  %6 = load i32, i32* %5, align 4, !dbg !8933
  %7 = icmp eq i32 %6, 0, !dbg !8933
  br i1 %7, label %8, label %10, !dbg !8936

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 3409) #18, !dbg !8937
  %9 = load i32, i32* %5, align 4, !dbg !8939
  br label %10, !dbg !8937

10:                                               ; preds = %8, %3
  %11 = phi i32 [ %9, %8 ], [ %6, %3 ], !dbg !8939
  %12 = add i32 %11, -1, !dbg !8939
  store i32 %12, i32* %5, align 4, !dbg !8939
  %13 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !8940
  %14 = bitcast i8* %13 to i32*, !dbg !8940
  %15 = load i32, i32* %14, align 4, !dbg !8940
  %16 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !8942
  %17 = bitcast i8* %16 to i32*, !dbg !8942
  %18 = load i32, i32* %17, align 4, !dbg !8942
  %19 = icmp ne i32 %15, %18, !dbg !8943
  %20 = icmp eq i32 %12, 0
  %21 = select i1 %19, i1 %20, i1 false, !dbg !8944
  br i1 %21, label %22, label %46, !dbg !8944

22:                                               ; preds = %10
  %23 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !8945
  %24 = bitcast i8* %23 to %struct.xLIST_ITEM*, !dbg !8945
  %25 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %24) #18, !dbg !8950
  %26 = icmp eq i32 %25, 0, !dbg !8951
  br i1 %26, label %27, label %37, !dbg !8952

27:                                               ; preds = %22
  %28 = load i32, i32* %14, align 4, !dbg !8953
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %28, i32 0, !dbg !8953
  %30 = load i32, i32* %29, align 4, !dbg !8953
  %31 = icmp eq i32 %30, 0, !dbg !8953
  br i1 %31, label %32, label %37, !dbg !8957

32:                                               ; preds = %27
  %33 = shl nuw i32 1, %28, !dbg !8958
  %34 = xor i32 %33, -1, !dbg !8958
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8958
  %36 = and i32 %35, %34, !dbg !8958
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !8958
  br label %37, !dbg !8958

37:                                               ; preds = %22, %27, %32
  %38 = load i32, i32* %17, align 4, !dbg !8960
  store i32 %38, i32* %14, align 4, !dbg !8961
  %39 = sub i32 20, %38, !dbg !8962
  %40 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8962
  %41 = bitcast i8* %40 to i32*, !dbg !8962
  store i32 %39, i32* %41, align 4, !dbg !8962
  %42 = shl nuw i32 1, %38, !dbg !8963
  %43 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !8963
  %44 = or i32 %43, %42, !dbg !8963
  store volatile i32 %44, i32* @uxTopReadyPriority, align 4, !dbg !8963
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %38, !dbg !8963
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %45, %struct.xLIST_ITEM* noundef nonnull %24) #18, !dbg !8963
  call void @llvm.dbg.value(metadata i32 1, metadata !8928, metadata !DIExpression()), !dbg !8929
  br label %46, !dbg !8964

46:                                               ; preds = %1, %37, %10
  %47 = phi i32 [ 1, %37 ], [ 0, %10 ], [ 0, %1 ], !dbg !8929
  call void @llvm.dbg.value(metadata i32 %47, metadata !8928, metadata !DIExpression()), !dbg !8929
  ret i32 %47, !dbg !8965
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskList(i8* noundef %0) local_unnamed_addr #0 !dbg !8966 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8970, metadata !DIExpression()), !dbg !8975
  %4 = bitcast i32* %2 to i8*, !dbg !8976
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !8976
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8972, metadata !DIExpression()), !dbg !8977
  %5 = bitcast i32* %3 to i8*, !dbg !8976
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !8976
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8973, metadata !DIExpression()), !dbg !8978
  store i8 0, i8* %0, align 1, !dbg !8979
  %6 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8980
  store volatile i32 %6, i32* %2, align 4, !dbg !8981
  %7 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !8982
  %8 = shl i32 %7, 5, !dbg !8983
  %9 = tail call i8* @pvPortMalloc(i32 noundef %8) #18, !dbg !8984
  %10 = bitcast i8* %9 to %struct.xTASK_STATUS*, !dbg !8984
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %10, metadata !8971, metadata !DIExpression()), !dbg !8975
  %11 = icmp eq i8* %9, null, !dbg !8985
  br i1 %11, label %53, label %12, !dbg !8987

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %2, align 4, !dbg !8988
  %14 = tail call i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* noundef nonnull %10, i32 noundef %13, i32* noundef null) #20, !dbg !8990
  store volatile i32 %14, i32* %2, align 4, !dbg !8991
  store volatile i32 0, i32* %3, align 4, !dbg !8992
  call void @llvm.dbg.value(metadata i8* %0, metadata !8970, metadata !DIExpression()), !dbg !8975
  %15 = load volatile i32, i32* %3, align 4, !dbg !8994
  %16 = load volatile i32, i32* %2, align 4, !dbg !8996
  %17 = icmp ult i32 %15, %16, !dbg !8997
  br i1 %17, label %18, label %52, !dbg !8998

18:                                               ; preds = %12, %28
  %19 = phi i8* [ %46, %28 ], [ %0, %12 ]
  call void @llvm.dbg.value(metadata i8* %19, metadata !8970, metadata !DIExpression()), !dbg !8975
  %20 = load volatile i32, i32* %3, align 4, !dbg !8999
  %21 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %20, i32 3, !dbg !9001
  %22 = load i32, i32* %21, align 4, !dbg !9001
  %23 = add i32 %22, -1, !dbg !9002
  %24 = icmp ult i32 %23, 4, !dbg !9002
  br i1 %24, label %25, label %28, !dbg !9002

25:                                               ; preds = %18
  %26 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.vTaskList, i32 0, i32 %23, !dbg !9002
  %27 = load i32, i32* %26, align 4, !dbg !9002
  br label %28, !dbg !9002

28:                                               ; preds = %18, %25
  %29 = phi i32 [ %27, %25 ], [ 0, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !8974, metadata !DIExpression()), !dbg !8975
  %30 = load volatile i32, i32* %3, align 4, !dbg !9003
  %31 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %30, i32 1, !dbg !9004
  %32 = load i8*, i8** %31, align 4, !dbg !9004
  %33 = tail call fastcc i8* @prvWriteNameToBuffer(i8* noundef %19, i8* noundef %32) #20, !dbg !9005
  call void @llvm.dbg.value(metadata i8* %33, metadata !8970, metadata !DIExpression()), !dbg !8975
  %34 = load volatile i32, i32* %3, align 4, !dbg !9006
  %35 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %34, i32 4, !dbg !9007
  %36 = load i32, i32* %35, align 4, !dbg !9007
  %37 = load volatile i32, i32* %3, align 4, !dbg !9008
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %37, i32 7, !dbg !9009
  %39 = load i16, i16* %38, align 4, !dbg !9009
  %40 = zext i16 %39 to i32, !dbg !9010
  %41 = load volatile i32, i32* %3, align 4, !dbg !9011
  %42 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %41, i32 2, !dbg !9012
  %43 = load i32, i32* %42, align 4, !dbg !9012
  %44 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %33, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i32 noundef %29, i32 noundef %36, i32 noundef %40, i32 noundef %43) #18, !dbg !9013
  %45 = tail call i32 @strlen(i8* noundef %33) #18, !dbg !9014
  %46 = getelementptr inbounds i8, i8* %33, i32 %45, !dbg !9015
  call void @llvm.dbg.value(metadata i8* %46, metadata !8970, metadata !DIExpression()), !dbg !8975
  %47 = load volatile i32, i32* %3, align 4, !dbg !9016
  %48 = add i32 %47, 1, !dbg !9016
  store volatile i32 %48, i32* %3, align 4, !dbg !9016
  %49 = load volatile i32, i32* %3, align 4, !dbg !8994
  %50 = load volatile i32, i32* %2, align 4, !dbg !8996
  %51 = icmp ult i32 %49, %50, !dbg !8997
  br i1 %51, label %18, label %52, !dbg !8998, !llvm.loop !9017

52:                                               ; preds = %28, %12
  tail call void @vPortFree(i8* noundef nonnull %9) #18, !dbg !9019
  br label %53, !dbg !9020

53:                                               ; preds = %1, %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !9021
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !9021
  ret void, !dbg !9021
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prvWriteNameToBuffer(i8* noundef %0, i8* noundef %1) unnamed_addr #0 !dbg !9022 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9026, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.value(metadata i8* %1, metadata !9027, metadata !DIExpression()), !dbg !9029
  %3 = tail call i8* @strcpy(i8* noundef %0, i8* noundef %1) #18, !dbg !9030
  %4 = tail call i32 @strlen(i8* noundef %0) #18, !dbg !9031
  call void @llvm.dbg.value(metadata i32 %4, metadata !9028, metadata !DIExpression()), !dbg !9029
  %5 = icmp slt i32 %4, 5, !dbg !9033
  br i1 %5, label %6, label %11, !dbg !9035

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %9, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9028, metadata !DIExpression()), !dbg !9029
  %8 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !9036
  store i8 32, i8* %8, align 1, !dbg !9038
  %9 = add i32 %7, 1, !dbg !9039
  call void @llvm.dbg.value(metadata i32 %9, metadata !9028, metadata !DIExpression()), !dbg !9029
  %10 = icmp eq i32 %9, 5, !dbg !9033
  br i1 %10, label %11, label %6, !dbg !9035, !llvm.loop !9040

11:                                               ; preds = %6, %2
  %12 = phi i32 [ %4, %2 ], [ 5, %6 ], !dbg !9042
  %13 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9043
  store i8 0, i8* %13, align 1, !dbg !9044
  ret i8* %13, !dbg !9045
}

; Function Attrs: optsize
declare dso_local i32 @sprintf(i8* noundef, i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i32 @strlen(i8* noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i8* @strcpy(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskResetEventItemValue() local_unnamed_addr #8 !dbg !9046 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9049
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 2, i32 0, !dbg !9049
  %3 = load i32, i32* %2, align 4, !dbg !9049
  call void @llvm.dbg.value(metadata i32 %3, metadata !9048, metadata !DIExpression()), !dbg !9050
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9051
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !9051
  %6 = load i32, i32* %5, align 4, !dbg !9051
  %7 = sub i32 20, %6, !dbg !9051
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9051
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 0, !dbg !9051
  store i32 %7, i32* %9, align 4, !dbg !9051
  ret i32 %3, !dbg !9052
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @pvTaskIncrementMutexHeldCount() local_unnamed_addr #8 !dbg !9053 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9055
  %2 = icmp eq %struct.tskTaskControlBlock* %1, null, !dbg !9057
  br i1 %2, label %8, label %3, !dbg !9058

3:                                                ; preds = %0
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9059
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 9, !dbg !9061
  %6 = load i32, i32* %5, align 4, !dbg !9062
  %7 = add i32 %6, 1, !dbg !9062
  store i32 %7, i32* %5, align 4, !dbg !9062
  br label %8, !dbg !9063

8:                                                ; preds = %3, %0
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9064
  %10 = bitcast %struct.tskTaskControlBlock* %9 to i8*, !dbg !9064
  ret i8* %10, !dbg !9065
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ulTaskNotifyTake(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9070, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 %1, metadata !9071, metadata !DIExpression()), !dbg !9074
  tail call void @vPortEnterCritical() #18, !dbg !9075
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9076
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 10, !dbg !9079
  %5 = load volatile i32, i32* %4, align 4, !dbg !9079
  %6 = icmp eq i32 %5, 0, !dbg !9080
  br i1 %6, label %7, label %33, !dbg !9081

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9082
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 11, !dbg !9084
  store volatile i32 1, i32* %9, align 4, !dbg !9085
  %10 = icmp eq i32 %1, 0, !dbg !9086
  br i1 %10, label %33, label %11, !dbg !9088

11:                                               ; preds = %7
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9089
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !9092
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !9093
  %15 = icmp eq i32 %14, 0, !dbg !9094
  br i1 %15, label %16, label %24, !dbg !9095

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9096
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !9096
  %19 = load i32, i32* %18, align 4, !dbg !9096
  %20 = shl nuw i32 1, %19, !dbg !9096
  %21 = xor i32 %20, -1, !dbg !9096
  %22 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9096
  %23 = and i32 %22, %21, !dbg !9096
  store volatile i32 %23, i32* @uxTopReadyPriority, align 4, !dbg !9096
  br label %24, !dbg !9098

24:                                               ; preds = %11, %16
  %25 = icmp eq i32 %1, -1, !dbg !9099
  br i1 %25, label %26, label %29, !dbg !9102

26:                                               ; preds = %24
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9103
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 1, !dbg !9105
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !9106
  br label %32, !dbg !9107

29:                                               ; preds = %24
  %30 = load volatile i32, i32* @xTickCount, align 4, !dbg !9108
  %31 = add i32 %30, %1, !dbg !9110
  call void @llvm.dbg.value(metadata i32 %31, metadata !9072, metadata !DIExpression()), !dbg !9074
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %31) #20, !dbg !9111
  br label %32

32:                                               ; preds = %29, %26
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9112
  tail call void asm sideeffect "dsb", ""() #17, !dbg !9112, !srcloc !9114
  tail call void asm sideeffect "isb", ""() #17, !dbg !9112, !srcloc !9115
  br label %33, !dbg !9116

33:                                               ; preds = %2, %32, %7
  tail call void @vPortExitCritical() #18, !dbg !9117
  tail call void @vPortEnterCritical() #18, !dbg !9118
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9119
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 10, !dbg !9121
  %36 = load volatile i32, i32* %35, align 4, !dbg !9121
  call void @llvm.dbg.value(metadata i32 %36, metadata !9073, metadata !DIExpression()), !dbg !9074
  %37 = icmp eq i32 %36, 0, !dbg !9122
  br i1 %37, label %47, label %38, !dbg !9124

38:                                               ; preds = %33
  %39 = icmp eq i32 %0, 0, !dbg !9125
  %40 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9128
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %40, i32 0, i32 10, !dbg !9128
  br i1 %39, label %42, label %45, !dbg !9129

42:                                               ; preds = %38
  %43 = load volatile i32, i32* %41, align 4, !dbg !9130
  %44 = add i32 %43, -1, !dbg !9130
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i32 [ %44, %42 ], [ 0, %38 ]
  store volatile i32 %46, i32* %41, align 4, !dbg !9128
  br label %47, !dbg !9132

47:                                               ; preds = %45, %33
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9132
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 11, !dbg !9133
  store volatile i32 0, i32* %49, align 4, !dbg !9134
  tail call void @vPortExitCritical() #18, !dbg !9135
  ret i32 %36, !dbg !9136
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyWait(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9141, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32 %1, metadata !9142, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32* %2, metadata !9143, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32 %3, metadata !9144, metadata !DIExpression()), !dbg !9147
  tail call void @vPortEnterCritical() #18, !dbg !9148
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9149
  %6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %5, i32 0, i32 11, !dbg !9152
  %7 = load volatile i32, i32* %6, align 4, !dbg !9152
  %8 = icmp eq i32 %7, 2, !dbg !9153
  br i1 %8, label %40, label %9, !dbg !9154

9:                                                ; preds = %4
  %10 = xor i32 %0, -1, !dbg !9155
  %11 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9157
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 10, !dbg !9158
  %13 = load volatile i32, i32* %12, align 4, !dbg !9159
  %14 = and i32 %13, %10, !dbg !9159
  store volatile i32 %14, i32* %12, align 4, !dbg !9159
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9160
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 11, !dbg !9161
  store volatile i32 1, i32* %16, align 4, !dbg !9162
  %17 = icmp eq i32 %3, 0, !dbg !9163
  br i1 %17, label %40, label %18, !dbg !9165

18:                                               ; preds = %9
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9166
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !9169
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #18, !dbg !9170
  %22 = icmp eq i32 %21, 0, !dbg !9171
  br i1 %22, label %23, label %31, !dbg !9172

23:                                               ; preds = %18
  %24 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9173
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %24, i32 0, i32 3, !dbg !9173
  %26 = load i32, i32* %25, align 4, !dbg !9173
  %27 = shl nuw i32 1, %26, !dbg !9173
  %28 = xor i32 %27, -1, !dbg !9173
  %29 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9173
  %30 = and i32 %29, %28, !dbg !9173
  store volatile i32 %30, i32* @uxTopReadyPriority, align 4, !dbg !9173
  br label %31, !dbg !9175

31:                                               ; preds = %18, %23
  %32 = icmp eq i32 %3, -1, !dbg !9176
  br i1 %32, label %33, label %36, !dbg !9179

33:                                               ; preds = %31
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9180
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !9182
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %35) #18, !dbg !9183
  br label %39, !dbg !9184

36:                                               ; preds = %31
  %37 = load volatile i32, i32* @xTickCount, align 4, !dbg !9185
  %38 = add i32 %37, %3, !dbg !9187
  call void @llvm.dbg.value(metadata i32 %38, metadata !9145, metadata !DIExpression()), !dbg !9147
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %38) #20, !dbg !9188
  br label %39

39:                                               ; preds = %36, %33
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9189
  tail call void asm sideeffect "dsb", ""() #17, !dbg !9189, !srcloc !9191
  tail call void asm sideeffect "isb", ""() #17, !dbg !9189, !srcloc !9192
  br label %40, !dbg !9193

40:                                               ; preds = %4, %39, %9
  tail call void @vPortExitCritical() #18, !dbg !9194
  tail call void @vPortEnterCritical() #18, !dbg !9195
  %41 = icmp eq i32* %2, null, !dbg !9196
  br i1 %41, label %46, label %42, !dbg !9199

42:                                               ; preds = %40
  %43 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9200
  %44 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %43, i32 0, i32 10, !dbg !9202
  %45 = load volatile i32, i32* %44, align 4, !dbg !9202
  store i32 %45, i32* %2, align 4, !dbg !9203
  br label %46, !dbg !9204

46:                                               ; preds = %42, %40
  %47 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9205
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %47, i32 0, i32 11, !dbg !9207
  %49 = load volatile i32, i32* %48, align 4, !dbg !9207
  %50 = icmp eq i32 %49, 1, !dbg !9208
  br i1 %50, label %57, label %51, !dbg !9209

51:                                               ; preds = %46
  %52 = xor i32 %1, -1, !dbg !9210
  %53 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9212
  %54 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %53, i32 0, i32 10, !dbg !9213
  %55 = load volatile i32, i32* %54, align 4, !dbg !9214
  %56 = and i32 %55, %52, !dbg !9214
  store volatile i32 %56, i32* %54, align 4, !dbg !9214
  call void @llvm.dbg.value(metadata i32 1, metadata !9146, metadata !DIExpression()), !dbg !9147
  br label %57

57:                                               ; preds = %46, %51
  %58 = phi i32 [ 1, %51 ], [ 0, %46 ], !dbg !9215
  call void @llvm.dbg.value(metadata i32 %58, metadata !9146, metadata !DIExpression()), !dbg !9147
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9216
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 11, !dbg !9217
  store volatile i32 0, i32* %60, align 4, !dbg !9218
  tail call void @vPortExitCritical() #18, !dbg !9219
  ret i32 %58, !dbg !9220
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotify(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9221 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9226, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.value(metadata i32 %1, metadata !9227, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.value(metadata i32 %2, metadata !9228, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.value(metadata i32 1, metadata !9231, metadata !DIExpression()), !dbg !9232
  %4 = icmp eq i8* %0, null, !dbg !9233
  br i1 %4, label %5, label %6, !dbg !9235

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 4049) #18, !dbg !9236
  br label %6, !dbg !9236

6:                                                ; preds = %5, %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !9229, metadata !DIExpression()), !dbg !9232
  tail call void @vPortEnterCritical() #18, !dbg !9238
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !9239
  %8 = bitcast i8* %7 to i32*, !dbg !9239
  %9 = load volatile i32, i32* %8, align 4, !dbg !9239
  call void @llvm.dbg.value(metadata i32 %9, metadata !9230, metadata !DIExpression()), !dbg !9232
  store volatile i32 2, i32* %8, align 4, !dbg !9241
  switch i32 %2, label %28 [
    i32 1, label %10
    i32 2, label %15
    i32 3, label %20
    i32 4, label %23
  ], !dbg !9242

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %0, metadata !9229, metadata !DIExpression()), !dbg !9232
  %11 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9243
  %12 = bitcast i8* %11 to i32*, !dbg !9243
  %13 = load volatile i32, i32* %12, align 4, !dbg !9245
  %14 = or i32 %13, %1, !dbg !9245
  store volatile i32 %14, i32* %12, align 4, !dbg !9245
  br label %28, !dbg !9246

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9247
  %17 = bitcast i8* %16 to i32*, !dbg !9247
  %18 = load volatile i32, i32* %17, align 4, !dbg !9248
  %19 = add i32 %18, 1, !dbg !9248
  store volatile i32 %19, i32* %17, align 4, !dbg !9248
  br label %28, !dbg !9249

20:                                               ; preds = %6
  %21 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9250
  %22 = bitcast i8* %21 to i32*, !dbg !9250
  store volatile i32 %1, i32* %22, align 4, !dbg !9251
  br label %28, !dbg !9252

23:                                               ; preds = %6
  %24 = icmp eq i32 %9, 2, !dbg !9253
  br i1 %24, label %53, label %25, !dbg !9255

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9256
  %27 = bitcast i8* %26 to i32*, !dbg !9256
  store volatile i32 %1, i32* %27, align 4, !dbg !9258
  br label %28, !dbg !9259

28:                                               ; preds = %25, %6, %20, %15, %10
  call void @llvm.dbg.value(metadata i32 1, metadata !9231, metadata !DIExpression()), !dbg !9232
  %29 = icmp eq i32 %9, 1, !dbg !9260
  br i1 %29, label %30, label %53, !dbg !9262

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9263
  %32 = bitcast i8* %31 to %struct.xLIST_ITEM*, !dbg !9263
  %33 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %32) #18, !dbg !9265
  %34 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9266
  %35 = bitcast i8* %34 to i32*, !dbg !9266
  %36 = load i32, i32* %35, align 4, !dbg !9266
  %37 = shl nuw i32 1, %36, !dbg !9266
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9266
  %39 = or i32 %38, %37, !dbg !9266
  store volatile i32 %39, i32* @uxTopReadyPriority, align 4, !dbg !9266
  %40 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %36, !dbg !9266
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %40, %struct.xLIST_ITEM* noundef nonnull %32) #18, !dbg !9266
  %41 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !9267
  %42 = bitcast i8* %41 to i8**, !dbg !9267
  %43 = load i8*, i8** %42, align 4, !dbg !9267
  %44 = icmp eq i8* %43, null, !dbg !9267
  br i1 %44, label %46, label %45, !dbg !9269

45:                                               ; preds = %30
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 4099) #18, !dbg !9270
  br label %46, !dbg !9270

46:                                               ; preds = %45, %30
  %47 = load i32, i32* %35, align 4, !dbg !9272
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9274
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 3, !dbg !9275
  %50 = load i32, i32* %49, align 4, !dbg !9275
  %51 = icmp ugt i32 %47, %50, !dbg !9276
  br i1 %51, label %52, label %53, !dbg !9277

52:                                               ; preds = %46
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9278
  tail call void asm sideeffect "dsb", ""() #17, !dbg !9278, !srcloc !9281
  tail call void asm sideeffect "isb", ""() #17, !dbg !9278, !srcloc !9282
  br label %53, !dbg !9283

53:                                               ; preds = %23, %28, %52, %46
  %54 = phi i32 [ 1, %28 ], [ 1, %52 ], [ 1, %46 ], [ 0, %23 ]
  tail call void @vPortExitCritical() #18, !dbg !9284
  ret i32 %54, !dbg !9285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyFromISR(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3) local_unnamed_addr #0 !dbg !9286 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9290, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i32 %1, metadata !9291, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i32 %2, metadata !9292, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i32* %3, metadata !9293, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i32 1, metadata !9296, metadata !DIExpression()), !dbg !9298
  %5 = icmp eq i8* %0, null, !dbg !9299
  br i1 %5, label %6, label %7, !dbg !9301

6:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 4134) #18, !dbg !9302
  br label %7, !dbg !9302

7:                                                ; preds = %6, %4
  tail call void @vPortValidateInterruptPriority() #18, !dbg !9304
  call void @llvm.dbg.value(metadata i8* %0, metadata !9294, metadata !DIExpression()), !dbg !9298
  %8 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !9305, !srcloc !7919
  call void @llvm.dbg.value(metadata i32 undef, metadata !7916, metadata !DIExpression()) #17, !dbg !9307
  call void @llvm.dbg.value(metadata i32 undef, metadata !7917, metadata !DIExpression()) #17, !dbg !9307
  call void @llvm.dbg.value(metadata i32 undef, metadata !9297, metadata !DIExpression()), !dbg !9298
  %9 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !9308
  %10 = bitcast i8* %9 to i32*, !dbg !9308
  %11 = load volatile i32, i32* %10, align 4, !dbg !9308
  call void @llvm.dbg.value(metadata i32 %11, metadata !9295, metadata !DIExpression()), !dbg !9298
  store volatile i32 2, i32* %10, align 4, !dbg !9310
  switch i32 %2, label %30 [
    i32 1, label %12
    i32 2, label %17
    i32 3, label %22
    i32 4, label %25
  ], !dbg !9311

12:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !9294, metadata !DIExpression()), !dbg !9298
  %13 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9312
  %14 = bitcast i8* %13 to i32*, !dbg !9312
  %15 = load volatile i32, i32* %14, align 4, !dbg !9314
  %16 = or i32 %15, %1, !dbg !9314
  store volatile i32 %16, i32* %14, align 4, !dbg !9314
  br label %30, !dbg !9315

17:                                               ; preds = %7
  %18 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9316
  %19 = bitcast i8* %18 to i32*, !dbg !9316
  %20 = load volatile i32, i32* %19, align 4, !dbg !9317
  %21 = add i32 %20, 1, !dbg !9317
  store volatile i32 %21, i32* %19, align 4, !dbg !9317
  br label %30, !dbg !9318

22:                                               ; preds = %7
  %23 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9319
  %24 = bitcast i8* %23 to i32*, !dbg !9319
  store volatile i32 %1, i32* %24, align 4, !dbg !9320
  br label %30, !dbg !9321

25:                                               ; preds = %7
  %26 = icmp eq i32 %11, 2, !dbg !9322
  br i1 %26, label %66, label %27, !dbg !9324

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9325
  %29 = bitcast i8* %28 to i32*, !dbg !9325
  store volatile i32 %1, i32* %29, align 4, !dbg !9327
  br label %30, !dbg !9328

30:                                               ; preds = %27, %7, %22, %17, %12
  call void @llvm.dbg.value(metadata i32 1, metadata !9296, metadata !DIExpression()), !dbg !9298
  %31 = icmp eq i32 %11, 1, !dbg !9329
  br i1 %31, label %32, label %66, !dbg !9331

32:                                               ; preds = %30
  %33 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9332
  %34 = bitcast i8* %33 to %struct.xLIST_ITEM*, !dbg !9332
  %35 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !9332
  %36 = bitcast i8* %35 to i8**, !dbg !9332
  %37 = load i8*, i8** %36, align 4, !dbg !9332
  %38 = icmp eq i8* %37, null, !dbg !9332
  br i1 %38, label %40, label %39, !dbg !9335

39:                                               ; preds = %32
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 4200) #18, !dbg !9336
  br label %40, !dbg !9336

40:                                               ; preds = %39, %32
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9338
  %42 = icmp eq i32 %41, 0, !dbg !9340
  br i1 %42, label %43, label %54, !dbg !9341

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9342
  %45 = bitcast i8* %44 to %struct.xLIST_ITEM*, !dbg !9342
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #18, !dbg !9344
  %47 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9345
  %48 = bitcast i8* %47 to i32*, !dbg !9345
  %49 = load i32, i32* %48, align 4, !dbg !9345
  %50 = shl nuw i32 1, %49, !dbg !9345
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9345
  %52 = or i32 %51, %50, !dbg !9345
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !9345
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !9345
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %45) #18, !dbg !9345
  br label %55, !dbg !9346

54:                                               ; preds = %40
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %34) #18, !dbg !9347
  br label %55

55:                                               ; preds = %54, %43
  %56 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9349
  %57 = bitcast i8* %56 to i32*, !dbg !9349
  %58 = load i32, i32* %57, align 4, !dbg !9349
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9351
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 3, !dbg !9352
  %61 = load i32, i32* %60, align 4, !dbg !9352
  %62 = icmp ugt i32 %58, %61, !dbg !9353
  %63 = icmp ne i32* %3, null
  %64 = and i1 %63, %62, !dbg !9354
  br i1 %64, label %65, label %66, !dbg !9354

65:                                               ; preds = %55
  store i32 1, i32* %3, align 4, !dbg !9355
  br label %66, !dbg !9359

66:                                               ; preds = %25, %65, %55, %30
  %67 = phi i32 [ 1, %65 ], [ 1, %55 ], [ 1, %30 ], [ 0, %25 ]
  %68 = extractvalue { i32, i32 } %8, 0, !dbg !9305
  call void @llvm.dbg.value(metadata i32 %68, metadata !7916, metadata !DIExpression()) #17, !dbg !9307
  call void @llvm.dbg.value(metadata i32 %68, metadata !9297, metadata !DIExpression()), !dbg !9298
  call void @llvm.dbg.value(metadata i32 undef, metadata !7924, metadata !DIExpression()) #17, !dbg !9360
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %68) #17, !dbg !9362, !srcloc !7930
  ret i32 %67, !dbg !9363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskNotifyGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !9364 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9368, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.value(metadata i32* %1, metadata !9369, metadata !DIExpression()), !dbg !9373
  %3 = icmp eq i8* %0, null, !dbg !9374
  br i1 %3, label %4, label %5, !dbg !9376

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 4245) #18, !dbg !9377
  br label %5, !dbg !9377

5:                                                ; preds = %4, %2
  tail call void @vPortValidateInterruptPriority() #18, !dbg !9379
  call void @llvm.dbg.value(metadata i8* %0, metadata !9370, metadata !DIExpression()), !dbg !9373
  %6 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !9380, !srcloc !7919
  call void @llvm.dbg.value(metadata i32 undef, metadata !7916, metadata !DIExpression()) #17, !dbg !9382
  call void @llvm.dbg.value(metadata i32 undef, metadata !7917, metadata !DIExpression()) #17, !dbg !9382
  call void @llvm.dbg.value(metadata i32 undef, metadata !9372, metadata !DIExpression()), !dbg !9373
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !9383
  %8 = bitcast i8* %7 to i32*, !dbg !9383
  %9 = load volatile i32, i32* %8, align 4, !dbg !9383
  call void @llvm.dbg.value(metadata i32 %9, metadata !9371, metadata !DIExpression()), !dbg !9373
  store volatile i32 2, i32* %8, align 4, !dbg !9385
  %10 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !9386
  %11 = bitcast i8* %10 to i32*, !dbg !9386
  %12 = load volatile i32, i32* %11, align 4, !dbg !9387
  %13 = add i32 %12, 1, !dbg !9387
  store volatile i32 %13, i32* %11, align 4, !dbg !9387
  %14 = icmp eq i32 %9, 1, !dbg !9388
  br i1 %14, label %15, label %49, !dbg !9390

15:                                               ; preds = %5
  %16 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9391
  %17 = bitcast i8* %16 to %struct.xLIST_ITEM*, !dbg !9391
  %18 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !9391
  %19 = bitcast i8* %18 to i8**, !dbg !9391
  %20 = load i8*, i8** %19, align 4, !dbg !9391
  %21 = icmp eq i8* %20, null, !dbg !9391
  br i1 %21, label %23, label %22, !dbg !9394

22:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.125, i32 0, i32 0), i32 noundef 4281) #18, !dbg !9395
  br label %23, !dbg !9395

23:                                               ; preds = %22, %15
  %24 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !9397
  %25 = icmp eq i32 %24, 0, !dbg !9399
  br i1 %25, label %26, label %37, !dbg !9400

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9401
  %28 = bitcast i8* %27 to %struct.xLIST_ITEM*, !dbg !9401
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !9403
  %30 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9404
  %31 = bitcast i8* %30 to i32*, !dbg !9404
  %32 = load i32, i32* %31, align 4, !dbg !9404
  %33 = shl nuw i32 1, %32, !dbg !9404
  %34 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !9404
  %35 = or i32 %34, %33, !dbg !9404
  store volatile i32 %35, i32* @uxTopReadyPriority, align 4, !dbg !9404
  %36 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !9404
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %36, %struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !9404
  br label %38, !dbg !9405

37:                                               ; preds = %23
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %17) #18, !dbg !9406
  br label %38

38:                                               ; preds = %37, %26
  %39 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9408
  %40 = bitcast i8* %39 to i32*, !dbg !9408
  %41 = load i32, i32* %40, align 4, !dbg !9408
  %42 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9410
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %42, i32 0, i32 3, !dbg !9411
  %44 = load i32, i32* %43, align 4, !dbg !9411
  %45 = icmp ugt i32 %41, %44, !dbg !9412
  %46 = icmp ne i32* %1, null
  %47 = and i1 %46, %45, !dbg !9413
  br i1 %47, label %48, label %49, !dbg !9413

48:                                               ; preds = %38
  store i32 1, i32* %1, align 4, !dbg !9414
  br label %49, !dbg !9418

49:                                               ; preds = %48, %38, %5
  %50 = extractvalue { i32, i32 } %6, 0, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %50, metadata !7916, metadata !DIExpression()) #17, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %50, metadata !9372, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.value(metadata i32 undef, metadata !7924, metadata !DIExpression()) #17, !dbg !9419
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %50) #17, !dbg !9421, !srcloc !7930
  ret void, !dbg !9422
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetBottomOfStack(i8* noundef readonly %0) local_unnamed_addr #8 !dbg !9423 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9425, metadata !DIExpression()), !dbg !9427
  %2 = icmp eq i8* %0, null, !dbg !9428
  br i1 %2, label %3, label %5, !dbg !9429

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !9430
  br label %7, !dbg !9429

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !9431
  br label %7, !dbg !9429

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !9429
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !9426, metadata !DIExpression()), !dbg !9427
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !9432
  %10 = load i32*, i32** %9, align 4, !dbg !9432
  %11 = ptrtoint i32* %10 to i32, !dbg !9433
  ret i32 %11, !dbg !9434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialise(%struct.xLIST* noundef %0) local_unnamed_addr #4 !dbg !9435 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9440, metadata !DIExpression()), !dbg !9441
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !9442
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !9443
  %4 = bitcast %struct.xLIST_ITEM** %3 to %struct.xMINI_LIST_ITEM**, !dbg !9444
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %4, align 4, !dbg !9444
  %5 = getelementptr inbounds %struct.xMINI_LIST_ITEM, %struct.xMINI_LIST_ITEM* %2, i32 0, i32 0, !dbg !9445
  store i32 -1, i32* %5, align 4, !dbg !9446
  %6 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !9447
  %7 = bitcast %struct.xLIST_ITEM** %6 to %struct.xMINI_LIST_ITEM**, !dbg !9448
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %7, align 4, !dbg !9448
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !9449
  %9 = bitcast %struct.xLIST_ITEM** %8 to %struct.xMINI_LIST_ITEM**, !dbg !9450
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %9, align 4, !dbg !9450
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !9451
  store i32 0, i32* %10, align 4, !dbg !9452
  ret void, !dbg !9453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialiseItem(%struct.xLIST_ITEM* nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !9454 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !9459, metadata !DIExpression()), !dbg !9460
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !9461
  store i8* null, i8** %2, align 4, !dbg !9462
  ret void, !dbg !9463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #14 !dbg !9464 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9468, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !9469, metadata !DIExpression()), !dbg !9471
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !9472
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %3, align 4, !dbg !9472
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %4, metadata !9470, metadata !DIExpression()), !dbg !9471
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !9473
  store %struct.xLIST_ITEM* %4, %struct.xLIST_ITEM** %5, align 4, !dbg !9474
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %4, i32 0, i32 2, !dbg !9475
  %7 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !9475
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !9476
  store %struct.xLIST_ITEM* %7, %struct.xLIST_ITEM** %8, align 4, !dbg !9477
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !9478
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !9479
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %10, align 4, !dbg !9480
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %6, align 4, !dbg !9481
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !9482
  %12 = bitcast i8** %11 to %struct.xLIST**, !dbg !9483
  store %struct.xLIST* %0, %struct.xLIST** %12, align 4, !dbg !9483
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !9484
  %14 = load i32, i32* %13, align 4, !dbg !9485
  %15 = add i32 %14, 1, !dbg !9485
  store i32 %15, i32* %13, align 4, !dbg !9485
  ret void, !dbg !9486
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #15 !dbg !9487 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !9489, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !9490, metadata !DIExpression()), !dbg !9493
  %3 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 0, !dbg !9494
  %4 = load i32, i32* %3, align 4, !dbg !9494
  call void @llvm.dbg.value(metadata i32 %4, metadata !9492, metadata !DIExpression()), !dbg !9493
  %5 = icmp eq i32 %4, -1, !dbg !9495
  br i1 %5, label %6, label %11, !dbg !9497

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !9498
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !9498
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %8, metadata !9491, metadata !DIExpression()), !dbg !9493
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 1
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %9, align 4, !dbg !9500
  br label %21, !dbg !9501

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !9502
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !9505
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %13, metadata !9491, metadata !DIExpression()), !dbg !9493
  br label %14, !dbg !9506

14:                                               ; preds = %14, %11
  %15 = phi %struct.xLIST_ITEM* [ %13, %11 ], [ %17, %14 ], !dbg !9507
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %15, metadata !9491, metadata !DIExpression()), !dbg !9493
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %15, i32 0, i32 1, !dbg !9508
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !9508
  %18 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %17, i32 0, i32 0, !dbg !9510
  %19 = load i32, i32* %18, align 4, !dbg !9510
  %20 = icmp ugt i32 %19, %4, !dbg !9511
  br i1 %20, label %21, label %14, !dbg !9512, !llvm.loop !9513

21:                                               ; preds = %14, %6
  %22 = phi %struct.xLIST_ITEM* [ %10, %6 ], [ %17, %14 ], !dbg !9500
  %23 = phi %struct.xLIST_ITEM* [ %8, %6 ], [ %15, %14 ], !dbg !9515
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %23, metadata !9491, metadata !DIExpression()), !dbg !9493
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %23, i32 0, i32 1, !dbg !9500
  %25 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !9516
  store %struct.xLIST_ITEM* %22, %struct.xLIST_ITEM** %25, align 4, !dbg !9517
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 2, !dbg !9518
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %26, align 4, !dbg !9519
  %27 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !9520
  store %struct.xLIST_ITEM* %23, %struct.xLIST_ITEM** %27, align 4, !dbg !9521
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %24, align 4, !dbg !9522
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !9523
  %29 = bitcast i8** %28 to %struct.xLIST**, !dbg !9524
  store %struct.xLIST* %0, %struct.xLIST** %29, align 4, !dbg !9524
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !9525
  %31 = load i32, i32* %30, align 4, !dbg !9526
  %32 = add i32 %31, 1, !dbg !9526
  store i32 %32, i32* %30, align 4, !dbg !9526
  ret void, !dbg !9527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @uxListRemove(%struct.xLIST_ITEM* noundef %0) local_unnamed_addr #14 !dbg !9528 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !9532, metadata !DIExpression()), !dbg !9534
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !9535
  %3 = bitcast i8** %2 to %struct.xLIST**, !dbg !9535
  %4 = load %struct.xLIST*, %struct.xLIST** %3, align 4, !dbg !9535
  call void @llvm.dbg.value(metadata %struct.xLIST* %4, metadata !9533, metadata !DIExpression()), !dbg !9534
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 2, !dbg !9536
  %6 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !9536
  %7 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 1, !dbg !9537
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !9537
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 2, !dbg !9538
  store %struct.xLIST_ITEM* %6, %struct.xLIST_ITEM** %9, align 4, !dbg !9539
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !9540
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !9541
  %12 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !9542
  store %struct.xLIST_ITEM* %10, %struct.xLIST_ITEM** %12, align 4, !dbg !9543
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 1, !dbg !9544
  %14 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %13, align 4, !dbg !9544
  %15 = icmp eq %struct.xLIST_ITEM* %14, %0, !dbg !9546
  br i1 %15, label %16, label %18, !dbg !9547

16:                                               ; preds = %1
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !9548
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %13, align 4, !dbg !9550
  br label %18, !dbg !9551

18:                                               ; preds = %1, %16
  store i8* null, i8** %2, align 4, !dbg !9552
  %19 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 0, !dbg !9553
  %20 = load i32, i32* %19, align 4, !dbg !9554
  %21 = add i32 %20, -1, !dbg !9554
  store i32 %21, i32* %19, align 4, !dbg !9554
  ret i32 %21, !dbg !9555
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReset(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9556 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9560, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata i32 %1, metadata !9561, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.value(metadata i8* %0, metadata !9562, metadata !DIExpression()), !dbg !9564
  %3 = icmp eq i8* %0, null, !dbg !9565
  br i1 %3, label %4, label %5, !dbg !9567

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 264) #18, !dbg !9568
  br label %5, !dbg !9568

5:                                                ; preds = %4, %2
  tail call void @vPortEnterCritical() #18, !dbg !9570
  %6 = bitcast i8* %0 to i8**, !dbg !9571
  %7 = load i8*, i8** %6, align 4, !dbg !9571
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !9573
  %9 = bitcast i8* %8 to i32*, !dbg !9573
  %10 = load i32, i32* %9, align 4, !dbg !9573
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !9574
  %12 = bitcast i8* %11 to i32*, !dbg !9574
  %13 = load i32, i32* %12, align 4, !dbg !9574
  %14 = mul i32 %13, %10, !dbg !9575
  %15 = getelementptr inbounds i8, i8* %7, i32 %14, !dbg !9576
  %16 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9577
  %17 = bitcast i8* %16 to i8**, !dbg !9577
  store i8* %15, i8** %17, align 4, !dbg !9578
  %18 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !9579
  %19 = bitcast i8* %18 to i32*, !dbg !9579
  store volatile i32 0, i32* %19, align 4, !dbg !9580
  %20 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !9581
  %21 = bitcast i8* %20 to i8**, !dbg !9581
  store i8* %7, i8** %21, align 4, !dbg !9582
  %22 = add i32 %10, -1, !dbg !9583
  %23 = mul i32 %22, %13, !dbg !9584
  %24 = getelementptr inbounds i8, i8* %7, i32 %23, !dbg !9585
  %25 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !9586
  %26 = bitcast i8* %25 to i8**, !dbg !9587
  store i8* %24, i8** %26, align 4, !dbg !9588
  %27 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !9589
  %28 = bitcast i8* %27 to i32*, !dbg !9589
  store volatile i32 -1, i32* %28, align 4, !dbg !9590
  %29 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !9591
  %30 = bitcast i8* %29 to i32*, !dbg !9591
  store volatile i32 -1, i32* %30, align 4, !dbg !9592
  %31 = icmp eq i32 %1, 0, !dbg !9593
  %32 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !9595
  br i1 %31, label %33, label %42, !dbg !9596

33:                                               ; preds = %5
  %34 = bitcast i8* %32 to i32*, !dbg !9597
  %35 = load i32, i32* %34, align 4, !dbg !9597
  %36 = icmp eq i32 %35, 0, !dbg !9597
  br i1 %36, label %46, label %37, !dbg !9600

37:                                               ; preds = %33
  %38 = bitcast i8* %32 to %struct.xLIST*, !dbg !9597
  %39 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %38) #18, !dbg !9601
  %40 = icmp eq i32 %39, 1, !dbg !9604
  br i1 %40, label %41, label %46, !dbg !9605

41:                                               ; preds = %37
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9606
  tail call void asm sideeffect "dsb", ""() #17, !dbg !9606, !srcloc !9609
  tail call void asm sideeffect "isb", ""() #17, !dbg !9606, !srcloc !9610
  br label %46, !dbg !9611

42:                                               ; preds = %5
  %43 = bitcast i8* %32 to %struct.xLIST*, !dbg !9612
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %43) #18, !dbg !9614
  %44 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !9615
  %45 = bitcast i8* %44 to %struct.xLIST*, !dbg !9615
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %45) #18, !dbg !9616
  br label %46

46:                                               ; preds = %37, %41, %33, %42
  tail call void @vPortExitCritical() #18, !dbg !9617
  ret i32 1, !dbg !9618
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !9619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9623, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i32 %1, metadata !9624, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i8 %2, metadata !9625, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i8* null, metadata !9628, metadata !DIExpression()), !dbg !9630
  %4 = icmp eq i32 %0, 0, !dbg !9631
  br i1 %4, label %5, label %6, !dbg !9633

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.163, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 324) #18, !dbg !9634
  br label %6, !dbg !9634

6:                                                ; preds = %5, %3
  %7 = icmp eq i32 %1, 0, !dbg !9636
  %8 = mul i32 %1, %0, !dbg !9638
  %9 = add i32 %8, 85, !dbg !9638
  %10 = select i1 %7, i32 84, i32 %9, !dbg !9638
  call void @llvm.dbg.value(metadata i32 undef, metadata !9627, metadata !DIExpression()), !dbg !9630
  %11 = tail call i8* @pvPortMalloc(i32 noundef %10) #18, !dbg !9639
  call void @llvm.dbg.value(metadata i8* %11, metadata !9629, metadata !DIExpression()), !dbg !9630
  %12 = icmp eq i8* %11, null, !dbg !9640
  br i1 %12, label %23, label %13, !dbg !9642

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !9626, metadata !DIExpression()), !dbg !9630
  %14 = select i1 %7, i32 0, i32 84, !dbg !9643
  %15 = getelementptr i8, i8* %11, i32 %14, !dbg !9643
  %16 = bitcast i8* %11 to i8**, !dbg !9645
  store i8* %15, i8** %16, align 4, !dbg !9645
  %17 = getelementptr inbounds i8, i8* %11, i32 60, !dbg !9647
  %18 = bitcast i8* %17 to i32*, !dbg !9647
  store i32 %0, i32* %18, align 4, !dbg !9648
  %19 = getelementptr inbounds i8, i8* %11, i32 64, !dbg !9649
  %20 = bitcast i8* %19 to i32*, !dbg !9649
  store i32 %1, i32* %20, align 4, !dbg !9650
  %21 = tail call i32 @xQueueGenericReset(i8* noundef nonnull %11, i32 noundef 1) #20, !dbg !9651
  %22 = getelementptr inbounds i8, i8* %11, i32 80, !dbg !9652
  store i8 %2, i8* %22, align 4, !dbg !9654
  call void @llvm.dbg.value(metadata i8* %11, metadata !9628, metadata !DIExpression()), !dbg !9630
  br label %24, !dbg !9655

23:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !9628, metadata !DIExpression()), !dbg !9630
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 386) #18, !dbg !9656
  br label %24, !dbg !9656

24:                                               ; preds = %13, %23
  ret i8* %11, !dbg !9659
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateMutex(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !9660 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9664, metadata !DIExpression()), !dbg !9666
  %2 = tail call i8* @pvPortMalloc(i32 noundef 84) #18, !dbg !9667
  call void @llvm.dbg.value(metadata i8* %2, metadata !9665, metadata !DIExpression()), !dbg !9666
  %3 = icmp eq i8* %2, null, !dbg !9668
  br i1 %3, label %28, label %4, !dbg !9668

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !9665, metadata !DIExpression()), !dbg !9666
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !9669
  %6 = bitcast i8* %5 to i8**, !dbg !9669
  store i8* null, i8** %6, align 4, !dbg !9672
  %7 = bitcast i8* %2 to i8**, !dbg !9673
  store i8* null, i8** %7, align 4, !dbg !9674
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !9675
  %9 = bitcast i8* %8 to i8**, !dbg !9675
  store i8* null, i8** %9, align 4, !dbg !9676
  %10 = getelementptr inbounds i8, i8* %2, i32 12, !dbg !9677
  %11 = bitcast i8* %10 to i8**, !dbg !9678
  store i8* null, i8** %11, align 4, !dbg !9679
  %12 = getelementptr inbounds i8, i8* %2, i32 56, !dbg !9680
  %13 = bitcast i8* %12 to i32*, !dbg !9680
  store volatile i32 0, i32* %13, align 4, !dbg !9681
  %14 = getelementptr inbounds i8, i8* %2, i32 60, !dbg !9682
  %15 = bitcast i8* %14 to i32*, !dbg !9682
  store i32 1, i32* %15, align 4, !dbg !9683
  %16 = getelementptr inbounds i8, i8* %2, i32 64, !dbg !9684
  %17 = bitcast i8* %16 to i32*, !dbg !9684
  store i32 0, i32* %17, align 4, !dbg !9685
  %18 = getelementptr inbounds i8, i8* %2, i32 68, !dbg !9686
  %19 = bitcast i8* %18 to i32*, !dbg !9686
  store volatile i32 -1, i32* %19, align 4, !dbg !9687
  %20 = getelementptr inbounds i8, i8* %2, i32 72, !dbg !9688
  %21 = bitcast i8* %20 to i32*, !dbg !9688
  store volatile i32 -1, i32* %21, align 4, !dbg !9689
  %22 = getelementptr inbounds i8, i8* %2, i32 80, !dbg !9690
  store i8 %0, i8* %22, align 4, !dbg !9692
  %23 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !9693
  %24 = bitcast i8* %23 to %struct.xLIST*, !dbg !9693
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %24) #18, !dbg !9694
  %25 = getelementptr inbounds i8, i8* %2, i32 36, !dbg !9695
  %26 = bitcast i8* %25 to %struct.xLIST*, !dbg !9695
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %26) #18, !dbg !9696
  %27 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %2, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !9697
  br label %29, !dbg !9698

28:                                               ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 450) #18, !dbg !9699
  br label %29, !dbg !9699

29:                                               ; preds = %4, %28
  ret i8* %2, !dbg !9702
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSend(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9703 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9709, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.value(metadata i8* %1, metadata !9710, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.value(metadata i32 %2, metadata !9711, metadata !DIExpression()), !dbg !9722
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !9712, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.value(metadata i32 0, metadata !9713, metadata !DIExpression()), !dbg !9722
  %7 = bitcast %struct.hal_cache_region_config_t* %6 to i8*, !dbg !9723
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17, !dbg !9723
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %6, metadata !9715, metadata !DIExpression()), !dbg !9724
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !9725
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !9721, metadata !DIExpression()), !dbg !9722
  %9 = icmp eq i8* %0, null, !dbg !9726
  br i1 %9, label %10, label %11, !dbg !9728

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 619) #18, !dbg !9729
  br label %11, !dbg !9729

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !9731
  br i1 %12, label %13, label %19, !dbg !9731

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !9731
  %15 = bitcast i8* %14 to i32*, !dbg !9731
  %16 = load i32, i32* %15, align 4, !dbg !9731
  %17 = icmp eq i32 %16, 0, !dbg !9731
  br i1 %17, label %19, label %18, !dbg !9733

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.166, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 620) #18, !dbg !9734
  br label %19, !dbg !9734

19:                                               ; preds = %11, %18, %13
  %20 = icmp eq i32 %3, 2, !dbg !9736
  br i1 %20, label %21, label %27, !dbg !9736

21:                                               ; preds = %19
  %22 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !9736
  %23 = bitcast i8* %22 to i32*, !dbg !9736
  %24 = load i32, i32* %23, align 4, !dbg !9736
  %25 = icmp eq i32 %24, 1, !dbg !9736
  br i1 %25, label %27, label %26, !dbg !9738

26:                                               ; preds = %21
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 621) #18, !dbg !9739
  br label %27, !dbg !9739

27:                                               ; preds = %19, %26, %21
  %28 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !9741
  %29 = icmp eq i32 %28, 0, !dbg !9741
  call void @llvm.dbg.value(metadata i32 %2, metadata !9711, metadata !DIExpression()), !dbg !9722
  %30 = icmp ne i32 %2, 0, !dbg !9741
  %31 = and i1 %29, %30, !dbg !9741
  br i1 %31, label %32, label %33, !dbg !9744

32:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 624) #18, !dbg !9745
  br label %33, !dbg !9745

33:                                               ; preds = %32, %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9722
  call void @vPortEnterCritical() #18, !dbg !9747
  %34 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !9751
  %35 = bitcast i8* %34 to i32*, !dbg !9751
  %36 = load volatile i32, i32* %35, align 4, !dbg !9751
  %37 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !9754
  %38 = bitcast i8* %37 to i32*, !dbg !9754
  %39 = load i32, i32* %38, align 4, !dbg !9754
  %40 = icmp ult i32 %36, %39, !dbg !9755
  %41 = or i1 %20, %40, !dbg !9756
  br i1 %41, label %50, label %42, !dbg !9756

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %0, i32 68
  %44 = bitcast i8* %43 to i32*
  %45 = getelementptr inbounds i8, i8* %0, i32 72
  %46 = bitcast i8* %45 to i32*
  %47 = getelementptr inbounds i8, i8* %0, i32 16
  %48 = bitcast i8* %47 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !9711, metadata !DIExpression()), !dbg !9722
  %49 = icmp eq i32 %2, 0, !dbg !9757
  br i1 %49, label %65, label %66, !dbg !9760

50:                                               ; preds = %90, %33
  %51 = call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1, i32 noundef %3) #20, !dbg !9761
  call void @llvm.dbg.value(metadata i32 %51, metadata !9714, metadata !DIExpression()), !dbg !9722
  %52 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !9763
  %53 = bitcast i8* %52 to i32*, !dbg !9763
  %54 = load i32, i32* %53, align 4, !dbg !9763
  %55 = icmp eq i32 %54, 0, !dbg !9763
  br i1 %55, label %61, label %56, !dbg !9766

56:                                               ; preds = %50
  %57 = bitcast i8* %52 to %struct.xLIST*, !dbg !9763
  %58 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %57) #18, !dbg !9767
  %59 = icmp eq i32 %58, 1, !dbg !9770
  br i1 %59, label %60, label %64, !dbg !9771

60:                                               ; preds = %56
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9772
  call void asm sideeffect "dsb", ""() #17, !dbg !9772, !srcloc !9775
  call void asm sideeffect "isb", ""() #17, !dbg !9772, !srcloc !9776
  br label %64, !dbg !9777

61:                                               ; preds = %50
  %62 = icmp eq i32 %51, 0, !dbg !9778
  br i1 %62, label %64, label %63, !dbg !9780

63:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9781
  call void asm sideeffect "dsb", ""() #17, !dbg !9781, !srcloc !9784
  call void asm sideeffect "isb", ""() #17, !dbg !9781, !srcloc !9785
  br label %64, !dbg !9786

64:                                               ; preds = %63, %61, %60, %56
  call void @vPortExitCritical() #18, !dbg !9787
  br label %97, !dbg !9788

65:                                               ; preds = %94, %42
  call void @vPortExitCritical() #18, !dbg !9789
  br label %97, !dbg !9791

66:                                               ; preds = %42
  call void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef nonnull %6) #18, !dbg !9792
  call void @llvm.dbg.value(metadata i32 1, metadata !9713, metadata !DIExpression()), !dbg !9722
  br label %67, !dbg !9795

67:                                               ; preds = %94, %66
  call void @llvm.dbg.value(metadata i32 1, metadata !9713, metadata !DIExpression()), !dbg !9722
  call void @vPortExitCritical() #18, !dbg !9796
  call void @vTaskSuspendAll() #18, !dbg !9797
  call void @vPortEnterCritical() #18, !dbg !9798
  %68 = load volatile i32, i32* %44, align 4, !dbg !9799
  %69 = icmp eq i32 %68, -1, !dbg !9799
  br i1 %69, label %70, label %71, !dbg !9802

70:                                               ; preds = %67
  store volatile i32 0, i32* %44, align 4, !dbg !9803
  br label %71, !dbg !9803

71:                                               ; preds = %70, %67
  %72 = load volatile i32, i32* %46, align 4, !dbg !9805
  %73 = icmp eq i32 %72, -1, !dbg !9805
  br i1 %73, label %74, label %75, !dbg !9802

74:                                               ; preds = %71
  store volatile i32 0, i32* %46, align 4, !dbg !9807
  br label %75, !dbg !9807

75:                                               ; preds = %74, %71
  call void @vPortExitCritical() #18, !dbg !9798
  call void @llvm.dbg.value(metadata i32* %5, metadata !9711, metadata !DIExpression(DW_OP_deref)), !dbg !9722
  %76 = call i32 @xTaskCheckForTimeOut(%struct.hal_cache_region_config_t* noundef nonnull %6, i32* noundef nonnull %5) #18, !dbg !9809
  %77 = icmp eq i32 %76, 0, !dbg !9811
  br i1 %77, label %78, label %88, !dbg !9812

78:                                               ; preds = %75
  %79 = call fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !9813
  %80 = icmp eq i32 %79, 0, !dbg !9816
  br i1 %80, label %86, label %81, !dbg !9817

81:                                               ; preds = %78
  %82 = load i32, i32* %5, align 4, !dbg !9818
  call void @llvm.dbg.value(metadata i32 %82, metadata !9711, metadata !DIExpression()), !dbg !9722
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %48, i32 noundef %82) #18, !dbg !9820
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !9821
  %83 = call i32 @xTaskResumeAll() #18, !dbg !9822
  %84 = icmp eq i32 %83, 0, !dbg !9824
  br i1 %84, label %85, label %90, !dbg !9825

85:                                               ; preds = %81
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9826
  call void asm sideeffect "dsb", ""() #17, !dbg !9826, !srcloc !9829
  call void asm sideeffect "isb", ""() #17, !dbg !9826, !srcloc !9830
  br label %90, !dbg !9831

86:                                               ; preds = %78
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !9832
  %87 = call i32 @xTaskResumeAll() #18, !dbg !9834
  br label %90

88:                                               ; preds = %75
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !9835
  %89 = call i32 @xTaskResumeAll() #18, !dbg !9837
  br label %97, !dbg !9838

90:                                               ; preds = %86, %85, %81
  call void @llvm.dbg.value(metadata i32 undef, metadata !9713, metadata !DIExpression()), !dbg !9722
  call void @vPortEnterCritical() #18, !dbg !9747
  %91 = load volatile i32, i32* %35, align 4, !dbg !9751
  %92 = load i32, i32* %38, align 4, !dbg !9754
  %93 = icmp ult i32 %91, %92, !dbg !9755
  br i1 %93, label %50, label %94, !dbg !9756, !llvm.loop !9839

94:                                               ; preds = %90
  %95 = load i32, i32* %5, align 4, !dbg !9842
  call void @llvm.dbg.value(metadata i32 %95, metadata !9711, metadata !DIExpression()), !dbg !9722
  %96 = icmp eq i32 %95, 0, !dbg !9757
  br i1 %96, label %65, label %67, !dbg !9760

97:                                               ; preds = %88, %65, %64
  %98 = phi i32 [ 1, %64 ], [ 0, %65 ], [ 0, %88 ], !dbg !9843
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17, !dbg !9844
  ret i32 %98, !dbg !9844
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !9845 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !9849, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i8* %1, metadata !9850, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i32 %2, metadata !9851, metadata !DIExpression()), !dbg !9853
  call void @llvm.dbg.value(metadata i32 0, metadata !9852, metadata !DIExpression()), !dbg !9853
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !9854
  %5 = load i32, i32* %4, align 4, !dbg !9854
  %6 = icmp eq i32 %5, 0, !dbg !9856
  br i1 %6, label %7, label %15, !dbg !9857

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !9858
  %9 = load i8*, i8** %8, align 4, !dbg !9858
  %10 = icmp eq i8* %9, null, !dbg !9862
  br i1 %10, label %11, label %54, !dbg !9863

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !9864
  %13 = load i8*, i8** %12, align 4, !dbg !9864
  %14 = tail call i32 @xTaskPriorityDisinherit(i8* noundef %13) #18, !dbg !9866
  call void @llvm.dbg.value(metadata i32 %14, metadata !9852, metadata !DIExpression()), !dbg !9853
  store i8* null, i8** %12, align 4, !dbg !9867
  br label %54, !dbg !9868

15:                                               ; preds = %3
  %16 = icmp eq i32 %2, 0, !dbg !9869
  br i1 %16, label %17, label %30, !dbg !9871

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !9872
  %19 = load i8*, i8** %18, align 4, !dbg !9872
  %20 = tail call i8* @memcpy(i8* noundef %19, i8* noundef %1, i32 noundef %5) #18, !dbg !9874
  %21 = load i32, i32* %4, align 4, !dbg !9875
  %22 = load i8*, i8** %18, align 4, !dbg !9876
  %23 = getelementptr inbounds i8, i8* %22, i32 %21, !dbg !9876
  store i8* %23, i8** %18, align 4, !dbg !9876
  %24 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !9877
  %25 = load i8*, i8** %24, align 4, !dbg !9877
  %26 = icmp ult i8* %23, %25, !dbg !9879
  br i1 %26, label %54, label %27, !dbg !9880

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !9881
  %29 = load i8*, i8** %28, align 4, !dbg !9881
  store i8* %29, i8** %18, align 4, !dbg !9883
  br label %54, !dbg !9884

30:                                               ; preds = %15
  %31 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !9885
  %32 = load i8*, i8** %31, align 4, !dbg !9885
  %33 = tail call i8* @memcpy(i8* noundef %32, i8* noundef %1, i32 noundef %5) #18, !dbg !9887
  %34 = load i32, i32* %4, align 4, !dbg !9888
  %35 = load i8*, i8** %31, align 4, !dbg !9889
  %36 = sub i32 0, %34, !dbg !9889
  %37 = getelementptr inbounds i8, i8* %35, i32 %36, !dbg !9889
  store i8* %37, i8** %31, align 4, !dbg !9889
  %38 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !9890
  %39 = load i8*, i8** %38, align 4, !dbg !9890
  %40 = icmp ult i8* %37, %39, !dbg !9892
  br i1 %40, label %41, label %45, !dbg !9893

41:                                               ; preds = %30
  %42 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !9894
  %43 = load i8*, i8** %42, align 4, !dbg !9894
  %44 = getelementptr inbounds i8, i8* %43, i32 %36, !dbg !9896
  store i8* %44, i8** %31, align 4, !dbg !9897
  br label %45, !dbg !9898

45:                                               ; preds = %30, %41
  %46 = icmp eq i32 %2, 2, !dbg !9899
  br i1 %46, label %47, label %54, !dbg !9901

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !9902
  %49 = load volatile i32, i32* %48, align 4, !dbg !9902
  %50 = icmp eq i32 %49, 0, !dbg !9905
  br i1 %50, label %54, label %51, !dbg !9906

51:                                               ; preds = %47
  %52 = load volatile i32, i32* %48, align 4, !dbg !9907
  %53 = add i32 %52, -1, !dbg !9907
  store volatile i32 %53, i32* %48, align 4, !dbg !9907
  br label %54, !dbg !9909

54:                                               ; preds = %17, %27, %45, %51, %47, %11, %7
  %55 = phi i32 [ %14, %11 ], [ 0, %7 ], [ 0, %27 ], [ 0, %17 ], [ 0, %51 ], [ 0, %47 ], [ 0, %45 ], !dbg !9853
  call void @llvm.dbg.value(metadata i32 %55, metadata !9852, metadata !DIExpression()), !dbg !9853
  %56 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !9910
  %57 = load volatile i32, i32* %56, align 4, !dbg !9911
  %58 = add i32 %57, 1, !dbg !9911
  store volatile i32 %58, i32* %56, align 4, !dbg !9911
  ret i32 %55, !dbg !9912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !9913 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !9919, metadata !DIExpression()), !dbg !9921
  tail call void @vPortEnterCritical() #18, !dbg !9922
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !9923
  %3 = load volatile i32, i32* %2, align 4, !dbg !9923
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !9926
  %5 = load i32, i32* %4, align 4, !dbg !9926
  %6 = icmp eq i32 %3, %5, !dbg !9927
  %7 = zext i1 %6 to i32
  call void @llvm.dbg.value(metadata i32 %7, metadata !9920, metadata !DIExpression()), !dbg !9921
  tail call void @vPortExitCritical() #18, !dbg !9928
  ret i32 %7, !dbg !9929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !9930 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !9934, metadata !DIExpression()), !dbg !9935
  tail call void @vPortEnterCritical() #18, !dbg !9936
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !9937
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !9937
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 10
  %5 = load volatile i32, i32* %4, align 4, !dbg !9942
  %6 = icmp sgt i32 %5, 0, !dbg !9943
  br i1 %6, label %7, label %19, !dbg !9944

7:                                                ; preds = %1, %14
  %8 = load i32, i32* %3, align 4, !dbg !9937
  %9 = icmp eq i32 %8, 0, !dbg !9937
  br i1 %9, label %19, label %10, !dbg !9945

10:                                               ; preds = %7
  %11 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %2) #18, !dbg !9946
  %12 = icmp eq i32 %11, 0, !dbg !9949
  br i1 %12, label %14, label %13, !dbg !9950

13:                                               ; preds = %10
  tail call void @vTaskMissedYield() #18, !dbg !9951
  br label %14, !dbg !9953

14:                                               ; preds = %13, %10
  %15 = load volatile i32, i32* %4, align 4, !dbg !9954
  %16 = add nsw i32 %15, -1, !dbg !9954
  store volatile i32 %16, i32* %4, align 4, !dbg !9954
  %17 = load volatile i32, i32* %4, align 4, !dbg !9942
  %18 = icmp sgt i32 %17, 0, !dbg !9943
  br i1 %18, label %7, label %19, !dbg !9944, !llvm.loop !9955

19:                                               ; preds = %14, %7, %1
  store volatile i32 -1, i32* %4, align 4, !dbg !9957
  tail call void @vPortExitCritical() #18, !dbg !9958
  tail call void @vPortEnterCritical() #18, !dbg !9959
  %20 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !9960
  %21 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %20, i32 0, i32 0, !dbg !9960
  %22 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9
  %23 = load volatile i32, i32* %22, align 4, !dbg !9964
  %24 = icmp sgt i32 %23, 0, !dbg !9965
  br i1 %24, label %25, label %37, !dbg !9966

25:                                               ; preds = %19, %32
  %26 = load i32, i32* %21, align 4, !dbg !9960
  %27 = icmp eq i32 %26, 0, !dbg !9960
  br i1 %27, label %37, label %28, !dbg !9967

28:                                               ; preds = %25
  %29 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %20) #18, !dbg !9968
  %30 = icmp eq i32 %29, 0, !dbg !9971
  br i1 %30, label %32, label %31, !dbg !9972

31:                                               ; preds = %28
  tail call void @vTaskMissedYield() #18, !dbg !9973
  br label %32, !dbg !9975

32:                                               ; preds = %28, %31
  %33 = load volatile i32, i32* %22, align 4, !dbg !9976
  %34 = add nsw i32 %33, -1, !dbg !9976
  store volatile i32 %34, i32* %22, align 4, !dbg !9976
  %35 = load volatile i32, i32* %22, align 4, !dbg !9964
  %36 = icmp sgt i32 %35, 0, !dbg !9965
  br i1 %36, label %25, label %37, !dbg !9966, !llvm.loop !9977

37:                                               ; preds = %32, %25, %19
  store volatile i32 -1, i32* %22, align 4, !dbg !9979
  tail call void @vPortExitCritical() #18, !dbg !9980
  ret void, !dbg !9981
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveMutexRecursive(i8* noundef %0) local_unnamed_addr #0 !dbg !9982 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9986, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata i8* %0, metadata !9988, metadata !DIExpression()), !dbg !9989
  %2 = icmp eq i8* %0, null, !dbg !9990
  br i1 %2, label %3, label %4, !dbg !9992

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 494) #18, !dbg !9993
  br label %4, !dbg !9993

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9995
  %6 = bitcast i8* %5 to i8**, !dbg !9995
  %7 = load i8*, i8** %6, align 4, !dbg !9995
  %8 = tail call i8* @xTaskGetCurrentTaskHandle() #18, !dbg !9997
  %9 = icmp eq i8* %7, %8, !dbg !9998
  br i1 %9, label %10, label %18, !dbg !9999

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !10000
  %12 = bitcast i8* %11 to i32*, !dbg !10002
  %13 = load i32, i32* %12, align 4, !dbg !10003
  %14 = add i32 %13, -1, !dbg !10003
  store i32 %14, i32* %12, align 4, !dbg !10003
  %15 = icmp eq i32 %14, 0, !dbg !10004
  br i1 %15, label %16, label %18, !dbg !10006

16:                                               ; preds = %10
  %17 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %0, i8* noundef null, i32 noundef 0, i32 noundef 0) #20, !dbg !10007
  br label %18, !dbg !10009

18:                                               ; preds = %4, %16, %10
  %19 = phi i32 [ 1, %10 ], [ 1, %16 ], [ 0, %4 ], !dbg !10010
  call void @llvm.dbg.value(metadata i32 %19, metadata !9987, metadata !DIExpression()), !dbg !9989
  ret i32 %19, !dbg !10011
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueTakeMutexRecursive(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10012 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10016, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.value(metadata i32 %1, metadata !10017, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.value(metadata i8* %0, metadata !10019, metadata !DIExpression()), !dbg !10020
  %3 = icmp eq i8* %0, null, !dbg !10021
  br i1 %3, label %4, label %5, !dbg !10023

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.169, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 549) #18, !dbg !10024
  br label %5, !dbg !10024

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10026
  %7 = bitcast i8* %6 to i8**, !dbg !10026
  %8 = load i8*, i8** %7, align 4, !dbg !10026
  %9 = tail call i8* @xTaskGetCurrentTaskHandle() #18, !dbg !10028
  %10 = icmp eq i8* %8, %9, !dbg !10029
  br i1 %10, label %14, label %11, !dbg !10030

11:                                               ; preds = %5
  %12 = tail call i32 @xQueueGenericReceive(i8* noundef nonnull %0, i8* noundef null, i32 noundef %1, i32 noundef 0) #20, !dbg !10031
  call void @llvm.dbg.value(metadata i32 %12, metadata !10018, metadata !DIExpression()), !dbg !10020
  %13 = icmp eq i32 %12, 1, !dbg !10033
  br i1 %13, label %14, label %19, !dbg !10035

14:                                               ; preds = %11, %5
  %15 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !10036
  %16 = bitcast i8* %15 to i32*, !dbg !10036
  %17 = load i32, i32* %16, align 4, !dbg !10036
  %18 = add i32 %17, 1, !dbg !10036
  store i32 %18, i32* %16, align 4, !dbg !10036
  br label %19, !dbg !10037

19:                                               ; preds = %14, %11
  %20 = phi i32 [ %12, %11 ], [ 1, %14 ], !dbg !10036
  call void @llvm.dbg.value(metadata i32 %20, metadata !10018, metadata !DIExpression()), !dbg !10020
  ret i32 %20, !dbg !10037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReceive(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10038 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10042, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.value(metadata i8* %1, metadata !10043, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.value(metadata i32 %2, metadata !10044, metadata !DIExpression()), !dbg !10050
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !10045, metadata !DIExpression()), !dbg !10050
  call void @llvm.dbg.value(metadata i32 0, metadata !10046, metadata !DIExpression()), !dbg !10050
  %7 = bitcast %struct.hal_cache_region_config_t* %6 to i8*, !dbg !10051
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #17, !dbg !10051
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %6, metadata !10047, metadata !DIExpression()), !dbg !10052
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10053
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !10049, metadata !DIExpression()), !dbg !10050
  %9 = icmp eq i8* %0, null, !dbg !10054
  br i1 %9, label %10, label %11, !dbg !10056

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1368) #18, !dbg !10057
  br label %11, !dbg !10057

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !10059
  br i1 %12, label %13, label %19, !dbg !10059

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10059
  %15 = bitcast i8* %14 to i32*, !dbg !10059
  %16 = load i32, i32* %15, align 4, !dbg !10059
  %17 = icmp eq i32 %16, 0, !dbg !10059
  br i1 %17, label %19, label %18, !dbg !10061

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1369) #18, !dbg !10062
  br label %19, !dbg !10062

19:                                               ; preds = %11, %18, %13
  %20 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !10064
  %21 = icmp eq i32 %20, 0, !dbg !10064
  call void @llvm.dbg.value(metadata i32 %2, metadata !10044, metadata !DIExpression()), !dbg !10050
  %22 = icmp ne i32 %2, 0, !dbg !10064
  %23 = and i1 %21, %22, !dbg !10064
  br i1 %23, label %24, label %25, !dbg !10067

24:                                               ; preds = %19
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1372) #18, !dbg !10068
  br label %25, !dbg !10068

25:                                               ; preds = %24, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !10046, metadata !DIExpression()), !dbg !10050
  call void @vPortEnterCritical() #18, !dbg !10070
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10074
  %27 = bitcast i8* %26 to i32*, !dbg !10074
  %28 = load volatile i32, i32* %27, align 4, !dbg !10074
  %29 = icmp eq i32 %28, 0, !dbg !10077
  br i1 %29, label %30, label %41, !dbg !10078

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %0, i32 68
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds i8, i8* %0, i32 72
  %34 = bitcast i8* %33 to i32*
  %35 = bitcast i8* %0 to i8**
  %36 = getelementptr inbounds i8, i8* %0, i32 4
  %37 = bitcast i8* %36 to i8**
  %38 = getelementptr inbounds i8, i8* %0, i32 36
  %39 = bitcast i8* %38 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !10044, metadata !DIExpression()), !dbg !10050
  %40 = icmp eq i32 %2, 0, !dbg !10079
  br i1 %40, label %77, label %78, !dbg !10082

41:                                               ; preds = %107, %25
  %42 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !10083
  %43 = bitcast i8* %42 to i8**, !dbg !10085
  %44 = load i8*, i8** %43, align 4, !dbg !10085
  call void @llvm.dbg.value(metadata i8* %44, metadata !10048, metadata !DIExpression()), !dbg !10050
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1) #20, !dbg !10086
  %45 = icmp eq i32 %3, 0, !dbg !10087
  br i1 %45, label %46, label %66, !dbg !10089

46:                                               ; preds = %41
  %47 = load volatile i32, i32* %27, align 4, !dbg !10090
  %48 = add i32 %47, -1, !dbg !10090
  store volatile i32 %48, i32* %27, align 4, !dbg !10090
  %49 = bitcast i8* %0 to i8**, !dbg !10092
  %50 = load i8*, i8** %49, align 4, !dbg !10092
  %51 = icmp eq i8* %50, null, !dbg !10095
  br i1 %51, label %52, label %56, !dbg !10096

52:                                               ; preds = %46
  %53 = call i8* @pvTaskIncrementMutexHeldCount() #18, !dbg !10097
  %54 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10099
  %55 = bitcast i8* %54 to i8**, !dbg !10099
  store i8* %53, i8** %55, align 4, !dbg !10100
  br label %56, !dbg !10101

56:                                               ; preds = %46, %52
  %57 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !10102
  %58 = bitcast i8* %57 to i32*, !dbg !10102
  %59 = load i32, i32* %58, align 4, !dbg !10102
  %60 = icmp eq i32 %59, 0, !dbg !10102
  br i1 %60, label %76, label %61, !dbg !10104

61:                                               ; preds = %56
  %62 = bitcast i8* %57 to %struct.xLIST*, !dbg !10102
  %63 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %62) #18, !dbg !10105
  %64 = icmp eq i32 %63, 1, !dbg !10108
  br i1 %64, label %65, label %76, !dbg !10109

65:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10110
  call void asm sideeffect "dsb", ""() #17, !dbg !10110, !srcloc !10113
  call void asm sideeffect "isb", ""() #17, !dbg !10110, !srcloc !10114
  br label %76, !dbg !10115

66:                                               ; preds = %41
  store i8* %44, i8** %43, align 4, !dbg !10116
  %67 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10118
  %68 = bitcast i8* %67 to i32*, !dbg !10118
  %69 = load i32, i32* %68, align 4, !dbg !10118
  %70 = icmp eq i32 %69, 0, !dbg !10118
  br i1 %70, label %76, label %71, !dbg !10120

71:                                               ; preds = %66
  %72 = bitcast i8* %67 to %struct.xLIST*, !dbg !10118
  %73 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %72) #18, !dbg !10121
  %74 = icmp eq i32 %73, 0, !dbg !10124
  br i1 %74, label %76, label %75, !dbg !10125

75:                                               ; preds = %71
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10126
  call void asm sideeffect "dsb", ""() #17, !dbg !10126, !srcloc !10129
  call void asm sideeffect "isb", ""() #17, !dbg !10126, !srcloc !10130
  br label %76, !dbg !10131

76:                                               ; preds = %71, %75, %66, %61, %65, %56
  call void @vPortExitCritical() #18, !dbg !10132
  br label %113, !dbg !10133

77:                                               ; preds = %110, %30
  call void @vPortExitCritical() #18, !dbg !10134
  br label %113, !dbg !10136

78:                                               ; preds = %30
  call void @vTaskSetTimeOutState(%struct.hal_cache_region_config_t* noundef nonnull %6) #18, !dbg !10137
  call void @llvm.dbg.value(metadata i32 1, metadata !10046, metadata !DIExpression()), !dbg !10050
  br label %79, !dbg !10140

79:                                               ; preds = %110, %78
  call void @llvm.dbg.value(metadata i32 1, metadata !10046, metadata !DIExpression()), !dbg !10050
  call void @vPortExitCritical() #18, !dbg !10141
  call void @vTaskSuspendAll() #18, !dbg !10142
  call void @vPortEnterCritical() #18, !dbg !10143
  %80 = load volatile i32, i32* %32, align 4, !dbg !10144
  %81 = icmp eq i32 %80, -1, !dbg !10144
  br i1 %81, label %82, label %83, !dbg !10147

82:                                               ; preds = %79
  store volatile i32 0, i32* %32, align 4, !dbg !10148
  br label %83, !dbg !10148

83:                                               ; preds = %82, %79
  %84 = load volatile i32, i32* %34, align 4, !dbg !10150
  %85 = icmp eq i32 %84, -1, !dbg !10150
  br i1 %85, label %86, label %87, !dbg !10147

86:                                               ; preds = %83
  store volatile i32 0, i32* %34, align 4, !dbg !10152
  br label %87, !dbg !10152

87:                                               ; preds = %86, %83
  call void @vPortExitCritical() #18, !dbg !10143
  call void @llvm.dbg.value(metadata i32* %5, metadata !10044, metadata !DIExpression(DW_OP_deref)), !dbg !10050
  %88 = call i32 @xTaskCheckForTimeOut(%struct.hal_cache_region_config_t* noundef nonnull %6, i32* noundef nonnull %5) #18, !dbg !10154
  %89 = icmp eq i32 %88, 0, !dbg !10156
  br i1 %89, label %90, label %105, !dbg !10157

90:                                               ; preds = %87
  %91 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !10158
  %92 = icmp eq i32 %91, 0, !dbg !10161
  br i1 %92, label %103, label %93, !dbg !10162

93:                                               ; preds = %90
  %94 = load i8*, i8** %35, align 4, !dbg !10163
  %95 = icmp eq i8* %94, null, !dbg !10167
  br i1 %95, label %96, label %98, !dbg !10168

96:                                               ; preds = %93
  call void @vPortEnterCritical() #18, !dbg !10169
  %97 = load i8*, i8** %37, align 4, !dbg !10171
  call void @vTaskPriorityInherit(i8* noundef %97) #18, !dbg !10173
  call void @vPortExitCritical() #18, !dbg !10174
  br label %98, !dbg !10175

98:                                               ; preds = %93, %96
  %99 = load i32, i32* %5, align 4, !dbg !10176
  call void @llvm.dbg.value(metadata i32 %99, metadata !10044, metadata !DIExpression()), !dbg !10050
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %39, i32 noundef %99) #18, !dbg !10177
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !10178
  %100 = call i32 @xTaskResumeAll() #18, !dbg !10179
  %101 = icmp eq i32 %100, 0, !dbg !10181
  br i1 %101, label %102, label %107, !dbg !10182

102:                                              ; preds = %98
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10183
  call void asm sideeffect "dsb", ""() #17, !dbg !10183, !srcloc !10186
  call void asm sideeffect "isb", ""() #17, !dbg !10183, !srcloc !10187
  br label %107, !dbg !10188

103:                                              ; preds = %90
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !10189
  %104 = call i32 @xTaskResumeAll() #18, !dbg !10191
  br label %107

105:                                              ; preds = %87
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #20, !dbg !10192
  %106 = call i32 @xTaskResumeAll() #18, !dbg !10194
  br label %113, !dbg !10195

107:                                              ; preds = %103, %98, %102
  call void @llvm.dbg.value(metadata i32 undef, metadata !10046, metadata !DIExpression()), !dbg !10050
  call void @vPortEnterCritical() #18, !dbg !10070
  %108 = load volatile i32, i32* %27, align 4, !dbg !10074
  %109 = icmp eq i32 %108, 0, !dbg !10077
  br i1 %109, label %110, label %41, !dbg !10078, !llvm.loop !10196

110:                                              ; preds = %107
  %111 = load i32, i32* %5, align 4, !dbg !10199
  call void @llvm.dbg.value(metadata i32 %111, metadata !10044, metadata !DIExpression()), !dbg !10050
  %112 = icmp eq i32 %111, 0, !dbg !10079
  br i1 %112, label %77, label %79, !dbg !10082

113:                                              ; preds = %105, %77, %76
  %114 = phi i32 [ 1, %76 ], [ 0, %77 ], [ 0, %105 ], !dbg !10200
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #17, !dbg !10201
  ret i32 %114, !dbg !10201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nocapture noundef %0, i8* noundef %1) unnamed_addr #0 !dbg !10202 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !10206, metadata !DIExpression()), !dbg !10208
  call void @llvm.dbg.value(metadata i8* %1, metadata !10207, metadata !DIExpression()), !dbg !10208
  %3 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !10209
  %4 = load i32, i32* %3, align 4, !dbg !10209
  %5 = icmp eq i32 %4, 0, !dbg !10211
  br i1 %5, label %19, label %6, !dbg !10212

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !10213
  %8 = load i8*, i8** %7, align 4, !dbg !10215
  %9 = getelementptr inbounds i8, i8* %8, i32 %4, !dbg !10215
  store i8* %9, i8** %7, align 4, !dbg !10215
  %10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !10216
  %11 = load i8*, i8** %10, align 4, !dbg !10216
  %12 = icmp ult i8* %9, %11, !dbg !10218
  br i1 %12, label %16, label %13, !dbg !10219

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !10220
  %15 = load i8*, i8** %14, align 4, !dbg !10220
  store i8* %15, i8** %7, align 4, !dbg !10222
  br label %16, !dbg !10223

16:                                               ; preds = %6, %13
  %17 = phi i8* [ %9, %6 ], [ %15, %13 ], !dbg !10224
  %18 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %17, i32 noundef %4) #18, !dbg !10225
  br label %19, !dbg !10226

19:                                               ; preds = %16, %2
  ret void, !dbg !10227
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef %0) unnamed_addr #0 !dbg !10228 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !10230, metadata !DIExpression()), !dbg !10232
  tail call void @vPortEnterCritical() #18, !dbg !10233
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !10234
  %3 = load volatile i32, i32* %2, align 4, !dbg !10234
  %4 = icmp eq i32 %3, 0, !dbg !10237
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !10231, metadata !DIExpression()), !dbg !10232
  tail call void @vPortExitCritical() #18, !dbg !10238
  ret i32 %5, !dbg !10239
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateCountingSemaphore(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10240 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10244, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i32 %1, metadata !10245, metadata !DIExpression()), !dbg !10247
  %3 = icmp eq i32 %0, 0, !dbg !10248
  br i1 %3, label %4, label %5, !dbg !10250

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 590) #18, !dbg !10251
  br label %5, !dbg !10251

5:                                                ; preds = %4, %2
  %6 = icmp ugt i32 %1, %0, !dbg !10253
  br i1 %6, label %7, label %8, !dbg !10255

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.172, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 591) #18, !dbg !10256
  br label %8, !dbg !10256

8:                                                ; preds = %7, %5
  %9 = tail call i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef 0, i8 noundef zeroext 2) #20, !dbg !10258
  call void @llvm.dbg.value(metadata i8* %9, metadata !10246, metadata !DIExpression()), !dbg !10247
  %10 = icmp eq i8* %9, null, !dbg !10259
  br i1 %10, label %14, label %11, !dbg !10259

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %9, i32 56, !dbg !10260
  %13 = bitcast i8* %12 to i32*, !dbg !10260
  store volatile i32 %1, i32* %13, align 4, !dbg !10263
  br label %15, !dbg !10264

14:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 606) #18, !dbg !10265
  br label %15, !dbg !10265

15:                                               ; preds = %11, %14
  ret i8* %9, !dbg !10268
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSendFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10273, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.value(metadata i8* %1, metadata !10274, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.value(metadata i32* %2, metadata !10275, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.value(metadata i32 %3, metadata !10276, metadata !DIExpression()), !dbg !10280
  %5 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10281
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %5, metadata !10279, metadata !DIExpression()), !dbg !10280
  %6 = icmp eq i8* %0, null, !dbg !10282
  br i1 %6, label %7, label %8, !dbg !10284

7:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1064) #18, !dbg !10285
  br label %8, !dbg !10285

8:                                                ; preds = %7, %4
  %9 = icmp eq i8* %1, null, !dbg !10287
  br i1 %9, label %10, label %16, !dbg !10287

10:                                               ; preds = %8
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10287
  %12 = bitcast i8* %11 to i32*, !dbg !10287
  %13 = load i32, i32* %12, align 4, !dbg !10287
  %14 = icmp eq i32 %13, 0, !dbg !10287
  br i1 %14, label %16, label %15, !dbg !10289

15:                                               ; preds = %10
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.166, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1065) #18, !dbg !10290
  br label %16, !dbg !10290

16:                                               ; preds = %8, %15, %10
  %17 = icmp eq i32 %3, 2, !dbg !10292
  br i1 %17, label %18, label %24, !dbg !10292

18:                                               ; preds = %16
  %19 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10292
  %20 = bitcast i8* %19 to i32*, !dbg !10292
  %21 = load i32, i32* %20, align 4, !dbg !10292
  %22 = icmp eq i32 %21, 1, !dbg !10292
  br i1 %22, label %24, label %23, !dbg !10294

23:                                               ; preds = %18
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1066) #18, !dbg !10295
  br label %24, !dbg !10295

24:                                               ; preds = %16, %23, %18
  tail call void @vPortValidateInterruptPriority() #18, !dbg !10297
  %25 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !10298, !srcloc !10304
  call void @llvm.dbg.value(metadata i32 undef, metadata !10301, metadata !DIExpression()) #17, !dbg !10305
  call void @llvm.dbg.value(metadata i32 undef, metadata !10302, metadata !DIExpression()) #17, !dbg !10305
  call void @llvm.dbg.value(metadata i32 undef, metadata !10278, metadata !DIExpression()), !dbg !10280
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10306
  %27 = bitcast i8* %26 to i32*, !dbg !10306
  %28 = load volatile i32, i32* %27, align 4, !dbg !10306
  %29 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10309
  %30 = bitcast i8* %29 to i32*, !dbg !10309
  %31 = load i32, i32* %30, align 4, !dbg !10309
  %32 = icmp ult i32 %28, %31, !dbg !10310
  %33 = or i1 %17, %32, !dbg !10311
  br i1 %33, label %34, label %55, !dbg !10311

34:                                               ; preds = %24
  %35 = tail call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %5, i8* noundef %1, i32 noundef %3) #20, !dbg !10312
  %36 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !10314
  %37 = bitcast i8* %36 to i32*, !dbg !10314
  %38 = load volatile i32, i32* %37, align 4, !dbg !10314
  %39 = icmp eq i32 %38, -1, !dbg !10316
  br i1 %39, label %40, label %52, !dbg !10317

40:                                               ; preds = %34
  %41 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10318
  %42 = bitcast i8* %41 to i32*, !dbg !10318
  %43 = load i32, i32* %42, align 4, !dbg !10318
  %44 = icmp eq i32 %43, 0, !dbg !10318
  br i1 %44, label %55, label %45, !dbg !10322

45:                                               ; preds = %40
  %46 = bitcast i8* %41 to %struct.xLIST*, !dbg !10318
  %47 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %46) #18, !dbg !10323
  %48 = icmp ne i32 %47, 0, !dbg !10326
  %49 = icmp ne i32* %2, null
  %50 = and i1 %49, %48, !dbg !10327
  br i1 %50, label %51, label %55, !dbg !10327

51:                                               ; preds = %45
  store i32 1, i32* %2, align 4, !dbg !10328
  br label %55, !dbg !10332

52:                                               ; preds = %34
  %53 = load volatile i32, i32* %37, align 4, !dbg !10333
  %54 = add nsw i32 %53, 1, !dbg !10333
  store volatile i32 %54, i32* %37, align 4, !dbg !10333
  br label %55

55:                                               ; preds = %24, %52, %40, %51, %45
  %56 = phi i32 [ 1, %45 ], [ 1, %51 ], [ 1, %40 ], [ 1, %52 ], [ 0, %24 ], !dbg !10335
  %57 = extractvalue { i32, i32 } %25, 0, !dbg !10298
  call void @llvm.dbg.value(metadata i32 %57, metadata !10301, metadata !DIExpression()) #17, !dbg !10305
  call void @llvm.dbg.value(metadata i32 %57, metadata !10278, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.value(metadata i32 %56, metadata !10277, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.value(metadata i32 undef, metadata !10336, metadata !DIExpression()) #17, !dbg !10339
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %57) #17, !dbg !10341, !srcloc !10342
  ret i32 %56, !dbg !10343
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !10344 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10348, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32* %1, metadata !10349, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i8* %0, metadata !10352, metadata !DIExpression()), !dbg !10353
  %3 = icmp eq i8* %0, null, !dbg !10354
  br i1 %3, label %4, label %5, !dbg !10356

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1213) #18, !dbg !10357
  br label %5, !dbg !10357

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10359
  %7 = bitcast i8* %6 to i32*, !dbg !10359
  %8 = load i32, i32* %7, align 4, !dbg !10359
  %9 = icmp eq i32 %8, 0, !dbg !10359
  br i1 %9, label %11, label %10, !dbg !10361

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1216) #18, !dbg !10362
  br label %11, !dbg !10362

11:                                               ; preds = %10, %5
  tail call void @vPortValidateInterruptPriority() #18, !dbg !10364
  %12 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !10365, !srcloc !10304
  call void @llvm.dbg.value(metadata i32 undef, metadata !10301, metadata !DIExpression()) #17, !dbg !10367
  call void @llvm.dbg.value(metadata i32 undef, metadata !10302, metadata !DIExpression()) #17, !dbg !10367
  call void @llvm.dbg.value(metadata i32 undef, metadata !10351, metadata !DIExpression()), !dbg !10353
  %13 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10368
  %14 = bitcast i8* %13 to i32*, !dbg !10368
  %15 = load volatile i32, i32* %14, align 4, !dbg !10368
  %16 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10371
  %17 = bitcast i8* %16 to i32*, !dbg !10371
  %18 = load i32, i32* %17, align 4, !dbg !10371
  %19 = icmp ult i32 %15, %18, !dbg !10372
  br i1 %19, label %20, label %42, !dbg !10373

20:                                               ; preds = %11
  %21 = load volatile i32, i32* %14, align 4, !dbg !10374
  %22 = add i32 %21, 1, !dbg !10374
  store volatile i32 %22, i32* %14, align 4, !dbg !10374
  %23 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !10376
  %24 = bitcast i8* %23 to i32*, !dbg !10376
  %25 = load volatile i32, i32* %24, align 4, !dbg !10376
  %26 = icmp eq i32 %25, -1, !dbg !10378
  br i1 %26, label %27, label %39, !dbg !10379

27:                                               ; preds = %20
  %28 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10380
  %29 = bitcast i8* %28 to i32*, !dbg !10380
  %30 = load i32, i32* %29, align 4, !dbg !10380
  %31 = icmp eq i32 %30, 0, !dbg !10380
  br i1 %31, label %42, label %32, !dbg !10384

32:                                               ; preds = %27
  %33 = bitcast i8* %28 to %struct.xLIST*, !dbg !10380
  %34 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %33) #18, !dbg !10385
  %35 = icmp ne i32 %34, 0, !dbg !10388
  %36 = icmp ne i32* %1, null
  %37 = and i1 %36, %35, !dbg !10389
  br i1 %37, label %38, label %42, !dbg !10389

38:                                               ; preds = %32
  store i32 1, i32* %1, align 4, !dbg !10390
  br label %42, !dbg !10394

39:                                               ; preds = %20
  %40 = load volatile i32, i32* %24, align 4, !dbg !10395
  %41 = add nsw i32 %40, 1, !dbg !10395
  store volatile i32 %41, i32* %24, align 4, !dbg !10395
  br label %42

42:                                               ; preds = %11, %39, %27, %38, %32
  %43 = phi i32 [ 1, %32 ], [ 1, %38 ], [ 1, %27 ], [ 1, %39 ], [ 0, %11 ], !dbg !10397
  %44 = extractvalue { i32, i32 } %12, 0, !dbg !10365
  call void @llvm.dbg.value(metadata i32 %44, metadata !10301, metadata !DIExpression()) #17, !dbg !10367
  call void @llvm.dbg.value(metadata i32 %44, metadata !10351, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %43, metadata !10350, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 undef, metadata !10336, metadata !DIExpression()) #17, !dbg !10398
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %44) #17, !dbg !10400, !srcloc !10342
  ret i32 %43, !dbg !10401
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueReceiveFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2) local_unnamed_addr #0 !dbg !10402 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10406, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.value(metadata i8* %1, metadata !10407, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.value(metadata i32* %2, metadata !10408, metadata !DIExpression()), !dbg !10412
  %4 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10413
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %4, metadata !10411, metadata !DIExpression()), !dbg !10412
  %5 = icmp eq i8* %0, null, !dbg !10414
  br i1 %5, label %6, label %7, !dbg !10416

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1556) #18, !dbg !10417
  br label %7, !dbg !10417

7:                                                ; preds = %6, %3
  %8 = icmp eq i8* %1, null, !dbg !10419
  br i1 %8, label %9, label %15, !dbg !10419

9:                                                ; preds = %7
  %10 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10419
  %11 = bitcast i8* %10 to i32*, !dbg !10419
  %12 = load i32, i32* %11, align 4, !dbg !10419
  %13 = icmp eq i32 %12, 0, !dbg !10419
  br i1 %13, label %15, label %14, !dbg !10421

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1557) #18, !dbg !10422
  br label %15, !dbg !10422

15:                                               ; preds = %7, %14, %9
  tail call void @vPortValidateInterruptPriority() #18, !dbg !10424
  %16 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !10425, !srcloc !10304
  call void @llvm.dbg.value(metadata i32 undef, metadata !10301, metadata !DIExpression()) #17, !dbg !10427
  call void @llvm.dbg.value(metadata i32 undef, metadata !10302, metadata !DIExpression()) #17, !dbg !10427
  call void @llvm.dbg.value(metadata i32 undef, metadata !10410, metadata !DIExpression()), !dbg !10412
  %17 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10428
  %18 = bitcast i8* %17 to i32*, !dbg !10428
  %19 = load volatile i32, i32* %18, align 4, !dbg !10428
  %20 = icmp eq i32 %19, 0, !dbg !10431
  br i1 %20, label %43, label %21, !dbg !10432

21:                                               ; preds = %15
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %4, i8* noundef %1) #20, !dbg !10433
  %22 = load volatile i32, i32* %18, align 4, !dbg !10435
  %23 = add i32 %22, -1, !dbg !10435
  store volatile i32 %23, i32* %18, align 4, !dbg !10435
  %24 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !10436
  %25 = bitcast i8* %24 to i32*, !dbg !10436
  %26 = load volatile i32, i32* %25, align 4, !dbg !10436
  %27 = icmp eq i32 %26, -1, !dbg !10438
  br i1 %27, label %28, label %40, !dbg !10439

28:                                               ; preds = %21
  %29 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !10440
  %30 = bitcast i8* %29 to i32*, !dbg !10440
  %31 = load i32, i32* %30, align 4, !dbg !10440
  %32 = icmp eq i32 %31, 0, !dbg !10440
  br i1 %32, label %43, label %33, !dbg !10443

33:                                               ; preds = %28
  %34 = bitcast i8* %29 to %struct.xLIST*, !dbg !10440
  %35 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %34) #18, !dbg !10444
  %36 = icmp ne i32 %35, 0, !dbg !10447
  %37 = icmp ne i32* %2, null
  %38 = and i1 %37, %36, !dbg !10448
  br i1 %38, label %39, label %43, !dbg !10448

39:                                               ; preds = %33
  store i32 1, i32* %2, align 4, !dbg !10449
  br label %43, !dbg !10453

40:                                               ; preds = %21
  %41 = load volatile i32, i32* %25, align 4, !dbg !10454
  %42 = add nsw i32 %41, 1, !dbg !10454
  store volatile i32 %42, i32* %25, align 4, !dbg !10454
  br label %43

43:                                               ; preds = %15, %40, %28, %39, %33
  %44 = phi i32 [ 1, %33 ], [ 1, %39 ], [ 1, %28 ], [ 1, %40 ], [ 0, %15 ], !dbg !10456
  %45 = extractvalue { i32, i32 } %16, 0, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %45, metadata !10301, metadata !DIExpression()) #17, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %45, metadata !10410, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.value(metadata i32 %44, metadata !10409, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.value(metadata i32 undef, metadata !10336, metadata !DIExpression()) #17, !dbg !10457
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %45) #17, !dbg !10459, !srcloc !10342
  ret i32 %44, !dbg !10460
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueuePeekFromISR(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !10461 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10465, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata i8* %1, metadata !10466, metadata !DIExpression()), !dbg !10471
  %3 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10472
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %3, metadata !10470, metadata !DIExpression()), !dbg !10471
  %4 = icmp eq i8* %0, null, !dbg !10473
  br i1 %4, label %5, label %6, !dbg !10475

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1644) #18, !dbg !10476
  br label %6, !dbg !10476

6:                                                ; preds = %5, %2
  %7 = icmp eq i8* %1, null, !dbg !10478
  br i1 %7, label %8, label %14, !dbg !10478

8:                                                ; preds = %6
  %9 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10478
  %10 = bitcast i8* %9 to i32*, !dbg !10478
  %11 = load i32, i32* %10, align 4, !dbg !10478
  %12 = icmp eq i32 %11, 0, !dbg !10478
  br i1 %12, label %14, label %13, !dbg !10480

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1645) #18, !dbg !10481
  br label %14, !dbg !10481

14:                                               ; preds = %6, %13, %8
  %15 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !10483
  %16 = bitcast i8* %15 to i32*, !dbg !10483
  %17 = load i32, i32* %16, align 4, !dbg !10483
  %18 = icmp eq i32 %17, 0, !dbg !10483
  br i1 %18, label %19, label %20, !dbg !10485

19:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1646) #18, !dbg !10486
  br label %20, !dbg !10486

20:                                               ; preds = %19, %14
  tail call void @vPortValidateInterruptPriority() #18, !dbg !10488
  %21 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !10489, !srcloc !10304
  call void @llvm.dbg.value(metadata i32 undef, metadata !10301, metadata !DIExpression()) #17, !dbg !10491
  call void @llvm.dbg.value(metadata i32 undef, metadata !10302, metadata !DIExpression()) #17, !dbg !10491
  call void @llvm.dbg.value(metadata i32 undef, metadata !10468, metadata !DIExpression()), !dbg !10471
  %22 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10492
  %23 = bitcast i8* %22 to i32*, !dbg !10492
  %24 = load volatile i32, i32* %23, align 4, !dbg !10492
  %25 = icmp eq i32 %24, 0, !dbg !10495
  br i1 %25, label %30, label %26, !dbg !10496

26:                                               ; preds = %20
  %27 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !10497
  %28 = bitcast i8* %27 to i8**, !dbg !10499
  %29 = load i8*, i8** %28, align 4, !dbg !10499
  call void @llvm.dbg.value(metadata i8* %29, metadata !10469, metadata !DIExpression()), !dbg !10471
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %3, i8* noundef %1) #20, !dbg !10500
  store i8* %29, i8** %28, align 4, !dbg !10501
  call void @llvm.dbg.value(metadata i32 1, metadata !10467, metadata !DIExpression()), !dbg !10471
  br label %30, !dbg !10502

30:                                               ; preds = %20, %26
  %31 = phi i32 [ 1, %26 ], [ 0, %20 ], !dbg !10503
  %32 = extractvalue { i32, i32 } %21, 0, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %32, metadata !10301, metadata !DIExpression()) #17, !dbg !10491
  call void @llvm.dbg.value(metadata i32 %32, metadata !10468, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata i32 %31, metadata !10467, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata i32 undef, metadata !10336, metadata !DIExpression()) #17, !dbg !10504
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %32) #17, !dbg !10506, !srcloc !10342
  ret i32 %31, !dbg !10507
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaiting(i8* noundef %0) local_unnamed_addr #0 !dbg !10508 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10513, metadata !DIExpression()), !dbg !10515
  %2 = icmp eq i8* %0, null, !dbg !10516
  br i1 %2, label %3, label %4, !dbg !10518

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1695) #18, !dbg !10519
  br label %4, !dbg !10519

4:                                                ; preds = %3, %1
  tail call void @vPortEnterCritical() #18, !dbg !10521
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10522
  %6 = bitcast i8* %5 to i32*, !dbg !10522
  %7 = load volatile i32, i32* %6, align 4, !dbg !10522
  call void @llvm.dbg.value(metadata i32 %7, metadata !10514, metadata !DIExpression()), !dbg !10515
  tail call void @vPortExitCritical() #18, !dbg !10524
  ret i32 %7, !dbg !10525
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueSpacesAvailable(i8* noundef %0) local_unnamed_addr #0 !dbg !10526 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10528, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i8* %0, metadata !10530, metadata !DIExpression()), !dbg !10531
  %2 = icmp eq i8* %0, null, !dbg !10532
  br i1 %2, label %3, label %4, !dbg !10534

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1713) #18, !dbg !10535
  br label %4, !dbg !10535

4:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !10530, metadata !DIExpression()), !dbg !10531
  tail call void @vPortEnterCritical() #18, !dbg !10537
  %5 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10538
  %6 = bitcast i8* %5 to i32*, !dbg !10538
  %7 = load i32, i32* %6, align 4, !dbg !10538
  %8 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10540
  %9 = bitcast i8* %8 to i32*, !dbg !10540
  %10 = load volatile i32, i32* %9, align 4, !dbg !10540
  %11 = sub i32 %7, %10, !dbg !10541
  call void @llvm.dbg.value(metadata i32 %11, metadata !10529, metadata !DIExpression()), !dbg !10531
  tail call void @vPortExitCritical() #18, !dbg !10542
  ret i32 %11, !dbg !10543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaitingFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !10544 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10546, metadata !DIExpression()), !dbg !10548
  %2 = icmp eq i8* %0, null, !dbg !10549
  br i1 %2, label %3, label %4, !dbg !10551

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1729) #18, !dbg !10552
  br label %4, !dbg !10552

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10554
  %6 = bitcast i8* %5 to i32*, !dbg !10554
  %7 = load volatile i32, i32* %6, align 4, !dbg !10554
  call void @llvm.dbg.value(metadata i32 %7, metadata !10547, metadata !DIExpression()), !dbg !10548
  ret i32 %7, !dbg !10555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueDelete(i8* noundef %0) local_unnamed_addr #0 !dbg !10556 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10560, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i8* %0, metadata !10561, metadata !DIExpression()), !dbg !10562
  %2 = icmp eq i8* %0, null, !dbg !10563
  br i1 %2, label %3, label %4, !dbg !10565

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 1741) #18, !dbg !10566
  br label %4, !dbg !10566

4:                                                ; preds = %3, %1
  tail call void @vQueueUnregisterQueue(i8* noundef %0) #20, !dbg !10568
  tail call void @vPortFree(i8* noundef %0) #18, !dbg !10570
  ret void, !dbg !10571
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueUnregisterQueue(i8* noundef readnone %0) local_unnamed_addr #15 !dbg !10572 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10574, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.value(metadata i32 0, metadata !10575, metadata !DIExpression()), !dbg !10576
  br label %2, !dbg !10577

2:                                                ; preds = %1, %9
  %3 = phi i32 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !10575, metadata !DIExpression()), !dbg !10576
  %4 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 1, !dbg !10579
  %5 = load i8*, i8** %4, align 4, !dbg !10579
  %6 = icmp eq i8* %5, %0, !dbg !10583
  br i1 %6, label %7, label %9, !dbg !10584

7:                                                ; preds = %2
  %8 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 0, !dbg !10585
  store i8* null, i8** %8, align 4, !dbg !10587
  br label %12, !dbg !10588

9:                                                ; preds = %2
  %10 = add nuw nsw i32 %3, 1, !dbg !10589
  call void @llvm.dbg.value(metadata i32 %10, metadata !10575, metadata !DIExpression()), !dbg !10576
  %11 = icmp eq i32 %10, 8, !dbg !10590
  br i1 %11, label %12, label %2, !dbg !10577, !llvm.loop !10591

12:                                               ; preds = %9, %7
  ret void, !dbg !10593
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxQueueGetQueueNumber(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !10594 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10598, metadata !DIExpression()), !dbg !10599
  %2 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10600
  %3 = bitcast i8* %2 to i32*, !dbg !10600
  %4 = load i32, i32* %3, align 4, !dbg !10600
  ret i32 %4, !dbg !10601
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vQueueSetQueueNumber(i8* nocapture noundef writeonly %0, i32 noundef %1) local_unnamed_addr #4 !dbg !10602 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10606, metadata !DIExpression()), !dbg !10608
  call void @llvm.dbg.value(metadata i32 %1, metadata !10607, metadata !DIExpression()), !dbg !10608
  %3 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !10609
  %4 = bitcast i8* %3 to i32*, !dbg !10609
  store i32 %1, i32* %4, align 4, !dbg !10610
  ret void, !dbg !10611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i8 @ucQueueGetQueueType(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !10612 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10616, metadata !DIExpression()), !dbg !10617
  %2 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !10618
  %3 = load i8, i8* %2, align 4, !dbg !10618
  ret i8 %3, !dbg !10619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueEmptyFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !10620 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10624, metadata !DIExpression()), !dbg !10626
  %2 = icmp eq i8* %0, null, !dbg !10627
  br i1 %2, label %3, label %4, !dbg !10629

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 2015) #18, !dbg !10630
  br label %4, !dbg !10630

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10632
  %6 = bitcast i8* %5 to i32*, !dbg !10632
  %7 = load volatile i32, i32* %6, align 4, !dbg !10632
  %8 = icmp eq i32 %7, 0, !dbg !10634
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !10625, metadata !DIExpression()), !dbg !10626
  ret i32 %9, !dbg !10635
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueFullFromISR(i8* noundef %0) local_unnamed_addr #0 !dbg !10636 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10638, metadata !DIExpression()), !dbg !10640
  %2 = icmp eq i8* %0, null, !dbg !10641
  br i1 %2, label %3, label %4, !dbg !10643

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.162, i32 0, i32 0), i32 noundef 2054) #18, !dbg !10644
  br label %4, !dbg !10644

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10646
  %6 = bitcast i8* %5 to i32*, !dbg !10646
  %7 = load volatile i32, i32* %6, align 4, !dbg !10646
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !10648
  %9 = bitcast i8* %8 to i32*, !dbg !10648
  %10 = load i32, i32* %9, align 4, !dbg !10648
  %11 = icmp eq i32 %7, %10, !dbg !10649
  %12 = zext i1 %11 to i32
  call void @llvm.dbg.value(metadata i32 %12, metadata !10639, metadata !DIExpression()), !dbg !10640
  ret i32 %12, !dbg !10650
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueAddToRegistry(i8* noundef %0, i8* noundef %1) local_unnamed_addr #15 !dbg !10651 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10655, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i8* %1, metadata !10656, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.value(metadata i32 0, metadata !10657, metadata !DIExpression()), !dbg !10658
  br label %3, !dbg !10659

3:                                                ; preds = %2, %10
  %4 = phi i32 [ 0, %2 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !10657, metadata !DIExpression()), !dbg !10658
  %5 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 0, !dbg !10661
  %6 = load i8*, i8** %5, align 4, !dbg !10661
  %7 = icmp eq i8* %6, null, !dbg !10665
  br i1 %7, label %8, label %10, !dbg !10666

8:                                                ; preds = %3
  store i8* %1, i8** %5, align 4, !dbg !10667
  %9 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 1, !dbg !10669
  store i8* %0, i8** %9, align 4, !dbg !10670
  br label %13, !dbg !10671

10:                                               ; preds = %3
  %11 = add nuw nsw i32 %4, 1, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %11, metadata !10657, metadata !DIExpression()), !dbg !10658
  %12 = icmp eq i32 %11, 8, !dbg !10673
  br i1 %12, label %13, label %3, !dbg !10659, !llvm.loop !10674

13:                                               ; preds = %10, %8
  ret void, !dbg !10676
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueWaitForMessageRestricted(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10677 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10681, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.value(metadata i32 %1, metadata !10682, metadata !DIExpression()), !dbg !10684
  call void @llvm.dbg.value(metadata i8* %0, metadata !10683, metadata !DIExpression()), !dbg !10684
  tail call void @vPortEnterCritical() #18, !dbg !10685
  %3 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !10686
  %4 = bitcast i8* %3 to i32*, !dbg !10686
  %5 = load volatile i32, i32* %4, align 4, !dbg !10686
  %6 = icmp eq i32 %5, -1, !dbg !10686
  br i1 %6, label %7, label %8, !dbg !10689

7:                                                ; preds = %2
  store volatile i32 0, i32* %4, align 4, !dbg !10690
  br label %8, !dbg !10690

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !10692
  %10 = bitcast i8* %9 to i32*, !dbg !10692
  %11 = load volatile i32, i32* %10, align 4, !dbg !10692
  %12 = icmp eq i32 %11, -1, !dbg !10692
  br i1 %12, label %13, label %14, !dbg !10689

13:                                               ; preds = %8
  store volatile i32 0, i32* %10, align 4, !dbg !10694
  br label %14, !dbg !10694

14:                                               ; preds = %13, %8
  tail call void @vPortExitCritical() #18, !dbg !10685
  %15 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !10696
  %16 = bitcast i8* %15 to i32*, !dbg !10696
  %17 = load volatile i32, i32* %16, align 4, !dbg !10696
  %18 = icmp eq i32 %17, 0, !dbg !10698
  br i1 %18, label %19, label %22, !dbg !10699

19:                                               ; preds = %14
  %20 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !10700
  %21 = bitcast i8* %20 to %struct.xLIST*, !dbg !10700
  tail call void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef nonnull %21, i32 noundef %1) #18, !dbg !10702
  br label %22, !dbg !10703

22:                                               ; preds = %14, %19
  %23 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !10704
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %23, metadata !10683, metadata !DIExpression()), !dbg !10684
  tail call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %23) #20, !dbg !10705
  ret void, !dbg !10706
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerCreateTimerTask() local_unnamed_addr #0 !dbg !10707 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10709, metadata !DIExpression()), !dbg !10710
  tail call fastcc void @prvCheckForValidListAndQueue() #20, !dbg !10711
  %1 = load i8*, i8** @xTimerQueue, align 4, !dbg !10712
  %2 = icmp eq i8* %1, null, !dbg !10714
  br i1 %2, label %6, label %3, !dbg !10715

3:                                                ; preds = %0
  %4 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @prvTimerTask, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.179, i32 0, i32 0), i16 noundef zeroext 512, i8* noundef null, i32 noundef 19, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #18, !dbg !10716
  call void @llvm.dbg.value(metadata i32 %4, metadata !10709, metadata !DIExpression()), !dbg !10710
  %5 = icmp eq i32 %4, 0, !dbg !10719
  br i1 %5, label %6, label %7, !dbg !10721

6:                                                ; preds = %0, %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.180, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 270) #18, !dbg !10722
  br label %7, !dbg !10722

7:                                                ; preds = %6, %3
  %8 = phi i32 [ 0, %6 ], [ %4, %3 ]
  ret i32 %8, !dbg !10724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckForValidListAndQueue() unnamed_addr #0 !dbg !10725 {
  tail call void @vPortEnterCritical() #18, !dbg !10726
  %1 = load i8*, i8** @xTimerQueue, align 4, !dbg !10727
  %2 = icmp eq i8* %1, null, !dbg !10730
  br i1 %2, label %3, label %11, !dbg !10731

3:                                                ; preds = %0
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList1) #18, !dbg !10732
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList2) #18, !dbg !10734
  store %struct.xLIST* @xActiveTimerList1, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !10735
  store %struct.xLIST* @xActiveTimerList2, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !10736
  %4 = tail call i8* @xQueueGenericCreate(i32 noundef 10, i32 noundef 12, i8 noundef zeroext 0) #18, !dbg !10737
  store i8* %4, i8** @xTimerQueue, align 4, !dbg !10738
  %5 = icmp eq i8* %4, null, !dbg !10739
  br i1 %5, label %6, label %9, !dbg !10741

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.184, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 784) #18, !dbg !10742
  %7 = load i8*, i8** @xTimerQueue, align 4, !dbg !10744
  %8 = icmp eq i8* %7, null, !dbg !10747
  br i1 %8, label %11, label %9, !dbg !10748

9:                                                ; preds = %3, %6
  %10 = phi i8* [ %7, %6 ], [ %4, %3 ]
  tail call void @vQueueAddToRegistry(i8* noundef nonnull %10, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.185, i32 0, i32 0)) #18, !dbg !10749
  br label %11, !dbg !10751

11:                                               ; preds = %0, %9, %6
  tail call void @vPortExitCritical() #18, !dbg !10752
  ret void, !dbg !10753
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTimerTask(i8* nocapture noundef readnone %0) #12 !dbg !10754 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10756, metadata !DIExpression()), !dbg !10759
  %3 = bitcast i32* %2 to i8*, !dbg !10760
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !10760
  br label %4, !dbg !10761

4:                                                ; preds = %4, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10758, metadata !DIExpression(DW_OP_deref)), !dbg !10759
  %5 = call fastcc i32 @prvGetNextExpireTime(i32* noundef nonnull %2) #20, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %5, metadata !10757, metadata !DIExpression()), !dbg !10759
  %6 = load i32, i32* %2, align 4, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %6, metadata !10758, metadata !DIExpression()), !dbg !10759
  tail call fastcc void @prvProcessTimerOrBlockTask(i32 noundef %5, i32 noundef %6) #20, !dbg !10767
  tail call fastcc void @prvProcessReceivedCommands() #20, !dbg !10768
  br label %4, !dbg !10769, !llvm.loop !10770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @prvGetNextExpireTime(i32* nocapture noundef writeonly %0) unnamed_addr #14 !dbg !10773 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !10775, metadata !DIExpression()), !dbg !10777
  %2 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !10778
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !10778
  %4 = load i32, i32* %3, align 4, !dbg !10778
  %5 = icmp eq i32 %4, 0, !dbg !10778
  %6 = zext i1 %5 to i32, !dbg !10778
  store i32 %6, i32* %0, align 4, !dbg !10779
  br i1 %5, label %12, label %7, !dbg !10780

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 2, i32 1, !dbg !10781
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !10781
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 0, !dbg !10781
  %11 = load i32, i32* %10, align 4, !dbg !10781
  call void @llvm.dbg.value(metadata i32 %11, metadata !10776, metadata !DIExpression()), !dbg !10777
  br label %12, !dbg !10784

12:                                               ; preds = %1, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %1 ], !dbg !10785
  call void @llvm.dbg.value(metadata i32 %13, metadata !10776, metadata !DIExpression()), !dbg !10777
  ret i32 %13, !dbg !10786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessTimerOrBlockTask(i32 noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !10787 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10791, metadata !DIExpression()), !dbg !10795
  call void @llvm.dbg.value(metadata i32 %1, metadata !10792, metadata !DIExpression()), !dbg !10795
  %4 = bitcast i32* %3 to i8*, !dbg !10796
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !10796
  tail call void @vTaskSuspendAll() #18, !dbg !10797
  call void @llvm.dbg.value(metadata i32* %3, metadata !10794, metadata !DIExpression(DW_OP_deref)), !dbg !10795
  %5 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %3) #20, !dbg !10798
  call void @llvm.dbg.value(metadata i32 %5, metadata !10793, metadata !DIExpression()), !dbg !10795
  %6 = load i32, i32* %3, align 4, !dbg !10800
  call void @llvm.dbg.value(metadata i32 %6, metadata !10794, metadata !DIExpression()), !dbg !10795
  %7 = icmp eq i32 %6, 0, !dbg !10802
  br i1 %7, label %8, label %20, !dbg !10803

8:                                                ; preds = %2
  %9 = icmp ne i32 %1, 0, !dbg !10804
  %10 = icmp ult i32 %5, %0
  %11 = select i1 %9, i1 true, i1 %10, !dbg !10807
  br i1 %11, label %14, label %12, !dbg !10807

12:                                               ; preds = %8
  %13 = tail call i32 @xTaskResumeAll() #18, !dbg !10808
  tail call fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %5) #20, !dbg !10810
  br label %22, !dbg !10811

14:                                               ; preds = %8
  %15 = load i8*, i8** @xTimerQueue, align 4, !dbg !10812
  %16 = sub i32 %0, %5, !dbg !10814
  tail call void @vQueueWaitForMessageRestricted(i8* noundef %15, i32 noundef %16) #18, !dbg !10815
  %17 = tail call i32 @xTaskResumeAll() #18, !dbg !10816
  %18 = icmp eq i32 %17, 0, !dbg !10818
  br i1 %18, label %19, label %22, !dbg !10819

19:                                               ; preds = %14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !10820
  tail call void asm sideeffect "dsb", ""() #17, !dbg !10820, !srcloc !10823
  tail call void asm sideeffect "isb", ""() #17, !dbg !10820, !srcloc !10824
  br label %22, !dbg !10825

20:                                               ; preds = %2
  %21 = tail call i32 @xTaskResumeAll() #18, !dbg !10826
  br label %22

22:                                               ; preds = %12, %14, %19, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17, !dbg !10828
  ret void, !dbg !10828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessReceivedCommands() unnamed_addr #0 !dbg !10829 {
  %1 = alloca %struct.tmrTimerQueueMessage, align 4
  %2 = alloca i32, align 4
  %3 = bitcast %struct.tmrTimerQueueMessage* %1 to i8*, !dbg !10849
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #17, !dbg !10849
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %1, metadata !10831, metadata !DIExpression()), !dbg !10850
  %4 = bitcast i32* %2 to i8*, !dbg !10851
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17, !dbg !10851
  %5 = load i8*, i8** @xTimerQueue, align 4, !dbg !10852
  %6 = call i32 @xQueueGenericReceive(i8* noundef %5, i8* noundef nonnull %3, i32 noundef 0, i32 noundef 0) #18, !dbg !10852
  %7 = icmp eq i32 %6, 0, !dbg !10853
  br i1 %7, label %63, label %8, !dbg !10854

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 0
  %10 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 0
  br label %12, !dbg !10854

12:                                               ; preds = %8, %59
  %13 = load i32, i32* %9, align 4, !dbg !10855
  %14 = icmp sgt i32 %13, -1, !dbg !10858
  br i1 %14, label %15, label %59, !dbg !10859

15:                                               ; preds = %12
  %16 = load %struct.tmrTimerControl*, %struct.tmrTimerControl** %10, align 4, !dbg !10860
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %16, metadata !10845, metadata !DIExpression()), !dbg !10862
  %17 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, i32 4, !dbg !10863
  %18 = load i8*, i8** %17, align 4, !dbg !10863
  %19 = icmp eq i8* %18, null, !dbg !10863
  br i1 %19, label %23, label %20, !dbg !10865

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, !dbg !10863
  %22 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !10866
  br label %23, !dbg !10868

23:                                               ; preds = %15, %20
  call void @llvm.dbg.value(metadata i32* %2, metadata !10846, metadata !DIExpression(DW_OP_deref)), !dbg !10862
  %24 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %2) #20, !dbg !10869
  call void @llvm.dbg.value(metadata i32 %24, metadata !10848, metadata !DIExpression()), !dbg !10862
  %25 = load i32, i32* %9, align 4, !dbg !10870
  switch i32 %25, label %59 [
    i32 1, label %26
    i32 6, label %26
    i32 2, label %26
    i32 7, label %26
    i32 0, label %26
    i32 5, label %57
    i32 9, label %47
    i32 4, label %47
  ], !dbg !10871

26:                                               ; preds = %23, %23, %23, %23, %23
  %27 = load i32, i32* %11, align 4, !dbg !10872
  %28 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !10875
  %29 = load i32, i32* %28, align 4, !dbg !10875
  %30 = add i32 %29, %27, !dbg !10876
  %31 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %30, i32 noundef %24, i32 noundef %27) #20, !dbg !10877
  %32 = icmp eq i32 %31, 1, !dbg !10878
  br i1 %32, label %33, label %59, !dbg !10879

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 5, !dbg !10880
  %35 = load void (i8*)*, void (i8*)** %34, align 4, !dbg !10880
  %36 = bitcast %struct.tmrTimerControl* %16 to i8*, !dbg !10882
  call void %35(i8* noundef %36) #18, !dbg !10883
  %37 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 3, !dbg !10884
  %38 = load i32, i32* %37, align 4, !dbg !10884
  %39 = icmp eq i32 %38, 1, !dbg !10886
  br i1 %39, label %40, label %59, !dbg !10887

40:                                               ; preds = %33
  %41 = load i32, i32* %11, align 4, !dbg !10888
  %42 = load i32, i32* %28, align 4, !dbg !10890
  %43 = add i32 %42, %41, !dbg !10891
  %44 = call i32 @xTimerGenericCommand(i8* noundef nonnull %36, i32 noundef 0, i32 noundef %43, i32* noundef null, i32 noundef 0) #20, !dbg !10892
  call void @llvm.dbg.value(metadata i32 %44, metadata !10847, metadata !DIExpression()), !dbg !10862
  %45 = icmp eq i32 %44, 0, !dbg !10893
  br i1 %45, label %46, label %59, !dbg !10895

46:                                               ; preds = %40
  call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.182, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 662) #18, !dbg !10896
  br label %59, !dbg !10896

47:                                               ; preds = %23, %23
  %48 = load i32, i32* %11, align 4, !dbg !10898
  %49 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !10899
  store i32 %48, i32* %49, align 4, !dbg !10900
  %50 = icmp eq i32 %48, 0, !dbg !10901
  br i1 %50, label %51, label %53, !dbg !10903

51:                                               ; preds = %47
  call void @platform_assert(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.183, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 685) #18, !dbg !10904
  %52 = load i32, i32* %49, align 4, !dbg !10906
  br label %53, !dbg !10904

53:                                               ; preds = %51, %47
  %54 = phi i32 [ %52, %51 ], [ %48, %47 ], !dbg !10906
  %55 = add i32 %54, %24, !dbg !10907
  %56 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %55, i32 noundef %24, i32 noundef %24) #20, !dbg !10908
  br label %59, !dbg !10909

57:                                               ; preds = %23
  %58 = bitcast %struct.tmrTimerControl* %16 to i8*, !dbg !10910
  call void @vPortFree(i8* noundef %58) #18, !dbg !10911
  br label %59, !dbg !10912

59:                                               ; preds = %40, %46, %53, %57, %26, %33, %23, %12
  %60 = load i8*, i8** @xTimerQueue, align 4, !dbg !10852
  %61 = call i32 @xQueueGenericReceive(i8* noundef %60, i8* noundef nonnull %3, i32 noundef 0, i32 noundef 0) #18, !dbg !10852
  %62 = icmp eq i32 %61, 0, !dbg !10853
  br i1 %62, label %63, label %12, !dbg !10854, !llvm.loop !10913

63:                                               ; preds = %59, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17, !dbg !10915
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3) #17, !dbg !10915
  ret void, !dbg !10915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvSampleTimeNow(i32* nocapture noundef writeonly %0) unnamed_addr #0 !dbg !1386 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !1392, metadata !DIExpression()), !dbg !10916
  %2 = tail call i32 @xTaskGetTickCount() #18, !dbg !10917
  call void @llvm.dbg.value(metadata i32 %2, metadata !1393, metadata !DIExpression()), !dbg !10916
  %3 = load i32, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !10918
  %4 = icmp ult i32 %2, %3, !dbg !10920
  br i1 %4, label %5, label %6, !dbg !10921

5:                                                ; preds = %1
  tail call fastcc void @prvSwitchTimerLists() #20, !dbg !10922
  br label %6, !dbg !10924

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 1, %5 ], [ 0, %1 ], !dbg !10925
  store i32 %7, i32* %0, align 4, !dbg !10925
  store i32 %2, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !10926
  ret i32 %2, !dbg !10927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #0 !dbg !10928 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !10933, metadata !DIExpression()), !dbg !10938
  call void @llvm.dbg.value(metadata i32 %1, metadata !10934, metadata !DIExpression()), !dbg !10938
  call void @llvm.dbg.value(metadata i32 %2, metadata !10935, metadata !DIExpression()), !dbg !10938
  call void @llvm.dbg.value(metadata i32 %3, metadata !10936, metadata !DIExpression()), !dbg !10938
  call void @llvm.dbg.value(metadata i32 0, metadata !10937, metadata !DIExpression()), !dbg !10938
  %5 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, !dbg !10939
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 0, !dbg !10939
  store i32 %1, i32* %6, align 4, !dbg !10939
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, i32 3, !dbg !10940
  %8 = bitcast i8** %7 to %struct.tmrTimerControl**, !dbg !10940
  store %struct.tmrTimerControl* %0, %struct.tmrTimerControl** %8, align 4, !dbg !10940
  %9 = icmp ugt i32 %1, %2, !dbg !10941
  br i1 %9, label %15, label %10, !dbg !10943

10:                                               ; preds = %4
  %11 = sub i32 %2, %3, !dbg !10944
  %12 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 2, !dbg !10947
  %13 = load i32, i32* %12, align 4, !dbg !10947
  %14 = icmp ult i32 %11, %13, !dbg !10948
  br i1 %14, label %19, label %22, !dbg !10949

15:                                               ; preds = %4
  %16 = icmp uge i32 %2, %3, !dbg !10950
  %17 = icmp ult i32 %1, %3
  %18 = or i1 %16, %17, !dbg !10953
  br i1 %18, label %19, label %22, !dbg !10953

19:                                               ; preds = %15, %10
  %20 = phi %struct.xLIST** [ @pxOverflowTimerList, %10 ], [ @pxCurrentTimerList, %15 ]
  %21 = load %struct.xLIST*, %struct.xLIST** %20, align 4, !dbg !10954
  tail call void @vListInsert(%struct.xLIST* noundef %21, %struct.xLIST_ITEM* noundef nonnull %5) #18, !dbg !10954
  br label %22, !dbg !10955

22:                                               ; preds = %19, %15, %10
  %23 = phi i32 [ 1, %10 ], [ 1, %15 ], [ 0, %19 ], !dbg !10938
  call void @llvm.dbg.value(metadata i32 %23, metadata !10937, metadata !DIExpression()), !dbg !10938
  ret i32 %23, !dbg !10955
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerGenericCommand(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3, i32 noundef %4) local_unnamed_addr #0 !dbg !10956 {
  %6 = alloca %struct.tmrTimerQueueMessage, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10960, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.value(metadata i32 %1, metadata !10961, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.value(metadata i32 %2, metadata !10962, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.value(metadata i32* %3, metadata !10963, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.value(metadata i32 %4, metadata !10964, metadata !DIExpression()), !dbg !10967
  call void @llvm.dbg.value(metadata i32 0, metadata !10965, metadata !DIExpression()), !dbg !10967
  %7 = bitcast %struct.tmrTimerQueueMessage* %6 to i8*, !dbg !10968
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #17, !dbg !10968
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %6, metadata !10966, metadata !DIExpression()), !dbg !10969
  %8 = load i8*, i8** @xTimerQueue, align 4, !dbg !10970
  %9 = icmp eq i8* %8, null, !dbg !10972
  br i1 %9, label %26, label %10, !dbg !10973

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 0, !dbg !10974
  store i32 %1, i32* %11, align 4, !dbg !10976
  %12 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 0, !dbg !10977
  store i32 %2, i32* %12, align 4, !dbg !10978
  %13 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 1, !dbg !10979
  %14 = bitcast %struct.tmrTimerControl** %13 to i8**, !dbg !10980
  store i8* %0, i8** %14, align 4, !dbg !10980
  %15 = icmp slt i32 %1, 6, !dbg !10981
  br i1 %15, label %16, label %24, !dbg !10983

16:                                               ; preds = %10
  %17 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !10984
  %18 = icmp eq i32 %17, 2, !dbg !10987
  %19 = load i8*, i8** @xTimerQueue, align 4, !dbg !10988
  br i1 %18, label %20, label %22, !dbg !10989

20:                                               ; preds = %16
  %21 = call i32 @xQueueGenericSend(i8* noundef %19, i8* noundef nonnull %7, i32 noundef %4, i32 noundef 0) #18, !dbg !10990
  call void @llvm.dbg.value(metadata i32 %21, metadata !10965, metadata !DIExpression()), !dbg !10967
  br label %26, !dbg !10992

22:                                               ; preds = %16
  %23 = call i32 @xQueueGenericSend(i8* noundef %19, i8* noundef nonnull %7, i32 noundef 0, i32 noundef 0) #18, !dbg !10993
  call void @llvm.dbg.value(metadata i32 %23, metadata !10965, metadata !DIExpression()), !dbg !10967
  br label %26

24:                                               ; preds = %10
  %25 = call i32 @xQueueGenericSendFromISR(i8* noundef nonnull %8, i8* noundef nonnull %7, i32* noundef %3, i32 noundef 0) #18, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %25, metadata !10965, metadata !DIExpression()), !dbg !10967
  br label %26

26:                                               ; preds = %5, %24, %22, %20
  %27 = phi i32 [ %21, %20 ], [ %23, %22 ], [ %25, %24 ], [ 0, %5 ], !dbg !10967
  call void @llvm.dbg.value(metadata i32 %27, metadata !10965, metadata !DIExpression()), !dbg !10967
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #17, !dbg !10997
  ret i32 %27, !dbg !10998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSwitchTimerLists() unnamed_addr #0 !dbg !10999 {
  %1 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11006
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !11006
  %3 = load i32, i32* %2, align 4, !dbg !11006
  %4 = icmp eq i32 %3, 0, !dbg !11006
  br i1 %4, label %43, label %5, !dbg !11007

5:                                                ; preds = %0, %38
  %6 = phi %struct.xLIST* [ %39, %38 ], [ %1, %0 ]
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !11008
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !11008
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 0, !dbg !11008
  %10 = load i32, i32* %9, align 4, !dbg !11008
  call void @llvm.dbg.value(metadata i32 %10, metadata !11001, metadata !DIExpression()), !dbg !11010
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !11011
  %12 = load i8*, i8** %11, align 4, !dbg !11011
  call void @llvm.dbg.value(metadata i8* %12, metadata !11004, metadata !DIExpression()), !dbg !11010
  %13 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !11012
  %14 = bitcast i8* %13 to %struct.xLIST_ITEM*, !dbg !11012
  %15 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %14) #18, !dbg !11013
  %16 = getelementptr inbounds i8, i8* %12, i32 36, !dbg !11014
  %17 = bitcast i8* %16 to void (i8*)**, !dbg !11014
  %18 = load void (i8*)*, void (i8*)** %17, align 4, !dbg !11014
  tail call void %18(i8* noundef %12) #18, !dbg !11015
  %19 = getelementptr inbounds i8, i8* %12, i32 28, !dbg !11016
  %20 = bitcast i8* %19 to i32*, !dbg !11016
  %21 = load i32, i32* %20, align 4, !dbg !11016
  %22 = icmp eq i32 %21, 1, !dbg !11018
  br i1 %22, label %23, label %38, !dbg !11019

23:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* %12, metadata !11004, metadata !DIExpression()), !dbg !11010
  %24 = getelementptr inbounds i8, i8* %12, i32 24, !dbg !11020
  %25 = bitcast i8* %24 to i32*, !dbg !11020
  %26 = load i32, i32* %25, align 4, !dbg !11020
  %27 = add i32 %26, %10, !dbg !11022
  call void @llvm.dbg.value(metadata i32 %27, metadata !11002, metadata !DIExpression()), !dbg !11010
  %28 = icmp ugt i32 %27, %10, !dbg !11023
  br i1 %28, label %29, label %34, !dbg !11025

29:                                               ; preds = %23
  %30 = bitcast i8* %13 to i32*, !dbg !11026
  store i32 %27, i32* %30, align 4, !dbg !11026
  %31 = getelementptr inbounds i8, i8* %12, i32 16, !dbg !11028
  %32 = bitcast i8* %31 to i8**, !dbg !11028
  store i8* %12, i8** %32, align 4, !dbg !11028
  %33 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11029
  tail call void @vListInsert(%struct.xLIST* noundef %33, %struct.xLIST_ITEM* noundef nonnull %14) #18, !dbg !11030
  br label %38, !dbg !11031

34:                                               ; preds = %23
  %35 = tail call i32 @xTimerGenericCommand(i8* noundef nonnull %12, i32 noundef 0, i32 noundef %10, i32* noundef null, i32 noundef 0) #20, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %35, metadata !11005, metadata !DIExpression()), !dbg !11010
  %36 = icmp eq i32 %35, 0, !dbg !11034
  br i1 %36, label %37, label %38, !dbg !11036

37:                                               ; preds = %34
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.182, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 754) #18, !dbg !11037
  br label %38, !dbg !11037

38:                                               ; preds = %34, %37, %5, %29
  %39 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11006
  %40 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %39, i32 0, i32 0, !dbg !11006
  %41 = load i32, i32* %40, align 4, !dbg !11006
  %42 = icmp eq i32 %41, 0, !dbg !11006
  br i1 %42, label %43, label %5, !dbg !11007, !llvm.loop !11039

43:                                               ; preds = %38, %0
  %44 = phi %struct.xLIST* [ %1, %0 ], [ %39, %38 ], !dbg !11006
  call void @llvm.dbg.value(metadata %struct.xLIST* %44, metadata !11003, metadata !DIExpression()), !dbg !11010
  %45 = load %struct.xLIST*, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !11041
  store %struct.xLIST* %45, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11042
  store %struct.xLIST* %44, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !11043
  ret void, !dbg !11044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !11045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11049, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.value(metadata i32 %1, metadata !11050, metadata !DIExpression()), !dbg !11053
  %3 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !11054
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %3, i32 0, i32 2, i32 1, !dbg !11054
  %5 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %4, align 4, !dbg !11054
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 3, !dbg !11054
  %7 = load i8*, i8** %6, align 4, !dbg !11054
  call void @llvm.dbg.value(metadata i8* %7, metadata !11052, metadata !DIExpression()), !dbg !11053
  %8 = getelementptr inbounds i8, i8* %7, i32 4, !dbg !11055
  %9 = bitcast i8* %8 to %struct.xLIST_ITEM*, !dbg !11055
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !11056
  %11 = getelementptr inbounds i8, i8* %7, i32 28, !dbg !11057
  %12 = bitcast i8* %11 to i32*, !dbg !11057
  %13 = load i32, i32* %12, align 4, !dbg !11057
  %14 = icmp eq i32 %13, 1, !dbg !11059
  br i1 %14, label %15, label %27, !dbg !11060

15:                                               ; preds = %2
  %16 = bitcast i8* %7 to %struct.tmrTimerControl*, !dbg !11061
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %16, metadata !11052, metadata !DIExpression()), !dbg !11053
  %17 = getelementptr inbounds i8, i8* %7, i32 24, !dbg !11062
  %18 = bitcast i8* %17 to i32*, !dbg !11062
  %19 = load i32, i32* %18, align 4, !dbg !11062
  %20 = add i32 %19, %0, !dbg !11065
  %21 = tail call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef %16, i32 noundef %20, i32 noundef %1, i32 noundef %0) #20, !dbg !11066
  %22 = icmp eq i32 %21, 1, !dbg !11067
  br i1 %22, label %23, label %27, !dbg !11068

23:                                               ; preds = %15
  %24 = tail call i32 @xTimerGenericCommand(i8* noundef nonnull %7, i32 noundef 0, i32 noundef %0, i32* noundef null, i32 noundef 0) #20, !dbg !11069
  call void @llvm.dbg.value(metadata i32 %24, metadata !11051, metadata !DIExpression()), !dbg !11053
  %25 = icmp eq i32 %24, 0, !dbg !11071
  br i1 %25, label %26, label %27, !dbg !11073

26:                                               ; preds = %23
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.182, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 400) #18, !dbg !11074
  br label %27, !dbg !11074

27:                                               ; preds = %23, %26, %2, %15
  %28 = getelementptr inbounds i8, i8* %7, i32 36, !dbg !11076
  %29 = bitcast i8* %28 to void (i8*)**, !dbg !11076
  %30 = load void (i8*)*, void (i8*)** %29, align 4, !dbg !11076
  tail call void %30(i8* noundef nonnull %7) #18, !dbg !11077
  ret void, !dbg !11078
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xTimerCreate(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, void (i8*)* noundef %4) local_unnamed_addr #0 !dbg !11079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11083, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 %1, metadata !11084, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 %2, metadata !11085, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i8* %3, metadata !11086, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata void (i8*)* %4, metadata !11087, metadata !DIExpression()), !dbg !11089
  %6 = icmp eq i32 %1, 0, !dbg !11090
  br i1 %6, label %22, label %7, !dbg !11092

7:                                                ; preds = %5
  %8 = tail call i8* @pvPortMalloc(i32 noundef 44) #18, !dbg !11093
  call void @llvm.dbg.value(metadata i8* %8, metadata !11088, metadata !DIExpression()), !dbg !11089
  %9 = icmp eq i8* %8, null, !dbg !11095
  br i1 %9, label %23, label %10, !dbg !11097

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %8, metadata !11088, metadata !DIExpression()), !dbg !11089
  tail call fastcc void @prvCheckForValidListAndQueue() #20, !dbg !11098
  %11 = bitcast i8* %8 to i8**, !dbg !11100
  store i8* %0, i8** %11, align 4, !dbg !11101
  %12 = getelementptr inbounds i8, i8* %8, i32 24, !dbg !11102
  %13 = bitcast i8* %12 to i32*, !dbg !11102
  store i32 %1, i32* %13, align 4, !dbg !11103
  %14 = getelementptr inbounds i8, i8* %8, i32 28, !dbg !11104
  %15 = bitcast i8* %14 to i32*, !dbg !11104
  store i32 %2, i32* %15, align 4, !dbg !11105
  %16 = getelementptr inbounds i8, i8* %8, i32 32, !dbg !11106
  %17 = bitcast i8* %16 to i8**, !dbg !11106
  store i8* %3, i8** %17, align 4, !dbg !11107
  %18 = getelementptr inbounds i8, i8* %8, i32 36, !dbg !11108
  %19 = bitcast i8* %18 to void (i8*)**, !dbg !11108
  store void (i8*)* %4, void (i8*)** %19, align 4, !dbg !11109
  %20 = getelementptr inbounds i8, i8* %8, i32 4, !dbg !11110
  %21 = bitcast i8* %20 to %struct.xLIST_ITEM*, !dbg !11110
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !11111
  br label %23, !dbg !11112

22:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* undef, metadata !11088, metadata !DIExpression()), !dbg !11089
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.181, i32 0, i32 0), i32 noundef 310) #18, !dbg !11113
  br label %23, !dbg !11113

23:                                               ; preds = %7, %10, %22
  %24 = phi i8* [ null, %22 ], [ null, %7 ], [ %8, %10 ]
  ret i8* %24, !dbg !11116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @pcTimerGetTimerName(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !11117 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11121, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.value(metadata i8* %0, metadata !11122, metadata !DIExpression()), !dbg !11123
  %2 = bitcast i8* %0 to i8**, !dbg !11124
  %3 = load i8*, i8** %2, align 4, !dbg !11124
  ret i8* %3, !dbg !11125
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerIsTimerActive(i8* nocapture noundef readonly %0) local_unnamed_addr #0 !dbg !11126 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11130, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.value(metadata i8* %0, metadata !11132, metadata !DIExpression()), !dbg !11133
  tail call void @vPortEnterCritical() #18, !dbg !11134
  %2 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11135
  %3 = bitcast i8* %2 to i8**, !dbg !11135
  %4 = load i8*, i8** %3, align 4, !dbg !11135
  %5 = icmp ne i8* %4, null, !dbg !11135
  %6 = zext i1 %5 to i32, !dbg !11137
  call void @llvm.dbg.value(metadata i32 %6, metadata !11131, metadata !DIExpression()), !dbg !11133
  tail call void @vPortExitCritical() #18, !dbg !11138
  ret i32 %6, !dbg !11139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @pvTimerGetTimerID(i8* nocapture noundef readonly %0) local_unnamed_addr #9 !dbg !11140 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11145, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.value(metadata i8* %0, metadata !11146, metadata !DIExpression()), !dbg !11147
  %2 = getelementptr inbounds i8, i8* %0, i32 32, !dbg !11148
  %3 = bitcast i8* %2 to i8**, !dbg !11148
  %4 = load i8*, i8** %3, align 4, !dbg !11148
  ret i8* %4, !dbg !11149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local nonnull i32* @pxPortInitialiseStack(i32* noundef writeonly %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #4 !dbg !11150 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !11154, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !11155, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata i8* %2, metadata !11156, metadata !DIExpression()), !dbg !11157
  %4 = getelementptr inbounds i32, i32* %0, i32 -1, !dbg !11158
  call void @llvm.dbg.value(metadata i32* %4, metadata !11154, metadata !DIExpression()), !dbg !11157
  store i32 16777216, i32* %4, align 4, !dbg !11159
  %5 = getelementptr inbounds i32, i32* %0, i32 -2, !dbg !11160
  call void @llvm.dbg.value(metadata i32* %5, metadata !11154, metadata !DIExpression()), !dbg !11157
  %6 = ptrtoint void (i8*)* %1 to i32, !dbg !11161
  store i32 %6, i32* %5, align 4, !dbg !11162
  %7 = getelementptr inbounds i32, i32* %0, i32 -3, !dbg !11163
  call void @llvm.dbg.value(metadata i32* %7, metadata !11154, metadata !DIExpression()), !dbg !11157
  store i32 ptrtoint (void ()* @prvTaskExitError to i32), i32* %7, align 4, !dbg !11164
  %8 = getelementptr inbounds i32, i32* %0, i32 -8, !dbg !11165
  call void @llvm.dbg.value(metadata i32* %8, metadata !11154, metadata !DIExpression()), !dbg !11157
  %9 = ptrtoint i8* %2 to i32, !dbg !11166
  store i32 %9, i32* %8, align 4, !dbg !11167
  %10 = getelementptr inbounds i32, i32* %0, i32 -9, !dbg !11168
  call void @llvm.dbg.value(metadata i32* %10, metadata !11154, metadata !DIExpression()), !dbg !11157
  store i32 -3, i32* %10, align 4, !dbg !11169
  %11 = getelementptr inbounds i32, i32* %0, i32 -17, !dbg !11170
  call void @llvm.dbg.value(metadata i32* %11, metadata !11154, metadata !DIExpression()), !dbg !11157
  ret i32* %11, !dbg !11171
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTaskExitError() #12 !dbg !11172 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11173
  %2 = icmp eq i32 %1, -1, !dbg !11173
  br i1 %2, label %4, label %3, !dbg !11175

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.189, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.190, i32 0, i32 0), i32 noundef 260) #18, !dbg !11176
  br label %4, !dbg !11176

4:                                                ; preds = %3, %0
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #17, !dbg !11178, !srcloc !11183
  call void @llvm.dbg.value(metadata i32 %5, metadata !11181, metadata !DIExpression()) #17, !dbg !11184
  br label %6, !dbg !11185

6:                                                ; preds = %6, %4
  br label %6, !dbg !11186, !llvm.loop !11189
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortCurrentTaskStackOverflowCheck() local_unnamed_addr #0 !dbg !11192 {
  %1 = tail call i32 @uxTaskGetBottomOfStack(i8* noundef null) #18, !dbg !11196
  call void @llvm.dbg.value(metadata i32 %1, metadata !11194, metadata !DIExpression()), !dbg !11197
  %2 = tail call i32 @hal_dwt_request_watchpoint(i32 noundef 3, i32 noundef %1, i32 noundef 3, i32 noundef 6) #18, !dbg !11198
  call void @llvm.dbg.value(metadata i32 %2, metadata !11195, metadata !DIExpression()), !dbg !11197
  ret void, !dbg !11199
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @SVC_Handler() #16 section ".ramTEXT" !dbg !11200 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\0A\09cpsie i \09\09\09\09\09\09\0A\09bl hal_dwt_init                 \0A\09bl vPortCurrentTaskStackOverflowCheck \0A\09ldr\09r3, pxCurrentTCBConst2\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\0A\09msr psp, r0\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\0A\09mov r0, #0 \09\09\09\09\09\09\0A\09msr\09basepri, r0\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\0ApxCurrentTCBConst2: .word pxCurrentTCB\09\09\09\09\0A", ""() #17, !dbg !11201, !srcloc !11202
  unreachable, !dbg !11203
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @xPortStartScheduler() local_unnamed_addr #12 !dbg !11204 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = bitcast i32* %1 to i8*, !dbg !11211
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11211
  call void @llvm.dbg.declare(metadata i32* %1, metadata !11206, metadata !DIExpression()), !dbg !11212
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -536812544 to i8*), metadata !11208, metadata !DIExpression()), !dbg !11213
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !11214
  call void @llvm.dbg.declare(metadata i8* %2, metadata !11210, metadata !DIExpression()), !dbg !11215
  %4 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11216
  %5 = zext i8 %4 to i32, !dbg !11216
  store volatile i32 %5, i32* %1, align 4, !dbg !11217
  store volatile i8 -1, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11218
  %6 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11219
  store volatile i8 %6, i8* %2, align 1, !dbg !11220
  %7 = load volatile i8, i8* %2, align 1, !dbg !11221
  %8 = and i8 %7, -128, !dbg !11222
  store i8 %8, i8* @ucMaxSysCallPriority, align 1, !dbg !11223
  %9 = load volatile i8, i8* %2, align 1, !dbg !11224
  %10 = icmp slt i8 %9, 0, !dbg !11225
  br i1 %10, label %11, label %21, !dbg !11226

11:                                               ; preds = %0, %11
  %12 = phi i32 [ %13, %11 ], [ 7, %0 ], !dbg !11227
  %13 = add i32 %12, -1, !dbg !11227
  %14 = load volatile i8, i8* %2, align 1, !dbg !11229
  %15 = shl i8 %14, 1, !dbg !11229
  store volatile i8 %15, i8* %2, align 1, !dbg !11229
  %16 = load volatile i8, i8* %2, align 1, !dbg !11224
  %17 = icmp slt i8 %16, 0, !dbg !11225
  br i1 %17, label %11, label %18, !dbg !11226, !llvm.loop !11230

18:                                               ; preds = %11
  %19 = shl i32 %13, 8, !dbg !11232
  %20 = and i32 %19, 1792, !dbg !11232
  br label %21, !dbg !11232

21:                                               ; preds = %18, %0
  %22 = phi i32 [ %20, %18 ], [ 1792, %0 ]
  store i32 %22, i32* @ulMaxPRIGROUPValue, align 4, !dbg !11233
  %23 = load volatile i32, i32* %1, align 4, !dbg !11234
  %24 = trunc i32 %23 to i8, !dbg !11234
  store volatile i8 %24, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !11235
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !11236
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11236
  %25 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11237
  %26 = or i32 %25, 14680064, !dbg !11237
  store volatile i32 %26, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11237
  %27 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11238
  %28 = or i32 %27, -2147483648, !dbg !11238
  store volatile i32 %28, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !11238
  tail call void @vPortSetupTimerInterrupt() #20, !dbg !11239
  store i32 0, i32* @uxCriticalNesting, align 4, !dbg !11240
  tail call void @vPortEnableVFP() #20, !dbg !11241
  %29 = load volatile i32, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !11242
  %30 = or i32 %29, -1073741824, !dbg !11242
  store volatile i32 %30, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !11242
  tail call void @prvPortStartFirstTask() #20, !dbg !11243
  tail call void @prvTaskExitError() #20, !dbg !11244
  unreachable, !dbg !11245
}

; Function Attrs: naked noinline nounwind optsize
define internal void @vPortEnableVFP() #16 !dbg !11246 {
  tail call void asm sideeffect "\09ldr.w r0, =0xE000ED88\09\09\0A\09ldr r1, [r0]\09\09\09\09\0A\09\09\09\09\09\09\09\09\0A\09orr r1, r1, #( 0xf << 20 )\09\0A\09str r1, [r0]\09\09\09\09\0A\09bx r14\09\09\09\09\09\09", ""() #17, !dbg !11247, !srcloc !11248
  unreachable, !dbg !11249
}

; Function Attrs: naked noinline nounwind optsize
define internal void @prvPortStartFirstTask() #16 !dbg !11250 {
  tail call void asm sideeffect " ldr r0, =0xE000ED08 \09\0A ldr r0, [r0] \09\09\09\0A ldr r0, [r0] \09\09\09\0A msr msp, r0\09\09\09\0A cpsie i\09\09\09\09\0A cpsie f\09\09\09\09\0A dsb\09\09\09\09\09\0A isb\09\09\09\09\09\0A svc 0\09\09\09\09\09\0A nop\09\09\09\09\09\0A", ""() #17, !dbg !11251, !srcloc !11252
  unreachable, !dbg !11253
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEndScheduler() local_unnamed_addr #0 !dbg !11254 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11255
  %2 = icmp eq i32 %1, 1000, !dbg !11255
  br i1 %2, label %4, label %3, !dbg !11257

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.195, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.190, i32 0, i32 0), i32 noundef 421) #18, !dbg !11258
  br label %4, !dbg !11258

4:                                                ; preds = %3, %0
  ret void, !dbg !11260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEnterCritical() local_unnamed_addr #0 !dbg !11261 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #17, !dbg !11262, !srcloc !11183
  call void @llvm.dbg.value(metadata i32 %1, metadata !11181, metadata !DIExpression()) #17, !dbg !11264
  %2 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11265
  %3 = add i32 %2, 1, !dbg !11265
  store i32 %3, i32* @uxCriticalNesting, align 4, !dbg !11265
  %4 = icmp eq i32 %2, 0, !dbg !11266
  br i1 %4, label %5, label %10, !dbg !11268

5:                                                ; preds = %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11269
  %7 = and i32 %6, 255, !dbg !11269
  %8 = icmp eq i32 %7, 0, !dbg !11269
  br i1 %8, label %10, label %9, !dbg !11272

9:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.190, i32 0, i32 0), i32 noundef 437) #18, !dbg !11273
  br label %10, !dbg !11273

10:                                               ; preds = %5, %9, %0
  ret void, !dbg !11275
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortExitCritical() local_unnamed_addr #0 !dbg !11276 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11277
  %2 = icmp eq i32 %1, 0, !dbg !11277
  br i1 %2, label %3, label %5, !dbg !11279

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.201, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.190, i32 0, i32 0), i32 noundef 444) #18, !dbg !11280
  %4 = load i32, i32* @uxCriticalNesting, align 4, !dbg !11282
  br label %5, !dbg !11280

5:                                                ; preds = %3, %0
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !11282
  %7 = add i32 %6, -1, !dbg !11282
  store i32 %7, i32* @uxCriticalNesting, align 4, !dbg !11282
  %8 = icmp eq i32 %7, 0, !dbg !11283
  br i1 %8, label %9, label %10, !dbg !11285

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 0, metadata !11286, metadata !DIExpression()) #17, !dbg !11289
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 0) #17, !dbg !11292, !srcloc !11293
  br label %10, !dbg !11294

10:                                               ; preds = %9, %5
  ret void, !dbg !11295
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @PendSV_Handler() #16 section ".ramTEXT" !dbg !11296 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\09\0A\09push {lr}\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\09\0A\09pop  {lr}\09\09\09\09\09\09\09\0A\09cpsie i \09\09\09\09\09\09\09\0A\09mrs r0, psp\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr\09r3, pxCurrentTCBConst\09\09\09\0A\09ldr\09r2, [r3]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vstmdbeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09str r0, [r2]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb sp!, {r3}\09\09\09\09\09\09\0A\09mov r0, $0 \09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\0A   isb\09\09\09\09\09\09\09\09\09\0A\09bl vTaskSwitchContext\09\09\09\09\0A\09bl vPortCurrentTaskStackOverflowCheck\0A\09mov r0, #0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09ldmia sp!, {r3}\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vldmiaeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\09\0ApxCurrentTCBConst: .word pxCurrentTCB\09\0A", "i"(i32 128) #17, !dbg !11297, !srcloc !11298
  unreachable, !dbg !11299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SysTick_Handler() local_unnamed_addr #0 section ".ramTEXT" !dbg !11300 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !11303, !srcloc !11309
  call void @llvm.dbg.value(metadata i32 undef, metadata !11306, metadata !DIExpression()) #17, !dbg !11310
  call void @llvm.dbg.value(metadata i32 undef, metadata !11307, metadata !DIExpression()) #17, !dbg !11310
  call void @llvm.dbg.value(metadata i32 undef, metadata !11302, metadata !DIExpression()), !dbg !11311
  tail call void @Flash_ReturnReady() #18, !dbg !11312
  %2 = tail call i32 @xTaskIncrementTick() #18, !dbg !11314
  %3 = icmp eq i32 %2, 0, !dbg !11316
  br i1 %3, label %5, label %4, !dbg !11317

4:                                                ; preds = %0
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11318
  br label %5, !dbg !11320

5:                                                ; preds = %4, %0
  %6 = extractvalue { i32, i32 } %1, 0, !dbg !11303
  call void @llvm.dbg.value(metadata i32 %6, metadata !11306, metadata !DIExpression()) #17, !dbg !11310
  call void @llvm.dbg.value(metadata i32 %6, metadata !11302, metadata !DIExpression()), !dbg !11311
  call void @llvm.dbg.value(metadata i32 undef, metadata !11286, metadata !DIExpression()) #17, !dbg !11321
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #17, !dbg !11323, !srcloc !11293
  ret void, !dbg !11324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortValidateInterruptPriority() local_unnamed_addr #0 !dbg !11325 {
  %1 = tail call i32 asm sideeffect "mrs $0, ipsr", "=r"() #17, !dbg !11329, !srcloc !11330
  call void @llvm.dbg.value(metadata i32 %1, metadata !11327, metadata !DIExpression()), !dbg !11331
  %2 = icmp ugt i32 %1, 15, !dbg !11332
  br i1 %2, label %3, label %9, !dbg !11334

3:                                                ; preds = %0
  %4 = getelementptr inbounds i8, i8* inttoptr (i32 -536812560 to i8*), i32 %1, !dbg !11335
  %5 = load volatile i8, i8* %4, align 1, !dbg !11335
  call void @llvm.dbg.value(metadata i8 %5, metadata !11328, metadata !DIExpression()), !dbg !11331
  %6 = load i8, i8* @ucMaxSysCallPriority, align 1, !dbg !11337
  %7 = icmp ult i8 %5, %6, !dbg !11337
  br i1 %7, label %8, label %9, !dbg !11339

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4.204, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.190, i32 0, i32 0), i32 noundef 794) #18, !dbg !11340
  br label %9, !dbg !11340

9:                                                ; preds = %3, %8, %0
  %10 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !11342
  %11 = and i32 %10, 1792, !dbg !11342
  %12 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !11342
  %13 = icmp ugt i32 %11, %12, !dbg !11342
  br i1 %13, label %14, label %15, !dbg !11344

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5.205, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.190, i32 0, i32 0), i32 noundef 810) #18, !dbg !11345
  br label %15, !dbg !11345

15:                                               ; preds = %14, %9
  ret void, !dbg !11347
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMalloc(i32 noundef %0) local_unnamed_addr #0 !dbg !11348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11352, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata i8* null, metadata !11356, metadata !DIExpression()), !dbg !11357
  tail call void @vTaskSuspendAll() #18, !dbg !11358
  %2 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11359
  %3 = icmp eq %struct.A_BLOCK_LINK* %2, null, !dbg !11362
  br i1 %3, label %4, label %5, !dbg !11363

4:                                                ; preds = %1
  tail call fastcc void @prvHeapInit() #20, !dbg !11364
  br label %5, !dbg !11366

5:                                                ; preds = %1, %4
  %6 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11367
  %7 = select i1 %6, i32 -2147483648, i32 0, !dbg !11367
  %8 = and i32 %7, %0, !dbg !11369
  %9 = icmp ne i32 %8, 0, !dbg !11370
  %10 = icmp eq i32 %0, 0
  %11 = or i1 %10, %9, !dbg !11371
  br i1 %11, label %84, label %12, !dbg !11371

12:                                               ; preds = %5
  %13 = add i32 %0, 8, !dbg !11372
  call void @llvm.dbg.value(metadata i32 %13, metadata !11352, metadata !DIExpression()), !dbg !11357
  %14 = and i32 %0, 7, !dbg !11376
  %15 = icmp eq i32 %14, 0, !dbg !11378
  %16 = add i32 %0, 16, !dbg !11379
  %17 = and i32 %16, -8, !dbg !11379
  %18 = select i1 %15, i32 %13, i32 %17, !dbg !11379
  call void @llvm.dbg.value(metadata i32 %18, metadata !11352, metadata !DIExpression()), !dbg !11357
  %19 = icmp eq i32 %18, 0, !dbg !11380
  %20 = load i32, i32* @xFreeBytesRemaining, align 4
  %21 = icmp ugt i32 %18, %20
  %22 = select i1 %19, i1 true, i1 %21, !dbg !11382
  br i1 %22, label %84, label %23, !dbg !11382

23:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11354, metadata !DIExpression()), !dbg !11357
  %24 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !11383
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !11353, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11354, metadata !DIExpression()), !dbg !11357
  %25 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 1, !dbg !11385
  %26 = load i32, i32* %25, align 4, !dbg !11385
  %27 = icmp ult i32 %26, %18, !dbg !11386
  br i1 %27, label %28, label %42, !dbg !11387

28:                                               ; preds = %23
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11354, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !11353, metadata !DIExpression()), !dbg !11357
  %29 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 0, !dbg !11388
  %30 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %29, align 4, !dbg !11388
  %31 = icmp eq %struct.A_BLOCK_LINK* %30, null, !dbg !11389
  br i1 %31, label %42, label %32, !dbg !11390, !llvm.loop !11391

32:                                               ; preds = %28, %38
  %33 = phi %struct.A_BLOCK_LINK* [ %40, %38 ], [ %30, %28 ]
  %34 = phi %struct.A_BLOCK_LINK* [ %33, %38 ], [ %24, %28 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !11353, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !11354, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !11353, metadata !DIExpression()), !dbg !11357
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 1, !dbg !11385
  %36 = load i32, i32* %35, align 4, !dbg !11385
  %37 = icmp ult i32 %36, %18, !dbg !11386
  br i1 %37, label %38, label %42, !dbg !11387, !llvm.loop !11391

38:                                               ; preds = %32
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !11354, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !11353, metadata !DIExpression()), !dbg !11357
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 0, !dbg !11388
  %40 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %39, align 4, !dbg !11388
  %41 = icmp eq %struct.A_BLOCK_LINK* %40, null, !dbg !11389
  br i1 %41, label %42, label %32, !dbg !11390, !llvm.loop !11391

42:                                               ; preds = %32, %38, %28, %23
  %43 = phi %struct.A_BLOCK_LINK* [ %24, %23 ], [ %24, %28 ], [ %33, %38 ], [ %33, %32 ]
  %44 = phi %struct.A_BLOCK_LINK* [ @xStart, %23 ], [ @xStart, %28 ], [ %34, %38 ], [ %34, %32 ], !dbg !11393
  %45 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 1, !dbg !11385
  %46 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11394
  %47 = icmp eq %struct.A_BLOCK_LINK* %43, %46, !dbg !11396
  br i1 %47, label %84, label %48, !dbg !11397

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %44, i32 0, i32 0, !dbg !11398
  %50 = bitcast %struct.A_BLOCK_LINK* %44 to i8**, !dbg !11398
  %51 = load i8*, i8** %50, align 4, !dbg !11398
  %52 = getelementptr inbounds i8, i8* %51, i32 8, !dbg !11400
  call void @llvm.dbg.value(metadata i8* %52, metadata !11356, metadata !DIExpression()), !dbg !11357
  %53 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 0, !dbg !11401
  %54 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %53, align 4, !dbg !11401
  store %struct.A_BLOCK_LINK* %54, %struct.A_BLOCK_LINK** %49, align 4, !dbg !11402
  %55 = load i32, i32* %45, align 4, !dbg !11403
  %56 = sub i32 %55, %18, !dbg !11405
  %57 = icmp ugt i32 %56, 16, !dbg !11406
  br i1 %57, label %58, label %73, !dbg !11407

58:                                               ; preds = %48
  %59 = bitcast %struct.A_BLOCK_LINK* %43 to i8*, !dbg !11408
  %60 = getelementptr inbounds i8, i8* %59, i32 %18, !dbg !11410
  %61 = bitcast i8* %60 to %struct.A_BLOCK_LINK*, !dbg !11411
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %61, metadata !11355, metadata !DIExpression()), !dbg !11357
  %62 = ptrtoint i8* %60 to i32, !dbg !11412
  %63 = and i32 %62, 7, !dbg !11412
  %64 = icmp eq i32 %63, 0, !dbg !11412
  br i1 %64, label %68, label %65, !dbg !11414

65:                                               ; preds = %58
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2.208, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.209, i32 0, i32 0), i32 noundef 257) #18, !dbg !11415
  %66 = load i32, i32* %45, align 4, !dbg !11417
  %67 = sub i32 %66, %18, !dbg !11418
  br label %68, !dbg !11415

68:                                               ; preds = %65, %58
  %69 = phi i32 [ %67, %65 ], [ %56, %58 ], !dbg !11418
  %70 = getelementptr inbounds i8, i8* %60, i32 4, !dbg !11419
  %71 = bitcast i8* %70 to i32*, !dbg !11419
  store i32 %69, i32* %71, align 4, !dbg !11420
  store i32 %18, i32* %45, align 4, !dbg !11421
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %61) #20, !dbg !11422
  %72 = load i32, i32* %45, align 4, !dbg !11423
  br label %73, !dbg !11424

73:                                               ; preds = %48, %68
  %74 = phi i32 [ %55, %48 ], [ %72, %68 ], !dbg !11423
  %75 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !11425
  %76 = sub i32 %75, %74, !dbg !11425
  store i32 %76, i32* @xFreeBytesRemaining, align 4, !dbg !11425
  %77 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11426
  %78 = icmp ult i32 %76, %77, !dbg !11428
  br i1 %78, label %79, label %80, !dbg !11429

79:                                               ; preds = %73
  store i32 %76, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11430
  br label %80, !dbg !11432

80:                                               ; preds = %73, %79
  %81 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11433
  %82 = select i1 %81, i32 -2147483648, i32 0, !dbg !11433
  %83 = or i32 %74, %82, !dbg !11434
  store i32 %83, i32* %45, align 4, !dbg !11434
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** %53, align 4, !dbg !11435
  br label %84, !dbg !11436

84:                                               ; preds = %5, %42, %80, %12
  %85 = phi i8* [ %52, %80 ], [ null, %42 ], [ null, %12 ], [ null, %5 ], !dbg !11357
  call void @llvm.dbg.value(metadata i8* %85, metadata !11356, metadata !DIExpression()), !dbg !11357
  %86 = tail call i32 @xTaskResumeAll() #18, !dbg !11437
  %87 = ptrtoint i8* %85 to i32, !dbg !11438
  %88 = and i32 %87, 7, !dbg !11438
  %89 = icmp eq i32 %88, 0, !dbg !11438
  br i1 %89, label %91, label %90, !dbg !11440

90:                                               ; preds = %84
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3.210, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.209, i32 0, i32 0), i32 noundef 321) #18, !dbg !11441
  br label %91, !dbg !11441

91:                                               ; preds = %90, %84
  ret i8* %85, !dbg !11443
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @prvHeapInit() unnamed_addr #14 !dbg !11444 {
  call void @llvm.dbg.value(metadata i32 65536, metadata !11449, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata i32 ptrtoint ([65536 x i8]* @ucHeap to i32), metadata !11448, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536), metadata !11449, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), metadata !11448, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !11447, metadata !DIExpression()), !dbg !11450
  store %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !11451
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 1), align 4, !dbg !11452
  call void @llvm.dbg.value(metadata i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), metadata !11448, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), metadata !11448, metadata !DIExpression()), !dbg !11450
  call void @llvm.dbg.value(metadata i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), metadata !11448, metadata !DIExpression()), !dbg !11450
  store %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11453
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !11454
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 8, !dbg !11455
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !11446, metadata !DIExpression()), !dbg !11450
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !11456
  %1 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !11457
  store %struct.A_BLOCK_LINK* %1, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 4, !dbg !11458
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11459
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* @xFreeBytesRemaining, align 4, !dbg !11460
  store i1 true, i1* @xBlockAllocatedBit, align 4, !dbg !11461
  ret void, !dbg !11462
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef %0) unnamed_addr #15 !dbg !11463 {
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %0, metadata !11467, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !11468, metadata !DIExpression()), !dbg !11470
  br label %2, !dbg !11471

2:                                                ; preds = %2, %1
  %3 = phi %struct.A_BLOCK_LINK* [ @xStart, %1 ], [ %5, %2 ], !dbg !11473
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !11468, metadata !DIExpression()), !dbg !11470
  %4 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !11474
  %5 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %4, align 4, !dbg !11474
  %6 = icmp ult %struct.A_BLOCK_LINK* %5, %0, !dbg !11476
  br i1 %6, label %2, label %7, !dbg !11477, !llvm.loop !11478

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !11474
  %9 = bitcast %struct.A_BLOCK_LINK* %3 to i8*, !dbg !11480
  call void @llvm.dbg.value(metadata i8* %9, metadata !11469, metadata !DIExpression()), !dbg !11470
  %10 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 1, !dbg !11481
  %11 = load i32, i32* %10, align 4, !dbg !11481
  %12 = getelementptr inbounds i8, i8* %9, i32 %11, !dbg !11483
  %13 = bitcast %struct.A_BLOCK_LINK* %0 to i8*, !dbg !11484
  %14 = icmp eq i8* %12, %13, !dbg !11485
  %15 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4, !dbg !11470
  br i1 %14, label %17, label %19, !dbg !11486

17:                                               ; preds = %7
  %18 = add i32 %16, %11, !dbg !11487
  store i32 %18, i32* %10, align 4, !dbg !11487
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !11467, metadata !DIExpression()), !dbg !11470
  br label %19, !dbg !11489

19:                                               ; preds = %7, %17
  %20 = phi i8* [ %9, %17 ], [ %13, %7 ], !dbg !11490
  %21 = phi i32 [ %18, %17 ], [ %16, %7 ], !dbg !11491
  %22 = phi %struct.A_BLOCK_LINK* [ %3, %17 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %22, metadata !11467, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.value(metadata i8* %20, metadata !11469, metadata !DIExpression()), !dbg !11470
  %23 = getelementptr inbounds i8, i8* %20, i32 %21, !dbg !11493
  %24 = bitcast %struct.A_BLOCK_LINK* %5 to i8*, !dbg !11494
  %25 = icmp ne i8* %23, %24, !dbg !11495
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4
  %27 = icmp eq %struct.A_BLOCK_LINK* %5, %26
  %28 = select i1 %25, i1 true, i1 %27, !dbg !11496
  br i1 %28, label %37, label %29, !dbg !11496

29:                                               ; preds = %19
  %30 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 1, !dbg !11491
  %31 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %5, i32 0, i32 1, !dbg !11497
  %32 = load i32, i32* %31, align 4, !dbg !11497
  %33 = add i32 %32, %21, !dbg !11501
  store i32 %33, i32* %30, align 4, !dbg !11501
  %34 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %8, align 4, !dbg !11502
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %34, i32 0, i32 0, !dbg !11503
  %36 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %35, align 4, !dbg !11503
  br label %37, !dbg !11504

37:                                               ; preds = %19, %29
  %38 = phi %struct.A_BLOCK_LINK* [ %36, %29 ], [ %5, %19 ]
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 0, !dbg !11505
  store %struct.A_BLOCK_LINK* %38, %struct.A_BLOCK_LINK** %39, align 4, !dbg !11505
  %40 = icmp eq %struct.A_BLOCK_LINK* %3, %22, !dbg !11506
  br i1 %40, label %42, label %41, !dbg !11508

41:                                               ; preds = %37
  store %struct.A_BLOCK_LINK* %22, %struct.A_BLOCK_LINK** %8, align 4, !dbg !11509
  br label %42, !dbg !11511

42:                                               ; preds = %37, %41
  ret void, !dbg !11512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFree(i8* noundef %0) local_unnamed_addr #0 !dbg !11513 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11515, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.value(metadata i8* %0, metadata !11516, metadata !DIExpression()), !dbg !11518
  %2 = icmp eq i8* %0, null, !dbg !11519
  br i1 %2, label %35, label %3, !dbg !11521

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !11522
  call void @llvm.dbg.value(metadata i8* %4, metadata !11516, metadata !DIExpression()), !dbg !11518
  %5 = bitcast i8* %4 to %struct.A_BLOCK_LINK*, !dbg !11524
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %5, metadata !11517, metadata !DIExpression()), !dbg !11518
  %6 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !11525
  %7 = bitcast i8* %6 to i32*, !dbg !11525
  %8 = load i32, i32* %7, align 4, !dbg !11525
  %9 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11525
  %10 = select i1 %9, i32 -2147483648, i32 0, !dbg !11525
  %11 = and i32 %10, %8, !dbg !11525
  %12 = icmp eq i32 %11, 0, !dbg !11525
  br i1 %12, label %13, label %14, !dbg !11527

13:                                               ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.213, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.209, i32 0, i32 0), i32 noundef 341) #18, !dbg !11528
  br label %14, !dbg !11528

14:                                               ; preds = %13, %3
  %15 = bitcast i8* %4 to %struct.A_BLOCK_LINK**, !dbg !11530
  %16 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !11530
  %17 = icmp eq %struct.A_BLOCK_LINK* %16, null, !dbg !11530
  br i1 %17, label %19, label %18, !dbg !11532

18:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.209, i32 0, i32 0), i32 noundef 342) #18, !dbg !11533
  br label %19, !dbg !11533

19:                                               ; preds = %18, %14
  %20 = load i32, i32* %7, align 4, !dbg !11535
  %21 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11537
  %22 = select i1 %21, i32 -2147483648, i32 0, !dbg !11537
  %23 = and i32 %22, %20, !dbg !11538
  %24 = icmp eq i32 %23, 0, !dbg !11539
  br i1 %24, label %35, label %25, !dbg !11540

25:                                               ; preds = %19
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !11541
  %27 = icmp eq %struct.A_BLOCK_LINK* %26, null, !dbg !11544
  br i1 %27, label %28, label %35, !dbg !11545

28:                                               ; preds = %25
  %29 = xor i32 %22, -1, !dbg !11546
  %30 = and i32 %20, %29, !dbg !11548
  store i32 %30, i32* %7, align 4, !dbg !11548
  tail call void @vTaskSuspendAll() #18, !dbg !11549
  %31 = load i32, i32* %7, align 4, !dbg !11550
  %32 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !11552
  %33 = add i32 %32, %31, !dbg !11552
  store i32 %33, i32* @xFreeBytesRemaining, align 4, !dbg !11552
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %5) #20, !dbg !11553
  %34 = tail call i32 @xTaskResumeAll() #18, !dbg !11554
  br label %35, !dbg !11555

35:                                               ; preds = %25, %28, %19, %1
  ret void, !dbg !11556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetFreeHeapSize() local_unnamed_addr #9 !dbg !11557 {
  %1 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !11560
  ret i32 %1, !dbg !11561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetMinimumEverFreeHeapSize() local_unnamed_addr #9 !dbg !11562 {
  %1 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !11563
  ret i32 %1, !dbg !11564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @vPortInitialiseBlocks() local_unnamed_addr #7 !dbg !11565 {
  ret void, !dbg !11566
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11571, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 %1, metadata !11572, metadata !DIExpression()), !dbg !11574
  %3 = mul i32 %1, %0, !dbg !11575
  %4 = tail call i8* @pvPortMalloc(i32 noundef %3) #20, !dbg !11576
  call void @llvm.dbg.value(metadata i8* %4, metadata !11573, metadata !DIExpression()), !dbg !11574
  %5 = icmp eq i8* %4, null, !dbg !11577
  br i1 %5, label %8, label %6, !dbg !11579

6:                                                ; preds = %2
  %7 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef %3) #18, !dbg !11580
  br label %8, !dbg !11582

8:                                                ; preds = %6, %2
  ret i8* %4, !dbg !11583
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11584 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11588, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.value(metadata i32 %1, metadata !11589, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.value(metadata i8* null, metadata !11590, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.value(metadata i32 0, metadata !11591, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.value(metadata i8* %0, metadata !11592, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* null, metadata !11593, metadata !DIExpression()), !dbg !11594
  %3 = tail call i8* @pvPortCalloc(i32 noundef %1, i32 noundef 1) #20, !dbg !11595
  call void @llvm.dbg.value(metadata i8* %3, metadata !11590, metadata !DIExpression()), !dbg !11594
  %4 = icmp eq i8* %0, null, !dbg !11596
  br i1 %4, label %29, label %5, !dbg !11598

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !11599
  call void @llvm.dbg.value(metadata i8* %6, metadata !11592, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.value(metadata i8* %6, metadata !11593, metadata !DIExpression()), !dbg !11594
  %7 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !11601
  %8 = bitcast i8* %7 to i32*, !dbg !11601
  %9 = load i32, i32* %8, align 4, !dbg !11601
  %10 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11601
  %11 = select i1 %10, i32 -2147483648, i32 0, !dbg !11601
  %12 = and i32 %11, %9, !dbg !11601
  %13 = icmp eq i32 %12, 0, !dbg !11601
  br i1 %13, label %14, label %15, !dbg !11603

14:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.213, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.209, i32 0, i32 0), i32 noundef 546) #18, !dbg !11604
  br label %15, !dbg !11604

15:                                               ; preds = %14, %5
  %16 = bitcast i8* %6 to %struct.A_BLOCK_LINK**, !dbg !11606
  %17 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %16, align 4, !dbg !11606
  %18 = icmp eq %struct.A_BLOCK_LINK* %17, null, !dbg !11606
  br i1 %18, label %20, label %19, !dbg !11608

19:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.214, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.209, i32 0, i32 0), i32 noundef 547) #18, !dbg !11609
  br label %20, !dbg !11609

20:                                               ; preds = %19, %15
  %21 = load i32, i32* %8, align 4, !dbg !11611
  %22 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !11612
  %23 = select i1 %22, i32 2147483647, i32 -1, !dbg !11613
  %24 = and i32 %23, %21, !dbg !11614
  call void @llvm.dbg.value(metadata i32 %24, metadata !11591, metadata !DIExpression()), !dbg !11594
  %25 = add i32 %24, -8, !dbg !11615
  call void @llvm.dbg.value(metadata i32 %25, metadata !11591, metadata !DIExpression()), !dbg !11594
  %26 = icmp ult i32 %25, %1, !dbg !11616
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = tail call i8* @memcpy(i8* noundef %3, i8* noundef nonnull %0, i32 noundef %27) #18, !dbg !11618
  tail call void @vPortFree(i8* noundef nonnull %0) #20, !dbg !11619
  br label %29, !dbg !11620

29:                                               ; preds = %20, %2
  ret i8* %3, !dbg !11621
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMallocNC(i32 noundef %0) local_unnamed_addr #0 !dbg !11622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11624, metadata !DIExpression()), !dbg !11625
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #20, !dbg !11626
  ret i8* %2, !dbg !11627
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFreeNC(i8* noundef %0) local_unnamed_addr #0 !dbg !11628 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11630, metadata !DIExpression()), !dbg !11631
  tail call void @vPortFree(i8* noundef %0) #20, !dbg !11632
  ret void, !dbg !11633
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_malloc(i32 noundef %0) local_unnamed_addr #0 !dbg !11634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11636, metadata !DIExpression()), !dbg !11637
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #20, !dbg !11638
  ret i8* %2, !dbg !11639
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11642, metadata !DIExpression()), !dbg !11644
  call void @llvm.dbg.value(metadata i32 %1, metadata !11643, metadata !DIExpression()), !dbg !11644
  %3 = tail call i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) #20, !dbg !11645
  ret i8* %3, !dbg !11646
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_realloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11647 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11649, metadata !DIExpression()), !dbg !11651
  call void @llvm.dbg.value(metadata i32 %1, metadata !11650, metadata !DIExpression()), !dbg !11651
  %3 = tail call i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) #20, !dbg !11652
  ret i8* %3, !dbg !11653
}

; Function Attrs: noinline nounwind optsize
define dso_local void @__wrap_free(i8* noundef %0) local_unnamed_addr #0 !dbg !11654 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11656, metadata !DIExpression()), !dbg !11657
  tail call void @vPortFree(i8* noundef %0) #20, !dbg !11658
  ret void, !dbg !11659
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vPortSetupTimerInterrupt() local_unnamed_addr #5 !dbg !11660 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11661
  %2 = udiv i32 %1, 1000, !dbg !11662
  %3 = add nsw i32 %2, -1, !dbg !11663
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11664
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11665
  ret void, !dbg !11666
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @abort() local_unnamed_addr #12 !dbg !11667 {
  tail call void asm sideeffect "cpsid i", ""() #17, !dbg !11668, !srcloc !11669
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11670
  %2 = or i32 %1, 8, !dbg !11670
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11670
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !11671
  br label %3, !dbg !11672

3:                                                ; preds = %3, %0
  br label %3, !dbg !11673, !llvm.loop !11676
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @platform_assert(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11679 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11683, metadata !DIExpression()), !dbg !11686
  call void @llvm.dbg.value(metadata i8* %1, metadata !11684, metadata !DIExpression()), !dbg !11686
  call void @llvm.dbg.value(metadata i32 %2, metadata !11685, metadata !DIExpression()), !dbg !11686
  tail call void asm sideeffect "cpsid i", ""() #17, !dbg !11687, !srcloc !11688
  %4 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11689
  %5 = or i32 %4, 8, !dbg !11689
  store volatile i32 %5, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11689
  store i1 true, i1* @assert_expr.0, align 4, !dbg !11690
  store i8* %0, i8** @assert_expr.1, align 4, !dbg !11691
  store i8* %1, i8** @assert_expr.2, align 4, !dbg !11692
  store i32 %2, i32* @assert_expr.3, align 4, !dbg !11693
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !11694
  br label %6, !dbg !11695

6:                                                ; preds = %6, %3
  br label %6, !dbg !11696, !llvm.loop !11699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @exception_dump_config(i32 noundef %0) local_unnamed_addr #4 !dbg !11702 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11704, metadata !DIExpression()), !dbg !11705
  store i32 %0, i32* @reboot_flag, align 4, !dbg !11706
  ret void, !dbg !11707
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @exception_register_callbacks(%struct.exception_config_type* nocapture noundef readonly %0) local_unnamed_addr #15 !dbg !11708 {
  call void @llvm.dbg.value(metadata %struct.exception_config_type* %0, metadata !11713, metadata !DIExpression()), !dbg !11715
  %2 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !11716
  %3 = icmp sgt i32 %2, 5, !dbg !11718
  br i1 %3, label %30, label %4, !dbg !11719

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !11714, metadata !DIExpression()), !dbg !11715
  %5 = icmp sgt i32 %2, 0, !dbg !11720
  %6 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 0
  %7 = load void ()*, void ()** %6, align 4
  br i1 %5, label %8, label %23, !dbg !11724

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1
  br label %10, !dbg !11724

10:                                               ; preds = %8, %20
  %11 = phi i32 [ 0, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11714, metadata !DIExpression()), !dbg !11715
  %12 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 0, !dbg !11725
  %13 = load void ()*, void ()** %12, align 4, !dbg !11725
  %14 = icmp eq void ()* %13, %7, !dbg !11728
  br i1 %14, label %15, label %20, !dbg !11729

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 1, !dbg !11730
  %17 = load void ()*, void ()** %16, align 4, !dbg !11730
  %18 = load void ()*, void ()** %9, align 4, !dbg !11731
  %19 = icmp eq void ()* %17, %18, !dbg !11732
  br i1 %19, label %30, label %20, !dbg !11733

20:                                               ; preds = %10, %15
  %21 = add nuw nsw i32 %11, 1, !dbg !11734
  call void @llvm.dbg.value(metadata i32 %21, metadata !11714, metadata !DIExpression()), !dbg !11715
  %22 = icmp eq i32 %21, %2, !dbg !11720
  br i1 %22, label %23, label %10, !dbg !11724, !llvm.loop !11735

23:                                               ; preds = %20, %4
  %24 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 0, !dbg !11737
  store void ()* %7, void ()** %24, align 4, !dbg !11738
  %25 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1, !dbg !11739
  %26 = load void ()*, void ()** %25, align 4, !dbg !11739
  %27 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 1, !dbg !11740
  store void ()* %26, void ()** %27, align 4, !dbg !11741
  %28 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !11742
  %29 = add nsw i32 %28, 1, !dbg !11742
  store i32 %29, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !11742
  br label %30, !dbg !11743

30:                                               ; preds = %15, %1, %23
  %31 = phi i1 [ true, %23 ], [ false, %1 ], [ false, %15 ], !dbg !11744
  ret i1 %31, !dbg !11745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @exception_init() local_unnamed_addr #0 section ".ramTEXT" !dbg !11746 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11749
  %2 = and i32 %1, -9, !dbg !11749
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11749
  tail call void @Flash_ReturnReady() #18, !dbg !11750
  call void @llvm.dbg.value(metadata i32 0, metadata !11748, metadata !DIExpression()), !dbg !11751
  %3 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !11752
  %4 = icmp sgt i32 %3, 0, !dbg !11755
  br i1 %4, label %5, label %17, !dbg !11756

5:                                                ; preds = %0, %13
  %6 = phi i32 [ %14, %13 ], [ %3, %0 ]
  %7 = phi i32 [ %15, %13 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11748, metadata !DIExpression()), !dbg !11751
  %8 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %7, i32 0, !dbg !11757
  %9 = load void ()*, void ()** %8, align 4, !dbg !11757
  %10 = icmp eq void ()* %9, null, !dbg !11760
  br i1 %10, label %13, label %11, !dbg !11761

11:                                               ; preds = %5
  tail call void %9() #18, !dbg !11762
  %12 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !11752
  br label %13, !dbg !11764

13:                                               ; preds = %5, %11
  %14 = phi i32 [ %6, %5 ], [ %12, %11 ], !dbg !11752
  %15 = add nuw nsw i32 %7, 1, !dbg !11765
  call void @llvm.dbg.value(metadata i32 %15, metadata !11748, metadata !DIExpression()), !dbg !11751
  %16 = icmp slt i32 %15, %14, !dbg !11755
  br i1 %16, label %5, label %17, !dbg !11756, !llvm.loop !11766

17:                                               ; preds = %13, %0
  %18 = load i1, i1* @assert_expr.0, align 4, !dbg !11768
  br i1 %18, label %19, label %24, !dbg !11770

19:                                               ; preds = %17
  %20 = load i8*, i8** @assert_expr.1, align 4, !dbg !11771
  %21 = load i8*, i8** @assert_expr.2, align 4, !dbg !11773
  %22 = load i32, i32* @assert_expr.3, align 4, !dbg !11774
  %23 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.219, i32 0, i32 0), i8* noundef %20, i8* noundef %21, i32 noundef %22) #18, !dbg !11775
  br label %24, !dbg !11776

24:                                               ; preds = %19, %17
  ret void, !dbg !11777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @NMI_Handler() local_unnamed_addr #7 !dbg !11778 {
  ret void, !dbg !11779
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printUsageErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !11780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11782, metadata !DIExpression()), !dbg !11783
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.220, i32 0, i32 0)) #18, !dbg !11784
  call void @llvm.dbg.value(metadata i32 %0, metadata !11782, metadata !DIExpression(DW_OP_constu, 16, DW_OP_shr, DW_OP_stack_value)), !dbg !11783
  %3 = and i32 %0, 33554432, !dbg !11785
  %4 = icmp eq i32 %3, 0, !dbg !11785
  br i1 %4, label %7, label %5, !dbg !11787

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.221, i32 0, i32 0)) #18, !dbg !11788
  br label %7, !dbg !11790

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16777216, !dbg !11791
  %9 = icmp eq i32 %8, 0, !dbg !11791
  br i1 %9, label %12, label %10, !dbg !11793

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.222, i32 0, i32 0)) #18, !dbg !11794
  br label %12, !dbg !11796

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 524288, !dbg !11797
  %14 = icmp eq i32 %13, 0, !dbg !11797
  br i1 %14, label %17, label %15, !dbg !11799

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.223, i32 0, i32 0)) #18, !dbg !11800
  br label %17, !dbg !11802

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 262144, !dbg !11803
  %19 = icmp eq i32 %18, 0, !dbg !11803
  br i1 %19, label %22, label %20, !dbg !11805

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.224, i32 0, i32 0)) #18, !dbg !11806
  br label %22, !dbg !11808

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 131072, !dbg !11809
  %24 = icmp eq i32 %23, 0, !dbg !11809
  br i1 %24, label %27, label %25, !dbg !11811

25:                                               ; preds = %22
  %26 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.225, i32 0, i32 0)) #18, !dbg !11812
  br label %27, !dbg !11814

27:                                               ; preds = %25, %22
  %28 = and i32 %0, 65536, !dbg !11815
  %29 = icmp eq i32 %28, 0, !dbg !11815
  br i1 %29, label %32, label %30, !dbg !11817

30:                                               ; preds = %27
  %31 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.226, i32 0, i32 0)) #18, !dbg !11818
  br label %32, !dbg !11820

32:                                               ; preds = %30, %27
  ret void, !dbg !11821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printMemoryManagementErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !11822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11824, metadata !DIExpression()), !dbg !11825
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8.227, i32 0, i32 0)) #18, !dbg !11826
  call void @llvm.dbg.value(metadata i32 %0, metadata !11824, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !11825
  %3 = and i32 %0, 32, !dbg !11827
  %4 = icmp eq i32 %3, 0, !dbg !11829
  br i1 %4, label %7, label %5, !dbg !11830

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.9.228, i32 0, i32 0)) #18, !dbg !11831
  br label %7, !dbg !11833

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16, !dbg !11834
  %9 = icmp eq i32 %8, 0, !dbg !11836
  br i1 %9, label %12, label %10, !dbg !11837

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.10.229, i32 0, i32 0)) #18, !dbg !11838
  br label %12, !dbg !11840

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 8, !dbg !11841
  %14 = icmp eq i32 %13, 0, !dbg !11843
  br i1 %14, label %17, label %15, !dbg !11844

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11.230, i32 0, i32 0)) #18, !dbg !11845
  br label %17, !dbg !11847

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 2, !dbg !11848
  %19 = icmp eq i32 %18, 0, !dbg !11850
  br i1 %19, label %23, label %20, !dbg !11851

20:                                               ; preds = %17
  %21 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !11852
  %22 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.231, i32 0, i32 0), i32 noundef %21) #18, !dbg !11854
  br label %23, !dbg !11855

23:                                               ; preds = %20, %17
  %24 = and i32 %0, 1, !dbg !11856
  %25 = icmp eq i32 %24, 0, !dbg !11858
  br i1 %25, label %28, label %26, !dbg !11859

26:                                               ; preds = %23
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13.232, i32 0, i32 0)) #18, !dbg !11860
  br label %28, !dbg !11862

28:                                               ; preds = %26, %23
  %29 = and i32 %0, 128, !dbg !11863
  %30 = icmp eq i32 %29, 0, !dbg !11865
  br i1 %30, label %34, label %31, !dbg !11866

31:                                               ; preds = %28
  %32 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !11867
  %33 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.233, i32 0, i32 0), i32 noundef %32) #18, !dbg !11869
  br label %34, !dbg !11870

34:                                               ; preds = %31, %28
  ret void, !dbg !11871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printBusFaultErrorMsg(i32 noundef %0) local_unnamed_addr #0 !dbg !11872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11874, metadata !DIExpression()), !dbg !11875
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.234, i32 0, i32 0)) #18, !dbg !11876
  call void @llvm.dbg.value(metadata i32 %0, metadata !11874, metadata !DIExpression(DW_OP_constu, 65280, DW_OP_and, DW_OP_stack_value)), !dbg !11875
  call void @llvm.dbg.value(metadata i32 %0, metadata !11874, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !11875
  %3 = and i32 %0, 8192, !dbg !11877
  %4 = icmp eq i32 %3, 0, !dbg !11877
  br i1 %4, label %7, label %5, !dbg !11879

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16.235, i32 0, i32 0)) #18, !dbg !11880
  br label %7, !dbg !11882

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 4096, !dbg !11883
  %9 = icmp eq i32 %8, 0, !dbg !11883
  br i1 %9, label %12, label %10, !dbg !11885

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.17.236, i32 0, i32 0)) #18, !dbg !11886
  br label %12, !dbg !11888

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 2048, !dbg !11889
  %14 = icmp eq i32 %13, 0, !dbg !11889
  br i1 %14, label %17, label %15, !dbg !11891

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18.237, i32 0, i32 0)) #18, !dbg !11892
  br label %17, !dbg !11894

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 1024, !dbg !11895
  %19 = icmp eq i32 %18, 0, !dbg !11895
  br i1 %19, label %22, label %20, !dbg !11897

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19.238, i32 0, i32 0)) #18, !dbg !11898
  br label %22, !dbg !11900

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 512, !dbg !11901
  %24 = icmp eq i32 %23, 0, !dbg !11901
  br i1 %24, label %28, label %25, !dbg !11903

25:                                               ; preds = %22
  %26 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !11904
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.20.239, i32 0, i32 0), i32 noundef %26) #18, !dbg !11906
  br label %28, !dbg !11907

28:                                               ; preds = %25, %22
  %29 = and i32 %0, 256, !dbg !11908
  %30 = icmp eq i32 %29, 0, !dbg !11908
  br i1 %30, label %33, label %31, !dbg !11910

31:                                               ; preds = %28
  %32 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.21.240, i32 0, i32 0)) #18, !dbg !11911
  br label %33, !dbg !11913

33:                                               ; preds = %31, %28
  %34 = and i32 %0, 32768, !dbg !11914
  %35 = icmp eq i32 %34, 0, !dbg !11914
  br i1 %35, label %39, label %36, !dbg !11916

36:                                               ; preds = %33
  %37 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !11917
  %38 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22.241, i32 0, i32 0), i32 noundef %37) #18, !dbg !11919
  br label %39, !dbg !11920

39:                                               ; preds = %36, %33
  ret void, !dbg !11921
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @exception_reboot() local_unnamed_addr #0 !dbg !11922 {
  ret void, !dbg !11923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stackDump(i32* noundef %0) local_unnamed_addr #0 !dbg !11924 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !11928, metadata !DIExpression()), !dbg !11929
  %2 = load i32, i32* %0, align 4, !dbg !11930
  store i32 %2, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 0), align 4, !dbg !11931
  %3 = getelementptr inbounds i32, i32* %0, i32 1, !dbg !11932
  %4 = load i32, i32* %3, align 4, !dbg !11932
  store i32 %4, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !11933
  %5 = getelementptr inbounds i32, i32* %0, i32 2, !dbg !11934
  %6 = load i32, i32* %5, align 4, !dbg !11934
  store i32 %6, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !11935
  %7 = getelementptr inbounds i32, i32* %0, i32 3, !dbg !11936
  %8 = load i32, i32* %7, align 4, !dbg !11936
  store i32 %8, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !11937
  %9 = getelementptr inbounds i32, i32* %0, i32 4, !dbg !11938
  %10 = load i32, i32* %9, align 4, !dbg !11938
  store i32 %10, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !11939
  %11 = ptrtoint i32* %0 to i32, !dbg !11940
  %12 = add i32 %11, 32, !dbg !11941
  store i32 %12, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !11942
  %13 = getelementptr inbounds i32, i32* %0, i32 5, !dbg !11943
  %14 = load i32, i32* %13, align 4, !dbg !11943
  store i32 %14, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !11944
  %15 = getelementptr inbounds i32, i32* %0, i32 6, !dbg !11945
  %16 = load i32, i32* %15, align 4, !dbg !11945
  store i32 %16, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !11946
  %17 = getelementptr inbounds i32, i32* %0, i32 7, !dbg !11947
  %18 = load i32, i32* %17, align 4, !dbg !11947
  store i32 %18, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !11948
  %19 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !11949
  %20 = and i32 %19, 16, !dbg !11951
  %21 = icmp eq i32 %20, 0, !dbg !11952
  br i1 %21, label %22, label %58, !dbg !11953

22:                                               ; preds = %1
  %23 = getelementptr inbounds i32, i32* %0, i32 8, !dbg !11954
  %24 = load i32, i32* %23, align 4, !dbg !11954
  store i32 %24, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !11956
  %25 = getelementptr inbounds i32, i32* %0, i32 9, !dbg !11957
  %26 = load i32, i32* %25, align 4, !dbg !11957
  store i32 %26, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !11958
  %27 = getelementptr inbounds i32, i32* %0, i32 10, !dbg !11959
  %28 = load i32, i32* %27, align 4, !dbg !11959
  store i32 %28, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !11960
  %29 = getelementptr inbounds i32, i32* %0, i32 11, !dbg !11961
  %30 = load i32, i32* %29, align 4, !dbg !11961
  store i32 %30, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !11962
  %31 = getelementptr inbounds i32, i32* %0, i32 12, !dbg !11963
  %32 = load i32, i32* %31, align 4, !dbg !11963
  store i32 %32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !11964
  %33 = getelementptr inbounds i32, i32* %0, i32 13, !dbg !11965
  %34 = load i32, i32* %33, align 4, !dbg !11965
  store i32 %34, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !11966
  %35 = getelementptr inbounds i32, i32* %0, i32 14, !dbg !11967
  %36 = load i32, i32* %35, align 4, !dbg !11967
  store i32 %36, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !11968
  %37 = getelementptr inbounds i32, i32* %0, i32 15, !dbg !11969
  %38 = load i32, i32* %37, align 4, !dbg !11969
  store i32 %38, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !11970
  %39 = getelementptr inbounds i32, i32* %0, i32 16, !dbg !11971
  %40 = load i32, i32* %39, align 4, !dbg !11971
  store i32 %40, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !11972
  %41 = getelementptr inbounds i32, i32* %0, i32 17, !dbg !11973
  %42 = load i32, i32* %41, align 4, !dbg !11973
  store i32 %42, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !11974
  %43 = getelementptr inbounds i32, i32* %0, i32 18, !dbg !11975
  %44 = load i32, i32* %43, align 4, !dbg !11975
  store i32 %44, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !11976
  %45 = getelementptr inbounds i32, i32* %0, i32 19, !dbg !11977
  %46 = load i32, i32* %45, align 4, !dbg !11977
  store i32 %46, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !11978
  %47 = getelementptr inbounds i32, i32* %0, i32 20, !dbg !11979
  %48 = load i32, i32* %47, align 4, !dbg !11979
  store i32 %48, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !11980
  %49 = getelementptr inbounds i32, i32* %0, i32 21, !dbg !11981
  %50 = load i32, i32* %49, align 4, !dbg !11981
  store i32 %50, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !11982
  %51 = getelementptr inbounds i32, i32* %0, i32 22, !dbg !11983
  %52 = load i32, i32* %51, align 4, !dbg !11983
  store i32 %52, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !11984
  %53 = getelementptr inbounds i32, i32* %0, i32 23, !dbg !11985
  %54 = load i32, i32* %53, align 4, !dbg !11985
  store i32 %54, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !11986
  %55 = getelementptr inbounds i32, i32* %0, i32 24, !dbg !11987
  %56 = load i32, i32* %55, align 4, !dbg !11987
  store i32 %56, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !11988
  %57 = add i32 %11, 104, !dbg !11989
  store i32 %57, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !11989
  br label %58, !dbg !11990

58:                                               ; preds = %22, %1
  %59 = phi i32 [ %57, %22 ], [ %12, %1 ]
  %60 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11991
  %61 = and i32 %60, 512, !dbg !11993
  %62 = icmp eq i32 %61, 0, !dbg !11993
  %63 = and i32 %18, 512
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %62, i1 true, i1 %64, !dbg !11994
  br i1 %65, label %68, label %66, !dbg !11994

66:                                               ; preds = %58
  %67 = add i32 %59, 4, !dbg !11995
  store i32 %67, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !11995
  br label %68, !dbg !11997

68:                                               ; preds = %66, %58
  %69 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.242, i32 0, i32 0), i32 noundef %2) #18, !dbg !11998
  %70 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !11999
  %71 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24.243, i32 0, i32 0), i32 noundef %70) #18, !dbg !12000
  %72 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !12001
  %73 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25.244, i32 0, i32 0), i32 noundef %72) #18, !dbg !12002
  %74 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !12003
  %75 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i32 noundef %74) #18, !dbg !12004
  %76 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 4), align 4, !dbg !12005
  %77 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i32 0, i32 0), i32 noundef %76) #18, !dbg !12006
  %78 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 5), align 4, !dbg !12007
  %79 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0), i32 noundef %78) #18, !dbg !12008
  %80 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 6), align 4, !dbg !12009
  %81 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i32 noundef %80) #18, !dbg !12010
  %82 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 7), align 4, !dbg !12011
  %83 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i32 0, i32 0), i32 noundef %82) #18, !dbg !12012
  %84 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 8), align 4, !dbg !12013
  %85 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0), i32 noundef %84) #18, !dbg !12014
  %86 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 9), align 4, !dbg !12015
  %87 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0), i32 noundef %86) #18, !dbg !12016
  %88 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 10), align 4, !dbg !12017
  %89 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 noundef %88) #18, !dbg !12018
  %90 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 11), align 4, !dbg !12019
  %91 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), i32 noundef %90) #18, !dbg !12020
  %92 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !12021
  %93 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0), i32 noundef %92) #18, !dbg !12022
  %94 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !12023
  %95 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i32 0, i32 0), i32 noundef %94) #18, !dbg !12024
  %96 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !12025
  %97 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i32 noundef %96) #18, !dbg !12026
  %98 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !12027
  %99 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0), i32 noundef %98) #18, !dbg !12028
  %100 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !12029
  %101 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i32 0, i32 0), i32 noundef %100) #18, !dbg !12030
  %102 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !12031
  %103 = and i32 %102, 4, !dbg !12033
  %104 = icmp eq i32 %103, 0, !dbg !12033
  br i1 %104, label %108, label %105, !dbg !12034

105:                                              ; preds = %68
  %106 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !12035
  %107 = or i32 %106, 2, !dbg !12035
  store i32 %107, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !12035
  br label %108, !dbg !12037

108:                                              ; preds = %68, %105
  %109 = phi i32* [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), %105 ], [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), %68 ]
  %110 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !12038
  store i32 %110, i32* %109, align 4, !dbg !12038
  %111 = and i32 %102, 16, !dbg !12039
  %112 = icmp eq i32 %111, 0, !dbg !12041
  br i1 %112, label %113, label %182, !dbg !12042

113:                                              ; preds = %108
  %114 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !12043
  %115 = or i32 %114, 4, !dbg !12043
  store i32 %115, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !12043
  %116 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !12045
  %117 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i32 0, i32 0), i32 noundef %116) #18, !dbg !12046
  %118 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !12047
  %119 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i32 0, i32 0), i32 noundef %118) #18, !dbg !12048
  %120 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !12049
  %121 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0), i32 noundef %120) #18, !dbg !12050
  %122 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !12051
  %123 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0), i32 noundef %122) #18, !dbg !12052
  %124 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !12053
  %125 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0), i32 noundef %124) #18, !dbg !12054
  %126 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !12055
  %127 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0), i32 noundef %126) #18, !dbg !12056
  %128 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !12057
  %129 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i32 noundef %128) #18, !dbg !12058
  %130 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !12059
  %131 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i32 0, i32 0), i32 noundef %130) #18, !dbg !12060
  %132 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !12061
  %133 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i32 noundef %132) #18, !dbg !12062
  %134 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !12063
  %135 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0), i32 noundef %134) #18, !dbg !12064
  %136 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !12065
  %137 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0), i32 noundef %136) #18, !dbg !12066
  %138 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !12067
  %139 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i32 noundef %138) #18, !dbg !12068
  %140 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !12069
  %141 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i32 0, i32 0), i32 noundef %140) #18, !dbg !12070
  %142 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !12071
  %143 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i32 noundef %142) #18, !dbg !12072
  %144 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !12073
  %145 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i32 noundef %144) #18, !dbg !12074
  %146 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !12075
  %147 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55.245, i32 0, i32 0), i32 noundef %146) #18, !dbg !12076
  %148 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 38), align 4, !dbg !12077
  %149 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i32 0, i32 0), i32 noundef %148) #18, !dbg !12078
  %150 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 39), align 4, !dbg !12079
  %151 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57.246, i32 0, i32 0), i32 noundef %150) #18, !dbg !12080
  %152 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 40), align 4, !dbg !12081
  %153 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0), i32 noundef %152) #18, !dbg !12082
  %154 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 41), align 4, !dbg !12083
  %155 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59, i32 0, i32 0), i32 noundef %154) #18, !dbg !12084
  %156 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 42), align 4, !dbg !12085
  %157 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0), i32 noundef %156) #18, !dbg !12086
  %158 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 43), align 4, !dbg !12087
  %159 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i32 0, i32 0), i32 noundef %158) #18, !dbg !12088
  %160 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 44), align 4, !dbg !12089
  %161 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i32 noundef %160) #18, !dbg !12090
  %162 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 45), align 4, !dbg !12091
  %163 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), i32 noundef %162) #18, !dbg !12092
  %164 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 46), align 4, !dbg !12093
  %165 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i32 0, i32 0), i32 noundef %164) #18, !dbg !12094
  %166 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 47), align 4, !dbg !12095
  %167 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i32 noundef %166) #18, !dbg !12096
  %168 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 48), align 4, !dbg !12097
  %169 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66.247, i32 0, i32 0), i32 noundef %168) #18, !dbg !12098
  %170 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 49), align 4, !dbg !12099
  %171 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i32 0, i32 0), i32 noundef %170) #18, !dbg !12100
  %172 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 50), align 4, !dbg !12101
  %173 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i32 0, i32 0), i32 noundef %172) #18, !dbg !12102
  %174 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 51), align 4, !dbg !12103
  %175 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i32 0, i32 0), i32 noundef %174) #18, !dbg !12104
  %176 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 52), align 4, !dbg !12105
  %177 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0), i32 noundef %176) #18, !dbg !12106
  %178 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 53), align 4, !dbg !12107
  %179 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i32 0, i32 0), i32 noundef %178) #18, !dbg !12108
  %180 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !12109
  %181 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i32 0, i32 0), i32 noundef %180) #18, !dbg !12110
  br label %182, !dbg !12111

182:                                              ; preds = %113, %108
  %183 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !12112
  %184 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.73, i32 0, i32 0), i32 noundef %183) #18, !dbg !12113
  %185 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), align 4, !dbg !12114
  %186 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.74, i32 0, i32 0), i32 noundef %185) #18, !dbg !12115
  %187 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), align 4, !dbg !12116
  %188 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75, i32 0, i32 0), i32 noundef %187) #18, !dbg !12117
  %189 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !12118
  %190 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i32 0, i32 0), i32 noundef %189) #18, !dbg !12119
  %191 = tail call fastcc zeroext i1 @reboot_check() #20, !dbg !12120
  br i1 %191, label %192, label %193, !dbg !12122

192:                                              ; preds = %182
  tail call void @exception_reboot() #20, !dbg !12123
  br label %193, !dbg !12125

193:                                              ; preds = %192, %182
  ret void, !dbg !12126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @reboot_check() unnamed_addr #9 !dbg !12127 {
  %1 = load i32, i32* @reboot_flag, align 4, !dbg !12130
  %2 = icmp eq i32 %1, -559038737, !dbg !12131
  ret i1 %2, !dbg !12132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @memoryDumpAll() local_unnamed_addr #0 !dbg !12133 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12137, metadata !DIExpression()), !dbg !12138
  %1 = load i8*, i8** getelementptr inbounds ([6 x %struct.memory_region_type], [6 x %struct.memory_region_type]* @memory_regions, i32 0, i32 0, i32 0), align 4, !dbg !12139
  %2 = icmp eq i8* %1, null, !dbg !12144
  br i1 %2, label %3, label %6, !dbg !12145

3:                                                ; preds = %44, %0
  call void @llvm.dbg.value(metadata i32 0, metadata !12137, metadata !DIExpression()), !dbg !12138
  %4 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !12146
  %5 = icmp eq i32 %4, 0, !dbg !12149
  br i1 %5, label %61, label %49, !dbg !12150

6:                                                ; preds = %0, %44
  %7 = phi i32 [ %45, %44 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12137, metadata !DIExpression()), !dbg !12138
  %8 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 3, !dbg !12151
  %9 = load i32, i32* %8, align 4, !dbg !12151
  %10 = icmp eq i32 %9, 0, !dbg !12153
  br i1 %10, label %44, label %11, !dbg !12154

11:                                               ; preds = %6
  %12 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 1, !dbg !12155
  %13 = load i32*, i32** %12, align 4, !dbg !12155
  call void @llvm.dbg.value(metadata i32* %13, metadata !12135, metadata !DIExpression()), !dbg !12138
  %14 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 2, !dbg !12156
  %15 = load i32*, i32** %14, align 4, !dbg !12156
  call void @llvm.dbg.value(metadata i32* %15, metadata !12136, metadata !DIExpression()), !dbg !12138
  %16 = icmp ult i32* %13, %15, !dbg !12157
  br i1 %16, label %17, label %44, !dbg !12160

17:                                               ; preds = %11, %41
  %18 = phi i32* [ %42, %41 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32* %18, metadata !12135, metadata !DIExpression()), !dbg !12138
  %19 = load i32, i32* %18, align 4, !dbg !12161
  %20 = icmp eq i32 %19, 0, !dbg !12164
  %21 = getelementptr inbounds i32, i32* %18, i32 1
  %22 = load i32, i32* %21, align 4, !dbg !12165
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %20, i1 %23, i1 false, !dbg !12166
  br i1 %24, label %25, label %33, !dbg !12166

25:                                               ; preds = %17
  %26 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !12167
  %27 = load i32, i32* %26, align 4, !dbg !12168
  %28 = icmp eq i32 %27, 0, !dbg !12169
  br i1 %28, label %29, label %33, !dbg !12170

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !12171
  %31 = load i32, i32* %30, align 4, !dbg !12172
  %32 = icmp eq i32 %31, 0, !dbg !12173
  br i1 %32, label %41, label %33, !dbg !12174

33:                                               ; preds = %17, %29, %25
  %34 = phi i32 [ 0, %29 ], [ 0, %25 ], [ %22, %17 ], !dbg !12175
  %35 = ptrtoint i32* %18 to i32, !dbg !12176
  %36 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !12177
  %37 = load i32, i32* %36, align 4, !dbg !12178
  %38 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !12179
  %39 = load i32, i32* %38, align 4, !dbg !12180
  %40 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.77, i32 0, i32 0), i32 noundef %35, i32 noundef %19, i32 noundef %34, i32 noundef %37, i32 noundef %39) #18, !dbg !12181
  br label %41, !dbg !12182

41:                                               ; preds = %29, %33
  %42 = getelementptr inbounds i32, i32* %18, i32 4, !dbg !12183
  call void @llvm.dbg.value(metadata i32* %42, metadata !12135, metadata !DIExpression()), !dbg !12138
  %43 = icmp ult i32* %42, %15, !dbg !12157
  br i1 %43, label %17, label %44, !dbg !12160, !llvm.loop !12184

44:                                               ; preds = %41, %11, %6
  %45 = add i32 %7, 1, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %45, metadata !12137, metadata !DIExpression()), !dbg !12138
  %46 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %45, i32 0, !dbg !12139
  %47 = load i8*, i8** %46, align 4, !dbg !12139
  %48 = icmp eq i8* %47, null, !dbg !12144
  br i1 %48, label %3, label %6, !dbg !12145, !llvm.loop !12187

49:                                               ; preds = %3, %57
  %50 = phi i32 [ %58, %57 ], [ %4, %3 ]
  %51 = phi i32 [ %59, %57 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !12137, metadata !DIExpression()), !dbg !12138
  %52 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %51, i32 1, !dbg !12190
  %53 = load void ()*, void ()** %52, align 4, !dbg !12190
  %54 = icmp eq void ()* %53, null, !dbg !12193
  br i1 %54, label %57, label %55, !dbg !12194

55:                                               ; preds = %49
  tail call void %53() #18, !dbg !12195
  %56 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !12146
  br label %57, !dbg !12197

57:                                               ; preds = %49, %55
  %58 = phi i32 [ %50, %49 ], [ %56, %55 ], !dbg !12146
  %59 = add nuw i32 %51, 1, !dbg !12198
  call void @llvm.dbg.value(metadata i32 %59, metadata !12137, metadata !DIExpression()), !dbg !12138
  %60 = icmp ult i32 %59, %58, !dbg !12149
  br i1 %60, label %49, label %61, !dbg !12150, !llvm.loop !12199

61:                                               ; preds = %57, %3
  %62 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78.248, i32 0, i32 0)) #18, !dbg !12201
  ret void, !dbg !12202
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Hard_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !12203 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !12205, metadata !DIExpression()), !dbg !12206
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.79, i32 0, i32 0)) #18, !dbg !12207
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12208
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.80, i32 0, i32 0), i32 noundef %3) #18, !dbg !12209
  %5 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12210
  %6 = and i32 %5, 1073741824, !dbg !12212
  %7 = icmp eq i32 %6, 0, !dbg !12213
  br i1 %7, label %28, label %8, !dbg !12214

8:                                                ; preds = %1
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81.249, i32 0, i32 0)) #18, !dbg !12215
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12217
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %10) #18, !dbg !12218
  %12 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12219
  %13 = icmp ult i32 %12, 65536, !dbg !12221
  br i1 %13, label %16, label %14, !dbg !12222

14:                                               ; preds = %8
  %15 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12223
  tail call void @printUsageErrorMsg(i32 noundef %15) #20, !dbg !12225
  br label %16, !dbg !12226

16:                                               ; preds = %14, %8
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12227
  %18 = and i32 %17, 65280, !dbg !12229
  %19 = icmp eq i32 %18, 0, !dbg !12230
  br i1 %19, label %22, label %20, !dbg !12231

20:                                               ; preds = %16
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12232
  tail call void @printBusFaultErrorMsg(i32 noundef %21) #20, !dbg !12234
  br label %22, !dbg !12235

22:                                               ; preds = %20, %16
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12236
  %24 = and i32 %23, 255, !dbg !12238
  %25 = icmp eq i32 %24, 0, !dbg !12239
  br i1 %25, label %28, label %26, !dbg !12240

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12241
  tail call void @printMemoryManagementErrorMsg(i32 noundef %27) #20, !dbg !12243
  br label %28, !dbg !12244

28:                                               ; preds = %22, %26, %1
  tail call void @stackDump(i32* noundef %0) #20, !dbg !12245
  tail call void @memoryDumpAll() #20, !dbg !12246
  br label %29, !dbg !12247

29:                                               ; preds = %28, %29
  br label %29, !dbg !12247, !llvm.loop !12248
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @MemManage_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !12250 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !12252, metadata !DIExpression()), !dbg !12253
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83, i32 0, i32 0)) #18, !dbg !12254
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12255
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #18, !dbg !12256
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12257
  %6 = and i32 %5, 255, !dbg !12259
  %7 = icmp eq i32 %6, 0, !dbg !12260
  br i1 %7, label %10, label %8, !dbg !12261

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12262
  tail call void @printMemoryManagementErrorMsg(i32 noundef %9) #20, !dbg !12264
  br label %10, !dbg !12265

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #20, !dbg !12266
  tail call void @memoryDumpAll() #20, !dbg !12267
  br label %11, !dbg !12268

11:                                               ; preds = %10, %11
  br label %11, !dbg !12268, !llvm.loop !12269
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Bus_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !12271 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !12273, metadata !DIExpression()), !dbg !12274
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i32 0, i32 0)) #18, !dbg !12275
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12276
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #18, !dbg !12277
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12278
  %6 = and i32 %5, 65280, !dbg !12280
  %7 = icmp eq i32 %6, 0, !dbg !12281
  br i1 %7, label %10, label %8, !dbg !12282

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12283
  tail call void @printBusFaultErrorMsg(i32 noundef %9) #20, !dbg !12285
  br label %10, !dbg !12286

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #20, !dbg !12287
  tail call void @memoryDumpAll() #20, !dbg !12288
  br label %11, !dbg !12289

11:                                               ; preds = %10, %11
  br label %11, !dbg !12289, !llvm.loop !12290
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Usage_Fault_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !12292 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !12294, metadata !DIExpression()), !dbg !12295
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.85, i32 0, i32 0)) #18, !dbg !12296
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12297
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #18, !dbg !12298
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12299
  %6 = icmp ult i32 %5, 65536, !dbg !12301
  br i1 %6, label %9, label %7, !dbg !12302

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12303
  tail call void @printUsageErrorMsg(i32 noundef %8) #20, !dbg !12305
  br label %9, !dbg !12306

9:                                                ; preds = %7, %1
  tail call void @stackDump(i32* noundef %0) #20, !dbg !12307
  tail call void @memoryDumpAll() #20, !dbg !12308
  br label %10, !dbg !12309

10:                                               ; preds = %9, %10
  br label %10, !dbg !12309, !llvm.loop !12310
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Debug_Monitor_Handler(i32* noundef %0) local_unnamed_addr #12 !dbg !12312 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !12314, metadata !DIExpression()), !dbg !12318
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.86, i32 0, i32 0)) #18, !dbg !12319
  call void @llvm.dbg.value(metadata i32 12, metadata !12315, metadata !DIExpression()), !dbg !12318
  %3 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !12320
  call void @llvm.dbg.value(metadata i32 %3, metadata !12317, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !12318
  %4 = load volatile i32, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !12322
  call void @llvm.dbg.value(metadata i32 %4, metadata !12316, metadata !DIExpression()), !dbg !12318
  %5 = and i32 %3, 16777216, !dbg !12323
  %6 = icmp eq i32 %5, 0, !dbg !12323
  %7 = select i1 %6, i32 78, i32 89, !dbg !12323
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.87, i32 0, i32 0), i32 noundef %7, i32 noundef %4) #18, !dbg !12324
  tail call void @stackDump(i32* noundef %0) #20, !dbg !12325
  tail call void @memoryDumpAll() #20, !dbg !12326
  br label %9, !dbg !12327

9:                                                ; preds = %9, %1
  br label %9, !dbg !12327, !llvm.loop !12328
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @CommonFault_Handler() #16 section ".ramTEXT" !dbg !12330 {
  tail call void asm sideeffect "cpsid i                       \0Aldr r3, =pxExceptionStack     \0Aldr r3, [r3]                  \0Aldr r0, =pTaskContext         \0Aldr r0, [r0]                  \0Aadd r0, r0, #16               \0Astmia r0!, {r4-r11}           \0Amov r5, r12                   \0Aadd r0, r0, #20               \0Amrs r1, control               \0Astr r1, [r0], #4              \0Astr r5, [r0], #4              \0Amrs r4, msp                   \0Astr r4, [r0], #4              \0Amrs r1, psp                   \0Astr r1, [r0]                  \0Atst r5, #0x10                 \0Aitt eq                        \0Aaddeq r0, r0, #68             \0Avstmeq r0, {s16-s31}          \0Acmp r3, #0                    \0Ait ne                         \0Amovne sp, r3                  \0Apush {lr}                     \0Abl exception_init             \0Apop {lr}                      \0Atst r5, #4                    \0Aite eq                        \0Amoveq r0, r4                  \0Amrsne r0, psp                 \0Abx lr                         \0A", ""() #17, !dbg !12331, !srcloc !12332
  unreachable, !dbg !12333
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @HardFault_Handler() #16 section ".ramTEXT" !dbg !12334 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Hard_Fault_Handler         \0A", ""() #17, !dbg !12335, !srcloc !12336
  unreachable, !dbg !12337
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @MemManage_Handler() #16 section ".ramTEXT" !dbg !12338 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl MemManage_Fault_Handler    \0A", ""() #17, !dbg !12339, !srcloc !12340
  unreachable, !dbg !12341
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @BusFault_Handler() #16 section ".ramTEXT" !dbg !12342 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Bus_Fault_Handler          \0A", ""() #17, !dbg !12343, !srcloc !12344
  unreachable, !dbg !12345
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @UsageFault_Handler() #16 section ".ramTEXT" !dbg !12346 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Usage_Fault_Handler        \0A", ""() #17, !dbg !12347, !srcloc !12348
  unreachable, !dbg !12349
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @DebugMon_Handler() #16 section ".ramTEXT" !dbg !12350 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Debug_Monitor_Handler      \0A", ""() #17, !dbg !12351, !srcloc !12352
  unreachable, !dbg !12353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vApplicationStackOverflowHook(i8* noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !12354 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12358, metadata !DIExpression()), !dbg !12360
  call void @llvm.dbg.value(metadata i8* %1, metadata !12359, metadata !DIExpression()), !dbg !12360
  %3 = ptrtoint i8* %0 to i32, !dbg !12361
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.252, i32 0, i32 0), i32 noundef %3, i8* noundef %1) #18, !dbg !12362
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.253, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.254, i32 0, i32 0), i32 noundef 103) #18, !dbg !12363
  ret void, !dbg !12366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, ...) #0 !dbg !12367 {
  %6 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12369, metadata !DIExpression()), !dbg !12381
  call void @llvm.dbg.value(metadata i8* %1, metadata !12370, metadata !DIExpression()), !dbg !12381
  call void @llvm.dbg.value(metadata i32 %2, metadata !12371, metadata !DIExpression()), !dbg !12381
  call void @llvm.dbg.value(metadata i32 %3, metadata !12372, metadata !DIExpression()), !dbg !12381
  call void @llvm.dbg.value(metadata i8* %4, metadata !12373, metadata !DIExpression()), !dbg !12381
  %7 = bitcast %struct.__va_list* %6 to i8*, !dbg !12382
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !12382
  call void @llvm.dbg.declare(metadata %struct.__va_list* %6, metadata !12374, metadata !DIExpression()), !dbg !12383
  call void @llvm.va_start(i8* nonnull %7), !dbg !12384
  %8 = bitcast %struct.__va_list* %6 to i32*, !dbg !12385
  %9 = load i32, i32* %8, align 4, !dbg !12385
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !12385
  call void @vprint_module_log(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %10) #20, !dbg !12385
  call void @llvm.va_end(i8* nonnull %7), !dbg !12386
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !12387
  ret void, !dbg !12387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, ...) #0 !dbg !12388 {
  %8 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12390, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i8* %1, metadata !12391, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i32 %2, metadata !12392, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i32 %3, metadata !12393, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i8* %4, metadata !12394, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i32 %5, metadata !12395, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata i8* %6, metadata !12396, metadata !DIExpression()), !dbg !12398
  %9 = bitcast %struct.__va_list* %8 to i8*, !dbg !12399
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17, !dbg !12399
  call void @llvm.dbg.declare(metadata %struct.__va_list* %8, metadata !12397, metadata !DIExpression()), !dbg !12400
  call void @llvm.va_start(i8* nonnull %9), !dbg !12401
  %10 = bitcast %struct.__va_list* %8 to i32*, !dbg !12402
  %11 = load i32, i32* %10, align 4, !dbg !12402
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !12402
  call void @vdump_module_buffer(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %12) #20, !dbg !12402
  call void @llvm.va_end(i8* nonnull %9), !dbg !12403
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17, !dbg !12404
  ret void, !dbg !12404
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vdump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %7) local_unnamed_addr #0 !dbg !12405 {
  %9 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !12416, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i8* %0, metadata !12409, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i8* %1, metadata !12410, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 %2, metadata !12411, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 %3, metadata !12412, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i8* %4, metadata !12413, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 %5, metadata !12414, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i8* %6, metadata !12415, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i8* %0, metadata !12417, metadata !DIExpression()), !dbg !12431
  %10 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !12432
  %11 = bitcast i8* %10 to i32*, !dbg !12432
  %12 = load i32, i32* %11, align 4, !dbg !12432
  %13 = icmp eq i32 %12, 0, !dbg !12433
  br i1 %13, label %14, label %101, !dbg !12434

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !12435
  %16 = bitcast i8* %15 to i32*, !dbg !12435
  %17 = load i32, i32* %16, align 4, !dbg !12435
  %18 = icmp ugt i32 %17, %3, !dbg !12436
  br i1 %18, label %101, label %19, !dbg !12437

19:                                               ; preds = %14
  %20 = load i1, i1* @syslog_task_ready, align 4, !dbg !12438
  br i1 %20, label %21, label %28, !dbg !12439

21:                                               ; preds = %19
  %22 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !12440
  %23 = icmp eq i32 %22, 0, !dbg !12441
  br i1 %23, label %24, label %50, !dbg !12442

24:                                               ; preds = %21
  %25 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !12443
  %26 = and i32 %25, 255, !dbg !12444
  %27 = icmp eq i32 %26, 0, !dbg !12445
  br i1 %27, label %28, label %50, !dbg !12446

28:                                               ; preds = %24, %19
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !12447
  %30 = icmp eq i32 %29, 0, !dbg !12448
  br i1 %30, label %101, label %31, !dbg !12449

31:                                               ; preds = %28
  %32 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !12450, !srcloc !12456
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !12450
  call void @llvm.dbg.value(metadata i32 %33, metadata !12453, metadata !DIExpression()) #17, !dbg !12457
  call void @llvm.dbg.value(metadata i32 undef, metadata !12454, metadata !DIExpression()) #17, !dbg !12457
  call void @llvm.dbg.value(metadata i32 %33, metadata !12419, metadata !DIExpression()), !dbg !12458
  %34 = load i32, i32* @syslog_init_done, align 4, !dbg !12459
  %35 = icmp ugt i32 %34, 1, !dbg !12461
  br i1 %35, label %36, label %47, !dbg !12462

36:                                               ; preds = %31
  %37 = tail call fastcc i32 @get_current_time_in_ms() #20, !dbg !12463
  %38 = bitcast i8* %0 to i8**, !dbg !12465
  %39 = load i8*, i8** %38, align 4, !dbg !12465
  %40 = icmp ult i32 %3, 4, !dbg !12466
  br i1 %40, label %41, label %44, !dbg !12466

41:                                               ; preds = %36
  %42 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !12466
  %43 = load i8*, i8** %42, align 4, !dbg !12466
  br label %44, !dbg !12466

44:                                               ; preds = %36, %41
  %45 = phi i8* [ %43, %41 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.264, i32 0, i32 0), %36 ], !dbg !12466
  %46 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.265, i32 0, i32 0), i32 noundef %37, i8* noundef %39, i8* noundef %45, i8* noundef %1, i32 noundef %2) #18, !dbg !12467
  br label %47, !dbg !12468

47:                                               ; preds = %44, %31
  %48 = tail call i32 @vprintf(i8* noundef %6, [1 x i32] %7) #18, !dbg !12469
  %49 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.266, i32 0, i32 0)) #18, !dbg !12470
  tail call void @hex_dump_data(i8* noundef %4, i32 noundef %5) #20, !dbg !12471
  call void @llvm.dbg.value(metadata i32 %33, metadata !12472, metadata !DIExpression()) #17, !dbg !12475
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #17, !dbg !12477, !srcloc !12478
  br label %101, !dbg !12479

50:                                               ; preds = %24, %21
  %51 = bitcast %struct.syslog_buffer_t** %9 to i8*, !dbg !12480
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #17, !dbg !12480
  %52 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #20, !dbg !12481
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %52, metadata !12426, metadata !DIExpression()), !dbg !12482
  store %struct.syslog_buffer_t* %52, %struct.syslog_buffer_t** %9, align 4, !dbg !12483
  %53 = icmp eq %struct.syslog_buffer_t* %52, null, !dbg !12484
  br i1 %53, label %100, label %54, !dbg !12486

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 0, !dbg !12487
  call void @llvm.dbg.value(metadata i8* %55, metadata !12428, metadata !DIExpression()), !dbg !12482
  %56 = bitcast i8* %55 to i32*, !dbg !12488
  store i32 1, i32* %56, align 4, !dbg !12489
  %57 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 4, !dbg !12490
  call void @llvm.dbg.value(metadata i8* %57, metadata !12429, metadata !DIExpression()), !dbg !12482
  %58 = bitcast i8* %0 to i8**, !dbg !12491
  %59 = load i8*, i8** %58, align 4, !dbg !12491
  %60 = bitcast i8* %57 to i8**, !dbg !12492
  store i8* %59, i8** %60, align 4, !dbg !12493
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 8, !dbg !12494
  %62 = bitcast i8* %61 to i32*, !dbg !12494
  store i32 %3, i32* %62, align 4, !dbg !12495
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 12, !dbg !12496
  %64 = bitcast i8* %63 to i8**, !dbg !12496
  store i8* %1, i8** %64, align 4, !dbg !12497
  %65 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 16, !dbg !12498
  %66 = bitcast i8* %65 to i32*, !dbg !12498
  store i32 %2, i32* %66, align 4, !dbg !12499
  %67 = tail call fastcc i32 @get_current_time_in_ms() #20, !dbg !12500
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 20, !dbg !12501
  %69 = bitcast i8* %68 to i32*, !dbg !12501
  store i32 %67, i32* %69, align 4, !dbg !12502
  %70 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 24, !dbg !12503
  %71 = tail call i32 @vsnprintf(i8* noundef nonnull %70, i32 noundef 128, i8* noundef %6, [1 x i32] %7) #18, !dbg !12504
  %72 = icmp slt i32 %5, 2048, !dbg !12505
  %73 = select i1 %72, i32 %5, i32 2048, !dbg !12505
  call void @llvm.dbg.value(metadata i32 %73, metadata !12414, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 0, metadata !12418, metadata !DIExpression()), !dbg !12431
  %74 = icmp sgt i32 %73, 128, !dbg !12506
  br i1 %74, label %75, label %81, !dbg !12508

75:                                               ; preds = %54
  %76 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !12509
  %77 = and i32 %76, 255, !dbg !12512
  %78 = icmp eq i32 %77, 0, !dbg !12513
  %79 = add nsw i32 %73, -128
  call void @llvm.dbg.value(metadata i32 undef, metadata !12418, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 128, metadata !12414, metadata !DIExpression()), !dbg !12431
  %80 = select i1 %78, i32 %79, i32 0, !dbg !12514
  br label %81, !dbg !12514

81:                                               ; preds = %75, %54
  %82 = phi i32 [ 0, %54 ], [ %80, %75 ], !dbg !12482
  %83 = phi i32 [ %5, %54 ], [ 128, %75 ], !dbg !12482
  call void @llvm.dbg.value(metadata i32 %83, metadata !12414, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata i32 %82, metadata !12418, metadata !DIExpression()), !dbg !12431
  %84 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 160, !dbg !12515
  %85 = tail call i8* @memcpy(i8* noundef nonnull %84, i8* noundef %4, i32 noundef %83) #18, !dbg !12516
  %86 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 156, !dbg !12517
  %87 = bitcast i8* %86 to i32*, !dbg !12517
  store i32 %83, i32* %87, align 4, !dbg !12518
  %88 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 288, !dbg !12519
  %89 = bitcast i8* %88 to i8**, !dbg !12519
  store i8* null, i8** %89, align 4, !dbg !12520
  %90 = icmp eq i32 %82, 0, !dbg !12521
  br i1 %90, label %99, label %91, !dbg !12523

91:                                               ; preds = %81
  %92 = tail call i8* @pvPortMalloc(i32 noundef %82) #18, !dbg !12524
  store i8* %92, i8** %89, align 4, !dbg !12527
  %93 = icmp eq i8* %92, null, !dbg !12528
  br i1 %93, label %99, label %94, !dbg !12529

94:                                               ; preds = %91
  %95 = getelementptr inbounds i8, i8* %4, i32 %83, !dbg !12530
  %96 = tail call i8* @memcpy(i8* noundef nonnull %92, i8* noundef %95, i32 noundef %82) #18, !dbg !12532
  %97 = load i32, i32* %87, align 4, !dbg !12533
  %98 = add i32 %97, %82, !dbg !12533
  store i32 %98, i32* %87, align 4, !dbg !12533
  br label %99, !dbg !12534

99:                                               ; preds = %91, %94, %81
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %9, metadata !12426, metadata !DIExpression(DW_OP_deref)), !dbg !12482
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %9) #20, !dbg !12535
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #17, !dbg !12536
  br label %101

100:                                              ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #17, !dbg !12536
  br label %101

101:                                              ; preds = %99, %8, %14, %28, %47, %100
  ret void, !dbg !12537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_current_time_in_ms() unnamed_addr #0 !dbg !12538 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !12544
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #17, !dbg !12544
  call void @llvm.dbg.value(metadata i32 0, metadata !12542, metadata !DIExpression()), !dbg !12545
  store i32 0, i32* %1, align 4, !dbg !12546
  call void @llvm.dbg.value(metadata i64 0, metadata !12543, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i32* %1, metadata !12542, metadata !DIExpression(DW_OP_deref)), !dbg !12545
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #18, !dbg !12547
  %4 = load i32, i32* %1, align 4, !dbg !12548
  call void @llvm.dbg.value(metadata i32 %4, metadata !12542, metadata !DIExpression()), !dbg !12545
  %5 = zext i32 %4 to i64, !dbg !12549
  %6 = mul nuw nsw i64 %5, 1000, !dbg !12550
  %7 = lshr i64 %6, 15, !dbg !12551
  call void @llvm.dbg.value(metadata i64 %7, metadata !12543, metadata !DIExpression()), !dbg !12545
  %8 = trunc i64 %7 to i32, !dbg !12552
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #17, !dbg !12553
  ret i32 %8, !dbg !12554
}

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @hex_dump_data(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 !dbg !12555 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12559, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i32 %1, metadata !12560, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i32 0, metadata !12561, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i32 0, metadata !12561, metadata !DIExpression()), !dbg !12562
  %3 = icmp sgt i32 %1, 0, !dbg !12563
  br i1 %3, label %4, label %25, !dbg !12566

4:                                                ; preds = %2, %18
  %5 = phi i32 [ %10, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !12561, metadata !DIExpression()), !dbg !12562
  %6 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !12567
  %7 = load i8, i8* %6, align 1, !dbg !12567
  %8 = zext i8 %7 to i32, !dbg !12569
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.267, i32 0, i32 0), i32 noundef %8) #18, !dbg !12570
  %10 = add nuw nsw i32 %5, 1, !dbg !12571
  %11 = and i32 %10, 15, !dbg !12573
  %12 = icmp eq i32 %11, 0, !dbg !12574
  br i1 %12, label %15, label %13, !dbg !12575

13:                                               ; preds = %4
  %14 = icmp eq i32 %10, %1, !dbg !12576
  br i1 %14, label %18, label %15, !dbg !12578

15:                                               ; preds = %13, %4
  %16 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.266, i32 0, i32 0), %4 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.268, i32 0, i32 0), %13 ]
  %17 = tail call i32 (i8*, ...) @printf(i8* noundef %16) #18, !dbg !12579
  br label %18, !dbg !12563

18:                                               ; preds = %15, %13
  call void @llvm.dbg.value(metadata i32 %10, metadata !12561, metadata !DIExpression()), !dbg !12562
  %19 = icmp eq i32 %10, %1, !dbg !12563
  br i1 %19, label %20, label %4, !dbg !12566, !llvm.loop !12580

20:                                               ; preds = %18
  %21 = and i32 %1, 15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23, !dbg !12582

23:                                               ; preds = %20
  %24 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.266, i32 0, i32 0)) #18, !dbg !12584
  br label %25, !dbg !12586

25:                                               ; preds = %2, %23, %20
  ret void, !dbg !12587
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.syslog_buffer_t* @buffer_pool_alloc() local_unnamed_addr #0 !dbg !12588 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !12594, !srcloc !12456
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12594
  call void @llvm.dbg.value(metadata i32 %2, metadata !12453, metadata !DIExpression()) #17, !dbg !12596
  call void @llvm.dbg.value(metadata i32 undef, metadata !12454, metadata !DIExpression()) #17, !dbg !12596
  call void @llvm.dbg.value(metadata i32 %2, metadata !12592, metadata !DIExpression()), !dbg !12597
  call void @llvm.dbg.value(metadata i32 0, metadata !12593, metadata !DIExpression()), !dbg !12597
  br label %6, !dbg !12598

3:                                                ; preds = %6
  %4 = add nuw nsw i32 %7, 1, !dbg !12600
  call void @llvm.dbg.value(metadata i32 %4, metadata !12593, metadata !DIExpression()), !dbg !12597
  call void @llvm.dbg.value(metadata i32 %7, metadata !12593, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12597
  %5 = icmp eq i32 %4, 16, !dbg !12602
  br i1 %5, label %14, label %6, !dbg !12598, !llvm.loop !12603

6:                                                ; preds = %0, %3
  %7 = phi i32 [ 0, %0 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12593, metadata !DIExpression()), !dbg !12597
  %8 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %7, !dbg !12605
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !12608
  %10 = load i32, i32* %9, align 4, !dbg !12608
  %11 = icmp eq i32 %10, 0, !dbg !12605
  call void @llvm.dbg.value(metadata i32 %7, metadata !12593, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12597
  br i1 %11, label %12, label %3, !dbg !12609

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !12608
  store i32 1, i32* %13, align 4, !dbg !12610
  call void @llvm.dbg.value(metadata i32 %2, metadata !12472, metadata !DIExpression()) #17, !dbg !12612
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #17, !dbg !12614, !srcloc !12478
  br label %17, !dbg !12615

14:                                               ; preds = %3
  %15 = load i32, i32* @syslog_drop_count, align 4, !dbg !12616
  %16 = add i32 %15, 1, !dbg !12616
  store i32 %16, i32* @syslog_drop_count, align 4, !dbg !12616
  call void @llvm.dbg.value(metadata i32 %2, metadata !12472, metadata !DIExpression()) #17, !dbg !12617
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #17, !dbg !12619, !srcloc !12478
  br label %17, !dbg !12620

17:                                               ; preds = %14, %12
  %18 = phi %struct.syslog_buffer_t* [ %8, %12 ], [ null, %14 ], !dbg !12597
  ret %struct.syslog_buffer_t* %18, !dbg !12621
}

; Function Attrs: optsize
declare dso_local i32 @vsnprintf(i8* noundef, i32 noundef, i8* noundef, [1 x i32]) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_send(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #0 !dbg !12622 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !12627, metadata !DIExpression()), !dbg !12631
  %3 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !12632
  %4 = and i32 %3, 255, !dbg !12633
  %5 = icmp eq i32 %4, 0, !dbg !12633
  br i1 %5, label %19, label %6, !dbg !12634

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !12635
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !12635
  call void @llvm.dbg.value(metadata i32 0, metadata !12628, metadata !DIExpression()), !dbg !12636
  store i32 0, i32* %2, align 4, !dbg !12637
  %8 = load i8*, i8** @g_log_queue, align 4, !dbg !12638
  %9 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !12638
  call void @llvm.dbg.value(metadata i32* %2, metadata !12628, metadata !DIExpression(DW_OP_deref)), !dbg !12636
  %10 = call i32 @xQueueGenericSendFromISR(i8* noundef %8, i8* noundef %9, i32* noundef nonnull %2, i32 noundef 0) #18, !dbg !12638
  %11 = icmp eq i32 %10, 0, !dbg !12640
  br i1 %11, label %12, label %14, !dbg !12641

12:                                               ; preds = %6
  %13 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %0, align 4, !dbg !12642
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %13) #20, !dbg !12644
  br label %18, !dbg !12645

14:                                               ; preds = %6
  %15 = load i32, i32* %2, align 4, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %15, metadata !12628, metadata !DIExpression()), !dbg !12636
  %16 = icmp eq i32 %15, 0, !dbg !12646
  br i1 %16, label %18, label %17, !dbg !12649

17:                                               ; preds = %14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !12650
  call void asm sideeffect "dsb", ""() #17, !dbg !12650, !srcloc !12652
  call void asm sideeffect "isb", ""() #17, !dbg !12650, !srcloc !12653
  br label %18, !dbg !12650

18:                                               ; preds = %14, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !12654
  br label %23, !dbg !12655

19:                                               ; preds = %1
  %20 = load i8*, i8** @g_log_queue, align 4, !dbg !12656
  %21 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !12656
  %22 = tail call i32 @xQueueGenericSend(i8* noundef %20, i8* noundef %21, i32 noundef -1, i32 noundef 0) #18, !dbg !12656
  br label %23

23:                                               ; preds = %19, %18
  ret void, !dbg !12658
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_release(%struct.syslog_buffer_t* nocapture noundef %0) local_unnamed_addr #0 !dbg !12659 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !12663, metadata !DIExpression()), !dbg !12666
  %2 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 0, !dbg !12667
  call void @llvm.dbg.value(metadata i8* %2, metadata !12665, metadata !DIExpression()), !dbg !12666
  %3 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !12668, !srcloc !12456
  call void @llvm.dbg.value(metadata i32 undef, metadata !12453, metadata !DIExpression()) #17, !dbg !12670
  call void @llvm.dbg.value(metadata i32 undef, metadata !12454, metadata !DIExpression()) #17, !dbg !12670
  call void @llvm.dbg.value(metadata i32 undef, metadata !12664, metadata !DIExpression()), !dbg !12666
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !12671
  store i32 0, i32* %4, align 4, !dbg !12672
  %5 = bitcast i8* %2 to i32*, !dbg !12673
  %6 = load i32, i32* %5, align 4, !dbg !12673
  %7 = icmp eq i32 %6, 1, !dbg !12675
  br i1 %7, label %8, label %14, !dbg !12676

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !12665, metadata !DIExpression()), !dbg !12666
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 288, !dbg !12677
  %10 = bitcast i8* %9 to i8**, !dbg !12677
  %11 = load i8*, i8** %10, align 4, !dbg !12677
  %12 = icmp eq i8* %11, null, !dbg !12678
  br i1 %12, label %14, label %13, !dbg !12679

13:                                               ; preds = %8
  tail call void @vPortFree(i8* noundef nonnull %11) #18, !dbg !12680
  br label %14, !dbg !12682

14:                                               ; preds = %13, %8, %1
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !12668
  call void @llvm.dbg.value(metadata i32 %15, metadata !12453, metadata !DIExpression()) #17, !dbg !12670
  call void @llvm.dbg.value(metadata i32 %15, metadata !12664, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.value(metadata i32 undef, metadata !12472, metadata !DIExpression()) #17, !dbg !12683
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %15) #17, !dbg !12685, !srcloc !12478
  ret void, !dbg !12686
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprint_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %5) local_unnamed_addr #0 !dbg !12687 {
  %7 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !12696, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata i8* %0, metadata !12691, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata i8* %1, metadata !12692, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata i32 %2, metadata !12693, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata i32 %3, metadata !12694, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata i8* %4, metadata !12695, metadata !DIExpression()), !dbg !12710
  call void @llvm.dbg.value(metadata i8* %0, metadata !12697, metadata !DIExpression()), !dbg !12710
  %8 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !12711
  %9 = bitcast i8* %8 to i32*, !dbg !12711
  %10 = load i32, i32* %9, align 4, !dbg !12711
  %11 = icmp eq i32 %10, 0, !dbg !12712
  br i1 %11, label %12, label %71, !dbg !12713

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !12714
  %14 = bitcast i8* %13 to i32*, !dbg !12714
  %15 = load i32, i32* %14, align 4, !dbg !12714
  %16 = icmp ugt i32 %15, %3, !dbg !12715
  br i1 %16, label %71, label %17, !dbg !12716

17:                                               ; preds = %12
  %18 = load i1, i1* @syslog_task_ready, align 4, !dbg !12717
  br i1 %18, label %19, label %26, !dbg !12718

19:                                               ; preds = %17
  %20 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !12719
  %21 = icmp eq i32 %20, 0, !dbg !12720
  br i1 %21, label %22, label %48, !dbg !12721

22:                                               ; preds = %19
  %23 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !12722
  %24 = and i32 %23, 255, !dbg !12723
  %25 = icmp eq i32 %24, 0, !dbg !12724
  br i1 %25, label %26, label %48, !dbg !12725

26:                                               ; preds = %22, %17
  %27 = load i32, i32* @syslog_init_done, align 4, !dbg !12726
  %28 = icmp eq i32 %27, 0, !dbg !12727
  br i1 %28, label %71, label %29, !dbg !12728

29:                                               ; preds = %26
  %30 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !12729, !srcloc !12456
  %31 = extractvalue { i32, i32 } %30, 0, !dbg !12729
  call void @llvm.dbg.value(metadata i32 %31, metadata !12453, metadata !DIExpression()) #17, !dbg !12731
  call void @llvm.dbg.value(metadata i32 undef, metadata !12454, metadata !DIExpression()) #17, !dbg !12731
  call void @llvm.dbg.value(metadata i32 %31, metadata !12698, metadata !DIExpression()), !dbg !12732
  %32 = load i32, i32* @syslog_init_done, align 4, !dbg !12733
  %33 = icmp ugt i32 %32, 1, !dbg !12735
  br i1 %33, label %34, label %45, !dbg !12736

34:                                               ; preds = %29
  %35 = tail call fastcc i32 @get_current_time_in_ms() #20, !dbg !12737
  %36 = bitcast i8* %0 to i8**, !dbg !12739
  %37 = load i8*, i8** %36, align 4, !dbg !12739
  %38 = icmp ult i32 %3, 4, !dbg !12740
  br i1 %38, label %39, label %42, !dbg !12740

39:                                               ; preds = %34
  %40 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !12740
  %41 = load i8*, i8** %40, align 4, !dbg !12740
  br label %42, !dbg !12740

42:                                               ; preds = %34, %39
  %43 = phi i8* [ %41, %39 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.264, i32 0, i32 0), %34 ], !dbg !12740
  %44 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.265, i32 0, i32 0), i32 noundef %35, i8* noundef %37, i8* noundef %43, i8* noundef %1, i32 noundef %2) #18, !dbg !12741
  br label %45, !dbg !12742

45:                                               ; preds = %42, %29
  %46 = tail call i32 @vprintf(i8* noundef %4, [1 x i32] %5) #18, !dbg !12743
  %47 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.266, i32 0, i32 0)) #18, !dbg !12744
  call void @llvm.dbg.value(metadata i32 %31, metadata !12472, metadata !DIExpression()) #17, !dbg !12745
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %31) #17, !dbg !12747, !srcloc !12478
  br label %71, !dbg !12748

48:                                               ; preds = %22, %19
  %49 = bitcast %struct.syslog_buffer_t** %7 to i8*, !dbg !12749
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #17, !dbg !12749
  %50 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #20, !dbg !12750
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %50, metadata !12705, metadata !DIExpression()), !dbg !12751
  store %struct.syslog_buffer_t* %50, %struct.syslog_buffer_t** %7, align 4, !dbg !12752
  %51 = icmp eq %struct.syslog_buffer_t* %50, null, !dbg !12753
  br i1 %51, label %70, label %52, !dbg !12755

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 0, !dbg !12756
  call void @llvm.dbg.value(metadata i8* %53, metadata !12707, metadata !DIExpression()), !dbg !12751
  %54 = bitcast i8* %53 to i32*, !dbg !12757
  store i32 0, i32* %54, align 4, !dbg !12758
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 4, !dbg !12759
  call void @llvm.dbg.value(metadata i8* %55, metadata !12708, metadata !DIExpression()), !dbg !12751
  %56 = bitcast i8* %0 to i8**, !dbg !12760
  %57 = load i8*, i8** %56, align 4, !dbg !12760
  %58 = bitcast i8* %55 to i8**, !dbg !12761
  store i8* %57, i8** %58, align 4, !dbg !12762
  %59 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 8, !dbg !12763
  %60 = bitcast i8* %59 to i32*, !dbg !12763
  store i32 %3, i32* %60, align 4, !dbg !12764
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 12, !dbg !12765
  %62 = bitcast i8* %61 to i8**, !dbg !12765
  store i8* %1, i8** %62, align 4, !dbg !12766
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 16, !dbg !12767
  %64 = bitcast i8* %63 to i32*, !dbg !12767
  store i32 %2, i32* %64, align 4, !dbg !12768
  %65 = tail call fastcc i32 @get_current_time_in_ms() #20, !dbg !12769
  %66 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 20, !dbg !12770
  %67 = bitcast i8* %66 to i32*, !dbg !12770
  store i32 %65, i32* %67, align 4, !dbg !12771
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 24, !dbg !12772
  %69 = tail call i32 @vsnprintf(i8* noundef nonnull %68, i32 noundef 256, i8* noundef %4, [1 x i32] %5) #18, !dbg !12773
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %7, metadata !12705, metadata !DIExpression(DW_OP_deref)), !dbg !12751
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %7) #20, !dbg !12774
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #17, !dbg !12775
  br label %71

70:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #17, !dbg !12775
  br label %71

71:                                               ; preds = %52, %6, %12, %26, %45, %70
  ret void, !dbg !12776
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_uart_init(i32 noundef %0) local_unnamed_addr #0 !dbg !12777 {
  %2 = alloca %struct.hal_uart_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12779, metadata !DIExpression()), !dbg !12789
  %3 = bitcast %struct.hal_uart_config_t* %2 to i8*, !dbg !12790
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #17, !dbg !12790
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %2, metadata !12780, metadata !DIExpression()), !dbg !12791
  %4 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 0, !dbg !12792
  store i32 9, i32* %4, align 4, !dbg !12793
  %5 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 3, !dbg !12794
  store i32 0, i32* %5, align 4, !dbg !12795
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 2, !dbg !12796
  store i32 0, i32* %6, align 4, !dbg !12797
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 1, !dbg !12798
  store i32 3, i32* %7, align 4, !dbg !12799
  store i32 %0, i32* @g_log_uart_port, align 4, !dbg !12800
  %8 = call i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %2) #18, !dbg !12801
  call void @llvm.dbg.value(metadata i32 %8, metadata !12788, metadata !DIExpression()), !dbg !12789
  %9 = load i32, i32* @syslog_init_done, align 4, !dbg !12802
  %10 = or i32 %9, 1, !dbg !12802
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !12802
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #17, !dbg !12803
  ret i32 %8, !dbg !12804
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_putchar(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !12805 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !12809, metadata !DIExpression()), !dbg !12810
  %2 = load i32, i32* @g_log_uart_port, align 4, !dbg !12811
  tail call void @hal_uart_put_char(i32 noundef %2, i8 noundef zeroext %0) #18, !dbg !12812
  ret void, !dbg !12813
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_init() local_unnamed_addr #0 !dbg !12814 {
  %1 = tail call i8* @memset(i8* noundef bitcast ([16 x %struct.syslog_buffer_t]* @syslog_buffer_pool to i8*), i32 noundef 0, i32 noundef 4736) #18, !dbg !12815
  ret void, !dbg !12816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_create() local_unnamed_addr #0 !dbg !12817 {
  %1 = tail call i8* @xQueueGenericCreate(i32 noundef 8, i32 noundef 4, i8 noundef zeroext 0) #18, !dbg !12818
  store i8* %1, i8** @g_log_queue, align 4, !dbg !12819
  %2 = icmp eq i8* %1, null, !dbg !12820
  br i1 %2, label %3, label %5, !dbg !12822

3:                                                ; preds = %0
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.276, i32 0, i32 0)) #18, !dbg !12823
  br label %5, !dbg !12825

5:                                                ; preds = %3, %0
  ret void, !dbg !12826
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_queue_receive(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #0 !dbg !12827 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !12831, metadata !DIExpression()), !dbg !12833
  %2 = load i8*, i8** @g_log_queue, align 4, !dbg !12834
  %3 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !12834
  %4 = tail call i32 @xQueueGenericReceive(i8* noundef %2, i8* noundef %3, i32 noundef -1, i32 noundef 0) #18, !dbg !12834
  call void @llvm.dbg.value(metadata i32 %4, metadata !12832, metadata !DIExpression()), !dbg !12833
  %5 = icmp ne i32 %4, 1, !dbg !12835
  %6 = sext i1 %5 to i32, !dbg !12836
  ret i32 %6, !dbg !12837
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_normal_log(%struct.normal_log_message_t* noundef %0) local_unnamed_addr #0 !dbg !12838 {
  call void @llvm.dbg.value(metadata %struct.normal_log_message_t* %0, metadata !12844, metadata !DIExpression()), !dbg !12845
  %2 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 4, !dbg !12846
  %3 = load i32, i32* %2, align 4, !dbg !12846
  %4 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 0, !dbg !12847
  %5 = load i8*, i8** %4, align 4, !dbg !12847
  %6 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 1, !dbg !12848
  %7 = load i32, i32* %6, align 4, !dbg !12848
  %8 = icmp ult i32 %7, 4, !dbg !12848
  br i1 %8, label %9, label %12, !dbg !12848

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !12848
  %11 = load i8*, i8** %10, align 4, !dbg !12848
  br label %12, !dbg !12848

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.264, i32 0, i32 0), %1 ], !dbg !12848
  %14 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 2, !dbg !12849
  %15 = load i8*, i8** %14, align 4, !dbg !12849
  %16 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 3, !dbg !12850
  %17 = load i32, i32* %16, align 4, !dbg !12850
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.265, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #18, !dbg !12851
  %19 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 5, i32 0, !dbg !12852
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.277, i32 0, i32 0), i8* noundef nonnull %19) #18, !dbg !12853
  ret void, !dbg !12854
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_hex_dump(%struct.hex_dump_message_t* noundef %0) local_unnamed_addr #0 !dbg !12855 {
  call void @llvm.dbg.value(metadata %struct.hex_dump_message_t* %0, metadata !12861, metadata !DIExpression()), !dbg !12862
  %2 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 4, !dbg !12863
  %3 = load i32, i32* %2, align 4, !dbg !12863
  %4 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 0, !dbg !12864
  %5 = load i8*, i8** %4, align 4, !dbg !12864
  %6 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 1, !dbg !12865
  %7 = load i32, i32* %6, align 4, !dbg !12865
  %8 = icmp ult i32 %7, 4, !dbg !12865
  br i1 %8, label %9, label %12, !dbg !12865

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !12865
  %11 = load i8*, i8** %10, align 4, !dbg !12865
  br label %12, !dbg !12865

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.264, i32 0, i32 0), %1 ], !dbg !12865
  %14 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 2, !dbg !12866
  %15 = load i8*, i8** %14, align 4, !dbg !12866
  %16 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 3, !dbg !12867
  %17 = load i32, i32* %16, align 4, !dbg !12867
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.265, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #18, !dbg !12868
  %19 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 5, i32 0, !dbg !12869
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.277, i32 0, i32 0), i8* noundef nonnull %19) #18, !dbg !12870
  %21 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 6, !dbg !12871
  %22 = load i32, i32* %21, align 4, !dbg !12871
  %23 = icmp ugt i32 %22, 128, !dbg !12873
  %24 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 7, i32 0, !dbg !12874
  br i1 %23, label %25, label %30, !dbg !12875

25:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef 128) #20, !dbg !12876
  %26 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 8, !dbg !12878
  %27 = load i8*, i8** %26, align 4, !dbg !12878
  %28 = load i32, i32* %21, align 4, !dbg !12879
  %29 = add i32 %28, -128, !dbg !12880
  tail call void @hex_dump_data(i8* noundef %27, i32 noundef %29) #20, !dbg !12881
  br label %31, !dbg !12882

30:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef %22) #20, !dbg !12883
  br label %31

31:                                               ; preds = %30, %25
  ret void, !dbg !12885
}

; Function Attrs: noinline nounwind optsize
define dso_local void @process_log_message(%struct.log_message_t* noundef %0) local_unnamed_addr #0 !dbg !12886 {
  call void @llvm.dbg.value(metadata %struct.log_message_t* %0, metadata !12892, metadata !DIExpression()), !dbg !12896
  %2 = load i32, i32* @syslog_drop_count, align 4, !dbg !12897
  %3 = icmp eq i32 %2, 0, !dbg !12897
  br i1 %3, label %9, label %4, !dbg !12898

4:                                                ; preds = %1
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !12899, !srcloc !12456
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !12899
  call void @llvm.dbg.value(metadata i32 %6, metadata !12453, metadata !DIExpression()) #17, !dbg !12901
  call void @llvm.dbg.value(metadata i32 undef, metadata !12454, metadata !DIExpression()) #17, !dbg !12901
  call void @llvm.dbg.value(metadata i32 %6, metadata !12893, metadata !DIExpression()), !dbg !12902
  %7 = load i32, i32* @syslog_drop_count, align 4, !dbg !12903
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.278, i32 0, i32 0), i32 noundef %7) #18, !dbg !12904
  store i32 0, i32* @syslog_drop_count, align 4, !dbg !12905
  call void @llvm.dbg.value(metadata i32 %6, metadata !12472, metadata !DIExpression()) #17, !dbg !12906
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #17, !dbg !12908, !srcloc !12478
  br label %9, !dbg !12909

9:                                                ; preds = %4, %1
  %10 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 0, !dbg !12910
  %11 = load i32, i32* %10, align 4, !dbg !12910
  %12 = icmp eq i32 %11, 0, !dbg !12912
  br i1 %12, label %13, label %16, !dbg !12913

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, !dbg !12914
  %15 = bitcast %union.anon.24* %14 to %struct.normal_log_message_t*, !dbg !12916
  tail call void @print_normal_log(%struct.normal_log_message_t* noundef nonnull %15) #20, !dbg !12917
  br label %18, !dbg !12918

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, i32 0, !dbg !12919
  tail call void @print_hex_dump(%struct.hex_dump_message_t* noundef nonnull %17) #20, !dbg !12921
  br label %18

18:                                               ; preds = %16, %13
  ret void, !dbg !12922
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @syslog_task_entry(i8* nocapture readnone %0) #12 !dbg !12923 {
  %2 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i8* undef, metadata !12925, metadata !DIExpression()), !dbg !12930
  store i1 true, i1* @syslog_task_ready, align 4, !dbg !12931
  tail call void @vTaskPrioritySet(i8* noundef null, i32 noundef 1) #18, !dbg !12932
  %3 = bitcast %struct.syslog_buffer_t** %2 to i8*
  br label %4, !dbg !12933

4:                                                ; preds = %12, %1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !12934
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !12926, metadata !DIExpression()), !dbg !12935
  store %struct.syslog_buffer_t* null, %struct.syslog_buffer_t** %2, align 4, !dbg !12936
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %2, metadata !12926, metadata !DIExpression(DW_OP_deref)), !dbg !12935
  %5 = call i32 @log_queue_receive(%struct.syslog_buffer_t** noundef nonnull %2) #20, !dbg !12937
  %6 = icmp eq i32 %5, 0, !dbg !12939
  br i1 %6, label %7, label %12, !dbg !12940

7:                                                ; preds = %4
  %8 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !12941
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %8, metadata !12926, metadata !DIExpression()), !dbg !12935
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 1, i32 0, !dbg !12943
  %10 = bitcast i8* %9 to %struct.log_message_t*, !dbg !12944
  call void @process_log_message(%struct.log_message_t* noundef nonnull %10) #20, !dbg !12945
  %11 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !12946
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !12926, metadata !DIExpression()), !dbg !12935
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %11) #20, !dbg !12947
  br label %12, !dbg !12948

12:                                               ; preds = %7, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17, !dbg !12949
  br label %4, !dbg !12950, !llvm.loop !12951
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_init(void (%struct.syslog_config_s*)* noundef %0, i32 (%struct.syslog_config_s*)* noundef readonly %1, %struct.log_control_block_t** noundef %2) local_unnamed_addr #0 !dbg !12954 {
  %4 = alloca %struct.exception_config_type, align 4
  call void @llvm.dbg.value(metadata void (%struct.syslog_config_s*)* %0, metadata !12963, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.value(metadata i32 (%struct.syslog_config_s*)* %1, metadata !12964, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %2, metadata !12965, metadata !DIExpression()), !dbg !12972
  %5 = bitcast %struct.exception_config_type* %4 to i8*, !dbg !12973
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17, !dbg !12973
  call void @llvm.dbg.declare(metadata %struct.exception_config_type* %4, metadata !12966, metadata !DIExpression()), !dbg !12974
  %6 = load i32, i32* @syslog_init_done, align 4, !dbg !12975
  %7 = and i32 %6, 2, !dbg !12977
  %8 = icmp eq i32 %7, 0, !dbg !12977
  br i1 %8, label %9, label %31, !dbg !12978

9:                                                ; preds = %3
  %10 = or i32 %6, 1, !dbg !12979
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !12979
  tail call void @buffer_pool_init() #20, !dbg !12980
  tail call void @log_queue_create() #20, !dbg !12981
  store i1 false, i1* @syslog_task_ready, align 4, !dbg !12982
  %11 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 0, !dbg !12983
  store void ()* @syslog_exception_cb, void ()** %11, align 4, !dbg !12984
  %12 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 1, !dbg !12985
  store void ()* null, void ()** %12, align 4, !dbg !12986
  %13 = call zeroext i1 @exception_register_callbacks(%struct.exception_config_type* noundef nonnull %4) #18, !dbg !12987
  %14 = call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @syslog_task_entry, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.281, i32 0, i32 0), i16 noundef zeroext 192, i8* noundef null, i32 noundef 8, i8** noundef nonnull @syslog_task_handle, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #18, !dbg !12988
  %15 = icmp eq i32 %14, 1, !dbg !12990
  br i1 %15, label %18, label %16, !dbg !12991

16:                                               ; preds = %9
  %17 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10.282, i32 0, i32 0)) #18, !dbg !12992
  br label %18, !dbg !12994

18:                                               ; preds = %16, %9
  %19 = call fastcc i32 @get_current_time_in_ms() #20, !dbg !12995
  %20 = load i32, i32* @syslog_init_done, align 4, !dbg !12996
  %21 = or i32 %20, 2, !dbg !12996
  store i32 %21, i32* @syslog_init_done, align 4, !dbg !12996
  store void (%struct.syslog_config_s*)* %0, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !12997
  store %struct.log_control_block_t** %2, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !12998
  %22 = icmp eq i32 (%struct.syslog_config_s*)* %1, null, !dbg !12999
  br i1 %22, label %28, label %23, !dbg !13001

23:                                               ; preds = %18
  %24 = call i32 %1(%struct.syslog_config_s* noundef nonnull @syslog_config) #18, !dbg !13002
  %25 = icmp eq i32 %24, 0, !dbg !13005
  br i1 %25, label %28, label %26, !dbg !13006

26:                                               ; preds = %23
  %27 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !13007
  call void (i8*, i8*, i32, i32, i8*, ...) %27(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.log_init, i32 0, i32 0), i32 noundef 1040, i32 noundef 3, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11.283, i32 0, i32 0)) #18, !dbg !13007
  br label %28, !dbg !13010

28:                                               ; preds = %23, %26, %18
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !13011
  %30 = or i32 %29, 4, !dbg !13011
  store i32 %30, i32* @syslog_init_done, align 4, !dbg !13011
  br label %31, !dbg !13012

31:                                               ; preds = %3, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17, !dbg !13012
  ret void, !dbg !13012
}

; Function Attrs: noinline nounwind optsize
define internal void @syslog_exception_cb() #0 !dbg !13013 {
  tail call fastcc void @syslog_buffer_dump() #20, !dbg !13014
  ret void, !dbg !13015
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @syslog_buffer_dump() unnamed_addr #0 !dbg !13016 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !13019, metadata !DIExpression()), !dbg !13021
  call void @llvm.dbg.value(metadata i32 0, metadata !13018, metadata !DIExpression()), !dbg !13021
  br label %1, !dbg !13022

1:                                                ; preds = %0, %10
  %2 = phi i32 [ 0, %0 ], [ %12, %10 ]
  %3 = phi %struct.syslog_buffer_t* [ null, %0 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !13018, metadata !DIExpression()), !dbg !13021
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %3, metadata !13019, metadata !DIExpression()), !dbg !13021
  %4 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %2, !dbg !13024
  %5 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %4, i32 0, i32 0, !dbg !13028
  %6 = load i32, i32* %5, align 4, !dbg !13028
  %7 = icmp eq i32 %6, 0, !dbg !13024
  br i1 %7, label %10, label %8, !dbg !13029

8:                                                ; preds = %1
  %9 = ptrtoint %struct.syslog_buffer_t* %3 to i32, !dbg !13030
  store i32 %9, i32* %5, align 4, !dbg !13032
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %4, metadata !13019, metadata !DIExpression()), !dbg !13021
  br label %10, !dbg !13033

10:                                               ; preds = %1, %8
  %11 = phi %struct.syslog_buffer_t* [ %4, %8 ], [ %3, %1 ], !dbg !13021
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !13019, metadata !DIExpression()), !dbg !13021
  %12 = add nuw nsw i32 %2, 1, !dbg !13034
  call void @llvm.dbg.value(metadata i32 %12, metadata !13018, metadata !DIExpression()), !dbg !13021
  %13 = icmp eq i32 %12, 16, !dbg !13035
  br i1 %13, label %14, label %1, !dbg !13022, !llvm.loop !13036

14:                                               ; preds = %10
  %15 = tail call fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %11) #20, !dbg !13038
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !13019, metadata !DIExpression()), !dbg !13021
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.284, i32 0, i32 0)) #18, !dbg !13039
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !13019, metadata !DIExpression()), !dbg !13021
  %17 = icmp eq %struct.syslog_buffer_t* %15, null, !dbg !13040
  br i1 %17, label %26, label %18, !dbg !13040

18:                                               ; preds = %14, %18
  %19 = phi %struct.syslog_buffer_t* [ %22, %18 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !13019, metadata !DIExpression()), !dbg !13021
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !13020, metadata !DIExpression()), !dbg !13021
  %20 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 0, !dbg !13041
  %21 = load i32, i32* %20, align 4, !dbg !13041
  %22 = inttoptr i32 %21 to %struct.syslog_buffer_t*, !dbg !13043
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %22, metadata !13019, metadata !DIExpression()), !dbg !13021
  store i32 1, i32* %20, align 4, !dbg !13044
  %23 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 1, i32 0, !dbg !13045
  %24 = bitcast i8* %23 to %struct.log_message_t*, !dbg !13046
  tail call void @process_log_message(%struct.log_message_t* noundef nonnull %24) #20, !dbg !13047
  %25 = icmp eq i32 %21, 0, !dbg !13040
  br i1 %25, label %26, label %18, !dbg !13040, !llvm.loop !13048

26:                                               ; preds = %18, %14
  ret void, !dbg !13050
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %0) unnamed_addr #15 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !13055, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !13056, metadata !DIExpression()), !dbg !13059
  %2 = icmp eq %struct.syslog_buffer_t* %0, null, !dbg !13060
  br i1 %2, label %44, label %3, !dbg !13062

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !13063
  %5 = load i32, i32* %4, align 4, !dbg !13063
  %6 = icmp eq i32 %5, 0, !dbg !13064
  br i1 %6, label %44, label %7, !dbg !13065

7:                                                ; preds = %3, %41
  %8 = phi i32 [ %43, %41 ], [ %5, %3 ], !dbg !13066
  %9 = phi %struct.syslog_buffer_t* [ %38, %41 ], [ null, %3 ]
  %10 = phi %struct.syslog_buffer_t* [ %12, %41 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %9, metadata !13056, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !13055, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !13057, metadata !DIExpression()), !dbg !13059
  %11 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 0, !dbg !13066
  %12 = inttoptr i32 %8 to %struct.syslog_buffer_t*, !dbg !13068
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !13055, metadata !DIExpression()), !dbg !13059
  %13 = icmp eq %struct.syslog_buffer_t* %9, null, !dbg !13069
  br i1 %13, label %35, label %14, !dbg !13071

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 1, i32 20, !dbg !13072
  %16 = bitcast i8* %15 to i32*, !dbg !13072
  %17 = load i32, i32* %16, align 4, !dbg !13072
  %18 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %9, i32 0, i32 1, i32 20, !dbg !13073
  %19 = bitcast i8* %18 to i32*, !dbg !13073
  %20 = load i32, i32* %19, align 4, !dbg !13073
  %21 = icmp ult i32 %17, %20, !dbg !13074
  br i1 %21, label %35, label %22, !dbg !13075

22:                                               ; preds = %14, %27
  %23 = phi %struct.syslog_buffer_t* [ %28, %27 ], [ %9, %14 ], !dbg !13076
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %23, metadata !13058, metadata !DIExpression()), !dbg !13059
  %24 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !13078
  %25 = load i32, i32* %24, align 4, !dbg !13078
  %26 = icmp eq i32 %25, 0, !dbg !13081
  br i1 %26, label %33, label %27, !dbg !13082

27:                                               ; preds = %22
  %28 = inttoptr i32 %25 to %struct.syslog_buffer_t*, !dbg !13083
  %29 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %28, i32 0, i32 1, i32 20, !dbg !13083
  %30 = bitcast i8* %29 to i32*, !dbg !13083
  %31 = load i32, i32* %30, align 4, !dbg !13083
  %32 = icmp ult i32 %17, %31, !dbg !13084
  br i1 %32, label %33, label %22, !dbg !13085, !llvm.loop !13086

33:                                               ; preds = %27, %22
  %34 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !13078
  store i32 %25, i32* %11, align 4, !dbg !13089
  br label %35, !dbg !13091

35:                                               ; preds = %7, %14, %33
  %36 = phi %struct.syslog_buffer_t* [ %10, %33 ], [ %9, %14 ], [ %9, %7 ]
  %37 = phi i32* [ %34, %33 ], [ %11, %14 ], [ %11, %7 ]
  %38 = phi %struct.syslog_buffer_t* [ %9, %33 ], [ %10, %14 ], [ %10, %7 ], !dbg !13059
  %39 = ptrtoint %struct.syslog_buffer_t* %36 to i32, !dbg !13092
  store i32 %39, i32* %37, align 4, !dbg !13092
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %38, metadata !13056, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !13055, metadata !DIExpression()), !dbg !13059
  %40 = icmp eq i32 %8, 0, !dbg !13093
  br i1 %40, label %44, label %41, !dbg !13094, !llvm.loop !13095

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %12, i32 0, i32 0
  %43 = load i32, i32* %42, align 4, !dbg !13066
  br label %7, !dbg !13094

44:                                               ; preds = %35, %1, %3
  %45 = phi %struct.syslog_buffer_t* [ %0, %3 ], [ null, %1 ], [ %38, %35 ], !dbg !13059
  ret %struct.syslog_buffer_t* %45, !dbg !13097
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @syslog_get_config(%struct.syslog_config_s* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !13098 {
  call void @llvm.dbg.value(metadata %struct.syslog_config_s* %0, metadata !13102, metadata !DIExpression()), !dbg !13103
  %2 = bitcast %struct.syslog_config_s* %0 to i64*, !dbg !13104
  %3 = load i64, i64* bitcast (%struct.syslog_config_s* @syslog_config to i64*), align 8, !dbg !13104
  store i64 %3, i64* %2, align 4, !dbg !13104
  ret void, !dbg !13105
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_set_filter(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !13106 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13110, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata i8* %1, metadata !13111, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata i8* %2, metadata !13112, metadata !DIExpression()), !dbg !13117
  call void @llvm.dbg.value(metadata i32 %3, metadata !13113, metadata !DIExpression()), !dbg !13117
  %5 = tail call i32 @str_to_log_switch(i8* noundef %1) #20, !dbg !13118
  call void @llvm.dbg.value(metadata i32 %5, metadata !13115, metadata !DIExpression()), !dbg !13117
  %6 = icmp slt i32 %5, 0, !dbg !13119
  br i1 %6, label %47, label %7, !dbg !13121

7:                                                ; preds = %4
  %8 = tail call i32 @str_to_print_level(i8* noundef %2) #20, !dbg !13122
  call void @llvm.dbg.value(metadata i32 %8, metadata !13116, metadata !DIExpression()), !dbg !13117
  %9 = icmp slt i32 %8, 0, !dbg !13123
  br i1 %9, label %47, label %10, !dbg !13125

10:                                               ; preds = %7
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.285, i32 0, i32 0)) #18, !dbg !13126
  %12 = icmp eq i32 %11, 0, !dbg !13128
  %13 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !13129
  br i1 %12, label %14, label %31, !dbg !13130

14:                                               ; preds = %10
  %15 = icmp eq %struct.log_control_block_t** %13, null, !dbg !13131
  br i1 %15, label %47, label %16, !dbg !13134

16:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 0, metadata !13114, metadata !DIExpression()), !dbg !13117
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %13, align 4, !dbg !13135
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !13136
  br i1 %18, label %43, label %19, !dbg !13136

19:                                               ; preds = %16, %19
  %20 = phi %struct.log_control_block_t* [ %29, %19 ], [ %17, %16 ]
  %21 = phi i32 [ %27, %19 ], [ 0, %16 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !13114, metadata !DIExpression()), !dbg !13117
  %22 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %20, i32 0, i32 1, !dbg !13137
  store i32 %5, i32* %22, align 4, !dbg !13139
  %23 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !13140
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %21, !dbg !13141
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !13141
  %26 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %25, i32 0, i32 2, !dbg !13142
  store i32 %8, i32* %26, align 4, !dbg !13143
  %27 = add nuw nsw i32 %21, 1, !dbg !13144
  call void @llvm.dbg.value(metadata i32 %27, metadata !13114, metadata !DIExpression()), !dbg !13117
  %28 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %27, !dbg !13135
  %29 = load %struct.log_control_block_t*, %struct.log_control_block_t** %28, align 4, !dbg !13135
  %30 = icmp eq %struct.log_control_block_t* %29, null, !dbg !13136
  br i1 %30, label %43, label %19, !dbg !13136, !llvm.loop !13145

31:                                               ; preds = %10
  %32 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %13, i8* noundef %0) #20, !dbg !13147
  call void @llvm.dbg.value(metadata i32 %32, metadata !13114, metadata !DIExpression()), !dbg !13117
  %33 = icmp slt i32 %32, 0, !dbg !13149
  br i1 %33, label %47, label %34, !dbg !13151

34:                                               ; preds = %31
  %35 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !13152
  %36 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %35, i32 %32, !dbg !13153
  %37 = load %struct.log_control_block_t*, %struct.log_control_block_t** %36, align 4, !dbg !13153
  %38 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %37, i32 0, i32 1, !dbg !13154
  store i32 %5, i32* %38, align 4, !dbg !13155
  %39 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !13156
  %40 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %39, i32 %32, !dbg !13157
  %41 = load %struct.log_control_block_t*, %struct.log_control_block_t** %40, align 4, !dbg !13157
  %42 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %41, i32 0, i32 2, !dbg !13158
  store i32 %8, i32* %42, align 4, !dbg !13159
  br label %43

43:                                               ; preds = %19, %16, %34
  %44 = icmp eq i32 %3, 0, !dbg !13160
  br i1 %44, label %47, label %45, !dbg !13162

45:                                               ; preds = %43
  %46 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !13163
  tail call void %46(%struct.syslog_config_s* noundef nonnull @syslog_config) #18, !dbg !13165
  br label %47, !dbg !13166

47:                                               ; preds = %43, %45, %31, %14, %7, %4
  %48 = phi i32 [ -1, %4 ], [ -1, %7 ], [ -1, %14 ], [ -1, %31 ], [ 0, %45 ], [ 0, %43 ], !dbg !13117
  ret i32 %48, !dbg !13167
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_log_switch(i8* noundef %0) local_unnamed_addr #0 !dbg !13168 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13172, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.value(metadata i32 0, metadata !13173, metadata !DIExpression()), !dbg !13174
  br label %2, !dbg !13175

2:                                                ; preds = %2, %1
  %3 = phi i1 [ false, %1 ], [ true, %2 ]
  %4 = phi i32 [ 0, %1 ], [ 1, %2 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !13173, metadata !DIExpression()), !dbg !13174
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %4, !dbg !13177
  %6 = load i8*, i8** %5, align 4, !dbg !13177
  %7 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %6) #18, !dbg !13181
  %8 = icmp eq i32 %7, 0, !dbg !13181
  %9 = or i1 %8, %3, !dbg !13182
  br i1 %9, label %10, label %2, !dbg !13182

10:                                               ; preds = %2
  %11 = select i1 %8, i32 %4, i32 -1, !dbg !13182
  ret i32 %11, !dbg !13183
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_print_level(i8* noundef %0) local_unnamed_addr #0 !dbg !13184 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13186, metadata !DIExpression()), !dbg !13188
  call void @llvm.dbg.value(metadata i32 0, metadata !13187, metadata !DIExpression()), !dbg !13188
  br label %2, !dbg !13189

2:                                                ; preds = %1, %8
  %3 = phi i32 [ 0, %1 ], [ %9, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !13187, metadata !DIExpression()), !dbg !13188
  %4 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !13191
  %5 = load i8*, i8** %4, align 4, !dbg !13191
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #18, !dbg !13195
  %7 = icmp eq i32 %6, 0, !dbg !13195
  br i1 %7, label %11, label %8, !dbg !13196

8:                                                ; preds = %2
  %9 = add nuw nsw i32 %3, 1, !dbg !13197
  call void @llvm.dbg.value(metadata i32 %9, metadata !13187, metadata !DIExpression()), !dbg !13188
  %10 = icmp eq i32 %9, 4, !dbg !13198
  br i1 %10, label %11, label %2, !dbg !13189, !llvm.loop !13199

11:                                               ; preds = %8, %2
  %12 = phi i32 [ %3, %2 ], [ -1, %8 ], !dbg !13188
  ret i32 %12, !dbg !13201
}

; Function Attrs: optsize
declare dso_local i32 @strcmp(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) unnamed_addr #0 !dbg !13202 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !13206, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.value(metadata i8* %1, metadata !13207, metadata !DIExpression()), !dbg !13209
  call void @llvm.dbg.value(metadata i32 0, metadata !13208, metadata !DIExpression()), !dbg !13209
  %3 = icmp eq %struct.log_control_block_t** %0, null, !dbg !13210
  br i1 %3, label %19, label %4, !dbg !13212

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !13208, metadata !DIExpression()), !dbg !13209
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !13213
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !13214
  br i1 %6, label %19, label %7, !dbg !13214

7:                                                ; preds = %4, %14
  %8 = phi %struct.log_control_block_t* [ %17, %14 ], [ %5, %4 ]
  %9 = phi i32 [ %15, %14 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13208, metadata !DIExpression()), !dbg !13209
  %10 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !13215
  %11 = load i8*, i8** %10, align 4, !dbg !13215
  %12 = tail call i32 @strcmp(i8* noundef %11, i8* noundef %1) #18, !dbg !13218
  %13 = icmp eq i32 %12, 0, !dbg !13218
  br i1 %13, label %19, label %14, !dbg !13219

14:                                               ; preds = %7
  %15 = add nuw nsw i32 %9, 1, !dbg !13220
  call void @llvm.dbg.value(metadata i32 %15, metadata !13208, metadata !DIExpression()), !dbg !13209
  %16 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %15, !dbg !13213
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %16, align 4, !dbg !13213
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !13214
  br i1 %18, label %19, label %7, !dbg !13214, !llvm.loop !13221

19:                                               ; preds = %7, %14, %4, %2
  %20 = phi i32 [ -1, %2 ], [ -1, %4 ], [ %9, %7 ], [ -1, %14 ], !dbg !13209
  ret i32 %20, !dbg !13223
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_at_set_filter(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !13224 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13228, metadata !DIExpression()), !dbg !13233
  call void @llvm.dbg.value(metadata i32 %1, metadata !13229, metadata !DIExpression()), !dbg !13233
  call void @llvm.dbg.value(metadata i32 %2, metadata !13230, metadata !DIExpression()), !dbg !13233
  call void @llvm.dbg.value(metadata i32 %3, metadata !13231, metadata !DIExpression()), !dbg !13233
  %5 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.285, i32 0, i32 0)) #18, !dbg !13234
  %6 = icmp eq i32 %5, 0, !dbg !13236
  %7 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !13237
  br i1 %6, label %8, label %25, !dbg !13238

8:                                                ; preds = %4
  %9 = icmp eq %struct.log_control_block_t** %7, null, !dbg !13239
  br i1 %9, label %41, label %10, !dbg !13242

10:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 0, metadata !13232, metadata !DIExpression()), !dbg !13233
  %11 = load %struct.log_control_block_t*, %struct.log_control_block_t** %7, align 4, !dbg !13243
  %12 = icmp eq %struct.log_control_block_t* %11, null, !dbg !13244
  br i1 %12, label %37, label %13, !dbg !13244

13:                                               ; preds = %10, %13
  %14 = phi %struct.log_control_block_t* [ %23, %13 ], [ %11, %10 ]
  %15 = phi i32 [ %21, %13 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !13232, metadata !DIExpression()), !dbg !13233
  %16 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %14, i32 0, i32 1, !dbg !13245
  store i32 %1, i32* %16, align 4, !dbg !13247
  %17 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !13248
  %18 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %15, !dbg !13249
  %19 = load %struct.log_control_block_t*, %struct.log_control_block_t** %18, align 4, !dbg !13249
  %20 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %19, i32 0, i32 2, !dbg !13250
  store i32 %2, i32* %20, align 4, !dbg !13251
  %21 = add nuw nsw i32 %15, 1, !dbg !13252
  call void @llvm.dbg.value(metadata i32 %21, metadata !13232, metadata !DIExpression()), !dbg !13233
  %22 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %21, !dbg !13243
  %23 = load %struct.log_control_block_t*, %struct.log_control_block_t** %22, align 4, !dbg !13243
  %24 = icmp eq %struct.log_control_block_t* %23, null, !dbg !13244
  br i1 %24, label %37, label %13, !dbg !13244, !llvm.loop !13253

25:                                               ; preds = %4
  %26 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %7, i8* noundef %0) #20, !dbg !13255
  call void @llvm.dbg.value(metadata i32 %26, metadata !13232, metadata !DIExpression()), !dbg !13233
  %27 = icmp slt i32 %26, 0, !dbg !13257
  br i1 %27, label %41, label %28, !dbg !13259

28:                                               ; preds = %25
  %29 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !13260
  %30 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %29, i32 %26, !dbg !13261
  %31 = load %struct.log_control_block_t*, %struct.log_control_block_t** %30, align 4, !dbg !13261
  %32 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %31, i32 0, i32 1, !dbg !13262
  store i32 %1, i32* %32, align 4, !dbg !13263
  %33 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !13264
  %34 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %33, i32 %26, !dbg !13265
  %35 = load %struct.log_control_block_t*, %struct.log_control_block_t** %34, align 4, !dbg !13265
  %36 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %35, i32 0, i32 2, !dbg !13266
  store i32 %2, i32* %36, align 4, !dbg !13267
  br label %37

37:                                               ; preds = %13, %10, %28
  %38 = icmp eq i32 %3, 0, !dbg !13268
  br i1 %38, label %41, label %39, !dbg !13270

39:                                               ; preds = %37
  %40 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !13271
  tail call void %40(%struct.syslog_config_s* noundef nonnull @syslog_config) #18, !dbg !13273
  br label %41, !dbg !13274

41:                                               ; preds = %37, %39, %25, %8
  %42 = phi i32 [ -1, %8 ], [ -1, %25 ], [ 0, %39 ], [ 0, %37 ], !dbg !13233
  ret i32 %42, !dbg !13275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_str2val(%struct.log_control_block_t** noundef %0, i8* noundef %1) local_unnamed_addr #0 !dbg !13276 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !13280, metadata !DIExpression()), !dbg !13291
  call void @llvm.dbg.value(metadata i8* %1, metadata !13281, metadata !DIExpression()), !dbg !13291
  call void @llvm.dbg.value(metadata i32 0, metadata !13282, metadata !DIExpression()), !dbg !13291
  %7 = bitcast i8** %3 to i8*, !dbg !13292
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17, !dbg !13292
  %8 = bitcast i8** %4 to i8*, !dbg !13293
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #17, !dbg !13293
  %9 = bitcast i8** %5 to i8*, !dbg !13294
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17, !dbg !13294
  call void @llvm.dbg.value(metadata i8 0, metadata !13287, metadata !DIExpression()), !dbg !13291
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #17, !dbg !13295
  call void @llvm.dbg.value(metadata i8 poison, metadata !13287, metadata !DIExpression()), !dbg !13291
  call void @llvm.dbg.value(metadata i32 0, metadata !13282, metadata !DIExpression()), !dbg !13291
  br label %10, !dbg !13296

10:                                               ; preds = %2, %51
  %11 = phi i32 [ 0, %2 ], [ %37, %51 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !13282, metadata !DIExpression()), !dbg !13291
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !13297
  call void @llvm.dbg.value(metadata i8** %3, metadata !13284, metadata !DIExpression(DW_OP_deref)), !dbg !13291
  %13 = call fastcc i32 @syslog_get_a_string(i8* noundef %12, i8** noundef nonnull %3) #20, !dbg !13299
  call void @llvm.dbg.value(metadata i32 %13, metadata !13283, metadata !DIExpression()), !dbg !13291
  %14 = icmp eq i32 %13, 0, !dbg !13300
  br i1 %14, label %61, label %15, !dbg !13302

15:                                               ; preds = %10
  %16 = add i32 %13, %11, !dbg !13303
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !13304
  %18 = load i8, i8* %17, align 1, !dbg !13304
  %19 = icmp eq i8 %18, 0, !dbg !13305
  br i1 %19, label %61, label %20, !dbg !13306

20:                                               ; preds = %15
  store i8 0, i8* %17, align 1, !dbg !13307
  %21 = add i32 %16, 1, !dbg !13308
  call void @llvm.dbg.value(metadata i32 %21, metadata !13282, metadata !DIExpression()), !dbg !13291
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !13309
  call void @llvm.dbg.value(metadata i8** %4, metadata !13285, metadata !DIExpression(DW_OP_deref)), !dbg !13291
  %23 = call fastcc i32 @syslog_get_a_string(i8* noundef %22, i8** noundef nonnull %4) #20, !dbg !13310
  call void @llvm.dbg.value(metadata i32 %23, metadata !13283, metadata !DIExpression()), !dbg !13291
  %24 = icmp eq i32 %23, 0, !dbg !13311
  br i1 %24, label %61, label %25, !dbg !13313

25:                                               ; preds = %20
  %26 = add i32 %23, %21, !dbg !13314
  %27 = getelementptr inbounds i8, i8* %1, i32 %26, !dbg !13315
  call void @llvm.dbg.value(metadata i1 undef, metadata !13287, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13291
  store i8 0, i8* %27, align 1, !dbg !13316
  %28 = add i32 %26, 1, !dbg !13317
  call void @llvm.dbg.value(metadata i32 %28, metadata !13282, metadata !DIExpression()), !dbg !13291
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !13318
  call void @llvm.dbg.value(metadata i8** %5, metadata !13286, metadata !DIExpression(DW_OP_deref)), !dbg !13291
  %30 = call fastcc i32 @syslog_get_a_string(i8* noundef %29, i8** noundef nonnull %5) #20, !dbg !13319
  call void @llvm.dbg.value(metadata i32 %30, metadata !13283, metadata !DIExpression()), !dbg !13291
  %31 = icmp eq i32 %30, 0, !dbg !13320
  br i1 %31, label %61, label %32, !dbg !13322

32:                                               ; preds = %25
  %33 = add i32 %30, %28, !dbg !13323
  %34 = getelementptr inbounds i8, i8* %1, i32 %33, !dbg !13324
  %35 = load i8, i8* %34, align 1, !dbg !13324
  %36 = icmp eq i8 %35, 0, !dbg !13325
  call void @llvm.dbg.value(metadata i1 %36, metadata !13287, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13291
  store i8 0, i8* %34, align 1, !dbg !13326
  %37 = add i32 %33, 1, !dbg !13327
  call void @llvm.dbg.value(metadata i32 %37, metadata !13282, metadata !DIExpression()), !dbg !13291
  %38 = load i8*, i8** %3, align 4, !dbg !13328
  call void @llvm.dbg.value(metadata i8* %38, metadata !13284, metadata !DIExpression()), !dbg !13291
  %39 = call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %0, i8* noundef %38) #20, !dbg !13329
  call void @llvm.dbg.value(metadata i32 %39, metadata !13283, metadata !DIExpression()), !dbg !13291
  %40 = icmp slt i32 %39, 0, !dbg !13330
  br i1 %40, label %61, label %41, !dbg !13332

41:                                               ; preds = %32
  %42 = load i8*, i8** %4, align 4, !dbg !13333
  call void @llvm.dbg.value(metadata i8* %42, metadata !13285, metadata !DIExpression()), !dbg !13291
  call void @llvm.dbg.value(metadata i8* %6, metadata !13290, metadata !DIExpression(DW_OP_deref)), !dbg !13291
  %43 = call i32 @toi(i8* noundef %42, i8* noundef nonnull %6) #18, !dbg !13334
  call void @llvm.dbg.value(metadata i32 %43, metadata !13288, metadata !DIExpression()), !dbg !13291
  %44 = load i8, i8* %6, align 1, !dbg !13335
  call void @llvm.dbg.value(metadata i8 %44, metadata !13290, metadata !DIExpression()), !dbg !13291
  %45 = icmp eq i8 %44, 4, !dbg !13337
  br i1 %45, label %61, label %46, !dbg !13338

46:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 undef, metadata !13288, metadata !DIExpression()), !dbg !13291
  %47 = load i8*, i8** %5, align 4, !dbg !13339
  call void @llvm.dbg.value(metadata i8* %47, metadata !13286, metadata !DIExpression()), !dbg !13291
  call void @llvm.dbg.value(metadata i8* %6, metadata !13290, metadata !DIExpression(DW_OP_deref)), !dbg !13291
  %48 = call i32 @toi(i8* noundef %47, i8* noundef nonnull %6) #18, !dbg !13340
  call void @llvm.dbg.value(metadata i32 %48, metadata !13289, metadata !DIExpression()), !dbg !13291
  %49 = load i8, i8* %6, align 1, !dbg !13341
  call void @llvm.dbg.value(metadata i8 %49, metadata !13290, metadata !DIExpression()), !dbg !13291
  %50 = icmp eq i8 %49, 4, !dbg !13343
  br i1 %50, label %61, label %51, !dbg !13344

51:                                               ; preds = %46
  %52 = icmp ne i32 %43, 0, !dbg !13345
  %53 = zext i1 %52 to i32, !dbg !13345
  call void @llvm.dbg.value(metadata i32 %53, metadata !13288, metadata !DIExpression()), !dbg !13291
  %54 = icmp ult i32 %48, 3, !dbg !13346
  %55 = select i1 %54, i32 %48, i32 3, !dbg !13346
  call void @llvm.dbg.value(metadata i32 %55, metadata !13289, metadata !DIExpression()), !dbg !13291
  %56 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %39, !dbg !13347
  %57 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !13347
  %58 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %57, i32 0, i32 1, !dbg !13348
  store i32 %53, i32* %58, align 4, !dbg !13349
  %59 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !13350
  %60 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %59, i32 0, i32 2, !dbg !13351
  store i32 %55, i32* %60, align 4, !dbg !13352
  call void @llvm.dbg.value(metadata i8 poison, metadata !13287, metadata !DIExpression()), !dbg !13291
  call void @llvm.dbg.value(metadata i32 %37, metadata !13282, metadata !DIExpression()), !dbg !13291
  br i1 %36, label %61, label %10, !dbg !13296, !llvm.loop !13353

61:                                               ; preds = %51, %46, %41, %32, %25, %20, %10, %15
  %62 = phi i32 [ -1, %15 ], [ -1, %10 ], [ -2, %20 ], [ -2, %25 ], [ -3, %32 ], [ -4, %41 ], [ -4, %46 ], [ 0, %51 ], !dbg !13291
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #17, !dbg !13355
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17, !dbg !13355
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #17, !dbg !13355
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17, !dbg !13355
  ret i32 %62, !dbg !13355
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @syslog_get_a_string(i8* noundef %0, i8** nocapture noundef writeonly %1) unnamed_addr #15 !dbg !13356 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13361, metadata !DIExpression()), !dbg !13364
  call void @llvm.dbg.value(metadata i8** %1, metadata !13362, metadata !DIExpression()), !dbg !13364
  br label %3, !dbg !13365

3:                                                ; preds = %6, %2
  %4 = phi i8* [ %0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i8* %4, metadata !13361, metadata !DIExpression()), !dbg !13364
  %5 = load i8, i8* %4, align 1, !dbg !13366
  switch i8 %5, label %9 [
    i8 32, label %6
    i8 0, label %8
  ], !dbg !13365

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !13367
  call void @llvm.dbg.value(metadata i8* %7, metadata !13361, metadata !DIExpression()), !dbg !13364
  br label %3, !dbg !13365, !llvm.loop !13369

8:                                                ; preds = %3
  store i8* null, i8** %1, align 4, !dbg !13371
  br label %19, !dbg !13374

9:                                                ; preds = %3
  store i8* %4, i8** %1, align 4, !dbg !13375
  br label %10, !dbg !13376

10:                                               ; preds = %13, %9
  %11 = phi i8* [ %4, %9 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !13361, metadata !DIExpression()), !dbg !13364
  %12 = load i8, i8* %11, align 1, !dbg !13377
  switch i8 %12, label %13 [
    i8 32, label %15
    i8 0, label %15
  ], !dbg !13378

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !13379
  call void @llvm.dbg.value(metadata i8* %14, metadata !13361, metadata !DIExpression()), !dbg !13364
  br label %10, !dbg !13376, !llvm.loop !13381

15:                                               ; preds = %10, %10
  %16 = ptrtoint i8* %11 to i32, !dbg !13383
  %17 = ptrtoint i8* %4 to i32, !dbg !13383
  %18 = sub i32 %16, %17, !dbg !13383
  br label %19, !dbg !13384

19:                                               ; preds = %15, %8
  %20 = phi i32 [ 0, %8 ], [ %18, %15 ], !dbg !13364
  ret i32 %20, !dbg !13385
}

; Function Attrs: optsize
declare dso_local i32 @toi(i8* noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_val2str(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 !dbg !13386 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !13393, metadata !DIExpression()), !dbg !13398
  call void @llvm.dbg.value(metadata i8* %1, metadata !13394, metadata !DIExpression()), !dbg !13398
  call void @llvm.dbg.value(metadata i32 0, metadata !13395, metadata !DIExpression()), !dbg !13398
  call void @llvm.dbg.value(metadata i32 0, metadata !13396, metadata !DIExpression()), !dbg !13398
  %3 = icmp eq %struct.log_control_block_t** %0, null
  call void @llvm.dbg.value(metadata i32 0, metadata !13395, metadata !DIExpression()), !dbg !13398
  call void @llvm.dbg.value(metadata i32 0, metadata !13396, metadata !DIExpression()), !dbg !13398
  br i1 %3, label %31, label %4, !dbg !13399

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !13395, metadata !DIExpression()), !dbg !13398
  call void @llvm.dbg.value(metadata i32 0, metadata !13396, metadata !DIExpression()), !dbg !13398
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !13400
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !13399
  br i1 %6, label %27, label %7, !dbg !13401

7:                                                ; preds = %4, %7
  %8 = phi %struct.log_control_block_t* [ %25, %7 ], [ %5, %4 ]
  %9 = phi i32 [ %22, %7 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %7 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13396, metadata !DIExpression()), !dbg !13398
  call void @llvm.dbg.value(metadata i32 %10, metadata !13395, metadata !DIExpression()), !dbg !13398
  %11 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !13402
  %12 = sub nsw i32 256, %9, !dbg !13404
  %13 = icmp eq i32 %10, 0, !dbg !13405
  %14 = select i1 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.288, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.268, i32 0, i32 0), !dbg !13406
  %15 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !13407
  %16 = load i8*, i8** %15, align 4, !dbg !13407
  %17 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 1, !dbg !13408
  %18 = load i32, i32* %17, align 4, !dbg !13408
  %19 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 2, !dbg !13409
  %20 = load i32, i32* %19, align 4, !dbg !13409
  %21 = tail call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef %11, i32 noundef %12, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13.289, i32 0, i32 0), i8* noundef %14, i8* noundef %16, i32 noundef %18, i32 noundef %20) #18, !dbg !13410
  call void @llvm.dbg.value(metadata i32 %21, metadata !13397, metadata !DIExpression()), !dbg !13398
  %22 = add nsw i32 %21, %9, !dbg !13411
  call void @llvm.dbg.value(metadata i32 %22, metadata !13396, metadata !DIExpression()), !dbg !13398
  %23 = add nuw nsw i32 %10, 1, !dbg !13412
  call void @llvm.dbg.value(metadata i32 %23, metadata !13395, metadata !DIExpression()), !dbg !13398
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %23, !dbg !13400
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !13400
  %26 = icmp eq %struct.log_control_block_t* %25, null, !dbg !13399
  br i1 %26, label %27, label %7, !dbg !13401, !llvm.loop !13413

27:                                               ; preds = %7, %4
  %28 = phi i32 [ 0, %4 ], [ %22, %7 ]
  %29 = icmp sgt i32 %28, 255, !dbg !13415
  br i1 %29, label %30, label %31, !dbg !13417

30:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.291, i32 0, i32 0), i32 noundef 1467) #18, !dbg !13418
  br label %31, !dbg !13418

31:                                               ; preds = %2, %30, %27
  %32 = phi i32 [ %28, %30 ], [ %28, %27 ], [ 0, %2 ]
  ret i32 %32, !dbg !13420
}

; Function Attrs: optsize
declare dso_local i32 @snprintf(i8* noundef, i32 noundef, i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i8* @log_switch_to_str(i32 noundef %0) local_unnamed_addr #0 !dbg !13421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13425, metadata !DIExpression()), !dbg !13426
  %2 = icmp ugt i32 %0, 1, !dbg !13427
  br i1 %2, label %3, label %4, !dbg !13429

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.291, i32 0, i32 0), i32 noundef 1474) #18, !dbg !13430
  br label %4, !dbg !13430

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %0, !dbg !13432
  %6 = load i8*, i8** %5, align 4, !dbg !13432
  ret i8* %6, !dbg !13433
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @print_level_to_str(i32 noundef %0) local_unnamed_addr #0 !dbg !13434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13438, metadata !DIExpression()), !dbg !13439
  %2 = icmp ugt i32 %0, 3, !dbg !13440
  br i1 %2, label %3, label %4, !dbg !13442

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.291, i32 0, i32 0), i32 noundef 1480) #18, !dbg !13443
  br label %4, !dbg !13443

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %0, !dbg !13445
  %6 = load i8*, i8** %5, align 4, !dbg !13445
  ret i8* %6, !dbg !13446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__wrap_printf(i8* noundef %0, ...) local_unnamed_addr #0 !dbg !13447 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13451, metadata !DIExpression()), !dbg !13455
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !13456
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17, !dbg !13456
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !13452, metadata !DIExpression()), !dbg !13457
  %4 = load i32, i32* @syslog_init_done, align 4, !dbg !13458
  %5 = icmp eq i32 %4, 0, !dbg !13458
  br i1 %5, label %13, label %6, !dbg !13460

6:                                                ; preds = %1
  %7 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #17, !dbg !13461, !srcloc !12456
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !13461
  call void @llvm.dbg.value(metadata i32 %8, metadata !12453, metadata !DIExpression()) #17, !dbg !13463
  call void @llvm.dbg.value(metadata i32 undef, metadata !12454, metadata !DIExpression()) #17, !dbg !13463
  call void @llvm.dbg.value(metadata i32 %8, metadata !13454, metadata !DIExpression()), !dbg !13455
  call void @llvm.va_start(i8* nonnull %3), !dbg !13464
  %9 = bitcast %struct.__va_list* %2 to i32*, !dbg !13465
  %10 = load i32, i32* %9, align 4, !dbg !13465
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !13465
  %12 = call i32 @vprintf(i8* noundef %0, [1 x i32] %11) #18, !dbg !13465
  call void @llvm.dbg.value(metadata i32 %12, metadata !13453, metadata !DIExpression()), !dbg !13455
  call void @llvm.va_end(i8* nonnull %3), !dbg !13466
  call void @llvm.dbg.value(metadata i32 %8, metadata !12472, metadata !DIExpression()) #17, !dbg !13467
  call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %8) #17, !dbg !13469, !srcloc !12478
  br label %13, !dbg !13470

13:                                               ; preds = %1, %6
  %14 = phi i32 [ %12, %6 ], [ 0, %1 ], !dbg !13455
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17, !dbg !13471
  ret i32 %14, !dbg !13471
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree nosync nounwind willreturn }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #16 = { naked noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nounwind }
attributes #18 = { nobuiltin nounwind optsize "no-builtins" }
attributes #19 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #20 = { nobuiltin optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !83, !1785, !1795, !164, !183, !1840, !280, !292, !342, !379, !462, !515, !1843, !607, !646, !762, !812, !1857, !838, !868, !1860, !1639, !1119, !1130, !1865, !1274, !1337, !1402, !1425, !1891, !1455, !1902, !1653, !1771}
!llvm.ident = !{!1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905, !1905}
!llvm.module.flags = !{!1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2, file: !3, line: 74, type: !69, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !50, globals: !63, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/flash_sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!4 = !{!5, !20, !28, !35, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 52, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/spi_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19}
!9 = !DIEnumerator(name: "SF_DRV_NOT_READY", value: -1)
!10 = !DIEnumerator(name: "SF_DRV_READY", value: 0)
!11 = !DIEnumerator(name: "SF_DRV_READING", value: 1)
!12 = !DIEnumerator(name: "SF_DRV_DIRECT_READING", value: 2)
!13 = !DIEnumerator(name: "SF_DRV_PROGRAMMING", value: 3)
!14 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE", value: 4)
!15 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE_CRC", value: 5)
!16 = !DIEnumerator(name: "SF_DRV_SECTOR_4K_ERASING", value: 6)
!17 = !DIEnumerator(name: "SF_DRV_SECTOR_32K_ERASING", value: 7)
!18 = !DIEnumerator(name: "SF_DRV_SECTOR_64K_ERASING", value: 8)
!19 = !DIEnumerator(name: "SF_DRV_CHIP_ERASING", value: 9)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 387, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!24 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!25 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!26 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!27 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 666, baseType: !30, size: 32, elements: !31)
!29 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!30 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!33 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!34 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_BUS", value: 2)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 73, baseType: !30, size: 32, elements: !36)
!36 = !{!37, !38, !39, !40, !41, !42, !43}
!37 = !DIEnumerator(name: "SF_TYPE_NONE", value: 0)
!38 = !DIEnumerator(name: "SF_TYPE_MXIC", value: 194)
!39 = !DIEnumerator(name: "SF_TYPE_WINBOND", value: 239)
!40 = !DIEnumerator(name: "SF_TYPE_GD", value: 200)
!41 = !DIEnumerator(name: "SF_TYPE_MICRON", value: 32)
!42 = !DIEnumerator(name: "SF_TYPE_CUSTOMER", value: 255)
!43 = !DIEnumerator(name: "SF_TYPE_COUNT", value: 65535)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 123, baseType: !30, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!48 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!49 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!50 = !{!51, !52, !59}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 32)
!53 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !54)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !55, line: 24, baseType: !56)
!55 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !57, line: 43, baseType: !58)
!57 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!58 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !55, line: 48, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !57, line: 79, baseType: !30)
!63 = !{!64, !0, !67, !70, !72, !74, !76, !78}
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(name: "sf_drvier_status", scope: !2, file: !3, line: 72, type: !66, isLocal: false, isDefinition: true)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_DRV_STATE", file: !6, line: 64, baseType: !5)
!67 = !DIGlobalVariableExpression(var: !68, expr: !DIExpression())
!68 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2, file: !3, line: 75, type: !69, isLocal: false, isDefinition: true)
!69 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!70 = !DIGlobalVariableExpression(var: !71, expr: !DIExpression())
!71 = distinct !DIGlobalVariable(name: "gucFlashSFCMode", scope: !2, file: !3, line: 77, type: !61, isLocal: false, isDefinition: true)
!72 = !DIGlobalVariableExpression(var: !73, expr: !DIExpression())
!73 = distinct !DIGlobalVariable(name: "suspend_time", scope: !2, file: !3, line: 82, type: !61, isLocal: false, isDefinition: true)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(name: "resume_suspend_on_ready", scope: !2, file: !3, line: 83, type: !61, isLocal: false, isDefinition: true)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(name: "resume_suspend_on_checkready", scope: !2, file: !3, line: 84, type: !61, isLocal: false, isDefinition: true)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "sf_Mutex", scope: !2, file: !3, line: 78, type: !7, isLocal: true, isDefinition: true)
!80 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression())
!82 = distinct !DIGlobalVariable(name: "g_u4ClkCnt1ms", scope: !83, file: !84, line: 71, type: !158, isLocal: false, isDefinition: true)
!83 = distinct !DICompileUnit(language: DW_LANG_C99, file: !84, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !85, retainedTypes: !136, globals: !141, splitDebugInlining: false, nameTableKind: None)
!84 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!85 = !{!86, !91}
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 121, baseType: !30, size: 32, elements: !88)
!87 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/type_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!88 = !{!89, !90}
!89 = !DIEnumerator(name: "KAL_FALSE", value: 0)
!90 = !DIEnumerator(name: "KAL_TRUE", value: 1)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !92, line: 47, baseType: !7, size: 32, elements: !93)
!92 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!93 = !{!94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!94 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!95 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!96 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!97 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!98 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!99 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!100 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!101 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!102 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!103 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!104 = !DIEnumerator(name: "CM4_UART1_IRQ", value: 0)
!105 = !DIEnumerator(name: "CM4_DMA_IRQ", value: 1)
!106 = !DIEnumerator(name: "CM4_HIF_IRQ", value: 2)
!107 = !DIEnumerator(name: "CM4_I2C1_IRQ", value: 3)
!108 = !DIEnumerator(name: "CM4_I2C2_IRQ", value: 4)
!109 = !DIEnumerator(name: "CM4_UART2_IRQ", value: 5)
!110 = !DIEnumerator(name: "CM4_MTK_CRYPTO_IRQ", value: 6)
!111 = !DIEnumerator(name: "CM4_SF_IRQ", value: 7)
!112 = !DIEnumerator(name: "CM4_EINT_IRQ", value: 8)
!113 = !DIEnumerator(name: "CM4_BTIF_IRQ", value: 9)
!114 = !DIEnumerator(name: "CM4_WDT_IRQ", value: 10)
!115 = !DIEnumerator(name: "CM4_AHB_MON_IRQ", value: 11)
!116 = !DIEnumerator(name: "CM4_SPI_SLAVE_IRQ", value: 12)
!117 = !DIEnumerator(name: "CM4_N9_WDT_IRQ", value: 13)
!118 = !DIEnumerator(name: "CM4_ADC_IRQ", value: 14)
!119 = !DIEnumerator(name: "CM4_IRDA_TX_IRQ", value: 15)
!120 = !DIEnumerator(name: "CM4_IRDA_RX_IRQ", value: 16)
!121 = !DIEnumerator(name: "CM4_USB_VBUS_ON_IRQ", value: 17)
!122 = !DIEnumerator(name: "CM4_USB_VBUS_OFF_IRQ", value: 18)
!123 = !DIEnumerator(name: "CM4_SPIS_CS_WAKEUP_IRQ", value: 19)
!124 = !DIEnumerator(name: "CM4_GPT3_IRQ", value: 20)
!125 = !DIEnumerator(name: "CM4_IRQ21_IRQ", value: 21)
!126 = !DIEnumerator(name: "CM4_AUDIO_IRQ", value: 22)
!127 = !DIEnumerator(name: "CM4_HIF_DMA_IRQ", value: 23)
!128 = !DIEnumerator(name: "CM4_GPT_IRQ", value: 24)
!129 = !DIEnumerator(name: "CM4_ADC_COMP_IRQ", value: 25)
!130 = !DIEnumerator(name: "CM4_AUDIO_WAKE_IRQ", value: 26)
!131 = !DIEnumerator(name: "CM4_SPIM_IRQ", value: 27)
!132 = !DIEnumerator(name: "CM4_USB_IRQ", value: 28)
!133 = !DIEnumerator(name: "CM4_UDMA_IRQ", value: 29)
!134 = !DIEnumerator(name: "CM4_TRNG_IRQ", value: 30)
!135 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 96)
!136 = !{!137, !140}
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !139)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint32", file: !87, line: 116, baseType: !30)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !92, line: 95, baseType: !91)
!141 = !{!81, !142}
!142 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression())
!143 = distinct !DIGlobalVariable(name: "GPTTimer", scope: !83, file: !84, line: 67, type: !144, isLocal: true, isDefinition: true)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPTStruct", file: !145, line: 111, baseType: !146)
!145 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 109, size: 96, elements: !147)
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_FUNC", scope: !146, file: !145, line: 110, baseType: !149, size: 96)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_func", file: !145, line: 106, baseType: !150)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 102, size: 96, elements: !151)
!151 = !{!152, !156, !157}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "gpt0_func", scope: !150, file: !145, line: 103, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DISubroutineType(types: !155)
!155 = !{null}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "gpt1_func", scope: !150, file: !145, line: 104, baseType: !153, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "gpt3_func", scope: !150, file: !145, line: 105, baseType: !153, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT32", file: !87, line: 62, baseType: !30)
!160 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 32))
!161 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "g_sfc_security_enable", scope: !164, file: !165, line: 58, type: !30, isLocal: false, isDefinition: true)
!164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !166, retainedTypes: !173, globals: !180, splitDebugInlining: false, nameTableKind: None)
!165 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!166 = !{!167}
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 45, baseType: !30, size: 32, elements: !168)
!168 = !{!169, !170, !171, !172}
!169 = !DIEnumerator(name: "SF_UNDEF", value: 0)
!170 = !DIEnumerator(name: "SPI", value: 1)
!171 = !DIEnumerator(name: "SPIQ", value: 2)
!172 = !DIEnumerator(name: "QPI", value: 3)
!173 = !{!137, !174, !30, !175, !177, !178}
!174 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !30)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !58)
!180 = !{!162}
!181 = !DIGlobalVariableExpression(var: !182, expr: !DIExpression())
!182 = distinct !DIGlobalVariable(name: "gSFC_max_data_size", scope: !183, file: !184, line: 67, type: !30, isLocal: false, isDefinition: true)
!183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !185, retainedTypes: !192, globals: !211, splitDebugInlining: false, nameTableKind: None)
!184 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/spi_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!185 = !{!35, !5, !167, !186}
!186 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 66, baseType: !7, size: 32, elements: !187)
!187 = !{!188, !189, !190, !191}
!188 = !DIEnumerator(name: "FLASH_NOT_READY", value: -1)
!189 = !DIEnumerator(name: "FLASH_READY", value: 0)
!190 = !DIEnumerator(name: "FLASH_PROGRAMMING", value: 1)
!191 = !DIEnumerator(name: "FLASH_ERASING", value: 2)
!192 = !{!193, !195, !196, !30, !51, !210, !61, !139}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !58)
!195 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chip_info", file: !6, line: 137, size: 192, elements: !199)
!199 = !{!200, !203, !204, !205, !206, !207, !208, !209}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !198, file: !6, line: 138, baseType: !201, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!202 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !198, file: !6, line: 139, baseType: !58, size: 8, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !198, file: !6, line: 140, baseType: !195, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !198, file: !6, line: 141, baseType: !195, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !198, file: !6, line: 142, baseType: !30, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !198, file: !6, line: 144, baseType: !58, size: 8, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !198, file: !6, line: 145, baseType: !58, size: 8, offset: 168)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !198, file: !6, line: 146, baseType: !58, size: 8, offset: 176)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 32)
!211 = !{!181, !212, !217, !222, !227, !230, !232, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !259, !264, !266, !268, !270, !273}
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_winbond", scope: !183, file: !184, line: 70, type: !214, isLocal: false, isDefinition: true)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 96, elements: !215)
!215 = !{!216}
!216 = !DISubrange(count: 12)
!217 = !DIGlobalVariableExpression(var: !218, expr: !DIExpression())
!218 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_winbond", scope: !183, file: !184, line: 73, type: !219, isLocal: false, isDefinition: true)
!219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 32, elements: !220)
!220 = !{!221}
!221 = !DISubrange(count: 4)
!222 = !DIGlobalVariableExpression(var: !223, expr: !DIExpression())
!223 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_winbond", scope: !183, file: !184, line: 76, type: !224, isLocal: false, isDefinition: true)
!224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 72, elements: !225)
!225 = !{!226}
!226 = !DISubrange(count: 9)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "cmdlist_suspend_winbond", scope: !183, file: !184, line: 79, type: !229, isLocal: false, isDefinition: true)
!229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32, elements: !220)
!230 = !DIGlobalVariableExpression(var: !231, expr: !DIExpression())
!231 = distinct !DIGlobalVariable(name: "cmdlist_resume_winbond", scope: !183, file: !184, line: 82, type: !229, isLocal: false, isDefinition: true)
!232 = !DIGlobalVariableExpression(var: !233, expr: !DIExpression())
!233 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_mxic", scope: !183, file: !184, line: 87, type: !234, isLocal: false, isDefinition: true)
!234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 64, elements: !235)
!235 = !{!236}
!236 = !DISubrange(count: 8)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_mxic", scope: !183, file: !184, line: 91, type: !234, isLocal: false, isDefinition: true)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_mxic", scope: !183, file: !184, line: 95, type: !234, isLocal: false, isDefinition: true)
!241 = !DIGlobalVariableExpression(var: !242, expr: !DIExpression())
!242 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd", scope: !183, file: !184, line: 100, type: !224, isLocal: false, isDefinition: true)
!243 = !DIGlobalVariableExpression(var: !244, expr: !DIExpression())
!244 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd", scope: !183, file: !184, line: 104, type: !224, isLocal: false, isDefinition: true)
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd", scope: !183, file: !184, line: 108, type: !224, isLocal: false, isDefinition: true)
!247 = !DIGlobalVariableExpression(var: !248, expr: !DIExpression())
!248 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd25q32c", scope: !183, file: !184, line: 112, type: !234, isLocal: false, isDefinition: true)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd25q32c", scope: !183, file: !184, line: 115, type: !234, isLocal: false, isDefinition: true)
!251 = !DIGlobalVariableExpression(var: !252, expr: !DIExpression())
!252 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd25q32c", scope: !183, file: !184, line: 119, type: !234, isLocal: false, isDefinition: true)
!253 = !DIGlobalVariableExpression(var: !254, expr: !DIExpression())
!254 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_micron", scope: !183, file: !184, line: 123, type: !234, isLocal: false, isDefinition: true)
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_micron", scope: !183, file: !184, line: 126, type: !234, isLocal: false, isDefinition: true)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_micron", scope: !183, file: !184, line: 130, type: !234, isLocal: false, isDefinition: true)
!259 = !DIGlobalVariableExpression(var: !260, expr: !DIExpression())
!260 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_spimode", scope: !183, file: !184, line: 135, type: !261, isLocal: false, isDefinition: true)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 56, elements: !262)
!262 = !{!263}
!263 = !DISubrange(count: 7)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_qpimode", scope: !183, file: !184, line: 138, type: !261, isLocal: false, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "spi_chip_info", scope: !183, file: !184, line: 142, type: !196, isLocal: false, isDefinition: true)
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "gd_write_sr2_1", scope: !183, file: !184, line: 161, type: !7, isLocal: false, isDefinition: true)
!270 = !DIGlobalVariableExpression(var: !271, expr: !DIExpression())
!271 = distinct !DIGlobalVariable(name: "support_flash_id", scope: !183, file: !184, line: 162, type: !272, isLocal: false, isDefinition: true)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_TYPT", file: !6, line: 81, baseType: !35)
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "chips_data", scope: !183, file: !184, line: 144, type: !275, isLocal: true, isDefinition: true)
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 2496, elements: !276)
!276 = !{!277}
!277 = !DISubrange(count: 13)
!278 = !DIGlobalVariableExpression(var: !279, expr: !DIExpression())
!279 = distinct !DIGlobalVariable(name: "gXtalFreq", scope: !280, file: !281, line: 43, type: !61, isLocal: true, isDefinition: true)
!280 = distinct !DICompileUnit(language: DW_LANG_C99, file: !281, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !282, globals: !287, splitDebugInlining: false, nameTableKind: None)
!281 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/top.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!282 = !{!175, !159, !59, !283, !284, !286}
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int32", file: !87, line: 133, baseType: !30)
!287 = !{!278, !288}
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "gCpuFrequency", scope: !280, file: !281, line: 44, type: !61, isLocal: true, isDefinition: true)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "gUartClkFreq", scope: !292, file: !293, line: 54, type: !61, isLocal: false, isDefinition: true)
!292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !294, retainedTypes: !318, globals: !326, splitDebugInlining: false, nameTableKind: None)
!293 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!294 = !{!91, !295, !301}
!295 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !296, line: 71, baseType: !30, size: 32, elements: !297)
!296 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!297 = !{!298, !299, !300}
!298 = !DIEnumerator(name: "UART_PORT0", value: 0)
!299 = !DIEnumerator(name: "UART_PORT1", value: 1)
!300 = !DIEnumerator(name: "UART_MAX_PORT", value: 2)
!301 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !302, line: 129, baseType: !30, size: 32, elements: !303)
!302 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/dma_sw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!303 = !{!304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317}
!304 = !DIEnumerator(name: "VDMA_I2S_TX_CH", value: 12)
!305 = !DIEnumerator(name: "VDMA_I2S_RX_CH", value: 13)
!306 = !DIEnumerator(name: "VDMA_UART1TX_CH", value: 14)
!307 = !DIEnumerator(name: "VDMA_UART1RX_CH", value: 15)
!308 = !DIEnumerator(name: "VDMA_UART2TX_CH", value: 16)
!309 = !DIEnumerator(name: "VDMA_UART2RX_CH", value: 17)
!310 = !DIEnumerator(name: "VDMA_BTIF_TX_CH", value: 18)
!311 = !DIEnumerator(name: "VDMA_BTIF_RX_CH", value: 19)
!312 = !DIEnumerator(name: "VDMA_USB_EP2O_CH", value: 20)
!313 = !DIEnumerator(name: "VDMA_USB_EP3I_CH", value: 21)
!314 = !DIEnumerator(name: "VDMA_USB_EP3O_CH", value: 22)
!315 = !DIEnumerator(name: "VDMA_USB_EP4I_CH", value: 23)
!316 = !DIEnumerator(name: "VDMA_USB_EP4O_CH", value: 24)
!317 = !DIEnumerator(name: "VDMA_ADC_RX_CH", value: 25)
!318 = !{!175, !61, !319, !321, !323, !324, !159}
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!320 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint16", file: !87, line: 113, baseType: !322)
!322 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT8", file: !87, line: 59, baseType: !58)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 32)
!325 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !323)
!326 = !{!327, !335, !290}
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !292, file: !293, line: 57, type: !329, isLocal: false, isDefinition: true)
!329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !330, size: 64, elements: !333)
!330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!333 = !{!334}
!334 = !DISubrange(count: 2)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !292, file: !293, line: 58, type: !337, isLocal: false, isDefinition: true)
!337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 64, elements: !333)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !92, line: 97, baseType: !140)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "log_control_block_hal", scope: !342, file: !343, line: 127, type: !357, isLocal: false, isDefinition: true)
!342 = distinct !DICompileUnit(language: DW_LANG_C99, file: !343, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !344, globals: !356, splitDebugInlining: false, nameTableKind: None)
!343 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!344 = !{!345, !350}
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !346, line: 65, baseType: !30, size: 32, elements: !347)
!346 = !DIFile(filename: "../../../../../kernel/service/inc/syslog.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!347 = !{!348, !349}
!348 = !DIEnumerator(name: "DEBUG_LOG_ON", value: 0)
!349 = !DIEnumerator(name: "DEBUG_LOG_OFF", value: 1)
!350 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !346, line: 74, baseType: !30, size: 32, elements: !351)
!351 = !{!352, !353, !354, !355}
!352 = !DIEnumerator(name: "PRINT_LEVEL_DEBUG", value: 0)
!353 = !DIEnumerator(name: "PRINT_LEVEL_INFO", value: 1)
!354 = !DIEnumerator(name: "PRINT_LEVEL_WARNING", value: 2)
!355 = !DIEnumerator(name: "PRINT_LEVEL_ERROR", value: 3)
!356 = !{!340}
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !346, line: 95, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 89, size: 160, elements: !359)
!359 = !{!360, !361, !363, !365, !370}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !358, file: !346, line: 90, baseType: !331, size: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !358, file: !346, line: 91, baseType: !362, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_switch_t", file: !346, line: 68, baseType: !345)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !358, file: !346, line: 92, baseType: !364, size: 32, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "print_level_t", file: !346, line: 79, baseType: !350)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !358, file: !346, line: 93, baseType: !366, size: 32, offset: 96)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_print_t", file: !346, line: 82, baseType: !367)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = !DISubroutineType(types: !369)
!369 = !{null, !51, !331, !7, !364, !331, null}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !358, file: !346, line: 94, baseType: !371, size: 32, offset: 128)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_dump_buffer_t", file: !346, line: 83, baseType: !372)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 32)
!373 = !DISubroutineType(types: !374)
!374 = !{null, !51, !331, !7, !364, !375, !7, !331, null}
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !379, file: !380, line: 51, type: !459, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !381, retainedTypes: !428, globals: !458, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!381 = !{!382, !393, !412, !419}
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !383, line: 163, baseType: !7, size: 32, elements: !384)
!383 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!384 = !{!385, !386, !387, !388, !389, !390, !391, !392}
!385 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!386 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!387 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!388 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!389 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!390 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!391 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!392 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!393 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !383, line: 186, baseType: !30, size: 32, elements: !394)
!394 = !{!395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411}
!395 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!396 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!397 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!398 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!399 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!400 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!401 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!402 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!403 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!404 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!405 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!406 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!407 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!408 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!409 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!410 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!411 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!412 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !383, line: 176, baseType: !30, size: 32, elements: !413)
!413 = !{!414, !415, !416, !417, !418}
!414 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!415 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!416 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!417 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!418 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!419 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !420, line: 99, baseType: !30, size: 32, elements: !421)
!420 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!421 = !{!422, !423, !424, !425, !426, !427}
!422 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!423 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!424 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!425 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!426 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!427 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!428 = !{!429, !51}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !431, line: 72, baseType: !432)
!431 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_hw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !431, line: 56, size: 525312, elements: !433)
!433 = !{!434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !448, !449, !453, !457}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !432, file: !431, line: 57, baseType: !60, size: 32)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !432, file: !431, line: 58, baseType: !60, size: 32, offset: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !432, file: !431, line: 59, baseType: !60, size: 32, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !432, file: !431, line: 60, baseType: !60, size: 32, offset: 96)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !432, file: !431, line: 61, baseType: !60, size: 32, offset: 128)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !432, file: !431, line: 62, baseType: !60, size: 32, offset: 160)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !432, file: !431, line: 63, baseType: !60, size: 32, offset: 192)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !432, file: !431, line: 64, baseType: !60, size: 32, offset: 224)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !432, file: !431, line: 65, baseType: !60, size: 32, offset: 256)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !432, file: !431, line: 66, baseType: !60, size: 32, offset: 288)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !432, file: !431, line: 67, baseType: !445, size: 32, offset: 320)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !446)
!446 = !{!447}
!447 = !DISubrange(count: 1)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !432, file: !431, line: 68, baseType: !60, size: 32, offset: 352)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !432, file: !431, line: 69, baseType: !450, size: 523904, offset: 384)
!450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !451)
!451 = !{!452}
!452 = !DISubrange(count: 16372)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !432, file: !431, line: 70, baseType: !454, size: 512, offset: 524288)
!454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !455)
!455 = !{!456}
!456 = !DISubrange(count: 16)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !432, file: !431, line: 71, baseType: !454, size: 512, offset: 524800)
!458 = !{!377}
!459 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !69)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "g_cache_con", scope: !462, file: !463, line: 48, type: !497, isLocal: false, isDefinition: true)
!462 = distinct !DICompileUnit(language: DW_LANG_C99, file: !463, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !464, splitDebugInlining: false, nameTableKind: None)
!463 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!464 = !{!460, !465, !468}
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "g_cache_region_en", scope: !462, file: !463, line: 49, type: !467, isLocal: false, isDefinition: true)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGION_EN_Type", file: !420, line: 66, baseType: !61)
!468 = !DIGlobalVariableExpression(var: !469, expr: !DIExpression())
!469 = distinct !DIGlobalVariable(name: "g_cache_entry", scope: !462, file: !463, line: 50, type: !470, isLocal: false, isDefinition: true)
!470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 1024, elements: !455)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_Type", file: !420, line: 90, baseType: !472)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !420, line: 87, size: 64, elements: !473)
!473 = !{!474, !487}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "cache_entry_n", scope: !472, file: !420, line: 88, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_N_Type", file: !420, line: 77, baseType: !476)
!476 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !420, line: 68, size: 32, elements: !477)
!477 = !{!478, !486}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !476, file: !420, line: 75, baseType: !479, size: 32)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !476, file: !420, line: 69, size: 32, elements: !480)
!480 = !{!481, !482, !483, !484, !485}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !479, file: !420, line: 70, baseType: !61, size: 5, flags: DIFlagBitField, extraData: i64 0)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ATTR", scope: !479, file: !420, line: 71, baseType: !61, size: 3, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !479, file: !420, line: 72, baseType: !61, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !479, file: !420, line: 73, baseType: !61, size: 3, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !479, file: !420, line: 74, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !476, file: !420, line: 76, baseType: !61, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "cache_end_entry_n", scope: !472, file: !420, line: 89, baseType: !488, size: 32, offset: 32)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_END_ENTRY_N_Type", file: !420, line: 85, baseType: !489)
!489 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !420, line: 79, size: 32, elements: !490)
!490 = !{!491, !496}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !489, file: !420, line: 83, baseType: !492, size: 32)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !489, file: !420, line: 80, size: 32, elements: !493)
!493 = !{!494, !495}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !492, file: !420, line: 81, baseType: !61, size: 12, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !492, file: !420, line: 82, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !489, file: !420, line: 84, baseType: !61, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_CON_Type", file: !420, line: 64, baseType: !498)
!498 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !420, line: 51, size: 32, elements: !499)
!499 = !{!500, !512}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !498, file: !420, line: 62, baseType: !501, size: 32)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !498, file: !420, line: 52, size: 32, elements: !502)
!502 = !{!503, !504, !505, !506, !507, !508, !509, !510, !511}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "MCEN", scope: !501, file: !420, line: 53, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "MPEN", scope: !501, file: !420, line: 54, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN0", scope: !501, file: !420, line: 55, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN1", scope: !501, file: !420, line: 56, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "MPDEFEN", scope: !501, file: !420, line: 57, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !501, file: !420, line: 58, baseType: !61, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "MDRF", scope: !501, file: !420, line: 59, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "CACHESIZE", scope: !501, file: !420, line: 60, baseType: !61, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !501, file: !420, line: 61, baseType: !61, size: 22, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !498, file: !420, line: 63, baseType: !61, size: 32)
!513 = !DIGlobalVariableExpression(var: !514, expr: !DIExpression())
!514 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !515, file: !516, line: 53, type: !594, isLocal: false, isDefinition: true)
!515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !516, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !517, retainedTypes: !526, globals: !593, splitDebugInlining: false, nameTableKind: None)
!516 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!517 = !{!518, !91}
!518 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !519, line: 152, baseType: !7, size: 32, elements: !520)
!519 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!520 = !{!521, !522, !523, !524, !525}
!521 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!522 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!523 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!524 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!525 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!526 = !{!339, !51, !61, !527, !529, !560}
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !55, line: 44, baseType: !528)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !57, line: 77, baseType: !7)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !531, line: 378, baseType: !532)
!531 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 363, size: 28704, elements: !533)
!533 = !{!534, !536, !540, !541, !542, !543, !544, !545, !546, !547, !551, !555, !559}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !532, file: !531, line: 365, baseType: !535, size: 256)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !235)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !532, file: !531, line: 366, baseType: !537, size: 768, offset: 256)
!537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !538)
!538 = !{!539}
!539 = !DISubrange(count: 24)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !532, file: !531, line: 367, baseType: !535, size: 256, offset: 1024)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !532, file: !531, line: 368, baseType: !537, size: 768, offset: 1280)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !532, file: !531, line: 369, baseType: !535, size: 256, offset: 2048)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !532, file: !531, line: 370, baseType: !537, size: 768, offset: 2304)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !532, file: !531, line: 371, baseType: !535, size: 256, offset: 3072)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !532, file: !531, line: 372, baseType: !537, size: 768, offset: 3328)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !532, file: !531, line: 373, baseType: !535, size: 256, offset: 4096)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !532, file: !531, line: 374, baseType: !548, size: 1792, offset: 4352)
!548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !549)
!549 = !{!550}
!550 = !DISubrange(count: 56)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !532, file: !531, line: 375, baseType: !552, size: 1920, offset: 6144)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 1920, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 240)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !532, file: !531, line: 376, baseType: !556, size: 20608, offset: 8064)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !557)
!557 = !{!558}
!558 = !DISubrange(count: 644)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !532, file: !531, line: 377, baseType: !60, size: 32, offset: 28672)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !562)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !563)
!563 = !{!564, !566, !567, !568, !569, !570, !571, !573, !574, !575, !576, !577, !578, !579, !580, !582, !583, !584, !586, !590, !592}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !562, file: !531, line: 397, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !562, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !562, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !562, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !562, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !562, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !562, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 96, elements: !215)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !562, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !562, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !562, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !562, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !562, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !562, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !562, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !562, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 64, elements: !333)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !562, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !562, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !562, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 128, elements: !220)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !562, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 160, elements: !588)
!588 = !{!589}
!589 = !DISubrange(count: 5)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !562, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !588)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !562, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!593 = !{!513}
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 6144, elements: !603)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !516, line: 50, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !516, line: 47, size: 64, elements: !597)
!597 = !{!598, !602}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !596, file: !516, line: 48, baseType: !599, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 32)
!600 = !DISubroutineType(types: !601)
!601 = !{null, !339}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !596, file: !516, line: 49, baseType: !61, size: 32, offset: 32)
!603 = !{!604}
!604 = !DISubrange(count: 96)
!605 = !DIGlobalVariableExpression(var: !606, expr: !DIExpression())
!606 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !607, file: !608, line: 61, type: !627, isLocal: true, isDefinition: true)
!607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !608, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !609, retainedTypes: !625, globals: !626, splitDebugInlining: false, nameTableKind: None)
!608 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!609 = !{!20, !610, !617, !28, !621}
!610 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 657, baseType: !30, size: 32, elements: !611)
!611 = !{!612, !613, !614, !615, !616}
!612 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!613 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!614 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!615 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!616 = !DIEnumerator(name: "HAL_GPT_MAX", value: 5)
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 397, baseType: !30, size: 32, elements: !618)
!618 = !{!619, !620}
!619 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!620 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!621 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 380, baseType: !30, size: 32, elements: !622)
!622 = !{!623, !624}
!623 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!624 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!625 = !{!51, !61}
!626 = !{!605}
!627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 640, elements: !588)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_context_t", file: !608, line: 55, baseType: !629)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 51, size: 128, elements: !630)
!630 = !{!631, !633, !643}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !629, file: !608, line: 52, baseType: !632, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !21, line: 400, baseType: !617)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !629, file: !608, line: 53, baseType: !634, size: 64, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_context", file: !608, line: 49, baseType: !635)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !608, line: 46, size: 64, elements: !636)
!636 = !{!637, !642}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !635, file: !608, line: 47, baseType: !638, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !21, line: 371, baseType: !639)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 32)
!640 = !DISubroutineType(types: !641)
!641 = !{null, !51}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !635, file: !608, line: 48, baseType: !51, size: 32, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "has_initlized", scope: !629, file: !608, line: 54, baseType: !69, size: 8, offset: 96)
!644 = !DIGlobalVariableExpression(var: !645, expr: !DIExpression())
!645 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !646, file: !647, line: 80, type: !748, isLocal: true, isDefinition: true)
!646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !648, retainedTypes: !698, globals: !699, splitDebugInlining: false, nameTableKind: None)
!647 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!648 = !{!295, !649, !657, !662, !678, !684, !688, !301, !693}
!649 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 345, baseType: !7, size: 32, elements: !651)
!650 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!651 = !{!652, !653, !654, !655, !656}
!652 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!653 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!654 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!655 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!656 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!657 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 109, baseType: !30, size: 32, elements: !658)
!658 = !{!659, !660, !661}
!659 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!660 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!661 = !DIEnumerator(name: "HAL_UART_MAX", value: 2)
!662 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 302, baseType: !30, size: 32, elements: !663)
!663 = !{!664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677}
!664 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!665 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!666 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!667 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!668 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!669 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!670 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!671 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!672 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!673 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!674 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!675 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!676 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!677 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!678 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 321, baseType: !30, size: 32, elements: !679)
!679 = !{!680, !681, !682, !683}
!680 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!681 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!682 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!683 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!684 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 330, baseType: !30, size: 32, elements: !685)
!685 = !{!686, !687}
!686 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!687 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!688 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 337, baseType: !30, size: 32, elements: !689)
!689 = !{!690, !691, !692}
!690 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!691 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!692 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !650, line: 355, baseType: !7, size: 32, elements: !694)
!694 = !{!695, !696, !697}
!695 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!696 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!697 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!698 = !{!201, !30, !51, !58, !202, !54}
!699 = !{!700, !743, !644, !746, !749}
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "g_uart_context_table", scope: !646, file: !647, line: 77, type: !702, isLocal: true, isDefinition: true)
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !703, size: 1024, elements: !333)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_context_t", file: !647, line: 75, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !647, line: 68, size: 512, elements: !705)
!705 = !{!706, !707, !719, !720, !731, !732}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config_present", scope: !704, file: !647, line: 69, baseType: !69, size: 8)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config", scope: !704, file: !647, line: 70, baseType: !708, size: 128, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !650, line: 378, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 373, size: 128, elements: !710)
!710 = !{!711, !713, !715, !717}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !709, file: !650, line: 374, baseType: !712, size: 32)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !650, line: 317, baseType: !662)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !709, file: !650, line: 375, baseType: !714, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !650, line: 326, baseType: !678)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !709, file: !650, line: 376, baseType: !716, size: 32, offset: 64)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !650, line: 333, baseType: !684)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !709, file: !650, line: 377, baseType: !718, size: 32, offset: 96)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !650, line: 341, baseType: !688)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "callback_present", scope: !704, file: !647, line: 71, baseType: !69, size: 8, offset: 160)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "callback_config", scope: !704, file: !647, line: 72, baseType: !721, size: 64, offset: 192)
!721 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_config_t", file: !647, line: 66, baseType: !722)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !647, line: 63, size: 64, elements: !723)
!723 = !{!724, !730}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !722, file: !647, line: 64, baseType: !725, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !650, line: 410, baseType: !726)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{null, !729, !51}
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !650, line: 359, baseType: !693)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !722, file: !647, line: 65, baseType: !51, size: 32, offset: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config_present", scope: !704, file: !647, line: 73, baseType: !69, size: 8, offset: 256)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config", scope: !704, file: !647, line: 74, baseType: !733, size: 224, offset: 288)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !650, line: 390, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 382, size: 224, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !734, file: !650, line: 383, baseType: !210, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !734, file: !650, line: 384, baseType: !61, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !734, file: !650, line: 385, baseType: !61, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !734, file: !650, line: 386, baseType: !210, size: 32, offset: 96)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !734, file: !650, line: 387, baseType: !61, size: 32, offset: 128)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !734, file: !650, line: 388, baseType: !61, size: 32, offset: 160)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !734, file: !650, line: 389, baseType: !61, size: 32, offset: 192)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !646, file: !647, line: 82, type: !745, isLocal: true, isDefinition: true)
!745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 16, elements: !333)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !646, file: !647, line: 81, type: !748, isLocal: true, isDefinition: true)
!748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 16, elements: !333)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "func_tbl", scope: !751, file: !647, line: 536, type: !758, isLocal: true, isDefinition: true)
!751 = distinct !DISubprogram(name: "hal_uart_map_receive_callback", scope: !647, file: !647, line: 534, type: !752, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !756)
!752 = !DISubroutineType(types: !753)
!753 = !{!754, !755}
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "VOID_FUNC", file: !302, line: 197, baseType: !153)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !29, line: 113, baseType: !657)
!756 = !{!757}
!757 = !DILocalVariable(name: "uart_port", arg: 1, scope: !751, file: !647, line: 534, type: !755)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !759, size: 64, elements: !333)
!759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "DWT_NUMCOMP", scope: !762, file: !763, line: 44, type: !7, isLocal: true, isDefinition: true)
!762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !763, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !764, retainedTypes: !773, globals: !809, splitDebugInlining: false, nameTableKind: None)
!763 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_dwt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!764 = !{!765}
!765 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !766, line: 42, baseType: !30, size: 32, elements: !767)
!766 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_dwt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!767 = !{!768, !769, !770, !771, !772}
!768 = !DIEnumerator(name: "COMP_DISABLE", value: 0)
!769 = !DIEnumerator(name: "WDE_INST", value: 4)
!770 = !DIEnumerator(name: "WDE_DATA_RO", value: 5)
!771 = !DIEnumerator(name: "WDE_DATA_WO", value: 6)
!772 = !DIEnumerator(name: "WDE_DATA_RW", value: 7)
!773 = !{!774, !801}
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !531, line: 826, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 801, size: 736, elements: !777)
!777 = !{!778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !776, file: !531, line: 803, baseType: !60, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !776, file: !531, line: 804, baseType: !60, size: 32, offset: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !776, file: !531, line: 805, baseType: !60, size: 32, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !776, file: !531, line: 806, baseType: !60, size: 32, offset: 96)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !776, file: !531, line: 807, baseType: !60, size: 32, offset: 128)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !776, file: !531, line: 808, baseType: !60, size: 32, offset: 160)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !776, file: !531, line: 809, baseType: !60, size: 32, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !776, file: !531, line: 810, baseType: !565, size: 32, offset: 224)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !776, file: !531, line: 811, baseType: !60, size: 32, offset: 256)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !776, file: !531, line: 812, baseType: !60, size: 32, offset: 288)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !776, file: !531, line: 813, baseType: !60, size: 32, offset: 320)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !776, file: !531, line: 814, baseType: !445, size: 32, offset: 352)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !776, file: !531, line: 815, baseType: !60, size: 32, offset: 384)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !776, file: !531, line: 816, baseType: !60, size: 32, offset: 416)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !776, file: !531, line: 817, baseType: !60, size: 32, offset: 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !776, file: !531, line: 818, baseType: !445, size: 32, offset: 480)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !776, file: !531, line: 819, baseType: !60, size: 32, offset: 512)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !776, file: !531, line: 820, baseType: !60, size: 32, offset: 544)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !776, file: !531, line: 821, baseType: !60, size: 32, offset: 576)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !776, file: !531, line: 822, baseType: !445, size: 32, offset: 608)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !776, file: !531, line: 823, baseType: !60, size: 32, offset: 640)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !776, file: !531, line: 824, baseType: !60, size: 32, offset: 672)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !776, file: !531, line: 825, baseType: !60, size: 32, offset: 704)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "CoreDebug_Type", file: !531, line: 1304, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 1298, size: 128, elements: !804)
!804 = !{!805, !806, !807, !808}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "DHCSR", scope: !803, file: !531, line: 1300, baseType: !60, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "DCRSR", scope: !803, file: !531, line: 1301, baseType: !60, size: 32, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "DCRDR", scope: !803, file: !531, line: 1302, baseType: !60, size: 32, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "DEMCR", scope: !803, file: !531, line: 1303, baseType: !60, size: 32, offset: 96)
!809 = !{!760}
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_default", scope: !812, file: !813, line: 164, type: !214, isLocal: false, isDefinition: true)
!812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !813, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !814, globals: !829, splitDebugInlining: false, nameTableKind: None)
!813 = !DIFile(filename: "../../../../../driver/board/mt76x7_hdk/external_flash/src/bsp_flash_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!814 = !{!815, !51}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !817)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "flash_info_t", file: !818, line: 48, baseType: !819)
!818 = !DIFile(filename: "../../../../../driver/board/mt76x7_hdk/external_flash/inc/bsp_flash_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !818, line: 38, size: 192, elements: !820)
!820 = !{!821, !822, !823, !824, !825, !826, !827, !828}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !819, file: !818, line: 39, baseType: !201, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !819, file: !818, line: 40, baseType: !58, size: 8, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !819, file: !818, line: 41, baseType: !195, size: 32, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !819, file: !818, line: 42, baseType: !195, size: 32, offset: 96)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !819, file: !818, line: 43, baseType: !30, size: 32, offset: 128)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !819, file: !818, line: 45, baseType: !58, size: 8, offset: 160)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !819, file: !818, line: 46, baseType: !58, size: 8, offset: 168)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !819, file: !818, line: 47, baseType: !58, size: 8, offset: 176)
!829 = !{!810, !830, !832, !834}
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_default", scope: !812, file: !813, line: 167, type: !219, isLocal: false, isDefinition: true)
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_default", scope: !812, file: !813, line: 170, type: !224, isLocal: false, isDefinition: true)
!834 = !DIGlobalVariableExpression(var: !835, expr: !DIExpression())
!835 = distinct !DIGlobalVariable(name: "customer_flash_info", scope: !812, file: !813, line: 174, type: !816, isLocal: false, isDefinition: true)
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "log_control_block_freertos", scope: !838, file: !839, line: 59, type: !858, isLocal: false, isDefinition: true)
!838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !840, retainedTypes: !854, globals: !857, splitDebugInlining: false, nameTableKind: None)
!839 = !DIFile(filename: "../../../../../project/mt7687_hdk/templates/freertos_create_thread/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!840 = !{!345, !350, !841}
!841 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !842, line: 40, baseType: !30, size: 32, elements: !843)
!842 = !DIFile(filename: "../inc/task_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!843 = !{!844, !845, !846, !847, !848, !849, !850, !851, !852, !853}
!844 = !DIEnumerator(name: "TASK_PRIORITY_IDLE", value: 0)
!845 = !DIEnumerator(name: "TASK_PRIORITY_SYSLOG", value: 1)
!846 = !DIEnumerator(name: "TASK_PRIORITY_LOW", value: 2)
!847 = !DIEnumerator(name: "TASK_PRIORITY_BELOW_NORMAL", value: 3)
!848 = !DIEnumerator(name: "TASK_PRIORITY_NORMAL", value: 4)
!849 = !DIEnumerator(name: "TASK_PRIORITY_ABOVE_NORMAL", value: 5)
!850 = !DIEnumerator(name: "TASK_PRIORITY_HIGH", value: 6)
!851 = !DIEnumerator(name: "TASK_PRIORITY_SOFT_REALTIME", value: 7)
!852 = !DIEnumerator(name: "TASK_PRIORITY_HARD_REALTIME", value: 8)
!853 = !DIEnumerator(name: "TASK_PRIORITY_TIMER", value: 19)
!854 = !{!51, !7, !855}
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "TickType_t", file: !856, line: 105, baseType: !61)
!856 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!857 = !{!836}
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !346, line: 95, baseType: !859)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 89, size: 160, elements: !860)
!860 = !{!861, !862, !863, !864, !865}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !859, file: !346, line: 90, baseType: !331, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !859, file: !346, line: 91, baseType: !362, size: 32, offset: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !859, file: !346, line: 92, baseType: !364, size: 32, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !859, file: !346, line: 93, baseType: !366, size: 32, offset: 96)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !859, file: !346, line: 94, baseType: !371, size: 32, offset: 128)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !868, file: !869, line: 61, type: !60, isLocal: true, isDefinition: true)
!868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !870, globals: !923, splitDebugInlining: false, nameTableKind: None)
!869 = !DIFile(filename: "../../../../../project/mt7687_hdk/templates/freertos_create_thread/src/system_mt7687.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!870 = !{!871, !879, !904}
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !531, line: 656, baseType: !873)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 650, size: 128, elements: !874)
!874 = !{!875, !876, !877, !878}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !873, file: !531, line: 652, baseType: !60, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !873, file: !531, line: 653, baseType: !60, size: 32, offset: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !873, file: !531, line: 654, baseType: !60, size: 32, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !873, file: !531, line: 655, baseType: !565, size: 32, offset: 96)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !881)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !882)
!882 = !{!883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !881, file: !531, line: 397, baseType: !565, size: 32)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !881, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !881, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !881, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !881, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !881, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !881, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !881, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !881, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !881, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !881, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !881, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !881, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !881, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !881, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !881, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !881, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !881, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !881, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !881, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !881, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !431, line: 72, baseType: !906)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !431, line: 56, size: 525312, elements: !907)
!907 = !{!908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !906, file: !431, line: 57, baseType: !60, size: 32)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !906, file: !431, line: 58, baseType: !60, size: 32, offset: 32)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !906, file: !431, line: 59, baseType: !60, size: 32, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !906, file: !431, line: 60, baseType: !60, size: 32, offset: 96)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !906, file: !431, line: 61, baseType: !60, size: 32, offset: 128)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !906, file: !431, line: 62, baseType: !60, size: 32, offset: 160)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !906, file: !431, line: 63, baseType: !60, size: 32, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !906, file: !431, line: 64, baseType: !60, size: 32, offset: 224)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !906, file: !431, line: 65, baseType: !60, size: 32, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !906, file: !431, line: 66, baseType: !60, size: 32, offset: 288)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !906, file: !431, line: 67, baseType: !445, size: 32, offset: 320)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !906, file: !431, line: 68, baseType: !60, size: 32, offset: 352)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !906, file: !431, line: 69, baseType: !450, size: 523904, offset: 384)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !906, file: !431, line: 70, baseType: !454, size: 512, offset: 524288)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !906, file: !431, line: 71, baseType: !454, size: 512, offset: 524800)
!923 = !{!924, !866}
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !868, file: !869, line: 59, type: !61, isLocal: false, isDefinition: true)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "heap_end", scope: !928, file: !929, line: 101, type: !201, isLocal: true, isDefinition: true)
!928 = distinct !DISubprogram(name: "_sbrk_r", scope: !929, file: !929, line: 98, type: !930, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !1123)
!929 = !DIFile(filename: "../../../../../project/mt7687_hdk/templates/freertos_create_thread/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!930 = !DISubroutineType(types: !931)
!931 = !{!932, !934, !1118}
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !933, line: 123, baseType: !201)
!933 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !936, line: 377, size: 1920, elements: !937)
!936 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!937 = !{!938, !939, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1017, !1037, !1041, !1042, !1043, !1044, !1054, !1067, !1068, !1073, !1092, !1093, !1100, !1101, !1117}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !935, file: !936, line: 381, baseType: !7, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !935, file: !936, line: 386, baseType: !940, size: 32, offset: 32)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !936, line: 292, baseType: !942)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !936, line: 186, size: 832, elements: !943)
!943 = !{!944, !945, !946, !947, !949, !950, !955, !956, !957, !958, !962, !966, !972, !976, !977, !978, !979, !983, !985, !986, !987, !989, !995, !1007}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !942, file: !936, line: 187, baseType: !177, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !942, file: !936, line: 188, baseType: !7, size: 32, offset: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !942, file: !936, line: 189, baseType: !7, size: 32, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !942, file: !936, line: 190, baseType: !948, size: 16, offset: 96)
!948 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !942, file: !936, line: 191, baseType: !948, size: 16, offset: 112)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !942, file: !936, line: 192, baseType: !951, size: 64, offset: 128)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !936, line: 122, size: 64, elements: !952)
!952 = !{!953, !954}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !951, file: !936, line: 123, baseType: !177, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !951, file: !936, line: 124, baseType: !7, size: 32, offset: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !942, file: !936, line: 193, baseType: !7, size: 32, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !942, file: !936, line: 196, baseType: !934, size: 32, offset: 224)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !942, file: !936, line: 200, baseType: !51, size: 32, offset: 256)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !942, file: !936, line: 202, baseType: !959, size: 32, offset: 288)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{!7, !934, !51, !201, !7}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !942, file: !936, line: 204, baseType: !963, size: 32, offset: 320)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!964 = !DISubroutineType(types: !965)
!965 = !{!7, !934, !51, !331, !7}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !942, file: !936, line: 207, baseType: !967, size: 32, offset: 352)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DISubroutineType(types: !969)
!969 = !{!970, !934, !51, !970, !7}
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !971, line: 116, baseType: !174)
!971 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!972 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !942, file: !936, line: 208, baseType: !973, size: 32, offset: 384)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!7, !934, !51}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !942, file: !936, line: 211, baseType: !951, size: 64, offset: 416)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !942, file: !936, line: 212, baseType: !177, size: 32, offset: 480)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !942, file: !936, line: 213, baseType: !7, size: 32, offset: 512)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !942, file: !936, line: 216, baseType: !980, size: 24, offset: 544)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 24, elements: !981)
!981 = !{!982}
!982 = !DISubrange(count: 3)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !942, file: !936, line: 217, baseType: !984, size: 8, offset: 568)
!984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 8, elements: !446)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !942, file: !936, line: 220, baseType: !951, size: 64, offset: 576)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !942, file: !936, line: 223, baseType: !7, size: 32, offset: 640)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !942, file: !936, line: 224, baseType: !988, size: 32, offset: 672)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !971, line: 46, baseType: !174)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !942, file: !936, line: 231, baseType: !990, size: 32, offset: 704)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !936, line: 35, baseType: !991)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !992, line: 34, baseType: !993)
!992 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !992, line: 33, flags: DIFlagFwdDecl)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !942, file: !936, line: 233, baseType: !996, size: 64, offset: 736)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !971, line: 170, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !971, line: 162, size: 64, elements: !998)
!998 = !{!999, !1000}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !997, file: !971, line: 164, baseType: !7, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !997, file: !971, line: 169, baseType: !1001, size: 32, offset: 32)
!1001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !997, file: !971, line: 165, size: 32, elements: !1002)
!1002 = !{!1003, !1006}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1001, file: !971, line: 167, baseType: !1004, size: 32)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !1005, line: 116, baseType: !7)
!1005 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1001, file: !971, line: 168, baseType: !229, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !942, file: !936, line: 234, baseType: !7, size: 32, offset: 800)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !935, file: !936, line: 386, baseType: !940, size: 32, offset: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !935, file: !936, line: 386, baseType: !940, size: 32, offset: 96)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !935, file: !936, line: 388, baseType: !7, size: 32, offset: 128)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !935, file: !936, line: 390, baseType: !201, size: 32, offset: 160)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !935, file: !936, line: 392, baseType: !7, size: 32, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !935, file: !936, line: 394, baseType: !7, size: 32, offset: 224)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !935, file: !936, line: 395, baseType: !1015, size: 32, offset: 256)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !936, line: 45, flags: DIFlagFwdDecl)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !935, file: !936, line: 397, baseType: !1018, size: 32, offset: 288)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 32)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !936, line: 349, size: 128, elements: !1020)
!1020 = !{!1021, !1033, !1034, !1035}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !1019, file: !936, line: 352, baseType: !1022, size: 32)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !936, line: 52, size: 192, elements: !1024)
!1024 = !{!1025, !1026, !1027, !1028, !1029, !1030}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1023, file: !936, line: 54, baseType: !1022, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !1023, file: !936, line: 55, baseType: !7, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !1023, file: !936, line: 55, baseType: !7, size: 32, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !1023, file: !936, line: 55, baseType: !7, size: 32, offset: 96)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !1023, file: !936, line: 55, baseType: !7, size: 32, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !1023, file: !936, line: 56, baseType: !1031, size: 32, offset: 160)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 32, elements: !446)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !936, line: 22, baseType: !195)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !1019, file: !936, line: 353, baseType: !7, size: 32, offset: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !1019, file: !936, line: 354, baseType: !1022, size: 32, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !1019, file: !936, line: 355, baseType: !1036, size: 32, offset: 96)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !935, file: !936, line: 399, baseType: !1038, size: 32, offset: 320)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 32)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{null, !934}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !935, file: !936, line: 401, baseType: !7, size: 32, offset: 352)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !935, file: !936, line: 404, baseType: !7, size: 32, offset: 384)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !935, file: !936, line: 405, baseType: !201, size: 32, offset: 416)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !935, file: !936, line: 407, baseType: !1045, size: 32, offset: 448)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !936, line: 324, size: 192, elements: !1047)
!1047 = !{!1048, !1050, !1051, !1052}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !1046, file: !936, line: 325, baseType: !1049, size: 48)
!1049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 48, elements: !981)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !1046, file: !936, line: 326, baseType: !1049, size: 48, offset: 48)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !1046, file: !936, line: 327, baseType: !322, size: 16, offset: 96)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !1046, file: !936, line: 330, baseType: !1053, size: 64, offset: 128)
!1053 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !935, file: !936, line: 408, baseType: !1055, size: 32, offset: 480)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !936, line: 60, size: 288, elements: !1057)
!1057 = !{!1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !1056, file: !936, line: 62, baseType: !7, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !1056, file: !936, line: 63, baseType: !7, size: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !1056, file: !936, line: 64, baseType: !7, size: 32, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !1056, file: !936, line: 65, baseType: !7, size: 32, offset: 96)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !1056, file: !936, line: 66, baseType: !7, size: 32, offset: 128)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !1056, file: !936, line: 67, baseType: !7, size: 32, offset: 160)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !1056, file: !936, line: 68, baseType: !7, size: 32, offset: 192)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !1056, file: !936, line: 69, baseType: !7, size: 32, offset: 224)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !1056, file: !936, line: 70, baseType: !7, size: 32, offset: 256)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !935, file: !936, line: 409, baseType: !201, size: 32, offset: 512)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !935, file: !936, line: 412, baseType: !1069, size: 32, offset: 544)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{null, !7}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !935, file: !936, line: 416, baseType: !1074, size: 32, offset: 576)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !936, line: 90, size: 1120, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1083}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1075, file: !936, line: 91, baseType: !1074, size: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !1075, file: !936, line: 92, baseType: !7, size: 32, offset: 32)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !1075, file: !936, line: 93, baseType: !1080, size: 1024, offset: 64)
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 1024, elements: !1081)
!1081 = !{!1082}
!1082 = !DISubrange(count: 32)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !1075, file: !936, line: 94, baseType: !1084, size: 32, offset: 1088)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !936, line: 79, size: 2112, elements: !1086)
!1086 = !{!1087, !1089, !1090, !1091}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !1085, file: !936, line: 80, baseType: !1088, size: 1024)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !51, size: 1024, elements: !1081)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !1085, file: !936, line: 81, baseType: !1088, size: 1024, offset: 1024)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !1085, file: !936, line: 83, baseType: !1032, size: 32, offset: 2048)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !1085, file: !936, line: 86, baseType: !1032, size: 32, offset: 2080)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !935, file: !936, line: 417, baseType: !1075, size: 1120, offset: 608)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !935, file: !936, line: 420, baseType: !1094, size: 96, offset: 1728)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !936, line: 296, size: 96, elements: !1095)
!1095 = !{!1096, !1098, !1099}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1094, file: !936, line: 298, baseType: !1097, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !1094, file: !936, line: 299, baseType: !7, size: 32, offset: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !1094, file: !936, line: 300, baseType: !940, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !935, file: !936, line: 421, baseType: !940, size: 32, offset: 1824)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !935, file: !936, line: 422, baseType: !1102, size: 32, offset: 1856)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !936, line: 359, size: 640, elements: !1104)
!1104 = !{!1105, !1106, !1107, !1108, !1109, !1111, !1112, !1113, !1114, !1115, !1116}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !1103, file: !936, line: 362, baseType: !201, size: 32)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !1103, file: !936, line: 363, baseType: !996, size: 64, offset: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !1103, file: !936, line: 364, baseType: !996, size: 64, offset: 96)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !1103, file: !936, line: 365, baseType: !996, size: 64, offset: 160)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !1103, file: !936, line: 366, baseType: !1110, size: 64, offset: 224)
!1110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 64, elements: !235)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !1103, file: !936, line: 367, baseType: !7, size: 32, offset: 288)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !1103, file: !936, line: 368, baseType: !996, size: 64, offset: 320)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !1103, file: !936, line: 369, baseType: !996, size: 64, offset: 384)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !1103, file: !936, line: 370, baseType: !996, size: 64, offset: 448)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !1103, file: !936, line: 371, baseType: !996, size: 64, offset: 512)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !1103, file: !936, line: 372, baseType: !996, size: 64, offset: 576)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !935, file: !936, line: 423, baseType: !201, size: 32, offset: 1888)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1005, line: 46, baseType: !30)
!1119 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1120, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1121, globals: !1122, splitDebugInlining: false, nameTableKind: None)
!1120 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1121 = !{!201, !932}
!1122 = !{!926}
!1123 = !{!1124, !1125, !1126, !1127}
!1124 = !DILocalVariable(name: "r", arg: 1, scope: !928, file: !929, line: 98, type: !934)
!1125 = !DILocalVariable(name: "nbytes", arg: 2, scope: !928, file: !929, line: 98, type: !1118)
!1126 = !DILocalVariable(name: "prev_heap_end", scope: !928, file: !929, line: 102, type: !201)
!1127 = !DILocalVariable(name: "stack", scope: !928, file: !929, line: 103, type: !201)
!1128 = !DIGlobalVariableExpression(var: !1129, expr: !DIExpression())
!1129 = distinct !DIGlobalVariable(name: "pxCurrentTCB", scope: !1130, file: !1131, line: 208, type: !1271, isLocal: false, isDefinition: true)
!1130 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1131, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1132, retainedTypes: !1153, globals: !1212, splitDebugInlining: false, nameTableKind: None)
!1131 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/tasks.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1132 = !{!1133, !1138, !1146}
!1133 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1131, line: 122, baseType: !30, size: 32, elements: !1134)
!1134 = !{!1135, !1136, !1137}
!1135 = !DIEnumerator(name: "eNotWaitingNotification", value: 0)
!1136 = !DIEnumerator(name: "eWaitingNotification", value: 1)
!1137 = !DIEnumerator(name: "eNotified", value: 2)
!1138 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1139, line: 112, baseType: !30, size: 32, elements: !1140)
!1139 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/task.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1140 = !{!1141, !1142, !1143, !1144, !1145}
!1141 = !DIEnumerator(name: "eRunning", value: 0)
!1142 = !DIEnumerator(name: "eReady", value: 1)
!1143 = !DIEnumerator(name: "eBlocked", value: 2)
!1144 = !DIEnumerator(name: "eSuspended", value: 3)
!1145 = !DIEnumerator(name: "eDeleted", value: 4)
!1146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1139, line: 122, baseType: !30, size: 32, elements: !1147)
!1147 = !{!1148, !1149, !1150, !1151, !1152}
!1148 = !DIEnumerator(name: "eNoAction", value: 0)
!1149 = !DIEnumerator(name: "eSetBits", value: 1)
!1150 = !DIEnumerator(name: "eIncrement", value: 2)
!1151 = !DIEnumerator(name: "eSetValueWithOverwrite", value: 3)
!1152 = !DIEnumerator(name: "eSetValueWithoutOverwrite", value: 4)
!1153 = !{!1154, !51, !1155, !1157, !61, !1159, !1160, !59, !1161, !855, !322, !1195, !210, !30, !1209, !7, !331, !54}
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "UBaseType_t", file: !856, line: 99, baseType: !195)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !55, line: 36, baseType: !1156)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !57, line: 57, baseType: !322)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "StackType_t", file: !856, line: 97, baseType: !61)
!1159 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskHandle_t", file: !1139, line: 103, baseType: !51)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "BaseType_t", file: !856, line: 98, baseType: !174)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCB_t", file: !1131, line: 195, baseType: !1163)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "tskTCB", file: !1131, line: 191, baseType: !1164)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tskTaskControlBlock", file: !1131, line: 134, size: 672, elements: !1165)
!1165 = !{!1166, !1169, !1180, !1181, !1182, !1183, !1187, !1188, !1189, !1190, !1191, !1192}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "pxTopOfStack", scope: !1164, file: !1131, line: 136, baseType: !1167, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1158)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "xGenericListItem", scope: !1164, file: !1131, line: 143, baseType: !1170, size: 160, offset: 32)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !1171, line: 191, baseType: !1172)
!1171 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/list.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !1171, line: 181, size: 160, elements: !1173)
!1173 = !{!1174, !1175, !1177, !1178, !1179}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1172, file: !1171, line: 184, baseType: !855, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1172, file: !1171, line: 185, baseType: !1176, size: 32, offset: 32)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1172, file: !1171, line: 186, baseType: !1176, size: 32, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1172, file: !1171, line: 187, baseType: !51, size: 32, offset: 96)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1172, file: !1171, line: 188, baseType: !51, size: 32, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "xEventListItem", scope: !1164, file: !1131, line: 144, baseType: !1170, size: 160, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "uxPriority", scope: !1164, file: !1131, line: 145, baseType: !1154, size: 32, offset: 352)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "pxStack", scope: !1164, file: !1131, line: 146, baseType: !1157, size: 32, offset: 384)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !1164, file: !1131, line: 147, baseType: !1184, size: 48, offset: 416)
!1184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 48, elements: !1185)
!1185 = !{!1186}
!1186 = !DISubrange(count: 6)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "uxTCBNumber", scope: !1164, file: !1131, line: 158, baseType: !1154, size: 32, offset: 480)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "uxTaskNumber", scope: !1164, file: !1131, line: 159, baseType: !1154, size: 32, offset: 512)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !1164, file: !1131, line: 163, baseType: !1154, size: 32, offset: 544)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "uxMutexesHeld", scope: !1164, file: !1131, line: 164, baseType: !1154, size: 32, offset: 576)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ulNotifiedValue", scope: !1164, file: !1131, line: 187, baseType: !60, size: 32, offset: 608)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "eNotifyState", scope: !1164, file: !1131, line: 188, baseType: !1193, size: 32, offset: 640)
!1193 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1194)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyValue", file: !1131, line: 127, baseType: !1133)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !1171, line: 212, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !1171, line: 205, size: 160, elements: !1198)
!1198 = !{!1199, !1200, !1202}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1197, file: !1171, line: 208, baseType: !1154, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1197, file: !1171, line: 209, baseType: !1201, size: 32, offset: 32)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1197, file: !1171, line: 210, baseType: !1203, size: 96, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !1171, line: 200, baseType: !1204)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !1171, line: 193, size: 96, elements: !1205)
!1205 = !{!1206, !1207, !1208}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1204, file: !1171, line: 196, baseType: !855, size: 32)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1204, file: !1171, line: 197, baseType: !1176, size: 32, offset: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1204, file: !1171, line: 198, baseType: !1176, size: 32, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1210, line: 40, baseType: !1211)
!1210 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration")
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !971, line: 131, baseType: !30)
!1212 = !{!1128, !1213, !1228, !1231, !1234, !1236, !1238, !1240, !1242, !1245, !1248, !1250, !1252, !1254, !1256, !1259, !1261, !1263, !1265, !1267, !1269}
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "ucExpectedStackBytes", scope: !1215, file: !1131, line: 2240, type: !1224, isLocal: true, isDefinition: true)
!1215 = distinct !DISubprogram(name: "vTaskSwitchContext", scope: !1131, file: !1131, line: 2198, type: !154, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !1216)
!1216 = !{!1217, !1221}
!1217 = !DILocalVariable(name: "uxTopPriority", scope: !1218, file: !1131, line: 2244, type: !1154)
!1218 = distinct !DILexicalBlock(scope: !1219, file: !1131, line: 2244, column: 3)
!1219 = distinct !DILexicalBlock(scope: !1220, file: !1131, line: 2207, column: 2)
!1220 = distinct !DILexicalBlock(scope: !1215, file: !1131, line: 2200, column: 6)
!1221 = !DILocalVariable(name: "pxConstList", scope: !1222, file: !1131, line: 2244, type: !1223)
!1222 = distinct !DILexicalBlock(scope: !1218, file: !1131, line: 2244, column: 3)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1195)
!1224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1225, size: 160, elements: !1226)
!1225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !54)
!1226 = !{!1227}
!1227 = !DISubrange(count: 20)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "pxReadyTasksLists", scope: !1130, file: !1131, line: 211, type: !1230, isLocal: true, isDefinition: true)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1196, size: 3200, elements: !1226)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "pxDelayedTaskList", scope: !1130, file: !1131, line: 214, type: !1233, isLocal: true, isDefinition: true)
!1233 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1195)
!1234 = !DIGlobalVariableExpression(var: !1235, expr: !DIExpression())
!1235 = distinct !DIGlobalVariable(name: "pxOverflowDelayedTaskList", scope: !1130, file: !1131, line: 215, type: !1233, isLocal: true, isDefinition: true)
!1236 = !DIGlobalVariableExpression(var: !1237, expr: !DIExpression())
!1237 = distinct !DIGlobalVariable(name: "xPendingReadyList", scope: !1130, file: !1131, line: 216, type: !1196, isLocal: true, isDefinition: true)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "xTasksWaitingTermination", scope: !1130, file: !1131, line: 220, type: !1196, isLocal: true, isDefinition: true)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "xSuspendedTaskList", scope: !1130, file: !1131, line: 227, type: !1196, isLocal: true, isDefinition: true)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "uxCurrentNumberOfTasks", scope: !1130, file: !1131, line: 238, type: !1244, isLocal: true, isDefinition: true)
!1244 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1154)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "xSchedulerRunning", scope: !1130, file: !1131, line: 241, type: !1247, isLocal: true, isDefinition: true)
!1247 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1160)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "uxTaskNumber", scope: !1130, file: !1131, line: 245, type: !1154, isLocal: true, isDefinition: true)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "uxTopReadyPriority", scope: !1130, file: !1131, line: 240, type: !1244, isLocal: true, isDefinition: true)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "uxTasksDeleted", scope: !1130, file: !1131, line: 221, type: !1244, isLocal: true, isDefinition: true)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "uxSchedulerSuspended", scope: !1130, file: !1131, line: 256, type: !1244, isLocal: true, isDefinition: true)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "xTickCount", scope: !1130, file: !1131, line: 239, type: !1258, isLocal: true, isDefinition: true)
!1258 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !855)
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(name: "xYieldPending", scope: !1130, file: !1131, line: 243, type: !1247, isLocal: true, isDefinition: true)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "uxPendedTicks", scope: !1130, file: !1131, line: 242, type: !1244, isLocal: true, isDefinition: true)
!1263 = !DIGlobalVariableExpression(var: !1264, expr: !DIExpression())
!1264 = distinct !DIGlobalVariable(name: "xNumOfOverflows", scope: !1130, file: !1131, line: 244, type: !1247, isLocal: true, isDefinition: true)
!1265 = !DIGlobalVariableExpression(var: !1266, expr: !DIExpression())
!1266 = distinct !DIGlobalVariable(name: "xNextTaskUnblockTime", scope: !1130, file: !1131, line: 246, type: !1258, isLocal: true, isDefinition: true)
!1267 = !DIGlobalVariableExpression(var: !1268, expr: !DIExpression())
!1268 = distinct !DIGlobalVariable(name: "xDelayedTaskList1", scope: !1130, file: !1131, line: 212, type: !1196, isLocal: true, isDefinition: true)
!1269 = !DIGlobalVariableExpression(var: !1270, expr: !DIExpression())
!1270 = distinct !DIGlobalVariable(name: "xDelayedTaskList2", scope: !1130, file: !1131, line: 213, type: !1196, isLocal: true, isDefinition: true)
!1271 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1161)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "xQueueRegistry", scope: !1274, file: !1275, line: 192, type: !1326, isLocal: false, isDefinition: true)
!1274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1275, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1276, globals: !1325, splitDebugInlining: false, nameTableKind: None)
!1275 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/queue.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1276 = !{!1277, !1154, !1160, !59, !51, !1209, !1283, !855, !54}
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "Queue_t", file: !1275, line: 165, baseType: !1279)
!1279 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQUEUE", file: !1275, line: 161, baseType: !1280)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QueueDefinition", file: !1275, line: 130, size: 672, elements: !1281)
!1281 = !{!1282, !1287, !1288, !1289, !1294, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "pcHead", scope: !1280, file: !1275, line: 132, baseType: !1283, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !55, line: 20, baseType: !1285)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !57, line: 41, baseType: !1286)
!1286 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "pcTail", scope: !1280, file: !1275, line: 133, baseType: !1283, size: 32, offset: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "pcWriteTo", scope: !1280, file: !1275, line: 134, baseType: !1283, size: 32, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1280, file: !1275, line: 140, baseType: !1290, size: 32, offset: 96)
!1290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1280, file: !1275, line: 136, size: 32, elements: !1291)
!1291 = !{!1292, !1293}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "pcReadFrom", scope: !1290, file: !1275, line: 138, baseType: !1283, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "uxRecursiveCallCount", scope: !1290, file: !1275, line: 139, baseType: !1154, size: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToSend", scope: !1280, file: !1275, line: 142, baseType: !1295, size: 160, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !1171, line: 212, baseType: !1296)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !1171, line: 205, size: 160, elements: !1297)
!1297 = !{!1298, !1299, !1310}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1296, file: !1171, line: 208, baseType: !1154, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1296, file: !1171, line: 209, baseType: !1300, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !1171, line: 191, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !1171, line: 181, size: 160, elements: !1303)
!1303 = !{!1304, !1305, !1307, !1308, !1309}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1302, file: !1171, line: 184, baseType: !855, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1302, file: !1171, line: 185, baseType: !1306, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1302, file: !1171, line: 186, baseType: !1306, size: 32, offset: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1302, file: !1171, line: 187, baseType: !51, size: 32, offset: 96)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1302, file: !1171, line: 188, baseType: !51, size: 32, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1296, file: !1171, line: 210, baseType: !1311, size: 96, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !1171, line: 200, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !1171, line: 193, size: 96, elements: !1313)
!1313 = !{!1314, !1315, !1316}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1312, file: !1171, line: 196, baseType: !855, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1312, file: !1171, line: 197, baseType: !1306, size: 32, offset: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1312, file: !1171, line: 198, baseType: !1306, size: 32, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToReceive", scope: !1280, file: !1275, line: 143, baseType: !1295, size: 160, offset: 288)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "uxMessagesWaiting", scope: !1280, file: !1275, line: 145, baseType: !1244, size: 32, offset: 448)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "uxLength", scope: !1280, file: !1275, line: 146, baseType: !1154, size: 32, offset: 480)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "uxItemSize", scope: !1280, file: !1275, line: 147, baseType: !1154, size: 32, offset: 512)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "xRxLock", scope: !1280, file: !1275, line: 149, baseType: !1247, size: 32, offset: 544)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "xTxLock", scope: !1280, file: !1275, line: 150, baseType: !1247, size: 32, offset: 576)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "uxQueueNumber", scope: !1280, file: !1275, line: 153, baseType: !1154, size: 32, offset: 608)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ucQueueType", scope: !1280, file: !1275, line: 154, baseType: !54, size: 8, offset: 640)
!1325 = !{!1272}
!1326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1327, size: 512, elements: !235)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueRegistryItem_t", file: !1275, line: 187, baseType: !1328)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQueueRegistryItem", file: !1275, line: 182, baseType: !1329)
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QUEUE_REGISTRY_ITEM", file: !1275, line: 178, size: 64, elements: !1330)
!1330 = !{!1331, !1332}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "pcQueueName", scope: !1329, file: !1275, line: 180, baseType: !331, size: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !1329, file: !1275, line: 181, baseType: !1333, size: 32, offset: 32)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueHandle_t", file: !1334, line: 88, baseType: !51)
!1334 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/queue.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "xTimerQueue", scope: !1337, file: !1338, line: 169, type: !1333, isLocal: true, isDefinition: true)
!1337 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1338, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1339, globals: !1367, splitDebugInlining: false, nameTableKind: None)
!1338 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/timers.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1339 = !{!1160, !51, !1155, !322, !1154, !855, !1340, !1365, !59, !54}
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer_t", file: !1338, line: 119, baseType: !1342)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "xTIMER", file: !1338, line: 115, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerControl", file: !1338, line: 104, size: 352, elements: !1344)
!1344 = !{!1345, !1346, !1356, !1357, !1358, !1359, !1366}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "pcTimerName", scope: !1343, file: !1338, line: 106, baseType: !331, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerListItem", scope: !1343, file: !1338, line: 107, baseType: !1347, size: 160, offset: 32)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !1171, line: 191, baseType: !1348)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !1171, line: 181, size: 160, elements: !1349)
!1349 = !{!1350, !1351, !1353, !1354, !1355}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1348, file: !1171, line: 184, baseType: !855, size: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1348, file: !1171, line: 185, baseType: !1352, size: 32, offset: 32)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1348, file: !1171, line: 186, baseType: !1352, size: 32, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1348, file: !1171, line: 187, baseType: !51, size: 32, offset: 96)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1348, file: !1171, line: 188, baseType: !51, size: 32, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerPeriodInTicks", scope: !1343, file: !1338, line: 108, baseType: !855, size: 32, offset: 192)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "uxAutoReload", scope: !1343, file: !1338, line: 109, baseType: !1154, size: 32, offset: 224)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pvTimerID", scope: !1343, file: !1338, line: 110, baseType: !51, size: 32, offset: 256)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "pxCallbackFunction", scope: !1343, file: !1338, line: 111, baseType: !1360, size: 32, offset: 288)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerCallbackFunction_t", file: !1361, line: 123, baseType: !1362)
!1361 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/timers.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{null, !1365}
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerHandle_t", file: !1361, line: 118, baseType: !51)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "uxTimerNumber", scope: !1343, file: !1338, line: 113, baseType: !1154, size: 32, offset: 320)
!1367 = !{!1335, !1368, !1384, !1394, !1396, !1398}
!1368 = !DIGlobalVariableExpression(var: !1369, expr: !DIExpression())
!1369 = distinct !DIGlobalVariable(name: "pxCurrentTimerList", scope: !1337, file: !1338, line: 165, type: !1370, isLocal: true, isDefinition: true)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !1171, line: 212, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !1171, line: 205, size: 160, elements: !1373)
!1373 = !{!1374, !1375, !1377}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1372, file: !1171, line: 208, baseType: !1154, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1372, file: !1171, line: 209, baseType: !1376, size: 32, offset: 32)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1372, file: !1171, line: 210, baseType: !1378, size: 96, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !1171, line: 200, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !1171, line: 193, size: 96, elements: !1380)
!1380 = !{!1381, !1382, !1383}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1379, file: !1171, line: 196, baseType: !855, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1379, file: !1171, line: 197, baseType: !1352, size: 32, offset: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1379, file: !1171, line: 198, baseType: !1352, size: 32, offset: 64)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "xLastTime", scope: !1386, file: !1338, line: 524, type: !855, isLocal: true, isDefinition: true)
!1386 = distinct !DISubprogram(name: "prvSampleTimeNow", scope: !1338, file: !1338, line: 521, type: !1387, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !1391)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!855, !1389}
!1389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1390)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1391 = !{!1392, !1393}
!1392 = !DILocalVariable(name: "pxTimerListsWereSwitched", arg: 1, scope: !1386, file: !1338, line: 521, type: !1389)
!1393 = !DILocalVariable(name: "xTimeNow", scope: !1386, file: !1338, line: 523, type: !855)
!1394 = !DIGlobalVariableExpression(var: !1395, expr: !DIExpression())
!1395 = distinct !DIGlobalVariable(name: "pxOverflowTimerList", scope: !1337, file: !1338, line: 166, type: !1370, isLocal: true, isDefinition: true)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "xActiveTimerList1", scope: !1337, file: !1338, line: 163, type: !1371, isLocal: true, isDefinition: true)
!1398 = !DIGlobalVariableExpression(var: !1399, expr: !DIExpression())
!1399 = distinct !DIGlobalVariable(name: "xActiveTimerList2", scope: !1337, file: !1338, line: 164, type: !1371, isLocal: true, isDefinition: true)
!1400 = !DIGlobalVariableExpression(var: !1401, expr: !DIExpression())
!1401 = distinct !DIGlobalVariable(name: "ucMaxSysCallPriority", scope: !1402, file: !1403, line: 212, type: !54, isLocal: true, isDefinition: true)
!1402 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1403, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1404, retainedTypes: !1412, globals: !1413, splitDebugInlining: false, nameTableKind: None)
!1403 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1404 = !{!1405, !765}
!1405 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !766, line: 50, baseType: !30, size: 32, elements: !1406)
!1406 = !{!1407, !1408, !1409, !1410, !1411}
!1407 = !DIEnumerator(name: "HAL_DWT_0", value: 0)
!1408 = !DIEnumerator(name: "HAL_DWT_1", value: 1)
!1409 = !DIEnumerator(name: "HAL_DWT_2", value: 2)
!1410 = !DIEnumerator(name: "HAL_DWT_3", value: 3)
!1411 = !DIEnumerator(name: "HAL_DWT_MAX", value: 4)
!1412 = !{!1158, !51, !52, !54, !61, !59, !1160, !855}
!1413 = !{!1414, !1400, !1419, !1421}
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "pcInterruptPriorityRegisters", scope: !1402, file: !1403, line: 214, type: !1416, isLocal: true, isDefinition: true)
!1416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1417)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !53)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "ulMaxPRIGROUPValue", scope: !1402, file: !1403, line: 213, type: !61, isLocal: true, isDefinition: true)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "uxCriticalNesting", scope: !1402, file: !1403, line: 150, type: !1154, isLocal: true, isDefinition: true)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "pxEnd", scope: !1425, file: !1426, line: 142, type: !1428, isLocal: true, isDefinition: true)
!1425 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1426, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1427, globals: !1435, splitDebugInlining: false, nameTableKind: None)
!1426 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1427 = !{!51, !210, !1209, !61, !1428}
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockLink_t", file: !1426, line: 117, baseType: !1430)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "A_BLOCK_LINK", file: !1426, line: 110, size: 64, elements: !1431)
!1431 = !{!1432, !1434}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "pxNextFreeBlock", scope: !1430, file: !1426, line: 112, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "xBlockSize", scope: !1430, file: !1426, line: 113, baseType: !1209, size: 32, offset: 32)
!1435 = !{!1436, !1439, !1423, !1441, !1443, !1445, !1447}
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression(DW_OP_constu, 8, DW_OP_stack_value))
!1437 = distinct !DIGlobalVariable(name: "xHeapStructSize", scope: !1425, file: !1426, line: 139, type: !1438, isLocal: true, isDefinition: true)
!1438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1209)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "xStart", scope: !1425, file: !1426, line: 142, type: !1429, isLocal: true, isDefinition: true)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "xBlockAllocatedBit", scope: !1425, file: !1426, line: 153, type: !1209, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "xFreeBytesRemaining", scope: !1425, file: !1426, line: 146, type: !1209, isLocal: true, isDefinition: true)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "xMinimumEverFreeBytesRemaining", scope: !1425, file: !1426, line: 147, type: !1209, isLocal: true, isDefinition: true)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "ucHeap", scope: !1425, file: !1426, line: 105, type: !1449, isLocal: true, isDefinition: true)
!1449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 524288, elements: !1450)
!1450 = !{!1451}
!1451 = !DISubrange(count: 65536)
!1452 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 2147483648, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(name: "xExceptionStack", scope: !1455, file: !1456, line: 78, type: !1630, isLocal: true, isDefinition: true)
!1455 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1456, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1457, retainedTypes: !1485, globals: !1538, splitDebugInlining: false, nameTableKind: None)
!1456 = !DIFile(filename: "../../../../../kernel/service/src/exception_handler.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1457 = !{!1458, !1405}
!1458 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1456, line: 276, baseType: !30, size: 32, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484}
!1460 = !DIEnumerator(name: "r0", value: 0)
!1461 = !DIEnumerator(name: "r1", value: 1)
!1462 = !DIEnumerator(name: "r2", value: 2)
!1463 = !DIEnumerator(name: "r3", value: 3)
!1464 = !DIEnumerator(name: "r12", value: 4)
!1465 = !DIEnumerator(name: "lr", value: 5)
!1466 = !DIEnumerator(name: "pc", value: 6)
!1467 = !DIEnumerator(name: "psr", value: 7)
!1468 = !DIEnumerator(name: "s0", value: 8)
!1469 = !DIEnumerator(name: "s1", value: 9)
!1470 = !DIEnumerator(name: "s2", value: 10)
!1471 = !DIEnumerator(name: "s3", value: 11)
!1472 = !DIEnumerator(name: "s4", value: 12)
!1473 = !DIEnumerator(name: "s5", value: 13)
!1474 = !DIEnumerator(name: "s6", value: 14)
!1475 = !DIEnumerator(name: "s7", value: 15)
!1476 = !DIEnumerator(name: "s8", value: 16)
!1477 = !DIEnumerator(name: "s9", value: 17)
!1478 = !DIEnumerator(name: "s10", value: 18)
!1479 = !DIEnumerator(name: "s11", value: 19)
!1480 = !DIEnumerator(name: "s12", value: 20)
!1481 = !DIEnumerator(name: "s13", value: 21)
!1482 = !DIEnumerator(name: "s14", value: 22)
!1483 = !DIEnumerator(name: "s15", value: 23)
!1484 = !DIEnumerator(name: "fpscr", value: 24)
!1485 = !{!1486, !175, !30, !61, !1511}
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !1488)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1488, file: !531, line: 397, baseType: !565, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1488, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1488, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1488, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1488, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1488, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1488, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1488, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1488, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1488, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1488, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1488, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1488, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1488, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1488, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1488, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1488, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1488, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1488, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1488, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1488, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !531, line: 826, baseType: !1513)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 801, size: 736, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1513, file: !531, line: 803, baseType: !60, size: 32)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !1513, file: !531, line: 804, baseType: !60, size: 32, offset: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !1513, file: !531, line: 805, baseType: !60, size: 32, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !1513, file: !531, line: 806, baseType: !60, size: 32, offset: 96)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !1513, file: !531, line: 807, baseType: !60, size: 32, offset: 128)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !1513, file: !531, line: 808, baseType: !60, size: 32, offset: 160)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !1513, file: !531, line: 809, baseType: !60, size: 32, offset: 192)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !1513, file: !531, line: 810, baseType: !565, size: 32, offset: 224)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !1513, file: !531, line: 811, baseType: !60, size: 32, offset: 256)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !1513, file: !531, line: 812, baseType: !60, size: 32, offset: 288)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !1513, file: !531, line: 813, baseType: !60, size: 32, offset: 320)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1513, file: !531, line: 814, baseType: !445, size: 32, offset: 352)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !1513, file: !531, line: 815, baseType: !60, size: 32, offset: 384)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !1513, file: !531, line: 816, baseType: !60, size: 32, offset: 416)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !1513, file: !531, line: 817, baseType: !60, size: 32, offset: 448)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1513, file: !531, line: 818, baseType: !445, size: 32, offset: 480)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !1513, file: !531, line: 819, baseType: !60, size: 32, offset: 512)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !1513, file: !531, line: 820, baseType: !60, size: 32, offset: 544)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !1513, file: !531, line: 821, baseType: !60, size: 32, offset: 576)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1513, file: !531, line: 822, baseType: !445, size: 32, offset: 608)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !1513, file: !531, line: 823, baseType: !60, size: 32, offset: 640)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !1513, file: !531, line: 824, baseType: !60, size: 32, offset: 672)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !1513, file: !531, line: 825, baseType: !60, size: 32, offset: 704)
!1538 = !{!1539, !1542, !1453, !1602, !1611, !1613, !1628}
!1539 = !DIGlobalVariableExpression(var: !1540, expr: !DIExpression())
!1540 = distinct !DIGlobalVariable(name: "pxExceptionStack", scope: !1455, file: !1456, line: 79, type: !1541, isLocal: false, isDefinition: true)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 32)
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "pTaskContext", scope: !1455, file: !1456, line: 340, type: !1544, isLocal: false, isDefinition: true)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskContext", file: !1456, line: 337, baseType: !1546)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TaskContextType", file: !1456, line: 282, size: 1728, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !1546, file: !1456, line: 283, baseType: !30, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !1546, file: !1456, line: 284, baseType: !30, size: 32, offset: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !1546, file: !1456, line: 285, baseType: !30, size: 32, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !1546, file: !1456, line: 286, baseType: !30, size: 32, offset: 96)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !1546, file: !1456, line: 287, baseType: !30, size: 32, offset: 128)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !1546, file: !1456, line: 288, baseType: !30, size: 32, offset: 160)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !1546, file: !1456, line: 289, baseType: !30, size: 32, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !1546, file: !1456, line: 290, baseType: !30, size: 32, offset: 224)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !1546, file: !1456, line: 291, baseType: !30, size: 32, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !1546, file: !1456, line: 292, baseType: !30, size: 32, offset: 288)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !1546, file: !1456, line: 293, baseType: !30, size: 32, offset: 320)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !1546, file: !1456, line: 294, baseType: !30, size: 32, offset: 352)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !1546, file: !1456, line: 295, baseType: !30, size: 32, offset: 384)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1546, file: !1456, line: 296, baseType: !30, size: 32, offset: 416)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !1546, file: !1456, line: 297, baseType: !30, size: 32, offset: 448)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !1546, file: !1456, line: 298, baseType: !30, size: 32, offset: 480)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "psr", scope: !1546, file: !1456, line: 299, baseType: !30, size: 32, offset: 512)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1546, file: !1456, line: 300, baseType: !30, size: 32, offset: 544)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "exc_return", scope: !1546, file: !1456, line: 301, baseType: !30, size: 32, offset: 576)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "msp", scope: !1546, file: !1456, line: 302, baseType: !30, size: 32, offset: 608)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1546, file: !1456, line: 303, baseType: !30, size: 32, offset: 640)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "fpscr", scope: !1546, file: !1456, line: 304, baseType: !30, size: 32, offset: 672)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "s0", scope: !1546, file: !1456, line: 305, baseType: !30, size: 32, offset: 704)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "s1", scope: !1546, file: !1456, line: 306, baseType: !30, size: 32, offset: 736)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "s2", scope: !1546, file: !1456, line: 307, baseType: !30, size: 32, offset: 768)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "s3", scope: !1546, file: !1456, line: 308, baseType: !30, size: 32, offset: 800)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "s4", scope: !1546, file: !1456, line: 309, baseType: !30, size: 32, offset: 832)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "s5", scope: !1546, file: !1456, line: 310, baseType: !30, size: 32, offset: 864)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "s6", scope: !1546, file: !1456, line: 311, baseType: !30, size: 32, offset: 896)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "s7", scope: !1546, file: !1456, line: 312, baseType: !30, size: 32, offset: 928)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "s8", scope: !1546, file: !1456, line: 313, baseType: !30, size: 32, offset: 960)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "s9", scope: !1546, file: !1456, line: 314, baseType: !30, size: 32, offset: 992)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "s10", scope: !1546, file: !1456, line: 315, baseType: !30, size: 32, offset: 1024)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "s11", scope: !1546, file: !1456, line: 316, baseType: !30, size: 32, offset: 1056)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "s12", scope: !1546, file: !1456, line: 317, baseType: !30, size: 32, offset: 1088)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "s13", scope: !1546, file: !1456, line: 318, baseType: !30, size: 32, offset: 1120)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "s14", scope: !1546, file: !1456, line: 319, baseType: !30, size: 32, offset: 1152)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "s15", scope: !1546, file: !1456, line: 320, baseType: !30, size: 32, offset: 1184)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "s16", scope: !1546, file: !1456, line: 321, baseType: !30, size: 32, offset: 1216)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "s17", scope: !1546, file: !1456, line: 322, baseType: !30, size: 32, offset: 1248)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "s18", scope: !1546, file: !1456, line: 323, baseType: !30, size: 32, offset: 1280)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "s19", scope: !1546, file: !1456, line: 324, baseType: !30, size: 32, offset: 1312)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "s20", scope: !1546, file: !1456, line: 325, baseType: !30, size: 32, offset: 1344)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "s21", scope: !1546, file: !1456, line: 326, baseType: !30, size: 32, offset: 1376)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "s22", scope: !1546, file: !1456, line: 327, baseType: !30, size: 32, offset: 1408)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "s23", scope: !1546, file: !1456, line: 328, baseType: !30, size: 32, offset: 1440)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "s24", scope: !1546, file: !1456, line: 329, baseType: !30, size: 32, offset: 1472)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "s25", scope: !1546, file: !1456, line: 330, baseType: !30, size: 32, offset: 1504)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "s26", scope: !1546, file: !1456, line: 331, baseType: !30, size: 32, offset: 1536)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "s27", scope: !1546, file: !1456, line: 332, baseType: !30, size: 32, offset: 1568)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "s28", scope: !1546, file: !1456, line: 333, baseType: !30, size: 32, offset: 1600)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "s29", scope: !1546, file: !1456, line: 334, baseType: !30, size: 32, offset: 1632)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "s30", scope: !1546, file: !1456, line: 335, baseType: !30, size: 32, offset: 1664)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "s31", scope: !1546, file: !1456, line: 336, baseType: !30, size: 32, offset: 1696)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "assert_expr", scope: !1455, file: !1456, line: 99, type: !1604, isLocal: true, isDefinition: true)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "assert_expr_t", file: !1456, line: 95, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1456, line: 89, size: 128, elements: !1606)
!1606 = !{!1607, !1608, !1609, !1610}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "is_valid", scope: !1605, file: !1456, line: 91, baseType: !69, size: 8)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1605, file: !1456, line: 92, baseType: !331, size: 32, offset: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1605, file: !1456, line: 93, baseType: !331, size: 32, offset: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !1605, file: !1456, line: 94, baseType: !7, size: 32, offset: 96)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "reboot_flag", scope: !1455, file: !1456, line: 101, type: !7, isLocal: true, isDefinition: true)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "exception_config", scope: !1455, file: !1456, line: 97, type: !1615, isLocal: true, isDefinition: true)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_t", file: !1456, line: 87, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1456, line: 83, size: 416, elements: !1617)
!1617 = !{!1618, !1619}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !1616, file: !1456, line: 85, baseType: !7, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "configs", scope: !1616, file: !1456, line: 86, baseType: !1620, size: 384, offset: 32)
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1621, size: 384, elements: !1185)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !1622, line: 99, baseType: !1623)
!1622 = !DIFile(filename: "../../../../../kernel/service/inc/exception_handler.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1622, line: 95, size: 64, elements: !1624)
!1624 = !{!1625, !1627}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !1623, file: !1622, line: 97, baseType: !1626, size: 32)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_exception_callback_t", file: !1622, line: 93, baseType: !153)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !1623, file: !1622, line: 98, baseType: !1626, size: 32, offset: 32)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(name: "taskContext", scope: !1455, file: !1456, line: 339, type: !1545, isLocal: true, isDefinition: true)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 6144, elements: !1631)
!1631 = !{!1632}
!1632 = !DISubrange(count: 192)
!1633 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment, 0, 8))
!1634 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!1635 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression(DW_OP_LLVM_fragment, 64, 32))
!1636 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression(DW_OP_LLVM_fragment, 96, 32))
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "memory_regions", scope: !1639, file: !1640, line: 51, type: !1642, isLocal: false, isDefinition: true)
!1639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1641, splitDebugInlining: false, nameTableKind: None)
!1640 = !DIFile(filename: "../../../../../project/mt7687_hdk/templates/freertos_create_thread/src/regions_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1641 = !{!1637}
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1643, size: 768, elements: !1185)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "memory_region_type", file: !1622, line: 91, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1622, line: 85, size: 128, elements: !1646)
!1646 = !{!1647, !1648, !1649, !1650}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "region_name", scope: !1645, file: !1622, line: 87, baseType: !201, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "start_address", scope: !1645, file: !1622, line: 88, baseType: !1541, size: 32, offset: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "end_address", scope: !1645, file: !1622, line: 89, baseType: !1541, size: 32, offset: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "is_dumped", scope: !1645, file: !1622, line: 90, baseType: !30, size: 32, offset: 96)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "log_control_block_common", scope: !1653, file: !1654, line: 158, type: !1711, isLocal: false, isDefinition: true)
!1653 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1654, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1655, retainedTypes: !1668, globals: !1730, splitDebugInlining: false, nameTableKind: None)
!1654 = !DIFile(filename: "../../../../../kernel/service/src/syslog.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1655 = !{!345, !350, !649, !657, !662, !678, !684, !688, !1656, !841, !1660, !28}
!1656 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1654, line: 96, baseType: !30, size: 32, elements: !1657)
!1657 = !{!1658, !1659}
!1658 = !DIEnumerator(name: "MESSAGE_TYPE_NORMAL_LOG", value: 0)
!1659 = !DIEnumerator(name: "MESSAGE_TYPE_HEX_DUMP", value: 1)
!1660 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1661, line: 50, baseType: !30, size: 32, elements: !1662)
!1661 = !DIFile(filename: "../../../../../kernel/service/inc/toi.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1662 = !{!1663, !1664, !1665, !1666, !1667}
!1663 = !DIEnumerator(name: "TOI_BIN", value: 0)
!1664 = !DIEnumerator(name: "TOI_OCT", value: 1)
!1665 = !DIEnumerator(name: "TOI_DEC", value: 2)
!1666 = !DIEnumerator(name: "TOI_HEX", value: 3)
!1667 = !DIEnumerator(name: "TOI_ERR", value: 4)
!1668 = !{!1669, !54, !51, !59, !1160, !855, !30, !201, !7, !1710, !362, !364, !61, !1719, !1728}
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_message_t", file: !1654, line: 130, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1654, line: 124, size: 2336, elements: !1672)
!1672 = !{!1673, !1675}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "message_type", scope: !1671, file: !1654, line: 125, baseType: !1674, size: 32)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "message_type_t", file: !1654, line: 99, baseType: !1656)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1671, file: !1654, line: 129, baseType: !1676, size: 2304, offset: 32)
!1676 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1671, file: !1654, line: 126, size: 2304, elements: !1677)
!1677 = !{!1678, !1691}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "normal_log_message", scope: !1676, file: !1654, line: 127, baseType: !1679, size: 2240)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "normal_log_message_t", file: !1654, line: 108, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1654, line: 101, size: 2240, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1686, !1687}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1680, file: !1654, line: 102, baseType: !331, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1680, file: !1654, line: 103, baseType: !364, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !1680, file: !1654, line: 104, baseType: !331, size: 32, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !1680, file: !1654, line: 105, baseType: !7, size: 32, offset: 96)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1680, file: !1654, line: 106, baseType: !61, size: 32, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1680, file: !1654, line: 107, baseType: !1688, size: 2056, offset: 160)
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 2056, elements: !1689)
!1689 = !{!1690}
!1690 = !DISubrange(count: 257)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "hex_dump_message", scope: !1676, file: !1654, line: 128, baseType: !1692, size: 2304)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "hex_dump_message_t", file: !1654, line: 120, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1654, line: 110, size: 2304, elements: !1694)
!1694 = !{!1695, !1696, !1697, !1698, !1699, !1700, !1704, !1705, !1709}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1693, file: !1654, line: 111, baseType: !331, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1693, file: !1654, line: 112, baseType: !364, size: 32, offset: 32)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !1693, file: !1654, line: 113, baseType: !331, size: 32, offset: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !1693, file: !1654, line: 114, baseType: !7, size: 32, offset: 96)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !1693, file: !1654, line: 115, baseType: !61, size: 32, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1693, file: !1654, line: 116, baseType: !1701, size: 1032, offset: 160)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 1032, elements: !1702)
!1702 = !{!1703}
!1703 = !DISubrange(count: 129)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !1693, file: !1654, line: 117, baseType: !61, size: 32, offset: 1216)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1693, file: !1654, line: 118, baseType: !1706, size: 1024, offset: 1248)
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 1024, elements: !1707)
!1707 = !{!1708}
!1708 = !DISubrange(count: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "additional_data", scope: !1693, file: !1654, line: 119, baseType: !201, size: 32, offset: 2272)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !346, line: 95, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 89, size: 160, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717, !1718}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1712, file: !346, line: 90, baseType: !331, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !1712, file: !346, line: 91, baseType: !362, size: 32, offset: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1712, file: !346, line: 92, baseType: !364, size: 32, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !1712, file: !346, line: 93, baseType: !366, size: 32, offset: 96)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !1712, file: !346, line: 94, baseType: !371, size: 32, offset: 128)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_buffer_t", file: !1654, line: 135, baseType: !1721)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1654, line: 132, size: 2368, elements: !1722)
!1722 = !{!1723, !1724}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "occupied", scope: !1721, file: !1654, line: 133, baseType: !61, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1721, file: !1654, line: 134, baseType: !1725, size: 2336, offset: 32)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 2336, elements: !1726)
!1726 = !{!1727}
!1727 = !DISubrange(count: 292)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !55, line: 60, baseType: !1729)
!1729 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !57, line: 105, baseType: !1053)
!1730 = !{!1651, !1731, !1733, !1736, !1750, !1752, !1754, !1756, !1758, !1761, !1763, !1765}
!1731 = !DIGlobalVariableExpression(var: !1732, expr: !DIExpression())
!1732 = distinct !DIGlobalVariable(name: "syslog_task_handle", scope: !1653, file: !1654, line: 138, type: !1159, isLocal: true, isDefinition: true)
!1733 = !DIGlobalVariableExpression(var: !1734, expr: !DIExpression())
!1734 = distinct !DIGlobalVariable(name: "syslog_buffer_pool", scope: !1653, file: !1654, line: 141, type: !1735, isLocal: true, isDefinition: true)
!1735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1720, size: 37888, elements: !455)
!1736 = !DIGlobalVariableExpression(var: !1737, expr: !DIExpression())
!1737 = distinct !DIGlobalVariable(name: "syslog_config", scope: !1653, file: !1654, line: 160, type: !1738, isLocal: true, isDefinition: true)
!1738 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_config_t", file: !346, line: 97, baseType: !1739)
!1739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "syslog_config_s", file: !346, line: 122, size: 64, elements: !1740)
!1740 = !{!1741, !1748}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "save_fn", scope: !1739, file: !346, line: 123, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_save_fn", file: !346, line: 107, baseType: !1743)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{null, !1746}
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1738)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !1739, file: !346, line: 124, baseType: !1749, size: 32, offset: 32)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(name: "g_log_uart_port", scope: !1653, file: !1654, line: 166, type: !755, isLocal: true, isDefinition: true)
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "syslog_init_done", scope: !1653, file: !1654, line: 153, type: !61, isLocal: true, isDefinition: true)
!1754 = !DIGlobalVariableExpression(var: !1755, expr: !DIExpression())
!1755 = distinct !DIGlobalVariable(name: "syslog_drop_count", scope: !1653, file: !1654, line: 155, type: !61, isLocal: true, isDefinition: true)
!1756 = !DIGlobalVariableExpression(var: !1757, expr: !DIExpression())
!1757 = distinct !DIGlobalVariable(name: "g_log_queue", scope: !1653, file: !1654, line: 144, type: !1333, isLocal: true, isDefinition: true)
!1758 = !DIGlobalVariableExpression(var: !1759, expr: !DIExpression())
!1759 = distinct !DIGlobalVariable(name: "print_level_table", scope: !1653, file: !1654, line: 164, type: !1760, isLocal: true, isDefinition: true)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !220)
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1762 = distinct !DIGlobalVariable(name: "syslog_task_ready", scope: !1653, file: !1654, line: 154, type: !61, isLocal: true, isDefinition: true)
!1763 = !DIGlobalVariableExpression(var: !1764, expr: !DIExpression())
!1764 = distinct !DIGlobalVariable(name: "syslog_init_time", scope: !1653, file: !1654, line: 152, type: !61, isLocal: true, isDefinition: true)
!1765 = !DIGlobalVariableExpression(var: !1766, expr: !DIExpression())
!1766 = distinct !DIGlobalVariable(name: "log_switch_table", scope: !1653, file: !1654, line: 162, type: !1767, isLocal: true, isDefinition: true)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 64, elements: !333)
!1768 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1769 = !DIGlobalVariableExpression(var: !1770, expr: !DIExpression())
!1770 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !1771, file: !1776, line: 4, type: !1782, isLocal: false, isDefinition: true)
!1771 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1772, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1773, splitDebugInlining: false, nameTableKind: None)
!1772 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1773 = !{!1769, !1774, !1780}
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !1771, file: !1776, line: 5, type: !1777, isLocal: false, isDefinition: true)
!1776 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 88, elements: !1778)
!1778 = !{!1779}
!1779 = !DISubrange(count: 11)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !1771, file: !1776, line: 6, type: !1777, isLocal: false, isDefinition: true)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 248, elements: !1783)
!1783 = !{!1784}
!1784 = !DISubrange(count: 31)
!1785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1786, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1787, retainedTypes: !1794, splitDebugInlining: false, nameTableKind: None)
!1786 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/hal_trng.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1787 = !{!1788}
!1788 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1789, line: 92, baseType: !7, size: 32, elements: !1790)
!1789 = !DIFile(filename: "../../../../../driver/chip/inc/hal_trng.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1790 = !{!1791, !1792, !1793}
!1791 = !DIEnumerator(name: "HAL_TRNG_STATUS_ERROR", value: -2)
!1792 = !DIEnumerator(name: "HAL_TRNG_STATUS_INVALID_PARAMETER", value: -1)
!1793 = !DIEnumerator(name: "HAL_TRNG_STATUS_OK", value: 0)
!1794 = !{!284, !286}
!1795 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1796, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1797, splitDebugInlining: false, nameTableKind: None)
!1796 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1797 = !{!1798, !1823}
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !531, line: 418, baseType: !1800)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 395, size: 1120, elements: !1801)
!1801 = !{!1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1800, file: !531, line: 397, baseType: !565, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1800, file: !531, line: 398, baseType: !60, size: 32, offset: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1800, file: !531, line: 399, baseType: !60, size: 32, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1800, file: !531, line: 400, baseType: !60, size: 32, offset: 96)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1800, file: !531, line: 401, baseType: !60, size: 32, offset: 128)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1800, file: !531, line: 402, baseType: !60, size: 32, offset: 160)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1800, file: !531, line: 403, baseType: !572, size: 96, offset: 192)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1800, file: !531, line: 404, baseType: !60, size: 32, offset: 288)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1800, file: !531, line: 405, baseType: !60, size: 32, offset: 320)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1800, file: !531, line: 406, baseType: !60, size: 32, offset: 352)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1800, file: !531, line: 407, baseType: !60, size: 32, offset: 384)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1800, file: !531, line: 408, baseType: !60, size: 32, offset: 416)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1800, file: !531, line: 409, baseType: !60, size: 32, offset: 448)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1800, file: !531, line: 410, baseType: !60, size: 32, offset: 480)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1800, file: !531, line: 411, baseType: !581, size: 64, offset: 512)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1800, file: !531, line: 412, baseType: !565, size: 32, offset: 576)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1800, file: !531, line: 413, baseType: !565, size: 32, offset: 608)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1800, file: !531, line: 414, baseType: !585, size: 128, offset: 640)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1800, file: !531, line: 415, baseType: !587, size: 160, offset: 768)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1800, file: !531, line: 416, baseType: !591, size: 160, offset: 928)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1800, file: !531, line: 417, baseType: !60, size: 32, offset: 1088)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !531, line: 378, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 363, size: 28704, elements: !1826)
!1826 = !{!1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1825, file: !531, line: 365, baseType: !535, size: 256)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1825, file: !531, line: 366, baseType: !537, size: 768, offset: 256)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1825, file: !531, line: 367, baseType: !535, size: 256, offset: 1024)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1825, file: !531, line: 368, baseType: !537, size: 768, offset: 1280)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1825, file: !531, line: 369, baseType: !535, size: 256, offset: 2048)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1825, file: !531, line: 370, baseType: !537, size: 768, offset: 2304)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1825, file: !531, line: 371, baseType: !535, size: 256, offset: 3072)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1825, file: !531, line: 372, baseType: !537, size: 768, offset: 3328)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1825, file: !531, line: 373, baseType: !535, size: 256, offset: 4096)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1825, file: !531, line: 374, baseType: !548, size: 1792, offset: 4352)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1825, file: !531, line: 375, baseType: !552, size: 1920, offset: 6144)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1825, file: !531, line: 376, baseType: !556, size: 20608, offset: 8064)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1825, file: !531, line: 377, baseType: !60, size: 32, offset: 28672)
!1840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1841, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1842, splitDebugInlining: false, nameTableKind: None)
!1841 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/timer.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1842 = !{!174, !137}
!1843 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1844, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1845, retainedTypes: !1856, splitDebugInlining: false, nameTableKind: None)
!1844 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1845 = !{!1846, !44}
!1846 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 110, baseType: !7, size: 32, elements: !1847)
!1847 = !{!1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855}
!1848 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1849 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1850 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1851 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1852 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1853 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1854 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1855 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1856 = !{!51}
!1857 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1858, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1859, splitDebugInlining: false, nameTableKind: None)
!1858 = !DIFile(filename: "../../../../../driver/board/mt76x7_hdk/ept/src/bsp_gpio_ept_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1859 = !{!61, !59}
!1860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1861, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1862, retainedTypes: !1863, splitDebugInlining: false, nameTableKind: None)
!1861 = !DIFile(filename: "../../../../../project/mt7687_hdk/templates/freertos_create_thread/src/sys_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1862 = !{!657, !412, !350, !393, !1788}
!1863 = !{!1864, !30}
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !383, line: 204, baseType: !393)
!1865 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1866, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1867, splitDebugInlining: false, nameTableKind: None)
!1866 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/list.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1867 = !{!1868, !855, !1154, !51, !1878}
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !1171, line: 191, baseType: !1870)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !1171, line: 181, size: 160, elements: !1871)
!1871 = !{!1872, !1873, !1875, !1876, !1877}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1870, file: !1171, line: 184, baseType: !855, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1870, file: !1171, line: 185, baseType: !1874, size: 32, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1870, file: !1171, line: 186, baseType: !1874, size: 32, offset: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1870, file: !1171, line: 187, baseType: !51, size: 32, offset: 96)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1870, file: !1171, line: 188, baseType: !51, size: 32, offset: 128)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !1171, line: 212, baseType: !1880)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !1171, line: 205, size: 160, elements: !1881)
!1881 = !{!1882, !1883, !1884}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1880, file: !1171, line: 208, baseType: !1154, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1880, file: !1171, line: 209, baseType: !1868, size: 32, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1880, file: !1171, line: 210, baseType: !1885, size: 96, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !1171, line: 200, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !1171, line: 193, size: 96, elements: !1887)
!1887 = !{!1888, !1889, !1890}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1886, file: !1171, line: 196, baseType: !855, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1886, file: !1171, line: 197, baseType: !1874, size: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1886, file: !1171, line: 198, baseType: !1874, size: 32, offset: 64)
!1891 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1892, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1893, splitDebugInlining: false, nameTableKind: None)
!1892 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/mt7687/port_tick.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1893 = !{!855, !1894}
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !531, line: 656, baseType: !1896)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 650, size: 128, elements: !1897)
!1897 = !{!1898, !1899, !1900, !1901}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1896, file: !531, line: 652, baseType: !60, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1896, file: !531, line: 653, baseType: !60, size: 32, offset: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1896, file: !531, line: 654, baseType: !60, size: 32, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1896, file: !531, line: 655, baseType: !565, size: 32, offset: 96)
!1902 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1903, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1904, splitDebugInlining: false, nameTableKind: None)
!1903 = !DIFile(filename: "../../../../../kernel/service/src/os_port_callback.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!1904 = !{!30, !201}
!1905 = !{!"Ubuntu clang version 14.0.6"}
!1906 = !{i32 7, !"Dwarf Version", i32 2}
!1907 = !{i32 2, !"Debug Info Version", i32 3}
!1908 = !{i32 1, !"wchar_size", i32 4}
!1909 = !{i32 1, !"min_enum_size", i32 4}
!1910 = !{i32 1, !"branch-target-enforcement", i32 0}
!1911 = !{i32 1, !"sign-return-address", i32 0}
!1912 = !{i32 1, !"sign-return-address-all", i32 0}
!1913 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!1914 = !{i32 7, !"frame-pointer", i32 2}
!1915 = distinct !DISubprogram(name: "gpt_get_current_time", scope: !3, file: !3, line: 86, type: !1916, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1918)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!61}
!1918 = !{!1919, !1920}
!1919 = !DILocalVariable(name: "counter", scope: !1915, file: !3, line: 88, type: !61)
!1920 = !DILocalVariable(name: "ret", scope: !1915, file: !3, line: 89, type: !1921)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !21, line: 393, baseType: !20)
!1922 = !DILocation(line: 88, column: 5, scope: !1915)
!1923 = !DILocation(line: 0, scope: !1915)
!1924 = !DILocation(line: 88, column: 14, scope: !1915)
!1925 = !DILocation(line: 90, column: 11, scope: !1915)
!1926 = !DILocation(line: 91, column: 13, scope: !1927)
!1927 = distinct !DILexicalBlock(scope: !1915, file: !3, line: 91, column: 9)
!1928 = !DILocation(line: 91, column: 9, scope: !1915)
!1929 = !DILocation(line: 92, column: 9, scope: !1930)
!1930 = distinct !DILexicalBlock(scope: !1927, file: !3, line: 91, column: 35)
!1931 = !DILocation(line: 94, column: 12, scope: !1915)
!1932 = !DILocation(line: 95, column: 1, scope: !1915)
!1933 = !DILocation(line: 94, column: 5, scope: !1915)
!1934 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !3, file: !3, line: 97, type: !154, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1935)
!1935 = !{}
!1936 = !DILocation(line: 99, column: 20, scope: !1934)
!1937 = !DILocation(line: 100, column: 1, scope: !1934)
!1938 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !3, file: !3, line: 101, type: !154, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1935)
!1939 = !DILocation(line: 103, column: 20, scope: !1938)
!1940 = !DILocation(line: 104, column: 1, scope: !1938)
!1941 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !3, file: !3, line: 105, type: !154, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1935)
!1942 = !DILocation(line: 107, column: 25, scope: !1941)
!1943 = !DILocation(line: 108, column: 1, scope: !1941)
!1944 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !3, file: !3, line: 109, type: !154, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1935)
!1945 = !DILocation(line: 111, column: 25, scope: !1944)
!1946 = !DILocation(line: 112, column: 1, scope: !1944)
!1947 = distinct !DISubprogram(name: "get_sf_lock", scope: !3, file: !3, line: 114, type: !1948, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1950)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{!527}
!1950 = !{!1951}
!1951 = !DILocalVariable(name: "savedMask", scope: !1947, file: !3, line: 116, type: !61)
!1952 = !DILocation(line: 117, column: 17, scope: !1947)
!1953 = !DILocation(line: 0, scope: !1947)
!1954 = !DILocation(line: 118, column: 9, scope: !1955)
!1955 = distinct !DILexicalBlock(scope: !1947, file: !3, line: 118, column: 9)
!1956 = !DILocation(line: 118, column: 9, scope: !1947)
!1957 = !DILocation(line: 119, column: 17, scope: !1958)
!1958 = distinct !DILexicalBlock(scope: !1955, file: !3, line: 118, column: 24)
!1959 = !DILocation(line: 121, column: 9, scope: !1958)
!1960 = !DILocation(line: 0, scope: !1955)
!1961 = !DILocation(line: 130, column: 1, scope: !1947)
!1962 = distinct !DISubprogram(name: "free_sf_lock", scope: !3, file: !3, line: 132, type: !154, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1963)
!1963 = !{!1964}
!1964 = !DILocalVariable(name: "savedMask", scope: !1962, file: !3, line: 134, type: !61)
!1965 = !DILocation(line: 135, column: 17, scope: !1962)
!1966 = !DILocation(line: 0, scope: !1962)
!1967 = !DILocation(line: 136, column: 9, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !1962, file: !3, line: 136, column: 9)
!1969 = !DILocation(line: 136, column: 9, scope: !1962)
!1970 = !DILocation(line: 137, column: 17, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1968, file: !3, line: 136, column: 24)
!1972 = !DILocation(line: 138, column: 9, scope: !1971)
!1973 = !DILocation(line: 143, column: 1, scope: !1962)
!1974 = !DILocation(line: 140, column: 9, scope: !1975)
!1975 = distinct !DILexicalBlock(scope: !1968, file: !3, line: 139, column: 12)
!1976 = !DILocation(line: 141, column: 9, scope: !1975)
!1977 = distinct !DISubprogram(name: "retrieve_sf_lock", scope: !3, file: !3, line: 145, type: !154, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1978)
!1978 = !{!1979}
!1979 = !DILocalVariable(name: "Result", scope: !1977, file: !3, line: 147, type: !527)
!1980 = !DILocation(line: 148, column: 5, scope: !1977)
!1981 = !DILocation(line: 149, column: 18, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1977, file: !3, line: 148, column: 8)
!1983 = !DILocation(line: 0, scope: !1977)
!1984 = !DILocation(line: 150, column: 21, scope: !1977)
!1985 = !DILocation(line: 150, column: 5, scope: !1982)
!1986 = distinct !{!1986, !1980, !1987}
!1987 = !DILocation(line: 150, column: 25, scope: !1977)
!1988 = !DILocation(line: 151, column: 1, scope: !1977)
!1989 = distinct !DISubprogram(name: "release_sf_lock", scope: !3, file: !3, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1935)
!1990 = !DILocation(line: 160, column: 5, scope: !1989)
!1991 = !DILocation(line: 161, column: 1, scope: !1989)
!1992 = distinct !DISubprogram(name: "flash_sfc_config", scope: !3, file: !3, line: 186, type: !1993, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1995)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!527, !54}
!1995 = !{!1996, !1997}
!1996 = !DILocalVariable(name: "mode", arg: 1, scope: !1992, file: !3, line: 186, type: !54)
!1997 = !DILocalVariable(name: "ret", scope: !1992, file: !3, line: 188, type: !1998)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT32", file: !87, line: 56, baseType: !7)
!1999 = !DILocation(line: 0, scope: !1992)
!2000 = !DILocation(line: 189, column: 5, scope: !1992)
!2001 = !DILocation(line: 190, column: 5, scope: !1992)
!2002 = !DILocation(line: 191, column: 9, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1992, file: !3, line: 191, column: 9)
!2004 = !DILocation(line: 191, column: 35, scope: !2003)
!2005 = !DILocation(line: 191, column: 9, scope: !1992)
!2006 = !DILocation(line: 193, column: 26, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !2003, file: !3, line: 191, column: 44)
!2008 = !DILocation(line: 194, column: 5, scope: !2007)
!2009 = !DILocation(line: 195, column: 5, scope: !1992)
!2010 = !DILocation(line: 197, column: 5, scope: !1992)
!2011 = distinct !DISubprogram(name: "sfc_pad_config", scope: !3, file: !3, line: 163, type: !154, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2012)
!2012 = !{!2013}
!2013 = !DILocalVariable(name: "pad_io_setting", scope: !2011, file: !3, line: 166, type: !61)
!2014 = !DILocation(line: 0, scope: !2011)
!2015 = !DILocation(line: 168, column: 22, scope: !2011)
!2016 = !DILocation(line: 169, column: 20, scope: !2011)
!2017 = !DILocation(line: 170, column: 39, scope: !2011)
!2018 = !DILocation(line: 185, column: 1, scope: !2011)
!2019 = distinct !DISubprogram(name: "hal_flash_direct_read", scope: !3, file: !3, line: 200, type: !2020, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2022)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{null, !51, !210, !61}
!2022 = !{!2023, !2024, !2025}
!2023 = !DILocalVariable(name: "absolute_address", arg: 1, scope: !2019, file: !3, line: 200, type: !51)
!2024 = !DILocalVariable(name: "buffer", arg: 2, scope: !2019, file: !3, line: 200, type: !210)
!2025 = !DILocalVariable(name: "length", arg: 3, scope: !2019, file: !3, line: 200, type: !61)
!2026 = !DILocation(line: 0, scope: !2019)
!2027 = !DILocation(line: 202, column: 5, scope: !2019)
!2028 = !DILocation(line: 203, column: 5, scope: !2019)
!2029 = !DILocation(line: 204, column: 5, scope: !2019)
!2030 = !DILocation(line: 205, column: 1, scope: !2019)
!2031 = distinct !DISubprogram(name: "flash_sfc_read", scope: !3, file: !3, line: 207, type: !2032, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2034)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{!527, !61, !61, !210}
!2034 = !{!2035, !2036, !2037, !2038, !2039, !2040}
!2035 = !DILocalVariable(name: "address", arg: 1, scope: !2031, file: !3, line: 207, type: !61)
!2036 = !DILocalVariable(name: "length", arg: 2, scope: !2031, file: !3, line: 207, type: !61)
!2037 = !DILocalVariable(name: "buffer", arg: 3, scope: !2031, file: !3, line: 207, type: !210)
!2038 = !DILocalVariable(name: "ret", scope: !2031, file: !3, line: 209, type: !1998)
!2039 = !DILocalVariable(name: "u4Redidual", scope: !2031, file: !3, line: 210, type: !159)
!2040 = !DILocalVariable(name: "u4ReadLen", scope: !2031, file: !3, line: 211, type: !159)
!2041 = !DILocation(line: 0, scope: !2031)
!2042 = !DILocation(line: 213, column: 5, scope: !2031)
!2043 = !DILocation(line: 214, column: 31, scope: !2031)
!2044 = !DILocation(line: 214, column: 5, scope: !2031)
!2045 = !DILocation(line: 216, column: 31, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !2047, file: !3, line: 216, column: 13)
!2047 = distinct !DILexicalBlock(scope: !2031, file: !3, line: 214, column: 46)
!2048 = !DILocation(line: 216, column: 13, scope: !2047)
!2049 = !DILocation(line: 217, column: 13, scope: !2050)
!2050 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 216, column: 48)
!2051 = !DILocation(line: 218, column: 9, scope: !2050)
!2052 = !DILocation(line: 219, column: 13, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2054, file: !3, line: 218, column: 55)
!2054 = distinct !DILexicalBlock(scope: !2046, file: !3, line: 218, column: 20)
!2055 = !DILocation(line: 220, column: 9, scope: !2053)
!2056 = !DILocation(line: 222, column: 25, scope: !2047)
!2057 = !DILocation(line: 223, column: 27, scope: !2047)
!2058 = !DILocation(line: 224, column: 33, scope: !2047)
!2059 = distinct !{!2059, !2044, !2060}
!2060 = !DILocation(line: 225, column: 5, scope: !2031)
!2061 = !DILocation(line: 227, column: 27, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !2031, file: !3, line: 227, column: 9)
!2063 = !DILocation(line: 227, column: 9, scope: !2031)
!2064 = !DILocation(line: 228, column: 9, scope: !2065)
!2065 = distinct !DILexicalBlock(scope: !2062, file: !3, line: 227, column: 44)
!2066 = !DILocation(line: 229, column: 5, scope: !2065)
!2067 = !DILocation(line: 230, column: 9, scope: !2068)
!2068 = distinct !DILexicalBlock(scope: !2069, file: !3, line: 229, column: 51)
!2069 = distinct !DILexicalBlock(scope: !2062, file: !3, line: 229, column: 16)
!2070 = !DILocation(line: 231, column: 5, scope: !2068)
!2071 = !DILocation(line: 232, column: 22, scope: !2031)
!2072 = !DILocation(line: 233, column: 5, scope: !2031)
!2073 = !DILocation(line: 234, column: 5, scope: !2031)
!2074 = distinct !DISubprogram(name: "flash_sfc_write", scope: !3, file: !3, line: 238, type: !2075, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2078)
!2075 = !DISubroutineType(types: !2076)
!2076 = !{!527, !61, !61, !2077}
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!2078 = !{!2079, !2080, !2081, !2082}
!2079 = !DILocalVariable(name: "address", arg: 1, scope: !2074, file: !3, line: 238, type: !61)
!2080 = !DILocalVariable(name: "length", arg: 2, scope: !2074, file: !3, line: 238, type: !61)
!2081 = !DILocalVariable(name: "buffer", arg: 3, scope: !2074, file: !3, line: 238, type: !2077)
!2082 = !DILocalVariable(name: "ret", scope: !2074, file: !3, line: 240, type: !1998)
!2083 = !DILocation(line: 0, scope: !2074)
!2084 = !DILocation(line: 242, column: 5, scope: !2074)
!2085 = !DILocation(line: 244, column: 5, scope: !2074)
!2086 = !DILocation(line: 245, column: 5, scope: !2074)
!2087 = !DILocation(line: 247, column: 11, scope: !2074)
!2088 = !DILocation(line: 248, column: 22, scope: !2074)
!2089 = !DILocation(line: 250, column: 5, scope: !2074)
!2090 = !DILocation(line: 252, column: 5, scope: !2074)
!2091 = !DILocation(line: 253, column: 5, scope: !2074)
!2092 = distinct !DISubprogram(name: "flash_sfc_erase", scope: !3, file: !3, line: 256, type: !2093, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2095)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{!527, !61, !61}
!2095 = !{!2096, !2097, !2098}
!2096 = !DILocalVariable(name: "address", arg: 1, scope: !2092, file: !3, line: 256, type: !61)
!2097 = !DILocalVariable(name: "type", arg: 2, scope: !2092, file: !3, line: 256, type: !61)
!2098 = !DILocalVariable(name: "ret", scope: !2092, file: !3, line: 258, type: !1998)
!2099 = !DILocation(line: 0, scope: !2092)
!2100 = !DILocation(line: 259, column: 5, scope: !2092)
!2101 = !DILocation(line: 261, column: 5, scope: !2092)
!2102 = !DILocation(line: 262, column: 5, scope: !2092)
!2103 = !DILocation(line: 264, column: 5, scope: !2092)
!2104 = !DILocation(line: 265, column: 5, scope: !2092)
!2105 = !DILocation(line: 267, column: 9, scope: !2092)
!2106 = !DILocation(line: 268, column: 22, scope: !2107)
!2107 = distinct !DILexicalBlock(scope: !2108, file: !3, line: 268, column: 13)
!2108 = distinct !DILexicalBlock(scope: !2109, file: !3, line: 267, column: 37)
!2109 = distinct !DILexicalBlock(scope: !2092, file: !3, line: 267, column: 9)
!2110 = !DILocation(line: 268, column: 31, scope: !2107)
!2111 = !DILocation(line: 268, column: 13, scope: !2108)
!2112 = !DILocation(line: 275, column: 15, scope: !2108)
!2113 = !DILocation(line: 276, column: 5, scope: !2108)
!2114 = !DILocation(line: 277, column: 22, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2116, file: !3, line: 277, column: 13)
!2116 = distinct !DILexicalBlock(scope: !2117, file: !3, line: 276, column: 45)
!2117 = distinct !DILexicalBlock(scope: !2109, file: !3, line: 276, column: 16)
!2118 = !DILocation(line: 277, column: 32, scope: !2115)
!2119 = !DILocation(line: 277, column: 13, scope: !2116)
!2120 = !DILocation(line: 284, column: 15, scope: !2116)
!2121 = !DILocation(line: 285, column: 5, scope: !2116)
!2122 = !DILocation(line: 286, column: 22, scope: !2123)
!2123 = distinct !DILexicalBlock(scope: !2124, file: !3, line: 286, column: 13)
!2124 = distinct !DILexicalBlock(scope: !2125, file: !3, line: 285, column: 45)
!2125 = distinct !DILexicalBlock(scope: !2117, file: !3, line: 285, column: 16)
!2126 = !DILocation(line: 286, column: 32, scope: !2123)
!2127 = !DILocation(line: 286, column: 13, scope: !2124)
!2128 = !DILocation(line: 293, column: 15, scope: !2124)
!2129 = !DILocation(line: 294, column: 5, scope: !2124)
!2130 = !DILocation(line: 301, column: 1, scope: !2092)
!2131 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !3, file: !3, line: 304, type: !154, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2132)
!2132 = !{!2133, !2134}
!2133 = !DILocalVariable(name: "sr", scope: !2131, file: !3, line: 306, type: !54)
!2134 = !DILocalVariable(name: "savedMask", scope: !2131, file: !3, line: 307, type: !61)
!2135 = !DILocation(line: 306, column: 5, scope: !2131)
!2136 = !DILocation(line: 0, scope: !2131)
!2137 = !DILocation(line: 306, column: 13, scope: !2131)
!2138 = !DILocation(line: 329, column: 17, scope: !2131)
!2139 = !DILocation(line: 330, column: 11, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2131, file: !3, line: 330, column: 9)
!2141 = !{i8 0, i8 2}
!2142 = !DILocation(line: 330, column: 30, scope: !2140)
!2143 = !DILocation(line: 331, column: 13, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2145, file: !3, line: 331, column: 13)
!2145 = distinct !DILexicalBlock(scope: !2140, file: !3, line: 330, column: 53)
!2146 = !DILocation(line: 331, column: 32, scope: !2144)
!2147 = !DILocation(line: 331, column: 13, scope: !2145)
!2148 = !DILocation(line: 333, column: 13, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !2144, file: !3, line: 331, column: 37)
!2150 = !DILocation(line: 337, column: 19, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2145, file: !3, line: 337, column: 13)
!2152 = !DILocation(line: 337, column: 22, scope: !2151)
!2153 = !DILocation(line: 337, column: 15, scope: !2151)
!2154 = !DILocation(line: 337, column: 13, scope: !2145)
!2155 = !DILocation(line: 339, column: 13, scope: !2156)
!2156 = distinct !DILexicalBlock(scope: !2151, file: !3, line: 337, column: 44)
!2157 = !DILocation(line: 341, column: 13, scope: !2156)
!2158 = !DILocation(line: 342, column: 21, scope: !2159)
!2159 = distinct !DILexicalBlock(scope: !2160, file: !3, line: 342, column: 21)
!2160 = distinct !DILexicalBlock(scope: !2156, file: !3, line: 341, column: 23)
!2161 = !DILocation(line: 342, column: 40, scope: !2159)
!2162 = !DILocation(line: 342, column: 21, scope: !2160)
!2163 = !DILocation(line: 344, column: 21, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !2159, file: !3, line: 342, column: 45)
!2165 = !DILocation(line: 346, column: 27, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2160, file: !3, line: 346, column: 21)
!2167 = !DILocation(line: 346, column: 30, scope: !2166)
!2168 = !DILocation(line: 346, column: 23, scope: !2166)
!2169 = !DILocation(line: 346, column: 21, scope: !2160)
!2170 = distinct !{!2170, !2157, !2171}
!2171 = !DILocation(line: 349, column: 13, scope: !2156)
!2172 = !DILocation(line: 350, column: 13, scope: !2156)
!2173 = !DILocation(line: 352, column: 9, scope: !2156)
!2174 = !DILocation(line: 353, column: 13, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2151, file: !3, line: 352, column: 16)
!2176 = !DILocation(line: 356, column: 5, scope: !2131)
!2177 = !DILocation(line: 357, column: 1, scope: !2131)
!2178 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !3, file: !3, line: 359, type: !2179, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2181)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{!527, !51, !61}
!2181 = !{!2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190}
!2182 = !DILocalVariable(name: "MTDData", arg: 1, scope: !2178, file: !3, line: 359, type: !51)
!2183 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2178, file: !3, line: 359, type: !61)
!2184 = !DILocalVariable(name: "result", scope: !2178, file: !3, line: 361, type: !527)
!2185 = !DILocalVariable(name: "savedMask", scope: !2178, file: !3, line: 362, type: !61)
!2186 = !DILocalVariable(name: "status_busy", scope: !2178, file: !3, line: 363, type: !54)
!2187 = !DILocalVariable(name: "status_suspend", scope: !2178, file: !3, line: 363, type: !54)
!2188 = !DILocalVariable(name: "sr", scope: !2178, file: !3, line: 364, type: !54)
!2189 = !DILocalVariable(name: "sr1", scope: !2178, file: !3, line: 365, type: !54)
!2190 = !DILocalVariable(name: "check_status", scope: !2191, file: !3, line: 383, type: !54)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !3, line: 382, column: 49)
!2192 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 382, column: 9)
!2193 = !DILocation(line: 0, scope: !2178)
!2194 = !DILocation(line: 364, column: 5, scope: !2178)
!2195 = !DILocation(line: 364, column: 13, scope: !2178)
!2196 = !DILocation(line: 365, column: 5, scope: !2178)
!2197 = !DILocation(line: 365, column: 13, scope: !2178)
!2198 = !DILocation(line: 367, column: 9, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 367, column: 9)
!2200 = !DILocation(line: 367, column: 28, scope: !2199)
!2201 = !DILocation(line: 367, column: 9, scope: !2178)
!2202 = !DILocation(line: 368, column: 9, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2199, file: !3, line: 367, column: 33)
!2204 = !DILocation(line: 370, column: 23, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !2199, file: !3, line: 369, column: 12)
!2206 = !DILocation(line: 373, column: 9, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 373, column: 9)
!2208 = !DILocation(line: 373, column: 30, scope: !2207)
!2209 = !DILocation(line: 373, column: 9, scope: !2178)
!2210 = !DILocation(line: 374, column: 9, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !2207, file: !3, line: 373, column: 35)
!2212 = !DILocation(line: 376, column: 26, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2207, file: !3, line: 375, column: 12)
!2214 = !DILocation(line: 380, column: 17, scope: !2178)
!2215 = !DILocation(line: 382, column: 27, scope: !2192)
!2216 = !DILocation(line: 382, column: 11, scope: !2192)
!2217 = !DILocation(line: 382, column: 9, scope: !2178)
!2218 = !DILocation(line: 0, scope: !2191)
!2219 = !DILocation(line: 385, column: 13, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 385, column: 13)
!2221 = !DILocation(line: 385, column: 49, scope: !2220)
!2222 = !DILocation(line: 388, column: 17, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 388, column: 17)
!2224 = distinct !DILexicalBlock(scope: !2220, file: !3, line: 385, column: 84)
!2225 = !DILocation(line: 388, column: 32, scope: !2223)
!2226 = !DILocation(line: 388, column: 17, scope: !2224)
!2227 = !DILocation(line: 399, column: 9, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 396, column: 56)
!2229 = distinct !DILexicalBlock(scope: !2230, file: !3, line: 396, column: 20)
!2230 = distinct !DILexicalBlock(scope: !2220, file: !3, line: 393, column: 20)
!2231 = !DILocation(line: 401, column: 28, scope: !2232)
!2232 = distinct !DILexicalBlock(scope: !2233, file: !3, line: 399, column: 58)
!2233 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 399, column: 20)
!2234 = !DILocation(line: 402, column: 9, scope: !2232)
!2235 = !DILocation(line: 405, column: 20, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 405, column: 13)
!2237 = !DILocation(line: 405, column: 35, scope: !2236)
!2238 = !DILocation(line: 405, column: 16, scope: !2236)
!2239 = !DILocation(line: 405, column: 52, scope: !2236)
!2240 = !DILocation(line: 406, column: 21, scope: !2236)
!2241 = !DILocation(line: 406, column: 38, scope: !2236)
!2242 = !DILocation(line: 407, column: 13, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 406, column: 61)
!2244 = !DILocation(line: 410, column: 13, scope: !2243)
!2245 = !DILocation(line: 413, column: 9, scope: !2243)
!2246 = !DILocation(line: 414, column: 13, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 413, column: 16)
!2248 = !DILocation(line: 0, scope: !2236)
!2249 = !DILocation(line: 434, column: 5, scope: !2178)
!2250 = !DILocation(line: 0, scope: !2192)
!2251 = !DILocation(line: 436, column: 1, scope: !2178)
!2252 = !DILocation(line: 435, column: 5, scope: !2178)
!2253 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !3, file: !3, line: 439, type: !2254, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2256)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{!527, !51, !61, !54}
!2256 = !{!2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264}
!2257 = !DILocalVariable(name: "MTDData", arg: 1, scope: !2253, file: !3, line: 439, type: !51)
!2258 = !DILocalVariable(name: "addr", arg: 2, scope: !2253, file: !3, line: 439, type: !61)
!2259 = !DILocalVariable(name: "data", arg: 3, scope: !2253, file: !3, line: 439, type: !54)
!2260 = !DILocalVariable(name: "savedMask", scope: !2253, file: !3, line: 441, type: !61)
!2261 = !DILocalVariable(name: "result", scope: !2253, file: !3, line: 442, type: !527)
!2262 = !DILocalVariable(name: "check_data", scope: !2253, file: !3, line: 443, type: !54)
!2263 = !DILocalVariable(name: "status_busy", scope: !2253, file: !3, line: 444, type: !1155)
!2264 = !DILocalVariable(name: "sr", scope: !2253, file: !3, line: 445, type: !54)
!2265 = !DILocation(line: 0, scope: !2253)
!2266 = !DILocation(line: 445, column: 5, scope: !2253)
!2267 = !DILocation(line: 445, column: 23, scope: !2253)
!2268 = !DILocation(line: 448, column: 9, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2253, file: !3, line: 448, column: 9)
!2270 = !DILocation(line: 448, column: 28, scope: !2269)
!2271 = !DILocation(line: 448, column: 9, scope: !2253)
!2272 = !DILocation(line: 449, column: 9, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 448, column: 33)
!2274 = !DILocation(line: 451, column: 23, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 450, column: 12)
!2276 = !DILocation(line: 454, column: 17, scope: !2253)
!2277 = !DILocation(line: 457, column: 9, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2253, file: !3, line: 457, column: 9)
!2279 = !DILocation(line: 457, column: 9, scope: !2253)
!2280 = !DILocation(line: 458, column: 9, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2278, file: !3, line: 457, column: 28)
!2282 = !DILocation(line: 459, column: 9, scope: !2281)
!2283 = !DILocation(line: 460, column: 9, scope: !2281)
!2284 = !DILocation(line: 461, column: 9, scope: !2281)
!2285 = !DILocation(line: 462, column: 5, scope: !2281)
!2286 = !DILocation(line: 464, column: 33, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !2278, file: !3, line: 464, column: 15)
!2288 = !DILocation(line: 464, column: 17, scope: !2287)
!2289 = !DILocation(line: 464, column: 15, scope: !2278)
!2290 = !DILocation(line: 465, column: 9, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2287, file: !3, line: 464, column: 55)
!2292 = !DILocation(line: 467, column: 23, scope: !2291)
!2293 = !DILocation(line: 467, column: 22, scope: !2291)
!2294 = !DILocation(line: 468, column: 24, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2291, file: !3, line: 468, column: 13)
!2296 = !DILocation(line: 474, column: 5, scope: !2253)
!2297 = !DILocation(line: 477, column: 1, scope: !2253)
!2298 = !DILocation(line: 476, column: 5, scope: !2253)
!2299 = distinct !DISubprogram(name: "GPT_ResetTimer", scope: !84, file: !84, line: 73, type: !2300, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2302)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{null, !139, !139, !69}
!2302 = !{!2303, !2304, !2305}
!2303 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2299, file: !84, line: 73, type: !139)
!2304 = !DILocalVariable(name: "countValue", arg: 2, scope: !2299, file: !84, line: 73, type: !139)
!2305 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !2299, file: !84, line: 73, type: !69)
!2306 = !DILocation(line: 0, scope: !2299)
!2307 = !DILocation(line: 75, column: 5, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2299, file: !84, line: 75, column: 5)
!2309 = !DILocation(line: 75, column: 5, scope: !2299)
!2310 = !DILocation(line: 75, column: 5, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2308, file: !84, line: 75, column: 5)
!2312 = distinct !{!2312, !2310, !2310}
!2313 = !DILocation(line: 77, column: 9, scope: !2299)
!2314 = !DILocation(line: 78, column: 30, scope: !2315)
!2315 = distinct !DILexicalBlock(scope: !2316, file: !84, line: 77, column: 24)
!2316 = distinct !DILexicalBlock(scope: !2299, file: !84, line: 77, column: 9)
!2317 = !DILocation(line: 0, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !2315, file: !84, line: 79, column: 13)
!2319 = !DILocation(line: 79, column: 13, scope: !2315)
!2320 = !DILocation(line: 80, column: 34, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2318, file: !84, line: 79, column: 37)
!2322 = !DILocation(line: 81, column: 9, scope: !2321)
!2323 = !DILocation(line: 82, column: 34, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2318, file: !84, line: 81, column: 16)
!2325 = !DILocation(line: 85, column: 30, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2327, file: !84, line: 84, column: 31)
!2327 = distinct !DILexicalBlock(scope: !2316, file: !84, line: 84, column: 16)
!2328 = !DILocation(line: 0, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !2326, file: !84, line: 86, column: 13)
!2330 = !DILocation(line: 86, column: 13, scope: !2326)
!2331 = !DILocation(line: 87, column: 34, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !2329, file: !84, line: 86, column: 37)
!2333 = !DILocation(line: 88, column: 9, scope: !2332)
!2334 = !DILocation(line: 89, column: 34, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2329, file: !84, line: 88, column: 16)
!2336 = !DILocation(line: 92, column: 1, scope: !2299)
!2337 = distinct !DISubprogram(name: "GPT_Start", scope: !84, file: !84, line: 94, type: !2338, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2340)
!2338 = !DISubroutineType(types: !2339)
!2339 = !{null, !139}
!2340 = !{!2341}
!2341 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2337, file: !84, line: 94, type: !139)
!2342 = !DILocation(line: 0, scope: !2337)
!2343 = !DILocation(line: 96, column: 5, scope: !2337)
!2344 = !DILocation(line: 96, column: 5, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2346, file: !84, line: 96, column: 5)
!2346 = distinct !DILexicalBlock(scope: !2337, file: !84, line: 96, column: 5)
!2347 = distinct !{!2347, !2344, !2344}
!2348 = !DILocation(line: 99, column: 30, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2350, file: !84, line: 98, column: 24)
!2350 = distinct !DILexicalBlock(scope: !2337, file: !84, line: 98, column: 9)
!2351 = !DILocation(line: 100, column: 9, scope: !2349)
!2352 = !DILocation(line: 101, column: 5, scope: !2349)
!2353 = !DILocation(line: 102, column: 30, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2355, file: !84, line: 101, column: 31)
!2355 = distinct !DILexicalBlock(scope: !2350, file: !84, line: 101, column: 16)
!2356 = !DILocation(line: 103, column: 9, scope: !2354)
!2357 = !DILocation(line: 104, column: 5, scope: !2354)
!2358 = !DILocation(line: 105, column: 30, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2360, file: !84, line: 104, column: 31)
!2360 = distinct !DILexicalBlock(scope: !2355, file: !84, line: 104, column: 16)
!2361 = !DILocation(line: 106, column: 5, scope: !2359)
!2362 = !DILocation(line: 108, column: 1, scope: !2337)
!2363 = distinct !DISubprogram(name: "GPT_Stop", scope: !84, file: !84, line: 110, type: !2338, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2364)
!2364 = !{!2365}
!2365 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2363, file: !84, line: 110, type: !139)
!2366 = !DILocation(line: 0, scope: !2363)
!2367 = !DILocation(line: 112, column: 9, scope: !2363)
!2368 = !DILocation(line: 113, column: 30, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !2370, file: !84, line: 112, column: 24)
!2370 = distinct !DILexicalBlock(scope: !2363, file: !84, line: 112, column: 9)
!2371 = !DILocation(line: 114, column: 30, scope: !2369)
!2372 = !DILocation(line: 115, column: 31, scope: !2369)
!2373 = !DILocation(line: 117, column: 5, scope: !2369)
!2374 = !DILocation(line: 118, column: 30, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2376, file: !84, line: 117, column: 31)
!2376 = distinct !DILexicalBlock(scope: !2370, file: !84, line: 117, column: 16)
!2377 = !DILocation(line: 119, column: 30, scope: !2375)
!2378 = !DILocation(line: 120, column: 31, scope: !2375)
!2379 = !DILocation(line: 121, column: 5, scope: !2375)
!2380 = !DILocation(line: 122, column: 30, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2382, file: !84, line: 121, column: 31)
!2382 = distinct !DILexicalBlock(scope: !2376, file: !84, line: 121, column: 16)
!2383 = !DILocation(line: 123, column: 5, scope: !2381)
!2384 = !DILocation(line: 124, column: 30, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2386, file: !84, line: 123, column: 31)
!2386 = distinct !DILexicalBlock(scope: !2382, file: !84, line: 123, column: 16)
!2387 = !DILocation(line: 125, column: 5, scope: !2385)
!2388 = !DILocation(line: 128, column: 1, scope: !2363)
!2389 = distinct !DISubprogram(name: "GPT_INT_Handler", scope: !84, file: !84, line: 130, type: !600, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2390)
!2390 = !{!2391, !2392}
!2391 = !DILocalVariable(name: "irq_number", arg: 1, scope: !2389, file: !84, line: 130, type: !339)
!2392 = !DILocalVariable(name: "GPT_Status", scope: !2389, file: !84, line: 132, type: !321)
!2393 = !DILocation(line: 0, scope: !2389)
!2394 = !DILocation(line: 135, column: 18, scope: !2389)
!2395 = !DILocation(line: 136, column: 26, scope: !2389)
!2396 = !DILocation(line: 136, column: 24, scope: !2389)
!2397 = !DILocation(line: 138, column: 20, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2389, file: !84, line: 138, column: 9)
!2399 = !DILocation(line: 138, column: 9, scope: !2389)
!2400 = !DILocation(line: 141, column: 27, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2398, file: !84, line: 141, column: 16)
!2402 = !DILocation(line: 141, column: 16, scope: !2398)
!2403 = !DILocation(line: 0, scope: !2398)
!2404 = !DILocation(line: 145, column: 1, scope: !2389)
!2405 = distinct !DISubprogram(name: "GPT_init", scope: !84, file: !84, line: 147, type: !2406, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2408)
!2406 = !DISubroutineType(types: !2407)
!2407 = !{null, !139, !139, !153}
!2408 = !{!2409, !2410, !2411}
!2409 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2405, file: !84, line: 147, type: !139)
!2410 = !DILocalVariable(name: "speed_32us", arg: 2, scope: !2405, file: !84, line: 147, type: !139)
!2411 = !DILocalVariable(name: "GPT_Callback", arg: 3, scope: !2405, file: !84, line: 147, type: !153)
!2412 = !DILocation(line: 0, scope: !2405)
!2413 = !DILocation(line: 149, column: 5, scope: !2405)
!2414 = !DILocation(line: 149, column: 5, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2416, file: !84, line: 149, column: 5)
!2416 = distinct !DILexicalBlock(scope: !2405, file: !84, line: 149, column: 5)
!2417 = distinct !{!2417, !2414, !2414}
!2418 = !DILocation(line: 149, column: 5, scope: !2416)
!2419 = !DILocation(line: 151, column: 23, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2405, file: !84, line: 151, column: 9)
!2421 = !DILocation(line: 152, column: 9, scope: !2422)
!2422 = distinct !DILexicalBlock(scope: !2420, file: !84, line: 151, column: 41)
!2423 = !DILocation(line: 153, column: 9, scope: !2422)
!2424 = !DILocation(line: 154, column: 9, scope: !2422)
!2425 = !DILocation(line: 155, column: 5, scope: !2422)
!2426 = !DILocation(line: 157, column: 9, scope: !2405)
!2427 = !DILocation(line: 158, column: 37, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2429, file: !84, line: 157, column: 24)
!2429 = distinct !DILexicalBlock(scope: !2405, file: !84, line: 157, column: 9)
!2430 = !DILocation(line: 159, column: 30, scope: !2428)
!2431 = !DILocation(line: 160, column: 45, scope: !2428)
!2432 = !DILocation(line: 160, column: 30, scope: !2428)
!2433 = !DILocation(line: 161, column: 5, scope: !2428)
!2434 = !DILocation(line: 162, column: 37, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2436, file: !84, line: 161, column: 31)
!2436 = distinct !DILexicalBlock(scope: !2429, file: !84, line: 161, column: 16)
!2437 = !DILocation(line: 163, column: 30, scope: !2435)
!2438 = !DILocation(line: 164, column: 45, scope: !2435)
!2439 = !DILocation(line: 164, column: 30, scope: !2435)
!2440 = !DILocation(line: 165, column: 5, scope: !2435)
!2441 = !DILocation(line: 166, column: 59, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2443, file: !84, line: 165, column: 31)
!2443 = distinct !DILexicalBlock(scope: !2436, file: !84, line: 165, column: 16)
!2444 = !DILocation(line: 166, column: 45, scope: !2442)
!2445 = !DILocation(line: 166, column: 30, scope: !2442)
!2446 = !DILocation(line: 167, column: 5, scope: !2442)
!2447 = !DILocation(line: 168, column: 59, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2449, file: !84, line: 167, column: 31)
!2449 = distinct !DILexicalBlock(scope: !2443, file: !84, line: 167, column: 16)
!2450 = !DILocation(line: 168, column: 45, scope: !2448)
!2451 = !DILocation(line: 168, column: 30, scope: !2448)
!2452 = !DILocation(line: 169, column: 30, scope: !2448)
!2453 = !DILocation(line: 170, column: 5, scope: !2448)
!2454 = !DILocation(line: 171, column: 1, scope: !2405)
!2455 = distinct !DISubprogram(name: "GPT_return_current_count", scope: !84, file: !84, line: 173, type: !2456, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !2458)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!139, !139}
!2458 = !{!2459, !2460}
!2459 = !DILocalVariable(name: "timerNum", arg: 1, scope: !2455, file: !84, line: 173, type: !139)
!2460 = !DILocalVariable(name: "current_count", scope: !2455, file: !84, line: 175, type: !139)
!2461 = !DILocation(line: 0, scope: !2455)
!2462 = !DILocation(line: 177, column: 5, scope: !2455)
!2463 = !DILocation(line: 177, column: 5, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2465, file: !84, line: 177, column: 5)
!2465 = distinct !DILexicalBlock(scope: !2455, file: !84, line: 177, column: 5)
!2466 = distinct !{!2466, !2463, !2463}
!2467 = !DILocation(line: 183, column: 5, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2469, file: !84, line: 181, column: 31)
!2469 = distinct !DILexicalBlock(scope: !2470, file: !84, line: 181, column: 16)
!2470 = distinct !DILexicalBlock(scope: !2455, file: !84, line: 179, column: 9)
!2471 = !DILocation(line: 185, column: 5, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2473, file: !84, line: 183, column: 31)
!2473 = distinct !DILexicalBlock(scope: !2469, file: !84, line: 183, column: 16)
!2474 = !DILocation(line: 187, column: 5, scope: !2475)
!2475 = distinct !DILexicalBlock(scope: !2476, file: !84, line: 185, column: 31)
!2476 = distinct !DILexicalBlock(scope: !2473, file: !84, line: 185, column: 16)
!2477 = !DILocation(line: 0, scope: !2470)
!2478 = !DILocation(line: 189, column: 5, scope: !2455)
!2479 = distinct !DISubprogram(name: "CM4_GPT2Init", scope: !84, file: !84, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1935)
!2480 = !DILocation(line: 195, column: 5, scope: !2479)
!2481 = !DILocation(line: 196, column: 1, scope: !2479)
!2482 = distinct !DISubprogram(name: "CM4_GPT4Init", scope: !84, file: !84, line: 198, type: !154, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1935)
!2483 = !DILocation(line: 200, column: 5, scope: !2482)
!2484 = !DILocation(line: 201, column: 1, scope: !2482)
!2485 = distinct !DISubprogram(name: "hal_trng_init", scope: !1786, file: !1786, line: 59, type: !2486, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !1935)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{!2488}
!2488 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_trng_status_t", file: !1789, line: 96, baseType: !1788)
!2489 = !DILocation(line: 61, column: 5, scope: !2485)
!2490 = distinct !DISubprogram(name: "hal_trng_deinit", scope: !1786, file: !1786, line: 71, type: !2486, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !1935)
!2491 = !DILocation(line: 73, column: 5, scope: !2490)
!2492 = distinct !DISubprogram(name: "hal_trng_get_generated_random_number", scope: !1786, file: !1786, line: 85, type: !2493, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1785, retainedNodes: !2496)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!2488, !2495}
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!2496 = !{!2497, !2498, !2500, !2502, !2504}
!2497 = !DILocalVariable(name: "random_number", arg: 1, scope: !2492, file: !1786, line: 85, type: !2495)
!2498 = !DILocalVariable(name: "cnt", scope: !2492, file: !1786, line: 87, type: !2499)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT16", file: !87, line: 60, baseType: !322)
!2500 = !DILocalVariable(name: "addr", scope: !2501, file: !1786, line: 89, type: !284)
!2501 = distinct !DILexicalBlock(scope: !2492, file: !1786, line: 89, column: 5)
!2502 = !DILocalVariable(name: "addr", scope: !2503, file: !1786, line: 100, type: !284)
!2503 = distinct !DILexicalBlock(scope: !2492, file: !1786, line: 100, column: 5)
!2504 = !DILocalVariable(name: "addr", scope: !2505, file: !1786, line: 101, type: !284)
!2505 = distinct !DILexicalBlock(scope: !2492, file: !1786, line: 101, column: 5)
!2506 = !DILocation(line: 0, scope: !2492)
!2507 = !DILocation(line: 0, scope: !2501)
!2508 = !DILocation(line: 89, column: 5, scope: !2501)
!2509 = !DILocation(line: 91, column: 5, scope: !2492)
!2510 = !DILocation(line: 92, column: 13, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2512, file: !1786, line: 92, column: 13)
!2512 = distinct !DILexicalBlock(scope: !2492, file: !1786, line: 91, column: 23)
!2513 = !DILocation(line: 92, column: 50, scope: !2511)
!2514 = !DILocation(line: 92, column: 13, scope: !2512)
!2515 = !DILocation(line: 95, column: 9, scope: !2512)
!2516 = !DILocation(line: 96, column: 12, scope: !2512)
!2517 = !DILocation(line: 91, column: 16, scope: !2492)
!2518 = distinct !{!2518, !2509, !2519}
!2519 = !DILocation(line: 97, column: 5, scope: !2492)
!2520 = !DILocation(line: 99, column: 22, scope: !2492)
!2521 = !DILocation(line: 99, column: 20, scope: !2492)
!2522 = !DILocation(line: 0, scope: !2503)
!2523 = !DILocation(line: 100, column: 5, scope: !2503)
!2524 = !DILocation(line: 0, scope: !2505)
!2525 = !DILocation(line: 101, column: 5, scope: !2505)
!2526 = !DILocation(line: 103, column: 13, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2492, file: !1786, line: 103, column: 9)
!2528 = !DILocation(line: 103, column: 9, scope: !2492)
!2529 = !DILocation(line: 104, column: 24, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2527, file: !1786, line: 103, column: 21)
!2531 = !DILocation(line: 105, column: 9, scope: !2530)
!2532 = !DILocation(line: 0, scope: !2527)
!2533 = !DILocation(line: 109, column: 1, scope: !2492)
!2534 = distinct !DISubprogram(name: "NVIC_SetupVectorTable", scope: !1796, file: !1796, line: 47, type: !2535, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !2537)
!2535 = !DISubroutineType(types: !2536)
!2536 = !{null, !61}
!2537 = !{!2538}
!2538 = !DILocalVariable(name: "addr", arg: 1, scope: !2534, file: !1796, line: 47, type: !61)
!2539 = !DILocation(line: 0, scope: !2534)
!2540 = !DILocation(line: 49, column: 15, scope: !2534)
!2541 = !DILocation(line: 51, column: 5, scope: !2534)
!2542 = !{i64 2624}
!2543 = !DILocation(line: 52, column: 5, scope: !2534)
!2544 = !{i64 2651}
!2545 = !DILocation(line: 53, column: 1, scope: !2534)
!2546 = distinct !DISubprogram(name: "NVIC_SWInt", scope: !1796, file: !1796, line: 56, type: !2547, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !2549)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{null, !30}
!2549 = !{!2550}
!2550 = !DILocalVariable(name: "source", arg: 1, scope: !2546, file: !1796, line: 56, type: !30)
!2551 = !DILocation(line: 0, scope: !2546)
!2552 = !DILocation(line: 58, column: 16, scope: !2546)
!2553 = !DILocation(line: 59, column: 1, scope: !2546)
!2554 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !1796, file: !1796, line: 61, type: !1916, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !2555)
!2555 = !{!2556}
!2556 = !DILocalVariable(name: "mask", scope: !2554, file: !1796, line: 63, type: !61)
!2557 = !DILocation(line: 470, column: 3, scope: !2558, inlinedAt: !2562)
!2558 = distinct !DISubprogram(name: "__get_PRIMASK", scope: !2559, file: !2559, line: 466, type: !1916, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !2560)
!2559 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!2560 = !{!2561}
!2561 = !DILocalVariable(name: "result", scope: !2558, file: !2559, line: 468, type: !61)
!2562 = distinct !DILocation(line: 64, column: 5, scope: !2563)
!2563 = distinct !DILexicalBlock(scope: !2554, file: !1796, line: 64, column: 5)
!2564 = !{i64 302161}
!2565 = !DILocation(line: 0, scope: !2558, inlinedAt: !2562)
!2566 = !DILocation(line: 0, scope: !2554)
!2567 = !DILocation(line: 330, column: 3, scope: !2568, inlinedAt: !2569)
!2568 = distinct !DISubprogram(name: "__disable_irq", scope: !2559, file: !2559, line: 328, type: !154, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !1935)
!2569 = distinct !DILocation(line: 64, column: 5, scope: !2563)
!2570 = !{i64 298825}
!2571 = !DILocation(line: 65, column: 5, scope: !2554)
!2572 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !1796, file: !1796, line: 68, type: !2535, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !2573)
!2573 = !{!2574}
!2574 = !DILocalVariable(name: "mask", arg: 1, scope: !2572, file: !1796, line: 68, type: !61)
!2575 = !DILocation(line: 0, scope: !2572)
!2576 = !DILocalVariable(name: "priMask", arg: 1, scope: !2577, file: !2559, line: 481, type: !61)
!2577 = distinct !DISubprogram(name: "__set_PRIMASK", scope: !2559, file: !2559, line: 481, type: !2535, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1795, retainedNodes: !2578)
!2578 = !{!2576}
!2579 = !DILocation(line: 0, scope: !2577, inlinedAt: !2580)
!2580 = distinct !DILocation(line: 70, column: 5, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2572, file: !1796, line: 70, column: 5)
!2582 = !DILocation(line: 483, column: 3, scope: !2577, inlinedAt: !2580)
!2583 = !{i64 302479}
!2584 = !DILocation(line: 71, column: 1, scope: !2572)
!2585 = distinct !DISubprogram(name: "sfc_GPT_return_current_count", scope: !165, file: !165, line: 60, type: !2586, scopeLine: 61, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2588)
!2586 = !DISubroutineType(types: !2587)
!2587 = !{!139}
!2588 = !{!2589}
!2589 = !DILocalVariable(name: "current_count", scope: !2585, file: !165, line: 62, type: !139)
!2590 = !DILocation(line: 64, column: 21, scope: !2585)
!2591 = !DILocation(line: 0, scope: !2585)
!2592 = !DILocation(line: 66, column: 5, scope: !2585)
!2593 = distinct !DISubprogram(name: "sfc_get_systime", scope: !165, file: !165, line: 69, type: !2586, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1935)
!2594 = !DILocation(line: 71, column: 12, scope: !2593)
!2595 = !DILocation(line: 71, column: 5, scope: !2593)
!2596 = distinct !DISubprogram(name: "sfc_delay_time", scope: !165, file: !165, line: 74, type: !2338, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2597)
!2597 = !{!2598, !2599, !2600}
!2598 = !DILocalVariable(name: "count", arg: 1, scope: !2596, file: !165, line: 74, type: !139)
!2599 = !DILocalVariable(name: "end_count", scope: !2596, file: !165, line: 76, type: !139)
!2600 = !DILocalVariable(name: "current", scope: !2596, file: !165, line: 76, type: !139)
!2601 = !DILocation(line: 0, scope: !2596)
!2602 = !DILocation(line: 78, column: 17, scope: !2596)
!2603 = !DILocation(line: 78, column: 35, scope: !2596)
!2604 = !DILocation(line: 78, column: 43, scope: !2596)
!2605 = !DILocation(line: 79, column: 15, scope: !2596)
!2606 = !DILocation(line: 80, column: 12, scope: !2596)
!2607 = !DILocation(line: 80, column: 5, scope: !2596)
!2608 = !DILocation(line: 81, column: 19, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2596, file: !165, line: 80, column: 49)
!2610 = distinct !{!2610, !2607, !2611}
!2611 = !DILocation(line: 82, column: 5, scope: !2596)
!2612 = !DILocation(line: 83, column: 1, scope: !2596)
!2613 = distinct !DISubprogram(name: "sfc_delay_ms", scope: !165, file: !165, line: 85, type: !2547, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2614)
!2614 = !{!2615}
!2615 = !DILocalVariable(name: "ms", arg: 1, scope: !2613, file: !165, line: 85, type: !30)
!2616 = !DILocation(line: 0, scope: !2613)
!2617 = !DILocation(line: 87, column: 23, scope: !2613)
!2618 = !DILocation(line: 87, column: 5, scope: !2613)
!2619 = !DILocation(line: 88, column: 1, scope: !2613)
!2620 = distinct !DISubprogram(name: "sfc_getMaxGPRamSize", scope: !165, file: !165, line: 90, type: !2621, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1935)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{!7}
!2623 = !DILocation(line: 92, column: 5, scope: !2620)
!2624 = distinct !DISubprogram(name: "sfc_Init", scope: !165, file: !165, line: 121, type: !1071, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2625)
!2625 = !{!2626, !2627}
!2626 = !DILocalVariable(name: "security_enable", arg: 1, scope: !2624, file: !165, line: 121, type: !7)
!2627 = !DILocalVariable(name: "reg", scope: !2624, file: !165, line: 123, type: !30)
!2628 = !DILocation(line: 0, scope: !2624)
!2629 = !DILocation(line: 125, column: 27, scope: !2624)
!2630 = !DILocation(line: 141, column: 5, scope: !2624)
!2631 = !DILocation(line: 142, column: 5, scope: !2624)
!2632 = !DILocation(line: 143, column: 5, scope: !2624)
!2633 = !DILocation(line: 144, column: 5, scope: !2624)
!2634 = !DILocation(line: 145, column: 5, scope: !2624)
!2635 = !DILocation(line: 147, column: 5, scope: !2624)
!2636 = !DILocation(line: 150, column: 11, scope: !2624)
!2637 = !DILocation(line: 151, column: 9, scope: !2624)
!2638 = !DILocation(line: 152, column: 5, scope: !2624)
!2639 = !DILocation(line: 153, column: 5, scope: !2624)
!2640 = !DILocation(line: 155, column: 11, scope: !2624)
!2641 = !DILocation(line: 156, column: 9, scope: !2624)
!2642 = !DILocation(line: 157, column: 5, scope: !2624)
!2643 = !DILocation(line: 158, column: 5, scope: !2624)
!2644 = !DILocation(line: 160, column: 11, scope: !2624)
!2645 = !DILocation(line: 161, column: 9, scope: !2624)
!2646 = !DILocation(line: 162, column: 5, scope: !2624)
!2647 = !DILocation(line: 163, column: 5, scope: !2624)
!2648 = !DILocation(line: 165, column: 11, scope: !2624)
!2649 = !DILocation(line: 166, column: 9, scope: !2624)
!2650 = !DILocation(line: 167, column: 5, scope: !2624)
!2651 = !DILocation(line: 168, column: 5, scope: !2624)
!2652 = !DILocation(line: 173, column: 9, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2624, file: !165, line: 173, column: 9)
!2654 = !DILocation(line: 173, column: 9, scope: !2624)
!2655 = !DILocation(line: 174, column: 31, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2653, file: !165, line: 173, column: 26)
!2657 = !DILocation(line: 184, column: 9, scope: !2656)
!2658 = !DILocation(line: 185, column: 9, scope: !2656)
!2659 = !DILocation(line: 187, column: 9, scope: !2656)
!2660 = !DILocation(line: 188, column: 9, scope: !2656)
!2661 = !DILocation(line: 189, column: 9, scope: !2656)
!2662 = !DILocation(line: 190, column: 9, scope: !2656)
!2663 = !DILocation(line: 192, column: 9, scope: !2656)
!2664 = !DILocation(line: 193, column: 5, scope: !2656)
!2665 = !DILocation(line: 194, column: 1, scope: !2624)
!2666 = distinct !DISubprogram(name: "sfc_GetDirectMode", scope: !165, file: !165, line: 196, type: !2621, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2667)
!2667 = !{!2668, !2669}
!2668 = !DILocalVariable(name: "qpi_en", scope: !2666, file: !165, line: 198, type: !195)
!2669 = !DILocalVariable(name: "sfc_read_mode", scope: !2666, file: !165, line: 199, type: !195)
!2670 = !DILocation(line: 198, column: 29, scope: !2666)
!2671 = !DILocation(line: 0, scope: !2666)
!2672 = !DILocation(line: 199, column: 36, scope: !2666)
!2673 = !DILocation(line: 199, column: 89, scope: !2666)
!2674 = !DILocation(line: 204, column: 23, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2666, file: !165, line: 204, column: 9)
!2676 = !DILocation(line: 204, column: 9, scope: !2666)
!2677 = !DILocation(line: 218, column: 1, scope: !2666)
!2678 = distinct !DISubprogram(name: "sfc_direct_read_setup", scope: !165, file: !165, line: 221, type: !2679, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2681)
!2679 = !DISubroutineType(types: !2680)
!2680 = !{null, !195, !7}
!2681 = !{!2682, !2683, !2684}
!2682 = !DILocalVariable(name: "reg", arg: 1, scope: !2678, file: !165, line: 221, type: !195)
!2683 = !DILocalVariable(name: "mode", arg: 2, scope: !2678, file: !165, line: 221, type: !7)
!2684 = !DILocalVariable(name: "tmp", scope: !2678, file: !165, line: 223, type: !195)
!2685 = !DILocation(line: 0, scope: !2678)
!2686 = !DILocation(line: 224, column: 5, scope: !2678)
!2687 = !DILocation(line: 236, column: 9, scope: !2678)
!2688 = !DILocation(line: 237, column: 5, scope: !2678)
!2689 = !DILocation(line: 238, column: 1, scope: !2678)
!2690 = distinct !DISubprogram(name: "sfc_Command_List", scope: !165, file: !165, line: 296, type: !2691, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2693)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{null, !193}
!2693 = !{!2694, !2695, !2696, !2697}
!2694 = !DILocalVariable(name: "cmdlist", arg: 1, scope: !2690, file: !165, line: 296, type: !193)
!2695 = !DILocalVariable(name: "i", scope: !2690, file: !165, line: 298, type: !30)
!2696 = !DILocalVariable(name: "val", scope: !2690, file: !165, line: 299, type: !30)
!2697 = !DILocalVariable(name: "force_qpi", scope: !2690, file: !165, line: 299, type: !30)
!2698 = !DILocation(line: 0, scope: !2690)
!2699 = !DILocation(line: 301, column: 10, scope: !2700)
!2700 = distinct !DILexicalBlock(scope: !2690, file: !165, line: 301, column: 9)
!2701 = !DILocation(line: 301, column: 9, scope: !2690)
!2702 = !DILocation(line: 305, column: 11, scope: !2690)
!2703 = !DILocation(line: 310, column: 5, scope: !2690)
!2704 = !DILocation(line: 311, column: 17, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2690, file: !165, line: 310, column: 17)
!2706 = !DILocation(line: 311, column: 9, scope: !2705)
!2707 = !DILocation(line: 319, column: 17, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2705, file: !165, line: 311, column: 29)
!2709 = !DILocation(line: 321, column: 17, scope: !2708)
!2710 = !DILocation(line: 322, column: 17, scope: !2708)
!2711 = !DILocation(line: 325, column: 33, scope: !2705)
!2712 = !DILocation(line: 325, column: 23, scope: !2705)
!2713 = !DILocation(line: 325, column: 49, scope: !2705)
!2714 = !DILocation(line: 325, column: 39, scope: !2705)
!2715 = !DILocation(line: 325, column: 9, scope: !2705)
!2716 = !DILocation(line: 327, column: 15, scope: !2705)
!2717 = !DILocation(line: 327, column: 11, scope: !2705)
!2718 = !DILocation(line: 329, column: 9, scope: !2705)
!2719 = distinct !{!2719, !2703, !2720}
!2720 = !DILocation(line: 330, column: 5, scope: !2690)
!2721 = !DILocation(line: 331, column: 1, scope: !2690)
!2722 = distinct !DISubprogram(name: "sfc_transfer", scope: !165, file: !165, line: 417, type: !2723, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2726)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!7, !193, !2725, !177, !2725, !30}
!2725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!2726 = !{!2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737}
!2727 = !DILocalVariable(name: "cmd", arg: 1, scope: !2722, file: !165, line: 417, type: !193)
!2728 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !2722, file: !165, line: 417, type: !2725)
!2729 = !DILocalVariable(name: "data", arg: 3, scope: !2722, file: !165, line: 417, type: !177)
!2730 = !DILocalVariable(name: "data_len", arg: 4, scope: !2722, file: !165, line: 417, type: !2725)
!2731 = !DILocalVariable(name: "force_qpi", arg: 5, scope: !2722, file: !165, line: 417, type: !30)
!2732 = !DILocalVariable(name: "tmp", scope: !2722, file: !165, line: 419, type: !30)
!2733 = !DILocalVariable(name: "i", scope: !2722, file: !165, line: 419, type: !30)
!2734 = !DILocalVariable(name: "j", scope: !2722, file: !165, line: 419, type: !30)
!2735 = !DILocalVariable(name: "p_data", scope: !2722, file: !165, line: 420, type: !177)
!2736 = !DILocalVariable(name: "p_tmp", scope: !2722, file: !165, line: 420, type: !177)
!2737 = !DILocalVariable(name: "savedMask", scope: !2722, file: !165, line: 421, type: !30)
!2738 = !DILocation(line: 0, scope: !2722)
!2739 = !DILocation(line: 419, column: 5, scope: !2722)
!2740 = !DILocation(line: 423, column: 18, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2722, file: !165, line: 423, column: 9)
!2742 = !DILocation(line: 423, column: 30, scope: !2741)
!2743 = !DILocation(line: 423, column: 9, scope: !2722)
!2744 = !DILocation(line: 430, column: 19, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2746, file: !165, line: 430, column: 5)
!2746 = distinct !DILexicalBlock(scope: !2722, file: !165, line: 430, column: 5)
!2747 = !DILocation(line: 430, column: 5, scope: !2746)
!2748 = !DILocation(line: 431, column: 25, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2750, file: !165, line: 431, column: 9)
!2750 = distinct !DILexicalBlock(scope: !2745, file: !165, line: 430, column: 43)
!2751 = !DILocation(line: 431, column: 32, scope: !2752)
!2752 = distinct !DILexicalBlock(scope: !2749, file: !165, line: 431, column: 9)
!2753 = !DILocation(line: 431, column: 9, scope: !2749)
!2754 = !DILocation(line: 432, column: 24, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2752, file: !165, line: 431, column: 62)
!2756 = !DILocation(line: 432, column: 13, scope: !2755)
!2757 = !DILocation(line: 432, column: 22, scope: !2755)
!2758 = !DILocation(line: 431, column: 53, scope: !2752)
!2759 = !DILocation(line: 431, column: 58, scope: !2752)
!2760 = !DILocation(line: 431, column: 42, scope: !2752)
!2761 = distinct !{!2761, !2753, !2762}
!2762 = !DILocation(line: 433, column: 9, scope: !2749)
!2763 = !DILocation(line: 434, column: 9, scope: !2750)
!2764 = !DILocation(line: 0, scope: !2746)
!2765 = !DILocation(line: 436, column: 15, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2750, file: !165, line: 436, column: 13)
!2767 = !DILocation(line: 436, column: 20, scope: !2766)
!2768 = !DILocation(line: 437, column: 13, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2766, file: !165, line: 436, column: 46)
!2770 = !DILocation(line: 438, column: 13, scope: !2769)
!2771 = !DILocation(line: 440, column: 9, scope: !2769)
!2772 = !DILocation(line: 430, column: 37, scope: !2745)
!2773 = distinct !{!2773, !2747, !2774}
!2774 = !DILocation(line: 441, column: 5, scope: !2746)
!2775 = !DILocation(line: 443, column: 17, scope: !2722)
!2776 = !DILocation(line: 444, column: 9, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2722, file: !165, line: 444, column: 9)
!2778 = !DILocation(line: 444, column: 9, scope: !2722)
!2779 = !DILocation(line: 445, column: 9, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2777, file: !165, line: 444, column: 32)
!2781 = !DILocation(line: 446, column: 9, scope: !2780)
!2782 = !DILocation(line: 447, column: 5, scope: !2780)
!2783 = !DILocation(line: 449, column: 5, scope: !2722)
!2784 = !DILocation(line: 450, column: 5, scope: !2722)
!2785 = !DILocation(line: 452, column: 5, scope: !2722)
!2786 = !DILocation(line: 453, column: 5, scope: !2722)
!2787 = !DILocation(line: 454, column: 5, scope: !2722)
!2788 = !DILocation(line: 456, column: 76, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2790, file: !165, line: 456, column: 5)
!2790 = distinct !DILexicalBlock(scope: !2722, file: !165, line: 456, column: 5)
!2791 = !DILocation(line: 456, column: 5, scope: !2790)
!2792 = !DILocation(line: 456, column: 62, scope: !2790)
!2793 = !DILocation(line: 457, column: 17, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2789, file: !165, line: 456, column: 111)
!2795 = !DILocation(line: 457, column: 15, scope: !2794)
!2796 = !DILocation(line: 456, column: 88, scope: !2789)
!2797 = !DILocation(line: 456, column: 93, scope: !2789)
!2798 = !DILocation(line: 456, column: 101, scope: !2789)
!2799 = distinct !{!2799, !2791, !2800}
!2800 = !DILocation(line: 458, column: 5, scope: !2790)
!2801 = !DILocation(line: 461, column: 1, scope: !2722)
!2802 = distinct !DISubprogram(name: "sfc_MacEnable", scope: !165, file: !165, line: 402, type: !1071, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2803)
!2803 = !{!2804, !2805}
!2804 = !DILocalVariable(name: "force_qpi", arg: 1, scope: !2802, file: !165, line: 402, type: !7)
!2805 = !DILocalVariable(name: "val", scope: !2802, file: !165, line: 404, type: !195)
!2806 = !DILocation(line: 0, scope: !2802)
!2807 = !DILocation(line: 406, column: 11, scope: !2802)
!2808 = !DILocation(line: 408, column: 9, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2802, file: !165, line: 408, column: 9)
!2810 = !DILocation(line: 408, column: 25, scope: !2809)
!2811 = !DILocation(line: 412, column: 9, scope: !2802)
!2812 = !DILocation(line: 414, column: 5, scope: !2802)
!2813 = !DILocation(line: 415, column: 1, scope: !2802)
!2814 = distinct !DISubprogram(name: "sfc_MacWaitReady", scope: !165, file: !165, line: 384, type: !154, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1935)
!2815 = !DILocation(line: 396, column: 5, scope: !2814)
!2816 = !DILocation(line: 397, column: 5, scope: !2814)
!2817 = !DILocation(line: 399, column: 1, scope: !2814)
!2818 = distinct !DISubprogram(name: "sfc_MacTrigger", scope: !165, file: !165, line: 339, type: !2819, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2821)
!2819 = !DISubroutineType(types: !2820)
!2820 = !{!195}
!2821 = !{!2822, !2823}
!2822 = !DILocalVariable(name: "val", scope: !2818, file: !165, line: 341, type: !195)
!2823 = !DILocalVariable(name: "misc_ctl", scope: !2818, file: !165, line: 342, type: !195)
!2824 = !DILocation(line: 0, scope: !2818)
!2825 = !DILocation(line: 344, column: 11, scope: !2818)
!2826 = !DILocation(line: 347, column: 9, scope: !2818)
!2827 = !DILocation(line: 349, column: 5, scope: !2818)
!2828 = !DILocation(line: 352, column: 5, scope: !2818)
!2829 = !DILocation(line: 352, column: 14, scope: !2818)
!2830 = !DILocation(line: 352, column: 44, scope: !2818)
!2831 = !DILocation(line: 352, column: 12, scope: !2818)
!2832 = distinct !{!2832, !2828, !2833}
!2833 = !DILocation(line: 353, column: 9, scope: !2818)
!2834 = !DILocation(line: 354, column: 13, scope: !2818)
!2835 = !DILocation(line: 354, column: 43, scope: !2818)
!2836 = !DILocation(line: 354, column: 5, scope: !2818)
!2837 = distinct !{!2837, !2836, !2838}
!2838 = !DILocation(line: 355, column: 9, scope: !2818)
!2839 = !DILocation(line: 357, column: 5, scope: !2818)
!2840 = distinct !DISubprogram(name: "sfc_MacLeave", scope: !165, file: !165, line: 366, type: !154, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2841)
!2841 = !{!2842}
!2842 = !DILocalVariable(name: "val", scope: !2840, file: !165, line: 368, type: !195)
!2843 = !DILocation(line: 371, column: 11, scope: !2840)
!2844 = !DILocation(line: 0, scope: !2840)
!2845 = !DILocation(line: 372, column: 9, scope: !2840)
!2846 = !DILocation(line: 373, column: 5, scope: !2840)
!2847 = !DILocation(line: 378, column: 11, scope: !2840)
!2848 = !DILocation(line: 379, column: 9, scope: !2840)
!2849 = !DILocation(line: 380, column: 5, scope: !2840)
!2850 = !DILocation(line: 381, column: 1, scope: !2840)
!2851 = distinct !DISubprogram(name: "sfc_clear_gpram", scope: !165, file: !165, line: 463, type: !154, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2852)
!2852 = !{!2853, !2854}
!2853 = !DILocalVariable(name: "i", scope: !2851, file: !165, line: 465, type: !30)
!2854 = !DILocalVariable(name: "p_data", scope: !2851, file: !165, line: 466, type: !177)
!2855 = !DILocation(line: 0, scope: !2851)
!2856 = !DILocation(line: 470, column: 5, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2851, file: !165, line: 470, column: 5)
!2858 = !DILocation(line: 471, column: 9, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2860, file: !165, line: 470, column: 63)
!2860 = distinct !DILexicalBlock(scope: !2857, file: !165, line: 470, column: 5)
!2861 = !DILocation(line: 470, column: 52, scope: !2860)
!2862 = !DILocation(line: 470, column: 59, scope: !2860)
!2863 = !DILocation(line: 470, column: 19, scope: !2860)
!2864 = distinct !{!2864, !2856, !2865}
!2865 = !DILocation(line: 472, column: 5, scope: !2857)
!2866 = !DILocation(line: 475, column: 1, scope: !2851)
!2867 = distinct !DISubprogram(name: "sfc_read", scope: !165, file: !165, line: 478, type: !2868, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2870)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{!7, !193, !2725, !177, !2725}
!2870 = !{!2871, !2872, !2873, !2874}
!2871 = !DILocalVariable(name: "cmd", arg: 1, scope: !2867, file: !165, line: 478, type: !193)
!2872 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !2867, file: !165, line: 478, type: !2725)
!2873 = !DILocalVariable(name: "data", arg: 3, scope: !2867, file: !165, line: 478, type: !177)
!2874 = !DILocalVariable(name: "data_len", arg: 4, scope: !2867, file: !165, line: 478, type: !2725)
!2875 = !DILocation(line: 0, scope: !2867)
!2876 = !DILocation(line: 480, column: 12, scope: !2867)
!2877 = !DILocation(line: 480, column: 5, scope: !2867)
!2878 = distinct !DISubprogram(name: "sfc_write", scope: !165, file: !165, line: 490, type: !2879, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2881)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{!7, !193, !2725, !193, !2725}
!2881 = !{!2882, !2883, !2884, !2885, !2886, !2890}
!2882 = !DILocalVariable(name: "cmd", arg: 1, scope: !2878, file: !165, line: 490, type: !193)
!2883 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !2878, file: !165, line: 490, type: !2725)
!2884 = !DILocalVariable(name: "data", arg: 3, scope: !2878, file: !165, line: 490, type: !193)
!2885 = !DILocalVariable(name: "data_len", arg: 4, scope: !2878, file: !165, line: 490, type: !2725)
!2886 = !DILocalVariable(name: "tmp", scope: !2878, file: !165, line: 492, type: !2887)
!2887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 1280, elements: !2888)
!2888 = !{!2889}
!2889 = !DISubrange(count: 160)
!2890 = !DILocalVariable(name: "total", scope: !2878, file: !165, line: 493, type: !7)
!2891 = !DILocation(line: 0, scope: !2878)
!2892 = !DILocation(line: 492, column: 5, scope: !2878)
!2893 = !DILocation(line: 492, column: 19, scope: !2878)
!2894 = !DILocation(line: 493, column: 25, scope: !2878)
!2895 = !DILocation(line: 495, column: 15, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2878, file: !165, line: 495, column: 9)
!2897 = !DILocation(line: 495, column: 9, scope: !2878)
!2898 = !DILocation(line: 496, column: 9, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2900, file: !165, line: 496, column: 9)
!2900 = distinct !DILexicalBlock(scope: !2901, file: !165, line: 496, column: 9)
!2901 = distinct !DILexicalBlock(scope: !2896, file: !165, line: 495, column: 31)
!2902 = distinct !{!2902, !2898, !2898}
!2903 = !DILocation(line: 498, column: 5, scope: !2878)
!2904 = !DILocation(line: 500, column: 9, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2878, file: !165, line: 500, column: 9)
!2906 = !DILocation(line: 500, column: 14, scope: !2905)
!2907 = !DILocation(line: 501, column: 17, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2905, file: !165, line: 500, column: 27)
!2909 = !DILocation(line: 501, column: 9, scope: !2908)
!2910 = !DILocation(line: 502, column: 5, scope: !2908)
!2911 = !DILocation(line: 503, column: 12, scope: !2878)
!2912 = !DILocation(line: 504, column: 1, scope: !2878)
!2913 = !DILocation(line: 503, column: 5, scope: !2878)
!2914 = distinct !DISubprogram(name: "sfc_security_write_crc", scope: !165, file: !165, line: 506, type: !2915, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2917)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!7, !193, !2725}
!2917 = !{!2918, !2919, !2920, !2921, !2922}
!2918 = !DILocalVariable(name: "cmd", arg: 1, scope: !2914, file: !165, line: 506, type: !193)
!2919 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !2914, file: !165, line: 506, type: !2725)
!2920 = !DILocalVariable(name: "tmp", scope: !2914, file: !165, line: 508, type: !2887)
!2921 = !DILocalVariable(name: "crc", scope: !2914, file: !165, line: 509, type: !195)
!2922 = !DILocalVariable(name: "total", scope: !2914, file: !165, line: 510, type: !7)
!2923 = !DILocation(line: 0, scope: !2914)
!2924 = !DILocation(line: 508, column: 5, scope: !2914)
!2925 = !DILocation(line: 508, column: 19, scope: !2914)
!2926 = !DILocation(line: 509, column: 5, scope: !2914)
!2927 = !DILocation(line: 509, column: 25, scope: !2914)
!2928 = !DILocation(line: 509, column: 19, scope: !2914)
!2929 = !DILocation(line: 510, column: 25, scope: !2914)
!2930 = !DILocation(line: 514, column: 5, scope: !2914)
!2931 = !DILocation(line: 515, column: 13, scope: !2914)
!2932 = !DILocation(line: 515, column: 5, scope: !2914)
!2933 = !DILocation(line: 517, column: 12, scope: !2914)
!2934 = !DILocation(line: 518, column: 1, scope: !2914)
!2935 = !DILocation(line: 517, column: 5, scope: !2914)
!2936 = distinct !DISubprogram(name: "__sfc_write", scope: !165, file: !165, line: 538, type: !2723, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2937)
!2937 = !{!2938, !2939, !2940, !2941, !2942, !2943, !2944}
!2938 = !DILocalVariable(name: "cmd", arg: 1, scope: !2936, file: !165, line: 538, type: !193)
!2939 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !2936, file: !165, line: 538, type: !2725)
!2940 = !DILocalVariable(name: "data", arg: 3, scope: !2936, file: !165, line: 538, type: !177)
!2941 = !DILocalVariable(name: "data_len", arg: 4, scope: !2936, file: !165, line: 538, type: !2725)
!2942 = !DILocalVariable(name: "security_enable", arg: 5, scope: !2936, file: !165, line: 538, type: !30)
!2943 = !DILocalVariable(name: "tmp", scope: !2936, file: !165, line: 540, type: !2887)
!2944 = !DILocalVariable(name: "total", scope: !2936, file: !165, line: 541, type: !7)
!2945 = !DILocation(line: 0, scope: !2936)
!2946 = !DILocation(line: 540, column: 5, scope: !2936)
!2947 = !DILocation(line: 540, column: 19, scope: !2936)
!2948 = !DILocation(line: 541, column: 25, scope: !2936)
!2949 = !DILocation(line: 543, column: 15, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2936, file: !165, line: 543, column: 9)
!2951 = !DILocation(line: 543, column: 9, scope: !2936)
!2952 = !DILocation(line: 544, column: 9, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2954, file: !165, line: 544, column: 9)
!2954 = distinct !DILexicalBlock(scope: !2955, file: !165, line: 544, column: 9)
!2955 = distinct !DILexicalBlock(scope: !2950, file: !165, line: 543, column: 30)
!2956 = distinct !{!2956, !2952, !2952}
!2957 = !DILocation(line: 546, column: 5, scope: !2936)
!2958 = !DILocation(line: 548, column: 9, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2936, file: !165, line: 548, column: 9)
!2960 = !DILocation(line: 548, column: 14, scope: !2959)
!2961 = !DILocation(line: 549, column: 17, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2959, file: !165, line: 548, column: 27)
!2963 = !DILocation(line: 549, column: 9, scope: !2962)
!2964 = !DILocation(line: 550, column: 5, scope: !2962)
!2965 = !DILocation(line: 551, column: 12, scope: !2936)
!2966 = !DILocation(line: 552, column: 1, scope: !2936)
!2967 = !DILocation(line: 551, column: 5, scope: !2936)
!2968 = distinct !DISubprogram(name: "flash_suspend_Winbond", scope: !184, file: !184, line: 186, type: !154, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1935)
!2969 = !DILocation(line: 188, column: 5, scope: !2968)
!2970 = !DILocation(line: 189, column: 5, scope: !2968)
!2971 = distinct !DISubprogram(name: "flash_resume_Winbond", scope: !184, file: !184, line: 195, type: !154, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1935)
!2972 = !DILocation(line: 197, column: 5, scope: !2971)
!2973 = !DILocation(line: 198, column: 5, scope: !2971)
!2974 = distinct !DISubprogram(name: "flash_check_device", scope: !184, file: !184, line: 276, type: !2621, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !2975)
!2975 = !{!2976, !2977, !2978, !2980}
!2976 = !DILocalVariable(name: "i", scope: !2974, file: !184, line: 278, type: !7)
!2977 = !DILocalVariable(name: "jedec", scope: !2974, file: !184, line: 279, type: !195)
!2978 = !DILocalVariable(name: "buf", scope: !2974, file: !184, line: 280, type: !2979)
!2979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 40, elements: !588)
!2980 = !DILocalVariable(name: "info", scope: !2974, file: !184, line: 281, type: !196)
!2981 = !DILocation(line: 280, column: 5, scope: !2974)
!2982 = !DILocation(line: 280, column: 19, scope: !2974)
!2983 = !DILocation(line: 283, column: 5, scope: !2974)
!2984 = !DILocation(line: 284, column: 45, scope: !2974)
!2985 = !DILocation(line: 284, column: 30, scope: !2974)
!2986 = !DILocation(line: 284, column: 52, scope: !2974)
!2987 = !DILocation(line: 284, column: 77, scope: !2974)
!2988 = !DILocation(line: 284, column: 62, scope: !2974)
!2989 = !DILocation(line: 284, column: 84, scope: !2974)
!2990 = !DILocation(line: 284, column: 59, scope: !2974)
!2991 = !DILocation(line: 0, scope: !2974)
!2992 = !DILocation(line: 286, column: 23, scope: !2974)
!2993 = !DILocation(line: 286, column: 21, scope: !2974)
!2994 = !DILocation(line: 288, column: 5, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2974, file: !184, line: 288, column: 5)
!2996 = !DILocation(line: 290, column: 19, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2998, file: !184, line: 290, column: 13)
!2998 = distinct !DILexicalBlock(scope: !2999, file: !184, line: 288, column: 70)
!2999 = distinct !DILexicalBlock(scope: !2995, file: !184, line: 288, column: 5)
!3000 = !DILocation(line: 290, column: 22, scope: !2997)
!3001 = !DILocation(line: 290, column: 32, scope: !2997)
!3002 = !DILocation(line: 290, column: 41, scope: !2997)
!3003 = !DILocation(line: 290, column: 50, scope: !2997)
!3004 = !DILocation(line: 290, column: 13, scope: !2998)
!3005 = !DILocation(line: 289, column: 17, scope: !2998)
!3006 = !DILocation(line: 291, column: 27, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2997, file: !184, line: 290, column: 60)
!3008 = !DILocation(line: 292, column: 26, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !3007, file: !184, line: 292, column: 17)
!3010 = !DILocation(line: 292, column: 17, scope: !3007)
!3011 = !DILocation(line: 294, column: 33, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3009, file: !184, line: 294, column: 24)
!3013 = !DILocation(line: 294, column: 24, scope: !3009)
!3014 = !DILocation(line: 296, column: 33, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3012, file: !184, line: 296, column: 24)
!3016 = !DILocation(line: 296, column: 24, scope: !3012)
!3017 = !DILocation(line: 298, column: 31, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3019, file: !184, line: 298, column: 20)
!3019 = distinct !DILexicalBlock(scope: !3015, file: !184, line: 296, column: 48)
!3020 = !DILocation(line: 298, column: 49, scope: !3018)
!3021 = !DILocation(line: 0, scope: !3018)
!3022 = !DILocation(line: 303, column: 13, scope: !3019)
!3023 = !DILocation(line: 303, column: 33, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3015, file: !184, line: 303, column: 24)
!3025 = !DILocation(line: 303, column: 24, scope: !3015)
!3026 = !DILocation(line: 0, scope: !3009)
!3027 = !DILocation(line: 308, column: 30, scope: !3007)
!3028 = !DILocation(line: 288, column: 66, scope: !2999)
!3029 = !DILocation(line: 288, column: 19, scope: !2999)
!3030 = distinct !{!3030, !2994, !3031}
!3031 = !DILocation(line: 311, column: 5, scope: !2995)
!3032 = !DILocation(line: 313, column: 19, scope: !2974)
!3033 = !DILocation(line: 315, column: 9, scope: !3034)
!3034 = distinct !DILexicalBlock(scope: !2974, file: !184, line: 315, column: 9)
!3035 = !DILocation(line: 315, column: 26, scope: !3034)
!3036 = !DILocation(line: 315, column: 9, scope: !2974)
!3037 = !DILocation(line: 316, column: 51, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3034, file: !184, line: 315, column: 47)
!3039 = !DILocation(line: 316, column: 23, scope: !3038)
!3040 = !DILocation(line: 318, column: 19, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3038, file: !184, line: 318, column: 13)
!3042 = !DILocation(line: 318, column: 25, scope: !3041)
!3043 = !DILocation(line: 318, column: 22, scope: !3041)
!3044 = !DILocation(line: 318, column: 32, scope: !3041)
!3045 = !DILocation(line: 318, column: 41, scope: !3041)
!3046 = !DILocation(line: 318, column: 50, scope: !3041)
!3047 = !DILocation(line: 318, column: 13, scope: !3038)
!3048 = !DILocation(line: 322, column: 13, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3041, file: !184, line: 321, column: 16)
!3050 = !DILocation(line: 323, column: 13, scope: !3049)
!3051 = !DILocation(line: 325, column: 5, scope: !3038)
!3052 = !DILocation(line: 329, column: 1, scope: !2974)
!3053 = distinct !DISubprogram(name: "flash_read_jedec_id", scope: !184, file: !184, line: 495, type: !3054, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3056)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!7, !177, !7}
!3056 = !{!3057, !3058, !3059, !3060}
!3057 = !DILocalVariable(name: "buf", arg: 1, scope: !3053, file: !184, line: 495, type: !177)
!3058 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3053, file: !184, line: 495, type: !7)
!3059 = !DILocalVariable(name: "code", scope: !3053, file: !184, line: 497, type: !58)
!3060 = !DILocalVariable(name: "rc", scope: !3053, file: !184, line: 498, type: !7)
!3061 = !DILocation(line: 0, scope: !3053)
!3062 = !DILocation(line: 497, column: 5, scope: !3053)
!3063 = !DILocation(line: 499, column: 10, scope: !3053)
!3064 = !DILocation(line: 500, column: 10, scope: !3053)
!3065 = !DILocation(line: 503, column: 1, scope: !3053)
!3066 = !DILocation(line: 502, column: 5, scope: !3053)
!3067 = distinct !DISubprogram(name: "flash_switch_mode", scope: !184, file: !184, line: 331, type: !3068, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3070)
!3068 = !DISubroutineType(types: !3069)
!3069 = !{null, !195}
!3070 = !{!3071}
!3071 = !DILocalVariable(name: "mode", arg: 1, scope: !3067, file: !184, line: 331, type: !195)
!3072 = !DILocation(line: 0, scope: !3067)
!3073 = !DILocation(line: 333, column: 9, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3067, file: !184, line: 333, column: 9)
!3075 = !DILocation(line: 333, column: 34, scope: !3074)
!3076 = !DILocation(line: 333, column: 9, scope: !3067)
!3077 = !DILocation(line: 335, column: 26, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3074, file: !184, line: 333, column: 43)
!3079 = !DILocation(line: 336, column: 5, scope: !3078)
!3080 = !DILocation(line: 338, column: 5, scope: !3067)
!3081 = !DILocation(line: 339, column: 5, scope: !3067)
!3082 = !DILocation(line: 341, column: 9, scope: !3067)
!3083 = !DILocation(line: 342, column: 9, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3085, file: !184, line: 341, column: 22)
!3085 = distinct !DILexicalBlock(scope: !3067, file: !184, line: 341, column: 9)
!3086 = !DILocation(line: 343, column: 5, scope: !3084)
!3087 = !DILocation(line: 344, column: 12, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !3089, file: !184, line: 344, column: 12)
!3089 = distinct !DILexicalBlock(scope: !3090, file: !184, line: 343, column: 30)
!3090 = distinct !DILexicalBlock(scope: !3085, file: !184, line: 343, column: 16)
!3091 = !DILocation(line: 344, column: 29, scope: !3088)
!3092 = !DILocation(line: 344, column: 12, scope: !3089)
!3093 = !DILocation(line: 345, column: 13, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3088, file: !184, line: 344, column: 48)
!3095 = !DILocation(line: 346, column: 9, scope: !3094)
!3096 = !DILocation(line: 347, column: 13, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3088, file: !184, line: 346, column: 16)
!3098 = !DILocation(line: 350, column: 9, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3100, file: !184, line: 349, column: 29)
!3100 = distinct !DILexicalBlock(scope: !3090, file: !184, line: 349, column: 16)
!3101 = !DILocation(line: 352, column: 9, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3103, file: !184, line: 352, column: 9)
!3103 = distinct !DILexicalBlock(scope: !3104, file: !184, line: 352, column: 9)
!3104 = distinct !DILexicalBlock(scope: !3100, file: !184, line: 351, column: 12)
!3105 = distinct !{!3105, !3101, !3101}
!3106 = !DILocation(line: 354, column: 21, scope: !3067)
!3107 = !DILocation(line: 355, column: 1, scope: !3067)
!3108 = distinct !DISubprogram(name: "flash_Switch_Device_Mode", scope: !184, file: !184, line: 215, type: !2535, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3109)
!3109 = !{!3110, !3111}
!3110 = !DILocalVariable(name: "mode", arg: 1, scope: !3108, file: !184, line: 215, type: !61)
!3111 = !DILocalVariable(name: "ptr", scope: !3108, file: !184, line: 217, type: !193)
!3112 = !DILocation(line: 0, scope: !3108)
!3113 = !DILocation(line: 220, column: 5, scope: !3108)
!3114 = !DILocation(line: 223, column: 17, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3116, file: !184, line: 223, column: 17)
!3116 = distinct !DILexicalBlock(scope: !3108, file: !184, line: 220, column: 19)
!3117 = !DILocation(line: 223, column: 17, scope: !3116)
!3118 = !DILocation(line: 227, column: 22, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3120, file: !184, line: 227, column: 22)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !184, line: 225, column: 55)
!3121 = distinct !DILexicalBlock(scope: !3115, file: !184, line: 225, column: 23)
!3122 = !DILocation(line: 227, column: 37, scope: !3119)
!3123 = !DILocation(line: 227, column: 22, scope: !3120)
!3124 = !DILocation(line: 230, column: 13, scope: !3120)
!3125 = !DILocation(line: 232, column: 13, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3127, file: !184, line: 230, column: 59)
!3127 = distinct !DILexicalBlock(scope: !3121, file: !184, line: 230, column: 24)
!3128 = !DILocation(line: 233, column: 23, scope: !3129)
!3129 = distinct !DILexicalBlock(scope: !3130, file: !184, line: 232, column: 61)
!3130 = distinct !DILexicalBlock(scope: !3127, file: !184, line: 232, column: 24)
!3131 = !DILocation(line: 234, column: 13, scope: !3129)
!3132 = !DILocation(line: 239, column: 17, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3116, file: !184, line: 239, column: 17)
!3134 = !DILocation(line: 239, column: 17, scope: !3116)
!3135 = !DILocation(line: 243, column: 22, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3137, file: !184, line: 243, column: 22)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !184, line: 241, column: 55)
!3138 = distinct !DILexicalBlock(scope: !3133, file: !184, line: 241, column: 23)
!3139 = !DILocation(line: 243, column: 37, scope: !3136)
!3140 = !DILocation(line: 243, column: 22, scope: !3137)
!3141 = !DILocation(line: 246, column: 13, scope: !3137)
!3142 = !DILocation(line: 248, column: 13, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3144, file: !184, line: 246, column: 59)
!3144 = distinct !DILexicalBlock(scope: !3138, file: !184, line: 246, column: 24)
!3145 = !DILocation(line: 249, column: 23, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !3147, file: !184, line: 248, column: 61)
!3147 = distinct !DILexicalBlock(scope: !3144, file: !184, line: 248, column: 24)
!3148 = !DILocation(line: 250, column: 13, scope: !3146)
!3149 = !DILocation(line: 254, column: 17, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3116, file: !184, line: 254, column: 17)
!3151 = !DILocation(line: 254, column: 17, scope: !3116)
!3152 = !DILocation(line: 258, column: 22, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3154, file: !184, line: 258, column: 22)
!3154 = distinct !DILexicalBlock(scope: !3155, file: !184, line: 256, column: 55)
!3155 = distinct !DILexicalBlock(scope: !3150, file: !184, line: 256, column: 23)
!3156 = !DILocation(line: 258, column: 37, scope: !3153)
!3157 = !DILocation(line: 258, column: 22, scope: !3154)
!3158 = !DILocation(line: 261, column: 13, scope: !3154)
!3159 = !DILocation(line: 263, column: 13, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3161, file: !184, line: 261, column: 59)
!3161 = distinct !DILexicalBlock(scope: !3155, file: !184, line: 261, column: 24)
!3162 = !DILocation(line: 264, column: 23, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3164, file: !184, line: 263, column: 61)
!3164 = distinct !DILexicalBlock(scope: !3161, file: !184, line: 263, column: 24)
!3165 = !DILocation(line: 265, column: 13, scope: !3163)
!3166 = !DILocation(line: 268, column: 13, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3168, file: !184, line: 268, column: 13)
!3168 = distinct !DILexicalBlock(scope: !3116, file: !184, line: 268, column: 13)
!3169 = distinct !{!3169, !3166, !3166}
!3170 = !DILocation(line: 272, column: 5, scope: !3108)
!3171 = !DILocation(line: 0, scope: !3116)
!3172 = !DILocation(line: 273, column: 1, scope: !3108)
!3173 = distinct !DISubprogram(name: "flash_config", scope: !184, file: !184, line: 357, type: !154, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3174)
!3174 = !{!3175, !3176, !3177, !3178}
!3175 = !DILocalVariable(name: "i", scope: !3173, file: !184, line: 360, type: !7)
!3176 = !DILocalVariable(name: "jedec", scope: !3173, file: !184, line: 361, type: !195)
!3177 = !DILocalVariable(name: "buf", scope: !3173, file: !184, line: 362, type: !2979)
!3178 = !DILocalVariable(name: "info", scope: !3173, file: !184, line: 363, type: !196)
!3179 = !DILocation(line: 362, column: 5, scope: !3173)
!3180 = !DILocation(line: 362, column: 19, scope: !3173)
!3181 = !DILocation(line: 377, column: 26, scope: !3173)
!3182 = !DILocation(line: 377, column: 24, scope: !3173)
!3183 = !DILocation(line: 380, column: 19, scope: !3173)
!3184 = !DILocation(line: 382, column: 5, scope: !3173)
!3185 = !DILocation(line: 383, column: 45, scope: !3173)
!3186 = !DILocation(line: 383, column: 30, scope: !3173)
!3187 = !DILocation(line: 383, column: 52, scope: !3173)
!3188 = !DILocation(line: 383, column: 77, scope: !3173)
!3189 = !DILocation(line: 383, column: 62, scope: !3173)
!3190 = !DILocation(line: 383, column: 84, scope: !3173)
!3191 = !DILocation(line: 383, column: 59, scope: !3173)
!3192 = !DILocation(line: 0, scope: !3173)
!3193 = !DILocation(line: 385, column: 5, scope: !3173)
!3194 = !DILocation(line: 387, column: 5, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3173, file: !184, line: 387, column: 5)
!3196 = !DILocation(line: 388, column: 17, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3198, file: !184, line: 387, column: 70)
!3198 = distinct !DILexicalBlock(scope: !3195, file: !184, line: 387, column: 5)
!3199 = !DILocation(line: 389, column: 19, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3197, file: !184, line: 389, column: 13)
!3201 = !DILocation(line: 389, column: 25, scope: !3200)
!3202 = !DILocation(line: 389, column: 22, scope: !3200)
!3203 = !DILocation(line: 389, column: 32, scope: !3200)
!3204 = !DILocation(line: 389, column: 41, scope: !3200)
!3205 = !DILocation(line: 389, column: 50, scope: !3200)
!3206 = !DILocation(line: 389, column: 13, scope: !3197)
!3207 = !DILocation(line: 390, column: 13, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3200, file: !184, line: 389, column: 60)
!3209 = !DILocation(line: 391, column: 27, scope: !3208)
!3210 = !DILocation(line: 392, column: 26, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3208, file: !184, line: 392, column: 17)
!3212 = !DILocation(line: 392, column: 17, scope: !3208)
!3213 = !DILocation(line: 394, column: 33, scope: !3214)
!3214 = distinct !DILexicalBlock(scope: !3211, file: !184, line: 394, column: 24)
!3215 = !DILocation(line: 394, column: 24, scope: !3211)
!3216 = !DILocation(line: 396, column: 33, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3214, file: !184, line: 396, column: 24)
!3218 = !DILocation(line: 396, column: 24, scope: !3214)
!3219 = !DILocation(line: 398, column: 33, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3217, file: !184, line: 398, column: 24)
!3221 = !DILocation(line: 398, column: 24, scope: !3217)
!3222 = !DILocation(line: 399, column: 34, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3220, file: !184, line: 398, column: 52)
!3224 = !DILocation(line: 404, column: 9, scope: !3173)
!3225 = !DILocation(line: 0, scope: !3211)
!3226 = !DILocation(line: 387, column: 66, scope: !3198)
!3227 = !DILocation(line: 387, column: 19, scope: !3198)
!3228 = distinct !{!3228, !3194, !3229}
!3229 = !DILocation(line: 402, column: 5, scope: !3195)
!3230 = !DILocation(line: 404, column: 9, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3173, file: !184, line: 404, column: 9)
!3232 = !DILocation(line: 404, column: 26, scope: !3231)
!3233 = !DILocation(line: 405, column: 51, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3231, file: !184, line: 404, column: 47)
!3235 = !DILocation(line: 405, column: 23, scope: !3234)
!3236 = !DILocation(line: 407, column: 19, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3234, file: !184, line: 407, column: 13)
!3238 = !DILocation(line: 407, column: 25, scope: !3237)
!3239 = !DILocation(line: 407, column: 22, scope: !3237)
!3240 = !DILocation(line: 407, column: 32, scope: !3237)
!3241 = !DILocation(line: 407, column: 41, scope: !3237)
!3242 = !DILocation(line: 407, column: 50, scope: !3237)
!3243 = !DILocation(line: 407, column: 13, scope: !3234)
!3244 = !DILocation(line: 411, column: 13, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3237, file: !184, line: 410, column: 16)
!3246 = !DILocation(line: 412, column: 13, scope: !3245)
!3247 = !DILocation(line: 414, column: 5, scope: !3234)
!3248 = !DILocation(line: 416, column: 10, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3173, file: !184, line: 416, column: 9)
!3250 = !DILocation(line: 416, column: 9, scope: !3173)
!3251 = !DILocation(line: 417, column: 9, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3249, file: !184, line: 416, column: 25)
!3253 = !DILocation(line: 419, column: 23, scope: !3252)
!3254 = !DILocation(line: 420, column: 5, scope: !3252)
!3255 = !DILocation(line: 422, column: 1, scope: !3173)
!3256 = distinct !DISubprogram(name: "flash_init", scope: !184, file: !184, line: 425, type: !1071, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3257)
!3257 = !{!3258, !3259, !3260, !3261, !3262}
!3258 = !DILocalVariable(name: "security_enable", arg: 1, scope: !3256, file: !184, line: 425, type: !7)
!3259 = !DILocalVariable(name: "i", scope: !3256, file: !184, line: 427, type: !7)
!3260 = !DILocalVariable(name: "jedec", scope: !3256, file: !184, line: 428, type: !195)
!3261 = !DILocalVariable(name: "buf", scope: !3256, file: !184, line: 429, type: !2979)
!3262 = !DILocalVariable(name: "info", scope: !3256, file: !184, line: 430, type: !196)
!3263 = !DILocation(line: 0, scope: !3256)
!3264 = !DILocation(line: 429, column: 5, scope: !3256)
!3265 = !DILocation(line: 429, column: 19, scope: !3256)
!3266 = !DILocation(line: 436, column: 5, scope: !3256)
!3267 = !DILocation(line: 438, column: 26, scope: !3256)
!3268 = !DILocation(line: 438, column: 24, scope: !3256)
!3269 = !DILocation(line: 440, column: 5, scope: !3256)
!3270 = !DILocation(line: 442, column: 19, scope: !3256)
!3271 = !DILocation(line: 444, column: 5, scope: !3256)
!3272 = !DILocation(line: 445, column: 45, scope: !3256)
!3273 = !DILocation(line: 445, column: 30, scope: !3256)
!3274 = !DILocation(line: 445, column: 52, scope: !3256)
!3275 = !DILocation(line: 445, column: 77, scope: !3256)
!3276 = !DILocation(line: 445, column: 62, scope: !3256)
!3277 = !DILocation(line: 445, column: 84, scope: !3256)
!3278 = !DILocation(line: 445, column: 59, scope: !3256)
!3279 = !DILocation(line: 447, column: 5, scope: !3256)
!3280 = !DILocation(line: 449, column: 5, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3256, file: !184, line: 449, column: 5)
!3282 = !DILocation(line: 450, column: 17, scope: !3283)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !184, line: 449, column: 70)
!3284 = distinct !DILexicalBlock(scope: !3281, file: !184, line: 449, column: 5)
!3285 = !DILocation(line: 451, column: 19, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3283, file: !184, line: 451, column: 13)
!3287 = !DILocation(line: 451, column: 25, scope: !3286)
!3288 = !DILocation(line: 451, column: 22, scope: !3286)
!3289 = !DILocation(line: 451, column: 32, scope: !3286)
!3290 = !DILocation(line: 451, column: 41, scope: !3286)
!3291 = !DILocation(line: 451, column: 50, scope: !3286)
!3292 = !DILocation(line: 451, column: 13, scope: !3283)
!3293 = !DILocation(line: 452, column: 13, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3286, file: !184, line: 451, column: 60)
!3295 = !DILocation(line: 453, column: 27, scope: !3294)
!3296 = !DILocation(line: 454, column: 9, scope: !3294)
!3297 = !DILocation(line: 449, column: 66, scope: !3284)
!3298 = !DILocation(line: 449, column: 19, scope: !3284)
!3299 = distinct !{!3299, !3280, !3300}
!3300 = !DILocation(line: 455, column: 5, scope: !3281)
!3301 = !DILocation(line: 457, column: 10, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3256, file: !184, line: 457, column: 9)
!3303 = !DILocation(line: 457, column: 9, scope: !3256)
!3304 = !DILocation(line: 458, column: 9, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3302, file: !184, line: 457, column: 25)
!3306 = !DILocation(line: 460, column: 23, scope: !3305)
!3307 = !DILocation(line: 461, column: 5, scope: !3305)
!3308 = !DILocation(line: 462, column: 1, scope: !3256)
!3309 = distinct !DISubprogram(name: "flash_reset", scope: !184, file: !184, line: 170, type: !154, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1935)
!3310 = !DILocation(line: 172, column: 5, scope: !3309)
!3311 = !DILocation(line: 173, column: 5, scope: !3309)
!3312 = !DILocation(line: 176, column: 5, scope: !3309)
!3313 = !DILocation(line: 177, column: 5, scope: !3309)
!3314 = !DILocation(line: 179, column: 5, scope: !3309)
!3315 = distinct !DISubprogram(name: "flash_wait_ready", scope: !184, file: !184, line: 469, type: !3316, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3318)
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!7, !7}
!3318 = !{!3319, !3320, !3321}
!3319 = !DILocalVariable(name: "sleep_ms", arg: 1, scope: !3315, file: !184, line: 469, type: !7)
!3320 = !DILocalVariable(name: "count", scope: !3315, file: !184, line: 471, type: !7)
!3321 = !DILocalVariable(name: "sr", scope: !3315, file: !184, line: 472, type: !58)
!3322 = !DILocation(line: 0, scope: !3315)
!3323 = !DILocation(line: 472, column: 5, scope: !3315)
!3324 = !DILocation(line: 472, column: 19, scope: !3315)
!3325 = !DILocation(line: 479, column: 28, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3327, file: !184, line: 479, column: 5)
!3327 = distinct !DILexicalBlock(scope: !3315, file: !184, line: 479, column: 5)
!3328 = !DILocation(line: 479, column: 5, scope: !3327)
!3329 = !DILocation(line: 480, column: 14, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !184, line: 480, column: 13)
!3331 = distinct !DILexicalBlock(scope: !3326, file: !184, line: 479, column: 64)
!3332 = !DILocation(line: 480, column: 34, scope: !3330)
!3333 = !DILocation(line: 480, column: 13, scope: !3331)
!3334 = !DILocation(line: 482, column: 22, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3330, file: !184, line: 482, column: 20)
!3336 = !DILocation(line: 482, column: 25, scope: !3335)
!3337 = !DILocation(line: 482, column: 20, scope: !3330)
!3338 = !DILocation(line: 493, column: 1, scope: !3315)
!3339 = !DILocation(line: 483, column: 13, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3335, file: !184, line: 482, column: 36)
!3341 = !DILocation(line: 486, column: 9, scope: !3331)
!3342 = !DILocation(line: 479, column: 60, scope: !3326)
!3343 = distinct !{!3343, !3328, !3344}
!3344 = !DILocation(line: 488, column: 5, scope: !3327)
!3345 = !DILocation(line: 491, column: 5, scope: !3315)
!3346 = distinct !DISubprogram(name: "flash_read_sr", scope: !184, file: !184, line: 623, type: !3347, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3349)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{!7, !177}
!3349 = !{!3350, !3351, !3352}
!3350 = !DILocalVariable(name: "val", arg: 1, scope: !3346, file: !184, line: 623, type: !177)
!3351 = !DILocalVariable(name: "retval", scope: !3346, file: !184, line: 625, type: !7)
!3352 = !DILocalVariable(name: "code", scope: !3346, file: !184, line: 626, type: !58)
!3353 = !DILocation(line: 0, scope: !3346)
!3354 = !DILocation(line: 626, column: 5, scope: !3346)
!3355 = !DILocation(line: 626, column: 19, scope: !3346)
!3356 = !DILocation(line: 628, column: 14, scope: !3346)
!3357 = !DILocation(line: 629, column: 16, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3346, file: !184, line: 629, column: 9)
!3359 = !DILocation(line: 634, column: 1, scope: !3346)
!3360 = distinct !DISubprogram(name: "flash_read_manu_id", scope: !184, file: !184, line: 505, type: !3054, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3361)
!3361 = !{!3362, !3363, !3364, !3365}
!3362 = !DILocalVariable(name: "buf", arg: 1, scope: !3360, file: !184, line: 505, type: !177)
!3363 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3360, file: !184, line: 505, type: !7)
!3364 = !DILocalVariable(name: "code", scope: !3360, file: !184, line: 507, type: !229)
!3365 = !DILocalVariable(name: "rc", scope: !3360, file: !184, line: 508, type: !7)
!3366 = !DILocation(line: 0, scope: !3360)
!3367 = !DILocation(line: 507, column: 5, scope: !3360)
!3368 = !DILocation(line: 507, column: 19, scope: !3360)
!3369 = !DILocation(line: 510, column: 10, scope: !3360)
!3370 = !DILocation(line: 513, column: 1, scope: !3360)
!3371 = !DILocation(line: 512, column: 5, scope: !3360)
!3372 = distinct !DISubprogram(name: "flash_read_manu_id_quad", scope: !184, file: !184, line: 515, type: !3054, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3373)
!3373 = !{!3374, !3375, !3376, !3377}
!3374 = !DILocalVariable(name: "buf", arg: 1, scope: !3372, file: !184, line: 515, type: !177)
!3375 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3372, file: !184, line: 515, type: !7)
!3376 = !DILocalVariable(name: "code", scope: !3372, file: !184, line: 517, type: !229)
!3377 = !DILocalVariable(name: "rc", scope: !3372, file: !184, line: 518, type: !7)
!3378 = !DILocation(line: 0, scope: !3372)
!3379 = !DILocation(line: 517, column: 5, scope: !3372)
!3380 = !DILocation(line: 517, column: 19, scope: !3372)
!3381 = !DILocation(line: 520, column: 10, scope: !3372)
!3382 = !DILocation(line: 523, column: 1, scope: !3372)
!3383 = !DILocation(line: 522, column: 5, scope: !3372)
!3384 = distinct !DISubprogram(name: "flash_read", scope: !184, file: !184, line: 526, type: !3385, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3387)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!7, !177, !30, !7}
!3387 = !{!3388, !3389, !3390, !3391, !3392}
!3388 = !DILocalVariable(name: "buf", arg: 1, scope: !3384, file: !184, line: 526, type: !177)
!3389 = !DILocalVariable(name: "from", arg: 2, scope: !3384, file: !184, line: 526, type: !30)
!3390 = !DILocalVariable(name: "len", arg: 3, scope: !3384, file: !184, line: 526, type: !7)
!3391 = !DILocalVariable(name: "cmd", scope: !3384, file: !184, line: 528, type: !229)
!3392 = !DILocalVariable(name: "rdlen", scope: !3384, file: !184, line: 529, type: !7)
!3393 = !DILocation(line: 0, scope: !3384)
!3394 = !DILocation(line: 528, column: 5, scope: !3384)
!3395 = !DILocation(line: 528, column: 19, scope: !3384)
!3396 = !DILocation(line: 532, column: 13, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3384, file: !184, line: 532, column: 9)
!3398 = !DILocation(line: 532, column: 9, scope: !3384)
!3399 = !DILocation(line: 537, column: 9, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3384, file: !184, line: 537, column: 9)
!3401 = !DILocation(line: 542, column: 22, scope: !3384)
!3402 = !DILocation(line: 543, column: 12, scope: !3384)
!3403 = !DILocation(line: 544, column: 19, scope: !3384)
!3404 = !DILocation(line: 544, column: 14, scope: !3384)
!3405 = !DILocation(line: 544, column: 5, scope: !3384)
!3406 = !DILocation(line: 544, column: 12, scope: !3384)
!3407 = !DILocation(line: 545, column: 19, scope: !3384)
!3408 = !DILocation(line: 545, column: 14, scope: !3384)
!3409 = !DILocation(line: 545, column: 5, scope: !3384)
!3410 = !DILocation(line: 545, column: 12, scope: !3384)
!3411 = !DILocation(line: 546, column: 14, scope: !3384)
!3412 = !DILocation(line: 546, column: 5, scope: !3384)
!3413 = !DILocation(line: 546, column: 12, scope: !3384)
!3414 = !DILocation(line: 548, column: 13, scope: !3384)
!3415 = !DILocation(line: 553, column: 5, scope: !3384)
!3416 = !DILocation(line: 554, column: 1, scope: !3384)
!3417 = distinct !DISubprogram(name: "flash_fast_read", scope: !184, file: !184, line: 557, type: !3418, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3420)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!7, !177, !30, !7, !7}
!3420 = !{!3421, !3422, !3423, !3424, !3425, !3427, !3428, !3429}
!3421 = !DILocalVariable(name: "buf", arg: 1, scope: !3417, file: !184, line: 557, type: !177)
!3422 = !DILocalVariable(name: "from", arg: 2, scope: !3417, file: !184, line: 557, type: !30)
!3423 = !DILocalVariable(name: "len", arg: 3, scope: !3417, file: !184, line: 557, type: !7)
!3424 = !DILocalVariable(name: "dummy_cycle", arg: 4, scope: !3417, file: !184, line: 557, type: !7)
!3425 = !DILocalVariable(name: "cmd", scope: !3417, file: !184, line: 559, type: !3426)
!3426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 256, elements: !1081)
!3427 = !DILocalVariable(name: "cmd_len", scope: !3417, file: !184, line: 560, type: !7)
!3428 = !DILocalVariable(name: "rdlen", scope: !3417, file: !184, line: 561, type: !7)
!3429 = !DILocalVariable(name: "i", scope: !3417, file: !184, line: 561, type: !7)
!3430 = !DILocation(line: 0, scope: !3417)
!3431 = !DILocation(line: 559, column: 5, scope: !3417)
!3432 = !DILocation(line: 559, column: 19, scope: !3417)
!3433 = !DILocation(line: 564, column: 13, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3417, file: !184, line: 564, column: 9)
!3435 = !DILocation(line: 564, column: 9, scope: !3417)
!3436 = !DILocation(line: 569, column: 9, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3417, file: !184, line: 569, column: 9)
!3438 = !DILocation(line: 574, column: 12, scope: !3417)
!3439 = !DILocation(line: 575, column: 19, scope: !3417)
!3440 = !DILocation(line: 575, column: 14, scope: !3417)
!3441 = !DILocation(line: 575, column: 5, scope: !3417)
!3442 = !DILocation(line: 575, column: 12, scope: !3417)
!3443 = !DILocation(line: 576, column: 19, scope: !3417)
!3444 = !DILocation(line: 576, column: 14, scope: !3417)
!3445 = !DILocation(line: 576, column: 5, scope: !3417)
!3446 = !DILocation(line: 576, column: 12, scope: !3417)
!3447 = !DILocation(line: 577, column: 14, scope: !3417)
!3448 = !DILocation(line: 577, column: 5, scope: !3417)
!3449 = !DILocation(line: 577, column: 12, scope: !3417)
!3450 = !DILocation(line: 580, column: 19, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !184, line: 580, column: 5)
!3452 = distinct !DILexicalBlock(scope: !3417, file: !184, line: 580, column: 5)
!3453 = !DILocation(line: 580, column: 5, scope: !3452)
!3454 = !DILocation(line: 581, column: 15, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3451, file: !184, line: 580, column: 62)
!3456 = !DILocation(line: 581, column: 9, scope: !3455)
!3457 = !DILocation(line: 581, column: 20, scope: !3455)
!3458 = !DILocation(line: 580, column: 58, scope: !3451)
!3459 = !DILocation(line: 580, column: 33, scope: !3451)
!3460 = distinct !{!3460, !3453, !3461}
!3461 = !DILocation(line: 583, column: 5, scope: !3452)
!3462 = !DILocation(line: 585, column: 13, scope: !3417)
!3463 = !DILocation(line: 590, column: 5, scope: !3417)
!3464 = !DILocation(line: 591, column: 1, scope: !3417)
!3465 = distinct !DISubprogram(name: "flash_read_sr2", scope: !184, file: !184, line: 636, type: !3347, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3466)
!3466 = !{!3467, !3468, !3469}
!3467 = !DILocalVariable(name: "val", arg: 1, scope: !3465, file: !184, line: 636, type: !177)
!3468 = !DILocalVariable(name: "retval", scope: !3465, file: !184, line: 638, type: !7)
!3469 = !DILocalVariable(name: "code", scope: !3465, file: !184, line: 639, type: !58)
!3470 = !DILocation(line: 0, scope: !3465)
!3471 = !DILocation(line: 639, column: 5, scope: !3465)
!3472 = !DILocation(line: 641, column: 9, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3465, file: !184, line: 641, column: 9)
!3474 = !DILocation(line: 641, column: 45, scope: !3473)
!3475 = !DILocation(line: 643, column: 14, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3473, file: !184, line: 641, column: 80)
!3477 = !DILocation(line: 644, column: 5, scope: !3476)
!3478 = !DILocation(line: 646, column: 14, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !184, line: 644, column: 50)
!3480 = distinct !DILexicalBlock(scope: !3473, file: !184, line: 644, column: 16)
!3481 = !DILocation(line: 647, column: 5, scope: !3479)
!3482 = !DILocation(line: 649, column: 14, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !184, line: 647, column: 52)
!3484 = distinct !DILexicalBlock(scope: !3480, file: !184, line: 647, column: 16)
!3485 = !DILocation(line: 650, column: 5, scope: !3483)
!3486 = !DILocation(line: 652, column: 16, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !184, line: 650, column: 54)
!3488 = distinct !DILexicalBlock(scope: !3484, file: !184, line: 650, column: 16)
!3489 = !DILocation(line: 652, column: 14, scope: !3487)
!3490 = !DILocation(line: 653, column: 5, scope: !3487)
!3491 = !DILocation(line: 655, column: 9, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3488, file: !184, line: 654, column: 10)
!3493 = !DILocation(line: 656, column: 14, scope: !3492)
!3494 = !DILocation(line: 659, column: 14, scope: !3465)
!3495 = !DILocation(line: 660, column: 16, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3465, file: !184, line: 660, column: 9)
!3497 = !DILocation(line: 665, column: 1, scope: !3465)
!3498 = distinct !DISubprogram(name: "flash_unprotect", scope: !184, file: !184, line: 667, type: !2621, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3499)
!3499 = !{!3500}
!3500 = !DILocalVariable(name: "sr", scope: !3498, file: !184, line: 669, type: !58)
!3501 = !DILocation(line: 669, column: 5, scope: !3498)
!3502 = !DILocation(line: 0, scope: !3498)
!3503 = !DILocation(line: 669, column: 19, scope: !3498)
!3504 = !DILocation(line: 671, column: 9, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3498, file: !184, line: 671, column: 9)
!3506 = !DILocation(line: 671, column: 28, scope: !3505)
!3507 = !DILocation(line: 671, column: 9, scope: !3498)
!3508 = !DILocation(line: 676, column: 10, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3498, file: !184, line: 676, column: 9)
!3510 = !DILocation(line: 676, column: 13, scope: !3509)
!3511 = !DILocation(line: 676, column: 43, scope: !3509)
!3512 = !DILocation(line: 676, column: 9, scope: !3498)
!3513 = !DILocation(line: 677, column: 12, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3509, file: !184, line: 676, column: 49)
!3515 = !DILocation(line: 678, column: 9, scope: !3514)
!3516 = !DILocation(line: 679, column: 5, scope: !3514)
!3517 = !DILocation(line: 681, column: 1, scope: !3498)
!3518 = distinct !DISubprogram(name: "flash_write_sr", scope: !184, file: !184, line: 609, type: !3347, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3519)
!3519 = !{!3520, !3521, !3522}
!3520 = !DILocalVariable(name: "val", arg: 1, scope: !3518, file: !184, line: 609, type: !177)
!3521 = !DILocalVariable(name: "retval", scope: !3518, file: !184, line: 611, type: !7)
!3522 = !DILocalVariable(name: "code", scope: !3518, file: !184, line: 612, type: !58)
!3523 = !DILocation(line: 0, scope: !3518)
!3524 = !DILocation(line: 612, column: 5, scope: !3518)
!3525 = !DILocation(line: 612, column: 20, scope: !3518)
!3526 = !DILocation(line: 614, column: 14, scope: !3518)
!3527 = !DILocation(line: 621, column: 1, scope: !3518)
!3528 = distinct !DISubprogram(name: "flash_protect", scope: !184, file: !184, line: 686, type: !2621, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3529)
!3529 = !{!3530}
!3530 = !DILocalVariable(name: "sr", scope: !3528, file: !184, line: 688, type: !58)
!3531 = !DILocation(line: 688, column: 5, scope: !3528)
!3532 = !DILocation(line: 0, scope: !3528)
!3533 = !DILocation(line: 688, column: 19, scope: !3528)
!3534 = !DILocation(line: 690, column: 9, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3528, file: !184, line: 690, column: 9)
!3536 = !DILocation(line: 690, column: 28, scope: !3535)
!3537 = !DILocation(line: 690, column: 9, scope: !3528)
!3538 = !DILocation(line: 695, column: 8, scope: !3528)
!3539 = !DILocation(line: 696, column: 5, scope: !3528)
!3540 = !DILocation(line: 697, column: 5, scope: !3528)
!3541 = !DILocation(line: 698, column: 1, scope: !3528)
!3542 = distinct !DISubprogram(name: "flash_write_enable", scope: !184, file: !184, line: 701, type: !2621, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3543)
!3543 = !{!3544}
!3544 = !DILocalVariable(name: "code", scope: !3542, file: !184, line: 703, type: !58)
!3545 = !DILocation(line: 703, column: 5, scope: !3542)
!3546 = !DILocation(line: 0, scope: !3542)
!3547 = !DILocation(line: 703, column: 19, scope: !3542)
!3548 = !DILocation(line: 704, column: 12, scope: !3542)
!3549 = !DILocation(line: 705, column: 1, scope: !3542)
!3550 = !DILocation(line: 704, column: 5, scope: !3542)
!3551 = distinct !DISubprogram(name: "flash_write_disable", scope: !184, file: !184, line: 707, type: !2621, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3552)
!3552 = !{!3553}
!3553 = !DILocalVariable(name: "code", scope: !3551, file: !184, line: 709, type: !58)
!3554 = !DILocation(line: 709, column: 5, scope: !3551)
!3555 = !DILocation(line: 0, scope: !3551)
!3556 = !DILocation(line: 709, column: 19, scope: !3551)
!3557 = !DILocation(line: 710, column: 12, scope: !3551)
!3558 = !DILocation(line: 711, column: 1, scope: !3551)
!3559 = !DILocation(line: 710, column: 5, scope: !3551)
!3560 = distinct !DISubprogram(name: "flash_erase_sector", scope: !184, file: !184, line: 713, type: !3561, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3563)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{!7, !30}
!3563 = !{!3564, !3565, !3566, !3567}
!3564 = !DILocalVariable(name: "offset", arg: 1, scope: !3560, file: !184, line: 713, type: !30)
!3565 = !DILocalVariable(name: "buf", scope: !3560, file: !184, line: 715, type: !2979)
!3566 = !DILocalVariable(name: "savedMask", scope: !3560, file: !184, line: 716, type: !61)
!3567 = !DILocalVariable(name: "result", scope: !3560, file: !184, line: 717, type: !527)
!3568 = !DILocation(line: 0, scope: !3560)
!3569 = !DILocation(line: 715, column: 5, scope: !3560)
!3570 = !DILocation(line: 715, column: 19, scope: !3560)
!3571 = !DILocation(line: 720, column: 9, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3560, file: !184, line: 720, column: 9)
!3573 = !DILocation(line: 724, column: 22, scope: !3560)
!3574 = !DILocation(line: 725, column: 5, scope: !3560)
!3575 = !DILocation(line: 726, column: 18, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3560, file: !184, line: 725, column: 8)
!3577 = !DILocation(line: 727, column: 19, scope: !3560)
!3578 = !DILocation(line: 727, column: 5, scope: !3576)
!3579 = distinct !{!3579, !3574, !3580}
!3580 = !DILocation(line: 727, column: 28, scope: !3560)
!3581 = !DILocation(line: 729, column: 17, scope: !3560)
!3582 = !DILocation(line: 732, column: 12, scope: !3560)
!3583 = !DILocation(line: 733, column: 21, scope: !3560)
!3584 = !DILocation(line: 733, column: 14, scope: !3560)
!3585 = !DILocation(line: 733, column: 5, scope: !3560)
!3586 = !DILocation(line: 733, column: 12, scope: !3560)
!3587 = !DILocation(line: 734, column: 21, scope: !3560)
!3588 = !DILocation(line: 734, column: 14, scope: !3560)
!3589 = !DILocation(line: 734, column: 5, scope: !3560)
!3590 = !DILocation(line: 734, column: 12, scope: !3560)
!3591 = !DILocation(line: 735, column: 14, scope: !3560)
!3592 = !DILocation(line: 735, column: 5, scope: !3560)
!3593 = !DILocation(line: 735, column: 12, scope: !3560)
!3594 = !DILocation(line: 736, column: 5, scope: !3560)
!3595 = !DILocation(line: 737, column: 5, scope: !3560)
!3596 = !DILocation(line: 738, column: 5, scope: !3560)
!3597 = !DILocation(line: 740, column: 5, scope: !3560)
!3598 = !DILocation(line: 741, column: 18, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3560, file: !184, line: 740, column: 8)
!3600 = !DILocation(line: 742, column: 19, scope: !3560)
!3601 = !DILocation(line: 742, column: 5, scope: !3599)
!3602 = distinct !{!3602, !3597, !3603}
!3603 = !DILocation(line: 742, column: 28, scope: !3560)
!3604 = !DILocation(line: 744, column: 5, scope: !3560)
!3605 = !DILocation(line: 746, column: 1, scope: !3560)
!3606 = distinct !DISubprogram(name: "flash_erase_sector_32k", scope: !184, file: !184, line: 748, type: !3561, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3607)
!3607 = !{!3608, !3609, !3610, !3611}
!3608 = !DILocalVariable(name: "offset", arg: 1, scope: !3606, file: !184, line: 748, type: !30)
!3609 = !DILocalVariable(name: "buf", scope: !3606, file: !184, line: 750, type: !2979)
!3610 = !DILocalVariable(name: "savedMask", scope: !3606, file: !184, line: 751, type: !61)
!3611 = !DILocalVariable(name: "result", scope: !3606, file: !184, line: 752, type: !527)
!3612 = !DILocation(line: 0, scope: !3606)
!3613 = !DILocation(line: 750, column: 5, scope: !3606)
!3614 = !DILocation(line: 750, column: 19, scope: !3606)
!3615 = !DILocation(line: 755, column: 9, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3606, file: !184, line: 755, column: 9)
!3617 = !DILocation(line: 759, column: 22, scope: !3606)
!3618 = !DILocation(line: 760, column: 5, scope: !3606)
!3619 = !DILocation(line: 761, column: 18, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3606, file: !184, line: 760, column: 8)
!3621 = !DILocation(line: 762, column: 19, scope: !3606)
!3622 = !DILocation(line: 762, column: 5, scope: !3620)
!3623 = distinct !{!3623, !3618, !3624}
!3624 = !DILocation(line: 762, column: 28, scope: !3606)
!3625 = !DILocation(line: 764, column: 17, scope: !3606)
!3626 = !DILocation(line: 765, column: 12, scope: !3606)
!3627 = !DILocation(line: 766, column: 21, scope: !3606)
!3628 = !DILocation(line: 766, column: 14, scope: !3606)
!3629 = !DILocation(line: 766, column: 5, scope: !3606)
!3630 = !DILocation(line: 766, column: 12, scope: !3606)
!3631 = !DILocation(line: 767, column: 21, scope: !3606)
!3632 = !DILocation(line: 767, column: 14, scope: !3606)
!3633 = !DILocation(line: 767, column: 5, scope: !3606)
!3634 = !DILocation(line: 767, column: 12, scope: !3606)
!3635 = !DILocation(line: 768, column: 14, scope: !3606)
!3636 = !DILocation(line: 768, column: 5, scope: !3606)
!3637 = !DILocation(line: 768, column: 12, scope: !3606)
!3638 = !DILocation(line: 769, column: 5, scope: !3606)
!3639 = !DILocation(line: 770, column: 5, scope: !3606)
!3640 = !DILocation(line: 771, column: 5, scope: !3606)
!3641 = !DILocation(line: 772, column: 18, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3606, file: !184, line: 771, column: 8)
!3643 = !DILocation(line: 773, column: 19, scope: !3606)
!3644 = !DILocation(line: 773, column: 5, scope: !3642)
!3645 = distinct !{!3645, !3640, !3646}
!3646 = !DILocation(line: 773, column: 28, scope: !3606)
!3647 = !DILocation(line: 775, column: 5, scope: !3606)
!3648 = !DILocation(line: 777, column: 5, scope: !3606)
!3649 = !DILocation(line: 779, column: 1, scope: !3606)
!3650 = distinct !DISubprogram(name: "flash_erase_page", scope: !184, file: !184, line: 781, type: !3561, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3651)
!3651 = !{!3652, !3653, !3654, !3655}
!3652 = !DILocalVariable(name: "offset", arg: 1, scope: !3650, file: !184, line: 781, type: !30)
!3653 = !DILocalVariable(name: "buf", scope: !3650, file: !184, line: 783, type: !2979)
!3654 = !DILocalVariable(name: "savedMask", scope: !3650, file: !184, line: 784, type: !61)
!3655 = !DILocalVariable(name: "result", scope: !3650, file: !184, line: 785, type: !527)
!3656 = !DILocation(line: 0, scope: !3650)
!3657 = !DILocation(line: 783, column: 5, scope: !3650)
!3658 = !DILocation(line: 783, column: 19, scope: !3650)
!3659 = !DILocation(line: 788, column: 9, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3650, file: !184, line: 788, column: 9)
!3661 = !DILocation(line: 792, column: 22, scope: !3650)
!3662 = !DILocation(line: 793, column: 5, scope: !3650)
!3663 = !DILocation(line: 794, column: 18, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3650, file: !184, line: 793, column: 8)
!3665 = !DILocation(line: 795, column: 19, scope: !3650)
!3666 = !DILocation(line: 795, column: 5, scope: !3664)
!3667 = distinct !{!3667, !3662, !3668}
!3668 = !DILocation(line: 795, column: 28, scope: !3650)
!3669 = !DILocation(line: 798, column: 17, scope: !3650)
!3670 = !DILocation(line: 799, column: 12, scope: !3650)
!3671 = !DILocation(line: 800, column: 21, scope: !3650)
!3672 = !DILocation(line: 800, column: 14, scope: !3650)
!3673 = !DILocation(line: 800, column: 5, scope: !3650)
!3674 = !DILocation(line: 800, column: 12, scope: !3650)
!3675 = !DILocation(line: 801, column: 21, scope: !3650)
!3676 = !DILocation(line: 801, column: 14, scope: !3650)
!3677 = !DILocation(line: 801, column: 5, scope: !3650)
!3678 = !DILocation(line: 801, column: 12, scope: !3650)
!3679 = !DILocation(line: 802, column: 14, scope: !3650)
!3680 = !DILocation(line: 802, column: 5, scope: !3650)
!3681 = !DILocation(line: 802, column: 12, scope: !3650)
!3682 = !DILocation(line: 803, column: 5, scope: !3650)
!3683 = !DILocation(line: 805, column: 5, scope: !3650)
!3684 = !DILocation(line: 806, column: 5, scope: !3650)
!3685 = !DILocation(line: 808, column: 5, scope: !3650)
!3686 = !DILocation(line: 809, column: 18, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3650, file: !184, line: 808, column: 8)
!3688 = !DILocation(line: 810, column: 19, scope: !3650)
!3689 = !DILocation(line: 810, column: 5, scope: !3687)
!3690 = distinct !{!3690, !3685, !3691}
!3691 = !DILocation(line: 810, column: 28, scope: !3650)
!3692 = !DILocation(line: 812, column: 5, scope: !3650)
!3693 = !DILocation(line: 814, column: 1, scope: !3650)
!3694 = distinct !DISubprogram(name: "flash_erase_chip", scope: !184, file: !184, line: 816, type: !2621, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3695)
!3695 = !{!3696}
!3696 = !DILocalVariable(name: "buf", scope: !3694, file: !184, line: 818, type: !2979)
!3697 = !DILocation(line: 818, column: 5, scope: !3694)
!3698 = !DILocation(line: 818, column: 19, scope: !3694)
!3699 = !DILocation(line: 821, column: 9, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3694, file: !184, line: 821, column: 9)
!3701 = !DILocation(line: 825, column: 22, scope: !3694)
!3702 = !DILocation(line: 827, column: 5, scope: !3694)
!3703 = !DILocation(line: 828, column: 5, scope: !3694)
!3704 = !DILocation(line: 830, column: 12, scope: !3694)
!3705 = !DILocation(line: 832, column: 5, scope: !3694)
!3706 = !DILocation(line: 834, column: 9, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3694, file: !184, line: 834, column: 9)
!3708 = !DILocation(line: 838, column: 5, scope: !3694)
!3709 = !DILocation(line: 839, column: 22, scope: !3694)
!3710 = !DILocation(line: 841, column: 1, scope: !3694)
!3711 = distinct !DISubprogram(name: "flash_erase", scope: !184, file: !184, line: 844, type: !3712, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3714)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{!7, !30, !7}
!3714 = !{!3715, !3716}
!3715 = !DILocalVariable(name: "offs", arg: 1, scope: !3711, file: !184, line: 844, type: !30)
!3716 = !DILocalVariable(name: "len", arg: 2, scope: !3711, file: !184, line: 844, type: !7)
!3717 = !DILocation(line: 0, scope: !3711)
!3718 = !DILocation(line: 849, column: 9, scope: !3711)
!3719 = !DILocation(line: 855, column: 13, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !184, line: 855, column: 13)
!3721 = distinct !DILexicalBlock(scope: !3711, file: !184, line: 854, column: 21)
!3722 = !DILocation(line: 859, column: 17, scope: !3721)
!3723 = !DILocation(line: 859, column: 32, scope: !3721)
!3724 = !DILocation(line: 859, column: 14, scope: !3721)
!3725 = !DILocation(line: 860, column: 13, scope: !3721)
!3726 = !DILocation(line: 854, column: 16, scope: !3711)
!3727 = !DILocation(line: 854, column: 5, scope: !3711)
!3728 = distinct !{!3728, !3727, !3729}
!3729 = !DILocation(line: 861, column: 5, scope: !3711)
!3730 = !DILocation(line: 864, column: 1, scope: !3711)
!3731 = distinct !DISubprogram(name: "flash_write", scope: !184, file: !184, line: 868, type: !3732, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3734)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!7, !193, !30, !7}
!3734 = !{!3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748}
!3735 = !DILocalVariable(name: "buf", arg: 1, scope: !3731, file: !184, line: 868, type: !193)
!3736 = !DILocalVariable(name: "to", arg: 2, scope: !3731, file: !184, line: 868, type: !30)
!3737 = !DILocalVariable(name: "len", arg: 3, scope: !3731, file: !184, line: 868, type: !7)
!3738 = !DILocalVariable(name: "page_offset", scope: !3731, file: !184, line: 870, type: !195)
!3739 = !DILocalVariable(name: "page_size", scope: !3731, file: !184, line: 870, type: !195)
!3740 = !DILocalVariable(name: "rc", scope: !3731, file: !184, line: 871, type: !7)
!3741 = !DILocalVariable(name: "retlen", scope: !3731, file: !184, line: 871, type: !7)
!3742 = !DILocalVariable(name: "mode", scope: !3731, file: !184, line: 872, type: !7)
!3743 = !DILocalVariable(name: "cmd", scope: !3731, file: !184, line: 873, type: !2979)
!3744 = !DILocalVariable(name: "result", scope: !3731, file: !184, line: 874, type: !527)
!3745 = !DILocalVariable(name: "savedMask", scope: !3731, file: !184, line: 875, type: !61)
!3746 = !DILocalVariable(name: "To", scope: !3731, file: !184, line: 877, type: !61)
!3747 = !DILocalVariable(name: "Buf", scope: !3731, file: !184, line: 878, type: !2077)
!3748 = !DILocalVariable(name: "p_data_first", scope: !3731, file: !184, line: 879, type: !2077)
!3749 = !DILocation(line: 0, scope: !3731)
!3750 = !DILocation(line: 873, column: 5, scope: !3731)
!3751 = !DILocation(line: 873, column: 19, scope: !3731)
!3752 = !DILocation(line: 882, column: 13, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3731, file: !184, line: 882, column: 9)
!3754 = !DILocation(line: 882, column: 9, scope: !3731)
!3755 = !DILocation(line: 886, column: 12, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3731, file: !184, line: 886, column: 9)
!3757 = !DILocation(line: 886, column: 20, scope: !3756)
!3758 = !DILocation(line: 886, column: 35, scope: !3756)
!3759 = !DILocation(line: 886, column: 62, scope: !3756)
!3760 = !DILocation(line: 886, column: 45, scope: !3756)
!3761 = !DILocation(line: 886, column: 18, scope: !3756)
!3762 = !DILocation(line: 886, column: 9, scope: !3731)
!3763 = !DILocation(line: 891, column: 9, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3731, file: !184, line: 891, column: 9)
!3765 = !DILocation(line: 896, column: 18, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3731, file: !184, line: 895, column: 8)
!3767 = !DILocation(line: 897, column: 19, scope: !3731)
!3768 = !DILocation(line: 897, column: 5, scope: !3766)
!3769 = distinct !{!3769, !3770, !3771}
!3770 = !DILocation(line: 895, column: 5, scope: !3731)
!3771 = !DILocation(line: 897, column: 28, scope: !3731)
!3772 = !DILocation(line: 899, column: 22, scope: !3731)
!3773 = !DILocation(line: 901, column: 12, scope: !3731)
!3774 = !DILocation(line: 903, column: 15, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3731, file: !184, line: 903, column: 9)
!3776 = !DILocation(line: 903, column: 24, scope: !3775)
!3777 = !DILocation(line: 903, column: 27, scope: !3775)
!3778 = !DILocation(line: 903, column: 43, scope: !3775)
!3779 = !DILocation(line: 903, column: 9, scope: !3731)
!3780 = !DILocation(line: 0, scope: !3775)
!3781 = !DILocation(line: 913, column: 16, scope: !3731)
!3782 = !DILocation(line: 913, column: 5, scope: !3731)
!3783 = !DILocation(line: 910, column: 24, scope: !3731)
!3784 = !DILocation(line: 910, column: 22, scope: !3731)
!3785 = !DILocation(line: 952, column: 5, scope: !3731)
!3786 = !DILocation(line: 914, column: 21, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3731, file: !184, line: 913, column: 21)
!3788 = !DILocation(line: 919, column: 21, scope: !3787)
!3789 = !DILocation(line: 919, column: 18, scope: !3787)
!3790 = !DILocation(line: 919, column: 16, scope: !3787)
!3791 = !DILocation(line: 920, column: 21, scope: !3787)
!3792 = !DILocation(line: 920, column: 18, scope: !3787)
!3793 = !DILocation(line: 920, column: 16, scope: !3787)
!3794 = !DILocation(line: 921, column: 18, scope: !3787)
!3795 = !DILocation(line: 921, column: 16, scope: !3787)
!3796 = !DILocation(line: 923, column: 13, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3787, file: !184, line: 923, column: 13)
!3798 = !DILocation(line: 927, column: 9, scope: !3787)
!3799 = !DILocation(line: 928, column: 21, scope: !3787)
!3800 = !DILocation(line: 929, column: 9, scope: !3787)
!3801 = !DILocation(line: 930, column: 14, scope: !3787)
!3802 = !DILocation(line: 931, column: 9, scope: !3787)
!3803 = !DILocation(line: 933, column: 9, scope: !3787)
!3804 = !DILocation(line: 934, column: 86, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3787, file: !184, line: 933, column: 12)
!3806 = !DILocation(line: 934, column: 22, scope: !3805)
!3807 = !DILocation(line: 935, column: 20, scope: !3787)
!3808 = !DILocation(line: 935, column: 9, scope: !3805)
!3809 = distinct !{!3809, !3803, !3810}
!3810 = !DILocation(line: 935, column: 29, scope: !3787)
!3811 = !DILocation(line: 937, column: 16, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3787, file: !184, line: 937, column: 13)
!3813 = !DILocation(line: 937, column: 13, scope: !3787)
!3814 = !DILocation(line: 938, column: 20, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3812, file: !184, line: 937, column: 21)
!3816 = !DILocation(line: 939, column: 20, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3815, file: !184, line: 939, column: 17)
!3818 = !DILocation(line: 939, column: 17, scope: !3815)
!3819 = !DILocation(line: 941, column: 17, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3817, file: !184, line: 939, column: 33)
!3821 = !DILocation(line: 942, column: 17, scope: !3820)
!3822 = !DILocation(line: 947, column: 13, scope: !3787)
!3823 = distinct !{!3823, !3782, !3824}
!3824 = !DILocation(line: 950, column: 5, scope: !3731)
!3825 = !DILocation(line: 949, column: 13, scope: !3787)
!3826 = !DILocation(line: 948, column: 12, scope: !3787)
!3827 = !DILocation(line: 953, column: 18, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3731, file: !184, line: 952, column: 8)
!3829 = !DILocation(line: 954, column: 19, scope: !3731)
!3830 = !DILocation(line: 954, column: 5, scope: !3828)
!3831 = distinct !{!3831, !3785, !3832}
!3832 = !DILocation(line: 954, column: 28, scope: !3731)
!3833 = !DILocation(line: 956, column: 5, scope: !3731)
!3834 = !DILocation(line: 957, column: 5, scope: !3731)
!3835 = !DILocation(line: 958, column: 1, scope: !3731)
!3836 = distinct !DISubprogram(name: "flash_erase_write_security_crc", scope: !184, file: !184, line: 963, type: !3561, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3837)
!3837 = !{!3838, !3839, !3840, !3841}
!3838 = !DILocalVariable(name: "to", arg: 1, scope: !3836, file: !184, line: 963, type: !30)
!3839 = !DILocalVariable(name: "len", scope: !3836, file: !184, line: 965, type: !7)
!3840 = !DILocalVariable(name: "rc", scope: !3836, file: !184, line: 965, type: !7)
!3841 = !DILocalVariable(name: "cmd", scope: !3836, file: !184, line: 966, type: !2979)
!3842 = !DILocation(line: 0, scope: !3836)
!3843 = !DILocation(line: 966, column: 5, scope: !3836)
!3844 = !DILocation(line: 966, column: 19, scope: !3836)
!3845 = !DILocation(line: 968, column: 12, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3836, file: !184, line: 968, column: 9)
!3847 = !DILocation(line: 968, column: 9, scope: !3836)
!3848 = !DILocation(line: 972, column: 12, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3836, file: !184, line: 972, column: 9)
!3850 = !DILocation(line: 972, column: 20, scope: !3849)
!3851 = !DILocation(line: 972, column: 35, scope: !3849)
!3852 = !DILocation(line: 972, column: 62, scope: !3849)
!3853 = !DILocation(line: 972, column: 45, scope: !3849)
!3854 = !DILocation(line: 972, column: 18, scope: !3849)
!3855 = !DILocation(line: 972, column: 9, scope: !3836)
!3856 = !DILocation(line: 976, column: 22, scope: !3836)
!3857 = !DILocation(line: 979, column: 9, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3836, file: !184, line: 979, column: 9)
!3859 = !DILocation(line: 983, column: 5, scope: !3836)
!3860 = !DILocation(line: 985, column: 12, scope: !3836)
!3861 = !DILocation(line: 986, column: 17, scope: !3836)
!3862 = !DILocation(line: 986, column: 14, scope: !3836)
!3863 = !DILocation(line: 986, column: 5, scope: !3836)
!3864 = !DILocation(line: 986, column: 12, scope: !3836)
!3865 = !DILocation(line: 987, column: 17, scope: !3836)
!3866 = !DILocation(line: 987, column: 14, scope: !3836)
!3867 = !DILocation(line: 987, column: 5, scope: !3836)
!3868 = !DILocation(line: 987, column: 12, scope: !3836)
!3869 = !DILocation(line: 988, column: 14, scope: !3836)
!3870 = !DILocation(line: 988, column: 5, scope: !3836)
!3871 = !DILocation(line: 988, column: 12, scope: !3836)
!3872 = !DILocation(line: 990, column: 5, scope: !3836)
!3873 = !DILocation(line: 991, column: 5, scope: !3836)
!3874 = !DILocation(line: 993, column: 10, scope: !3836)
!3875 = !DILocation(line: 994, column: 22, scope: !3836)
!3876 = !DILocation(line: 995, column: 5, scope: !3836)
!3877 = !DILocation(line: 996, column: 1, scope: !3836)
!3878 = distinct !DISubprogram(name: "flash_erase_write", scope: !184, file: !184, line: 998, type: !3732, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3879)
!3879 = !{!3880, !3881, !3882, !3883, !3887, !3888, !3889, !3893, !3894, !3895}
!3880 = !DILocalVariable(name: "buf", arg: 1, scope: !3878, file: !184, line: 998, type: !193)
!3881 = !DILocalVariable(name: "offs", arg: 2, scope: !3878, file: !184, line: 998, type: !30)
!3882 = !DILocalVariable(name: "count", arg: 3, scope: !3878, file: !184, line: 998, type: !7)
!3883 = !DILocalVariable(name: "block", scope: !3878, file: !184, line: 1000, type: !3884)
!3884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32768, elements: !3885)
!3885 = !{!3886}
!3886 = !DISubrange(count: 4096)
!3887 = !DILocalVariable(name: "blocksize", scope: !3878, file: !184, line: 1002, type: !7)
!3888 = !DILocalVariable(name: "blockmask", scope: !3878, file: !184, line: 1003, type: !7)
!3889 = !DILocalVariable(name: "piece", scope: !3890, file: !184, line: 1008, type: !30)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !184, line: 1007, column: 56)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !184, line: 1007, column: 13)
!3892 = distinct !DILexicalBlock(scope: !3878, file: !184, line: 1005, column: 23)
!3893 = !DILocalVariable(name: "blockaddr", scope: !3890, file: !184, line: 1008, type: !30)
!3894 = !DILocalVariable(name: "piece_size", scope: !3890, file: !184, line: 1009, type: !7)
!3895 = !DILocalVariable(name: "aligned_size", scope: !3896, file: !184, line: 1034, type: !30)
!3896 = distinct !DILexicalBlock(scope: !3891, file: !184, line: 1033, column: 16)
!3897 = !DILocation(line: 0, scope: !3878)
!3898 = !DILocation(line: 1000, column: 5, scope: !3878)
!3899 = !DILocation(line: 1000, column: 19, scope: !3878)
!3900 = !DILocation(line: 1005, column: 18, scope: !3878)
!3901 = !DILocation(line: 1005, column: 5, scope: !3878)
!3902 = !DILocation(line: 1007, column: 13, scope: !3891)
!3903 = !DILocation(line: 1007, column: 32, scope: !3891)
!3904 = !DILocation(line: 1011, column: 30, scope: !3890)
!3905 = !DILocation(line: 0, scope: !3890)
!3906 = !DILocation(line: 1013, column: 17, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3890, file: !184, line: 1013, column: 17)
!3908 = !DILocation(line: 1013, column: 72, scope: !3907)
!3909 = !DILocation(line: 1013, column: 17, scope: !3890)
!3910 = !DILocation(line: 1017, column: 30, scope: !3890)
!3911 = !DILocation(line: 1019, column: 26, scope: !3890)
!3912 = !DILocation(line: 1020, column: 26, scope: !3890)
!3913 = !DILocation(line: 1020, column: 13, scope: !3890)
!3914 = !DILocation(line: 1022, column: 17, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3890, file: !184, line: 1022, column: 17)
!3916 = !DILocation(line: 1026, column: 17, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3890, file: !184, line: 1026, column: 17)
!3918 = !DILocation(line: 1026, column: 58, scope: !3917)
!3919 = !DILocation(line: 1026, column: 17, scope: !3890)
!3920 = !DILocation(line: 1032, column: 19, scope: !3890)
!3921 = !DILocation(line: 1034, column: 47, scope: !3896)
!3922 = !DILocation(line: 0, scope: !3896)
!3923 = !DILocation(line: 1036, column: 17, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3896, file: !184, line: 1036, column: 17)
!3925 = !DILocation(line: 1040, column: 17, scope: !3926)
!3926 = distinct !DILexicalBlock(scope: !3896, file: !184, line: 1040, column: 17)
!3927 = !DILocation(line: 1040, column: 54, scope: !3926)
!3928 = !DILocation(line: 1040, column: 17, scope: !3896)
!3929 = !DILocation(line: 1047, column: 19, scope: !3896)
!3930 = !DILocation(line: 0, scope: !3891)
!3931 = distinct !{!3931, !3901, !3932}
!3932 = !DILocation(line: 1049, column: 5, scope: !3878)
!3933 = !DILocation(line: 1052, column: 1, scope: !3878)
!3934 = distinct !DISubprogram(name: "query_spi_flash_status", scope: !184, file: !184, line: 1055, type: !3935, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1935)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!3937}
!3937 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_DRV_STATE", file: !6, line: 71, baseType: !186)
!3938 = !DILocation(line: 1057, column: 9, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3934, file: !184, line: 1057, column: 9)
!3940 = !DILocation(line: 1057, column: 9, scope: !3934)
!3941 = !DILocation(line: 1062, column: 9, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !184, line: 1061, column: 43)
!3943 = distinct !DILexicalBlock(scope: !3934, file: !184, line: 1061, column: 9)
!3944 = !DILocation(line: 1065, column: 48, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3934, file: !184, line: 1065, column: 9)
!3946 = !DILocation(line: 0, scope: !3945)
!3947 = !DILocation(line: 0, scope: !3934)
!3948 = !DILocation(line: 1072, column: 1, scope: !3934)
!3949 = distinct !DISubprogram(name: "get_current_count", scope: !1841, file: !1841, line: 56, type: !1916, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !1935)
!3950 = !DILocation(line: 58, column: 12, scope: !3949)
!3951 = !DILocation(line: 58, column: 5, scope: !3949)
!3952 = distinct !DISubprogram(name: "delay_time", scope: !1841, file: !1841, line: 62, type: !2338, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !3953)
!3953 = !{!3954, !3955, !3956}
!3954 = !DILocalVariable(name: "count", arg: 1, scope: !3952, file: !1841, line: 62, type: !139)
!3955 = !DILocalVariable(name: "end_count", scope: !3952, file: !1841, line: 64, type: !139)
!3956 = !DILocalVariable(name: "current", scope: !3952, file: !1841, line: 64, type: !139)
!3957 = !DILocation(line: 0, scope: !3952)
!3958 = !DILocation(line: 66, column: 17, scope: !3952)
!3959 = !DILocation(line: 66, column: 37, scope: !3952)
!3960 = !DILocation(line: 66, column: 45, scope: !3952)
!3961 = !DILocation(line: 67, column: 15, scope: !3952)
!3962 = !DILocation(line: 68, column: 12, scope: !3952)
!3963 = !DILocation(line: 68, column: 5, scope: !3952)
!3964 = !DILocation(line: 69, column: 19, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3952, file: !1841, line: 68, column: 45)
!3966 = distinct !{!3966, !3963, !3967}
!3967 = !DILocation(line: 70, column: 5, scope: !3952)
!3968 = !DILocation(line: 72, column: 1, scope: !3952)
!3969 = distinct !DISubprogram(name: "delay_time_for_gpt4", scope: !1841, file: !1841, line: 75, type: !2338, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !3970)
!3970 = !{!3971, !3972, !3973}
!3971 = !DILocalVariable(name: "count", arg: 1, scope: !3969, file: !1841, line: 75, type: !139)
!3972 = !DILocalVariable(name: "end_count", scope: !3969, file: !1841, line: 77, type: !139)
!3973 = !DILocalVariable(name: "current", scope: !3969, file: !1841, line: 77, type: !139)
!3974 = !DILocation(line: 0, scope: !3969)
!3975 = !DILocation(line: 79, column: 17, scope: !3969)
!3976 = !DILocation(line: 79, column: 42, scope: !3969)
!3977 = !DILocation(line: 79, column: 50, scope: !3969)
!3978 = !DILocation(line: 80, column: 15, scope: !3969)
!3979 = !DILocation(line: 81, column: 12, scope: !3969)
!3980 = !DILocation(line: 81, column: 5, scope: !3969)
!3981 = !DILocation(line: 82, column: 19, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3969, file: !1841, line: 81, column: 45)
!3983 = distinct !{!3983, !3980, !3984}
!3984 = !DILocation(line: 83, column: 5, scope: !3969)
!3985 = !DILocation(line: 85, column: 1, scope: !3969)
!3986 = distinct !DISubprogram(name: "get_current_gpt4_count", scope: !1841, file: !1841, line: 95, type: !1916, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !1935)
!3987 = !DILocation(line: 97, column: 13, scope: !3986)
!3988 = !DILocation(line: 97, column: 5, scope: !3986)
!3989 = distinct !DISubprogram(name: "delay_ms", scope: !1841, file: !1841, line: 107, type: !2535, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !3990)
!3990 = !{!3991, !3992}
!3991 = !DILocalVariable(name: "ms", arg: 1, scope: !3989, file: !1841, line: 107, type: !61)
!3992 = !DILocalVariable(name: "count", scope: !3989, file: !1841, line: 109, type: !61)
!3993 = !DILocation(line: 0, scope: !3989)
!3994 = !DILocation(line: 111, column: 17, scope: !3989)
!3995 = !DILocation(line: 112, column: 17, scope: !3989)
!3996 = !DILocation(line: 112, column: 23, scope: !3989)
!3997 = !DILocation(line: 112, column: 11, scope: !3989)
!3998 = !DILocation(line: 113, column: 17, scope: !3989)
!3999 = !DILocation(line: 113, column: 23, scope: !3989)
!4000 = !DILocation(line: 113, column: 11, scope: !3989)
!4001 = !DILocation(line: 114, column: 17, scope: !3989)
!4002 = !DILocation(line: 114, column: 23, scope: !3989)
!4003 = !DILocation(line: 114, column: 11, scope: !3989)
!4004 = !DILocation(line: 115, column: 5, scope: !3989)
!4005 = !DILocation(line: 116, column: 1, scope: !3989)
!4006 = distinct !DISubprogram(name: "delay_us", scope: !1841, file: !1841, line: 120, type: !2535, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !4007)
!4007 = !{!4008, !4009, !4010}
!4008 = !DILocalVariable(name: "us", arg: 1, scope: !4006, file: !1841, line: 120, type: !61)
!4009 = !DILocalVariable(name: "count", scope: !4006, file: !1841, line: 122, type: !61)
!4010 = !DILocalVariable(name: "ticks_per_us", scope: !4006, file: !1841, line: 123, type: !61)
!4011 = !DILocation(line: 0, scope: !4006)
!4012 = !DILocation(line: 125, column: 20, scope: !4006)
!4013 = !DILocation(line: 125, column: 39, scope: !4006)
!4014 = !DILocation(line: 126, column: 26, scope: !4006)
!4015 = !DILocation(line: 128, column: 5, scope: !4006)
!4016 = !DILocation(line: 129, column: 1, scope: !4006)
!4017 = distinct !DISubprogram(name: "drvTMR_init", scope: !1841, file: !1841, line: 133, type: !4018, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !4020)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{null, !61, !61, !69, !153}
!4020 = !{!4021, !4022, !4023, !4024}
!4021 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4017, file: !1841, line: 133, type: !61)
!4022 = !DILocalVariable(name: "countValue", arg: 2, scope: !4017, file: !1841, line: 133, type: !61)
!4023 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !4017, file: !1841, line: 133, type: !69)
!4024 = !DILocalVariable(name: "TMR_Callback", arg: 4, scope: !4017, file: !1841, line: 133, type: !153)
!4025 = !DILocation(line: 0, scope: !4017)
!4026 = !DILocation(line: 136, column: 5, scope: !4017)
!4027 = !DILocation(line: 138, column: 18, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4017, file: !1841, line: 138, column: 9)
!4029 = !DILocation(line: 138, column: 9, scope: !4017)
!4030 = !DILocation(line: 139, column: 30, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4028, file: !1841, line: 138, column: 27)
!4032 = !DILocation(line: 141, column: 5, scope: !4031)
!4033 = !DILocation(line: 142, column: 30, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4028, file: !1841, line: 141, column: 12)
!4035 = !DILocation(line: 0, scope: !4028)
!4036 = !DILocation(line: 146, column: 5, scope: !4017)
!4037 = !DILocation(line: 147, column: 1, scope: !4017)
!4038 = distinct !DISubprogram(name: "TMR_Start", scope: !1841, file: !1841, line: 149, type: !2535, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !4039)
!4039 = !{!4040}
!4040 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4038, file: !1841, line: 149, type: !61)
!4041 = !DILocation(line: 0, scope: !4038)
!4042 = !DILocation(line: 151, column: 5, scope: !4038)
!4043 = !DILocation(line: 152, column: 1, scope: !4038)
!4044 = distinct !DISubprogram(name: "TMR_Stop", scope: !1841, file: !1841, line: 154, type: !2535, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !4045)
!4045 = !{!4046}
!4046 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4044, file: !1841, line: 154, type: !61)
!4047 = !DILocation(line: 0, scope: !4044)
!4048 = !DILocation(line: 156, column: 5, scope: !4044)
!4049 = !DILocation(line: 157, column: 1, scope: !4044)
!4050 = distinct !DISubprogram(name: "drvGPT2Init", scope: !1841, file: !1841, line: 160, type: !154, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !1935)
!4051 = !DILocation(line: 162, column: 5, scope: !4050)
!4052 = !DILocation(line: 163, column: 1, scope: !4050)
!4053 = distinct !DISubprogram(name: "drvGPT4Init", scope: !1841, file: !1841, line: 165, type: !154, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !1935)
!4054 = !DILocation(line: 167, column: 5, scope: !4053)
!4055 = !DILocation(line: 168, column: 1, scope: !4053)
!4056 = distinct !DISubprogram(name: "clear_TMR_INT_status_bit", scope: !1841, file: !1841, line: 170, type: !2535, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1840, retainedNodes: !4057)
!4057 = !{!4058}
!4058 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4056, file: !1841, line: 170, type: !61)
!4059 = !DILocation(line: 0, scope: !4056)
!4060 = !DILocation(line: 172, column: 9, scope: !4056)
!4061 = !DILocation(line: 177, column: 5, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !1841, line: 175, column: 27)
!4063 = distinct !DILexicalBlock(scope: !4056, file: !1841, line: 175, column: 9)
!4064 = !DILocation(line: 178, column: 1, scope: !4056)
!4065 = distinct !DISubprogram(name: "top_xtal_init", scope: !281, file: !281, line: 52, type: !154, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4066)
!4066 = !{!4067, !4068}
!4067 = !DILocalVariable(name: "u4RegVal", scope: !4065, file: !281, line: 54, type: !61)
!4068 = !DILocalVariable(name: "reg", scope: !4065, file: !281, line: 55, type: !195)
!4069 = !DILocation(line: 0, scope: !4065)
!4070 = !DILocation(line: 55, column: 25, scope: !4065)
!4071 = !DILocation(line: 56, column: 16, scope: !4065)
!4072 = !DILocation(line: 56, column: 23, scope: !4065)
!4073 = !DILocation(line: 58, column: 16, scope: !4065)
!4074 = !DILocation(line: 61, column: 5, scope: !4065)
!4075 = !DILocation(line: 59, column: 14, scope: !4065)
!4076 = !DILocation(line: 0, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4065, file: !281, line: 61, column: 18)
!4078 = !DILocation(line: 87, column: 38, scope: !4065)
!4079 = !DILocation(line: 88, column: 21, scope: !4065)
!4080 = !DILocation(line: 88, column: 19, scope: !4065)
!4081 = !DILocation(line: 89, column: 5, scope: !4065)
!4082 = !DILocation(line: 90, column: 17, scope: !4065)
!4083 = !DILocation(line: 90, column: 33, scope: !4065)
!4084 = !DILocation(line: 90, column: 5, scope: !4065)
!4085 = !DILocation(line: 91, column: 1, scope: !4065)
!4086 = distinct !DISubprogram(name: "top_xtal_freq_get", scope: !281, file: !281, line: 98, type: !1916, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !1935)
!4087 = !DILocation(line: 100, column: 12, scope: !4086)
!4088 = !DILocation(line: 100, column: 5, scope: !4086)
!4089 = distinct !DISubprogram(name: "top_mcu_freq_get", scope: !281, file: !281, line: 108, type: !1916, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !1935)
!4090 = !DILocation(line: 110, column: 12, scope: !4089)
!4091 = !DILocation(line: 110, column: 5, scope: !4089)
!4092 = distinct !DISubprogram(name: "cmnPLL1ON", scope: !281, file: !281, line: 118, type: !154, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4093)
!4093 = !{!4094, !4095}
!4094 = !DILocalVariable(name: "reg", scope: !4092, file: !281, line: 120, type: !60)
!4095 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4092, file: !281, line: 121, type: !59)
!4096 = !DILocation(line: 120, column: 5, scope: !4092)
!4097 = !DILocation(line: 120, column: 23, scope: !4092)
!4098 = !DILocation(line: 0, scope: !4092)
!4099 = !DILocation(line: 123, column: 11, scope: !4092)
!4100 = !DILocation(line: 123, column: 9, scope: !4092)
!4101 = !DILocation(line: 124, column: 12, scope: !4092)
!4102 = !DILocation(line: 124, column: 16, scope: !4092)
!4103 = !DILocation(line: 124, column: 39, scope: !4092)
!4104 = !DILocation(line: 124, column: 9, scope: !4092)
!4105 = !DILocation(line: 126, column: 9, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4092, file: !281, line: 126, column: 9)
!4107 = !DILocation(line: 126, column: 13, scope: !4106)
!4108 = !DILocation(line: 126, column: 9, scope: !4092)
!4109 = !DILocation(line: 127, column: 15, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4106, file: !281, line: 126, column: 47)
!4111 = !DILocation(line: 127, column: 13, scope: !4110)
!4112 = !DILocation(line: 128, column: 15, scope: !4110)
!4113 = !DILocation(line: 128, column: 19, scope: !4110)
!4114 = !DILocation(line: 128, column: 13, scope: !4110)
!4115 = !DILocation(line: 129, column: 15, scope: !4110)
!4116 = !DILocation(line: 129, column: 19, scope: !4110)
!4117 = !DILocation(line: 129, column: 13, scope: !4110)
!4118 = !DILocation(line: 130, column: 46, scope: !4110)
!4119 = !DILocation(line: 130, column: 9, scope: !4110)
!4120 = !DILocation(line: 132, column: 9, scope: !4110)
!4121 = !DILocation(line: 133, column: 19, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4110, file: !281, line: 132, column: 12)
!4123 = !DILocation(line: 133, column: 17, scope: !4122)
!4124 = !DILocation(line: 134, column: 19, scope: !4122)
!4125 = !DILocation(line: 134, column: 23, scope: !4122)
!4126 = !DILocation(line: 134, column: 17, scope: !4122)
!4127 = !DILocation(line: 135, column: 19, scope: !4110)
!4128 = !DILocation(line: 135, column: 18, scope: !4110)
!4129 = !DILocation(line: 135, column: 9, scope: !4122)
!4130 = distinct !{!4130, !4120, !4131}
!4131 = !DILocation(line: 135, column: 22, scope: !4110)
!4132 = !DILocation(line: 138, column: 1, scope: !4092)
!4133 = distinct !DISubprogram(name: "cmnReadRegister32", scope: !4134, file: !4134, line: 176, type: !4135, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4139)
!4134 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/system_mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!4135 = !DISubroutineType(types: !4136)
!4136 = !{!61, !4137}
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 32)
!4138 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4139 = !{!4140}
!4140 = !DILocalVariable(name: "Register", arg: 1, scope: !4133, file: !4134, line: 176, type: !4137)
!4141 = !DILocation(line: 0, scope: !4133)
!4142 = !DILocation(line: 178, column: 13, scope: !4133)
!4143 = !DILocation(line: 178, column: 12, scope: !4133)
!4144 = !DILocation(line: 178, column: 5, scope: !4133)
!4145 = distinct !DISubprogram(name: "cmnWriteRegister32", scope: !4134, file: !4134, line: 171, type: !4146, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4148)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{null, !4137, !61}
!4148 = !{!4149, !4150}
!4149 = !DILocalVariable(name: "Register", arg: 1, scope: !4145, file: !4134, line: 171, type: !4137)
!4150 = !DILocalVariable(name: "Value", arg: 2, scope: !4145, file: !4134, line: 171, type: !61)
!4151 = !DILocation(line: 0, scope: !4145)
!4152 = !DILocation(line: 173, column: 6, scope: !4145)
!4153 = !DILocation(line: 173, column: 36, scope: !4145)
!4154 = !DILocation(line: 174, column: 1, scope: !4145)
!4155 = distinct !DISubprogram(name: "cmnPLL1ON_PLL2ON", scope: !281, file: !281, line: 145, type: !4156, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4158)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{null, !54}
!4158 = !{!4159, !4160, !4161}
!4159 = !DILocalVariable(name: "fg960M", arg: 1, scope: !4155, file: !281, line: 145, type: !54)
!4160 = !DILocalVariable(name: "reg", scope: !4155, file: !281, line: 147, type: !60)
!4161 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4155, file: !281, line: 148, type: !59)
!4162 = !DILocation(line: 0, scope: !4155)
!4163 = !DILocation(line: 147, column: 5, scope: !4155)
!4164 = !DILocation(line: 147, column: 23, scope: !4155)
!4165 = !DILocation(line: 150, column: 11, scope: !4155)
!4166 = !DILocation(line: 150, column: 9, scope: !4155)
!4167 = !DILocation(line: 151, column: 12, scope: !4155)
!4168 = !DILocation(line: 151, column: 16, scope: !4155)
!4169 = !DILocation(line: 151, column: 39, scope: !4155)
!4170 = !DILocation(line: 151, column: 9, scope: !4155)
!4171 = !DILocation(line: 153, column: 9, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4155, file: !281, line: 153, column: 9)
!4173 = !DILocation(line: 153, column: 13, scope: !4172)
!4174 = !DILocation(line: 153, column: 9, scope: !4155)
!4175 = !DILocation(line: 154, column: 15, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4172, file: !281, line: 153, column: 45)
!4177 = !DILocation(line: 154, column: 13, scope: !4176)
!4178 = !DILocation(line: 155, column: 15, scope: !4176)
!4179 = !DILocation(line: 155, column: 19, scope: !4176)
!4180 = !DILocation(line: 155, column: 13, scope: !4176)
!4181 = !DILocation(line: 156, column: 15, scope: !4176)
!4182 = !DILocation(line: 156, column: 19, scope: !4176)
!4183 = !DILocation(line: 156, column: 13, scope: !4176)
!4184 = !DILocation(line: 157, column: 15, scope: !4176)
!4185 = !DILocation(line: 157, column: 13, scope: !4176)
!4186 = !DILocation(line: 158, column: 46, scope: !4176)
!4187 = !DILocation(line: 158, column: 9, scope: !4176)
!4188 = !DILocation(line: 160, column: 15, scope: !4176)
!4189 = !DILocation(line: 160, column: 13, scope: !4176)
!4190 = !DILocation(line: 161, column: 15, scope: !4176)
!4191 = !DILocation(line: 161, column: 19, scope: !4176)
!4192 = !DILocation(line: 161, column: 13, scope: !4176)
!4193 = !DILocation(line: 162, column: 15, scope: !4176)
!4194 = !DILocation(line: 162, column: 19, scope: !4176)
!4195 = !DILocation(line: 162, column: 13, scope: !4176)
!4196 = !DILocation(line: 163, column: 15, scope: !4176)
!4197 = !DILocation(line: 163, column: 19, scope: !4176)
!4198 = !DILocation(line: 163, column: 13, scope: !4176)
!4199 = !DILocation(line: 164, column: 46, scope: !4176)
!4200 = !DILocation(line: 164, column: 9, scope: !4176)
!4201 = !DILocation(line: 166, column: 9, scope: !4176)
!4202 = !DILocation(line: 167, column: 19, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4176, file: !281, line: 166, column: 12)
!4204 = !DILocation(line: 167, column: 17, scope: !4203)
!4205 = !DILocation(line: 168, column: 19, scope: !4203)
!4206 = !DILocation(line: 168, column: 23, scope: !4203)
!4207 = !DILocation(line: 168, column: 17, scope: !4203)
!4208 = !DILocation(line: 169, column: 19, scope: !4176)
!4209 = !DILocation(line: 169, column: 18, scope: !4176)
!4210 = !DILocation(line: 169, column: 9, scope: !4203)
!4211 = distinct !{!4211, !4201, !4212}
!4212 = !DILocation(line: 169, column: 22, scope: !4176)
!4213 = !DILocation(line: 171, column: 15, scope: !4176)
!4214 = !DILocation(line: 171, column: 13, scope: !4176)
!4215 = !DILocation(line: 172, column: 15, scope: !4176)
!4216 = !DILocation(line: 172, column: 19, scope: !4176)
!4217 = !DILocation(line: 172, column: 13, scope: !4176)
!4218 = !DILocation(line: 173, column: 15, scope: !4176)
!4219 = !DILocation(line: 173, column: 19, scope: !4176)
!4220 = !DILocation(line: 173, column: 13, scope: !4176)
!4221 = !DILocation(line: 174, column: 5, scope: !4176)
!4222 = !DILocation(line: 176, column: 11, scope: !4155)
!4223 = !DILocation(line: 176, column: 9, scope: !4155)
!4224 = !DILocation(line: 177, column: 9, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4155, file: !281, line: 177, column: 9)
!4226 = !DILocation(line: 0, scope: !4225)
!4227 = !DILocation(line: 177, column: 9, scope: !4155)
!4228 = !DILocation(line: 178, column: 19, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4225, file: !281, line: 177, column: 17)
!4230 = !DILocation(line: 178, column: 13, scope: !4229)
!4231 = !DILocation(line: 179, column: 5, scope: !4229)
!4232 = !DILocation(line: 180, column: 13, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4225, file: !281, line: 179, column: 12)
!4234 = !DILocation(line: 182, column: 42, scope: !4155)
!4235 = !DILocation(line: 182, column: 5, scope: !4155)
!4236 = !DILocation(line: 184, column: 1, scope: !4155)
!4237 = distinct !DISubprogram(name: "cmnPLL1OFF_PLL2OFF", scope: !281, file: !281, line: 191, type: !154, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4238)
!4238 = !{!4239, !4240}
!4239 = !DILocalVariable(name: "reg", scope: !4237, file: !281, line: 193, type: !60)
!4240 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4237, file: !281, line: 194, type: !59)
!4241 = !DILocation(line: 193, column: 5, scope: !4237)
!4242 = !DILocation(line: 193, column: 23, scope: !4237)
!4243 = !DILocation(line: 0, scope: !4237)
!4244 = !DILocation(line: 196, column: 11, scope: !4237)
!4245 = !DILocation(line: 196, column: 9, scope: !4237)
!4246 = !DILocation(line: 197, column: 11, scope: !4237)
!4247 = !DILocation(line: 197, column: 15, scope: !4237)
!4248 = !DILocation(line: 197, column: 9, scope: !4237)
!4249 = !DILocation(line: 198, column: 11, scope: !4237)
!4250 = !DILocation(line: 198, column: 15, scope: !4237)
!4251 = !DILocation(line: 198, column: 9, scope: !4237)
!4252 = !DILocation(line: 199, column: 11, scope: !4237)
!4253 = !DILocation(line: 199, column: 9, scope: !4237)
!4254 = !DILocation(line: 200, column: 42, scope: !4237)
!4255 = !DILocation(line: 200, column: 5, scope: !4237)
!4256 = !DILocation(line: 202, column: 11, scope: !4237)
!4257 = !DILocation(line: 202, column: 9, scope: !4237)
!4258 = !DILocation(line: 203, column: 11, scope: !4237)
!4259 = !DILocation(line: 203, column: 15, scope: !4237)
!4260 = !DILocation(line: 203, column: 9, scope: !4237)
!4261 = !DILocation(line: 204, column: 11, scope: !4237)
!4262 = !DILocation(line: 204, column: 15, scope: !4237)
!4263 = !DILocation(line: 204, column: 9, scope: !4237)
!4264 = !DILocation(line: 205, column: 11, scope: !4237)
!4265 = !DILocation(line: 205, column: 9, scope: !4237)
!4266 = !DILocation(line: 206, column: 42, scope: !4237)
!4267 = !DILocation(line: 206, column: 5, scope: !4237)
!4268 = !DILocation(line: 209, column: 1, scope: !4237)
!4269 = distinct !DISubprogram(name: "cmnCpuClkConfigureToXtal", scope: !281, file: !281, line: 216, type: !154, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4270)
!4270 = !{!4271, !4272}
!4271 = !DILocalVariable(name: "reg", scope: !4269, file: !281, line: 218, type: !60)
!4272 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4269, file: !281, line: 219, type: !59)
!4273 = !DILocation(line: 218, column: 5, scope: !4269)
!4274 = !DILocation(line: 218, column: 23, scope: !4269)
!4275 = !DILocation(line: 0, scope: !4269)
!4276 = !DILocation(line: 222, column: 11, scope: !4269)
!4277 = !DILocation(line: 222, column: 9, scope: !4269)
!4278 = !DILocation(line: 223, column: 11, scope: !4269)
!4279 = !DILocation(line: 223, column: 15, scope: !4269)
!4280 = !DILocation(line: 223, column: 9, scope: !4269)
!4281 = !DILocation(line: 224, column: 11, scope: !4269)
!4282 = !DILocation(line: 224, column: 9, scope: !4269)
!4283 = !DILocation(line: 225, column: 39, scope: !4269)
!4284 = !DILocation(line: 225, column: 5, scope: !4269)
!4285 = !DILocation(line: 228, column: 11, scope: !4269)
!4286 = !DILocation(line: 228, column: 9, scope: !4269)
!4287 = !DILocation(line: 229, column: 11, scope: !4269)
!4288 = !DILocation(line: 229, column: 15, scope: !4269)
!4289 = !DILocation(line: 229, column: 9, scope: !4269)
!4290 = !DILocation(line: 230, column: 11, scope: !4269)
!4291 = !DILocation(line: 230, column: 9, scope: !4269)
!4292 = !DILocation(line: 231, column: 39, scope: !4269)
!4293 = !DILocation(line: 231, column: 5, scope: !4269)
!4294 = !DILocation(line: 233, column: 5, scope: !4269)
!4295 = !DILocation(line: 233, column: 12, scope: !4269)
!4296 = !DILocation(line: 233, column: 19, scope: !4269)
!4297 = !DILocation(line: 233, column: 16, scope: !4269)
!4298 = distinct !{!4298, !4294, !4299}
!4299 = !DILocation(line: 233, column: 52, scope: !4269)
!4300 = !DILocation(line: 235, column: 21, scope: !4269)
!4301 = !DILocation(line: 235, column: 19, scope: !4269)
!4302 = !DILocation(line: 236, column: 5, scope: !4269)
!4303 = !DILocation(line: 237, column: 17, scope: !4269)
!4304 = !DILocation(line: 237, column: 33, scope: !4269)
!4305 = !DILocation(line: 237, column: 5, scope: !4269)
!4306 = !DILocation(line: 239, column: 1, scope: !4269)
!4307 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo192M", scope: !281, file: !281, line: 246, type: !154, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4308)
!4308 = !{!4309, !4310}
!4309 = !DILocalVariable(name: "reg", scope: !4307, file: !281, line: 248, type: !60)
!4310 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4307, file: !281, line: 249, type: !59)
!4311 = !DILocation(line: 248, column: 5, scope: !4307)
!4312 = !DILocation(line: 248, column: 23, scope: !4307)
!4313 = !DILocation(line: 0, scope: !4307)
!4314 = !DILocation(line: 252, column: 5, scope: !4307)
!4315 = !DILocation(line: 255, column: 11, scope: !4307)
!4316 = !DILocation(line: 255, column: 9, scope: !4307)
!4317 = !DILocation(line: 256, column: 11, scope: !4307)
!4318 = !DILocation(line: 256, column: 15, scope: !4307)
!4319 = !DILocation(line: 256, column: 9, scope: !4307)
!4320 = !DILocation(line: 257, column: 11, scope: !4307)
!4321 = !DILocation(line: 257, column: 15, scope: !4307)
!4322 = !DILocation(line: 257, column: 9, scope: !4307)
!4323 = !DILocation(line: 258, column: 39, scope: !4307)
!4324 = !DILocation(line: 258, column: 5, scope: !4307)
!4325 = !DILocation(line: 260, column: 5, scope: !4307)
!4326 = !DILocation(line: 260, column: 12, scope: !4307)
!4327 = !DILocation(line: 260, column: 19, scope: !4307)
!4328 = !DILocation(line: 260, column: 16, scope: !4307)
!4329 = distinct !{!4329, !4325, !4330}
!4330 = !DILocation(line: 260, column: 52, scope: !4307)
!4331 = !DILocation(line: 263, column: 11, scope: !4307)
!4332 = !DILocation(line: 263, column: 9, scope: !4307)
!4333 = !DILocation(line: 264, column: 11, scope: !4307)
!4334 = !DILocation(line: 264, column: 15, scope: !4307)
!4335 = !DILocation(line: 264, column: 9, scope: !4307)
!4336 = !DILocation(line: 265, column: 11, scope: !4307)
!4337 = !DILocation(line: 265, column: 15, scope: !4307)
!4338 = !DILocation(line: 265, column: 9, scope: !4307)
!4339 = !DILocation(line: 266, column: 39, scope: !4307)
!4340 = !DILocation(line: 266, column: 5, scope: !4307)
!4341 = !DILocation(line: 269, column: 11, scope: !4307)
!4342 = !DILocation(line: 269, column: 9, scope: !4307)
!4343 = !DILocation(line: 270, column: 11, scope: !4307)
!4344 = !DILocation(line: 270, column: 15, scope: !4307)
!4345 = !DILocation(line: 270, column: 9, scope: !4307)
!4346 = !DILocation(line: 271, column: 11, scope: !4307)
!4347 = !DILocation(line: 271, column: 15, scope: !4307)
!4348 = !DILocation(line: 271, column: 9, scope: !4307)
!4349 = !DILocation(line: 272, column: 39, scope: !4307)
!4350 = !DILocation(line: 272, column: 5, scope: !4307)
!4351 = !DILocation(line: 273, column: 19, scope: !4307)
!4352 = !DILocation(line: 274, column: 5, scope: !4307)
!4353 = !DILocation(line: 275, column: 17, scope: !4307)
!4354 = !DILocation(line: 275, column: 33, scope: !4307)
!4355 = !DILocation(line: 275, column: 5, scope: !4307)
!4356 = !DILocation(line: 277, column: 1, scope: !4307)
!4357 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo160M", scope: !281, file: !281, line: 284, type: !154, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4358)
!4358 = !{!4359, !4360}
!4359 = !DILocalVariable(name: "reg", scope: !4357, file: !281, line: 286, type: !60)
!4360 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4357, file: !281, line: 287, type: !59)
!4361 = !DILocation(line: 286, column: 5, scope: !4357)
!4362 = !DILocation(line: 286, column: 23, scope: !4357)
!4363 = !DILocation(line: 0, scope: !4357)
!4364 = !DILocation(line: 290, column: 5, scope: !4357)
!4365 = !DILocation(line: 293, column: 11, scope: !4357)
!4366 = !DILocation(line: 293, column: 9, scope: !4357)
!4367 = !DILocation(line: 294, column: 11, scope: !4357)
!4368 = !DILocation(line: 294, column: 15, scope: !4357)
!4369 = !DILocation(line: 294, column: 9, scope: !4357)
!4370 = !DILocation(line: 295, column: 11, scope: !4357)
!4371 = !DILocation(line: 295, column: 15, scope: !4357)
!4372 = !DILocation(line: 295, column: 9, scope: !4357)
!4373 = !DILocation(line: 296, column: 39, scope: !4357)
!4374 = !DILocation(line: 296, column: 5, scope: !4357)
!4375 = !DILocation(line: 298, column: 5, scope: !4357)
!4376 = !DILocation(line: 298, column: 12, scope: !4357)
!4377 = !DILocation(line: 298, column: 19, scope: !4357)
!4378 = !DILocation(line: 298, column: 16, scope: !4357)
!4379 = distinct !{!4379, !4375, !4380}
!4380 = !DILocation(line: 298, column: 52, scope: !4357)
!4381 = !DILocation(line: 301, column: 11, scope: !4357)
!4382 = !DILocation(line: 301, column: 9, scope: !4357)
!4383 = !DILocation(line: 302, column: 11, scope: !4357)
!4384 = !DILocation(line: 302, column: 15, scope: !4357)
!4385 = !DILocation(line: 302, column: 9, scope: !4357)
!4386 = !DILocation(line: 303, column: 11, scope: !4357)
!4387 = !DILocation(line: 303, column: 15, scope: !4357)
!4388 = !DILocation(line: 303, column: 9, scope: !4357)
!4389 = !DILocation(line: 304, column: 39, scope: !4357)
!4390 = !DILocation(line: 304, column: 5, scope: !4357)
!4391 = !DILocation(line: 307, column: 11, scope: !4357)
!4392 = !DILocation(line: 307, column: 9, scope: !4357)
!4393 = !DILocation(line: 308, column: 11, scope: !4357)
!4394 = !DILocation(line: 308, column: 15, scope: !4357)
!4395 = !DILocation(line: 308, column: 9, scope: !4357)
!4396 = !DILocation(line: 309, column: 11, scope: !4357)
!4397 = !DILocation(line: 309, column: 15, scope: !4357)
!4398 = !DILocation(line: 309, column: 9, scope: !4357)
!4399 = !DILocation(line: 310, column: 39, scope: !4357)
!4400 = !DILocation(line: 310, column: 5, scope: !4357)
!4401 = !DILocation(line: 311, column: 19, scope: !4357)
!4402 = !DILocation(line: 312, column: 5, scope: !4357)
!4403 = !DILocation(line: 313, column: 17, scope: !4357)
!4404 = !DILocation(line: 313, column: 33, scope: !4357)
!4405 = !DILocation(line: 313, column: 5, scope: !4357)
!4406 = !DILocation(line: 315, column: 1, scope: !4357)
!4407 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo64M", scope: !281, file: !281, line: 323, type: !154, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4408)
!4408 = !{!4409, !4410}
!4409 = !DILocalVariable(name: "reg", scope: !4407, file: !281, line: 325, type: !60)
!4410 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4407, file: !281, line: 326, type: !59)
!4411 = !DILocation(line: 325, column: 5, scope: !4407)
!4412 = !DILocation(line: 325, column: 23, scope: !4407)
!4413 = !DILocation(line: 0, scope: !4407)
!4414 = !DILocation(line: 329, column: 5, scope: !4407)
!4415 = !DILocation(line: 332, column: 11, scope: !4407)
!4416 = !DILocation(line: 332, column: 9, scope: !4407)
!4417 = !DILocation(line: 333, column: 11, scope: !4407)
!4418 = !DILocation(line: 333, column: 15, scope: !4407)
!4419 = !DILocation(line: 333, column: 9, scope: !4407)
!4420 = !DILocation(line: 334, column: 11, scope: !4407)
!4421 = !DILocation(line: 334, column: 9, scope: !4407)
!4422 = !DILocation(line: 335, column: 39, scope: !4407)
!4423 = !DILocation(line: 335, column: 5, scope: !4407)
!4424 = !DILocation(line: 337, column: 5, scope: !4407)
!4425 = !DILocation(line: 337, column: 12, scope: !4407)
!4426 = !DILocation(line: 337, column: 19, scope: !4407)
!4427 = !DILocation(line: 337, column: 16, scope: !4407)
!4428 = distinct !{!4428, !4424, !4429}
!4429 = !DILocation(line: 337, column: 52, scope: !4407)
!4430 = !DILocation(line: 340, column: 11, scope: !4407)
!4431 = !DILocation(line: 340, column: 9, scope: !4407)
!4432 = !DILocation(line: 341, column: 11, scope: !4407)
!4433 = !DILocation(line: 341, column: 15, scope: !4407)
!4434 = !DILocation(line: 341, column: 9, scope: !4407)
!4435 = !DILocation(line: 342, column: 11, scope: !4407)
!4436 = !DILocation(line: 342, column: 15, scope: !4407)
!4437 = !DILocation(line: 342, column: 9, scope: !4407)
!4438 = !DILocation(line: 343, column: 39, scope: !4407)
!4439 = !DILocation(line: 343, column: 5, scope: !4407)
!4440 = !DILocation(line: 344, column: 19, scope: !4407)
!4441 = !DILocation(line: 345, column: 5, scope: !4407)
!4442 = !DILocation(line: 346, column: 17, scope: !4407)
!4443 = !DILocation(line: 346, column: 33, scope: !4407)
!4444 = !DILocation(line: 346, column: 5, scope: !4407)
!4445 = !DILocation(line: 348, column: 1, scope: !4407)
!4446 = distinct !DISubprogram(name: "cmnSerialFlashClkConfToXtal", scope: !281, file: !281, line: 353, type: !154, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4447)
!4447 = !{!4448, !4449}
!4448 = !DILocalVariable(name: "reg", scope: !4446, file: !281, line: 355, type: !158)
!4449 = !DILocalVariable(name: "pTopCfgHclk", scope: !4446, file: !281, line: 356, type: !283)
!4450 = !DILocation(line: 355, column: 5, scope: !4446)
!4451 = !DILocation(line: 355, column: 21, scope: !4446)
!4452 = !DILocation(line: 0, scope: !4446)
!4453 = !DILocation(line: 358, column: 11, scope: !4446)
!4454 = !DILocation(line: 358, column: 9, scope: !4446)
!4455 = !DILocation(line: 359, column: 11, scope: !4446)
!4456 = !DILocation(line: 359, column: 15, scope: !4446)
!4457 = !DILocation(line: 359, column: 9, scope: !4446)
!4458 = !DILocation(line: 360, column: 11, scope: !4446)
!4459 = !DILocation(line: 360, column: 9, scope: !4446)
!4460 = !DILocation(line: 361, column: 37, scope: !4446)
!4461 = !DILocation(line: 361, column: 5, scope: !4446)
!4462 = !DILocation(line: 362, column: 1, scope: !4446)
!4463 = distinct !DISubprogram(name: "cmnSerialFlashClkConfTo64M", scope: !281, file: !281, line: 368, type: !154, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4464)
!4464 = !{!4465, !4466, !4467, !4469, !4471}
!4465 = !DILocalVariable(name: "reg", scope: !4463, file: !281, line: 370, type: !158)
!4466 = !DILocalVariable(name: "pTopCfgHclk", scope: !4463, file: !281, line: 371, type: !283)
!4467 = !DILocalVariable(name: "addr", scope: !4468, file: !281, line: 383, type: !284)
!4468 = distinct !DILexicalBlock(scope: !4463, file: !281, line: 383, column: 5)
!4469 = !DILocalVariable(name: "addr", scope: !4470, file: !281, line: 384, type: !284)
!4470 = distinct !DILexicalBlock(scope: !4463, file: !281, line: 384, column: 5)
!4471 = !DILocalVariable(name: "addr", scope: !4472, file: !281, line: 385, type: !284)
!4472 = distinct !DILexicalBlock(scope: !4463, file: !281, line: 385, column: 5)
!4473 = !DILocation(line: 370, column: 5, scope: !4463)
!4474 = !DILocation(line: 370, column: 21, scope: !4463)
!4475 = !DILocation(line: 0, scope: !4463)
!4476 = !DILocation(line: 374, column: 5, scope: !4463)
!4477 = !DILocation(line: 377, column: 11, scope: !4463)
!4478 = !DILocation(line: 377, column: 9, scope: !4463)
!4479 = !DILocation(line: 378, column: 11, scope: !4463)
!4480 = !DILocation(line: 378, column: 15, scope: !4463)
!4481 = !DILocation(line: 378, column: 9, scope: !4463)
!4482 = !DILocation(line: 379, column: 11, scope: !4463)
!4483 = !DILocation(line: 379, column: 15, scope: !4463)
!4484 = !DILocation(line: 379, column: 9, scope: !4463)
!4485 = !DILocation(line: 380, column: 37, scope: !4463)
!4486 = !DILocation(line: 380, column: 5, scope: !4463)
!4487 = !DILocation(line: 0, scope: !4468)
!4488 = !DILocation(line: 383, column: 5, scope: !4468)
!4489 = !DILocation(line: 0, scope: !4470)
!4490 = !DILocation(line: 384, column: 5, scope: !4470)
!4491 = !DILocation(line: 0, scope: !4472)
!4492 = !DILocation(line: 385, column: 5, scope: !4472)
!4493 = !DILocation(line: 388, column: 1, scope: !4463)
!4494 = distinct !DISubprogram(name: "getc", scope: !293, file: !293, line: 68, type: !2621, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4495)
!4495 = !{!4496}
!4496 = !DILocalVariable(name: "rc", scope: !4494, file: !293, line: 71, type: !7)
!4497 = !DILocation(line: 71, column: 14, scope: !4494)
!4498 = !DILocation(line: 0, scope: !4494)
!4499 = !DILocation(line: 72, column: 5, scope: !4494)
!4500 = distinct !DISubprogram(name: "getc_nowait", scope: !293, file: !293, line: 80, type: !2621, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4501)
!4501 = !{!4502}
!4502 = !DILocalVariable(name: "c", scope: !4500, file: !293, line: 82, type: !202)
!4503 = !DILocation(line: 84, column: 9, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4500, file: !293, line: 84, column: 9)
!4505 = !DILocation(line: 84, column: 40, scope: !4504)
!4506 = !DILocation(line: 84, column: 9, scope: !4500)
!4507 = !DILocation(line: 85, column: 13, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4504, file: !293, line: 84, column: 47)
!4509 = !DILocation(line: 86, column: 16, scope: !4508)
!4510 = !DILocation(line: 0, scope: !4500)
!4511 = !DILocation(line: 86, column: 9, scope: !4508)
!4512 = !DILocation(line: 0, scope: !4504)
!4513 = !DILocation(line: 90, column: 1, scope: !4500)
!4514 = distinct !DISubprogram(name: "uart_output_char", scope: !293, file: !293, line: 93, type: !4515, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4518)
!4515 = !DISubroutineType(types: !4516)
!4516 = !{null, !4517, !58}
!4517 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_PORT", file: !296, line: 75, baseType: !295)
!4518 = !{!4519, !4520, !4521}
!4519 = !DILocalVariable(name: "port_no", arg: 1, scope: !4514, file: !293, line: 93, type: !4517)
!4520 = !DILocalVariable(name: "c", arg: 2, scope: !4514, file: !293, line: 93, type: !58)
!4521 = !DILocalVariable(name: "base", scope: !4514, file: !293, line: 95, type: !30)
!4522 = !DILocation(line: 0, scope: !4514)
!4523 = !DILocation(line: 95, column: 25, scope: !4514)
!4524 = !DILocation(line: 97, column: 5, scope: !4514)
!4525 = !DILocation(line: 97, column: 14, scope: !4514)
!4526 = !DILocation(line: 97, column: 42, scope: !4514)
!4527 = !DILocation(line: 97, column: 12, scope: !4514)
!4528 = distinct !{!4528, !4524, !4529}
!4529 = !DILocation(line: 98, column: 9, scope: !4514)
!4530 = !DILocation(line: 99, column: 35, scope: !4514)
!4531 = !DILocation(line: 99, column: 5, scope: !4514)
!4532 = !DILocation(line: 99, column: 33, scope: !4514)
!4533 = !DILocation(line: 102, column: 1, scope: !4514)
!4534 = distinct !DISubprogram(name: "uart_input_char", scope: !293, file: !293, line: 106, type: !4535, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4537)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!54, !4517}
!4537 = !{!4538, !4539, !4540}
!4538 = !DILocalVariable(name: "port_no", arg: 1, scope: !4534, file: !293, line: 106, type: !4517)
!4539 = !DILocalVariable(name: "base", scope: !4534, file: !293, line: 108, type: !30)
!4540 = !DILocalVariable(name: "c", scope: !4534, file: !293, line: 109, type: !202)
!4541 = !DILocation(line: 0, scope: !4534)
!4542 = !DILocation(line: 108, column: 25, scope: !4534)
!4543 = !DILocation(line: 111, column: 5, scope: !4534)
!4544 = !DILocation(line: 111, column: 14, scope: !4534)
!4545 = !DILocation(line: 111, column: 42, scope: !4534)
!4546 = !DILocation(line: 111, column: 12, scope: !4534)
!4547 = distinct !{!4547, !4543, !4548}
!4548 = !DILocation(line: 112, column: 9, scope: !4534)
!4549 = !DILocation(line: 114, column: 9, scope: !4534)
!4550 = !DILocation(line: 116, column: 5, scope: !4534)
!4551 = distinct !DISubprogram(name: "uart_input_char_unblocking", scope: !293, file: !293, line: 120, type: !4552, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4554)
!4552 = !DISubroutineType(types: !4553)
!4553 = !{!61, !4517}
!4554 = !{!4555, !4556, !4557}
!4555 = !DILocalVariable(name: "port_no", arg: 1, scope: !4551, file: !293, line: 120, type: !4517)
!4556 = !DILocalVariable(name: "base", scope: !4551, file: !293, line: 122, type: !30)
!4557 = !DILocalVariable(name: "c", scope: !4551, file: !293, line: 123, type: !202)
!4558 = !DILocation(line: 0, scope: !4551)
!4559 = !DILocation(line: 122, column: 25, scope: !4551)
!4560 = !DILocation(line: 125, column: 9, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4551, file: !293, line: 125, column: 9)
!4562 = !DILocation(line: 125, column: 37, scope: !4561)
!4563 = !DILocation(line: 125, column: 9, scope: !4551)
!4564 = !DILocation(line: 126, column: 13, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4561, file: !293, line: 125, column: 44)
!4566 = !DILocation(line: 127, column: 16, scope: !4565)
!4567 = !DILocation(line: 127, column: 9, scope: !4565)
!4568 = !DILocation(line: 0, scope: !4561)
!4569 = !DILocation(line: 131, column: 1, scope: !4551)
!4570 = distinct !DISubprogram(name: "halUART_HWInit", scope: !293, file: !293, line: 136, type: !4571, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4573)
!4571 = !DISubroutineType(types: !4572)
!4572 = !{null, !4517}
!4573 = !{!4574}
!4574 = !DILocalVariable(name: "u_port", arg: 1, scope: !4570, file: !293, line: 136, type: !4517)
!4575 = !DILocation(line: 0, scope: !4570)
!4576 = !DILocation(line: 139, column: 5, scope: !4570)
!4577 = !DILocation(line: 140, column: 9, scope: !4570)
!4578 = !DILocation(line: 153, column: 5, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !293, line: 147, column: 38)
!4580 = distinct !DILexicalBlock(scope: !4581, file: !293, line: 147, column: 16)
!4581 = distinct !DILexicalBlock(scope: !4570, file: !293, line: 140, column: 9)
!4582 = !DILocation(line: 0, scope: !4581)
!4583 = !DILocation(line: 155, column: 1, scope: !4570)
!4584 = distinct !DISubprogram(name: "halUART_SetFormat", scope: !293, file: !293, line: 158, type: !4585, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4587)
!4585 = !DISubroutineType(types: !4586)
!4586 = !{null, !4517, !61, !1155, !1155, !1155}
!4587 = !{!4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4603, !4604}
!4588 = !DILocalVariable(name: "u_port", arg: 1, scope: !4584, file: !293, line: 158, type: !4517)
!4589 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4584, file: !293, line: 158, type: !61)
!4590 = !DILocalVariable(name: "databit", arg: 3, scope: !4584, file: !293, line: 158, type: !1155)
!4591 = !DILocalVariable(name: "parity", arg: 4, scope: !4584, file: !293, line: 158, type: !1155)
!4592 = !DILocalVariable(name: "stopbit", arg: 5, scope: !4584, file: !293, line: 158, type: !1155)
!4593 = !DILocalVariable(name: "control_word", scope: !4584, file: !293, line: 160, type: !1155)
!4594 = !DILocalVariable(name: "UART_BASE", scope: !4584, file: !293, line: 161, type: !61)
!4595 = !DILocalVariable(name: "data", scope: !4584, file: !293, line: 162, type: !61)
!4596 = !DILocalVariable(name: "uart_lcr", scope: !4584, file: !293, line: 162, type: !61)
!4597 = !DILocalVariable(name: "high_speed_div", scope: !4584, file: !293, line: 162, type: !61)
!4598 = !DILocalVariable(name: "sample_count", scope: !4584, file: !293, line: 162, type: !61)
!4599 = !DILocalVariable(name: "sample_point", scope: !4584, file: !293, line: 162, type: !61)
!4600 = !DILocalVariable(name: "fraction", scope: !4584, file: !293, line: 162, type: !61)
!4601 = !DILocalVariable(name: "fraction_L_mapping", scope: !4584, file: !293, line: 163, type: !4602)
!4602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1155, size: 176, elements: !1778)
!4603 = !DILocalVariable(name: "fraction_M_mapping", scope: !4584, file: !293, line: 164, type: !4602)
!4604 = !DILocalVariable(name: "status", scope: !4584, file: !293, line: 165, type: !527)
!4605 = !DILocation(line: 0, scope: !4584)
!4606 = !DILocation(line: 163, column: 15, scope: !4584)
!4607 = !DILocation(line: 164, column: 15, scope: !4584)
!4608 = !DILocation(line: 166, column: 20, scope: !4584)
!4609 = !DILocation(line: 166, column: 18, scope: !4584)
!4610 = !DILocation(line: 168, column: 9, scope: !4584)
!4611 = !DILocation(line: 176, column: 5, scope: !4584)
!4612 = !DILocation(line: 176, column: 44, scope: !4584)
!4613 = !DILocation(line: 177, column: 16, scope: !4584)
!4614 = !DILocation(line: 178, column: 50, scope: !4584)
!4615 = !DILocation(line: 178, column: 38, scope: !4584)
!4616 = !DILocation(line: 179, column: 12, scope: !4584)
!4617 = !DILocation(line: 179, column: 25, scope: !4584)
!4618 = !DILocation(line: 180, column: 28, scope: !4584)
!4619 = !DILocation(line: 180, column: 34, scope: !4584)
!4620 = !DILocation(line: 182, column: 29, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4584, file: !293, line: 181, column: 5)
!4622 = !DILocation(line: 182, column: 46, scope: !4621)
!4623 = !DILocation(line: 183, column: 26, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4621, file: !293, line: 183, column: 13)
!4625 = !DILocation(line: 183, column: 13, scope: !4621)
!4626 = !DILocation(line: 192, column: 30, scope: !4584)
!4627 = !DILocation(line: 192, column: 35, scope: !4584)
!4628 = !DILocation(line: 192, column: 46, scope: !4584)
!4629 = !DILocation(line: 192, column: 74, scope: !4584)
!4630 = !DILocation(line: 192, column: 53, scope: !4584)
!4631 = !DILocation(line: 192, column: 80, scope: !4584)
!4632 = !DILocation(line: 193, column: 56, scope: !4584)
!4633 = !DILocation(line: 193, column: 5, scope: !4584)
!4634 = !DILocation(line: 193, column: 38, scope: !4584)
!4635 = !DILocation(line: 194, column: 57, scope: !4584)
!4636 = !DILocation(line: 194, column: 63, scope: !4584)
!4637 = !DILocation(line: 194, column: 5, scope: !4584)
!4638 = !DILocation(line: 194, column: 38, scope: !4584)
!4639 = !DILocation(line: 195, column: 5, scope: !4584)
!4640 = !DILocation(line: 195, column: 45, scope: !4584)
!4641 = !DILocation(line: 196, column: 5, scope: !4584)
!4642 = !DILocation(line: 196, column: 47, scope: !4584)
!4643 = !DILocation(line: 197, column: 46, scope: !4584)
!4644 = !DILocation(line: 197, column: 5, scope: !4584)
!4645 = !DILocation(line: 197, column: 44, scope: !4584)
!4646 = !DILocation(line: 198, column: 46, scope: !4584)
!4647 = !DILocation(line: 198, column: 5, scope: !4584)
!4648 = !DILocation(line: 198, column: 44, scope: !4584)
!4649 = !DILocation(line: 199, column: 38, scope: !4584)
!4650 = !DILocation(line: 200, column: 5, scope: !4584)
!4651 = !DILocation(line: 200, column: 38, scope: !4584)
!4652 = !DILocation(line: 202, column: 20, scope: !4584)
!4653 = !DILocation(line: 203, column: 18, scope: !4584)
!4654 = !DILocation(line: 205, column: 18, scope: !4584)
!4655 = !DILocation(line: 207, column: 18, scope: !4584)
!4656 = !DILocation(line: 208, column: 18, scope: !4584)
!4657 = !DILocation(line: 209, column: 5, scope: !4584)
!4658 = !DILocation(line: 213, column: 1, scope: !4584)
!4659 = distinct !DISubprogram(name: "halUART_Get_VFIFO_Length", scope: !293, file: !293, line: 215, type: !4660, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4662)
!4660 = !DISubroutineType(types: !4661)
!4661 = !{null, !4517, !527, !2495}
!4662 = !{!4663, !4664, !4665}
!4663 = !DILocalVariable(name: "u_port", arg: 1, scope: !4659, file: !293, line: 215, type: !4517)
!4664 = !DILocalVariable(name: "is_rx", arg: 2, scope: !4659, file: !293, line: 215, type: !527)
!4665 = !DILocalVariable(name: "length", arg: 3, scope: !4659, file: !293, line: 215, type: !2495)
!4666 = !DILocation(line: 0, scope: !4659)
!4667 = !DILocation(line: 217, column: 16, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4659, file: !293, line: 217, column: 9)
!4669 = !DILocation(line: 0, scope: !4668)
!4670 = !DILocation(line: 217, column: 9, scope: !4659)
!4671 = !DILocation(line: 218, column: 13, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4668, file: !293, line: 217, column: 31)
!4673 = !DILocation(line: 219, column: 23, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !293, line: 218, column: 20)
!4675 = distinct !DILexicalBlock(scope: !4672, file: !293, line: 218, column: 13)
!4676 = !DILocation(line: 220, column: 9, scope: !4674)
!4677 = !DILocation(line: 221, column: 23, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4675, file: !293, line: 220, column: 16)
!4679 = !DILocation(line: 221, column: 21, scope: !4678)
!4680 = !DILocation(line: 222, column: 24, scope: !4678)
!4681 = !DILocation(line: 222, column: 21, scope: !4678)
!4682 = !DILocation(line: 225, column: 13, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4668, file: !293, line: 224, column: 12)
!4684 = !DILocation(line: 226, column: 23, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4686, file: !293, line: 225, column: 20)
!4686 = distinct !DILexicalBlock(scope: !4683, file: !293, line: 225, column: 13)
!4687 = !DILocation(line: 227, column: 9, scope: !4685)
!4688 = !DILocation(line: 228, column: 23, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4686, file: !293, line: 227, column: 16)
!4690 = !DILocation(line: 228, column: 21, scope: !4689)
!4691 = !DILocation(line: 229, column: 24, scope: !4689)
!4692 = !DILocation(line: 229, column: 21, scope: !4689)
!4693 = !DILocation(line: 233, column: 5, scope: !4659)
!4694 = distinct !DISubprogram(name: "halUART_Read_VFIFO_Data", scope: !293, file: !293, line: 236, type: !4695, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4697)
!4695 = !DISubroutineType(types: !4696)
!4696 = !{null, !4517, !210, !61}
!4697 = !{!4698, !4699, !4700, !4701}
!4698 = !DILocalVariable(name: "u_port", arg: 1, scope: !4694, file: !293, line: 236, type: !4517)
!4699 = !DILocalVariable(name: "data", arg: 2, scope: !4694, file: !293, line: 236, type: !210)
!4700 = !DILocalVariable(name: "length", arg: 3, scope: !4694, file: !293, line: 236, type: !61)
!4701 = !DILocalVariable(name: "idx", scope: !4694, file: !293, line: 238, type: !159)
!4702 = !DILocation(line: 0, scope: !4694)
!4703 = !DILocation(line: 239, column: 23, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !293, line: 239, column: 5)
!4705 = distinct !DILexicalBlock(scope: !4694, file: !293, line: 239, column: 5)
!4706 = !DILocation(line: 239, column: 5, scope: !4705)
!4707 = !DILocation(line: 240, column: 13, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4704, file: !293, line: 239, column: 40)
!4709 = !DILocation(line: 244, column: 9, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !293, line: 242, column: 42)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !293, line: 242, column: 20)
!4712 = distinct !DILexicalBlock(scope: !4708, file: !293, line: 240, column: 13)
!4713 = !DILocation(line: 0, scope: !4712)
!4714 = !DILocation(line: 239, column: 36, scope: !4704)
!4715 = distinct !{!4715, !4706, !4716}
!4716 = !DILocation(line: 246, column: 5, scope: !4705)
!4717 = !DILocation(line: 249, column: 1, scope: !4694)
!4718 = distinct !DISubprogram(name: "halUART_Write_VFIFO_Data", scope: !293, file: !293, line: 251, type: !4719, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4721)
!4719 = !DISubroutineType(types: !4720)
!4720 = !{null, !4517, !2077, !61}
!4721 = !{!4722, !4723, !4724, !4725}
!4722 = !DILocalVariable(name: "u_port", arg: 1, scope: !4718, file: !293, line: 251, type: !4517)
!4723 = !DILocalVariable(name: "data", arg: 2, scope: !4718, file: !293, line: 251, type: !2077)
!4724 = !DILocalVariable(name: "length", arg: 3, scope: !4718, file: !293, line: 251, type: !61)
!4725 = !DILocalVariable(name: "idx", scope: !4718, file: !293, line: 253, type: !159)
!4726 = !DILocation(line: 0, scope: !4718)
!4727 = !DILocation(line: 254, column: 23, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !293, line: 254, column: 5)
!4729 = distinct !DILexicalBlock(scope: !4718, file: !293, line: 254, column: 5)
!4730 = !DILocation(line: 254, column: 5, scope: !4729)
!4731 = !DILocation(line: 255, column: 13, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4728, file: !293, line: 254, column: 40)
!4733 = !DILocation(line: 256, column: 61, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4735, file: !293, line: 255, column: 35)
!4735 = distinct !DILexicalBlock(scope: !4732, file: !293, line: 255, column: 13)
!4736 = !DILocation(line: 256, column: 59, scope: !4734)
!4737 = !DILocation(line: 257, column: 9, scope: !4734)
!4738 = !DILocation(line: 258, column: 61, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !293, line: 257, column: 42)
!4740 = distinct !DILexicalBlock(scope: !4735, file: !293, line: 257, column: 20)
!4741 = !DILocation(line: 258, column: 59, scope: !4739)
!4742 = !DILocation(line: 259, column: 9, scope: !4739)
!4743 = !DILocation(line: 254, column: 36, scope: !4728)
!4744 = distinct !{!4744, !4730, !4745}
!4745 = !DILocation(line: 261, column: 5, scope: !4729)
!4746 = !DILocation(line: 264, column: 1, scope: !4718)
!4747 = distinct !DISubprogram(name: "halUART_Tx_VFIFO_Initialize", scope: !293, file: !293, line: 266, type: !4748, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4750)
!4748 = !DISubroutineType(types: !4749)
!4749 = !{null, !4517, !210, !61, !61}
!4750 = !{!4751, !4752, !4753, !4754}
!4751 = !DILocalVariable(name: "u_port", arg: 1, scope: !4747, file: !293, line: 266, type: !4517)
!4752 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !4747, file: !293, line: 266, type: !210)
!4753 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !4747, file: !293, line: 266, type: !61)
!4754 = !DILocalVariable(name: "threshold", arg: 4, scope: !4747, file: !293, line: 266, type: !61)
!4755 = !DILocation(line: 0, scope: !4747)
!4756 = !DILocation(line: 268, column: 9, scope: !4747)
!4757 = !DILocation(line: 274, column: 5, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4759, file: !293, line: 271, column: 38)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !293, line: 271, column: 16)
!4760 = distinct !DILexicalBlock(scope: !4747, file: !293, line: 268, column: 9)
!4761 = !DILocation(line: 0, scope: !4760)
!4762 = !DILocation(line: 276, column: 1, scope: !4747)
!4763 = distinct !DISubprogram(name: "halUART_Rx_VFIFO_Initialize", scope: !293, file: !293, line: 278, type: !4764, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4766)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{null, !4517, !210, !61, !61, !61, !61}
!4766 = !{!4767, !4768, !4769, !4770, !4771, !4772}
!4767 = !DILocalVariable(name: "u_port", arg: 1, scope: !4763, file: !293, line: 278, type: !4517)
!4768 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !4763, file: !293, line: 278, type: !210)
!4769 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !4763, file: !293, line: 278, type: !61)
!4770 = !DILocalVariable(name: "alert_length", arg: 4, scope: !4763, file: !293, line: 278, type: !61)
!4771 = !DILocalVariable(name: "threshold", arg: 5, scope: !4763, file: !293, line: 278, type: !61)
!4772 = !DILocalVariable(name: "timeout", arg: 6, scope: !4763, file: !293, line: 278, type: !61)
!4773 = !DILocation(line: 0, scope: !4763)
!4774 = !DILocation(line: 280, column: 9, scope: !4763)
!4775 = !DILocation(line: 286, column: 5, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !293, line: 283, column: 38)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !293, line: 283, column: 16)
!4778 = distinct !DILexicalBlock(scope: !4763, file: !293, line: 280, column: 9)
!4779 = !DILocation(line: 0, scope: !4778)
!4780 = !DILocation(line: 288, column: 1, scope: !4763)
!4781 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_Callback", scope: !293, file: !293, line: 290, type: !4782, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4784)
!4782 = !DISubroutineType(types: !4783)
!4783 = !{null, !4517, !754}
!4784 = !{!4785, !4786}
!4785 = !DILocalVariable(name: "u_port", arg: 1, scope: !4781, file: !293, line: 290, type: !4517)
!4786 = !DILocalVariable(name: "func", arg: 2, scope: !4781, file: !293, line: 290, type: !754)
!4787 = !DILocation(line: 0, scope: !4781)
!4788 = !DILocation(line: 292, column: 9, scope: !4781)
!4789 = !DILocation(line: 296, column: 5, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !293, line: 294, column: 38)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !293, line: 294, column: 16)
!4792 = distinct !DILexicalBlock(scope: !4781, file: !293, line: 292, column: 9)
!4793 = !DILocation(line: 0, scope: !4792)
!4794 = !DILocation(line: 298, column: 1, scope: !4781)
!4795 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_TO_Callback", scope: !293, file: !293, line: 300, type: !4782, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4796)
!4796 = !{!4797, !4798}
!4797 = !DILocalVariable(name: "u_port", arg: 1, scope: !4795, file: !293, line: 300, type: !4517)
!4798 = !DILocalVariable(name: "func", arg: 2, scope: !4795, file: !293, line: 300, type: !754)
!4799 = !DILocation(line: 0, scope: !4795)
!4800 = !DILocation(line: 302, column: 9, scope: !4795)
!4801 = !DILocation(line: 306, column: 5, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4803, file: !293, line: 304, column: 38)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !293, line: 304, column: 16)
!4804 = distinct !DILexicalBlock(scope: !4795, file: !293, line: 302, column: 9)
!4805 = !DILocation(line: 0, scope: !4804)
!4806 = !DILocation(line: 308, column: 1, scope: !4795)
!4807 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !293, file: !293, line: 310, type: !4571, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4808)
!4808 = !{!4809, !4810, !4811, !4812}
!4809 = !DILocalVariable(name: "u_port", arg: 1, scope: !4807, file: !293, line: 310, type: !4517)
!4810 = !DILocalVariable(name: "base", scope: !4807, file: !293, line: 312, type: !30)
!4811 = !DILocalVariable(name: "EFR", scope: !4807, file: !293, line: 313, type: !1155)
!4812 = !DILocalVariable(name: "LCR", scope: !4807, file: !293, line: 313, type: !1155)
!4813 = !DILocation(line: 0, scope: !4807)
!4814 = !DILocation(line: 312, column: 25, scope: !4807)
!4815 = !DILocation(line: 315, column: 11, scope: !4807)
!4816 = !DILocation(line: 317, column: 33, scope: !4807)
!4817 = !DILocation(line: 318, column: 11, scope: !4807)
!4818 = !DILocation(line: 320, column: 35, scope: !4807)
!4819 = !DILocation(line: 320, column: 33, scope: !4807)
!4820 = !DILocation(line: 322, column: 5, scope: !4807)
!4821 = !DILocation(line: 322, column: 39, scope: !4807)
!4822 = !DILocation(line: 324, column: 33, scope: !4807)
!4823 = !DILocation(line: 325, column: 5, scope: !4807)
!4824 = !DILocation(line: 325, column: 33, scope: !4807)
!4825 = !DILocation(line: 327, column: 35, scope: !4807)
!4826 = !DILocation(line: 327, column: 33, scope: !4807)
!4827 = !DILocation(line: 328, column: 1, scope: !4807)
!4828 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !293, file: !293, line: 330, type: !4829, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4831)
!4829 = !DISubroutineType(types: !4830)
!4830 = !{null, !4517, !54, !54, !54}
!4831 = !{!4832, !4833, !4834, !4835, !4836, !4837, !4838}
!4832 = !DILocalVariable(name: "u_port", arg: 1, scope: !4828, file: !293, line: 330, type: !4517)
!4833 = !DILocalVariable(name: "xon", arg: 2, scope: !4828, file: !293, line: 330, type: !54)
!4834 = !DILocalVariable(name: "xoff", arg: 3, scope: !4828, file: !293, line: 330, type: !54)
!4835 = !DILocalVariable(name: "escape_character", arg: 4, scope: !4828, file: !293, line: 330, type: !54)
!4836 = !DILocalVariable(name: "base", scope: !4828, file: !293, line: 332, type: !30)
!4837 = !DILocalVariable(name: "EFR", scope: !4828, file: !293, line: 333, type: !1155)
!4838 = !DILocalVariable(name: "LCR", scope: !4828, file: !293, line: 333, type: !1155)
!4839 = !DILocation(line: 0, scope: !4828)
!4840 = !DILocation(line: 332, column: 25, scope: !4828)
!4841 = !DILocation(line: 335, column: 11, scope: !4828)
!4842 = !DILocation(line: 337, column: 33, scope: !4828)
!4843 = !DILocation(line: 338, column: 36, scope: !4828)
!4844 = !DILocation(line: 338, column: 5, scope: !4828)
!4845 = !DILocation(line: 338, column: 34, scope: !4828)
!4846 = !DILocation(line: 339, column: 5, scope: !4828)
!4847 = !DILocation(line: 339, column: 34, scope: !4828)
!4848 = !DILocation(line: 340, column: 37, scope: !4828)
!4849 = !DILocation(line: 340, column: 5, scope: !4828)
!4850 = !DILocation(line: 340, column: 35, scope: !4828)
!4851 = !DILocation(line: 341, column: 5, scope: !4828)
!4852 = !DILocation(line: 341, column: 35, scope: !4828)
!4853 = !DILocation(line: 343, column: 11, scope: !4828)
!4854 = !DILocation(line: 345, column: 35, scope: !4828)
!4855 = !DILocation(line: 345, column: 33, scope: !4828)
!4856 = !DILocation(line: 347, column: 35, scope: !4828)
!4857 = !DILocation(line: 347, column: 33, scope: !4828)
!4858 = !DILocation(line: 349, column: 43, scope: !4828)
!4859 = !DILocation(line: 349, column: 5, scope: !4828)
!4860 = !DILocation(line: 349, column: 41, scope: !4828)
!4861 = !DILocation(line: 350, column: 5, scope: !4828)
!4862 = !DILocation(line: 350, column: 39, scope: !4828)
!4863 = !DILocation(line: 351, column: 1, scope: !4828)
!4864 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !293, file: !293, line: 353, type: !4571, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4865)
!4865 = !{!4866, !4867, !4868}
!4866 = !DILocalVariable(name: "u_port", arg: 1, scope: !4864, file: !293, line: 353, type: !4517)
!4867 = !DILocalVariable(name: "base", scope: !4864, file: !293, line: 355, type: !30)
!4868 = !DILocalVariable(name: "LCR", scope: !4864, file: !293, line: 356, type: !1155)
!4869 = !DILocation(line: 0, scope: !4864)
!4870 = !DILocation(line: 355, column: 25, scope: !4864)
!4871 = !DILocation(line: 358, column: 11, scope: !4864)
!4872 = !DILocation(line: 360, column: 33, scope: !4864)
!4873 = !DILocation(line: 362, column: 5, scope: !4864)
!4874 = !DILocation(line: 362, column: 33, scope: !4864)
!4875 = !DILocation(line: 364, column: 33, scope: !4864)
!4876 = !DILocation(line: 366, column: 35, scope: !4864)
!4877 = !DILocation(line: 366, column: 33, scope: !4864)
!4878 = !DILocation(line: 367, column: 1, scope: !4864)
!4879 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !293, file: !293, line: 370, type: !4571, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4880)
!4880 = !{!4881, !4882}
!4881 = !DILocalVariable(name: "u_port", arg: 1, scope: !4879, file: !293, line: 370, type: !4517)
!4882 = !DILocalVariable(name: "base", scope: !4879, file: !293, line: 372, type: !30)
!4883 = !DILocation(line: 0, scope: !4879)
!4884 = !DILocation(line: 372, column: 25, scope: !4879)
!4885 = !DILocation(line: 374, column: 5, scope: !4879)
!4886 = !DILocation(line: 374, column: 38, scope: !4879)
!4887 = !DILocation(line: 375, column: 1, scope: !4879)
!4888 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !293, file: !293, line: 377, type: !4571, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4889)
!4889 = !{!4890, !4891, !4892, !4893}
!4890 = !DILocalVariable(name: "u_port", arg: 1, scope: !4888, file: !293, line: 377, type: !4517)
!4891 = !DILocalVariable(name: "base", scope: !4888, file: !293, line: 379, type: !30)
!4892 = !DILocalVariable(name: "IER", scope: !4888, file: !293, line: 380, type: !1155)
!4893 = !DILocalVariable(name: "LCR", scope: !4888, file: !293, line: 380, type: !1155)
!4894 = !DILocation(line: 0, scope: !4888)
!4895 = !DILocation(line: 379, column: 25, scope: !4888)
!4896 = !DILocation(line: 382, column: 11, scope: !4888)
!4897 = !DILocation(line: 383, column: 33, scope: !4888)
!4898 = !DILocation(line: 385, column: 11, scope: !4888)
!4899 = !DILocation(line: 387, column: 35, scope: !4888)
!4900 = !DILocation(line: 387, column: 33, scope: !4888)
!4901 = !DILocation(line: 389, column: 35, scope: !4888)
!4902 = !DILocation(line: 389, column: 33, scope: !4888)
!4903 = !DILocation(line: 391, column: 5, scope: !4888)
!4904 = !DILocation(line: 391, column: 38, scope: !4888)
!4905 = !DILocation(line: 392, column: 1, scope: !4888)
!4906 = distinct !DISubprogram(name: "uart_mask_send_interrupt", scope: !293, file: !293, line: 394, type: !4571, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4907)
!4907 = !{!4908, !4909, !4910, !4911}
!4908 = !DILocalVariable(name: "u_port", arg: 1, scope: !4906, file: !293, line: 394, type: !4517)
!4909 = !DILocalVariable(name: "base", scope: !4906, file: !293, line: 396, type: !30)
!4910 = !DILocalVariable(name: "IER", scope: !4906, file: !293, line: 397, type: !1155)
!4911 = !DILocalVariable(name: "LCR", scope: !4906, file: !293, line: 397, type: !1155)
!4912 = !DILocation(line: 0, scope: !4906)
!4913 = !DILocation(line: 396, column: 25, scope: !4906)
!4914 = !DILocation(line: 399, column: 11, scope: !4906)
!4915 = !DILocation(line: 400, column: 33, scope: !4906)
!4916 = !DILocation(line: 402, column: 11, scope: !4906)
!4917 = !DILocation(line: 403, column: 9, scope: !4906)
!4918 = !DILocation(line: 404, column: 33, scope: !4906)
!4919 = !DILocation(line: 406, column: 35, scope: !4906)
!4920 = !DILocation(line: 406, column: 33, scope: !4906)
!4921 = !DILocation(line: 408, column: 5, scope: !4906)
!4922 = !DILocation(line: 408, column: 38, scope: !4906)
!4923 = !DILocation(line: 409, column: 1, scope: !4906)
!4924 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !293, file: !293, line: 411, type: !600, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4925)
!4925 = !{!4926, !4927, !4928, !4929}
!4926 = !DILocalVariable(name: "irq_number", arg: 1, scope: !4924, file: !293, line: 411, type: !339)
!4927 = !DILocalVariable(name: "u_port", scope: !4924, file: !293, line: 413, type: !4517)
!4928 = !DILocalVariable(name: "base", scope: !4924, file: !293, line: 414, type: !30)
!4929 = !DILocalVariable(name: "IIR", scope: !4924, file: !293, line: 415, type: !1155)
!4930 = !DILocation(line: 0, scope: !4924)
!4931 = !DILocation(line: 417, column: 20, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4924, file: !293, line: 417, column: 9)
!4933 = !DILocation(line: 425, column: 11, scope: !4924)
!4934 = !DILocation(line: 426, column: 17, scope: !4924)
!4935 = !DILocation(line: 426, column: 5, scope: !4924)
!4936 = !DILocation(line: 428, column: 13, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4924, file: !293, line: 426, column: 25)
!4938 = !DILocation(line: 429, column: 13, scope: !4937)
!4939 = !DILocation(line: 433, column: 1, scope: !4924)
!4940 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !293, file: !293, line: 436, type: !4571, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4941)
!4941 = !{!4942, !4943}
!4942 = !DILocalVariable(name: "u_port", arg: 1, scope: !4940, file: !293, line: 436, type: !4517)
!4943 = !DILocalVariable(name: "base", scope: !4940, file: !293, line: 438, type: !30)
!4944 = !DILocation(line: 0, scope: !4940)
!4945 = !DILocation(line: 438, column: 25, scope: !4940)
!4946 = !DILocation(line: 440, column: 5, scope: !4940)
!4947 = !DILocation(line: 440, column: 33, scope: !4940)
!4948 = !DILocation(line: 441, column: 5, scope: !4940)
!4949 = !DILocation(line: 441, column: 33, scope: !4940)
!4950 = !DILocation(line: 442, column: 5, scope: !4940)
!4951 = !DILocation(line: 442, column: 34, scope: !4940)
!4952 = !DILocation(line: 443, column: 5, scope: !4940)
!4953 = !DILocation(line: 443, column: 35, scope: !4940)
!4954 = !DILocation(line: 445, column: 33, scope: !4940)
!4955 = !DILocation(line: 446, column: 5, scope: !4940)
!4956 = !DILocation(line: 446, column: 33, scope: !4940)
!4957 = !DILocation(line: 447, column: 5, scope: !4940)
!4958 = !DILocation(line: 447, column: 33, scope: !4940)
!4959 = !DILocation(line: 449, column: 33, scope: !4940)
!4960 = !DILocation(line: 450, column: 33, scope: !4940)
!4961 = !DILocation(line: 451, column: 33, scope: !4940)
!4962 = !DILocation(line: 453, column: 33, scope: !4940)
!4963 = !DILocation(line: 454, column: 33, scope: !4940)
!4964 = !DILocation(line: 455, column: 33, scope: !4940)
!4965 = !DILocation(line: 457, column: 33, scope: !4940)
!4966 = !DILocation(line: 458, column: 5, scope: !4940)
!4967 = !DILocation(line: 458, column: 33, scope: !4940)
!4968 = !DILocation(line: 459, column: 5, scope: !4940)
!4969 = !DILocation(line: 459, column: 39, scope: !4940)
!4970 = !DILocation(line: 460, column: 5, scope: !4940)
!4971 = !DILocation(line: 460, column: 40, scope: !4940)
!4972 = !DILocation(line: 461, column: 5, scope: !4940)
!4973 = !DILocation(line: 461, column: 42, scope: !4940)
!4974 = !DILocation(line: 462, column: 5, scope: !4940)
!4975 = !DILocation(line: 462, column: 42, scope: !4940)
!4976 = !DILocation(line: 463, column: 5, scope: !4940)
!4977 = !DILocation(line: 463, column: 35, scope: !4940)
!4978 = !DILocation(line: 464, column: 5, scope: !4940)
!4979 = !DILocation(line: 464, column: 41, scope: !4940)
!4980 = !DILocation(line: 465, column: 5, scope: !4940)
!4981 = !DILocation(line: 465, column: 39, scope: !4940)
!4982 = !DILocation(line: 466, column: 5, scope: !4940)
!4983 = !DILocation(line: 466, column: 38, scope: !4940)
!4984 = !DILocation(line: 467, column: 5, scope: !4940)
!4985 = !DILocation(line: 467, column: 42, scope: !4940)
!4986 = !DILocation(line: 468, column: 5, scope: !4940)
!4987 = !DILocation(line: 468, column: 45, scope: !4940)
!4988 = !DILocation(line: 469, column: 5, scope: !4940)
!4989 = !DILocation(line: 469, column: 39, scope: !4940)
!4990 = !DILocation(line: 470, column: 5, scope: !4940)
!4991 = !DILocation(line: 470, column: 39, scope: !4940)
!4992 = !DILocation(line: 471, column: 5, scope: !4940)
!4993 = !DILocation(line: 471, column: 42, scope: !4940)
!4994 = !DILocation(line: 472, column: 1, scope: !4940)
!4995 = distinct !DISubprogram(name: "uart_query_empty", scope: !293, file: !293, line: 474, type: !4571, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4996)
!4996 = !{!4997, !4998}
!4997 = !DILocalVariable(name: "u_port", arg: 1, scope: !4995, file: !293, line: 474, type: !4517)
!4998 = !DILocalVariable(name: "base", scope: !4995, file: !293, line: 476, type: !30)
!4999 = !DILocation(line: 0, scope: !4995)
!5000 = !DILocation(line: 476, column: 25, scope: !4995)
!5001 = !DILocation(line: 478, column: 5, scope: !4995)
!5002 = !DILocation(line: 478, column: 14, scope: !4995)
!5003 = !DILocation(line: 478, column: 42, scope: !4995)
!5004 = !DILocation(line: 478, column: 12, scope: !4995)
!5005 = distinct !{!5005, !5001, !5006}
!5006 = !DILocation(line: 478, column: 50, scope: !4995)
!5007 = !DILocation(line: 479, column: 1, scope: !4995)
!5008 = distinct !DISubprogram(name: "log_hal_fatal_internal", scope: !343, file: !343, line: 129, type: !5009, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5011)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{null, !331, !7, !331, null}
!5011 = !{!5012, !5013, !5014, !5015}
!5012 = !DILocalVariable(name: "func", arg: 1, scope: !5008, file: !343, line: 129, type: !331)
!5013 = !DILocalVariable(name: "line", arg: 2, scope: !5008, file: !343, line: 129, type: !7)
!5014 = !DILocalVariable(name: "message", arg: 3, scope: !5008, file: !343, line: 129, type: !331)
!5015 = !DILocalVariable(name: "ap", scope: !5008, file: !343, line: 131, type: !5016)
!5016 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5017, line: 46, baseType: !5018)
!5017 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!5018 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5019, line: 32, baseType: !5020)
!5019 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!5020 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !343, baseType: !5021)
!5021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5022)
!5022 = !{!5023}
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5021, file: !343, line: 131, baseType: !51, size: 32)
!5024 = !DILocation(line: 0, scope: !5008)
!5025 = !DILocation(line: 131, column: 5, scope: !5008)
!5026 = !DILocation(line: 131, column: 13, scope: !5008)
!5027 = !DILocation(line: 132, column: 5, scope: !5008)
!5028 = !DILocation(line: 133, column: 5, scope: !5008)
!5029 = !DILocation(line: 134, column: 5, scope: !5008)
!5030 = !DILocation(line: 135, column: 1, scope: !5008)
!5031 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !343, file: !343, line: 138, type: !5009, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5032)
!5032 = !{!5033, !5034, !5035, !5036}
!5033 = !DILocalVariable(name: "func", arg: 1, scope: !5031, file: !343, line: 138, type: !331)
!5034 = !DILocalVariable(name: "line", arg: 2, scope: !5031, file: !343, line: 138, type: !7)
!5035 = !DILocalVariable(name: "message", arg: 3, scope: !5031, file: !343, line: 138, type: !331)
!5036 = !DILocalVariable(name: "ap", scope: !5031, file: !343, line: 140, type: !5016)
!5037 = !DILocation(line: 0, scope: !5031)
!5038 = !DILocation(line: 140, column: 5, scope: !5031)
!5039 = !DILocation(line: 140, column: 13, scope: !5031)
!5040 = !DILocation(line: 141, column: 5, scope: !5031)
!5041 = !DILocation(line: 142, column: 5, scope: !5031)
!5042 = !DILocation(line: 143, column: 5, scope: !5031)
!5043 = !DILocation(line: 144, column: 1, scope: !5031)
!5044 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !343, file: !343, line: 146, type: !5009, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5045)
!5045 = !{!5046, !5047, !5048, !5049}
!5046 = !DILocalVariable(name: "func", arg: 1, scope: !5044, file: !343, line: 146, type: !331)
!5047 = !DILocalVariable(name: "line", arg: 2, scope: !5044, file: !343, line: 146, type: !7)
!5048 = !DILocalVariable(name: "message", arg: 3, scope: !5044, file: !343, line: 146, type: !331)
!5049 = !DILocalVariable(name: "ap", scope: !5044, file: !343, line: 148, type: !5016)
!5050 = !DILocation(line: 0, scope: !5044)
!5051 = !DILocation(line: 148, column: 5, scope: !5044)
!5052 = !DILocation(line: 148, column: 13, scope: !5044)
!5053 = !DILocation(line: 149, column: 5, scope: !5044)
!5054 = !DILocation(line: 150, column: 5, scope: !5044)
!5055 = !DILocation(line: 151, column: 5, scope: !5044)
!5056 = !DILocation(line: 152, column: 1, scope: !5044)
!5057 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !343, file: !343, line: 154, type: !5009, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5058)
!5058 = !{!5059, !5060, !5061, !5062}
!5059 = !DILocalVariable(name: "func", arg: 1, scope: !5057, file: !343, line: 154, type: !331)
!5060 = !DILocalVariable(name: "line", arg: 2, scope: !5057, file: !343, line: 154, type: !7)
!5061 = !DILocalVariable(name: "message", arg: 3, scope: !5057, file: !343, line: 154, type: !331)
!5062 = !DILocalVariable(name: "ap", scope: !5057, file: !343, line: 156, type: !5016)
!5063 = !DILocation(line: 0, scope: !5057)
!5064 = !DILocation(line: 156, column: 5, scope: !5057)
!5065 = !DILocation(line: 156, column: 13, scope: !5057)
!5066 = !DILocation(line: 157, column: 5, scope: !5057)
!5067 = !DILocation(line: 158, column: 5, scope: !5057)
!5068 = !DILocation(line: 159, column: 5, scope: !5057)
!5069 = !DILocation(line: 160, column: 1, scope: !5057)
!5070 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !343, file: !343, line: 162, type: !5071, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !342, retainedNodes: !5073)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{null, !331, !7, !331, !375, !7, null}
!5073 = !{!5074, !5075, !5076, !5077, !5078, !5079}
!5074 = !DILocalVariable(name: "func", arg: 1, scope: !5070, file: !343, line: 162, type: !331)
!5075 = !DILocalVariable(name: "line", arg: 2, scope: !5070, file: !343, line: 162, type: !7)
!5076 = !DILocalVariable(name: "message", arg: 3, scope: !5070, file: !343, line: 162, type: !331)
!5077 = !DILocalVariable(name: "data", arg: 4, scope: !5070, file: !343, line: 162, type: !375)
!5078 = !DILocalVariable(name: "length", arg: 5, scope: !5070, file: !343, line: 162, type: !7)
!5079 = !DILocalVariable(name: "ap", scope: !5070, file: !343, line: 164, type: !5016)
!5080 = !DILocation(line: 0, scope: !5070)
!5081 = !DILocation(line: 164, column: 5, scope: !5070)
!5082 = !DILocation(line: 164, column: 13, scope: !5070)
!5083 = !DILocation(line: 165, column: 5, scope: !5070)
!5084 = !DILocation(line: 166, column: 5, scope: !5070)
!5085 = !DILocation(line: 167, column: 5, scope: !5070)
!5086 = !DILocation(line: 168, column: 1, scope: !5070)
!5087 = distinct !DISubprogram(name: "hal_cache_init", scope: !380, file: !380, line: 53, type: !5088, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5091)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{!5090}
!5090 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !383, line: 172, baseType: !382)
!5091 = !{!5092, !5093}
!5092 = !DILocalVariable(name: "region", scope: !5087, file: !380, line: 55, type: !1864)
!5093 = !DILocalVariable(name: "irq_flag", scope: !5087, file: !380, line: 56, type: !61)
!5094 = !DILocation(line: 59, column: 16, scope: !5087)
!5095 = !DILocation(line: 0, scope: !5087)
!5096 = !DILocation(line: 62, column: 9, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5087, file: !380, line: 62, column: 9)
!5098 = !DILocation(line: 62, column: 9, scope: !5087)
!5099 = !DILocation(line: 64, column: 9, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5097, file: !380, line: 62, column: 39)
!5101 = !DILocation(line: 66, column: 9, scope: !5100)
!5102 = !DILocation(line: 69, column: 24, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5097, file: !380, line: 67, column: 12)
!5104 = !DILocation(line: 72, column: 9, scope: !5103)
!5105 = !DILocation(line: 77, column: 5, scope: !5087)
!5106 = !DILocation(line: 80, column: 22, scope: !5087)
!5107 = !DILocation(line: 81, column: 28, scope: !5087)
!5108 = !DILocation(line: 84, column: 19, scope: !5087)
!5109 = !DILocation(line: 85, column: 23, scope: !5087)
!5110 = !DILocation(line: 88, column: 5, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5087, file: !380, line: 88, column: 5)
!5112 = !DILocation(line: 90, column: 9, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !380, line: 88, column: 81)
!5114 = distinct !DILexicalBlock(scope: !5111, file: !380, line: 88, column: 5)
!5115 = !DILocation(line: 90, column: 38, scope: !5113)
!5116 = !DILocation(line: 91, column: 9, scope: !5113)
!5117 = !DILocation(line: 91, column: 42, scope: !5113)
!5118 = !DILocation(line: 94, column: 45, scope: !5113)
!5119 = !DILocation(line: 94, column: 47, scope: !5113)
!5120 = !DILocation(line: 95, column: 49, scope: !5113)
!5121 = !DILocation(line: 95, column: 51, scope: !5113)
!5122 = !DILocation(line: 88, column: 77, scope: !5114)
!5123 = !DILocation(line: 88, column: 46, scope: !5114)
!5124 = distinct !{!5124, !5110, !5125}
!5125 = !DILocation(line: 96, column: 5, scope: !5111)
!5126 = !DILocation(line: 99, column: 1, scope: !5087)
!5127 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !380, file: !380, line: 327, type: !5088, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5128)
!5128 = !{!5129}
!5129 = !DILocalVariable(name: "irq_flag", scope: !5127, file: !380, line: 329, type: !61)
!5130 = !DILocation(line: 332, column: 16, scope: !5127)
!5131 = !DILocation(line: 0, scope: !5127)
!5132 = !DILocation(line: 335, column: 21, scope: !5127)
!5133 = !DILocation(line: 336, column: 21, scope: !5127)
!5134 = !DILocation(line: 339, column: 21, scope: !5127)
!5135 = !DILocation(line: 340, column: 21, scope: !5127)
!5136 = !DILocation(line: 434, column: 3, scope: !5137, inlinedAt: !5139)
!5137 = distinct !DISubprogram(name: "__ISB", scope: !5138, file: !5138, line: 432, type: !154, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !1935)
!5138 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!5139 = distinct !DILocation(line: 343, column: 5, scope: !5127)
!5140 = !{i64 296574}
!5141 = !DILocation(line: 346, column: 5, scope: !5127)
!5142 = !DILocation(line: 348, column: 5, scope: !5127)
!5143 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !380, file: !380, line: 101, type: !5088, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5144)
!5144 = !{!5145}
!5145 = !DILocalVariable(name: "region", scope: !5143, file: !380, line: 103, type: !1864)
!5146 = !DILocation(line: 107, column: 5, scope: !5143)
!5147 = !DILocation(line: 110, column: 22, scope: !5143)
!5148 = !DILocation(line: 111, column: 28, scope: !5143)
!5149 = !DILocation(line: 114, column: 19, scope: !5143)
!5150 = !DILocation(line: 115, column: 23, scope: !5143)
!5151 = !DILocation(line: 0, scope: !5143)
!5152 = !DILocation(line: 118, column: 5, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5143, file: !380, line: 118, column: 5)
!5154 = !DILocation(line: 120, column: 9, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5156, file: !380, line: 118, column: 81)
!5156 = distinct !DILexicalBlock(scope: !5153, file: !380, line: 118, column: 5)
!5157 = !DILocation(line: 120, column: 38, scope: !5155)
!5158 = !DILocation(line: 121, column: 9, scope: !5155)
!5159 = !DILocation(line: 121, column: 42, scope: !5155)
!5160 = !DILocation(line: 124, column: 45, scope: !5155)
!5161 = !DILocation(line: 124, column: 47, scope: !5155)
!5162 = !DILocation(line: 125, column: 49, scope: !5155)
!5163 = !DILocation(line: 125, column: 51, scope: !5155)
!5164 = !DILocation(line: 118, column: 77, scope: !5156)
!5165 = !DILocation(line: 118, column: 46, scope: !5156)
!5166 = distinct !{!5166, !5152, !5167}
!5167 = !DILocation(line: 126, column: 5, scope: !5153)
!5168 = !DILocation(line: 129, column: 20, scope: !5143)
!5169 = !DILocation(line: 131, column: 5, scope: !5143)
!5170 = distinct !DISubprogram(name: "hal_cache_enable", scope: !380, file: !380, line: 134, type: !5088, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !1935)
!5171 = !DILocation(line: 137, column: 45, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5170, file: !380, line: 137, column: 9)
!5173 = !DILocation(line: 137, column: 28, scope: !5172)
!5174 = !DILocation(line: 137, column: 9, scope: !5170)
!5175 = !DILocation(line: 142, column: 22, scope: !5170)
!5176 = !DILocation(line: 145, column: 28, scope: !5170)
!5177 = !DILocation(line: 145, column: 19, scope: !5170)
!5178 = !DILocation(line: 147, column: 5, scope: !5170)
!5179 = !DILocation(line: 0, scope: !5170)
!5180 = !DILocation(line: 148, column: 1, scope: !5170)
!5181 = distinct !DISubprogram(name: "hal_cache_disable", scope: !380, file: !380, line: 150, type: !5088, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5182)
!5182 = !{!5183}
!5183 = !DILocalVariable(name: "irq_flag", scope: !5181, file: !380, line: 152, type: !61)
!5184 = !DILocation(line: 155, column: 16, scope: !5181)
!5185 = !DILocation(line: 0, scope: !5181)
!5186 = !DILocation(line: 158, column: 16, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5181, file: !380, line: 158, column: 9)
!5188 = !DILocation(line: 158, column: 26, scope: !5187)
!5189 = !DILocation(line: 158, column: 9, scope: !5181)
!5190 = !DILocation(line: 160, column: 9, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5187, file: !380, line: 158, column: 49)
!5192 = !DILocation(line: 161, column: 5, scope: !5191)
!5193 = !DILocation(line: 164, column: 22, scope: !5181)
!5194 = !DILocation(line: 167, column: 28, scope: !5181)
!5195 = !DILocation(line: 167, column: 19, scope: !5181)
!5196 = !DILocation(line: 170, column: 5, scope: !5181)
!5197 = !DILocation(line: 172, column: 5, scope: !5181)
!5198 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !380, file: !380, line: 175, type: !5199, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5201)
!5199 = !DISubroutineType(types: !5200)
!5200 = !{!5090, !1864}
!5201 = !{!5202}
!5202 = !DILocalVariable(name: "region", arg: 1, scope: !5198, file: !380, line: 175, type: !1864)
!5203 = !DILocation(line: 0, scope: !5198)
!5204 = !DILocation(line: 178, column: 16, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5198, file: !380, line: 178, column: 9)
!5206 = !DILocation(line: 178, column: 9, scope: !5198)
!5207 = !DILocation(line: 183, column: 9, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5198, file: !380, line: 183, column: 9)
!5209 = !DILocation(line: 183, column: 38, scope: !5208)
!5210 = !DILocation(line: 183, column: 9, scope: !5198)
!5211 = !DILocation(line: 184, column: 38, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5208, file: !380, line: 183, column: 62)
!5213 = !DILocation(line: 184, column: 32, scope: !5212)
!5214 = !DILocation(line: 190, column: 32, scope: !5198)
!5215 = !DILocation(line: 190, column: 23, scope: !5198)
!5216 = !DILocation(line: 192, column: 5, scope: !5198)
!5217 = !DILocation(line: 193, column: 1, scope: !5198)
!5218 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !380, file: !380, line: 195, type: !5199, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5219)
!5219 = !{!5220}
!5220 = !DILocalVariable(name: "region", arg: 1, scope: !5218, file: !380, line: 195, type: !1864)
!5221 = !DILocation(line: 0, scope: !5218)
!5222 = !DILocation(line: 198, column: 16, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5218, file: !380, line: 198, column: 9)
!5224 = !DILocation(line: 198, column: 9, scope: !5218)
!5225 = !DILocation(line: 203, column: 35, scope: !5218)
!5226 = !DILocation(line: 203, column: 31, scope: !5218)
!5227 = !DILocation(line: 203, column: 28, scope: !5218)
!5228 = !DILocation(line: 206, column: 32, scope: !5218)
!5229 = !DILocation(line: 206, column: 23, scope: !5218)
!5230 = !DILocation(line: 209, column: 41, scope: !5218)
!5231 = !DILocation(line: 209, column: 43, scope: !5218)
!5232 = !DILocation(line: 210, column: 45, scope: !5218)
!5233 = !DILocation(line: 210, column: 47, scope: !5218)
!5234 = !DILocation(line: 212, column: 5, scope: !5218)
!5235 = !DILocation(line: 213, column: 1, scope: !5218)
!5236 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !380, file: !380, line: 215, type: !5237, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5240)
!5237 = !DISubroutineType(types: !5238)
!5238 = !{!5090, !5239}
!5239 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !383, line: 182, baseType: !412)
!5240 = !{!5241}
!5241 = !DILocalVariable(name: "cache_size", arg: 1, scope: !5236, file: !380, line: 215, type: !5239)
!5242 = !DILocation(line: 0, scope: !5236)
!5243 = !DILocation(line: 218, column: 20, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5236, file: !380, line: 218, column: 9)
!5245 = !DILocation(line: 218, column: 9, scope: !5236)
!5246 = !DILocation(line: 223, column: 22, scope: !5236)
!5247 = !DILocation(line: 224, column: 37, scope: !5236)
!5248 = !DILocation(line: 224, column: 22, scope: !5236)
!5249 = !DILocation(line: 227, column: 20, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5236, file: !380, line: 227, column: 9)
!5251 = !DILocation(line: 227, column: 9, scope: !5236)
!5252 = !DILocation(line: 228, column: 26, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5250, file: !380, line: 227, column: 43)
!5254 = !DILocation(line: 229, column: 5, scope: !5253)
!5255 = !DILocation(line: 232, column: 28, scope: !5236)
!5256 = !DILocation(line: 232, column: 19, scope: !5236)
!5257 = !DILocation(line: 234, column: 5, scope: !5236)
!5258 = !DILocation(line: 235, column: 1, scope: !5236)
!5259 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !380, file: !380, line: 237, type: !5260, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5269)
!5260 = !DISubroutineType(types: !5261)
!5261 = !{!5090, !1864, !5262}
!5262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5263, size: 32)
!5263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5264)
!5264 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !383, line: 222, baseType: !5265)
!5265 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !383, line: 219, size: 64, elements: !5266)
!5266 = !{!5267, !5268}
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !5265, file: !383, line: 220, baseType: !61, size: 32)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !5265, file: !383, line: 221, baseType: !61, size: 32, offset: 32)
!5269 = !{!5270, !5271}
!5270 = !DILocalVariable(name: "region", arg: 1, scope: !5259, file: !380, line: 237, type: !1864)
!5271 = !DILocalVariable(name: "region_config", arg: 2, scope: !5259, file: !380, line: 237, type: !5262)
!5272 = !DILocation(line: 0, scope: !5259)
!5273 = !DILocation(line: 240, column: 16, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5259, file: !380, line: 240, column: 9)
!5275 = !DILocation(line: 240, column: 9, scope: !5259)
!5276 = !DILocation(line: 245, column: 23, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5259, file: !380, line: 245, column: 9)
!5278 = !DILocation(line: 245, column: 9, scope: !5259)
!5279 = !DILocation(line: 250, column: 24, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5259, file: !380, line: 250, column: 9)
!5281 = !DILocation(line: 250, column: 45, scope: !5280)
!5282 = !DILocation(line: 250, column: 9, scope: !5259)
!5283 = !DILocation(line: 251, column: 9, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5280, file: !380, line: 250, column: 81)
!5285 = !DILocation(line: 256, column: 24, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5259, file: !380, line: 256, column: 9)
!5287 = !DILocation(line: 256, column: 42, scope: !5286)
!5288 = !DILocation(line: 256, column: 9, scope: !5259)
!5289 = !DILocation(line: 257, column: 9, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5286, file: !380, line: 256, column: 78)
!5291 = !DILocation(line: 262, column: 5, scope: !5259)
!5292 = !DILocation(line: 262, column: 34, scope: !5259)
!5293 = !DILocation(line: 263, column: 55, scope: !5259)
!5294 = !DILocation(line: 263, column: 93, scope: !5259)
!5295 = !DILocation(line: 263, column: 76, scope: !5259)
!5296 = !DILocation(line: 263, column: 5, scope: !5259)
!5297 = !DILocation(line: 263, column: 38, scope: !5259)
!5298 = !DILocation(line: 266, column: 34, scope: !5259)
!5299 = !DILocation(line: 269, column: 45, scope: !5259)
!5300 = !DILocation(line: 269, column: 41, scope: !5259)
!5301 = !DILocation(line: 269, column: 43, scope: !5259)
!5302 = !DILocation(line: 270, column: 49, scope: !5259)
!5303 = !DILocation(line: 270, column: 45, scope: !5259)
!5304 = !DILocation(line: 270, column: 47, scope: !5259)
!5305 = !DILocation(line: 272, column: 5, scope: !5259)
!5306 = !DILocation(line: 273, column: 1, scope: !5259)
!5307 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !380, file: !380, line: 275, type: !5308, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5310)
!5308 = !DISubroutineType(types: !5309)
!5309 = !{!5090, !61}
!5310 = !{!5311, !5312}
!5311 = !DILocalVariable(name: "address", arg: 1, scope: !5307, file: !380, line: 275, type: !61)
!5312 = !DILocalVariable(name: "irq_flag", scope: !5307, file: !380, line: 277, type: !61)
!5313 = !DILocation(line: 0, scope: !5307)
!5314 = !DILocation(line: 280, column: 17, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5307, file: !380, line: 280, column: 9)
!5316 = !DILocation(line: 280, column: 9, scope: !5307)
!5317 = !DILocation(line: 284, column: 16, scope: !5307)
!5318 = !DILocation(line: 287, column: 32, scope: !5307)
!5319 = !DILocation(line: 287, column: 21, scope: !5307)
!5320 = !DILocation(line: 288, column: 21, scope: !5307)
!5321 = !DILocation(line: 434, column: 3, scope: !5137, inlinedAt: !5322)
!5322 = distinct !DILocation(line: 291, column: 5, scope: !5307)
!5323 = !DILocation(line: 294, column: 5, scope: !5307)
!5324 = !DILocation(line: 296, column: 5, scope: !5307)
!5325 = !DILocation(line: 297, column: 1, scope: !5307)
!5326 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !380, file: !380, line: 299, type: !5327, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5329)
!5327 = !DISubroutineType(types: !5328)
!5328 = !{!5090, !61, !61}
!5329 = !{!5330, !5331, !5332, !5333}
!5330 = !DILocalVariable(name: "address", arg: 1, scope: !5326, file: !380, line: 299, type: !61)
!5331 = !DILocalVariable(name: "length", arg: 2, scope: !5326, file: !380, line: 299, type: !61)
!5332 = !DILocalVariable(name: "irq_flag", scope: !5326, file: !380, line: 301, type: !61)
!5333 = !DILocalVariable(name: "end_address", scope: !5326, file: !380, line: 302, type: !61)
!5334 = !DILocation(line: 0, scope: !5326)
!5335 = !DILocation(line: 302, column: 36, scope: !5326)
!5336 = !DILocation(line: 305, column: 47, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5326, file: !380, line: 305, column: 9)
!5338 = !DILocation(line: 310, column: 16, scope: !5326)
!5339 = !DILocation(line: 313, column: 20, scope: !5326)
!5340 = !DILocation(line: 313, column: 5, scope: !5326)
!5341 = !DILocation(line: 314, column: 9, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5326, file: !380, line: 313, column: 35)
!5343 = !DILocation(line: 315, column: 17, scope: !5342)
!5344 = distinct !{!5344, !5340, !5345}
!5345 = !DILocation(line: 316, column: 5, scope: !5326)
!5346 = !DILocation(line: 434, column: 3, scope: !5137, inlinedAt: !5347)
!5347 = distinct !DILocation(line: 319, column: 5, scope: !5326)
!5348 = !DILocation(line: 322, column: 5, scope: !5326)
!5349 = !DILocation(line: 324, column: 5, scope: !5326)
!5350 = !DILocation(line: 325, column: 1, scope: !5326)
!5351 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !380, file: !380, line: 351, type: !5308, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5352)
!5352 = !{!5353, !5354}
!5353 = !DILocalVariable(name: "address", arg: 1, scope: !5351, file: !380, line: 351, type: !61)
!5354 = !DILocalVariable(name: "irq_flag", scope: !5351, file: !380, line: 353, type: !61)
!5355 = !DILocation(line: 0, scope: !5351)
!5356 = !DILocation(line: 356, column: 17, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5351, file: !380, line: 356, column: 9)
!5358 = !DILocation(line: 356, column: 9, scope: !5351)
!5359 = !DILocation(line: 361, column: 16, scope: !5351)
!5360 = !DILocation(line: 364, column: 32, scope: !5351)
!5361 = !DILocation(line: 364, column: 21, scope: !5351)
!5362 = !DILocation(line: 365, column: 21, scope: !5351)
!5363 = !DILocation(line: 434, column: 3, scope: !5137, inlinedAt: !5364)
!5364 = distinct !DILocation(line: 368, column: 5, scope: !5351)
!5365 = !DILocation(line: 371, column: 5, scope: !5351)
!5366 = !DILocation(line: 373, column: 5, scope: !5351)
!5367 = !DILocation(line: 374, column: 1, scope: !5351)
!5368 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !380, file: !380, line: 376, type: !5327, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5369)
!5369 = !{!5370, !5371, !5372, !5373}
!5370 = !DILocalVariable(name: "address", arg: 1, scope: !5368, file: !380, line: 376, type: !61)
!5371 = !DILocalVariable(name: "length", arg: 2, scope: !5368, file: !380, line: 376, type: !61)
!5372 = !DILocalVariable(name: "irq_flag", scope: !5368, file: !380, line: 378, type: !61)
!5373 = !DILocalVariable(name: "end_address", scope: !5368, file: !380, line: 379, type: !61)
!5374 = !DILocation(line: 0, scope: !5368)
!5375 = !DILocation(line: 379, column: 36, scope: !5368)
!5376 = !DILocation(line: 382, column: 47, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5368, file: !380, line: 382, column: 9)
!5378 = !DILocation(line: 387, column: 16, scope: !5368)
!5379 = !DILocation(line: 390, column: 20, scope: !5368)
!5380 = !DILocation(line: 390, column: 5, scope: !5368)
!5381 = !DILocation(line: 391, column: 9, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5368, file: !380, line: 390, column: 35)
!5383 = !DILocation(line: 392, column: 17, scope: !5382)
!5384 = distinct !{!5384, !5380, !5385}
!5385 = !DILocation(line: 393, column: 5, scope: !5368)
!5386 = !DILocation(line: 434, column: 3, scope: !5137, inlinedAt: !5387)
!5387 = distinct !DILocation(line: 396, column: 5, scope: !5368)
!5388 = !DILocation(line: 399, column: 5, scope: !5368)
!5389 = !DILocation(line: 401, column: 5, scope: !5368)
!5390 = !DILocation(line: 402, column: 1, scope: !5368)
!5391 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !380, file: !380, line: 404, type: !5088, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5392)
!5392 = !{!5393}
!5393 = !DILocalVariable(name: "irq_flag", scope: !5391, file: !380, line: 406, type: !61)
!5394 = !DILocation(line: 409, column: 16, scope: !5391)
!5395 = !DILocation(line: 0, scope: !5391)
!5396 = !DILocation(line: 412, column: 21, scope: !5391)
!5397 = !DILocation(line: 413, column: 21, scope: !5391)
!5398 = !DILocation(line: 434, column: 3, scope: !5137, inlinedAt: !5399)
!5399 = distinct !DILocation(line: 416, column: 5, scope: !5391)
!5400 = !DILocation(line: 419, column: 5, scope: !5391)
!5401 = !DILocation(line: 421, column: 5, scope: !5391)
!5402 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !380, file: !380, line: 424, type: !5403, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5405)
!5403 = !DISubroutineType(types: !5404)
!5404 = !{!69, !61}
!5405 = !{!5406, !5407}
!5406 = !DILocalVariable(name: "address", arg: 1, scope: !5402, file: !380, line: 424, type: !61)
!5407 = !DILocalVariable(name: "region", scope: !5402, file: !380, line: 426, type: !1864)
!5408 = !DILocation(line: 0, scope: !5402)
!5409 = !DILocation(line: 429, column: 18, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5402, file: !380, line: 429, column: 9)
!5411 = !DILocation(line: 429, column: 28, scope: !5410)
!5412 = !DILocation(line: 429, column: 9, scope: !5402)
!5413 = !DILocation(line: 435, column: 20, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5415, file: !380, line: 435, column: 13)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !380, line: 433, column: 81)
!5416 = distinct !DILexicalBlock(scope: !5417, file: !380, line: 433, column: 5)
!5417 = distinct !DILexicalBlock(scope: !5402, file: !380, line: 433, column: 5)
!5418 = !DILocation(line: 435, column: 41, scope: !5414)
!5419 = !DILocation(line: 435, column: 36, scope: !5414)
!5420 = !DILocation(line: 435, column: 13, scope: !5415)
!5421 = !DILocation(line: 436, column: 30, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5423, file: !380, line: 436, column: 17)
!5423 = distinct !DILexicalBlock(scope: !5414, file: !380, line: 435, column: 53)
!5424 = !DILocation(line: 436, column: 59, scope: !5422)
!5425 = !DILocation(line: 436, column: 26, scope: !5422)
!5426 = !DILocation(line: 436, column: 85, scope: !5422)
!5427 = !DILocation(line: 436, column: 99, scope: !5422)
!5428 = !DILocation(line: 436, column: 97, scope: !5422)
!5429 = !DILocation(line: 436, column: 17, scope: !5423)
!5430 = !DILocation(line: 433, column: 77, scope: !5416)
!5431 = !DILocation(line: 433, column: 46, scope: !5416)
!5432 = !DILocation(line: 433, column: 5, scope: !5417)
!5433 = distinct !{!5433, !5432, !5434}
!5434 = !DILocation(line: 440, column: 5, scope: !5417)
!5435 = !DILocation(line: 442, column: 1, scope: !5402)
!5436 = distinct !DISubprogram(name: "hal_nvic_init", scope: !516, file: !516, line: 60, type: !5437, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !1935)
!5437 = !DISubroutineType(types: !5438)
!5438 = !{!5439}
!5439 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !519, line: 158, baseType: !518)
!5440 = !DILocation(line: 62, column: 5, scope: !5436)
!5441 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !516, file: !516, line: 65, type: !5442, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5444)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{!5439, !339}
!5444 = !{!5445, !5446}
!5445 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5441, file: !516, line: 65, type: !339)
!5446 = !DILocalVariable(name: "status", scope: !5441, file: !516, line: 67, type: !5439)
!5447 = !DILocation(line: 0, scope: !5441)
!5448 = !DILocation(line: 69, column: 40, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5441, file: !516, line: 69, column: 9)
!5450 = !DILocation(line: 73, column: 9, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5449, file: !516, line: 72, column: 12)
!5452 = !DILocation(line: 77, column: 5, scope: !5441)
!5453 = !DILocation(line: 78, column: 1, scope: !5441)
!5454 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !531, file: !531, line: 1494, type: !5455, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5457)
!5455 = !DISubroutineType(types: !5456)
!5456 = !{null, !140}
!5457 = !{!5458}
!5458 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5454, file: !531, line: 1494, type: !140)
!5459 = !DILocation(line: 0, scope: !5454)
!5460 = !DILocation(line: 1497, column: 91, scope: !5454)
!5461 = !DILocation(line: 1497, column: 61, scope: !5454)
!5462 = !DILocation(line: 1497, column: 40, scope: !5454)
!5463 = !DILocation(line: 1497, column: 3, scope: !5454)
!5464 = !DILocation(line: 1497, column: 46, scope: !5454)
!5465 = !DILocation(line: 1498, column: 1, scope: !5454)
!5466 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !516, file: !516, line: 80, type: !5442, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5467)
!5467 = !{!5468, !5469}
!5468 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5466, file: !516, line: 80, type: !339)
!5469 = !DILocalVariable(name: "status", scope: !5466, file: !516, line: 82, type: !5439)
!5470 = !DILocation(line: 0, scope: !5466)
!5471 = !DILocation(line: 84, column: 40, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5466, file: !516, line: 84, column: 9)
!5473 = !DILocation(line: 88, column: 9, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5472, file: !516, line: 87, column: 12)
!5475 = !DILocation(line: 92, column: 5, scope: !5466)
!5476 = !DILocation(line: 93, column: 1, scope: !5466)
!5477 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !531, file: !531, line: 1507, type: !5455, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5478)
!5478 = !{!5479}
!5479 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5477, file: !531, line: 1507, type: !140)
!5480 = !DILocation(line: 0, scope: !5477)
!5481 = !DILocation(line: 1509, column: 65, scope: !5477)
!5482 = !DILocation(line: 1509, column: 44, scope: !5477)
!5483 = !DILocation(line: 1509, column: 32, scope: !5477)
!5484 = !DILocation(line: 1509, column: 3, scope: !5477)
!5485 = !DILocation(line: 1509, column: 39, scope: !5477)
!5486 = !DILocation(line: 1510, column: 1, scope: !5477)
!5487 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !516, file: !516, line: 95, type: !5488, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5490)
!5488 = !DISubroutineType(types: !5489)
!5489 = !{!61, !339}
!5490 = !{!5491, !5492}
!5491 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5487, file: !516, line: 95, type: !339)
!5492 = !DILocalVariable(name: "ret", scope: !5487, file: !516, line: 97, type: !61)
!5493 = !DILocation(line: 0, scope: !5487)
!5494 = !DILocation(line: 99, column: 40, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5487, file: !516, line: 99, column: 9)
!5496 = !DILocation(line: 102, column: 15, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5495, file: !516, line: 101, column: 12)
!5498 = !DILocation(line: 105, column: 5, scope: !5487)
!5499 = !DILocation(line: 106, column: 1, scope: !5487)
!5500 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !531, file: !531, line: 1523, type: !5501, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5503)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!61, !140}
!5503 = !{!5504}
!5504 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5500, file: !531, line: 1523, type: !140)
!5505 = !DILocation(line: 0, scope: !5500)
!5506 = !DILocation(line: 1525, column: 51, scope: !5500)
!5507 = !DILocation(line: 1525, column: 23, scope: !5500)
!5508 = !DILocation(line: 1525, column: 83, scope: !5500)
!5509 = !DILocation(line: 1525, column: 22, scope: !5500)
!5510 = !DILocation(line: 1525, column: 3, scope: !5500)
!5511 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !516, file: !516, line: 108, type: !5442, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5512)
!5512 = !{!5513, !5514}
!5513 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5511, file: !516, line: 108, type: !339)
!5514 = !DILocalVariable(name: "status", scope: !5511, file: !516, line: 110, type: !5439)
!5515 = !DILocation(line: 0, scope: !5511)
!5516 = !DILocation(line: 112, column: 40, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5511, file: !516, line: 112, column: 9)
!5518 = !DILocation(line: 116, column: 9, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5517, file: !516, line: 115, column: 12)
!5520 = !DILocation(line: 120, column: 5, scope: !5511)
!5521 = !DILocation(line: 121, column: 1, scope: !5511)
!5522 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !531, file: !531, line: 1535, type: !5455, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5523)
!5523 = !{!5524}
!5524 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5522, file: !531, line: 1535, type: !140)
!5525 = !DILocation(line: 0, scope: !5522)
!5526 = !DILocation(line: 1537, column: 65, scope: !5522)
!5527 = !DILocation(line: 1537, column: 44, scope: !5522)
!5528 = !DILocation(line: 1537, column: 32, scope: !5522)
!5529 = !DILocation(line: 1537, column: 3, scope: !5522)
!5530 = !DILocation(line: 1537, column: 39, scope: !5522)
!5531 = !DILocation(line: 1538, column: 1, scope: !5522)
!5532 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !516, file: !516, line: 123, type: !5442, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5533)
!5533 = !{!5534, !5535}
!5534 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5532, file: !516, line: 123, type: !339)
!5535 = !DILocalVariable(name: "status", scope: !5532, file: !516, line: 125, type: !5439)
!5536 = !DILocation(line: 0, scope: !5532)
!5537 = !DILocation(line: 127, column: 40, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5532, file: !516, line: 127, column: 9)
!5539 = !DILocation(line: 131, column: 9, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5538, file: !516, line: 130, column: 12)
!5541 = !DILocation(line: 135, column: 5, scope: !5532)
!5542 = !DILocation(line: 136, column: 1, scope: !5532)
!5543 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !531, file: !531, line: 1547, type: !5455, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5544)
!5544 = !{!5545}
!5545 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5543, file: !531, line: 1547, type: !140)
!5546 = !DILocation(line: 0, scope: !5543)
!5547 = !DILocation(line: 1549, column: 65, scope: !5543)
!5548 = !DILocation(line: 1549, column: 44, scope: !5543)
!5549 = !DILocation(line: 1549, column: 32, scope: !5543)
!5550 = !DILocation(line: 1549, column: 3, scope: !5543)
!5551 = !DILocation(line: 1549, column: 39, scope: !5543)
!5552 = !DILocation(line: 1550, column: 1, scope: !5543)
!5553 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !516, file: !516, line: 138, type: !5554, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5556)
!5554 = !DISubroutineType(types: !5555)
!5555 = !{!5439, !339, !61}
!5556 = !{!5557, !5558, !5559}
!5557 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5553, file: !516, line: 138, type: !339)
!5558 = !DILocalVariable(name: "priority", arg: 2, scope: !5553, file: !516, line: 138, type: !61)
!5559 = !DILocalVariable(name: "status", scope: !5553, file: !516, line: 140, type: !5439)
!5560 = !DILocation(line: 0, scope: !5553)
!5561 = !DILocation(line: 142, column: 40, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5553, file: !516, line: 142, column: 9)
!5563 = !DILocation(line: 146, column: 9, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5562, file: !516, line: 145, column: 12)
!5565 = !DILocation(line: 150, column: 5, scope: !5553)
!5566 = !DILocation(line: 151, column: 1, scope: !5553)
!5567 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !531, file: !531, line: 1577, type: !5568, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5570)
!5568 = !DISubroutineType(types: !5569)
!5569 = !{null, !140, !61}
!5570 = !{!5571, !5572}
!5571 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5567, file: !531, line: 1577, type: !140)
!5572 = !DILocalVariable(name: "priority", arg: 2, scope: !5567, file: !531, line: 1577, type: !61)
!5573 = !DILocation(line: 0, scope: !5567)
!5574 = !DILocation(line: 1582, column: 34, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5576, file: !531, line: 1581, column: 8)
!5576 = distinct !DILexicalBlock(scope: !5567, file: !531, line: 1579, column: 6)
!5577 = !DILocation(line: 1582, column: 5, scope: !5575)
!5578 = !DILocation(line: 1582, column: 32, scope: !5575)
!5579 = !DILocation(line: 1583, column: 1, scope: !5567)
!5580 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !516, file: !516, line: 153, type: !5488, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5581)
!5581 = !{!5582, !5583}
!5582 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5580, file: !516, line: 153, type: !339)
!5583 = !DILocalVariable(name: "ret", scope: !5580, file: !516, line: 155, type: !61)
!5584 = !DILocation(line: 0, scope: !5580)
!5585 = !DILocation(line: 157, column: 40, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5580, file: !516, line: 157, column: 9)
!5587 = !DILocation(line: 160, column: 15, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5586, file: !516, line: 159, column: 12)
!5589 = !DILocation(line: 163, column: 5, scope: !5580)
!5590 = !DILocation(line: 164, column: 1, scope: !5580)
!5591 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !531, file: !531, line: 1597, type: !5501, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5592)
!5592 = !{!5593}
!5593 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5591, file: !531, line: 1597, type: !140)
!5594 = !DILocation(line: 0, scope: !5591)
!5595 = !DILocation(line: 1603, column: 23, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5597, file: !531, line: 1602, column: 8)
!5597 = distinct !DILexicalBlock(scope: !5591, file: !531, line: 1600, column: 6)
!5598 = !DILocation(line: 1603, column: 60, scope: !5596)
!5599 = !DILocation(line: 1604, column: 1, scope: !5591)
!5600 = distinct !DISubprogram(name: "isrC_main", scope: !516, file: !516, line: 178, type: !5437, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5601)
!5601 = !{!5602, !5603}
!5602 = !DILocalVariable(name: "status", scope: !5600, file: !516, line: 180, type: !5439)
!5603 = !DILocalVariable(name: "irq_number", scope: !5600, file: !516, line: 181, type: !339)
!5604 = !DILocation(line: 0, scope: !5600)
!5605 = !DILocation(line: 185, column: 5, scope: !5600)
!5606 = !DILocation(line: 188, column: 34, scope: !5600)
!5607 = !DILocation(line: 189, column: 24, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5600, file: !516, line: 189, column: 9)
!5609 = !DILocation(line: 192, column: 48, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5608, file: !516, line: 192, column: 16)
!5611 = !DILocation(line: 192, column: 62, scope: !5610)
!5612 = !DILocation(line: 192, column: 16, scope: !5608)
!5613 = !DILocation(line: 194, column: 9, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5610, file: !516, line: 192, column: 71)
!5615 = !DILocation(line: 195, column: 9, scope: !5614)
!5616 = !DILocation(line: 197, column: 55, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5610, file: !516, line: 196, column: 12)
!5618 = !DILocation(line: 197, column: 41, scope: !5617)
!5619 = !DILocation(line: 197, column: 53, scope: !5617)
!5620 = !DILocation(line: 198, column: 41, scope: !5617)
!5621 = !DILocation(line: 198, column: 9, scope: !5617)
!5622 = !DILocation(line: 202, column: 5, scope: !5600)
!5623 = !DILocation(line: 203, column: 1, scope: !5600)
!5624 = distinct !DISubprogram(name: "get_current_irq", scope: !516, file: !516, line: 166, type: !1916, scopeLine: 167, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5625)
!5625 = !{!5626}
!5626 = !DILocalVariable(name: "irq_num", scope: !5624, file: !516, line: 168, type: !61)
!5627 = !DILocation(line: 168, column: 31, scope: !5624)
!5628 = !DILocation(line: 168, column: 36, scope: !5624)
!5629 = !DILocation(line: 0, scope: !5624)
!5630 = !DILocation(line: 169, column: 21, scope: !5624)
!5631 = !DILocation(line: 169, column: 5, scope: !5624)
!5632 = distinct !DISubprogram(name: "get_pending_irq", scope: !516, file: !516, line: 55, type: !1916, scopeLine: 56, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !1935)
!5633 = !DILocation(line: 57, column: 19, scope: !5632)
!5634 = !DILocation(line: 57, column: 51, scope: !5632)
!5635 = !DILocation(line: 57, column: 5, scope: !5632)
!5636 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !516, file: !516, line: 205, type: !5637, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5640)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{!5439, !339, !5639}
!5639 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !519, line: 175, baseType: !599)
!5640 = !{!5641, !5642, !5643}
!5641 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5636, file: !516, line: 205, type: !339)
!5642 = !DILocalVariable(name: "callback", arg: 2, scope: !5636, file: !516, line: 205, type: !5639)
!5643 = !DILocalVariable(name: "mask", scope: !5636, file: !516, line: 207, type: !61)
!5644 = !DILocation(line: 0, scope: !5636)
!5645 = !DILocation(line: 209, column: 24, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5636, file: !516, line: 209, column: 9)
!5647 = !DILocation(line: 213, column: 12, scope: !5636)
!5648 = !DILocation(line: 214, column: 5, scope: !5636)
!5649 = !DILocation(line: 215, column: 37, scope: !5636)
!5650 = !DILocation(line: 215, column: 51, scope: !5636)
!5651 = !DILocation(line: 216, column: 37, scope: !5636)
!5652 = !DILocation(line: 216, column: 49, scope: !5636)
!5653 = !DILocation(line: 217, column: 5, scope: !5636)
!5654 = !DILocation(line: 219, column: 5, scope: !5636)
!5655 = !DILocation(line: 220, column: 1, scope: !5636)
!5656 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !516, file: !516, line: 222, type: !5657, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5659)
!5657 = !DISubroutineType(types: !5658)
!5658 = !{!5439, !2495}
!5659 = !{!5660}
!5660 = !DILocalVariable(name: "mask", arg: 1, scope: !5656, file: !516, line: 222, type: !2495)
!5661 = !DILocation(line: 0, scope: !5656)
!5662 = !DILocation(line: 224, column: 13, scope: !5656)
!5663 = !DILocation(line: 224, column: 11, scope: !5656)
!5664 = !DILocation(line: 225, column: 5, scope: !5656)
!5665 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !516, file: !516, line: 228, type: !5666, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !515, retainedNodes: !5668)
!5666 = !DISubroutineType(types: !5667)
!5667 = !{!5439, !61}
!5668 = !{!5669}
!5669 = !DILocalVariable(name: "mask", arg: 1, scope: !5665, file: !516, line: 228, type: !61)
!5670 = !DILocation(line: 0, scope: !5665)
!5671 = !DILocation(line: 230, column: 5, scope: !5665)
!5672 = !DILocation(line: 231, column: 5, scope: !5665)
!5673 = distinct !DISubprogram(name: "hal_flash_init", scope: !1844, file: !1844, line: 42, type: !5674, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !5677)
!5674 = !DISubroutineType(types: !5675)
!5675 = !{!5676}
!5676 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !45, line: 119, baseType: !1846)
!5677 = !{!5678}
!5678 = !DILocalVariable(name: "ret_value", scope: !5673, file: !1844, line: 44, type: !527)
!5679 = !DILocation(line: 0, scope: !5673)
!5680 = !DILocation(line: 45, column: 17, scope: !5673)
!5681 = !DILocation(line: 46, column: 12, scope: !5673)
!5682 = !DILocation(line: 46, column: 5, scope: !5673)
!5683 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1844, file: !1844, line: 49, type: !5674, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !1935)
!5684 = !DILocation(line: 51, column: 5, scope: !5683)
!5685 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1844, file: !1844, line: 54, type: !5686, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !5689)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!5676, !61, !5688}
!5688 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !45, line: 127, baseType: !44)
!5689 = !{!5690, !5691, !5692}
!5690 = !DILocalVariable(name: "start_address", arg: 1, scope: !5685, file: !1844, line: 54, type: !61)
!5691 = !DILocalVariable(name: "block", arg: 2, scope: !5685, file: !1844, line: 54, type: !5688)
!5692 = !DILocalVariable(name: "ret_value", scope: !5685, file: !1844, line: 56, type: !527)
!5693 = !DILocation(line: 0, scope: !5685)
!5694 = !DILocation(line: 57, column: 17, scope: !5685)
!5695 = !DILocation(line: 58, column: 12, scope: !5685)
!5696 = !DILocation(line: 58, column: 5, scope: !5685)
!5697 = distinct !DISubprogram(name: "hal_flash_read", scope: !1844, file: !1844, line: 62, type: !5698, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !5700)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{!5676, !61, !210, !61}
!5700 = !{!5701, !5702, !5703}
!5701 = !DILocalVariable(name: "start_address", arg: 1, scope: !5697, file: !1844, line: 62, type: !61)
!5702 = !DILocalVariable(name: "buffer", arg: 2, scope: !5697, file: !1844, line: 62, type: !210)
!5703 = !DILocalVariable(name: "length", arg: 3, scope: !5697, file: !1844, line: 62, type: !61)
!5704 = !DILocation(line: 0, scope: !5697)
!5705 = !DILocation(line: 64, column: 50, scope: !5697)
!5706 = !DILocation(line: 64, column: 27, scope: !5697)
!5707 = !DILocation(line: 64, column: 5, scope: !5697)
!5708 = !DILocation(line: 65, column: 5, scope: !5697)
!5709 = distinct !DISubprogram(name: "hal_flash_write", scope: !1844, file: !1844, line: 68, type: !5710, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1843, retainedNodes: !5712)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{!5676, !61, !2077, !61}
!5712 = !{!5713, !5714, !5715, !5716}
!5713 = !DILocalVariable(name: "address", arg: 1, scope: !5709, file: !1844, line: 68, type: !61)
!5714 = !DILocalVariable(name: "data", arg: 2, scope: !5709, file: !1844, line: 68, type: !2077)
!5715 = !DILocalVariable(name: "length", arg: 3, scope: !5709, file: !1844, line: 68, type: !61)
!5716 = !DILocalVariable(name: "ret_value", scope: !5709, file: !1844, line: 70, type: !527)
!5717 = !DILocation(line: 0, scope: !5709)
!5718 = !DILocation(line: 70, column: 25, scope: !5709)
!5719 = !DILocation(line: 71, column: 12, scope: !5709)
!5720 = !DILocation(line: 71, column: 5, scope: !5709)
!5721 = distinct !DISubprogram(name: "hal_gpt_init", scope: !608, file: !608, line: 82, type: !5722, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5725)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{!1921, !5724}
!5724 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !29, line: 663, baseType: !610)
!5725 = !{!5726}
!5726 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5721, file: !608, line: 82, type: !5724)
!5727 = !DILocation(line: 0, scope: !5721)
!5728 = !DILocation(line: 84, column: 9, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5721, file: !608, line: 84, column: 9)
!5730 = !DILocation(line: 84, column: 33, scope: !5729)
!5731 = !DILocation(line: 84, column: 9, scope: !5721)
!5732 = !DILocation(line: 88, column: 9, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5721, file: !608, line: 88, column: 9)
!5734 = !DILocation(line: 88, column: 9, scope: !5721)
!5735 = !DILocation(line: 89, column: 9, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5733, file: !608, line: 88, column: 50)
!5737 = !DILocation(line: 90, column: 9, scope: !5736)
!5738 = !DILocation(line: 92, column: 12, scope: !5721)
!5739 = !DILocation(line: 92, column: 5, scope: !5721)
!5740 = !DILocation(line: 96, column: 43, scope: !5721)
!5741 = !DILocation(line: 98, column: 5, scope: !5721)
!5742 = !DILocation(line: 99, column: 1, scope: !5721)
!5743 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !608, file: !608, line: 63, type: !5744, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5746)
!5744 = !DISubroutineType(types: !5745)
!5745 = !{!69, !5724}
!5746 = !{!5747}
!5747 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5743, file: !608, line: 63, type: !5724)
!5748 = !DILocation(line: 0, scope: !5743)
!5749 = !DILocation(line: 65, column: 19, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5743, file: !608, line: 65, column: 9)
!5751 = !DILocation(line: 65, column: 34, scope: !5750)
!5752 = !DILocation(line: 70, column: 1, scope: !5743)
!5753 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !608, file: !608, line: 101, type: !5722, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5754)
!5754 = !{!5755}
!5755 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5753, file: !608, line: 101, type: !5724)
!5756 = !DILocation(line: 0, scope: !5753)
!5757 = !DILocation(line: 103, column: 9, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5753, file: !608, line: 103, column: 9)
!5759 = !DILocation(line: 103, column: 9, scope: !5753)
!5760 = !DILocation(line: 104, column: 9, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5758, file: !608, line: 103, column: 50)
!5762 = !DILocation(line: 105, column: 9, scope: !5761)
!5763 = !DILocation(line: 108, column: 9, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5753, file: !608, line: 108, column: 9)
!5765 = !DILocation(line: 108, column: 33, scope: !5764)
!5766 = !DILocation(line: 108, column: 48, scope: !5764)
!5767 = !DILocation(line: 108, column: 9, scope: !5753)
!5768 = !DILocation(line: 109, column: 9, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5764, file: !608, line: 108, column: 68)
!5770 = !DILocation(line: 110, column: 9, scope: !5769)
!5771 = !DILocation(line: 113, column: 12, scope: !5753)
!5772 = !DILocation(line: 113, column: 5, scope: !5753)
!5773 = !DILocation(line: 116, column: 29, scope: !5753)
!5774 = !DILocation(line: 116, column: 43, scope: !5753)
!5775 = !DILocation(line: 117, column: 5, scope: !5753)
!5776 = !DILocation(line: 118, column: 1, scope: !5753)
!5777 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !608, file: !608, line: 120, type: !5778, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5781)
!5778 = !DISubroutineType(types: !5779)
!5779 = !{!1921, !5780, !2495}
!5780 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !29, line: 674, baseType: !28)
!5781 = !{!5782, !5783}
!5782 = !DILocalVariable(name: "clock_source", arg: 1, scope: !5777, file: !608, line: 120, type: !5780)
!5783 = !DILocalVariable(name: "count", arg: 2, scope: !5777, file: !608, line: 120, type: !2495)
!5784 = !DILocation(line: 0, scope: !5777)
!5785 = !DILocation(line: 122, column: 9, scope: !5777)
!5786 = !DILocation(line: 123, column: 50, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5788, file: !608, line: 123, column: 13)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !608, line: 122, column: 51)
!5789 = distinct !DILexicalBlock(scope: !5777, file: !608, line: 122, column: 9)
!5790 = !DILocation(line: 123, column: 65, scope: !5787)
!5791 = !DILocation(line: 123, column: 13, scope: !5788)
!5792 = !DILocation(line: 124, column: 13, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5787, file: !608, line: 123, column: 86)
!5794 = !DILocation(line: 125, column: 9, scope: !5793)
!5795 = !DILocation(line: 126, column: 18, scope: !5788)
!5796 = !DILocation(line: 126, column: 16, scope: !5788)
!5797 = !DILocation(line: 127, column: 49, scope: !5788)
!5798 = !DILocation(line: 128, column: 5, scope: !5788)
!5799 = !DILocation(line: 129, column: 50, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5801, file: !608, line: 129, column: 13)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !608, line: 128, column: 57)
!5802 = distinct !DILexicalBlock(scope: !5789, file: !608, line: 128, column: 16)
!5803 = !DILocation(line: 129, column: 65, scope: !5800)
!5804 = !DILocation(line: 129, column: 13, scope: !5801)
!5805 = !DILocation(line: 130, column: 13, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5800, file: !608, line: 129, column: 86)
!5807 = !DILocation(line: 131, column: 9, scope: !5806)
!5808 = !DILocation(line: 132, column: 18, scope: !5801)
!5809 = !DILocation(line: 132, column: 46, scope: !5801)
!5810 = !DILocation(line: 132, column: 65, scope: !5801)
!5811 = !DILocation(line: 132, column: 43, scope: !5801)
!5812 = !DILocation(line: 132, column: 16, scope: !5801)
!5813 = !DILocation(line: 133, column: 49, scope: !5801)
!5814 = !DILocation(line: 134, column: 5, scope: !5801)
!5815 = !DILocation(line: 135, column: 50, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !608, line: 135, column: 13)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !608, line: 134, column: 58)
!5818 = distinct !DILexicalBlock(scope: !5802, file: !608, line: 134, column: 16)
!5819 = !DILocation(line: 135, column: 65, scope: !5816)
!5820 = !DILocation(line: 135, column: 13, scope: !5817)
!5821 = !DILocation(line: 136, column: 13, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5816, file: !608, line: 135, column: 86)
!5823 = !DILocation(line: 137, column: 9, scope: !5822)
!5824 = !DILocation(line: 138, column: 18, scope: !5817)
!5825 = !DILocation(line: 138, column: 16, scope: !5817)
!5826 = !DILocation(line: 139, column: 49, scope: !5817)
!5827 = !DILocation(line: 141, column: 9, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5818, file: !608, line: 140, column: 11)
!5829 = !DILocation(line: 142, column: 9, scope: !5828)
!5830 = !DILocation(line: 146, column: 1, scope: !5777)
!5831 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !608, file: !608, line: 148, type: !5832, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5834)
!5832 = !DISubroutineType(types: !5833)
!5833 = !{!1921, !61, !61, !2495}
!5834 = !{!5835, !5836, !5837}
!5835 = !DILocalVariable(name: "start_count", arg: 1, scope: !5831, file: !608, line: 148, type: !61)
!5836 = !DILocalVariable(name: "end_count", arg: 2, scope: !5831, file: !608, line: 148, type: !61)
!5837 = !DILocalVariable(name: "duration_count", arg: 3, scope: !5831, file: !608, line: 148, type: !2495)
!5838 = !DILocation(line: 0, scope: !5831)
!5839 = !DILocation(line: 150, column: 24, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5831, file: !608, line: 150, column: 9)
!5841 = !DILocation(line: 150, column: 9, scope: !5831)
!5842 = !DILocation(line: 0, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5831, file: !608, line: 154, column: 9)
!5844 = !DILocation(line: 160, column: 5, scope: !5831)
!5845 = !DILocation(line: 161, column: 1, scope: !5831)
!5846 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !608, file: !608, line: 163, type: !5847, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5850)
!5847 = !DISubroutineType(types: !5848)
!5848 = !{!1921, !5724, !5849}
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 32)
!5850 = !{!5851, !5852}
!5851 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5846, file: !608, line: 163, type: !5724)
!5852 = !DILocalVariable(name: "running_status", arg: 2, scope: !5846, file: !608, line: 164, type: !5849)
!5853 = !DILocation(line: 0, scope: !5846)
!5854 = !DILocation(line: 166, column: 18, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5846, file: !608, line: 166, column: 9)
!5856 = !DILocation(line: 166, column: 9, scope: !5846)
!5857 = !DILocation(line: 167, column: 9, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5855, file: !608, line: 166, column: 34)
!5859 = !DILocation(line: 168, column: 9, scope: !5858)
!5860 = !DILocation(line: 170, column: 47, scope: !5846)
!5861 = !DILocation(line: 170, column: 21, scope: !5846)
!5862 = !DILocation(line: 171, column: 5, scope: !5846)
!5863 = !DILocation(line: 172, column: 1, scope: !5846)
!5864 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !608, file: !608, line: 174, type: !5865, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5867)
!5865 = !DISubroutineType(types: !5866)
!5866 = !{!1921, !5724, !638, !51}
!5867 = !{!5868, !5869, !5870}
!5868 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5864, file: !608, line: 174, type: !5724)
!5869 = !DILocalVariable(name: "callback", arg: 2, scope: !5864, file: !608, line: 175, type: !638)
!5870 = !DILocalVariable(name: "user_data", arg: 3, scope: !5864, file: !608, line: 176, type: !51)
!5871 = !DILocation(line: 0, scope: !5864)
!5872 = !DILocation(line: 178, column: 9, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5864, file: !608, line: 178, column: 9)
!5874 = !DILocation(line: 178, column: 9, scope: !5864)
!5875 = !DILocation(line: 179, column: 9, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5873, file: !608, line: 178, column: 50)
!5877 = !DILocation(line: 180, column: 9, scope: !5876)
!5878 = !DILocation(line: 182, column: 33, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5864, file: !608, line: 182, column: 9)
!5880 = !DILocation(line: 182, column: 47, scope: !5879)
!5881 = !DILocation(line: 182, column: 9, scope: !5864)
!5882 = !DILocation(line: 185, column: 18, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5864, file: !608, line: 185, column: 9)
!5884 = !DILocation(line: 185, column: 9, scope: !5864)
!5885 = !DILocation(line: 188, column: 46, scope: !5864)
!5886 = !DILocation(line: 188, column: 56, scope: !5864)
!5887 = !DILocation(line: 189, column: 46, scope: !5864)
!5888 = !DILocation(line: 189, column: 56, scope: !5864)
!5889 = !DILocation(line: 190, column: 5, scope: !5864)
!5890 = !DILocation(line: 191, column: 1, scope: !5864)
!5891 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !608, file: !608, line: 218, type: !5892, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5895)
!5892 = !DISubroutineType(types: !5893)
!5893 = !{!1921, !5724, !61, !5894}
!5894 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !21, line: 383, baseType: !621)
!5895 = !{!5896, !5897, !5898}
!5896 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5891, file: !608, line: 218, type: !5724)
!5897 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !5891, file: !608, line: 218, type: !61)
!5898 = !DILocalVariable(name: "timer_type", arg: 3, scope: !5891, file: !608, line: 218, type: !5894)
!5899 = !DILocation(line: 0, scope: !5891)
!5900 = !DILocation(line: 220, column: 9, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5891, file: !608, line: 220, column: 9)
!5902 = !DILocation(line: 220, column: 9, scope: !5891)
!5903 = !DILocation(line: 221, column: 9, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5901, file: !608, line: 220, column: 50)
!5905 = !DILocation(line: 222, column: 9, scope: !5904)
!5906 = !DILocation(line: 225, column: 33, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5891, file: !608, line: 225, column: 9)
!5908 = !DILocation(line: 225, column: 47, scope: !5907)
!5909 = !DILocation(line: 225, column: 9, scope: !5891)
!5910 = !DILocation(line: 229, column: 25, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5891, file: !608, line: 229, column: 9)
!5912 = !DILocation(line: 229, column: 9, scope: !5891)
!5913 = !DILocation(line: 234, column: 17, scope: !5891)
!5914 = !DILocation(line: 235, column: 17, scope: !5891)
!5915 = !DILocation(line: 236, column: 17, scope: !5891)
!5916 = !DILocation(line: 233, column: 5, scope: !5891)
!5917 = !DILocation(line: 237, column: 5, scope: !5891)
!5918 = !DILocation(line: 238, column: 29, scope: !5891)
!5919 = !DILocation(line: 238, column: 44, scope: !5891)
!5920 = !DILocation(line: 239, column: 5, scope: !5891)
!5921 = !DILocation(line: 240, column: 1, scope: !5891)
!5922 = distinct !DISubprogram(name: "hal_gpt_translate_timeout_time", scope: !608, file: !608, line: 72, type: !5923, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5925)
!5923 = !DISubroutineType(types: !5924)
!5924 = !{!61, !61}
!5925 = !{!5926}
!5926 = !DILocalVariable(name: "mili_seconds", arg: 1, scope: !5922, file: !608, line: 72, type: !61)
!5927 = !DILocation(line: 0, scope: !5922)
!5928 = !DILocation(line: 74, column: 37, scope: !5922)
!5929 = !DILocation(line: 74, column: 47, scope: !5922)
!5930 = !DILocation(line: 74, column: 63, scope: !5922)
!5931 = !DILocation(line: 74, column: 42, scope: !5922)
!5932 = !DILocation(line: 74, column: 73, scope: !5922)
!5933 = !DILocation(line: 74, column: 89, scope: !5922)
!5934 = !DILocation(line: 74, column: 68, scope: !5922)
!5935 = !DILocation(line: 74, column: 100, scope: !5922)
!5936 = !DILocation(line: 74, column: 116, scope: !5922)
!5937 = !DILocation(line: 74, column: 95, scope: !5922)
!5938 = !DILocation(line: 74, column: 5, scope: !5922)
!5939 = distinct !DISubprogram(name: "hal_gpt_translate_type", scope: !608, file: !608, line: 77, type: !5940, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5942)
!5940 = !DISubroutineType(types: !5941)
!5941 = !{!69, !5894}
!5942 = !{!5943}
!5943 = !DILocalVariable(name: "type", arg: 1, scope: !5939, file: !608, line: 77, type: !5894)
!5944 = !DILocation(line: 0, scope: !5939)
!5945 = !DILocation(line: 79, column: 38, scope: !5939)
!5946 = !DILocation(line: 79, column: 5, scope: !5939)
!5947 = distinct !DISubprogram(name: "hal_gpt_map_callback", scope: !608, file: !608, line: 213, type: !5948, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5951)
!5948 = !DISubroutineType(types: !5949)
!5949 = !{!5950, !5724}
!5950 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_internal_callback_t", file: !608, line: 211, baseType: !153)
!5951 = !{!5952}
!5952 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5947, file: !608, line: 213, type: !5724)
!5953 = !DILocation(line: 0, scope: !5947)
!5954 = !DILocation(line: 215, column: 23, scope: !5947)
!5955 = !DILocation(line: 215, column: 12, scope: !5947)
!5956 = !DILocation(line: 215, column: 5, scope: !5947)
!5957 = distinct !DISubprogram(name: "hal_gpt_callback0", scope: !608, file: !608, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5958)
!5958 = !{!5959}
!5959 = !DILocalVariable(name: "context", scope: !5957, file: !608, line: 195, type: !5960)
!5960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 32)
!5961 = !DILocation(line: 196, column: 26, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5957, file: !608, line: 196, column: 9)
!5963 = !DILocation(line: 196, column: 14, scope: !5962)
!5964 = !DILocation(line: 196, column: 9, scope: !5957)
!5965 = !DILocation(line: 197, column: 36, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5962, file: !608, line: 196, column: 36)
!5967 = !DILocation(line: 197, column: 9, scope: !5966)
!5968 = !DILocation(line: 198, column: 5, scope: !5966)
!5969 = !DILocation(line: 199, column: 45, scope: !5957)
!5970 = !DILocation(line: 200, column: 1, scope: !5957)
!5971 = distinct !DISubprogram(name: "hal_gpt_callback1", scope: !608, file: !608, line: 202, type: !154, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5972)
!5972 = !{!5973}
!5973 = !DILocalVariable(name: "context", scope: !5971, file: !608, line: 204, type: !5960)
!5974 = !DILocation(line: 205, column: 26, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5971, file: !608, line: 205, column: 9)
!5976 = !DILocation(line: 205, column: 14, scope: !5975)
!5977 = !DILocation(line: 205, column: 9, scope: !5971)
!5978 = !DILocation(line: 206, column: 36, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5975, file: !608, line: 205, column: 36)
!5980 = !DILocation(line: 206, column: 9, scope: !5979)
!5981 = !DILocation(line: 207, column: 5, scope: !5979)
!5982 = !DILocation(line: 208, column: 45, scope: !5971)
!5983 = !DILocation(line: 209, column: 1, scope: !5971)
!5984 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !608, file: !608, line: 242, type: !5722, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !5985)
!5985 = !{!5986}
!5986 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !5984, file: !608, line: 242, type: !5724)
!5987 = !DILocation(line: 0, scope: !5984)
!5988 = !DILocation(line: 244, column: 9, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5984, file: !608, line: 244, column: 9)
!5990 = !DILocation(line: 244, column: 9, scope: !5984)
!5991 = !DILocation(line: 245, column: 9, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5989, file: !608, line: 244, column: 50)
!5993 = !DILocation(line: 246, column: 9, scope: !5992)
!5994 = !DILocation(line: 248, column: 5, scope: !5984)
!5995 = !DILocation(line: 249, column: 29, scope: !5984)
!5996 = !DILocation(line: 249, column: 44, scope: !5984)
!5997 = !DILocation(line: 250, column: 5, scope: !5984)
!5998 = !DILocation(line: 251, column: 1, scope: !5984)
!5999 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !608, file: !608, line: 253, type: !6000, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6002)
!6000 = !DISubroutineType(types: !6001)
!6001 = !{!1921, !61}
!6002 = !{!6003}
!6003 = !DILocalVariable(name: "ms", arg: 1, scope: !5999, file: !608, line: 253, type: !61)
!6004 = !DILocation(line: 0, scope: !5999)
!6005 = !DILocation(line: 255, column: 46, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5999, file: !608, line: 255, column: 9)
!6007 = !DILocation(line: 255, column: 61, scope: !6006)
!6008 = !DILocation(line: 255, column: 9, scope: !5999)
!6009 = !DILocation(line: 256, column: 9, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6006, file: !608, line: 255, column: 82)
!6011 = !DILocation(line: 257, column: 5, scope: !6010)
!6012 = !DILocation(line: 258, column: 5, scope: !5999)
!6013 = !DILocation(line: 259, column: 57, scope: !5999)
!6014 = !DILocation(line: 260, column: 5, scope: !5999)
!6015 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !608, file: !608, line: 264, type: !6000, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !607, retainedNodes: !6016)
!6016 = !{!6017}
!6017 = !DILocalVariable(name: "us", arg: 1, scope: !6015, file: !608, line: 264, type: !61)
!6018 = !DILocation(line: 0, scope: !6015)
!6019 = !DILocation(line: 266, column: 46, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6015, file: !608, line: 266, column: 9)
!6021 = !DILocation(line: 266, column: 61, scope: !6020)
!6022 = !DILocation(line: 266, column: 9, scope: !6015)
!6023 = !DILocation(line: 267, column: 9, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6020, file: !608, line: 266, column: 82)
!6025 = !DILocation(line: 268, column: 5, scope: !6024)
!6026 = !DILocation(line: 269, column: 5, scope: !6015)
!6027 = !DILocation(line: 270, column: 57, scope: !6015)
!6028 = !DILocation(line: 271, column: 5, scope: !6015)
!6029 = distinct !DISubprogram(name: "uart_send_handler", scope: !647, file: !647, line: 213, type: !4571, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6030)
!6030 = !{!6031, !6032, !6033}
!6031 = !DILocalVariable(name: "u_port", arg: 1, scope: !6029, file: !647, line: 213, type: !4517)
!6032 = !DILocalVariable(name: "length", scope: !6029, file: !647, line: 215, type: !61)
!6033 = !DILocalVariable(name: "irq_status", scope: !6029, file: !647, line: 216, type: !61)
!6034 = !DILocation(line: 0, scope: !6029)
!6035 = !DILocation(line: 215, column: 5, scope: !6029)
!6036 = !DILocation(line: 216, column: 5, scope: !6029)
!6037 = !DILocation(line: 218, column: 9, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6029, file: !647, line: 218, column: 9)
!6039 = !DILocation(line: 218, column: 54, scope: !6038)
!6040 = !DILocation(line: 218, column: 9, scope: !6029)
!6041 = !DILocation(line: 219, column: 9, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6038, file: !647, line: 218, column: 64)
!6043 = !DILocation(line: 220, column: 9, scope: !6042)
!6044 = !DILocation(line: 221, column: 53, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6042, file: !647, line: 221, column: 13)
!6046 = !DILocation(line: 221, column: 78, scope: !6045)
!6047 = !DILocation(line: 221, column: 85, scope: !6045)
!6048 = !DILocation(line: 221, column: 13, scope: !6042)
!6049 = !DILocation(line: 222, column: 17, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6051, file: !647, line: 222, column: 17)
!6051 = distinct !DILexicalBlock(scope: !6045, file: !647, line: 221, column: 91)
!6052 = !DILocation(line: 222, column: 17, scope: !6051)
!6053 = !DILocation(line: 223, column: 48, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6050, file: !647, line: 222, column: 58)
!6055 = !DILocation(line: 223, column: 17, scope: !6054)
!6056 = !DILocation(line: 224, column: 49, scope: !6054)
!6057 = !DILocation(line: 225, column: 13, scope: !6054)
!6058 = !DILocation(line: 227, column: 41, scope: !6042)
!6059 = !DILocation(line: 227, column: 9, scope: !6042)
!6060 = !DILocation(line: 228, column: 5, scope: !6042)
!6061 = !DILocation(line: 229, column: 54, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6038, file: !647, line: 228, column: 12)
!6063 = !DILocation(line: 231, column: 1, scope: !6029)
!6064 = distinct !DISubprogram(name: "hal_uart_init", scope: !647, file: !647, line: 234, type: !6065, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6069)
!6065 = !DISubroutineType(types: !6066)
!6066 = !{!6067, !755, !6068}
!6067 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !650, line: 351, baseType: !649)
!6068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 32)
!6069 = !{!6070, !6071}
!6070 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6064, file: !647, line: 234, type: !755)
!6071 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6064, file: !647, line: 234, type: !6068)
!6072 = !DILocation(line: 0, scope: !6064)
!6073 = !DILocation(line: 236, column: 10, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6064, file: !647, line: 236, column: 9)
!6075 = !DILocation(line: 236, column: 9, scope: !6064)
!6076 = !DILocation(line: 239, column: 41, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6064, file: !647, line: 239, column: 9)
!6078 = !DILocation(line: 239, column: 9, scope: !6064)
!6079 = !DILocation(line: 242, column: 5, scope: !6064)
!6080 = !DILocation(line: 243, column: 45, scope: !6064)
!6081 = !DILocation(line: 243, column: 12, scope: !6064)
!6082 = !DILocation(line: 244, column: 12, scope: !6064)
!6083 = !DILocation(line: 243, column: 5, scope: !6064)
!6084 = !DILocation(line: 245, column: 58, scope: !6064)
!6085 = !DILocation(line: 246, column: 30, scope: !6064)
!6086 = !{i32 0, i32 2}
!6087 = !DILocation(line: 246, column: 5, scope: !6064)
!6088 = !DILocation(line: 247, column: 5, scope: !6064)
!6089 = !DILocation(line: 249, column: 31, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6064, file: !647, line: 249, column: 9)
!6091 = !DILocation(line: 249, column: 28, scope: !6090)
!6092 = !DILocation(line: 249, column: 9, scope: !6064)
!6093 = !DILocation(line: 254, column: 5, scope: !6064)
!6094 = !DILocation(line: 255, column: 5, scope: !6064)
!6095 = !DILocation(line: 255, column: 53, scope: !6064)
!6096 = !DILocation(line: 256, column: 5, scope: !6064)
!6097 = !DILocation(line: 256, column: 40, scope: !6064)
!6098 = !DILocation(line: 257, column: 82, scope: !6064)
!6099 = !DILocation(line: 257, column: 39, scope: !6064)
!6100 = !DILocation(line: 257, column: 5, scope: !6064)
!6101 = !DILocation(line: 257, column: 37, scope: !6064)
!6102 = !DILocation(line: 260, column: 5, scope: !6064)
!6103 = !DILocation(line: 261, column: 1, scope: !6064)
!6104 = distinct !DISubprogram(name: "hal_uart_is_config_valid", scope: !647, file: !647, line: 93, type: !6105, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6109)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!69, !755, !6107}
!6107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6108, size: 32)
!6108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !708)
!6109 = !{!6110, !6111}
!6110 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6104, file: !647, line: 93, type: !755)
!6111 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6104, file: !647, line: 93, type: !6107)
!6112 = !DILocation(line: 0, scope: !6104)
!6113 = !DILocation(line: 95, column: 10, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6104, file: !647, line: 95, column: 9)
!6115 = !DILocation(line: 95, column: 9, scope: !6104)
!6116 = !DILocation(line: 101, column: 23, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6104, file: !647, line: 101, column: 9)
!6118 = !DILocation(line: 101, column: 32, scope: !6117)
!6119 = !DILocation(line: 101, column: 60, scope: !6117)
!6120 = !DILocation(line: 102, column: 27, scope: !6117)
!6121 = !DILocation(line: 102, column: 34, scope: !6117)
!6122 = !DILocation(line: 102, column: 58, scope: !6117)
!6123 = !DILocation(line: 103, column: 27, scope: !6117)
!6124 = !DILocation(line: 103, column: 36, scope: !6117)
!6125 = !DILocation(line: 103, column: 59, scope: !6117)
!6126 = !DILocation(line: 104, column: 27, scope: !6117)
!6127 = !DILocation(line: 104, column: 39, scope: !6117)
!6128 = !DILocation(line: 101, column: 9, scope: !6104)
!6129 = !DILocation(line: 109, column: 1, scope: !6104)
!6130 = distinct !DISubprogram(name: "hal_uart_translate_port", scope: !647, file: !647, line: 139, type: !6131, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6133)
!6131 = !DISubroutineType(types: !6132)
!6132 = !{!4517, !755}
!6133 = !{!6134}
!6134 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6130, file: !647, line: 139, type: !755)
!6135 = !DILocation(line: 0, scope: !6130)
!6136 = !DILocation(line: 141, column: 24, scope: !6130)
!6137 = !DILocation(line: 141, column: 12, scope: !6130)
!6138 = !DILocation(line: 141, column: 5, scope: !6130)
!6139 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !647, file: !647, line: 593, type: !6140, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6142)
!6140 = !DISubroutineType(types: !6141)
!6141 = !{!6067, !755, !6107}
!6142 = !{!6143, !6144}
!6143 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6139, file: !647, line: 593, type: !755)
!6144 = !DILocalVariable(name: "config", arg: 2, scope: !6139, file: !647, line: 593, type: !6107)
!6145 = !DILocation(line: 0, scope: !6139)
!6146 = !DILocation(line: 595, column: 10, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6139, file: !647, line: 595, column: 9)
!6148 = !DILocation(line: 595, column: 9, scope: !6139)
!6149 = !DILocation(line: 598, column: 45, scope: !6139)
!6150 = !DILocation(line: 598, column: 12, scope: !6139)
!6151 = !DILocation(line: 598, column: 59, scope: !6139)
!6152 = !DILocation(line: 598, column: 5, scope: !6139)
!6153 = !DILocation(line: 599, column: 23, scope: !6139)
!6154 = !DILocation(line: 600, column: 59, scope: !6139)
!6155 = !DILocation(line: 600, column: 23, scope: !6139)
!6156 = !DILocation(line: 601, column: 62, scope: !6139)
!6157 = !DILocation(line: 601, column: 23, scope: !6139)
!6158 = !DILocation(line: 602, column: 57, scope: !6139)
!6159 = !DILocation(line: 602, column: 23, scope: !6139)
!6160 = !DILocation(line: 603, column: 58, scope: !6139)
!6161 = !DILocation(line: 603, column: 23, scope: !6139)
!6162 = !DILocation(line: 599, column: 5, scope: !6139)
!6163 = !DILocation(line: 604, column: 5, scope: !6139)
!6164 = !DILocation(line: 605, column: 1, scope: !6139)
!6165 = distinct !DISubprogram(name: "hal_uart_translate_baudrate", scope: !647, file: !647, line: 145, type: !6166, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6168)
!6166 = !DISubroutineType(types: !6167)
!6167 = !{!61, !712}
!6168 = !{!6169, !6170}
!6169 = !DILocalVariable(name: "bandrate", arg: 1, scope: !6165, file: !647, line: 145, type: !712)
!6170 = !DILocalVariable(name: "baudrate_tbl", scope: !6165, file: !647, line: 147, type: !6171)
!6171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 416, elements: !276)
!6172 = !DILocation(line: 0, scope: !6165)
!6173 = !DILocation(line: 147, column: 14, scope: !6165)
!6174 = !DILocation(line: 151, column: 12, scope: !6165)
!6175 = !DILocation(line: 151, column: 5, scope: !6165)
!6176 = distinct !DISubprogram(name: "hal_uart_translate_word_length", scope: !647, file: !647, line: 155, type: !6177, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6179)
!6177 = !DISubroutineType(types: !6178)
!6178 = !{!1155, !714}
!6179 = !{!6180, !6181}
!6180 = !DILocalVariable(name: "word_length", arg: 1, scope: !6176, file: !647, line: 155, type: !714)
!6181 = !DILocalVariable(name: "databit_tbl", scope: !6176, file: !647, line: 157, type: !6182)
!6182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1155, size: 64, elements: !220)
!6183 = !DILocation(line: 0, scope: !6176)
!6184 = !DILocation(line: 157, column: 14, scope: !6176)
!6185 = !DILocation(line: 160, column: 12, scope: !6176)
!6186 = !DILocation(line: 160, column: 5, scope: !6176)
!6187 = distinct !DISubprogram(name: "hal_uart_translate_parity", scope: !647, file: !647, line: 164, type: !6188, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6190)
!6188 = !DISubroutineType(types: !6189)
!6189 = !{!1155, !718}
!6190 = !{!6191, !6192}
!6191 = !DILocalVariable(name: "parity", arg: 1, scope: !6187, file: !647, line: 164, type: !718)
!6192 = !DILocalVariable(name: "parity_tbl", scope: !6187, file: !647, line: 166, type: !6193)
!6193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1155, size: 80, elements: !588)
!6194 = !DILocation(line: 0, scope: !6187)
!6195 = !DILocation(line: 166, column: 14, scope: !6187)
!6196 = !DILocation(line: 169, column: 12, scope: !6187)
!6197 = !DILocation(line: 169, column: 5, scope: !6187)
!6198 = distinct !DISubprogram(name: "hal_uart_translate_stopbit", scope: !647, file: !647, line: 173, type: !6199, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6201)
!6199 = !DISubroutineType(types: !6200)
!6200 = !{!1155, !716}
!6201 = !{!6202, !6203}
!6202 = !DILocalVariable(name: "stopbit", arg: 1, scope: !6198, file: !647, line: 173, type: !716)
!6203 = !DILocalVariable(name: "stopbit_tbl", scope: !6198, file: !647, line: 175, type: !6204)
!6204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1155, size: 48, elements: !981)
!6205 = !DILocation(line: 0, scope: !6198)
!6206 = !DILocation(line: 175, column: 14, scope: !6198)
!6207 = !DILocation(line: 178, column: 12, scope: !6198)
!6208 = !DILocation(line: 178, column: 5, scope: !6198)
!6209 = distinct !DISubprogram(name: "hal_uart_is_port_valid", scope: !647, file: !647, line: 87, type: !6210, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6212)
!6210 = !DISubroutineType(types: !6211)
!6211 = !{!69, !755}
!6212 = !{!6213}
!6213 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6209, file: !647, line: 87, type: !755)
!6214 = !DILocation(line: 0, scope: !6209)
!6215 = !DILocation(line: 89, column: 23, scope: !6209)
!6216 = !DILocation(line: 89, column: 5, scope: !6209)
!6217 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !647, file: !647, line: 264, type: !6218, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6220)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!6067, !755}
!6220 = !{!6221}
!6221 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6217, file: !647, line: 264, type: !755)
!6222 = !DILocation(line: 0, scope: !6217)
!6223 = !DILocation(line: 266, column: 10, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6217, file: !647, line: 266, column: 9)
!6225 = !DILocation(line: 266, column: 9, scope: !6217)
!6226 = !DILocation(line: 269, column: 41, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6217, file: !647, line: 269, column: 9)
!6228 = !DILocation(line: 269, column: 62, scope: !6227)
!6229 = !DILocation(line: 269, column: 9, scope: !6217)
!6230 = !DILocation(line: 272, column: 5, scope: !6217)
!6231 = !DILocation(line: 275, column: 22, scope: !6217)
!6232 = !DILocation(line: 275, column: 5, scope: !6217)
!6233 = !DILocation(line: 278, column: 26, scope: !6217)
!6234 = !DILocation(line: 278, column: 5, scope: !6217)
!6235 = !DILocation(line: 279, column: 5, scope: !6217)
!6236 = !DILocation(line: 279, column: 53, scope: !6217)
!6237 = !DILocation(line: 280, column: 5, scope: !6217)
!6238 = !DILocation(line: 280, column: 40, scope: !6217)
!6239 = !DILocation(line: 281, column: 5, scope: !6217)
!6240 = !DILocation(line: 282, column: 44, scope: !6217)
!6241 = !DILocation(line: 282, column: 5, scope: !6217)
!6242 = !DILocation(line: 284, column: 5, scope: !6217)
!6243 = !DILocation(line: 286, column: 5, scope: !6217)
!6244 = !DILocation(line: 287, column: 1, scope: !6217)
!6245 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !647, file: !647, line: 290, type: !6246, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6248)
!6246 = !DISubroutineType(types: !6247)
!6247 = !{null, !755, !202}
!6248 = !{!6249, !6250, !6251}
!6249 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6245, file: !647, line: 290, type: !755)
!6250 = !DILocalVariable(name: "byte", arg: 2, scope: !6245, file: !647, line: 290, type: !202)
!6251 = !DILocalVariable(name: "int_no", scope: !6245, file: !647, line: 292, type: !4517)
!6252 = !DILocation(line: 0, scope: !6245)
!6253 = !DILocation(line: 292, column: 26, scope: !6245)
!6254 = !DILocation(line: 294, column: 16, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6245, file: !647, line: 294, column: 9)
!6256 = !DILocation(line: 294, column: 9, scope: !6245)
!6257 = !DILocation(line: 295, column: 9, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6255, file: !647, line: 294, column: 34)
!6259 = !DILocation(line: 296, column: 5, scope: !6258)
!6260 = !DILocation(line: 299, column: 1, scope: !6245)
!6261 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !647, file: !647, line: 302, type: !6262, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6264)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{!61, !755, !2077, !61}
!6264 = !{!6265, !6266, !6267, !6268, !6269}
!6265 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6261, file: !647, line: 302, type: !755)
!6266 = !DILocalVariable(name: "data", arg: 2, scope: !6261, file: !647, line: 302, type: !2077)
!6267 = !DILocalVariable(name: "size", arg: 3, scope: !6261, file: !647, line: 302, type: !61)
!6268 = !DILocalVariable(name: "int_no", scope: !6261, file: !647, line: 304, type: !4517)
!6269 = !DILocalVariable(name: "index", scope: !6261, file: !647, line: 305, type: !61)
!6270 = !DILocation(line: 0, scope: !6261)
!6271 = !DILocation(line: 304, column: 26, scope: !6261)
!6272 = !DILocation(line: 307, column: 14, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6261, file: !647, line: 307, column: 9)
!6274 = !DILocation(line: 307, column: 9, scope: !6261)
!6275 = !DILocation(line: 313, column: 53, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !647, line: 312, column: 48)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !647, line: 312, column: 9)
!6278 = distinct !DILexicalBlock(scope: !6279, file: !647, line: 312, column: 9)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !647, line: 311, column: 33)
!6280 = distinct !DILexicalBlock(scope: !6261, file: !647, line: 311, column: 9)
!6281 = !DILocation(line: 313, column: 13, scope: !6276)
!6282 = !DILocation(line: 312, column: 44, scope: !6277)
!6283 = !DILocation(line: 312, column: 31, scope: !6277)
!6284 = !DILocation(line: 312, column: 9, scope: !6278)
!6285 = distinct !{!6285, !6284, !6286}
!6286 = !DILocation(line: 314, column: 9, scope: !6278)
!6287 = !DILocation(line: 318, column: 1, scope: !6261)
!6288 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !647, file: !647, line: 320, type: !6262, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6289)
!6289 = !{!6290, !6291, !6292, !6293, !6294, !6295, !6297}
!6290 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6288, file: !647, line: 320, type: !755)
!6291 = !DILocalVariable(name: "data", arg: 2, scope: !6288, file: !647, line: 320, type: !2077)
!6292 = !DILocalVariable(name: "size", arg: 3, scope: !6288, file: !647, line: 320, type: !61)
!6293 = !DILocalVariable(name: "actual_space", scope: !6288, file: !647, line: 322, type: !61)
!6294 = !DILocalVariable(name: "send_size", scope: !6288, file: !647, line: 322, type: !61)
!6295 = !DILocalVariable(name: "ch", scope: !6288, file: !647, line: 323, type: !6296)
!6296 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_VFIFO_CHANNEL", file: !302, line: 144, baseType: !301)
!6297 = !DILocalVariable(name: "irq_status", scope: !6288, file: !647, line: 325, type: !61)
!6298 = !DILocation(line: 0, scope: !6288)
!6299 = !DILocation(line: 322, column: 5, scope: !6288)
!6300 = !DILocation(line: 325, column: 5, scope: !6288)
!6301 = !DILocation(line: 328, column: 10, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6288, file: !647, line: 328, column: 9)
!6303 = !DILocation(line: 328, column: 9, scope: !6288)
!6304 = !DILocation(line: 332, column: 15, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6288, file: !647, line: 332, column: 9)
!6306 = !DILocation(line: 332, column: 24, scope: !6305)
!6307 = !DILocation(line: 335, column: 42, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6288, file: !647, line: 335, column: 9)
!6309 = !DILocation(line: 335, column: 9, scope: !6288)
!6310 = !DILocation(line: 341, column: 5, scope: !6288)
!6311 = !DILocation(line: 342, column: 9, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6288, file: !647, line: 342, column: 9)
!6313 = !DILocation(line: 342, column: 44, scope: !6312)
!6314 = !DILocation(line: 342, column: 9, scope: !6288)
!6315 = !DILocation(line: 343, column: 38, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6312, file: !647, line: 342, column: 54)
!6317 = !DILocation(line: 343, column: 9, scope: !6316)
!6318 = !DILocation(line: 344, column: 44, scope: !6316)
!6319 = !DILocation(line: 345, column: 5, scope: !6316)
!6320 = !DILocation(line: 346, column: 37, scope: !6288)
!6321 = !DILocation(line: 346, column: 5, scope: !6288)
!6322 = !DILocation(line: 349, column: 30, scope: !6288)
!6323 = !DILocation(line: 349, column: 5, scope: !6288)
!6324 = !DILocation(line: 350, column: 9, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6288, file: !647, line: 350, column: 9)
!6326 = !DILocation(line: 350, column: 22, scope: !6325)
!6327 = !DILocation(line: 355, column: 5, scope: !6288)
!6328 = !DILocation(line: 357, column: 22, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6288, file: !647, line: 357, column: 9)
!6330 = !DILocation(line: 357, column: 19, scope: !6329)
!6331 = !DILocation(line: 357, column: 9, scope: !6288)
!6332 = !DILocation(line: 358, column: 14, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6329, file: !647, line: 357, column: 36)
!6334 = !{i32 14, i32 18}
!6335 = !DILocation(line: 359, column: 9, scope: !6333)
!6336 = !DILocation(line: 360, column: 5, scope: !6333)
!6337 = !DILocation(line: 362, column: 1, scope: !6288)
!6338 = distinct !DISubprogram(name: "uart_channel_to_dma_channel", scope: !647, file: !647, line: 191, type: !6339, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6341)
!6339 = !DISubroutineType(types: !6340)
!6340 = !{!6296, !4517, !69}
!6341 = !{!6342, !6343, !6344}
!6342 = !DILocalVariable(name: "port", arg: 1, scope: !6338, file: !647, line: 191, type: !4517)
!6343 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6338, file: !647, line: 191, type: !69)
!6344 = !DILocalVariable(name: "ch", scope: !6338, file: !647, line: 193, type: !6296)
!6345 = !DILocation(line: 0, scope: !6338)
!6346 = !DILocation(line: 195, column: 14, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6338, file: !647, line: 195, column: 9)
!6348 = !DILocation(line: 195, column: 9, scope: !6338)
!6349 = !DILocation(line: 209, column: 5, scope: !6338)
!6350 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !647, file: !647, line: 365, type: !6351, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6353)
!6351 = !DISubroutineType(types: !6352)
!6352 = !{!202, !755}
!6353 = !{!6354, !6355}
!6354 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6350, file: !647, line: 365, type: !755)
!6355 = !DILocalVariable(name: "int_no", scope: !6350, file: !647, line: 367, type: !4517)
!6356 = !DILocation(line: 0, scope: !6350)
!6357 = !DILocation(line: 367, column: 26, scope: !6350)
!6358 = !DILocation(line: 369, column: 16, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6350, file: !647, line: 369, column: 9)
!6360 = !DILocation(line: 369, column: 9, scope: !6350)
!6361 = !DILocation(line: 370, column: 22, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6359, file: !647, line: 369, column: 33)
!6363 = !DILocation(line: 370, column: 9, scope: !6362)
!6364 = !DILocation(line: 0, scope: !6359)
!6365 = !DILocation(line: 375, column: 1, scope: !6350)
!6366 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !647, file: !647, line: 377, type: !6367, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6369)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{!61, !755}
!6369 = !{!6370, !6371}
!6370 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6366, file: !647, line: 377, type: !755)
!6371 = !DILocalVariable(name: "int_no", scope: !6366, file: !647, line: 379, type: !4517)
!6372 = !DILocation(line: 0, scope: !6366)
!6373 = !DILocation(line: 379, column: 26, scope: !6366)
!6374 = !DILocation(line: 381, column: 16, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6366, file: !647, line: 381, column: 9)
!6376 = !DILocation(line: 381, column: 9, scope: !6366)
!6377 = !DILocation(line: 382, column: 16, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6375, file: !647, line: 381, column: 33)
!6379 = !DILocation(line: 382, column: 9, scope: !6378)
!6380 = !DILocation(line: 0, scope: !6375)
!6381 = !DILocation(line: 387, column: 1, scope: !6366)
!6382 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !647, file: !647, line: 390, type: !6383, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6385)
!6383 = !DISubroutineType(types: !6384)
!6384 = !{!61, !755, !210, !61}
!6385 = !{!6386, !6387, !6388, !6389, !6390}
!6386 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6382, file: !647, line: 390, type: !755)
!6387 = !DILocalVariable(name: "buffer", arg: 2, scope: !6382, file: !647, line: 390, type: !210)
!6388 = !DILocalVariable(name: "size", arg: 3, scope: !6382, file: !647, line: 390, type: !61)
!6389 = !DILocalVariable(name: "int_no", scope: !6382, file: !647, line: 392, type: !4517)
!6390 = !DILocalVariable(name: "index", scope: !6382, file: !647, line: 393, type: !61)
!6391 = !DILocation(line: 0, scope: !6382)
!6392 = !DILocation(line: 392, column: 26, scope: !6382)
!6393 = !DILocation(line: 395, column: 16, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6382, file: !647, line: 395, column: 9)
!6395 = !DILocation(line: 395, column: 9, scope: !6382)
!6396 = !DILocation(line: 401, column: 38, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !647, line: 400, column: 48)
!6398 = distinct !DILexicalBlock(scope: !6399, file: !647, line: 400, column: 9)
!6399 = distinct !DILexicalBlock(scope: !6400, file: !647, line: 400, column: 9)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !647, line: 399, column: 33)
!6401 = distinct !DILexicalBlock(scope: !6382, file: !647, line: 399, column: 9)
!6402 = !DILocation(line: 401, column: 13, scope: !6397)
!6403 = !DILocation(line: 401, column: 27, scope: !6397)
!6404 = !DILocation(line: 400, column: 44, scope: !6398)
!6405 = !DILocation(line: 400, column: 31, scope: !6398)
!6406 = !DILocation(line: 400, column: 9, scope: !6399)
!6407 = distinct !{!6407, !6406, !6408}
!6408 = !DILocation(line: 402, column: 9, scope: !6399)
!6409 = !DILocation(line: 406, column: 1, scope: !6382)
!6410 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !647, file: !647, line: 408, type: !6383, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6411)
!6411 = !{!6412, !6413, !6414, !6415, !6416, !6417}
!6412 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6410, file: !647, line: 408, type: !755)
!6413 = !DILocalVariable(name: "buffer", arg: 2, scope: !6410, file: !647, line: 408, type: !210)
!6414 = !DILocalVariable(name: "size", arg: 3, scope: !6410, file: !647, line: 408, type: !61)
!6415 = !DILocalVariable(name: "actual_size", scope: !6410, file: !647, line: 410, type: !61)
!6416 = !DILocalVariable(name: "receive_size", scope: !6410, file: !647, line: 410, type: !61)
!6417 = !DILocalVariable(name: "ch", scope: !6410, file: !647, line: 411, type: !6296)
!6418 = !DILocation(line: 0, scope: !6410)
!6419 = !DILocation(line: 410, column: 5, scope: !6410)
!6420 = !DILocation(line: 413, column: 10, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6410, file: !647, line: 413, column: 9)
!6422 = !DILocation(line: 413, column: 9, scope: !6410)
!6423 = !DILocation(line: 417, column: 17, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6410, file: !647, line: 417, column: 9)
!6425 = !DILocation(line: 417, column: 26, scope: !6424)
!6426 = !DILocation(line: 421, column: 30, scope: !6410)
!6427 = !DILocation(line: 421, column: 5, scope: !6410)
!6428 = !DILocation(line: 422, column: 9, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6410, file: !647, line: 422, column: 9)
!6430 = !DILocation(line: 422, column: 21, scope: !6429)
!6431 = !DILocation(line: 427, column: 5, scope: !6410)
!6432 = !DILocation(line: 429, column: 25, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6410, file: !647, line: 429, column: 9)
!6434 = !DILocation(line: 429, column: 22, scope: !6433)
!6435 = !DILocation(line: 429, column: 9, scope: !6410)
!6436 = !DILocation(line: 430, column: 14, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6433, file: !647, line: 429, column: 38)
!6438 = !DILocation(line: 431, column: 9, scope: !6437)
!6439 = !DILocation(line: 432, column: 5, scope: !6437)
!6440 = !DILocation(line: 435, column: 1, scope: !6410)
!6441 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !647, file: !647, line: 438, type: !6367, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6442)
!6442 = !{!6443, !6444}
!6443 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6441, file: !647, line: 438, type: !755)
!6444 = !DILocalVariable(name: "length", scope: !6441, file: !647, line: 440, type: !61)
!6445 = !DILocation(line: 0, scope: !6441)
!6446 = !DILocation(line: 440, column: 5, scope: !6441)
!6447 = !DILocation(line: 440, column: 14, scope: !6441)
!6448 = !DILocation(line: 442, column: 10, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6441, file: !647, line: 442, column: 9)
!6450 = !DILocation(line: 442, column: 9, scope: !6441)
!6451 = !DILocation(line: 446, column: 30, scope: !6441)
!6452 = !DILocation(line: 446, column: 5, scope: !6441)
!6453 = !DILocation(line: 447, column: 12, scope: !6441)
!6454 = !DILocation(line: 447, column: 5, scope: !6441)
!6455 = !DILocation(line: 448, column: 1, scope: !6441)
!6456 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !647, file: !647, line: 451, type: !6367, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6457)
!6457 = !{!6458, !6459}
!6458 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6456, file: !647, line: 451, type: !755)
!6459 = !DILocalVariable(name: "length", scope: !6456, file: !647, line: 453, type: !61)
!6460 = !DILocation(line: 0, scope: !6456)
!6461 = !DILocation(line: 453, column: 5, scope: !6456)
!6462 = !DILocation(line: 453, column: 14, scope: !6456)
!6463 = !DILocation(line: 455, column: 10, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6456, file: !647, line: 455, column: 9)
!6465 = !DILocation(line: 455, column: 9, scope: !6456)
!6466 = !DILocation(line: 459, column: 30, scope: !6456)
!6467 = !DILocation(line: 459, column: 5, scope: !6456)
!6468 = !DILocation(line: 461, column: 12, scope: !6456)
!6469 = !DILocation(line: 461, column: 5, scope: !6456)
!6470 = !DILocation(line: 462, column: 1, scope: !6456)
!6471 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !647, file: !647, line: 543, type: !6472, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6474)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!6067, !755, !725, !51}
!6474 = !{!6475, !6476, !6477, !6478}
!6475 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6471, file: !647, line: 543, type: !755)
!6476 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6471, file: !647, line: 544, type: !725)
!6477 = !DILocalVariable(name: "user_data", arg: 3, scope: !6471, file: !647, line: 545, type: !51)
!6478 = !DILocalVariable(name: "ch", scope: !6471, file: !647, line: 547, type: !6296)
!6479 = !DILocation(line: 0, scope: !6471)
!6480 = !DILocation(line: 549, column: 10, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6471, file: !647, line: 549, column: 9)
!6482 = !DILocation(line: 549, column: 9, scope: !6471)
!6483 = !DILocation(line: 556, column: 53, scope: !6471)
!6484 = !DILocation(line: 556, column: 62, scope: !6471)
!6485 = !DILocation(line: 557, column: 53, scope: !6471)
!6486 = !DILocation(line: 557, column: 63, scope: !6471)
!6487 = !DILocation(line: 558, column: 37, scope: !6471)
!6488 = !DILocation(line: 558, column: 54, scope: !6471)
!6489 = !DILocation(line: 560, column: 39, scope: !6471)
!6490 = !DILocation(line: 561, column: 39, scope: !6471)
!6491 = !DILocation(line: 560, column: 5, scope: !6471)
!6492 = !DILocation(line: 562, column: 5, scope: !6471)
!6493 = !DILocation(line: 564, column: 44, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6471, file: !647, line: 564, column: 9)
!6495 = !DILocation(line: 564, column: 9, scope: !6471)
!6496 = !DILocation(line: 565, column: 9, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6494, file: !647, line: 564, column: 59)
!6498 = !DILocation(line: 566, column: 5, scope: !6497)
!6499 = !DILocation(line: 567, column: 9, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6494, file: !647, line: 566, column: 12)
!6501 = !DILocation(line: 569, column: 10, scope: !6471)
!6502 = !DILocation(line: 570, column: 5, scope: !6471)
!6503 = !DILocation(line: 572, column: 5, scope: !6471)
!6504 = !DILocation(line: 572, column: 53, scope: !6471)
!6505 = !DILocation(line: 573, column: 35, scope: !6471)
!6506 = !DILocation(line: 573, column: 5, scope: !6471)
!6507 = !DILocation(line: 574, column: 5, scope: !6471)
!6508 = !DILocation(line: 575, column: 25, scope: !6471)
!6509 = !DILocation(line: 575, column: 5, scope: !6471)
!6510 = !DILocation(line: 578, column: 5, scope: !6471)
!6511 = !DILocation(line: 579, column: 1, scope: !6471)
!6512 = !DILocation(line: 0, scope: !751)
!6513 = !DILocation(line: 539, column: 12, scope: !751)
!6514 = !DILocation(line: 539, column: 5, scope: !751)
!6515 = distinct !DISubprogram(name: "hal_uart_send_callback0", scope: !647, file: !647, line: 511, type: !154, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6516)
!6516 = !{!6517}
!6517 = !DILocalVariable(name: "callback_context", scope: !6518, file: !647, line: 514, type: !6520)
!6518 = distinct !DILexicalBlock(scope: !6519, file: !647, line: 513, column: 60)
!6519 = distinct !DILexicalBlock(scope: !6515, file: !647, line: 513, column: 9)
!6520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 32)
!6521 = !DILocation(line: 513, column: 42, scope: !6519)
!6522 = !DILocation(line: 513, column: 9, scope: !6515)
!6523 = !DILocation(line: 515, column: 39, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6518, file: !647, line: 515, column: 13)
!6525 = !DILocation(line: 515, column: 18, scope: !6524)
!6526 = !DILocation(line: 515, column: 13, scope: !6518)
!6527 = !DILocation(line: 516, column: 89, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6524, file: !647, line: 515, column: 49)
!6529 = !DILocation(line: 516, column: 13, scope: !6528)
!6530 = !DILocation(line: 517, column: 9, scope: !6528)
!6531 = !DILocation(line: 519, column: 32, scope: !6515)
!6532 = !DILocation(line: 519, column: 5, scope: !6515)
!6533 = !DILocation(line: 520, column: 1, scope: !6515)
!6534 = distinct !DISubprogram(name: "hal_uart_send_callback1", scope: !647, file: !647, line: 523, type: !154, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6535)
!6535 = !{!6536}
!6536 = !DILocalVariable(name: "callback_context", scope: !6537, file: !647, line: 526, type: !6520)
!6537 = distinct !DILexicalBlock(scope: !6538, file: !647, line: 525, column: 60)
!6538 = distinct !DILexicalBlock(scope: !6534, file: !647, line: 525, column: 9)
!6539 = !DILocation(line: 525, column: 42, scope: !6538)
!6540 = !DILocation(line: 525, column: 9, scope: !6534)
!6541 = !DILocation(line: 527, column: 39, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6537, file: !647, line: 527, column: 13)
!6543 = !DILocation(line: 527, column: 18, scope: !6542)
!6544 = !DILocation(line: 527, column: 13, scope: !6537)
!6545 = !DILocation(line: 528, column: 89, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6542, file: !647, line: 527, column: 49)
!6547 = !DILocation(line: 528, column: 13, scope: !6546)
!6548 = !DILocation(line: 529, column: 9, scope: !6546)
!6549 = !DILocation(line: 531, column: 32, scope: !6534)
!6550 = !DILocation(line: 531, column: 5, scope: !6534)
!6551 = !DILocation(line: 532, column: 1, scope: !6534)
!6552 = distinct !DISubprogram(name: "hal_uart_check_irq_disable", scope: !647, file: !647, line: 464, type: !6553, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6555)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{null, !4517, !69}
!6555 = !{!6556, !6557, !6558, !6559, !6560, !6562}
!6556 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6552, file: !647, line: 464, type: !4517)
!6557 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6552, file: !647, line: 464, type: !69)
!6558 = !DILocalVariable(name: "avail_size", scope: !6552, file: !647, line: 466, type: !61)
!6559 = !DILocalVariable(name: "avail_space", scope: !6552, file: !647, line: 466, type: !61)
!6560 = !DILocalVariable(name: "dma_config", scope: !6552, file: !647, line: 467, type: !6561)
!6561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!6562 = !DILocalVariable(name: "ch", scope: !6552, file: !647, line: 468, type: !6296)
!6563 = !DILocation(line: 0, scope: !6552)
!6564 = !DILocation(line: 466, column: 5, scope: !6552)
!6565 = !DILocation(line: 471, column: 9, scope: !6552)
!6566 = !DILocation(line: 472, column: 9, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !647, line: 471, column: 16)
!6568 = distinct !DILexicalBlock(scope: !6552, file: !647, line: 471, column: 9)
!6569 = !DILocation(line: 473, column: 13, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6567, file: !647, line: 473, column: 13)
!6571 = !DILocation(line: 473, column: 39, scope: !6570)
!6572 = !DILocation(line: 473, column: 24, scope: !6570)
!6573 = !DILocation(line: 473, column: 13, scope: !6567)
!6574 = !DILocation(line: 478, column: 9, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6568, file: !647, line: 477, column: 12)
!6576 = !DILocation(line: 479, column: 13, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6575, file: !647, line: 479, column: 13)
!6578 = !DILocation(line: 479, column: 40, scope: !6577)
!6579 = !DILocation(line: 479, column: 77, scope: !6577)
!6580 = !DILocation(line: 479, column: 63, scope: !6577)
!6581 = !DILocation(line: 479, column: 25, scope: !6577)
!6582 = !DILocation(line: 479, column: 13, scope: !6575)
!6583 = !DILocation(line: 0, scope: !6568)
!6584 = !DILocation(line: 484, column: 1, scope: !6552)
!6585 = distinct !DISubprogram(name: "hal_uart_receive_callback0", scope: !647, file: !647, line: 486, type: !154, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6586)
!6586 = !{!6587}
!6587 = !DILocalVariable(name: "callback_context", scope: !6588, file: !647, line: 490, type: !6520)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !647, line: 489, column: 70)
!6589 = distinct !DILexicalBlock(scope: !6585, file: !647, line: 488, column: 9)
!6590 = !DILocation(line: 488, column: 43, scope: !6589)
!6591 = !DILocation(line: 488, column: 61, scope: !6589)
!6592 = !DILocation(line: 489, column: 14, scope: !6589)
!6593 = !DILocation(line: 489, column: 63, scope: !6589)
!6594 = !DILocation(line: 488, column: 9, scope: !6585)
!6595 = !DILocation(line: 491, column: 39, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6588, file: !647, line: 491, column: 13)
!6597 = !DILocation(line: 491, column: 18, scope: !6596)
!6598 = !DILocation(line: 491, column: 13, scope: !6588)
!6599 = !DILocation(line: 492, column: 88, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6596, file: !647, line: 491, column: 49)
!6601 = !DILocation(line: 492, column: 13, scope: !6600)
!6602 = !DILocation(line: 493, column: 9, scope: !6600)
!6603 = !DILocation(line: 495, column: 32, scope: !6585)
!6604 = !DILocation(line: 495, column: 5, scope: !6585)
!6605 = !DILocation(line: 496, column: 1, scope: !6585)
!6606 = distinct !DISubprogram(name: "hal_uart_receive_callback1", scope: !647, file: !647, line: 499, type: !154, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6607)
!6607 = !{!6608}
!6608 = !DILocalVariable(name: "callback_context", scope: !6609, file: !647, line: 503, type: !6520)
!6609 = distinct !DILexicalBlock(scope: !6610, file: !647, line: 502, column: 70)
!6610 = distinct !DILexicalBlock(scope: !6606, file: !647, line: 501, column: 9)
!6611 = !DILocation(line: 501, column: 43, scope: !6610)
!6612 = !DILocation(line: 501, column: 61, scope: !6610)
!6613 = !DILocation(line: 502, column: 14, scope: !6610)
!6614 = !DILocation(line: 502, column: 63, scope: !6610)
!6615 = !DILocation(line: 501, column: 9, scope: !6606)
!6616 = !DILocation(line: 504, column: 39, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6609, file: !647, line: 504, column: 13)
!6618 = !DILocation(line: 504, column: 18, scope: !6617)
!6619 = !DILocation(line: 504, column: 13, scope: !6609)
!6620 = !DILocation(line: 505, column: 88, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6617, file: !647, line: 504, column: 49)
!6622 = !DILocation(line: 505, column: 13, scope: !6621)
!6623 = !DILocation(line: 506, column: 9, scope: !6621)
!6624 = !DILocation(line: 508, column: 32, scope: !6606)
!6625 = !DILocation(line: 508, column: 5, scope: !6606)
!6626 = !DILocation(line: 509, column: 1, scope: !6606)
!6627 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !647, file: !647, line: 582, type: !6628, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6630)
!6628 = !DISubroutineType(types: !6629)
!6629 = !{!6067, !755, !712}
!6630 = !{!6631, !6632}
!6631 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6627, file: !647, line: 582, type: !755)
!6632 = !DILocalVariable(name: "baudrate", arg: 2, scope: !6627, file: !647, line: 582, type: !712)
!6633 = !DILocation(line: 0, scope: !6627)
!6634 = !DILocation(line: 584, column: 11, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6627, file: !647, line: 584, column: 9)
!6636 = !DILocation(line: 584, column: 46, scope: !6635)
!6637 = !DILocation(line: 588, column: 37, scope: !6627)
!6638 = !DILocation(line: 588, column: 50, scope: !6627)
!6639 = !DILocation(line: 588, column: 59, scope: !6627)
!6640 = !DILocation(line: 589, column: 12, scope: !6627)
!6641 = !DILocation(line: 589, column: 5, scope: !6627)
!6642 = !DILocation(line: 590, column: 1, scope: !6627)
!6643 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !647, file: !647, line: 608, type: !6644, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6648)
!6644 = !DISubroutineType(types: !6645)
!6645 = !{!6067, !755, !6646}
!6646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6647, size: 32)
!6647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !733)
!6648 = !{!6649, !6650}
!6649 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6643, file: !647, line: 608, type: !755)
!6650 = !DILocalVariable(name: "uart_dma_config", arg: 2, scope: !6643, file: !647, line: 608, type: !6646)
!6651 = !DILocation(line: 0, scope: !6643)
!6652 = !DILocation(line: 610, column: 10, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6643, file: !647, line: 610, column: 9)
!6654 = !DILocation(line: 610, column: 9, scope: !6643)
!6655 = !DILocation(line: 614, column: 10, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6643, file: !647, line: 614, column: 9)
!6657 = !DILocation(line: 614, column: 9, scope: !6643)
!6658 = !DILocation(line: 618, column: 37, scope: !6643)
!6659 = !DILocation(line: 618, column: 56, scope: !6643)
!6660 = !DILocation(line: 619, column: 45, scope: !6643)
!6661 = !DILocation(line: 619, column: 12, scope: !6643)
!6662 = !DILocation(line: 620, column: 12, scope: !6643)
!6663 = !DILocation(line: 619, column: 5, scope: !6643)
!6664 = !DILocation(line: 621, column: 5, scope: !6643)
!6665 = !DILocation(line: 622, column: 5, scope: !6643)
!6666 = !DILocation(line: 623, column: 33, scope: !6643)
!6667 = !DILocation(line: 624, column: 50, scope: !6643)
!6668 = !DILocation(line: 625, column: 50, scope: !6643)
!6669 = !DILocation(line: 626, column: 50, scope: !6643)
!6670 = !DILocation(line: 627, column: 50, scope: !6643)
!6671 = !DILocation(line: 628, column: 33, scope: !6643)
!6672 = !DILocation(line: 623, column: 5, scope: !6643)
!6673 = !DILocation(line: 630, column: 50, scope: !6643)
!6674 = !DILocation(line: 631, column: 50, scope: !6643)
!6675 = !DILocation(line: 632, column: 50, scope: !6643)
!6676 = !DILocation(line: 629, column: 5, scope: !6643)
!6677 = !DILocation(line: 634, column: 5, scope: !6643)
!6678 = !DILocation(line: 635, column: 1, scope: !6643)
!6679 = distinct !DISubprogram(name: "hal_uart_is_dma_config_valid", scope: !647, file: !647, line: 112, type: !6680, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6682)
!6680 = !DISubroutineType(types: !6681)
!6681 = !{!69, !6646}
!6682 = !{!6683}
!6683 = !DILocalVariable(name: "dma_config", arg: 1, scope: !6679, file: !647, line: 112, type: !6646)
!6684 = !DILocation(line: 0, scope: !6679)
!6685 = !DILocation(line: 114, column: 14, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6679, file: !647, line: 114, column: 9)
!6687 = !DILocation(line: 114, column: 9, scope: !6679)
!6688 = !DILocation(line: 117, column: 29, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6679, file: !647, line: 117, column: 9)
!6690 = !DILocation(line: 117, column: 14, scope: !6689)
!6691 = !DILocation(line: 117, column: 9, scope: !6679)
!6692 = !DILocation(line: 120, column: 21, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6679, file: !647, line: 120, column: 9)
!6694 = !DILocation(line: 120, column: 61, scope: !6693)
!6695 = !DILocation(line: 120, column: 47, scope: !6693)
!6696 = !DILocation(line: 120, column: 9, scope: !6679)
!6697 = !DILocation(line: 123, column: 61, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6679, file: !647, line: 123, column: 9)
!6699 = !DILocation(line: 123, column: 47, scope: !6698)
!6700 = !DILocation(line: 123, column: 9, scope: !6679)
!6701 = !DILocation(line: 126, column: 29, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6679, file: !647, line: 126, column: 9)
!6703 = !DILocation(line: 126, column: 14, scope: !6702)
!6704 = !DILocation(line: 126, column: 9, scope: !6679)
!6705 = !DILocation(line: 129, column: 21, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6679, file: !647, line: 129, column: 9)
!6707 = !DILocation(line: 129, column: 58, scope: !6706)
!6708 = !DILocation(line: 129, column: 44, scope: !6706)
!6709 = !DILocation(line: 129, column: 9, scope: !6679)
!6710 = !DILocation(line: 136, column: 1, scope: !6679)
!6711 = distinct !DISubprogram(name: "hal_uart_translate_timeout", scope: !647, file: !647, line: 182, type: !5923, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6712)
!6712 = !{!6713, !6714}
!6713 = !DILocalVariable(name: "timeout_us", arg: 1, scope: !6711, file: !647, line: 182, type: !61)
!6714 = !DILocalVariable(name: "ticks_per_us", scope: !6711, file: !647, line: 184, type: !61)
!6715 = !DILocation(line: 0, scope: !6711)
!6716 = !DILocation(line: 186, column: 20, scope: !6711)
!6717 = !DILocation(line: 186, column: 39, scope: !6711)
!6718 = !DILocation(line: 188, column: 25, scope: !6711)
!6719 = !DILocation(line: 188, column: 5, scope: !6711)
!6720 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !647, file: !647, line: 637, type: !6218, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6721)
!6721 = !{!6722, !6723}
!6722 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6720, file: !647, line: 637, type: !755)
!6723 = !DILocalVariable(name: "int_no", scope: !6720, file: !647, line: 639, type: !4517)
!6724 = !DILocation(line: 0, scope: !6720)
!6725 = !DILocation(line: 641, column: 10, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6720, file: !647, line: 641, column: 9)
!6727 = !DILocation(line: 641, column: 9, scope: !6720)
!6728 = !DILocation(line: 645, column: 14, scope: !6720)
!6729 = !DILocation(line: 646, column: 5, scope: !6720)
!6730 = !DILocation(line: 648, column: 5, scope: !6720)
!6731 = !DILocation(line: 649, column: 1, scope: !6720)
!6732 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !647, file: !647, line: 651, type: !6733, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6735)
!6733 = !DISubroutineType(types: !6734)
!6734 = !{!6067, !755, !54, !54, !54}
!6735 = !{!6736, !6737, !6738, !6739, !6740}
!6736 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6732, file: !647, line: 651, type: !755)
!6737 = !DILocalVariable(name: "xon", arg: 2, scope: !6732, file: !647, line: 652, type: !54)
!6738 = !DILocalVariable(name: "xoff", arg: 3, scope: !6732, file: !647, line: 653, type: !54)
!6739 = !DILocalVariable(name: "escape_character", arg: 4, scope: !6732, file: !647, line: 654, type: !54)
!6740 = !DILocalVariable(name: "int_no", scope: !6732, file: !647, line: 656, type: !4517)
!6741 = !DILocation(line: 0, scope: !6732)
!6742 = !DILocation(line: 658, column: 10, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6732, file: !647, line: 658, column: 9)
!6744 = !DILocation(line: 658, column: 9, scope: !6732)
!6745 = !DILocation(line: 662, column: 14, scope: !6732)
!6746 = !DILocation(line: 663, column: 5, scope: !6732)
!6747 = !DILocation(line: 665, column: 5, scope: !6732)
!6748 = !DILocation(line: 666, column: 1, scope: !6732)
!6749 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !647, file: !647, line: 668, type: !6218, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6750)
!6750 = !{!6751, !6752}
!6751 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6749, file: !647, line: 668, type: !755)
!6752 = !DILocalVariable(name: "int_no", scope: !6749, file: !647, line: 670, type: !4517)
!6753 = !DILocation(line: 0, scope: !6749)
!6754 = !DILocation(line: 672, column: 10, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6749, file: !647, line: 672, column: 9)
!6756 = !DILocation(line: 672, column: 9, scope: !6749)
!6757 = !DILocation(line: 676, column: 14, scope: !6749)
!6758 = !DILocation(line: 677, column: 5, scope: !6749)
!6759 = !DILocation(line: 679, column: 5, scope: !6749)
!6760 = !DILocation(line: 680, column: 1, scope: !6749)
!6761 = distinct !DISubprogram(name: "hal_uart_set_dma_timeout", scope: !647, file: !647, line: 683, type: !6762, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !646, retainedNodes: !6764)
!6762 = !DISubroutineType(types: !6763)
!6763 = !{!6067, !755, !61}
!6764 = !{!6765, !6766}
!6765 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6761, file: !647, line: 683, type: !755)
!6766 = !DILocalVariable(name: "timeout", arg: 2, scope: !6761, file: !647, line: 683, type: !61)
!6767 = !DILocation(line: 0, scope: !6761)
!6768 = !DILocation(line: 685, column: 10, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6761, file: !647, line: 685, column: 9)
!6770 = !DILocation(line: 685, column: 9, scope: !6761)
!6771 = !DILocation(line: 689, column: 19, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6761, file: !647, line: 689, column: 9)
!6773 = !DILocation(line: 0, scope: !6772)
!6774 = !DILocation(line: 696, column: 1, scope: !6761)
!6775 = distinct !DISubprogram(name: "hal_dwt_reset", scope: !763, file: !763, line: 47, type: !154, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !762, retainedNodes: !1935)
!6776 = !DILocation(line: 49, column: 16, scope: !6775)
!6777 = !DILocation(line: 50, column: 16, scope: !6775)
!6778 = !DILocation(line: 51, column: 16, scope: !6775)
!6779 = !DILocation(line: 52, column: 16, scope: !6775)
!6780 = !DILocation(line: 53, column: 16, scope: !6775)
!6781 = !DILocation(line: 54, column: 16, scope: !6775)
!6782 = !DILocation(line: 55, column: 16, scope: !6775)
!6783 = !DILocation(line: 56, column: 16, scope: !6775)
!6784 = !DILocation(line: 57, column: 20, scope: !6775)
!6785 = !DILocation(line: 58, column: 20, scope: !6775)
!6786 = !DILocation(line: 59, column: 20, scope: !6775)
!6787 = !DILocation(line: 60, column: 20, scope: !6775)
!6788 = !DILocation(line: 61, column: 1, scope: !6775)
!6789 = distinct !DISubprogram(name: "hal_dwt_init", scope: !763, file: !763, line: 62, type: !154, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !762, retainedNodes: !1935)
!6790 = !DILocation(line: 70, column: 22, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6789, file: !763, line: 70, column: 9)
!6792 = !DILocation(line: 70, column: 28, scope: !6791)
!6793 = !DILocation(line: 70, column: 9, scope: !6789)
!6794 = !DILocation(line: 72, column: 9, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6791, file: !763, line: 70, column: 62)
!6796 = !DILocation(line: 75, column: 26, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6795, file: !763, line: 75, column: 13)
!6798 = !DILocation(line: 75, column: 32, scope: !6797)
!6799 = !DILocation(line: 75, column: 13, scope: !6795)
!6800 = !DILocation(line: 76, column: 30, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6797, file: !763, line: 75, column: 63)
!6802 = !DILocation(line: 77, column: 9, scope: !6801)
!6803 = !DILocation(line: 79, column: 28, scope: !6795)
!6804 = !DILocation(line: 79, column: 33, scope: !6795)
!6805 = !DILocation(line: 79, column: 21, scope: !6795)
!6806 = !DILocation(line: 83, column: 20, scope: !6795)
!6807 = !DILocation(line: 84, column: 20, scope: !6795)
!6808 = !DILocation(line: 85, column: 20, scope: !6795)
!6809 = !DILocation(line: 86, column: 20, scope: !6795)
!6810 = !DILocation(line: 92, column: 5, scope: !6795)
!6811 = !DILocation(line: 93, column: 1, scope: !6789)
!6812 = distinct !DISubprogram(name: "hal_dwt_request_watchpoint", scope: !763, file: !763, line: 120, type: !6813, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !762, retainedNodes: !6816)
!6813 = !DISubroutineType(types: !6814)
!6814 = !{!527, !61, !61, !61, !6815}
!6815 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_FUNC_TYPE", file: !766, line: 48, baseType: !765)
!6816 = !{!6817, !6818, !6819, !6820, !6821}
!6817 = !DILocalVariable(name: "index", arg: 1, scope: !6812, file: !763, line: 120, type: !61)
!6818 = !DILocalVariable(name: "addr_base", arg: 2, scope: !6812, file: !763, line: 120, type: !61)
!6819 = !DILocalVariable(name: "addr_mask", arg: 3, scope: !6812, file: !763, line: 120, type: !61)
!6820 = !DILocalVariable(name: "func", arg: 4, scope: !6812, file: !763, line: 120, type: !6815)
!6821 = !DILocalVariable(name: "offset", scope: !6812, file: !763, line: 122, type: !61)
!6822 = !DILocation(line: 0, scope: !6812)
!6823 = !DILocation(line: 129, column: 22, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6812, file: !763, line: 129, column: 9)
!6825 = !DILocation(line: 129, column: 28, scope: !6824)
!6826 = !DILocation(line: 129, column: 9, scope: !6812)
!6827 = !DILocation(line: 131, column: 23, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !763, line: 131, column: 13)
!6829 = distinct !DILexicalBlock(scope: !6824, file: !763, line: 129, column: 62)
!6830 = !DILocation(line: 131, column: 20, scope: !6828)
!6831 = !DILocation(line: 131, column: 36, scope: !6828)
!6832 = !DILocation(line: 135, column: 33, scope: !6829)
!6833 = !DILocation(line: 138, column: 23, scope: !6829)
!6834 = !DILocation(line: 138, column: 33, scope: !6829)
!6835 = !DILocation(line: 139, column: 23, scope: !6829)
!6836 = !DILocation(line: 139, column: 33, scope: !6829)
!6837 = !DILocation(line: 140, column: 58, scope: !6829)
!6838 = !DILocation(line: 140, column: 40, scope: !6829)
!6839 = !DILocation(line: 140, column: 68, scope: !6829)
!6840 = !DILocation(line: 140, column: 97, scope: !6829)
!6841 = !DILocation(line: 140, column: 37, scope: !6829)
!6842 = !DILocation(line: 142, column: 9, scope: !6829)
!6843 = !DILocation(line: 0, scope: !6824)
!6844 = !DILocation(line: 146, column: 1, scope: !6812)
!6845 = distinct !DISubprogram(name: "customer_flash_suspend_bit", scope: !813, file: !813, line: 178, type: !6846, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !6848)
!6846 = !DISubroutineType(types: !6847)
!6847 = !{!58}
!6848 = !{!6849}
!6849 = !DILocalVariable(name: "suspend_bit", scope: !6845, file: !813, line: 181, type: !58)
!6850 = !DILocation(line: 0, scope: !6845)
!6851 = !DILocation(line: 182, column: 5, scope: !6845)
!6852 = distinct !DISubprogram(name: "customer_switch_spi_mode_command", scope: !813, file: !813, line: 185, type: !6853, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !1935)
!6853 = !DISubroutineType(types: !6854)
!6854 = !{!193}
!6855 = !DILocation(line: 188, column: 4, scope: !6852)
!6856 = distinct !DISubprogram(name: "customer_switch_spiq_mode_command", scope: !813, file: !813, line: 191, type: !6853, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !1935)
!6857 = !DILocation(line: 194, column: 5, scope: !6856)
!6858 = distinct !DISubprogram(name: "customer_flash_read_SR2_comand", scope: !813, file: !813, line: 197, type: !6846, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !6859)
!6859 = !{!6860}
!6860 = !DILocalVariable(name: "cmd", scope: !6858, file: !813, line: 201, type: !58)
!6861 = !DILocation(line: 0, scope: !6858)
!6862 = !DILocation(line: 202, column: 5, scope: !6858)
!6863 = distinct !DISubprogram(name: "customer_flash_register", scope: !813, file: !813, line: 207, type: !6864, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !812, retainedNodes: !1935)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{!815}
!6866 = !DILocation(line: 209, column: 5, scope: !6863)
!6867 = distinct !DISubprogram(name: "gpio_mode_init", scope: !1858, file: !1858, line: 93, type: !154, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !6868)
!6868 = !{!6869, !6870}
!6869 = !DILocalVariable(name: "i", scope: !6867, file: !1858, line: 95, type: !61)
!6870 = !DILocalVariable(name: "mode_temp", scope: !6867, file: !1858, line: 98, type: !6871)
!6871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !6872)
!6872 = !{!6873}
!6873 = !DISubrange(count: 10)
!6874 = !DILocation(line: 98, column: 14, scope: !6867)
!6875 = !DILocation(line: 0, scope: !6867)
!6876 = !DILocation(line: 100, column: 5, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6867, file: !1858, line: 100, column: 5)
!6878 = !DILocation(line: 101, column: 9, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6880, file: !1858, line: 100, column: 50)
!6880 = distinct !DILexicalBlock(scope: !6877, file: !1858, line: 100, column: 5)
!6881 = !DILocation(line: 100, column: 46, scope: !6880)
!6882 = !DILocation(line: 100, column: 19, scope: !6880)
!6883 = distinct !{!6883, !6876, !6884}
!6884 = !DILocation(line: 103, column: 5, scope: !6877)
!6885 = !DILocation(line: 106, column: 1, scope: !6867)
!6886 = distinct !DISubprogram(name: "gpio_oe_init", scope: !1858, file: !1858, line: 114, type: !154, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !6887)
!6887 = !{!6888, !6889}
!6888 = !DILocalVariable(name: "i", scope: !6886, file: !1858, line: 116, type: !61)
!6889 = !DILocalVariable(name: "oe_temp", scope: !6886, file: !1858, line: 119, type: !6890)
!6890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 96, elements: !981)
!6891 = !DILocation(line: 0, scope: !6886)
!6892 = !DILocation(line: 122, column: 9, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !1858, line: 121, column: 48)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !1858, line: 121, column: 5)
!6895 = distinct !DILexicalBlock(scope: !6886, file: !1858, line: 121, column: 5)
!6896 = !DILocation(line: 125, column: 1, scope: !6886)
!6897 = distinct !DISubprogram(name: "gpio_ies_init", scope: !1858, file: !1858, line: 133, type: !154, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !6898)
!6898 = !{!6899, !6900}
!6899 = !DILocalVariable(name: "i", scope: !6897, file: !1858, line: 135, type: !61)
!6900 = !DILocalVariable(name: "ies_temp", scope: !6897, file: !1858, line: 138, type: !6890)
!6901 = !DILocation(line: 0, scope: !6897)
!6902 = !DILocation(line: 141, column: 9, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !1858, line: 140, column: 49)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !1858, line: 140, column: 5)
!6905 = distinct !DILexicalBlock(scope: !6897, file: !1858, line: 140, column: 5)
!6906 = !DILocation(line: 145, column: 33, scope: !6897)
!6907 = !DILocation(line: 146, column: 33, scope: !6897)
!6908 = !DILocation(line: 147, column: 33, scope: !6897)
!6909 = !DILocation(line: 150, column: 33, scope: !6897)
!6910 = !DILocation(line: 151, column: 33, scope: !6897)
!6911 = !DILocation(line: 152, column: 33, scope: !6897)
!6912 = !DILocation(line: 155, column: 35, scope: !6897)
!6913 = !DILocation(line: 156, column: 35, scope: !6897)
!6914 = !DILocation(line: 157, column: 35, scope: !6897)
!6915 = !DILocation(line: 160, column: 35, scope: !6897)
!6916 = !DILocation(line: 161, column: 35, scope: !6897)
!6917 = !DILocation(line: 162, column: 35, scope: !6897)
!6918 = !DILocation(line: 165, column: 35, scope: !6897)
!6919 = !DILocation(line: 166, column: 35, scope: !6897)
!6920 = !DILocation(line: 167, column: 35, scope: !6897)
!6921 = !DILocation(line: 170, column: 35, scope: !6897)
!6922 = !DILocation(line: 171, column: 35, scope: !6897)
!6923 = !DILocation(line: 172, column: 35, scope: !6897)
!6924 = !DILocation(line: 174, column: 1, scope: !6897)
!6925 = distinct !DISubprogram(name: "gpio_pull_up_init", scope: !1858, file: !1858, line: 182, type: !154, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !6926)
!6926 = !{!6927, !6928}
!6927 = !DILocalVariable(name: "i", scope: !6925, file: !1858, line: 184, type: !61)
!6928 = !DILocalVariable(name: "pull_up_temp", scope: !6925, file: !1858, line: 187, type: !6890)
!6929 = !DILocation(line: 0, scope: !6925)
!6930 = !DILocation(line: 190, column: 9, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !1858, line: 189, column: 53)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !1858, line: 189, column: 5)
!6933 = distinct !DILexicalBlock(scope: !6925, file: !1858, line: 189, column: 5)
!6934 = !DILocation(line: 194, column: 33, scope: !6925)
!6935 = !DILocation(line: 202, column: 33, scope: !6925)
!6936 = !DILocation(line: 210, column: 35, scope: !6925)
!6937 = !DILocation(line: 218, column: 35, scope: !6925)
!6938 = !DILocation(line: 226, column: 35, scope: !6925)
!6939 = !DILocation(line: 234, column: 35, scope: !6925)
!6940 = !DILocation(line: 241, column: 1, scope: !6925)
!6941 = distinct !DISubprogram(name: "gpio_pull_down_init", scope: !1858, file: !1858, line: 250, type: !154, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !6942)
!6942 = !{!6943, !6944}
!6943 = !DILocalVariable(name: "i", scope: !6941, file: !1858, line: 252, type: !61)
!6944 = !DILocalVariable(name: "pull_down_temp", scope: !6941, file: !1858, line: 255, type: !6890)
!6945 = !DILocation(line: 0, scope: !6941)
!6946 = !DILocation(line: 258, column: 9, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !1858, line: 257, column: 55)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !1858, line: 257, column: 5)
!6949 = distinct !DILexicalBlock(scope: !6941, file: !1858, line: 257, column: 5)
!6950 = !DILocation(line: 261, column: 1, scope: !6941)
!6951 = distinct !DISubprogram(name: "gpio_output_init", scope: !1858, file: !1858, line: 269, type: !154, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !6952)
!6952 = !{!6953, !6954}
!6953 = !DILocalVariable(name: "i", scope: !6951, file: !1858, line: 271, type: !61)
!6954 = !DILocalVariable(name: "output_temp", scope: !6951, file: !1858, line: 274, type: !6890)
!6955 = !DILocation(line: 0, scope: !6951)
!6956 = !DILocation(line: 277, column: 9, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !1858, line: 276, column: 52)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !1858, line: 276, column: 5)
!6959 = distinct !DILexicalBlock(scope: !6951, file: !1858, line: 276, column: 5)
!6960 = !DILocation(line: 281, column: 1, scope: !6951)
!6961 = distinct !DISubprogram(name: "bsp_ept_gpio_set_control_by_cm4", scope: !1858, file: !1858, line: 289, type: !154, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !1935)
!6962 = !DILocation(line: 292, column: 39, scope: !6961)
!6963 = !DILocation(line: 293, column: 39, scope: !6961)
!6964 = !DILocation(line: 294, column: 39, scope: !6961)
!6965 = !DILocation(line: 295, column: 1, scope: !6961)
!6966 = distinct !DISubprogram(name: "bsp_ept_gpio_setting_init", scope: !1858, file: !1858, line: 302, type: !154, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1857, retainedNodes: !1935)
!6967 = !DILocation(line: 304, column: 5, scope: !6966)
!6968 = !DILocation(line: 305, column: 5, scope: !6966)
!6969 = !DILocation(line: 306, column: 5, scope: !6966)
!6970 = !DILocation(line: 307, column: 5, scope: !6966)
!6971 = !DILocation(line: 308, column: 5, scope: !6966)
!6972 = !DILocation(line: 309, column: 5, scope: !6966)
!6973 = !DILocation(line: 310, column: 1, scope: !6966)
!6974 = distinct !DISubprogram(name: "main", scope: !839, file: !839, line: 82, type: !2621, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !6975)
!6975 = !{!6976}
!6976 = !DILocalVariable(name: "idx", scope: !6974, file: !839, line: 84, type: !7)
!6977 = !DILocation(line: 87, column: 5, scope: !6974)
!6978 = !DILocation(line: 95, column: 5, scope: !6974)
!6979 = !DILocation(line: 0, scope: !6974)
!6980 = !DILocation(line: 98, column: 5, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6974, file: !839, line: 98, column: 5)
!6982 = !DILocation(line: 99, column: 9, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6984, file: !839, line: 98, column: 35)
!6984 = distinct !DILexicalBlock(scope: !6981, file: !839, line: 98, column: 5)
!6985 = !DILocation(line: 98, column: 31, scope: !6984)
!6986 = !DILocation(line: 98, column: 23, scope: !6984)
!6987 = distinct !{!6987, !6980, !6988}
!6988 = !DILocation(line: 100, column: 5, scope: !6981)
!6989 = !DILocation(line: 104, column: 5, scope: !6974)
!6990 = !DILocation(line: 107, column: 5, scope: !6974)
!6991 = !DILocation(line: 114, column: 5, scope: !6974)
!6992 = !DILocation(line: 114, column: 5, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !839, line: 114, column: 5)
!6994 = distinct !DILexicalBlock(scope: !6974, file: !839, line: 114, column: 5)
!6995 = distinct !{!6995, !6996, !6997}
!6996 = !DILocation(line: 114, column: 5, scope: !6994)
!6997 = !DILocation(line: 114, column: 13, scope: !6994)
!6998 = distinct !DISubprogram(name: "vTestTask", scope: !839, file: !839, line: 68, type: !640, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !6999)
!6999 = !{!7000, !7001, !7002, !7003}
!7000 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !6998, file: !839, line: 68, type: !51)
!7001 = !DILocalVariable(name: "idx", scope: !6998, file: !839, line: 70, type: !61)
!7002 = !DILocalVariable(name: "xLastExecutionTime", scope: !6998, file: !839, line: 71, type: !855)
!7003 = !DILocalVariable(name: "xDelayTime", scope: !6998, file: !839, line: 71, type: !855)
!7004 = !DILocation(line: 0, scope: !6998)
!7005 = !DILocation(line: 70, column: 20, scope: !6998)
!7006 = !DILocation(line: 71, column: 5, scope: !6998)
!7007 = !DILocation(line: 73, column: 26, scope: !6998)
!7008 = !DILocation(line: 73, column: 24, scope: !6998)
!7009 = !DILocation(line: 74, column: 29, scope: !6998)
!7010 = !DILocation(line: 76, column: 5, scope: !6998)
!7011 = !DILocation(line: 77, column: 9, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !6998, file: !839, line: 76, column: 15)
!7013 = !DILocation(line: 78, column: 9, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7012, file: !839, line: 78, column: 9)
!7015 = distinct !{!7015, !7010, !7016}
!7016 = !DILocation(line: 79, column: 5, scope: !6998)
!7017 = distinct !DISubprogram(name: "SysTick_Set", scope: !869, file: !869, line: 70, type: !5923, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !7018)
!7018 = !{!7019, !7020}
!7019 = !DILocalVariable(name: "ticks", arg: 1, scope: !7017, file: !869, line: 70, type: !61)
!7020 = !DILocalVariable(name: "val", scope: !7017, file: !869, line: 72, type: !61)
!7021 = !DILocation(line: 0, scope: !7017)
!7022 = !DILocation(line: 74, column: 16, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7017, file: !869, line: 74, column: 9)
!7024 = !DILocation(line: 74, column: 21, scope: !7023)
!7025 = !DILocation(line: 74, column: 9, scope: !7017)
!7026 = !DILocation(line: 78, column: 20, scope: !7017)
!7027 = !DILocation(line: 80, column: 19, scope: !7017)
!7028 = !DILocation(line: 83, column: 20, scope: !7017)
!7029 = !DILocation(line: 84, column: 20, scope: !7017)
!7030 = !DILocation(line: 86, column: 19, scope: !7017)
!7031 = !DILocation(line: 88, column: 5, scope: !7017)
!7032 = !DILocation(line: 89, column: 1, scope: !7017)
!7033 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !869, file: !869, line: 98, type: !154, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !1935)
!7034 = !DILocation(line: 100, column: 28, scope: !7033)
!7035 = !DILocation(line: 101, column: 1, scope: !7033)
!7036 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !869, file: !869, line: 110, type: !1916, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !1935)
!7037 = !DILocation(line: 112, column: 12, scope: !7036)
!7038 = !DILocation(line: 112, column: 5, scope: !7036)
!7039 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !869, file: !869, line: 122, type: !154, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !1935)
!7040 = !DILocation(line: 124, column: 23, scope: !7039)
!7041 = !DILocation(line: 124, column: 21, scope: !7039)
!7042 = !DILocation(line: 125, column: 1, scope: !7039)
!7043 = distinct !DISubprogram(name: "SystemInit", scope: !869, file: !869, line: 136, type: !154, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !1935)
!7044 = !DILocation(line: 140, column: 16, scope: !7043)
!7045 = !DILocation(line: 144, column: 16, scope: !7043)
!7046 = !DILocation(line: 147, column: 16, scope: !7043)
!7047 = !DILocation(line: 150, column: 1, scope: !7043)
!7048 = distinct !DISubprogram(name: "CachePreInit", scope: !869, file: !869, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !1935)
!7049 = !DILocation(line: 161, column: 22, scope: !7048)
!7050 = !DILocation(line: 164, column: 21, scope: !7048)
!7051 = !DILocation(line: 167, column: 21, scope: !7048)
!7052 = !DILocation(line: 170, column: 29, scope: !7048)
!7053 = !DILocation(line: 171, column: 33, scope: !7048)
!7054 = !DILocation(line: 173, column: 28, scope: !7048)
!7055 = !DILocation(line: 178, column: 30, scope: !7048)
!7056 = !DILocation(line: 192, column: 1, scope: !7048)
!7057 = distinct !DISubprogram(name: "__io_putchar", scope: !1861, file: !1861, line: 75, type: !3316, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !7058)
!7058 = !{!7059}
!7059 = !DILocalVariable(name: "ch", arg: 1, scope: !7057, file: !1861, line: 75, type: !7)
!7060 = !DILocation(line: 0, scope: !7057)
!7061 = !DILocation(line: 80, column: 35, scope: !7057)
!7062 = !DILocation(line: 80, column: 5, scope: !7057)
!7063 = !DILocation(line: 81, column: 12, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7057, file: !1861, line: 81, column: 9)
!7065 = !DILocation(line: 81, column: 9, scope: !7057)
!7066 = !DILocation(line: 82, column: 9, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7064, file: !1861, line: 81, column: 21)
!7068 = !DILocation(line: 83, column: 5, scope: !7067)
!7069 = !DILocation(line: 84, column: 5, scope: !7057)
!7070 = distinct !DISubprogram(name: "system_init", scope: !1861, file: !1861, line: 216, type: !154, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !1935)
!7071 = !DILocation(line: 219, column: 5, scope: !7070)
!7072 = !DILocation(line: 222, column: 5, scope: !7070)
!7073 = !DILocation(line: 230, column: 5, scope: !7070)
!7074 = !DILocation(line: 231, column: 1, scope: !7070)
!7075 = distinct !DISubprogram(name: "SystemClock_Config", scope: !1861, file: !1861, line: 93, type: !154, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !1935)
!7076 = !DILocation(line: 96, column: 5, scope: !7075)
!7077 = !DILocation(line: 99, column: 5, scope: !7075)
!7078 = !DILocation(line: 102, column: 5, scope: !7075)
!7079 = !DILocation(line: 103, column: 1, scope: !7075)
!7080 = distinct !DISubprogram(name: "prvSetupHardware", scope: !1861, file: !1861, line: 152, type: !154, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !1935)
!7081 = !DILocation(line: 155, column: 9, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7080, file: !1861, line: 155, column: 9)
!7083 = !DILocation(line: 163, column: 5, scope: !7080)
!7084 = !DILocation(line: 177, column: 5, scope: !7080)
!7085 = !DILocation(line: 180, column: 5, scope: !7080)
!7086 = !DILocation(line: 181, column: 1, scope: !7080)
!7087 = distinct !DISubprogram(name: "_main_sys_random_init", scope: !1861, file: !1861, line: 188, type: !154, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !7088)
!7088 = !{!7089, !7090}
!7089 = !DILocalVariable(name: "seed", scope: !7087, file: !1861, line: 192, type: !61)
!7090 = !DILocalVariable(name: "s", scope: !7087, file: !1861, line: 193, type: !2488)
!7091 = !DILocation(line: 192, column: 5, scope: !7087)
!7092 = !DILocation(line: 195, column: 9, scope: !7087)
!7093 = !DILocation(line: 0, scope: !7087)
!7094 = !DILocation(line: 197, column: 11, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7087, file: !1861, line: 197, column: 9)
!7096 = !DILocation(line: 197, column: 9, scope: !7087)
!7097 = !DILocation(line: 198, column: 13, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7095, file: !1861, line: 197, column: 34)
!7099 = !DILocation(line: 201, column: 9, scope: !7087)
!7100 = !DILocation(line: 202, column: 29, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !1861, line: 201, column: 34)
!7102 = distinct !DILexicalBlock(scope: !7087, file: !1861, line: 201, column: 9)
!7103 = !DILocation(line: 202, column: 9, scope: !7101)
!7104 = !DILocation(line: 205, column: 9, scope: !7087)
!7105 = !DILocation(line: 206, column: 9, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7107, file: !1861, line: 206, column: 9)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !1861, line: 205, column: 34)
!7108 = distinct !DILexicalBlock(scope: !7087, file: !1861, line: 205, column: 9)
!7109 = !DILocation(line: 207, column: 5, scope: !7107)
!7110 = !DILocation(line: 209, column: 1, scope: !7087)
!7111 = distinct !DISubprogram(name: "cache_enable", scope: !1861, file: !1861, line: 114, type: !7112, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1860, retainedNodes: !7114)
!7112 = !DISubroutineType(types: !7113)
!7113 = !{!527, !5239}
!7114 = !{!7115, !7116, !7117, !7118}
!7115 = !DILocalVariable(name: "cache_size", arg: 1, scope: !7111, file: !1861, line: 114, type: !5239)
!7116 = !DILocalVariable(name: "region", scope: !7111, file: !1861, line: 116, type: !1864)
!7117 = !DILocalVariable(name: "region_number", scope: !7111, file: !1861, line: 116, type: !1864)
!7118 = !DILocalVariable(name: "region_cfg_tbl", scope: !7111, file: !1861, line: 118, type: !7119)
!7119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7120, size: 64, elements: !446)
!7120 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !383, line: 222, baseType: !7121)
!7121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !383, line: 219, size: 64, elements: !7122)
!7122 = !{!7123, !7124}
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !7121, file: !383, line: 220, baseType: !61, size: 32)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !7121, file: !383, line: 221, baseType: !61, size: 32, offset: 32)
!7125 = !DILocation(line: 0, scope: !7111)
!7126 = !DILocation(line: 118, column: 5, scope: !7111)
!7127 = !DILocation(line: 118, column: 31, scope: !7111)
!7128 = !DILocation(line: 132, column: 5, scope: !7111)
!7129 = !DILocation(line: 135, column: 5, scope: !7111)
!7130 = !DILocation(line: 137, column: 42, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !1861, line: 136, column: 73)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !1861, line: 136, column: 5)
!7133 = distinct !DILexicalBlock(scope: !7111, file: !1861, line: 136, column: 5)
!7134 = !DILocation(line: 137, column: 9, scope: !7131)
!7135 = !DILocation(line: 138, column: 9, scope: !7131)
!7136 = !DILocation(line: 140, column: 5, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7111, file: !1861, line: 140, column: 5)
!7138 = !DILocation(line: 141, column: 9, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !1861, line: 140, column: 53)
!7140 = distinct !DILexicalBlock(scope: !7137, file: !1861, line: 140, column: 5)
!7141 = !DILocation(line: 140, column: 49, scope: !7140)
!7142 = !DILocation(line: 140, column: 19, scope: !7140)
!7143 = distinct !{!7143, !7136, !7144}
!7144 = !DILocation(line: 142, column: 5, scope: !7137)
!7145 = !DILocation(line: 143, column: 5, scope: !7111)
!7146 = !DILocation(line: 145, column: 1, scope: !7111)
!7147 = distinct !DISubprogram(name: "_close", scope: !929, file: !929, line: 45, type: !3316, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !7148)
!7148 = !{!7149}
!7149 = !DILocalVariable(name: "file", arg: 1, scope: !7147, file: !929, line: 45, type: !7)
!7150 = !DILocation(line: 0, scope: !7147)
!7151 = !DILocation(line: 47, column: 5, scope: !7147)
!7152 = distinct !DISubprogram(name: "_fstat", scope: !929, file: !929, line: 50, type: !7153, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !7201)
!7153 = !DISubroutineType(types: !7154)
!7154 = !{!7, !7, !7155}
!7155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7156, size: 32)
!7156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !7157, line: 27, size: 704, elements: !7158)
!7157 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!7158 = !{!7159, !7162, !7165, !7168, !7171, !7174, !7177, !7178, !7181, !7191, !7192, !7193, !7196, !7199}
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !7156, file: !7157, line: 29, baseType: !7160, size: 16)
!7160 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !933, line: 161, baseType: !7161)
!7161 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !971, line: 56, baseType: !948)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !7156, file: !7157, line: 30, baseType: !7163, size: 16, offset: 16)
!7163 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !933, line: 139, baseType: !7164)
!7164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !971, line: 75, baseType: !322)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !7156, file: !7157, line: 31, baseType: !7166, size: 32, offset: 32)
!7166 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !933, line: 189, baseType: !7167)
!7167 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !971, line: 90, baseType: !62)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !7156, file: !7157, line: 32, baseType: !7169, size: 16, offset: 64)
!7169 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !933, line: 194, baseType: !7170)
!7170 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !971, line: 209, baseType: !322)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !7156, file: !7157, line: 33, baseType: !7172, size: 16, offset: 80)
!7172 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !933, line: 165, baseType: !7173)
!7173 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !971, line: 60, baseType: !322)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !7156, file: !7157, line: 34, baseType: !7175, size: 16, offset: 96)
!7175 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !933, line: 169, baseType: !7176)
!7176 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !971, line: 63, baseType: !322)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !7156, file: !7157, line: 35, baseType: !7160, size: 16, offset: 112)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !7156, file: !7157, line: 36, baseType: !7179, size: 32, offset: 128)
!7179 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !933, line: 157, baseType: !7180)
!7180 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !971, line: 102, baseType: !988)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !7156, file: !7157, line: 42, baseType: !7182, size: 128, offset: 192)
!7182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !7183, line: 47, size: 128, elements: !7184)
!7183 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!7184 = !{!7185, !7190}
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !7182, file: !7183, line: 48, baseType: !7186, size: 64)
!7186 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !7187, line: 42, baseType: !7188)
!7187 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!7188 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !57, line: 200, baseType: !7189)
!7189 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !7182, file: !7183, line: 49, baseType: !174, size: 32, offset: 64)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !7156, file: !7157, line: 43, baseType: !7182, size: 128, offset: 320)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !7156, file: !7157, line: 44, baseType: !7182, size: 128, offset: 448)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !7156, file: !7157, line: 45, baseType: !7194, size: 32, offset: 576)
!7194 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !933, line: 102, baseType: !7195)
!7195 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !971, line: 34, baseType: !174)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !7156, file: !7157, line: 46, baseType: !7197, size: 32, offset: 608)
!7197 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !933, line: 97, baseType: !7198)
!7198 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !971, line: 30, baseType: !174)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !7156, file: !7157, line: 48, baseType: !7200, size: 64, offset: 640)
!7200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !333)
!7201 = !{!7202, !7203}
!7202 = !DILocalVariable(name: "file", arg: 1, scope: !7152, file: !929, line: 50, type: !7)
!7203 = !DILocalVariable(name: "st", arg: 2, scope: !7152, file: !929, line: 50, type: !7155)
!7204 = !DILocation(line: 0, scope: !7152)
!7205 = !DILocation(line: 52, column: 5, scope: !7152)
!7206 = distinct !DISubprogram(name: "_isatty", scope: !929, file: !929, line: 56, type: !3316, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !7207)
!7207 = !{!7208}
!7208 = !DILocalVariable(name: "file", arg: 1, scope: !7206, file: !929, line: 56, type: !7)
!7209 = !DILocation(line: 0, scope: !7206)
!7210 = !DILocation(line: 58, column: 5, scope: !7206)
!7211 = distinct !DISubprogram(name: "_lseek", scope: !929, file: !929, line: 61, type: !7212, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !7214)
!7212 = !DISubroutineType(types: !7213)
!7213 = !{!7, !7, !7, !7}
!7214 = !{!7215, !7216, !7217}
!7215 = !DILocalVariable(name: "file", arg: 1, scope: !7211, file: !929, line: 61, type: !7)
!7216 = !DILocalVariable(name: "ptr", arg: 2, scope: !7211, file: !929, line: 61, type: !7)
!7217 = !DILocalVariable(name: "dir", arg: 3, scope: !7211, file: !929, line: 61, type: !7)
!7218 = !DILocation(line: 0, scope: !7211)
!7219 = !DILocation(line: 63, column: 5, scope: !7211)
!7220 = distinct !DISubprogram(name: "_open", scope: !929, file: !929, line: 66, type: !7221, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !7223)
!7221 = !DISubroutineType(types: !7222)
!7222 = !{!7, !331, !7, !7}
!7223 = !{!7224, !7225, !7226}
!7224 = !DILocalVariable(name: "name", arg: 1, scope: !7220, file: !929, line: 66, type: !331)
!7225 = !DILocalVariable(name: "flags", arg: 2, scope: !7220, file: !929, line: 66, type: !7)
!7226 = !DILocalVariable(name: "mode", arg: 3, scope: !7220, file: !929, line: 66, type: !7)
!7227 = !DILocation(line: 0, scope: !7220)
!7228 = !DILocation(line: 68, column: 5, scope: !7220)
!7229 = distinct !DISubprogram(name: "_read", scope: !929, file: !929, line: 71, type: !7230, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !7232)
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!7, !7, !201, !7}
!7232 = !{!7233, !7234, !7235}
!7233 = !DILocalVariable(name: "file", arg: 1, scope: !7229, file: !929, line: 71, type: !7)
!7234 = !DILocalVariable(name: "ptr", arg: 2, scope: !7229, file: !929, line: 71, type: !201)
!7235 = !DILocalVariable(name: "len", arg: 3, scope: !7229, file: !929, line: 71, type: !7)
!7236 = !DILocation(line: 0, scope: !7229)
!7237 = !DILocation(line: 73, column: 5, scope: !7229)
!7238 = distinct !DISubprogram(name: "_write", scope: !929, file: !929, line: 86, type: !7230, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !7239)
!7239 = !{!7240, !7241, !7242, !7243}
!7240 = !DILocalVariable(name: "file", arg: 1, scope: !7238, file: !929, line: 86, type: !7)
!7241 = !DILocalVariable(name: "ptr", arg: 2, scope: !7238, file: !929, line: 86, type: !201)
!7242 = !DILocalVariable(name: "len", arg: 3, scope: !7238, file: !929, line: 86, type: !7)
!7243 = !DILocalVariable(name: "i", scope: !7238, file: !929, line: 88, type: !7)
!7244 = !DILocation(line: 0, scope: !7238)
!7245 = !DILocation(line: 90, column: 19, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7247, file: !929, line: 90, column: 5)
!7247 = distinct !DILexicalBlock(scope: !7238, file: !929, line: 90, column: 5)
!7248 = !DILocation(line: 90, column: 5, scope: !7247)
!7249 = !DILocation(line: 91, column: 26, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7246, file: !929, line: 90, column: 31)
!7251 = !DILocation(line: 91, column: 22, scope: !7250)
!7252 = !DILocation(line: 91, column: 9, scope: !7250)
!7253 = !DILocation(line: 90, column: 27, scope: !7246)
!7254 = distinct !{!7254, !7248, !7255}
!7255 = !DILocation(line: 92, column: 5, scope: !7247)
!7256 = !DILocation(line: 94, column: 5, scope: !7238)
!7257 = !DILocation(line: 0, scope: !928)
!7258 = !DILocation(line: 105, column: 5, scope: !928)
!7259 = !{i64 3455}
!7260 = !DILocation(line: 107, column: 14, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !928, file: !929, line: 107, column: 9)
!7262 = !DILocation(line: 107, column: 11, scope: !7261)
!7263 = !DILocation(line: 107, column: 9, scope: !928)
!7264 = !DILocation(line: 113, column: 32, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !928, file: !929, line: 113, column: 9)
!7266 = !DILocation(line: 113, column: 15, scope: !7265)
!7267 = !DILocation(line: 124, column: 1, scope: !928)
!7268 = !DILocation(line: 113, column: 9, scope: !928)
!7269 = distinct !DISubprogram(name: "_exit", scope: !929, file: !929, line: 126, type: !1071, scopeLine: 127, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !7270)
!7270 = !{!7271}
!7271 = !DILocalVariable(name: "__status", arg: 1, scope: !7269, file: !929, line: 126, type: !7)
!7272 = !DILocation(line: 0, scope: !7269)
!7273 = !DILocation(line: 128, column: 5, scope: !7269)
!7274 = !DILocation(line: 129, column: 5, scope: !7269)
!7275 = distinct !{!7275, !7274, !7276}
!7276 = !DILocation(line: 131, column: 5, scope: !7269)
!7277 = distinct !DISubprogram(name: "_kill", scope: !929, file: !929, line: 135, type: !7278, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !7280)
!7278 = !DISubroutineType(types: !7279)
!7279 = !{!7, !7, !7}
!7280 = !{!7281, !7282}
!7281 = !DILocalVariable(name: "pid", arg: 1, scope: !7277, file: !929, line: 135, type: !7)
!7282 = !DILocalVariable(name: "sig", arg: 2, scope: !7277, file: !929, line: 135, type: !7)
!7283 = !DILocation(line: 0, scope: !7277)
!7284 = !DILocation(line: 137, column: 5, scope: !7277)
!7285 = !DILocation(line: 138, column: 5, scope: !7277)
!7286 = distinct !DISubprogram(name: "_getpid", scope: !929, file: !929, line: 142, type: !7287, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1119, retainedNodes: !1935)
!7287 = !DISubroutineType(types: !7288)
!7288 = !{!7289}
!7289 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !933, line: 174, baseType: !7290)
!7290 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !971, line: 52, baseType: !7)
!7291 = !DILocation(line: 144, column: 5, scope: !7286)
!7292 = !DILocation(line: 145, column: 5, scope: !7286)
!7293 = distinct !DISubprogram(name: "xTaskGenericCreate", scope: !1131, file: !1131, line: 547, type: !7294, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7312)
!7294 = !DISubroutineType(types: !7295)
!7295 = !{!1160, !7296, !330, !7298, !7299, !1154, !7300, !7302, !7303}
!7296 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskFunction_t", file: !7297, line: 77, baseType: !639)
!7297 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/projdefs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/templates/freertos_create_thread/GCC")
!7298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1155)
!7299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !51)
!7300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7301)
!7301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!7302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!7303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7304)
!7304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7305, size: 32)
!7305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7306)
!7306 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoryRegion_t", file: !1139, line: 148, baseType: !7307)
!7307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMEMORY_REGION", file: !1139, line: 143, size: 96, elements: !7308)
!7308 = !{!7309, !7310, !7311}
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "pvBaseAddress", scope: !7307, file: !1139, line: 145, baseType: !51, size: 32)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "ulLengthInBytes", scope: !7307, file: !1139, line: 146, baseType: !61, size: 32, offset: 32)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "ulParameters", scope: !7307, file: !1139, line: 147, baseType: !61, size: 32, offset: 64)
!7312 = !{!7313, !7314, !7315, !7316, !7317, !7318, !7319, !7320, !7321, !7322, !7323}
!7313 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !7293, file: !1131, line: 547, type: !7296)
!7314 = !DILocalVariable(name: "pcName", arg: 2, scope: !7293, file: !1131, line: 547, type: !330)
!7315 = !DILocalVariable(name: "usStackDepth", arg: 3, scope: !7293, file: !1131, line: 547, type: !7298)
!7316 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !7293, file: !1131, line: 547, type: !7299)
!7317 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !7293, file: !1131, line: 547, type: !1154)
!7318 = !DILocalVariable(name: "pxCreatedTask", arg: 6, scope: !7293, file: !1131, line: 547, type: !7300)
!7319 = !DILocalVariable(name: "puxStackBuffer", arg: 7, scope: !7293, file: !1131, line: 547, type: !7302)
!7320 = !DILocalVariable(name: "xRegions", arg: 8, scope: !7293, file: !1131, line: 547, type: !7303)
!7321 = !DILocalVariable(name: "xReturn", scope: !7293, file: !1131, line: 549, type: !1160)
!7322 = !DILocalVariable(name: "pxNewTCB", scope: !7293, file: !1131, line: 550, type: !1161)
!7323 = !DILocalVariable(name: "pxTopOfStack", scope: !7293, file: !1131, line: 551, type: !1157)
!7324 = !DILocation(line: 0, scope: !7293)
!7325 = !DILocation(line: 553, column: 2, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7293, file: !1131, line: 553, column: 2)
!7327 = !DILocation(line: 553, column: 2, scope: !7293)
!7328 = !DILocation(line: 553, column: 2, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7326, file: !1131, line: 553, column: 2)
!7330 = !DILocation(line: 554, column: 2, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7293, file: !1131, line: 554, column: 2)
!7332 = !DILocation(line: 554, column: 2, scope: !7293)
!7333 = !DILocation(line: 554, column: 2, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7331, file: !1131, line: 554, column: 2)
!7335 = !DILocation(line: 558, column: 13, scope: !7293)
!7336 = !DILocation(line: 560, column: 15, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7293, file: !1131, line: 560, column: 6)
!7338 = !DILocation(line: 560, column: 6, scope: !7293)
!7339 = !DILocation(line: 596, column: 29, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7341, file: !1131, line: 595, column: 3)
!7341 = distinct !DILexicalBlock(scope: !7337, file: !1131, line: 561, column: 2)
!7342 = !DILocation(line: 596, column: 41, scope: !7340)
!7343 = !DILocation(line: 596, column: 54, scope: !7340)
!7344 = !DILocation(line: 596, column: 37, scope: !7340)
!7345 = !DILocation(line: 597, column: 41, scope: !7340)
!7346 = !DILocation(line: 597, column: 82, scope: !7340)
!7347 = !DILocation(line: 597, column: 19, scope: !7340)
!7348 = !DILocation(line: 617, column: 3, scope: !7341)
!7349 = !DILocation(line: 629, column: 29, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7341, file: !1131, line: 628, column: 3)
!7351 = !DILocation(line: 629, column: 14, scope: !7350)
!7352 = !DILocation(line: 629, column: 27, scope: !7350)
!7353 = !DILocation(line: 633, column: 32, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7341, file: !1131, line: 633, column: 7)
!7355 = !DILocation(line: 633, column: 7, scope: !7341)
!7356 = !DILocation(line: 638, column: 19, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7354, file: !1131, line: 634, column: 3)
!7358 = !DILocation(line: 639, column: 3, scope: !7357)
!7359 = !DILocation(line: 647, column: 3, scope: !7341)
!7360 = !DILocation(line: 649, column: 26, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7341, file: !1131, line: 648, column: 3)
!7362 = !DILocation(line: 650, column: 8, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7361, file: !1131, line: 650, column: 8)
!7364 = !DILocation(line: 650, column: 21, scope: !7363)
!7365 = !DILocation(line: 650, column: 8, scope: !7361)
!7366 = !DILocation(line: 654, column: 18, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7363, file: !1131, line: 651, column: 4)
!7368 = !DILocation(line: 656, column: 9, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7367, file: !1131, line: 656, column: 9)
!7370 = !DILocation(line: 656, column: 32, scope: !7369)
!7371 = !DILocation(line: 656, column: 9, scope: !7367)
!7372 = !DILocation(line: 661, column: 6, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7369, file: !1131, line: 657, column: 5)
!7374 = !DILocation(line: 662, column: 5, scope: !7373)
!7375 = !DILocation(line: 673, column: 9, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7377, file: !1131, line: 673, column: 9)
!7377 = distinct !DILexicalBlock(scope: !7363, file: !1131, line: 669, column: 4)
!7378 = !DILocation(line: 673, column: 27, scope: !7376)
!7379 = !DILocation(line: 673, column: 9, scope: !7377)
!7380 = !DILocation(line: 675, column: 10, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7382, file: !1131, line: 675, column: 10)
!7382 = distinct !DILexicalBlock(scope: !7376, file: !1131, line: 674, column: 5)
!7383 = !DILocation(line: 675, column: 24, scope: !7381)
!7384 = !DILocation(line: 675, column: 35, scope: !7381)
!7385 = !DILocation(line: 675, column: 10, scope: !7382)
!7386 = !DILocation(line: 677, column: 20, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7381, file: !1131, line: 676, column: 6)
!7388 = !DILocation(line: 678, column: 6, scope: !7387)
!7389 = !DILocation(line: 690, column: 16, scope: !7361)
!7390 = !DILocation(line: 695, column: 15, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7361, file: !1131, line: 693, column: 4)
!7392 = !DILocation(line: 695, column: 27, scope: !7391)
!7393 = !DILocation(line: 700, column: 4, scope: !7361)
!7394 = !DILocation(line: 705, column: 3, scope: !7341)
!7395 = !DILocation(line: 715, column: 7, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !1131, line: 715, column: 7)
!7397 = distinct !DILexicalBlock(scope: !7398, file: !1131, line: 714, column: 2)
!7398 = distinct !DILexicalBlock(scope: !7293, file: !1131, line: 713, column: 6)
!7399 = !DILocation(line: 715, column: 25, scope: !7396)
!7400 = !DILocation(line: 715, column: 7, scope: !7397)
!7401 = !DILocation(line: 719, column: 8, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !1131, line: 719, column: 8)
!7403 = distinct !DILexicalBlock(scope: !7396, file: !1131, line: 716, column: 3)
!7404 = !DILocation(line: 719, column: 22, scope: !7402)
!7405 = !DILocation(line: 719, column: 33, scope: !7402)
!7406 = !DILocation(line: 719, column: 8, scope: !7403)
!7407 = !DILocation(line: 721, column: 5, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7409, file: !1131, line: 721, column: 5)
!7409 = distinct !DILexicalBlock(scope: !7402, file: !1131, line: 720, column: 4)
!7410 = !{i64 2148466183}
!7411 = !{i64 2148466223}
!7412 = !DILocation(line: 722, column: 4, scope: !7409)
!7413 = !DILocation(line: 734, column: 2, scope: !7293)
!7414 = distinct !DISubprogram(name: "prvAllocateTCBAndStack", scope: !1131, file: !1131, line: 3021, type: !7415, scopeLine: 3022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7417)
!7415 = !DISubroutineType(types: !7416)
!7416 = !{!1161, !7298, !7302}
!7417 = !{!7418, !7419, !7420, !7421}
!7418 = !DILocalVariable(name: "usStackDepth", arg: 1, scope: !7414, file: !1131, line: 3021, type: !7298)
!7419 = !DILocalVariable(name: "puxStackBuffer", arg: 2, scope: !7414, file: !1131, line: 3021, type: !7302)
!7420 = !DILocalVariable(name: "pxNewTCB", scope: !7414, file: !1131, line: 3023, type: !1161)
!7421 = !DILocalVariable(name: "pxStack", scope: !7422, file: !1131, line: 3051, type: !1157)
!7422 = distinct !DILexicalBlock(scope: !7414, file: !1131, line: 3050, column: 2)
!7423 = !DILocation(line: 0, scope: !7414)
!7424 = !DILocation(line: 3054, column: 31, scope: !7422)
!7425 = !DILocation(line: 0, scope: !7422)
!7426 = !DILocation(line: 3056, column: 15, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7422, file: !1131, line: 3056, column: 7)
!7428 = !DILocation(line: 3056, column: 7, scope: !7422)
!7429 = !DILocation(line: 3060, column: 27, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7427, file: !1131, line: 3057, column: 3)
!7431 = !DILocation(line: 3062, column: 17, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7430, file: !1131, line: 3062, column: 8)
!7433 = !DILocation(line: 3062, column: 8, scope: !7430)
!7434 = !DILocation(line: 3071, column: 5, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7432, file: !1131, line: 3068, column: 4)
!7436 = !DILocation(line: 3065, column: 15, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7432, file: !1131, line: 3063, column: 4)
!7438 = !DILocation(line: 3065, column: 23, scope: !7437)
!7439 = !DILocation(line: 3060, column: 15, scope: !7430)
!7440 = !DILocation(line: 3087, column: 68, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7442, file: !1131, line: 3085, column: 3)
!7442 = distinct !DILexicalBlock(scope: !7443, file: !1131, line: 3082, column: 2)
!7443 = distinct !DILexicalBlock(scope: !7414, file: !1131, line: 3081, column: 6)
!7444 = !DILocation(line: 3087, column: 92, scope: !7441)
!7445 = !DILocation(line: 3087, column: 13, scope: !7441)
!7446 = !DILocation(line: 3090, column: 2, scope: !7442)
!7447 = !DILocation(line: 3092, column: 2, scope: !7414)
!7448 = distinct !DISubprogram(name: "prvInitialiseTCBVariables", scope: !1131, file: !1131, line: 2802, type: !7449, scopeLine: 2803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7452)
!7449 = !DISubroutineType(types: !7450)
!7450 = !{null, !7451, !330, !1154, !7303, !7298}
!7451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1161)
!7452 = !{!7453, !7454, !7455, !7456, !7457, !7458}
!7453 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !7448, file: !1131, line: 2802, type: !7451)
!7454 = !DILocalVariable(name: "pcName", arg: 2, scope: !7448, file: !1131, line: 2802, type: !330)
!7455 = !DILocalVariable(name: "uxPriority", arg: 3, scope: !7448, file: !1131, line: 2802, type: !1154)
!7456 = !DILocalVariable(name: "xRegions", arg: 4, scope: !7448, file: !1131, line: 2802, type: !7303)
!7457 = !DILocalVariable(name: "usStackDepth", arg: 5, scope: !7448, file: !1131, line: 2802, type: !7298)
!7458 = !DILocalVariable(name: "x", scope: !7448, file: !1131, line: 2804, type: !1154)
!7459 = !DILocation(line: 0, scope: !7448)
!7460 = !DILocation(line: 2807, column: 2, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7448, file: !1131, line: 2807, column: 2)
!7462 = !DILocation(line: 2809, column: 28, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7464, file: !1131, line: 2808, column: 2)
!7464 = distinct !DILexicalBlock(scope: !7461, file: !1131, line: 2807, column: 2)
!7465 = !DILocation(line: 2809, column: 3, scope: !7463)
!7466 = !DILocation(line: 2809, column: 26, scope: !7463)
!7467 = !DILocation(line: 2814, column: 7, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7463, file: !1131, line: 2814, column: 7)
!7469 = !DILocation(line: 2814, column: 19, scope: !7468)
!7470 = !DILocation(line: 2814, column: 7, scope: !7463)
!7471 = distinct !{!7471, !7460, !7472}
!7472 = !DILocation(line: 2822, column: 2, scope: !7461)
!7473 = !DILocation(line: 2826, column: 2, scope: !7448)
!7474 = !DILocation(line: 2826, column: 51, scope: !7448)
!7475 = !DILocation(line: 2830, column: 6, scope: !7448)
!7476 = !DILocation(line: 2839, column: 9, scope: !7448)
!7477 = !DILocation(line: 2839, column: 20, scope: !7448)
!7478 = !DILocation(line: 2842, column: 10, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7448, file: !1131, line: 2841, column: 2)
!7480 = !DILocation(line: 2842, column: 25, scope: !7479)
!7481 = !DILocation(line: 2843, column: 10, scope: !7479)
!7482 = !DILocation(line: 2843, column: 24, scope: !7479)
!7483 = !DILocation(line: 2847, column: 33, scope: !7448)
!7484 = !DILocation(line: 2847, column: 2, scope: !7448)
!7485 = !DILocation(line: 2848, column: 33, scope: !7448)
!7486 = !DILocation(line: 2848, column: 2, scope: !7448)
!7487 = !DILocation(line: 2852, column: 2, scope: !7448)
!7488 = !DILocation(line: 2855, column: 2, scope: !7448)
!7489 = !DILocation(line: 2856, column: 2, scope: !7448)
!7490 = !DILocation(line: 2889, column: 10, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7448, file: !1131, line: 2888, column: 2)
!7492 = !DILocation(line: 2889, column: 26, scope: !7491)
!7493 = !DILocation(line: 2890, column: 10, scope: !7491)
!7494 = !DILocation(line: 2890, column: 23, scope: !7491)
!7495 = !DILocation(line: 2900, column: 1, scope: !7448)
!7496 = distinct !DISubprogram(name: "prvInitialiseTaskLists", scope: !1131, file: !1131, line: 2918, type: !154, scopeLine: 2919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7497)
!7497 = !{!7498}
!7498 = !DILocalVariable(name: "uxPriority", scope: !7496, file: !1131, line: 2920, type: !1154)
!7499 = !DILocation(line: 0, scope: !7496)
!7500 = !DILocation(line: 2922, column: 2, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7496, file: !1131, line: 2922, column: 2)
!7502 = !DILocation(line: 2924, column: 23, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7504, file: !1131, line: 2923, column: 2)
!7504 = distinct !DILexicalBlock(scope: !7501, file: !1131, line: 2922, column: 2)
!7505 = !DILocation(line: 2924, column: 3, scope: !7503)
!7506 = !DILocation(line: 2922, column: 101, scope: !7504)
!7507 = !DILocation(line: 2922, column: 51, scope: !7504)
!7508 = distinct !{!7508, !7500, !7509}
!7509 = !DILocation(line: 2925, column: 2, scope: !7501)
!7510 = !DILocation(line: 2927, column: 2, scope: !7496)
!7511 = !DILocation(line: 2928, column: 2, scope: !7496)
!7512 = !DILocation(line: 2929, column: 2, scope: !7496)
!7513 = !DILocation(line: 2933, column: 3, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7496, file: !1131, line: 2932, column: 2)
!7515 = !DILocation(line: 2939, column: 3, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7496, file: !1131, line: 2938, column: 2)
!7517 = !DILocation(line: 2945, column: 20, scope: !7496)
!7518 = !DILocation(line: 2946, column: 28, scope: !7496)
!7519 = !DILocation(line: 2947, column: 1, scope: !7496)
!7520 = distinct !DISubprogram(name: "vTaskDelete", scope: !1131, file: !1131, line: 740, type: !7521, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7523)
!7521 = !DISubroutineType(types: !7522)
!7522 = !{null, !1159}
!7523 = !{!7524, !7525}
!7524 = !DILocalVariable(name: "xTaskToDelete", arg: 1, scope: !7520, file: !1131, line: 740, type: !1159)
!7525 = !DILocalVariable(name: "pxTCB", scope: !7520, file: !1131, line: 742, type: !1161)
!7526 = !DILocation(line: 0, scope: !7520)
!7527 = !DILocation(line: 744, column: 3, scope: !7520)
!7528 = !DILocation(line: 748, column: 12, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7520, file: !1131, line: 745, column: 3)
!7530 = !DILocation(line: 754, column: 32, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7529, file: !1131, line: 754, column: 8)
!7532 = !DILocation(line: 754, column: 8, scope: !7531)
!7533 = !DILocation(line: 754, column: 53, scope: !7531)
!7534 = !DILocation(line: 754, column: 8, scope: !7529)
!7535 = !DILocation(line: 756, column: 5, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7537, file: !1131, line: 756, column: 5)
!7537 = distinct !DILexicalBlock(scope: !7538, file: !1131, line: 756, column: 5)
!7538 = distinct !DILexicalBlock(scope: !7531, file: !1131, line: 755, column: 4)
!7539 = !DILocation(line: 756, column: 5, scope: !7537)
!7540 = !DILocation(line: 756, column: 5, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7536, file: !1131, line: 756, column: 5)
!7542 = !DILocation(line: 764, column: 8, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7529, file: !1131, line: 764, column: 8)
!7544 = !DILocation(line: 764, column: 62, scope: !7543)
!7545 = !DILocation(line: 764, column: 8, scope: !7529)
!7546 = !DILocation(line: 766, column: 14, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7543, file: !1131, line: 765, column: 4)
!7548 = !DILocation(line: 767, column: 4, scope: !7547)
!7549 = !DILocation(line: 773, column: 4, scope: !7529)
!7550 = !DILocation(line: 778, column: 4, scope: !7529)
!7551 = !DILocation(line: 782, column: 16, scope: !7529)
!7552 = !DILocation(line: 786, column: 3, scope: !7520)
!7553 = !DILocation(line: 790, column: 7, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7520, file: !1131, line: 790, column: 7)
!7555 = !DILocation(line: 790, column: 25, scope: !7554)
!7556 = !DILocation(line: 790, column: 7, scope: !7520)
!7557 = !DILocation(line: 792, column: 17, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7559, file: !1131, line: 792, column: 8)
!7559 = distinct !DILexicalBlock(scope: !7554, file: !1131, line: 791, column: 3)
!7560 = !DILocation(line: 792, column: 14, scope: !7558)
!7561 = !DILocation(line: 792, column: 8, scope: !7559)
!7562 = !DILocation(line: 794, column: 5, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !1131, line: 794, column: 5)
!7564 = distinct !DILexicalBlock(scope: !7558, file: !1131, line: 793, column: 4)
!7565 = !DILocation(line: 794, column: 5, scope: !7564)
!7566 = !DILocation(line: 794, column: 5, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7563, file: !1131, line: 794, column: 5)
!7568 = !DILocation(line: 802, column: 5, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7564, file: !1131, line: 802, column: 5)
!7570 = !{i64 2148467589}
!7571 = !{i64 2148467629}
!7572 = !DILocation(line: 803, column: 4, scope: !7564)
!7573 = !DILocation(line: 808, column: 5, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7558, file: !1131, line: 805, column: 4)
!7575 = !DILocation(line: 810, column: 6, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7574, file: !1131, line: 809, column: 5)
!7577 = !DILocation(line: 812, column: 5, scope: !7574)
!7578 = !DILocation(line: 815, column: 2, scope: !7520)
!7579 = distinct !DISubprogram(name: "prvResetNextTaskUnblockTime", scope: !1131, file: !1131, line: 3267, type: !154, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7580)
!7580 = !{!7581}
!7581 = !DILocalVariable(name: "pxTCB", scope: !7579, file: !1131, line: 3269, type: !1161)
!7582 = !DILocation(line: 3271, column: 6, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7579, file: !1131, line: 3271, column: 6)
!7584 = !DILocation(line: 3271, column: 6, scope: !7579)
!7585 = !DILocation(line: 3286, column: 27, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7583, file: !1131, line: 3281, column: 2)
!7587 = !DILocation(line: 0, scope: !7579)
!7588 = !DILocation(line: 3287, column: 26, scope: !7586)
!7589 = !DILocation(line: 0, scope: !7583)
!7590 = !DILocation(line: 3289, column: 1, scope: !7579)
!7591 = distinct !DISubprogram(name: "vTaskDelayUntil", scope: !1131, file: !1131, line: 822, type: !7592, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7597)
!7592 = !DISubroutineType(types: !7593)
!7593 = !{null, !7594, !7596}
!7594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7595)
!7595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 32)
!7596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!7597 = !{!7598, !7599, !7600, !7601, !7602, !7603}
!7598 = !DILocalVariable(name: "pxPreviousWakeTime", arg: 1, scope: !7591, file: !1131, line: 822, type: !7594)
!7599 = !DILocalVariable(name: "xTimeIncrement", arg: 2, scope: !7591, file: !1131, line: 822, type: !7596)
!7600 = !DILocalVariable(name: "xTimeToWake", scope: !7591, file: !1131, line: 824, type: !855)
!7601 = !DILocalVariable(name: "xAlreadyYielded", scope: !7591, file: !1131, line: 825, type: !1160)
!7602 = !DILocalVariable(name: "xShouldDelay", scope: !7591, file: !1131, line: 825, type: !1160)
!7603 = !DILocalVariable(name: "xConstTickCount", scope: !7604, file: !1131, line: 835, type: !7596)
!7604 = distinct !DILexicalBlock(scope: !7591, file: !1131, line: 832, column: 3)
!7605 = !DILocation(line: 0, scope: !7591)
!7606 = !DILocation(line: 827, column: 3, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7591, file: !1131, line: 827, column: 3)
!7608 = !DILocation(line: 827, column: 3, scope: !7591)
!7609 = !DILocation(line: 827, column: 3, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7607, file: !1131, line: 827, column: 3)
!7611 = !DILocation(line: 828, column: 3, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7591, file: !1131, line: 828, column: 3)
!7613 = !DILocation(line: 828, column: 3, scope: !7591)
!7614 = !DILocation(line: 828, column: 3, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7612, file: !1131, line: 828, column: 3)
!7616 = !DILocation(line: 829, column: 3, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7591, file: !1131, line: 829, column: 3)
!7618 = !DILocation(line: 829, column: 3, scope: !7591)
!7619 = !DILocation(line: 829, column: 3, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7617, file: !1131, line: 829, column: 3)
!7621 = !DILocation(line: 831, column: 3, scope: !7591)
!7622 = !DILocation(line: 835, column: 39, scope: !7604)
!7623 = !DILocation(line: 0, scope: !7604)
!7624 = !DILocation(line: 838, column: 18, scope: !7604)
!7625 = !DILocation(line: 838, column: 38, scope: !7604)
!7626 = !DILocation(line: 840, column: 24, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7604, file: !1131, line: 840, column: 8)
!7628 = !DILocation(line: 0, scope: !7627)
!7629 = !DILocation(line: 840, column: 8, scope: !7604)
!7630 = !DILocation(line: 847, column: 47, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !1131, line: 847, column: 9)
!7632 = distinct !DILexicalBlock(scope: !7627, file: !1131, line: 841, column: 4)
!7633 = !DILocation(line: 861, column: 47, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7635, file: !1131, line: 861, column: 9)
!7635 = distinct !DILexicalBlock(scope: !7627, file: !1131, line: 857, column: 4)
!7636 = !DILocation(line: 872, column: 24, scope: !7604)
!7637 = !DILocation(line: 874, column: 8, scope: !7604)
!7638 = !DILocation(line: 880, column: 26, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !1131, line: 880, column: 9)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !1131, line: 875, column: 4)
!7641 = distinct !DILexicalBlock(scope: !7604, file: !1131, line: 874, column: 8)
!7642 = !DILocation(line: 880, column: 40, scope: !7639)
!7643 = !DILocation(line: 880, column: 9, scope: !7639)
!7644 = !DILocation(line: 880, column: 61, scope: !7639)
!7645 = !DILocation(line: 880, column: 9, scope: !7640)
!7646 = !DILocation(line: 885, column: 6, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7639, file: !1131, line: 881, column: 5)
!7648 = !DILocation(line: 886, column: 5, scope: !7647)
!7649 = !DILocation(line: 892, column: 5, scope: !7640)
!7650 = !DILocation(line: 893, column: 4, scope: !7640)
!7651 = !DILocation(line: 899, column: 21, scope: !7591)
!7652 = !DILocation(line: 903, column: 23, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7591, file: !1131, line: 903, column: 7)
!7654 = !DILocation(line: 903, column: 7, scope: !7591)
!7655 = !DILocation(line: 905, column: 4, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7657, file: !1131, line: 905, column: 4)
!7657 = distinct !DILexicalBlock(scope: !7653, file: !1131, line: 904, column: 3)
!7658 = !{i64 2148468827}
!7659 = !{i64 2148468867}
!7660 = !DILocation(line: 906, column: 3, scope: !7657)
!7661 = !DILocation(line: 911, column: 2, scope: !7591)
!7662 = distinct !DISubprogram(name: "vTaskSuspendAll", scope: !1131, file: !1131, line: 1628, type: !154, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !1935)
!7663 = !DILocation(line: 1634, column: 2, scope: !7662)
!7664 = !DILocation(line: 1635, column: 1, scope: !7662)
!7665 = distinct !DISubprogram(name: "prvAddCurrentTaskToDelayedList", scope: !1131, file: !1131, line: 2991, type: !7666, scopeLine: 2992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7668)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{null, !7596}
!7668 = !{!7669}
!7669 = !DILocalVariable(name: "xTimeToWake", arg: 1, scope: !7665, file: !1131, line: 2991, type: !7596)
!7670 = !DILocation(line: 0, scope: !7665)
!7671 = !DILocation(line: 2994, column: 2, scope: !7665)
!7672 = !DILocation(line: 2996, column: 20, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7665, file: !1131, line: 2996, column: 6)
!7674 = !DILocation(line: 2996, column: 18, scope: !7673)
!7675 = !DILocation(line: 2996, column: 6, scope: !7665)
!7676 = !DILocation(line: 2999, column: 16, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7673, file: !1131, line: 2997, column: 2)
!7678 = !DILocation(line: 2999, column: 46, scope: !7677)
!7679 = !DILocation(line: 2999, column: 60, scope: !7677)
!7680 = !DILocation(line: 2999, column: 3, scope: !7677)
!7681 = !DILocation(line: 3000, column: 2, scope: !7677)
!7682 = !DILocation(line: 3004, column: 16, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7673, file: !1131, line: 3002, column: 2)
!7684 = !DILocation(line: 3004, column: 38, scope: !7683)
!7685 = !DILocation(line: 3004, column: 52, scope: !7683)
!7686 = !DILocation(line: 3004, column: 3, scope: !7683)
!7687 = !DILocation(line: 3009, column: 21, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7683, file: !1131, line: 3009, column: 7)
!7689 = !DILocation(line: 3009, column: 19, scope: !7688)
!7690 = !DILocation(line: 3009, column: 7, scope: !7683)
!7691 = !DILocation(line: 3011, column: 25, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7688, file: !1131, line: 3010, column: 3)
!7693 = !DILocation(line: 3012, column: 3, scope: !7692)
!7694 = !DILocation(line: 3018, column: 1, scope: !7665)
!7695 = distinct !DISubprogram(name: "xTaskResumeAll", scope: !1131, file: !1131, line: 1666, type: !7696, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7698)
!7696 = !DISubroutineType(types: !7697)
!7697 = !{!1160}
!7698 = !{!7699, !7700}
!7699 = !DILocalVariable(name: "pxTCB", scope: !7695, file: !1131, line: 1668, type: !1161)
!7700 = !DILocalVariable(name: "xAlreadyYielded", scope: !7695, file: !1131, line: 1669, type: !1160)
!7701 = !DILocation(line: 0, scope: !7695)
!7702 = !DILocation(line: 1673, column: 2, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7695, file: !1131, line: 1673, column: 2)
!7704 = !DILocation(line: 1673, column: 2, scope: !7695)
!7705 = !DILocation(line: 1673, column: 2, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7703, file: !1131, line: 1673, column: 2)
!7707 = !DILocation(line: 1680, column: 2, scope: !7695)
!7708 = !DILocation(line: 1682, column: 3, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7695, file: !1131, line: 1681, column: 2)
!7710 = !DILocation(line: 1684, column: 7, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7709, file: !1131, line: 1684, column: 7)
!7712 = !DILocation(line: 1684, column: 28, scope: !7711)
!7713 = !DILocation(line: 1684, column: 7, scope: !7709)
!7714 = !DILocation(line: 1686, column: 8, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !1131, line: 1686, column: 8)
!7716 = distinct !DILexicalBlock(scope: !7711, file: !1131, line: 1685, column: 3)
!7717 = !DILocation(line: 1686, column: 31, scope: !7715)
!7718 = !DILocation(line: 1686, column: 8, scope: !7716)
!7719 = !DILocation(line: 1690, column: 12, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7715, file: !1131, line: 1687, column: 4)
!7721 = !DILocation(line: 1690, column: 5, scope: !7720)
!7722 = !DILocation(line: 1692, column: 26, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7720, file: !1131, line: 1691, column: 5)
!7724 = !DILocation(line: 1693, column: 39, scope: !7723)
!7725 = !DILocation(line: 1693, column: 15, scope: !7723)
!7726 = !DILocation(line: 1694, column: 39, scope: !7723)
!7727 = !DILocation(line: 1694, column: 15, scope: !7723)
!7728 = !DILocation(line: 1695, column: 6, scope: !7723)
!7729 = !DILocation(line: 1699, column: 17, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7723, file: !1131, line: 1699, column: 10)
!7731 = !DILocation(line: 1699, column: 31, scope: !7730)
!7732 = !DILocation(line: 1699, column: 45, scope: !7730)
!7733 = !DILocation(line: 1699, column: 28, scope: !7730)
!7734 = !DILocation(line: 1699, column: 10, scope: !7723)
!7735 = !DILocation(line: 1701, column: 21, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7730, file: !1131, line: 1700, column: 6)
!7737 = !DILocation(line: 1702, column: 6, scope: !7736)
!7738 = distinct !{!7738, !7721, !7739}
!7739 = !DILocation(line: 1707, column: 5, scope: !7720)
!7740 = !DILocation(line: 1713, column: 9, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7720, file: !1131, line: 1713, column: 9)
!7742 = !DILocation(line: 1713, column: 23, scope: !7741)
!7743 = !DILocation(line: 1713, column: 9, scope: !7720)
!7744 = !DILocation(line: 1715, column: 13, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7741, file: !1131, line: 1714, column: 5)
!7746 = !DILocation(line: 1715, column: 27, scope: !7745)
!7747 = !DILocation(line: 1715, column: 6, scope: !7745)
!7748 = !DILocation(line: 1717, column: 11, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7750, file: !1131, line: 1717, column: 11)
!7750 = distinct !DILexicalBlock(scope: !7745, file: !1131, line: 1716, column: 6)
!7751 = !DILocation(line: 1717, column: 32, scope: !7749)
!7752 = !DILocation(line: 1717, column: 11, scope: !7750)
!7753 = !DILocation(line: 1719, column: 22, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7749, file: !1131, line: 1718, column: 7)
!7755 = !DILocation(line: 1720, column: 7, scope: !7754)
!7756 = !DILocation(line: 1725, column: 7, scope: !7750)
!7757 = distinct !{!7757, !7747, !7758}
!7758 = !DILocation(line: 1726, column: 6, scope: !7745)
!7759 = !DILocation(line: 1733, column: 9, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7720, file: !1131, line: 1733, column: 9)
!7761 = !DILocation(line: 1733, column: 23, scope: !7760)
!7762 = !DILocation(line: 1733, column: 9, scope: !7720)
!7763 = !DILocation(line: 1740, column: 6, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7765, file: !1131, line: 1740, column: 6)
!7765 = distinct !DILexicalBlock(scope: !7760, file: !1131, line: 1734, column: 5)
!7766 = !{i64 2148478125}
!7767 = !{i64 2148478165}
!7768 = !DILocation(line: 1741, column: 5, scope: !7765)
!7769 = !DILocation(line: 1753, column: 2, scope: !7695)
!7770 = !DILocation(line: 1755, column: 2, scope: !7695)
!7771 = distinct !DISubprogram(name: "xTaskIncrementTick", scope: !1131, file: !1131, line: 1934, type: !7696, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7772)
!7772 = !{!7773, !7774, !7775, !7776, !7780}
!7773 = !DILocalVariable(name: "pxTCB", scope: !7771, file: !1131, line: 1936, type: !1161)
!7774 = !DILocalVariable(name: "xItemValue", scope: !7771, file: !1131, line: 1937, type: !855)
!7775 = !DILocalVariable(name: "xSwitchRequired", scope: !7771, file: !1131, line: 1938, type: !1160)
!7776 = !DILocalVariable(name: "xConstTickCount", scope: !7777, file: !1131, line: 1953, type: !7596)
!7777 = distinct !DILexicalBlock(scope: !7778, file: !1131, line: 1950, column: 3)
!7778 = distinct !DILexicalBlock(scope: !7779, file: !1131, line: 1945, column: 2)
!7779 = distinct !DILexicalBlock(scope: !7771, file: !1131, line: 1944, column: 6)
!7780 = !DILocalVariable(name: "pxTemp", scope: !7781, file: !1131, line: 1957, type: !1195)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !1131, line: 1957, column: 5)
!7782 = distinct !DILexicalBlock(scope: !7783, file: !1131, line: 1956, column: 4)
!7783 = distinct !DILexicalBlock(scope: !7777, file: !1131, line: 1955, column: 8)
!7784 = !DILocation(line: 0, scope: !7771)
!7785 = !DILocation(line: 1944, column: 6, scope: !7779)
!7786 = !DILocation(line: 1944, column: 27, scope: !7779)
!7787 = !DILocation(line: 1944, column: 6, scope: !7771)
!7788 = !DILocation(line: 1948, column: 3, scope: !7778)
!7789 = !DILocation(line: 1953, column: 39, scope: !7777)
!7790 = !DILocation(line: 0, scope: !7777)
!7791 = !DILocation(line: 1955, column: 24, scope: !7783)
!7792 = !DILocation(line: 1955, column: 8, scope: !7777)
!7793 = !DILocation(line: 1957, column: 5, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7781, file: !1131, line: 1957, column: 5)
!7795 = !DILocation(line: 1957, column: 5, scope: !7781)
!7796 = !DILocation(line: 1957, column: 5, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7794, file: !1131, line: 1957, column: 5)
!7798 = !DILocation(line: 0, scope: !7781)
!7799 = !DILocation(line: 1958, column: 4, scope: !7782)
!7800 = !DILocation(line: 1968, column: 27, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7777, file: !1131, line: 1968, column: 8)
!7802 = !DILocation(line: 1968, column: 24, scope: !7801)
!7803 = !DILocation(line: 1968, column: 8, scope: !7777)
!7804 = !DILocation(line: 1972, column: 10, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7806, file: !1131, line: 1972, column: 10)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !1131, line: 1971, column: 5)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !1131, line: 1970, column: 5)
!7808 = distinct !DILexicalBlock(scope: !7809, file: !1131, line: 1970, column: 5)
!7809 = distinct !DILexicalBlock(scope: !7801, file: !1131, line: 1969, column: 4)
!7810 = !DILocation(line: 1972, column: 10, scope: !7806)
!7811 = !DILocation(line: 1988, column: 27, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7805, file: !1131, line: 1983, column: 6)
!7813 = !DILocation(line: 1989, column: 20, scope: !7812)
!7814 = !DILocation(line: 1991, column: 27, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7812, file: !1131, line: 1991, column: 11)
!7816 = !DILocation(line: 1991, column: 11, scope: !7812)
!7817 = !DILocation(line: 2007, column: 16, scope: !7812)
!7818 = !DILocation(line: 2011, column: 11, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7812, file: !1131, line: 2011, column: 11)
!7820 = !DILocation(line: 2011, column: 65, scope: !7819)
!7821 = !DILocation(line: 2011, column: 11, scope: !7812)
!7822 = !DILocation(line: 2013, column: 17, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7819, file: !1131, line: 2012, column: 7)
!7824 = !DILocation(line: 2014, column: 7, scope: !7823)
!7825 = !DILocation(line: 2022, column: 7, scope: !7812)
!7826 = !DILocation(line: 2032, column: 19, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !1131, line: 2032, column: 12)
!7828 = distinct !DILexicalBlock(scope: !7812, file: !1131, line: 2027, column: 7)
!7829 = !DILocation(line: 2032, column: 33, scope: !7827)
!7830 = !DILocation(line: 2032, column: 47, scope: !7827)
!7831 = !DILocation(line: 2032, column: 30, scope: !7827)
!7832 = !DILocation(line: 2032, column: 12, scope: !7828)
!7833 = distinct !{!7833, !7834, !7835}
!7834 = !DILocation(line: 1970, column: 5, scope: !7808)
!7835 = !DILocation(line: 2043, column: 5, scope: !7808)
!7836 = !DILocation(line: 0, scope: !7805)
!7837 = !DILocation(line: 2052, column: 8, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !1131, line: 2052, column: 8)
!7839 = distinct !DILexicalBlock(scope: !7778, file: !1131, line: 2051, column: 3)
!7840 = !DILocation(line: 1938, column: 12, scope: !7771)
!7841 = !DILocation(line: 2052, column: 86, scope: !7838)
!7842 = !DILocation(line: 2052, column: 8, scope: !7839)
!7843 = !DILocation(line: 2080, column: 3, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7779, file: !1131, line: 2079, column: 2)
!7845 = !DILocation(line: 2093, column: 7, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !1131, line: 2093, column: 7)
!7847 = distinct !DILexicalBlock(scope: !7771, file: !1131, line: 2092, column: 2)
!7848 = !DILocation(line: 2093, column: 21, scope: !7846)
!7849 = !DILocation(line: 2093, column: 7, scope: !7847)
!7850 = !DILocation(line: 2104, column: 2, scope: !7771)
!7851 = distinct !DISubprogram(name: "vTaskDelay", scope: !1131, file: !1131, line: 918, type: !7666, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7852)
!7852 = !{!7853, !7854, !7855}
!7853 = !DILocalVariable(name: "xTicksToDelay", arg: 1, scope: !7851, file: !1131, line: 918, type: !7596)
!7854 = !DILocalVariable(name: "xTimeToWake", scope: !7851, file: !1131, line: 920, type: !855)
!7855 = !DILocalVariable(name: "xAlreadyYielded", scope: !7851, file: !1131, line: 921, type: !1160)
!7856 = !DILocation(line: 0, scope: !7851)
!7857 = !DILocation(line: 925, column: 21, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7851, file: !1131, line: 925, column: 7)
!7859 = !DILocation(line: 925, column: 7, scope: !7851)
!7860 = !DILocation(line: 927, column: 4, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7862, file: !1131, line: 927, column: 4)
!7862 = distinct !DILexicalBlock(scope: !7858, file: !1131, line: 926, column: 3)
!7863 = !DILocation(line: 927, column: 4, scope: !7862)
!7864 = !DILocation(line: 927, column: 4, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7861, file: !1131, line: 927, column: 4)
!7866 = !DILocation(line: 928, column: 4, scope: !7862)
!7867 = !DILocation(line: 942, column: 19, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7862, file: !1131, line: 929, column: 4)
!7869 = !DILocation(line: 942, column: 30, scope: !7868)
!7870 = !DILocation(line: 947, column: 26, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7868, file: !1131, line: 947, column: 9)
!7872 = !DILocation(line: 947, column: 40, scope: !7871)
!7873 = !DILocation(line: 947, column: 9, scope: !7871)
!7874 = !DILocation(line: 947, column: 61, scope: !7871)
!7875 = !DILocation(line: 947, column: 9, scope: !7868)
!7876 = !DILocation(line: 952, column: 6, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7871, file: !1131, line: 948, column: 5)
!7878 = !DILocation(line: 953, column: 5, scope: !7877)
!7879 = !DILocation(line: 958, column: 5, scope: !7868)
!7880 = !DILocation(line: 960, column: 22, scope: !7862)
!7881 = !DILocation(line: 961, column: 3, scope: !7862)
!7882 = !DILocation(line: 969, column: 7, scope: !7851)
!7883 = !DILocation(line: 971, column: 4, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !1131, line: 971, column: 4)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !1131, line: 970, column: 3)
!7886 = distinct !DILexicalBlock(scope: !7851, file: !1131, line: 969, column: 7)
!7887 = !{i64 2148469596}
!7888 = !{i64 2148469636}
!7889 = !DILocation(line: 972, column: 3, scope: !7885)
!7890 = !DILocation(line: 977, column: 2, scope: !7851)
!7891 = distinct !DISubprogram(name: "uxTaskPriorityGet", scope: !1131, file: !1131, line: 1054, type: !7892, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7894)
!7892 = !DISubroutineType(types: !7893)
!7893 = !{!1154, !1159}
!7894 = !{!7895, !7896, !7897}
!7895 = !DILocalVariable(name: "xTask", arg: 1, scope: !7891, file: !1131, line: 1054, type: !1159)
!7896 = !DILocalVariable(name: "pxTCB", scope: !7891, file: !1131, line: 1056, type: !1161)
!7897 = !DILocalVariable(name: "uxReturn", scope: !7891, file: !1131, line: 1057, type: !1154)
!7898 = !DILocation(line: 0, scope: !7891)
!7899 = !DILocation(line: 1059, column: 3, scope: !7891)
!7900 = !DILocation(line: 1063, column: 12, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7891, file: !1131, line: 1060, column: 3)
!7902 = !DILocation(line: 1064, column: 22, scope: !7901)
!7903 = !DILocation(line: 1066, column: 3, scope: !7891)
!7904 = !DILocation(line: 1068, column: 3, scope: !7891)
!7905 = distinct !DISubprogram(name: "uxTaskPriorityGetFromISR", scope: !1131, file: !1131, line: 1076, type: !7892, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7906)
!7906 = !{!7907, !7908, !7909, !7910}
!7907 = !DILocalVariable(name: "xTask", arg: 1, scope: !7905, file: !1131, line: 1076, type: !1159)
!7908 = !DILocalVariable(name: "pxTCB", scope: !7905, file: !1131, line: 1078, type: !1161)
!7909 = !DILocalVariable(name: "uxReturn", scope: !7905, file: !1131, line: 1079, type: !1154)
!7910 = !DILocalVariable(name: "uxSavedInterruptState", scope: !7905, file: !1131, line: 1079, type: !1154)
!7911 = !DILocation(line: 0, scope: !7905)
!7912 = !DILocation(line: 1097, column: 3, scope: !7905)
!7913 = !DILocation(line: 231, column: 2, scope: !7914, inlinedAt: !7918)
!7914 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !856, file: !856, line: 227, type: !1916, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7915)
!7915 = !{!7916, !7917}
!7916 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !7914, file: !856, line: 229, type: !61)
!7917 = !DILocalVariable(name: "ulNewBASEPRI", scope: !7914, file: !856, line: 229, type: !61)
!7918 = distinct !DILocation(line: 1099, column: 27, scope: !7905)
!7919 = !{i64 806712, i64 806749, i64 806781, i64 806817, i64 806844}
!7920 = !DILocation(line: 0, scope: !7914, inlinedAt: !7918)
!7921 = !DILocation(line: 1103, column: 12, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7905, file: !1131, line: 1100, column: 3)
!7923 = !DILocation(line: 1104, column: 22, scope: !7922)
!7924 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !7925, file: !856, line: 247, type: !61)
!7925 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !856, file: !856, line: 247, type: !2535, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7926)
!7926 = !{!7924}
!7927 = !DILocation(line: 0, scope: !7925, inlinedAt: !7928)
!7928 = distinct !DILocation(line: 1106, column: 3, scope: !7905)
!7929 = !DILocation(line: 249, column: 2, scope: !7925, inlinedAt: !7928)
!7930 = !{i64 807245}
!7931 = !DILocation(line: 1108, column: 3, scope: !7905)
!7932 = distinct !DISubprogram(name: "vTaskPrioritySet", scope: !1131, file: !1131, line: 1116, type: !7933, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !7935)
!7933 = !DISubroutineType(types: !7934)
!7934 = !{null, !1159, !1154}
!7935 = !{!7936, !7937, !7938, !7939, !7940, !7941}
!7936 = !DILocalVariable(name: "xTask", arg: 1, scope: !7932, file: !1131, line: 1116, type: !1159)
!7937 = !DILocalVariable(name: "uxNewPriority", arg: 2, scope: !7932, file: !1131, line: 1116, type: !1154)
!7938 = !DILocalVariable(name: "pxTCB", scope: !7932, file: !1131, line: 1118, type: !1161)
!7939 = !DILocalVariable(name: "uxCurrentBasePriority", scope: !7932, file: !1131, line: 1119, type: !1154)
!7940 = !DILocalVariable(name: "uxPriorityUsedOnEntry", scope: !7932, file: !1131, line: 1119, type: !1154)
!7941 = !DILocalVariable(name: "xYieldRequired", scope: !7932, file: !1131, line: 1120, type: !1160)
!7942 = !DILocation(line: 0, scope: !7932)
!7943 = !DILocation(line: 1122, column: 3, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7932, file: !1131, line: 1122, column: 3)
!7945 = !DILocation(line: 1122, column: 3, scope: !7932)
!7946 = !DILocation(line: 1122, column: 3, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7944, file: !1131, line: 1122, column: 3)
!7948 = !DILocation(line: 1125, column: 7, scope: !7932)
!7949 = !DILocation(line: 1134, column: 3, scope: !7932)
!7950 = !DILocation(line: 1138, column: 12, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7932, file: !1131, line: 1135, column: 3)
!7952 = !DILocation(line: 1144, column: 36, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7951, file: !1131, line: 1143, column: 4)
!7954 = !DILocation(line: 1152, column: 30, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7951, file: !1131, line: 1152, column: 8)
!7956 = !DILocation(line: 1152, column: 8, scope: !7951)
!7957 = !DILocation(line: 1156, column: 23, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7959, file: !1131, line: 1156, column: 9)
!7959 = distinct !DILexicalBlock(scope: !7955, file: !1131, line: 1153, column: 4)
!7960 = !DILocation(line: 0, scope: !7958)
!7961 = !DILocation(line: 1156, column: 9, scope: !7959)
!7962 = !DILocation(line: 1163, column: 28, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7964, file: !1131, line: 1163, column: 11)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !1131, line: 1159, column: 6)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !1131, line: 1158, column: 10)
!7966 = distinct !DILexicalBlock(scope: !7958, file: !1131, line: 1157, column: 5)
!7967 = !DILocation(line: 1163, column: 42, scope: !7963)
!7968 = !DILocation(line: 1163, column: 25, scope: !7963)
!7969 = !DILocation(line: 1163, column: 11, scope: !7964)
!7970 = !DILocation(line: 1196, column: 36, scope: !7959)
!7971 = !DILocation(line: 1202, column: 32, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !1131, line: 1202, column: 10)
!7973 = distinct !DILexicalBlock(scope: !7959, file: !1131, line: 1199, column: 5)
!7974 = !DILocation(line: 1202, column: 10, scope: !7973)
!7975 = !DILocation(line: 1204, column: 25, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7972, file: !1131, line: 1203, column: 6)
!7977 = !DILocation(line: 1205, column: 6, scope: !7976)
!7978 = !DILocation(line: 1212, column: 28, scope: !7973)
!7979 = !DILocation(line: 1222, column: 11, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7959, file: !1131, line: 1222, column: 9)
!7981 = !DILocation(line: 1222, column: 102, scope: !7980)
!7982 = !DILocation(line: 1222, column: 9, scope: !7959)
!7983 = !DILocation(line: 1224, column: 6, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7980, file: !1131, line: 1223, column: 5)
!7985 = !DILocation(line: 1225, column: 5, scope: !7984)
!7986 = !DILocation(line: 1235, column: 9, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7959, file: !1131, line: 1235, column: 9)
!7988 = !DILocation(line: 1235, column: 9, scope: !7959)
!7989 = !DILocation(line: 1240, column: 10, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7991, file: !1131, line: 1240, column: 10)
!7991 = distinct !DILexicalBlock(scope: !7987, file: !1131, line: 1236, column: 5)
!7992 = !DILocation(line: 1240, column: 55, scope: !7990)
!7993 = !DILocation(line: 1240, column: 10, scope: !7991)
!7994 = !DILocation(line: 1245, column: 7, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7990, file: !1131, line: 1241, column: 6)
!7996 = !DILocation(line: 1246, column: 6, scope: !7995)
!7997 = !DILocation(line: 1251, column: 6, scope: !7991)
!7998 = !DILocation(line: 1252, column: 5, scope: !7991)
!7999 = !DILocation(line: 1258, column: 9, scope: !7959)
!8000 = !DILocation(line: 1260, column: 6, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !1131, line: 1260, column: 6)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !1131, line: 1259, column: 5)
!8003 = distinct !DILexicalBlock(scope: !7959, file: !1131, line: 1258, column: 9)
!8004 = !{i64 2148471813}
!8005 = !{i64 2148471853}
!8006 = !DILocation(line: 1261, column: 5, scope: !8002)
!8007 = !DILocation(line: 1272, column: 3, scope: !7932)
!8008 = !DILocation(line: 1273, column: 2, scope: !7932)
!8009 = distinct !DISubprogram(name: "vTaskSuspend", scope: !1131, file: !1131, line: 1280, type: !7521, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8010)
!8010 = !{!8011, !8012}
!8011 = !DILocalVariable(name: "xTaskToSuspend", arg: 1, scope: !8009, file: !1131, line: 1280, type: !1159)
!8012 = !DILocalVariable(name: "pxTCB", scope: !8009, file: !1131, line: 1282, type: !1161)
!8013 = !DILocation(line: 0, scope: !8009)
!8014 = !DILocation(line: 1284, column: 3, scope: !8009)
!8015 = !DILocation(line: 1288, column: 12, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8009, file: !1131, line: 1285, column: 3)
!8017 = !DILocation(line: 1294, column: 32, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8016, file: !1131, line: 1294, column: 8)
!8019 = !DILocation(line: 1294, column: 8, scope: !8018)
!8020 = !DILocation(line: 1294, column: 53, scope: !8018)
!8021 = !DILocation(line: 1294, column: 8, scope: !8016)
!8022 = !DILocation(line: 1296, column: 5, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8024, file: !1131, line: 1296, column: 5)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !1131, line: 1296, column: 5)
!8025 = distinct !DILexicalBlock(scope: !8018, file: !1131, line: 1295, column: 4)
!8026 = !DILocation(line: 1296, column: 5, scope: !8024)
!8027 = !DILocation(line: 1296, column: 5, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8023, file: !1131, line: 1296, column: 5)
!8029 = !DILocation(line: 1304, column: 8, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8016, file: !1131, line: 1304, column: 8)
!8031 = !DILocation(line: 1304, column: 62, scope: !8030)
!8032 = !DILocation(line: 1304, column: 8, scope: !8016)
!8033 = !DILocation(line: 1306, column: 14, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8030, file: !1131, line: 1305, column: 4)
!8035 = !DILocation(line: 1307, column: 4, scope: !8034)
!8036 = !DILocation(line: 1313, column: 4, scope: !8016)
!8037 = !DILocation(line: 1315, column: 3, scope: !8009)
!8038 = !DILocation(line: 1317, column: 16, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8009, file: !1131, line: 1317, column: 7)
!8040 = !DILocation(line: 1317, column: 13, scope: !8039)
!8041 = !DILocation(line: 0, scope: !8039)
!8042 = !DILocation(line: 1317, column: 7, scope: !8009)
!8043 = !DILocation(line: 1319, column: 8, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8039, file: !1131, line: 1318, column: 3)
!8045 = !DILocation(line: 1322, column: 5, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8047, file: !1131, line: 1322, column: 5)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !1131, line: 1320, column: 4)
!8048 = distinct !DILexicalBlock(scope: !8044, file: !1131, line: 1319, column: 8)
!8049 = !DILocation(line: 1322, column: 5, scope: !8047)
!8050 = !DILocation(line: 1322, column: 5, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8046, file: !1131, line: 1322, column: 5)
!8052 = !DILocation(line: 1323, column: 5, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !8047, file: !1131, line: 1323, column: 5)
!8054 = !{i64 2148473262}
!8055 = !{i64 2148473302}
!8056 = !DILocation(line: 1324, column: 4, scope: !8047)
!8057 = !DILocation(line: 1330, column: 9, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !1131, line: 1330, column: 9)
!8059 = distinct !DILexicalBlock(scope: !8048, file: !1131, line: 1326, column: 4)
!8060 = !DILocation(line: 1330, column: 59, scope: !8058)
!8061 = !DILocation(line: 1330, column: 56, scope: !8058)
!8062 = !DILocation(line: 1330, column: 9, scope: !8059)
!8063 = !DILocation(line: 1336, column: 19, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8058, file: !1131, line: 1331, column: 5)
!8065 = !DILocation(line: 1337, column: 5, scope: !8064)
!8066 = !DILocation(line: 1340, column: 6, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8058, file: !1131, line: 1339, column: 5)
!8068 = !DILocation(line: 1346, column: 8, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8039, file: !1131, line: 1345, column: 3)
!8070 = !DILocation(line: 1351, column: 5, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !1131, line: 1347, column: 4)
!8072 = distinct !DILexicalBlock(scope: !8069, file: !1131, line: 1346, column: 8)
!8073 = !DILocation(line: 1353, column: 6, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8071, file: !1131, line: 1352, column: 5)
!8075 = !DILocation(line: 1355, column: 5, scope: !8071)
!8076 = !DILocation(line: 1356, column: 4, scope: !8071)
!8077 = !DILocation(line: 1362, column: 2, scope: !8009)
!8078 = !DILocation(line: 2200, column: 6, scope: !1220)
!8079 = !DILocation(line: 2200, column: 27, scope: !1220)
!8080 = !DILocation(line: 2200, column: 6, scope: !1215)
!8081 = !DILocation(line: 2204, column: 17, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !1220, file: !1131, line: 2201, column: 2)
!8083 = !DILocation(line: 2205, column: 2, scope: !8082)
!8084 = !DILocation(line: 2208, column: 17, scope: !1219)
!8085 = !DILocation(line: 2239, column: 3, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !1131, line: 2239, column: 3)
!8087 = distinct !DILexicalBlock(scope: !1219, file: !1131, line: 2239, column: 3)
!8088 = !DILocation(line: 2239, column: 3, scope: !8087)
!8089 = !DILocation(line: 2239, column: 3, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !1131, line: 2239, column: 3)
!8091 = distinct !DILexicalBlock(scope: !8086, file: !1131, line: 2239, column: 3)
!8092 = !DILocation(line: 2239, column: 3, scope: !8091)
!8093 = !DILocation(line: 2239, column: 3, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8090, file: !1131, line: 2239, column: 3)
!8095 = !DILocation(line: 2240, column: 3, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !1131, line: 2240, column: 3)
!8097 = distinct !DILexicalBlock(scope: !1219, file: !1131, line: 2240, column: 3)
!8098 = !DILocation(line: 2240, column: 3, scope: !8097)
!8099 = !DILocation(line: 2240, column: 3, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !1131, line: 2240, column: 3)
!8101 = distinct !DILexicalBlock(scope: !8096, file: !1131, line: 2240, column: 3)
!8102 = !DILocation(line: 2240, column: 3, scope: !8101)
!8103 = !DILocation(line: 2240, column: 3, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8100, file: !1131, line: 2240, column: 3)
!8105 = !DILocation(line: 2244, column: 3, scope: !1218)
!8106 = !DILocalVariable(name: "ulBitmap", arg: 1, scope: !8107, file: !856, line: 172, type: !61)
!8107 = distinct !DISubprogram(name: "ucPortCountLeadingZeros", scope: !856, file: !856, line: 172, type: !8108, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8110)
!8108 = !DISubroutineType(types: !8109)
!8109 = !{!54, !61}
!8110 = !{!8106, !8111}
!8111 = !DILocalVariable(name: "ucReturn", scope: !8107, file: !856, line: 174, type: !54)
!8112 = !DILocation(line: 0, scope: !8107, inlinedAt: !8113)
!8113 = distinct !DILocation(line: 2244, column: 3, scope: !1218)
!8114 = !DILocation(line: 176, column: 3, scope: !8107, inlinedAt: !8113)
!8115 = !{i64 804804}
!8116 = !DILocation(line: 0, scope: !1218)
!8117 = !DILocation(line: 2244, column: 3, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !1218, file: !1131, line: 2244, column: 3)
!8119 = !DILocation(line: 2244, column: 3, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8118, file: !1131, line: 2244, column: 3)
!8121 = !DILocation(line: 0, scope: !1222)
!8122 = !DILocation(line: 2244, column: 3, scope: !1222)
!8123 = !DILocation(line: 2244, column: 3, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !1222, file: !1131, line: 2244, column: 3)
!8125 = !DILocation(line: 2244, column: 3, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8124, file: !1131, line: 2244, column: 3)
!8127 = !DILocation(line: 2255, column: 1, scope: !1215)
!8128 = distinct !DISubprogram(name: "vTaskResume", scope: !1131, file: !1131, line: 1415, type: !7521, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8129)
!8129 = !{!8130, !8131}
!8130 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !8128, file: !1131, line: 1415, type: !1159)
!8131 = !DILocalVariable(name: "pxTCB", scope: !8128, file: !1131, line: 1417, type: !7451)
!8132 = !DILocation(line: 0, scope: !8128)
!8133 = !DILocation(line: 1420, column: 3, scope: !8128)
!8134 = !DILocation(line: 1420, column: 3, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !1131, line: 1420, column: 3)
!8136 = distinct !DILexicalBlock(scope: !8128, file: !1131, line: 1420, column: 3)
!8137 = !DILocation(line: 1424, column: 25, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8128, file: !1131, line: 1424, column: 7)
!8139 = !DILocation(line: 1417, column: 24, scope: !8128)
!8140 = !DILocation(line: 1424, column: 39, scope: !8138)
!8141 = !DILocation(line: 1424, column: 36, scope: !8138)
!8142 = !DILocation(line: 1424, column: 7, scope: !8128)
!8143 = !DILocation(line: 1426, column: 4, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8138, file: !1131, line: 1425, column: 3)
!8145 = !DILocation(line: 1428, column: 9, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !1131, line: 1428, column: 9)
!8147 = distinct !DILexicalBlock(scope: !8144, file: !1131, line: 1427, column: 4)
!8148 = !DILocation(line: 1428, column: 41, scope: !8146)
!8149 = !DILocation(line: 1428, column: 9, scope: !8147)
!8150 = !DILocation(line: 1434, column: 40, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8146, file: !1131, line: 1429, column: 5)
!8152 = !DILocation(line: 1434, column: 15, scope: !8151)
!8153 = !DILocation(line: 1435, column: 6, scope: !8151)
!8154 = !DILocation(line: 1438, column: 17, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8151, file: !1131, line: 1438, column: 10)
!8156 = !DILocation(line: 1438, column: 31, scope: !8155)
!8157 = !DILocation(line: 1438, column: 45, scope: !8155)
!8158 = !DILocation(line: 1438, column: 28, scope: !8155)
!8159 = !DILocation(line: 1438, column: 10, scope: !8151)
!8160 = !DILocation(line: 1443, column: 7, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8162, file: !1131, line: 1443, column: 7)
!8162 = distinct !DILexicalBlock(scope: !8155, file: !1131, line: 1439, column: 6)
!8163 = !{i64 2148475165}
!8164 = !{i64 2148475205}
!8165 = !DILocation(line: 1444, column: 6, scope: !8162)
!8166 = !DILocation(line: 1455, column: 4, scope: !8144)
!8167 = !DILocation(line: 1456, column: 3, scope: !8144)
!8168 = !DILocation(line: 1461, column: 2, scope: !8128)
!8169 = distinct !DISubprogram(name: "prvTaskIsTaskSuspended", scope: !1131, file: !1131, line: 1369, type: !8170, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8173)
!8170 = !DISubroutineType(types: !8171)
!8171 = !{!1160, !8172}
!8172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1159)
!8173 = !{!8174, !8175, !8176}
!8174 = !DILocalVariable(name: "xTask", arg: 1, scope: !8169, file: !1131, line: 1369, type: !8172)
!8175 = !DILocalVariable(name: "xReturn", scope: !8169, file: !1131, line: 1371, type: !1160)
!8176 = !DILocalVariable(name: "pxTCB", scope: !8169, file: !1131, line: 1372, type: !8177)
!8177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8178)
!8178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8179, size: 32)
!8179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1162)
!8180 = !DILocation(line: 0, scope: !8169)
!8181 = !DILocation(line: 1378, column: 3, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8169, file: !1131, line: 1378, column: 3)
!8183 = !DILocation(line: 1378, column: 3, scope: !8169)
!8184 = !DILocation(line: 1378, column: 3, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8182, file: !1131, line: 1378, column: 3)
!8186 = !DILocation(line: 1381, column: 7, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8169, file: !1131, line: 1381, column: 7)
!8188 = !DILocation(line: 1381, column: 7, scope: !8169)
!8189 = !DILocation(line: 1384, column: 8, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8191, file: !1131, line: 1384, column: 8)
!8191 = distinct !DILexicalBlock(scope: !8187, file: !1131, line: 1382, column: 3)
!8192 = !DILocation(line: 1384, column: 8, scope: !8191)
!8193 = !DILocation(line: 1407, column: 3, scope: !8169)
!8194 = distinct !DISubprogram(name: "xTaskResumeFromISR", scope: !1131, file: !1131, line: 1469, type: !8195, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8197)
!8195 = !DISubroutineType(types: !8196)
!8196 = !{!1160, !1159}
!8197 = !{!8198, !8199, !8200, !8201}
!8198 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !8194, file: !1131, line: 1469, type: !1159)
!8199 = !DILocalVariable(name: "xYieldRequired", scope: !8194, file: !1131, line: 1471, type: !1160)
!8200 = !DILocalVariable(name: "pxTCB", scope: !8194, file: !1131, line: 1472, type: !7451)
!8201 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !8194, file: !1131, line: 1473, type: !1154)
!8202 = !DILocation(line: 0, scope: !8194)
!8203 = !DILocation(line: 1475, column: 3, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8194, file: !1131, line: 1475, column: 3)
!8205 = !DILocation(line: 1475, column: 3, scope: !8194)
!8206 = !DILocation(line: 1475, column: 3, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8204, file: !1131, line: 1475, column: 3)
!8208 = !DILocation(line: 1493, column: 3, scope: !8194)
!8209 = !DILocation(line: 231, column: 2, scope: !7914, inlinedAt: !8210)
!8210 = distinct !DILocation(line: 1495, column: 28, scope: !8194)
!8211 = !DILocation(line: 0, scope: !7914, inlinedAt: !8210)
!8212 = !DILocation(line: 1497, column: 8, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !1131, line: 1497, column: 8)
!8214 = distinct !DILexicalBlock(scope: !8194, file: !1131, line: 1496, column: 3)
!8215 = !DILocation(line: 1497, column: 40, scope: !8213)
!8216 = !DILocation(line: 1497, column: 8, scope: !8214)
!8217 = !DILocation(line: 1502, column: 9, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8219, file: !1131, line: 1502, column: 9)
!8219 = distinct !DILexicalBlock(scope: !8213, file: !1131, line: 1498, column: 4)
!8220 = !DILocation(line: 1502, column: 30, scope: !8218)
!8221 = !DILocation(line: 1502, column: 9, scope: !8219)
!8222 = !DILocation(line: 1506, column: 17, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8224, file: !1131, line: 1506, column: 10)
!8224 = distinct !DILexicalBlock(scope: !8218, file: !1131, line: 1503, column: 5)
!8225 = !DILocation(line: 1506, column: 31, scope: !8223)
!8226 = !DILocation(line: 1506, column: 45, scope: !8223)
!8227 = !DILocation(line: 1506, column: 28, scope: !8223)
!8228 = !DILocation(line: 1506, column: 10, scope: !8224)
!8229 = !DILocation(line: 1515, column: 40, scope: !8224)
!8230 = !DILocation(line: 1515, column: 15, scope: !8224)
!8231 = !DILocation(line: 1516, column: 6, scope: !8224)
!8232 = !DILocation(line: 1517, column: 5, scope: !8224)
!8233 = !DILocation(line: 1523, column: 56, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8218, file: !1131, line: 1519, column: 5)
!8235 = !DILocation(line: 1523, column: 6, scope: !8234)
!8236 = !DILocation(line: 0, scope: !7925, inlinedAt: !8237)
!8237 = distinct !DILocation(line: 1531, column: 3, scope: !8194)
!8238 = !DILocation(line: 249, column: 2, scope: !7925, inlinedAt: !8237)
!8239 = !DILocation(line: 1533, column: 3, scope: !8194)
!8240 = distinct !DISubprogram(name: "vTaskStartScheduler", scope: !1131, file: !1131, line: 1539, type: !154, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8241)
!8241 = !{!8242}
!8242 = !DILocalVariable(name: "xReturn", scope: !8240, file: !1131, line: 1541, type: !1160)
!8243 = !DILocation(line: 1553, column: 13, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8240, file: !1131, line: 1551, column: 2)
!8245 = !DILocation(line: 0, scope: !8240)
!8246 = !DILocation(line: 1559, column: 15, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8248, file: !1131, line: 1559, column: 7)
!8248 = distinct !DILexicalBlock(scope: !8240, file: !1131, line: 1558, column: 2)
!8249 = !DILocation(line: 1559, column: 7, scope: !8248)
!8250 = !DILocation(line: 1561, column: 14, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8247, file: !1131, line: 1560, column: 3)
!8252 = !DILocation(line: 1562, column: 3, scope: !8251)
!8253 = !DILocation(line: 1570, column: 6, scope: !8240)
!8254 = !DILocation(line: 215, column: 2, scope: !8255, inlinedAt: !8258)
!8255 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !856, file: !856, line: 211, type: !154, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8256)
!8256 = !{!8257}
!8257 = !DILocalVariable(name: "ulNewBASEPRI", scope: !8255, file: !856, line: 213, type: !61)
!8258 = distinct !DILocation(line: 1577, column: 3, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !1131, line: 1571, column: 2)
!8260 = distinct !DILexicalBlock(scope: !8240, file: !1131, line: 1570, column: 6)
!8261 = !{i64 806324, i64 806357, i64 806393, i64 806420}
!8262 = !DILocation(line: 0, scope: !8255, inlinedAt: !8258)
!8263 = !DILocation(line: 1587, column: 21, scope: !8259)
!8264 = !DILocation(line: 1588, column: 14, scope: !8259)
!8265 = !DILocation(line: 1597, column: 7, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8259, file: !1131, line: 1597, column: 7)
!8267 = !DILocation(line: 1606, column: 2, scope: !8259)
!8268 = !DILocation(line: 1612, column: 3, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8270, file: !1131, line: 1612, column: 3)
!8270 = distinct !DILexicalBlock(scope: !8271, file: !1131, line: 1612, column: 3)
!8271 = distinct !DILexicalBlock(scope: !8260, file: !1131, line: 1608, column: 2)
!8272 = !DILocation(line: 1614, column: 1, scope: !8240)
!8273 = distinct !DISubprogram(name: "prvIdleTask", scope: !1131, file: !1131, line: 2653, type: !640, scopeLine: 2654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8274)
!8274 = !{!8275}
!8275 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !8273, file: !1131, line: 2653, type: !51)
!8276 = !DILocation(line: 0, scope: !8273)
!8277 = !DILocation(line: 2658, column: 2, scope: !8273)
!8278 = !DILocation(line: 2661, column: 3, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !1131, line: 2659, column: 2)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !1131, line: 2658, column: 2)
!8281 = distinct !DILexicalBlock(scope: !8273, file: !1131, line: 2658, column: 2)
!8282 = !DILocation(line: 2684, column: 8, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8284, file: !1131, line: 2684, column: 8)
!8284 = distinct !DILexicalBlock(scope: !8279, file: !1131, line: 2674, column: 3)
!8285 = !DILocation(line: 2684, column: 78, scope: !8283)
!8286 = !DILocation(line: 2684, column: 8, scope: !8284)
!8287 = distinct !{!8287, !8288, !8289}
!8288 = !DILocation(line: 2658, column: 2, scope: !8281)
!8289 = !DILocation(line: 2754, column: 2, scope: !8281)
!8290 = !DILocation(line: 2686, column: 5, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !1131, line: 2686, column: 5)
!8292 = distinct !DILexicalBlock(scope: !8283, file: !1131, line: 2685, column: 4)
!8293 = !{i64 2148488395}
!8294 = !{i64 2148488435}
!8295 = !DILocation(line: 2687, column: 4, scope: !8292)
!8296 = distinct !DISubprogram(name: "prvCheckTasksWaitingTermination", scope: !1131, file: !1131, line: 2950, type: !154, scopeLine: 2951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8297)
!8297 = !{!8298, !8300}
!8298 = !DILocalVariable(name: "xListIsEmpty", scope: !8299, file: !1131, line: 2954, type: !1160)
!8299 = distinct !DILexicalBlock(scope: !8296, file: !1131, line: 2953, column: 2)
!8300 = !DILocalVariable(name: "pxTCB", scope: !8301, file: !1131, line: 2968, type: !1161)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !1131, line: 2967, column: 4)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !1131, line: 2966, column: 8)
!8303 = distinct !DILexicalBlock(scope: !8299, file: !1131, line: 2959, column: 3)
!8304 = !DILocation(line: 2958, column: 10, scope: !8299)
!8305 = !DILocation(line: 2958, column: 25, scope: !8299)
!8306 = !DILocation(line: 2958, column: 3, scope: !8299)
!8307 = !DILocation(line: 2960, column: 4, scope: !8303)
!8308 = !DILocation(line: 2962, column: 20, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8303, file: !1131, line: 2961, column: 4)
!8310 = !DILocation(line: 0, scope: !8299)
!8311 = !DILocation(line: 2964, column: 13, scope: !8303)
!8312 = !DILocation(line: 2966, column: 8, scope: !8303)
!8313 = !DILocation(line: 2970, column: 5, scope: !8301)
!8314 = !DILocation(line: 2972, column: 26, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8301, file: !1131, line: 2971, column: 5)
!8316 = !DILocation(line: 0, scope: !8301)
!8317 = !DILocation(line: 2973, column: 39, scope: !8315)
!8318 = !DILocation(line: 2973, column: 15, scope: !8315)
!8319 = !DILocation(line: 2974, column: 6, scope: !8315)
!8320 = !DILocation(line: 2975, column: 6, scope: !8315)
!8321 = !DILocation(line: 2977, column: 5, scope: !8301)
!8322 = !DILocation(line: 2979, column: 5, scope: !8301)
!8323 = !DILocation(line: 2980, column: 4, scope: !8301)
!8324 = distinct !{!8324, !8306, !8325}
!8325 = !DILocation(line: 2985, column: 3, scope: !8299)
!8326 = !DILocation(line: 2988, column: 1, scope: !8296)
!8327 = distinct !DISubprogram(name: "prvDeleteTCB", scope: !1131, file: !1131, line: 3231, type: !8328, scopeLine: 3232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8330)
!8328 = !DISubroutineType(types: !8329)
!8329 = !{null, !1161}
!8330 = !{!8331}
!8331 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !8327, file: !1131, line: 3231, type: !1161)
!8332 = !DILocation(line: 0, scope: !8327)
!8333 = !DILocation(line: 3257, column: 4, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8327, file: !1131, line: 3256, column: 3)
!8335 = !DILocation(line: 3261, column: 14, scope: !8327)
!8336 = !DILocation(line: 3261, column: 3, scope: !8327)
!8337 = !DILocation(line: 3262, column: 2, scope: !8327)
!8338 = distinct !DISubprogram(name: "vTaskEndScheduler", scope: !1131, file: !1131, line: 1617, type: !154, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !1935)
!8339 = !DILocation(line: 215, column: 2, scope: !8255, inlinedAt: !8340)
!8340 = distinct !DILocation(line: 1622, column: 2, scope: !8338)
!8341 = !DILocation(line: 0, scope: !8255, inlinedAt: !8340)
!8342 = !DILocation(line: 1623, column: 20, scope: !8338)
!8343 = !DILocation(line: 1624, column: 2, scope: !8338)
!8344 = !DILocation(line: 1625, column: 1, scope: !8338)
!8345 = distinct !DISubprogram(name: "xTaskGetTickCount", scope: !1131, file: !1131, line: 1759, type: !8346, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8348)
!8346 = !DISubroutineType(types: !8347)
!8347 = !{!855}
!8348 = !{!8349}
!8349 = !DILocalVariable(name: "xTicks", scope: !8345, file: !1131, line: 1761, type: !855)
!8350 = !DILocation(line: 1766, column: 12, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8345, file: !1131, line: 1765, column: 2)
!8352 = !DILocation(line: 0, scope: !8345)
!8353 = !DILocation(line: 1770, column: 2, scope: !8345)
!8354 = distinct !DISubprogram(name: "xTaskGetTickCountFromISR", scope: !1131, file: !1131, line: 1774, type: !8346, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8355)
!8355 = !{!8356, !8357}
!8356 = !DILocalVariable(name: "xReturn", scope: !8354, file: !1131, line: 1776, type: !855)
!8357 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !8354, file: !1131, line: 1777, type: !1154)
!8358 = !DILocation(line: 1793, column: 2, scope: !8354)
!8359 = !DILocation(line: 0, scope: !8354)
!8360 = !DILocation(line: 1797, column: 13, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8354, file: !1131, line: 1796, column: 2)
!8362 = !DILocation(line: 1801, column: 2, scope: !8354)
!8363 = distinct !DISubprogram(name: "uxTaskGetNumberOfTasks", scope: !1131, file: !1131, line: 1805, type: !8364, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !1935)
!8364 = !DISubroutineType(types: !8365)
!8365 = !{!1154}
!8366 = !DILocation(line: 1809, column: 9, scope: !8363)
!8367 = !DILocation(line: 1809, column: 2, scope: !8363)
!8368 = distinct !DISubprogram(name: "pcTaskGetTaskName", scope: !1131, file: !1131, line: 1815, type: !8369, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8371)
!8369 = !DISubroutineType(types: !8370)
!8370 = !{!201, !1159}
!8371 = !{!8372, !8373}
!8372 = !DILocalVariable(name: "xTaskToQuery", arg: 1, scope: !8368, file: !1131, line: 1815, type: !1159)
!8373 = !DILocalVariable(name: "pxTCB", scope: !8368, file: !1131, line: 1817, type: !1161)
!8374 = !DILocation(line: 0, scope: !8368)
!8375 = !DILocation(line: 1820, column: 11, scope: !8368)
!8376 = !DILocation(line: 1821, column: 3, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8368, file: !1131, line: 1821, column: 3)
!8378 = !DILocation(line: 1821, column: 3, scope: !8368)
!8379 = !DILocation(line: 1821, column: 3, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8377, file: !1131, line: 1821, column: 3)
!8381 = !DILocation(line: 1822, column: 13, scope: !8368)
!8382 = !DILocation(line: 1822, column: 3, scope: !8368)
!8383 = distinct !DISubprogram(name: "uxTaskGetSystemState", scope: !1131, file: !1131, line: 1830, type: !8384, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8402)
!8384 = !DISubroutineType(types: !8385)
!8385 = !{!1154, !8386, !8400, !8401}
!8386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8387)
!8387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8388, size: 32)
!8388 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskStatus_t", file: !1139, line: 176, baseType: !8389)
!8389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTASK_STATUS", file: !1139, line: 166, size: 256, elements: !8390)
!8390 = !{!8391, !8392, !8393, !8394, !8396, !8397, !8398, !8399}
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !8389, file: !1139, line: 168, baseType: !1159, size: 32)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !8389, file: !1139, line: 169, baseType: !331, size: 32, offset: 32)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "xTaskNumber", scope: !8389, file: !1139, line: 170, baseType: !1154, size: 32, offset: 64)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "eCurrentState", scope: !8389, file: !1139, line: 171, baseType: !8395, size: 32, offset: 96)
!8395 = !DIDerivedType(tag: DW_TAG_typedef, name: "eTaskState", file: !1139, line: 119, baseType: !1138)
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "uxCurrentPriority", scope: !8389, file: !1139, line: 172, baseType: !1154, size: 32, offset: 128)
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !8389, file: !1139, line: 173, baseType: !1154, size: 32, offset: 160)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "ulRunTimeCounter", scope: !8389, file: !1139, line: 174, baseType: !61, size: 32, offset: 192)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "usStackHighWaterMark", scope: !8389, file: !1139, line: 175, baseType: !1155, size: 16, offset: 224)
!8400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1154)
!8401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2495)
!8402 = !{!8403, !8404, !8405, !8406, !8407}
!8403 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !8383, file: !1131, line: 1830, type: !8386)
!8404 = !DILocalVariable(name: "uxArraySize", arg: 2, scope: !8383, file: !1131, line: 1830, type: !8400)
!8405 = !DILocalVariable(name: "pulTotalRunTime", arg: 3, scope: !8383, file: !1131, line: 1830, type: !8401)
!8406 = !DILocalVariable(name: "uxTask", scope: !8383, file: !1131, line: 1832, type: !1154)
!8407 = !DILocalVariable(name: "uxQueue", scope: !8383, file: !1131, line: 1832, type: !1154)
!8408 = !DILocation(line: 0, scope: !8383)
!8409 = !DILocation(line: 1834, column: 3, scope: !8383)
!8410 = !DILocation(line: 1837, column: 23, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !1131, line: 1837, column: 8)
!8412 = distinct !DILexicalBlock(scope: !8383, file: !1131, line: 1835, column: 3)
!8413 = !DILocation(line: 1837, column: 20, scope: !8411)
!8414 = !DILocation(line: 1837, column: 8, scope: !8412)
!8415 = !DILocation(line: 1843, column: 13, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !1131, line: 1842, column: 5)
!8417 = distinct !DILexicalBlock(scope: !8411, file: !1131, line: 1838, column: 4)
!8418 = !DILocation(line: 1844, column: 48, scope: !8416)
!8419 = !DILocation(line: 1844, column: 82, scope: !8416)
!8420 = !DILocation(line: 1844, column: 16, scope: !8416)
!8421 = !DILocation(line: 1844, column: 13, scope: !8416)
!8422 = !DILocation(line: 1846, column: 22, scope: !8417)
!8423 = !DILocation(line: 1846, column: 5, scope: !8416)
!8424 = distinct !{!8424, !8425, !8426}
!8425 = !DILocation(line: 1841, column: 5, scope: !8417)
!8426 = !DILocation(line: 1846, column: 57, scope: !8417)
!8427 = !DILocation(line: 1850, column: 47, scope: !8417)
!8428 = !DILocation(line: 1850, column: 91, scope: !8417)
!8429 = !DILocation(line: 1850, column: 15, scope: !8417)
!8430 = !DILocation(line: 1850, column: 12, scope: !8417)
!8431 = !DILocation(line: 1851, column: 47, scope: !8417)
!8432 = !DILocation(line: 1851, column: 91, scope: !8417)
!8433 = !DILocation(line: 1851, column: 15, scope: !8417)
!8434 = !DILocation(line: 1851, column: 12, scope: !8417)
!8435 = !DILocation(line: 1857, column: 48, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8417, file: !1131, line: 1854, column: 5)
!8437 = !DILocation(line: 1857, column: 16, scope: !8436)
!8438 = !DILocation(line: 1857, column: 13, scope: !8436)
!8439 = !DILocation(line: 1865, column: 48, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8417, file: !1131, line: 1862, column: 5)
!8441 = !DILocation(line: 1865, column: 16, scope: !8440)
!8442 = !DILocation(line: 1865, column: 13, scope: !8440)
!8443 = !DILocation(line: 1882, column: 26, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8445, file: !1131, line: 1882, column: 10)
!8445 = distinct !DILexicalBlock(scope: !8417, file: !1131, line: 1881, column: 5)
!8446 = !DILocation(line: 1882, column: 10, scope: !8445)
!8447 = !DILocation(line: 1884, column: 24, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8444, file: !1131, line: 1883, column: 6)
!8449 = !DILocation(line: 1885, column: 6, scope: !8448)
!8450 = !DILocation(line: 1894, column: 12, scope: !8383)
!8451 = !DILocation(line: 1896, column: 3, scope: !8383)
!8452 = distinct !DISubprogram(name: "prvListTaskWithinSingleList", scope: !1131, file: !1131, line: 3098, type: !8453, scopeLine: 3099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8455)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{!1154, !8387, !1195, !8395}
!8455 = !{!8456, !8457, !8458, !8459, !8462, !8463, !8464, !8468}
!8456 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !8452, file: !1131, line: 3098, type: !8387)
!8457 = !DILocalVariable(name: "pxList", arg: 2, scope: !8452, file: !1131, line: 3098, type: !1195)
!8458 = !DILocalVariable(name: "eState", arg: 3, scope: !8452, file: !1131, line: 3098, type: !8395)
!8459 = !DILocalVariable(name: "pxNextTCB", scope: !8452, file: !1131, line: 3100, type: !8460)
!8460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8461, size: 32)
!8461 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1162)
!8462 = !DILocalVariable(name: "pxFirstTCB", scope: !8452, file: !1131, line: 3100, type: !8460)
!8463 = !DILocalVariable(name: "uxTask", scope: !8452, file: !1131, line: 3101, type: !1154)
!8464 = !DILocalVariable(name: "pxConstList", scope: !8465, file: !1131, line: 3105, type: !1223)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !1131, line: 3105, column: 4)
!8466 = distinct !DILexicalBlock(scope: !8467, file: !1131, line: 3104, column: 3)
!8467 = distinct !DILexicalBlock(scope: !8452, file: !1131, line: 3103, column: 7)
!8468 = !DILocalVariable(name: "pxConstList", scope: !8469, file: !1131, line: 3113, type: !1223)
!8469 = distinct !DILexicalBlock(scope: !8470, file: !1131, line: 3113, column: 5)
!8470 = distinct !DILexicalBlock(scope: !8466, file: !1131, line: 3112, column: 4)
!8471 = !DILocation(line: 0, scope: !8452)
!8472 = !DILocation(line: 3103, column: 7, scope: !8467)
!8473 = !DILocation(line: 3103, column: 41, scope: !8467)
!8474 = !DILocation(line: 3103, column: 7, scope: !8452)
!8475 = !DILocation(line: 0, scope: !8465)
!8476 = !DILocation(line: 3105, column: 4, scope: !8465)
!8477 = !DILocation(line: 3105, column: 4, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8465, file: !1131, line: 3105, column: 4)
!8479 = !DILocation(line: 3105, column: 4, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8478, file: !1131, line: 3105, column: 4)
!8481 = !DILocation(line: 3111, column: 4, scope: !8466)
!8482 = !DILocation(line: 3113, column: 5, scope: !8469)
!8483 = !DILocation(line: 0, scope: !8469)
!8484 = !DILocation(line: 3113, column: 5, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8469, file: !1131, line: 3113, column: 5)
!8486 = !DILocation(line: 3113, column: 5, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8485, file: !1131, line: 3113, column: 5)
!8488 = !DILocation(line: 3115, column: 33, scope: !8470)
!8489 = !DILocation(line: 3115, column: 41, scope: !8470)
!8490 = !DILocation(line: 3116, column: 77, scope: !8470)
!8491 = !DILocation(line: 3116, column: 33, scope: !8470)
!8492 = !DILocation(line: 3116, column: 44, scope: !8470)
!8493 = !DILocation(line: 3117, column: 58, scope: !8470)
!8494 = !DILocation(line: 3117, column: 33, scope: !8470)
!8495 = !DILocation(line: 3117, column: 45, scope: !8470)
!8496 = !DILocation(line: 3118, column: 33, scope: !8470)
!8497 = !DILocation(line: 3118, column: 47, scope: !8470)
!8498 = !DILocation(line: 3119, column: 64, scope: !8470)
!8499 = !DILocation(line: 3119, column: 33, scope: !8470)
!8500 = !DILocation(line: 3119, column: 51, scope: !8470)
!8501 = !DILocation(line: 3126, column: 10, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8470, file: !1131, line: 3122, column: 5)
!8503 = !DILocation(line: 3128, column: 11, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8505, file: !1131, line: 3128, column: 11)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !1131, line: 3127, column: 6)
!8506 = distinct !DILexicalBlock(scope: !8502, file: !1131, line: 3126, column: 10)
!8507 = !DILocation(line: 3128, column: 69, scope: !8504)
!8508 = !DILocation(line: 3128, column: 11, scope: !8505)
!8509 = !DILocation(line: 3130, column: 50, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8504, file: !1131, line: 3129, column: 7)
!8511 = !DILocation(line: 3131, column: 7, scope: !8510)
!8512 = !DILocation(line: 3138, column: 62, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8470, file: !1131, line: 3137, column: 5)
!8514 = !DILocation(line: 3138, column: 34, scope: !8513)
!8515 = !DILocation(line: 3138, column: 49, scope: !8513)
!8516 = !DILocation(line: 3152, column: 34, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8470, file: !1131, line: 3151, column: 5)
!8518 = !DILocation(line: 3152, column: 51, scope: !8517)
!8519 = !DILocation(line: 3162, column: 110, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8470, file: !1131, line: 3161, column: 5)
!8521 = !DILocation(line: 3162, column: 85, scope: !8520)
!8522 = !DILocation(line: 3162, column: 57, scope: !8520)
!8523 = !DILocation(line: 3162, column: 34, scope: !8520)
!8524 = !DILocation(line: 3162, column: 55, scope: !8520)
!8525 = !DILocation(line: 3166, column: 11, scope: !8470)
!8526 = !DILocation(line: 3168, column: 23, scope: !8466)
!8527 = !DILocation(line: 3168, column: 4, scope: !8470)
!8528 = distinct !{!8528, !8481, !8529}
!8529 = !DILocation(line: 3168, column: 37, scope: !8466)
!8530 = !DILocation(line: 3175, column: 3, scope: !8452)
!8531 = distinct !DISubprogram(name: "prvTaskCheckFreeStackSpace", scope: !1131, file: !1131, line: 3183, type: !8532, scopeLine: 3184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8534)
!8532 = !DISubroutineType(types: !8533)
!8533 = !{!1155, !2077}
!8534 = !{!8535, !8536}
!8535 = !DILocalVariable(name: "pucStackByte", arg: 1, scope: !8531, file: !1131, line: 3183, type: !2077)
!8536 = !DILocalVariable(name: "ulCount", scope: !8531, file: !1131, line: 3185, type: !61)
!8537 = !DILocation(line: 0, scope: !8531)
!8538 = !DILocation(line: 3187, column: 10, scope: !8531)
!8539 = !DILocation(line: 3187, column: 24, scope: !8531)
!8540 = !DILocation(line: 3187, column: 3, scope: !8531)
!8541 = !DILocation(line: 3189, column: 17, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8531, file: !1131, line: 3188, column: 3)
!8543 = !DILocation(line: 3190, column: 11, scope: !8542)
!8544 = distinct !{!8544, !8540, !8545}
!8545 = !DILocation(line: 3191, column: 3, scope: !8531)
!8546 = !DILocation(line: 3193, column: 11, scope: !8531)
!8547 = !DILocation(line: 3195, column: 3, scope: !8531)
!8548 = distinct !DISubprogram(name: "vTaskPlaceOnEventList", scope: !1131, file: !1131, line: 2258, type: !8549, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8551)
!8549 = !DISubroutineType(types: !8550)
!8550 = !{null, !1223, !7596}
!8551 = !{!8552, !8553, !8554}
!8552 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8548, file: !1131, line: 2258, type: !1223)
!8553 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !8548, file: !1131, line: 2258, type: !7596)
!8554 = !DILocalVariable(name: "xTimeToWake", scope: !8548, file: !1131, line: 2260, type: !855)
!8555 = !DILocation(line: 0, scope: !8548)
!8556 = !DILocation(line: 2262, column: 2, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8548, file: !1131, line: 2262, column: 2)
!8558 = !DILocation(line: 2262, column: 2, scope: !8548)
!8559 = !DILocation(line: 2262, column: 2, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8557, file: !1131, line: 2262, column: 2)
!8561 = !DILocation(line: 2271, column: 31, scope: !8548)
!8562 = !DILocation(line: 2271, column: 45, scope: !8548)
!8563 = !DILocation(line: 2271, column: 2, scope: !8548)
!8564 = !DILocation(line: 2276, column: 23, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8548, file: !1131, line: 2276, column: 6)
!8566 = !DILocation(line: 2276, column: 37, scope: !8565)
!8567 = !DILocation(line: 2276, column: 6, scope: !8565)
!8568 = !DILocation(line: 2276, column: 58, scope: !8565)
!8569 = !DILocation(line: 2276, column: 6, scope: !8548)
!8570 = !DILocation(line: 2280, column: 3, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8565, file: !1131, line: 2277, column: 2)
!8572 = !DILocation(line: 2281, column: 2, scope: !8571)
!8573 = !DILocation(line: 2289, column: 20, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !1131, line: 2289, column: 7)
!8575 = distinct !DILexicalBlock(scope: !8548, file: !1131, line: 2288, column: 2)
!8576 = !DILocation(line: 2289, column: 7, scope: !8575)
!8577 = !DILocation(line: 2294, column: 44, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8574, file: !1131, line: 2290, column: 3)
!8579 = !DILocation(line: 2294, column: 58, scope: !8578)
!8580 = !DILocation(line: 2294, column: 4, scope: !8578)
!8581 = !DILocation(line: 2295, column: 3, scope: !8578)
!8582 = !DILocation(line: 2301, column: 18, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8574, file: !1131, line: 2297, column: 3)
!8584 = !DILocation(line: 2301, column: 29, scope: !8583)
!8585 = !DILocation(line: 2302, column: 4, scope: !8583)
!8586 = !DILocation(line: 2314, column: 1, scope: !8548)
!8587 = distinct !DISubprogram(name: "vTaskPlaceOnUnorderedEventList", scope: !1131, file: !1131, line: 2317, type: !8588, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8590)
!8588 = !DISubroutineType(types: !8589)
!8589 = !{null, !1195, !7596, !7596}
!8590 = !{!8591, !8592, !8593, !8594}
!8591 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8587, file: !1131, line: 2317, type: !1195)
!8592 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !8587, file: !1131, line: 2317, type: !7596)
!8593 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !8587, file: !1131, line: 2317, type: !7596)
!8594 = !DILocalVariable(name: "xTimeToWake", scope: !8587, file: !1131, line: 2319, type: !855)
!8595 = !DILocation(line: 0, scope: !8587)
!8596 = !DILocation(line: 2321, column: 2, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8587, file: !1131, line: 2321, column: 2)
!8598 = !DILocation(line: 2321, column: 2, scope: !8587)
!8599 = !DILocation(line: 2321, column: 2, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8597, file: !1131, line: 2321, column: 2)
!8601 = !DILocation(line: 2325, column: 2, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8587, file: !1131, line: 2325, column: 2)
!8603 = !DILocation(line: 2325, column: 2, scope: !8587)
!8604 = !DILocation(line: 2325, column: 2, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8602, file: !1131, line: 2325, column: 2)
!8606 = !DILocation(line: 2330, column: 2, scope: !8587)
!8607 = !DILocation(line: 2337, column: 34, scope: !8587)
!8608 = !DILocation(line: 2337, column: 48, scope: !8587)
!8609 = !DILocation(line: 2337, column: 2, scope: !8587)
!8610 = !DILocation(line: 2342, column: 23, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8587, file: !1131, line: 2342, column: 6)
!8612 = !DILocation(line: 2342, column: 37, scope: !8611)
!8613 = !DILocation(line: 2342, column: 6, scope: !8611)
!8614 = !DILocation(line: 2342, column: 58, scope: !8611)
!8615 = !DILocation(line: 2342, column: 6, scope: !8587)
!8616 = !DILocation(line: 2346, column: 3, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8611, file: !1131, line: 2343, column: 2)
!8618 = !DILocation(line: 2347, column: 2, scope: !8617)
!8619 = !DILocation(line: 2355, column: 20, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8621, file: !1131, line: 2355, column: 7)
!8621 = distinct !DILexicalBlock(scope: !8587, file: !1131, line: 2354, column: 2)
!8622 = !DILocation(line: 2355, column: 7, scope: !8621)
!8623 = !DILocation(line: 2360, column: 44, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8620, file: !1131, line: 2356, column: 3)
!8625 = !DILocation(line: 2360, column: 58, scope: !8624)
!8626 = !DILocation(line: 2360, column: 4, scope: !8624)
!8627 = !DILocation(line: 2361, column: 3, scope: !8624)
!8628 = !DILocation(line: 2367, column: 18, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8620, file: !1131, line: 2363, column: 3)
!8630 = !DILocation(line: 2367, column: 29, scope: !8629)
!8631 = !DILocation(line: 2368, column: 4, scope: !8629)
!8632 = !DILocation(line: 2380, column: 1, scope: !8587)
!8633 = distinct !DISubprogram(name: "vTaskPlaceOnEventListRestricted", scope: !1131, file: !1131, line: 2385, type: !8549, scopeLine: 2386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8634)
!8634 = !{!8635, !8636, !8637}
!8635 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8633, file: !1131, line: 2385, type: !1223)
!8636 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !8633, file: !1131, line: 2385, type: !7596)
!8637 = !DILocalVariable(name: "xTimeToWake", scope: !8633, file: !1131, line: 2387, type: !855)
!8638 = !DILocation(line: 0, scope: !8633)
!8639 = !DILocation(line: 2389, column: 3, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8633, file: !1131, line: 2389, column: 3)
!8641 = !DILocation(line: 2389, column: 3, scope: !8633)
!8642 = !DILocation(line: 2389, column: 3, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8640, file: !1131, line: 2389, column: 3)
!8644 = !DILocation(line: 2401, column: 35, scope: !8633)
!8645 = !DILocation(line: 2401, column: 49, scope: !8633)
!8646 = !DILocation(line: 2401, column: 3, scope: !8633)
!8647 = !DILocation(line: 2406, column: 24, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8633, file: !1131, line: 2406, column: 7)
!8649 = !DILocation(line: 2406, column: 38, scope: !8648)
!8650 = !DILocation(line: 2406, column: 7, scope: !8648)
!8651 = !DILocation(line: 2406, column: 59, scope: !8648)
!8652 = !DILocation(line: 2406, column: 7, scope: !8633)
!8653 = !DILocation(line: 2410, column: 4, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8648, file: !1131, line: 2407, column: 3)
!8655 = !DILocation(line: 2411, column: 3, scope: !8654)
!8656 = !DILocation(line: 2419, column: 17, scope: !8633)
!8657 = !DILocation(line: 2419, column: 28, scope: !8633)
!8658 = !DILocation(line: 2422, column: 3, scope: !8633)
!8659 = !DILocation(line: 2423, column: 2, scope: !8633)
!8660 = distinct !DISubprogram(name: "xTaskRemoveFromEventList", scope: !1131, file: !1131, line: 2428, type: !8661, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8666)
!8661 = !DISubroutineType(types: !8662)
!8662 = !{!1160, !8663}
!8663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8664)
!8664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8665, size: 32)
!8665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1196)
!8666 = !{!8667, !8668, !8669}
!8667 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !8660, file: !1131, line: 2428, type: !8663)
!8668 = !DILocalVariable(name: "pxUnblockedTCB", scope: !8660, file: !1131, line: 2430, type: !1161)
!8669 = !DILocalVariable(name: "xReturn", scope: !8660, file: !1131, line: 2431, type: !1160)
!8670 = !DILocation(line: 0, scope: !8660)
!8671 = !DILocation(line: 2446, column: 31, scope: !8660)
!8672 = !DILocation(line: 2447, column: 2, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8660, file: !1131, line: 2447, column: 2)
!8674 = !DILocation(line: 2447, column: 2, scope: !8660)
!8675 = !DILocation(line: 2447, column: 2, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8673, file: !1131, line: 2447, column: 2)
!8677 = !DILocation(line: 2448, column: 44, scope: !8660)
!8678 = !DILocation(line: 2448, column: 11, scope: !8660)
!8679 = !DILocation(line: 2450, column: 6, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8660, file: !1131, line: 2450, column: 6)
!8681 = !DILocation(line: 2450, column: 27, scope: !8680)
!8682 = !DILocation(line: 2450, column: 6, scope: !8660)
!8683 = !DILocation(line: 2452, column: 45, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8680, file: !1131, line: 2451, column: 2)
!8685 = !DILocation(line: 2452, column: 12, scope: !8684)
!8686 = !DILocation(line: 2453, column: 3, scope: !8684)
!8687 = !DILocation(line: 2454, column: 2, scope: !8684)
!8688 = !DILocation(line: 2459, column: 3, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8680, file: !1131, line: 2456, column: 2)
!8690 = !DILocation(line: 2462, column: 22, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8660, file: !1131, line: 2462, column: 6)
!8692 = !DILocation(line: 2462, column: 35, scope: !8691)
!8693 = !DILocation(line: 2462, column: 49, scope: !8691)
!8694 = !DILocation(line: 2462, column: 33, scope: !8691)
!8695 = !DILocation(line: 2462, column: 6, scope: !8660)
!8696 = !DILocation(line: 2471, column: 17, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8691, file: !1131, line: 2463, column: 2)
!8698 = !DILocation(line: 2472, column: 2, scope: !8697)
!8699 = !DILocation(line: 0, scope: !8691)
!8700 = !DILocation(line: 2492, column: 2, scope: !8660)
!8701 = distinct !DISubprogram(name: "xTaskRemoveFromUnorderedEventList", scope: !1131, file: !1131, line: 2496, type: !8702, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8704)
!8702 = !DISubroutineType(types: !8703)
!8703 = !{!1160, !1201, !7596}
!8704 = !{!8705, !8706, !8707, !8708}
!8705 = !DILocalVariable(name: "pxEventListItem", arg: 1, scope: !8701, file: !1131, line: 2496, type: !1201)
!8706 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !8701, file: !1131, line: 2496, type: !7596)
!8707 = !DILocalVariable(name: "pxUnblockedTCB", scope: !8701, file: !1131, line: 2498, type: !1161)
!8708 = !DILocalVariable(name: "xReturn", scope: !8701, file: !1131, line: 2499, type: !1160)
!8709 = !DILocation(line: 0, scope: !8701)
!8710 = !DILocation(line: 2503, column: 2, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8701, file: !1131, line: 2503, column: 2)
!8712 = !DILocation(line: 2503, column: 2, scope: !8701)
!8713 = !DILocation(line: 2503, column: 2, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8711, file: !1131, line: 2503, column: 2)
!8715 = !DILocation(line: 2506, column: 2, scope: !8701)
!8716 = !DILocation(line: 2510, column: 31, scope: !8701)
!8717 = !DILocation(line: 2511, column: 2, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8701, file: !1131, line: 2511, column: 2)
!8719 = !DILocation(line: 2511, column: 2, scope: !8701)
!8720 = !DILocation(line: 2511, column: 2, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8718, file: !1131, line: 2511, column: 2)
!8722 = !DILocation(line: 2512, column: 11, scope: !8701)
!8723 = !DILocation(line: 2517, column: 44, scope: !8701)
!8724 = !DILocation(line: 2517, column: 11, scope: !8701)
!8725 = !DILocation(line: 2518, column: 2, scope: !8701)
!8726 = !DILocation(line: 2520, column: 22, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8701, file: !1131, line: 2520, column: 6)
!8728 = !DILocation(line: 2520, column: 35, scope: !8727)
!8729 = !DILocation(line: 2520, column: 49, scope: !8727)
!8730 = !DILocation(line: 2520, column: 33, scope: !8727)
!8731 = !DILocation(line: 2520, column: 6, scope: !8701)
!8732 = !DILocation(line: 2530, column: 17, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8727, file: !1131, line: 2521, column: 2)
!8734 = !DILocation(line: 2531, column: 2, scope: !8733)
!8735 = !DILocation(line: 0, scope: !8727)
!8736 = !DILocation(line: 2537, column: 2, scope: !8701)
!8737 = distinct !DISubprogram(name: "vTaskSetTimeOutState", scope: !1131, file: !1131, line: 2541, type: !8738, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8747)
!8738 = !DISubroutineType(types: !8739)
!8739 = !{null, !8740}
!8740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8741)
!8741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8742, size: 32)
!8742 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !1139, line: 138, baseType: !8743)
!8743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !1139, line: 134, size: 64, elements: !8744)
!8744 = !{!8745, !8746}
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !8743, file: !1139, line: 136, baseType: !1160, size: 32)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !8743, file: !1139, line: 137, baseType: !855, size: 32, offset: 32)
!8747 = !{!8748}
!8748 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !8737, file: !1131, line: 2541, type: !8740)
!8749 = !DILocation(line: 0, scope: !8737)
!8750 = !DILocation(line: 2543, column: 2, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8737, file: !1131, line: 2543, column: 2)
!8752 = !DILocation(line: 2543, column: 2, scope: !8737)
!8753 = !DILocation(line: 2543, column: 2, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8751, file: !1131, line: 2543, column: 2)
!8755 = !DILocation(line: 2544, column: 30, scope: !8737)
!8756 = !DILocation(line: 2544, column: 13, scope: !8737)
!8757 = !DILocation(line: 2544, column: 28, scope: !8737)
!8758 = !DILocation(line: 2545, column: 31, scope: !8737)
!8759 = !DILocation(line: 2545, column: 13, scope: !8737)
!8760 = !DILocation(line: 2545, column: 29, scope: !8737)
!8761 = !DILocation(line: 2546, column: 1, scope: !8737)
!8762 = distinct !DISubprogram(name: "xTaskCheckForTimeOut", scope: !1131, file: !1131, line: 2549, type: !8763, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8765)
!8763 = !DISubroutineType(types: !8764)
!8764 = !{!1160, !8740, !7594}
!8765 = !{!8766, !8767, !8768, !8769}
!8766 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !8762, file: !1131, line: 2549, type: !8740)
!8767 = !DILocalVariable(name: "pxTicksToWait", arg: 2, scope: !8762, file: !1131, line: 2549, type: !7594)
!8768 = !DILocalVariable(name: "xReturn", scope: !8762, file: !1131, line: 2551, type: !1160)
!8769 = !DILocalVariable(name: "xConstTickCount", scope: !8770, file: !1131, line: 2559, type: !7596)
!8770 = distinct !DILexicalBlock(scope: !8762, file: !1131, line: 2557, column: 2)
!8771 = !DILocation(line: 0, scope: !8762)
!8772 = !DILocation(line: 2553, column: 2, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8762, file: !1131, line: 2553, column: 2)
!8774 = !DILocation(line: 2553, column: 2, scope: !8762)
!8775 = !DILocation(line: 2553, column: 2, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8773, file: !1131, line: 2553, column: 2)
!8777 = !DILocation(line: 2554, column: 2, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8762, file: !1131, line: 2554, column: 2)
!8779 = !DILocation(line: 2554, column: 2, scope: !8762)
!8780 = !DILocation(line: 2554, column: 2, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8778, file: !1131, line: 2554, column: 2)
!8782 = !DILocation(line: 2556, column: 2, scope: !8762)
!8783 = !DILocation(line: 2559, column: 38, scope: !8770)
!8784 = !DILocation(line: 0, scope: !8770)
!8785 = !DILocation(line: 2565, column: 8, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8770, file: !1131, line: 2565, column: 8)
!8787 = !DILocation(line: 2565, column: 23, scope: !8786)
!8788 = !DILocation(line: 2565, column: 8, scope: !8770)
!8789 = !DILocation(line: 2572, column: 9, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8786, file: !1131, line: 2572, column: 7)
!8791 = !DILocation(line: 2572, column: 39, scope: !8790)
!8792 = !DILocation(line: 2572, column: 25, scope: !8790)
!8793 = !DILocation(line: 0, scope: !8790)
!8794 = !DILocation(line: 2572, column: 56, scope: !8790)
!8795 = !DILocation(line: 2580, column: 30, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8790, file: !1131, line: 2580, column: 12)
!8797 = !DILocation(line: 2580, column: 61, scope: !8796)
!8798 = !DILocation(line: 2580, column: 12, scope: !8790)
!8799 = !DILocation(line: 2583, column: 19, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8796, file: !1131, line: 2581, column: 3)
!8801 = !DILocation(line: 2584, column: 4, scope: !8800)
!8802 = !DILocation(line: 2586, column: 3, scope: !8800)
!8803 = !DILocation(line: 0, scope: !8786)
!8804 = !DILocation(line: 2592, column: 2, scope: !8762)
!8805 = !DILocation(line: 2594, column: 2, scope: !8762)
!8806 = distinct !DISubprogram(name: "vTaskMissedYield", scope: !1131, file: !1131, line: 2598, type: !154, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !1935)
!8807 = !DILocation(line: 2600, column: 16, scope: !8806)
!8808 = !DILocation(line: 2601, column: 1, scope: !8806)
!8809 = distinct !DISubprogram(name: "uxTaskGetTaskNumber", scope: !1131, file: !1131, line: 2606, type: !7892, scopeLine: 2607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8810)
!8810 = !{!8811, !8812, !8813}
!8811 = !DILocalVariable(name: "xTask", arg: 1, scope: !8809, file: !1131, line: 2606, type: !1159)
!8812 = !DILocalVariable(name: "uxReturn", scope: !8809, file: !1131, line: 2608, type: !1154)
!8813 = !DILocalVariable(name: "pxTCB", scope: !8809, file: !1131, line: 2609, type: !1161)
!8814 = !DILocation(line: 0, scope: !8809)
!8815 = !DILocation(line: 2611, column: 13, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8809, file: !1131, line: 2611, column: 7)
!8817 = !DILocation(line: 2611, column: 7, scope: !8809)
!8818 = !DILocation(line: 2614, column: 22, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8816, file: !1131, line: 2612, column: 3)
!8820 = !DILocation(line: 2615, column: 3, scope: !8819)
!8821 = !DILocation(line: 0, scope: !8816)
!8822 = !DILocation(line: 2621, column: 3, scope: !8809)
!8823 = distinct !DISubprogram(name: "vTaskSetTaskNumber", scope: !1131, file: !1131, line: 2629, type: !8824, scopeLine: 2630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8826)
!8824 = !DISubroutineType(types: !8825)
!8825 = !{null, !1159, !8400}
!8826 = !{!8827, !8828, !8829}
!8827 = !DILocalVariable(name: "xTask", arg: 1, scope: !8823, file: !1131, line: 2629, type: !1159)
!8828 = !DILocalVariable(name: "uxHandle", arg: 2, scope: !8823, file: !1131, line: 2629, type: !8400)
!8829 = !DILocalVariable(name: "pxTCB", scope: !8823, file: !1131, line: 2631, type: !1161)
!8830 = !DILocation(line: 0, scope: !8823)
!8831 = !DILocation(line: 2633, column: 13, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8823, file: !1131, line: 2633, column: 7)
!8833 = !DILocation(line: 2633, column: 7, scope: !8823)
!8834 = !DILocation(line: 2636, column: 11, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8832, file: !1131, line: 2634, column: 3)
!8836 = !DILocation(line: 2636, column: 24, scope: !8835)
!8837 = !DILocation(line: 2637, column: 3, scope: !8835)
!8838 = !DILocation(line: 2638, column: 2, scope: !8823)
!8839 = distinct !DISubprogram(name: "uxTaskGetStackHighWaterMark", scope: !1131, file: !1131, line: 3203, type: !7892, scopeLine: 3204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8840)
!8840 = !{!8841, !8842, !8843, !8844}
!8841 = !DILocalVariable(name: "xTask", arg: 1, scope: !8839, file: !1131, line: 3203, type: !1159)
!8842 = !DILocalVariable(name: "pxTCB", scope: !8839, file: !1131, line: 3205, type: !1161)
!8843 = !DILocalVariable(name: "pucEndOfStack", scope: !8839, file: !1131, line: 3206, type: !210)
!8844 = !DILocalVariable(name: "uxReturn", scope: !8839, file: !1131, line: 3207, type: !1154)
!8845 = !DILocation(line: 0, scope: !8839)
!8846 = !DILocation(line: 3209, column: 11, scope: !8839)
!8847 = !DILocation(line: 3213, column: 41, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8839, file: !1131, line: 3212, column: 3)
!8849 = !DILocation(line: 3221, column: 30, scope: !8839)
!8850 = !DILocation(line: 3221, column: 14, scope: !8839)
!8851 = !DILocation(line: 3223, column: 3, scope: !8839)
!8852 = distinct !DISubprogram(name: "xTaskGetCurrentTaskHandle", scope: !1131, file: !1131, line: 3294, type: !8853, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8855)
!8853 = !DISubroutineType(types: !8854)
!8854 = !{!1159}
!8855 = !{!8856}
!8856 = !DILocalVariable(name: "xReturn", scope: !8852, file: !1131, line: 3296, type: !1159)
!8857 = !DILocation(line: 3301, column: 13, scope: !8852)
!8858 = !DILocation(line: 0, scope: !8852)
!8859 = !DILocation(line: 3303, column: 3, scope: !8852)
!8860 = distinct !DISubprogram(name: "xTaskGetSchedulerState", scope: !1131, file: !1131, line: 3311, type: !7696, scopeLine: 3312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8861)
!8861 = !{!8862}
!8862 = !DILocalVariable(name: "xReturn", scope: !8860, file: !1131, line: 3313, type: !1160)
!8863 = !DILocation(line: 3315, column: 7, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8860, file: !1131, line: 3315, column: 7)
!8865 = !DILocation(line: 3315, column: 25, scope: !8864)
!8866 = !DILocation(line: 3315, column: 7, scope: !8860)
!8867 = !DILocation(line: 3321, column: 8, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8869, file: !1131, line: 3321, column: 8)
!8869 = distinct !DILexicalBlock(scope: !8864, file: !1131, line: 3320, column: 3)
!8870 = !DILocation(line: 3321, column: 29, scope: !8868)
!8871 = !DILocation(line: 0, scope: !8864)
!8872 = !DILocation(line: 0, scope: !8860)
!8873 = !DILocation(line: 3331, column: 3, scope: !8860)
!8874 = distinct !DISubprogram(name: "vTaskPriorityInherit", scope: !1131, file: !1131, line: 3339, type: !8875, scopeLine: 3340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8877)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{null, !8172}
!8877 = !{!8878, !8879}
!8878 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !8874, file: !1131, line: 3339, type: !8172)
!8879 = !DILocalVariable(name: "pxTCB", scope: !8874, file: !1131, line: 3341, type: !7451)
!8880 = !DILocation(line: 0, scope: !8874)
!8881 = !DILocation(line: 3345, column: 21, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8874, file: !1131, line: 3345, column: 7)
!8883 = !DILocation(line: 3345, column: 7, scope: !8874)
!8884 = !DILocation(line: 3347, column: 15, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8886, file: !1131, line: 3347, column: 8)
!8886 = distinct !DILexicalBlock(scope: !8882, file: !1131, line: 3346, column: 3)
!8887 = !DILocation(line: 3347, column: 28, scope: !8885)
!8888 = !DILocation(line: 3347, column: 42, scope: !8885)
!8889 = !DILocation(line: 3347, column: 26, scope: !8885)
!8890 = !DILocation(line: 3347, column: 8, scope: !8886)
!8891 = !DILocation(line: 3352, column: 11, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8893, file: !1131, line: 3352, column: 9)
!8893 = distinct !DILexicalBlock(scope: !8885, file: !1131, line: 3348, column: 4)
!8894 = !DILocation(line: 3352, column: 102, scope: !8892)
!8895 = !DILocation(line: 3352, column: 9, scope: !8893)
!8896 = !DILocation(line: 3354, column: 6, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8892, file: !1131, line: 3353, column: 5)
!8898 = !DILocation(line: 3355, column: 5, scope: !8897)
!8899 = !DILocation(line: 3363, column: 9, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8893, file: !1131, line: 3363, column: 9)
!8901 = !DILocation(line: 3363, column: 9, scope: !8893)
!8902 = !DILocation(line: 3365, column: 10, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8904, file: !1131, line: 3365, column: 10)
!8904 = distinct !DILexicalBlock(scope: !8900, file: !1131, line: 3364, column: 5)
!8905 = !DILocation(line: 3365, column: 55, scope: !8903)
!8906 = !DILocation(line: 3365, column: 10, scope: !8904)
!8907 = !DILocation(line: 3367, column: 7, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8909, file: !1131, line: 3367, column: 7)
!8909 = distinct !DILexicalBlock(scope: !8910, file: !1131, line: 3367, column: 7)
!8910 = distinct !DILexicalBlock(scope: !8903, file: !1131, line: 3366, column: 6)
!8911 = !DILocation(line: 3367, column: 7, scope: !8909)
!8912 = !DILocation(line: 3367, column: 7, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8908, file: !1131, line: 3367, column: 7)
!8914 = !DILocation(line: 3375, column: 26, scope: !8904)
!8915 = !DILocation(line: 3375, column: 40, scope: !8904)
!8916 = !DILocation(line: 3375, column: 24, scope: !8904)
!8917 = !DILocation(line: 3376, column: 6, scope: !8904)
!8918 = !DILocation(line: 3377, column: 5, scope: !8904)
!8919 = !DILocation(line: 3381, column: 26, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8900, file: !1131, line: 3379, column: 5)
!8921 = !DILocation(line: 3381, column: 40, scope: !8920)
!8922 = !DILocation(line: 3381, column: 24, scope: !8920)
!8923 = !DILocation(line: 3395, column: 2, scope: !8874)
!8924 = distinct !DISubprogram(name: "xTaskPriorityDisinherit", scope: !1131, file: !1131, line: 3402, type: !8170, scopeLine: 3403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8925)
!8925 = !{!8926, !8927, !8928}
!8926 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !8924, file: !1131, line: 3402, type: !8172)
!8927 = !DILocalVariable(name: "pxTCB", scope: !8924, file: !1131, line: 3404, type: !7451)
!8928 = !DILocalVariable(name: "xReturn", scope: !8924, file: !1131, line: 3405, type: !1160)
!8929 = !DILocation(line: 0, scope: !8924)
!8930 = !DILocation(line: 3407, column: 21, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8924, file: !1131, line: 3407, column: 7)
!8932 = !DILocation(line: 3407, column: 7, scope: !8924)
!8933 = !DILocation(line: 3409, column: 4, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8935, file: !1131, line: 3409, column: 4)
!8935 = distinct !DILexicalBlock(scope: !8931, file: !1131, line: 3408, column: 3)
!8936 = !DILocation(line: 3409, column: 4, scope: !8935)
!8937 = !DILocation(line: 3409, column: 4, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8934, file: !1131, line: 3409, column: 4)
!8939 = !DILocation(line: 3410, column: 28, scope: !8935)
!8940 = !DILocation(line: 3412, column: 15, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8935, file: !1131, line: 3412, column: 8)
!8942 = !DILocation(line: 3412, column: 36, scope: !8941)
!8943 = !DILocation(line: 3412, column: 26, scope: !8941)
!8944 = !DILocation(line: 3412, column: 8, scope: !8935)
!8945 = !DILocation(line: 3422, column: 34, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8947, file: !1131, line: 3422, column: 10)
!8947 = distinct !DILexicalBlock(scope: !8948, file: !1131, line: 3416, column: 5)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !1131, line: 3415, column: 9)
!8949 = distinct !DILexicalBlock(scope: !8941, file: !1131, line: 3413, column: 4)
!8950 = !DILocation(line: 3422, column: 10, scope: !8946)
!8951 = !DILocation(line: 3422, column: 55, scope: !8946)
!8952 = !DILocation(line: 3422, column: 10, scope: !8947)
!8953 = !DILocation(line: 3424, column: 7, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8955, file: !1131, line: 3424, column: 7)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !1131, line: 3424, column: 7)
!8956 = distinct !DILexicalBlock(scope: !8946, file: !1131, line: 3423, column: 6)
!8957 = !DILocation(line: 3424, column: 7, scope: !8955)
!8958 = !DILocation(line: 3424, column: 7, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8954, file: !1131, line: 3424, column: 7)
!8960 = !DILocation(line: 3434, column: 33, scope: !8947)
!8961 = !DILocation(line: 3434, column: 24, scope: !8947)
!8962 = !DILocation(line: 3439, column: 6, scope: !8947)
!8963 = !DILocation(line: 3440, column: 6, scope: !8947)
!8964 = !DILocation(line: 3451, column: 5, scope: !8947)
!8965 = !DILocation(line: 3467, column: 3, scope: !8924)
!8966 = distinct !DISubprogram(name: "vTaskList", scope: !1131, file: !1131, line: 3565, type: !8967, scopeLine: 3566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !8969)
!8967 = !DISubroutineType(types: !8968)
!8968 = !{null, !201}
!8969 = !{!8970, !8971, !8972, !8973, !8974}
!8970 = !DILocalVariable(name: "pcWriteBuffer", arg: 1, scope: !8966, file: !1131, line: 3565, type: !201)
!8971 = !DILocalVariable(name: "pxTaskStatusArray", scope: !8966, file: !1131, line: 3567, type: !8387)
!8972 = !DILocalVariable(name: "uxArraySize", scope: !8966, file: !1131, line: 3568, type: !1244)
!8973 = !DILocalVariable(name: "x", scope: !8966, file: !1131, line: 3568, type: !1244)
!8974 = !DILocalVariable(name: "cStatus", scope: !8966, file: !1131, line: 3569, type: !202)
!8975 = !DILocation(line: 0, scope: !8966)
!8976 = !DILocation(line: 3568, column: 2, scope: !8966)
!8977 = !DILocation(line: 3568, column: 23, scope: !8966)
!8978 = !DILocation(line: 3568, column: 36, scope: !8966)
!8979 = !DILocation(line: 3597, column: 18, scope: !8966)
!8980 = !DILocation(line: 3601, column: 17, scope: !8966)
!8981 = !DILocation(line: 3601, column: 15, scope: !8966)
!8982 = !DILocation(line: 3604, column: 37, scope: !8966)
!8983 = !DILocation(line: 3604, column: 60, scope: !8966)
!8984 = !DILocation(line: 3604, column: 23, scope: !8966)
!8985 = !DILocation(line: 3606, column: 25, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8966, file: !1131, line: 3606, column: 7)
!8987 = !DILocation(line: 3606, column: 7, scope: !8966)
!8988 = !DILocation(line: 3609, column: 59, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8986, file: !1131, line: 3607, column: 3)
!8990 = !DILocation(line: 3609, column: 18, scope: !8989)
!8991 = !DILocation(line: 3609, column: 16, scope: !8989)
!8992 = !DILocation(line: 3612, column: 11, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8989, file: !1131, line: 3612, column: 4)
!8994 = !DILocation(line: 3612, column: 16, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8993, file: !1131, line: 3612, column: 4)
!8996 = !DILocation(line: 3612, column: 20, scope: !8995)
!8997 = !DILocation(line: 3612, column: 18, scope: !8995)
!8998 = !DILocation(line: 3612, column: 4, scope: !8993)
!8999 = !DILocation(line: 3614, column: 32, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8995, file: !1131, line: 3613, column: 4)
!9001 = !DILocation(line: 3614, column: 36, scope: !9000)
!9002 = !DILocation(line: 3614, column: 5, scope: !9000)
!9003 = !DILocation(line: 3636, column: 77, scope: !9000)
!9004 = !DILocation(line: 3636, column: 81, scope: !9000)
!9005 = !DILocation(line: 3636, column: 21, scope: !9000)
!9006 = !DILocation(line: 3639, column: 98, scope: !9000)
!9007 = !DILocation(line: 3639, column: 102, scope: !9000)
!9008 = !DILocation(line: 3639, column: 157, scope: !9000)
!9009 = !DILocation(line: 3639, column: 161, scope: !9000)
!9010 = !DILocation(line: 3639, column: 121, scope: !9000)
!9011 = !DILocation(line: 3639, column: 219, scope: !9000)
!9012 = !DILocation(line: 3639, column: 223, scope: !9000)
!9013 = !DILocation(line: 3639, column: 5, scope: !9000)
!9014 = !DILocation(line: 3640, column: 22, scope: !9000)
!9015 = !DILocation(line: 3640, column: 19, scope: !9000)
!9016 = !DILocation(line: 3612, column: 34, scope: !8995)
!9017 = distinct !{!9017, !8998, !9018}
!9018 = !DILocation(line: 3641, column: 4, scope: !8993)
!9019 = !DILocation(line: 3644, column: 4, scope: !8989)
!9020 = !DILocation(line: 3645, column: 3, scope: !8989)
!9021 = !DILocation(line: 3650, column: 2, scope: !8966)
!9022 = distinct !DISubprogram(name: "prvWriteNameToBuffer", scope: !1131, file: !1131, line: 3539, type: !9023, scopeLine: 3540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9025)
!9023 = !DISubroutineType(types: !9024)
!9024 = !{!201, !201, !331}
!9025 = !{!9026, !9027, !9028}
!9026 = !DILocalVariable(name: "pcBuffer", arg: 1, scope: !9022, file: !1131, line: 3539, type: !201)
!9027 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !9022, file: !1131, line: 3539, type: !331)
!9028 = !DILocalVariable(name: "x", scope: !9022, file: !1131, line: 3541, type: !1160)
!9029 = !DILocation(line: 0, scope: !9022)
!9030 = !DILocation(line: 3544, column: 3, scope: !9022)
!9031 = !DILocation(line: 3548, column: 12, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9022, file: !1131, line: 3548, column: 3)
!9033 = !DILocation(line: 3548, column: 34, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9032, file: !1131, line: 3548, column: 3)
!9035 = !DILocation(line: 3548, column: 3, scope: !9032)
!9036 = !DILocation(line: 3550, column: 4, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9034, file: !1131, line: 3549, column: 3)
!9038 = !DILocation(line: 3550, column: 18, scope: !9037)
!9039 = !DILocation(line: 3548, column: 70, scope: !9034)
!9040 = distinct !{!9040, !9035, !9041}
!9041 = !DILocation(line: 3551, column: 3, scope: !9032)
!9042 = !DILocation(line: 0, scope: !9032)
!9043 = !DILocation(line: 3554, column: 3, scope: !9022)
!9044 = !DILocation(line: 3554, column: 17, scope: !9022)
!9045 = !DILocation(line: 3557, column: 3, scope: !9022)
!9046 = distinct !DISubprogram(name: "uxTaskResetEventItemValue", scope: !1131, file: !1131, line: 3779, type: !8346, scopeLine: 3780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9047)
!9047 = !{!9048}
!9048 = !DILocalVariable(name: "uxReturn", scope: !9046, file: !1131, line: 3781, type: !855)
!9049 = !DILocation(line: 3783, column: 13, scope: !9046)
!9050 = !DILocation(line: 0, scope: !9046)
!9051 = !DILocation(line: 3787, column: 2, scope: !9046)
!9052 = !DILocation(line: 3789, column: 2, scope: !9046)
!9053 = distinct !DISubprogram(name: "pvTaskIncrementMutexHeldCount", scope: !1131, file: !1131, line: 3795, type: !9054, scopeLine: 3796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !1935)
!9054 = !DISubroutineType(types: !1856)
!9055 = !DILocation(line: 3799, column: 7, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9053, file: !1131, line: 3799, column: 7)
!9057 = !DILocation(line: 3799, column: 20, scope: !9056)
!9058 = !DILocation(line: 3799, column: 7, scope: !9053)
!9059 = !DILocation(line: 3801, column: 6, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9056, file: !1131, line: 3800, column: 3)
!9061 = !DILocation(line: 3801, column: 20, scope: !9060)
!9062 = !DILocation(line: 3801, column: 35, scope: !9060)
!9063 = !DILocation(line: 3802, column: 3, scope: !9060)
!9064 = !DILocation(line: 3804, column: 10, scope: !9053)
!9065 = !DILocation(line: 3804, column: 3, scope: !9053)
!9066 = distinct !DISubprogram(name: "ulTaskNotifyTake", scope: !1131, file: !1131, line: 3812, type: !9067, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9069)
!9067 = !DISubroutineType(types: !9068)
!9068 = !{!61, !1160, !855}
!9069 = !{!9070, !9071, !9072, !9073}
!9070 = !DILocalVariable(name: "xClearCountOnExit", arg: 1, scope: !9066, file: !1131, line: 3812, type: !1160)
!9071 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !9066, file: !1131, line: 3812, type: !855)
!9072 = !DILocalVariable(name: "xTimeToWake", scope: !9066, file: !1131, line: 3814, type: !855)
!9073 = !DILocalVariable(name: "ulReturn", scope: !9066, file: !1131, line: 3815, type: !61)
!9074 = !DILocation(line: 0, scope: !9066)
!9075 = !DILocation(line: 3817, column: 3, scope: !9066)
!9076 = !DILocation(line: 3820, column: 8, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9078, file: !1131, line: 3820, column: 8)
!9078 = distinct !DILexicalBlock(scope: !9066, file: !1131, line: 3818, column: 3)
!9079 = !DILocation(line: 3820, column: 22, scope: !9077)
!9080 = !DILocation(line: 3820, column: 38, scope: !9077)
!9081 = !DILocation(line: 3820, column: 8, scope: !9078)
!9082 = !DILocation(line: 3823, column: 5, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9077, file: !1131, line: 3821, column: 4)
!9084 = !DILocation(line: 3823, column: 19, scope: !9083)
!9085 = !DILocation(line: 3823, column: 32, scope: !9083)
!9086 = !DILocation(line: 3825, column: 22, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9083, file: !1131, line: 3825, column: 9)
!9088 = !DILocation(line: 3825, column: 9, scope: !9083)
!9089 = !DILocation(line: 3829, column: 27, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9091, file: !1131, line: 3829, column: 10)
!9091 = distinct !DILexicalBlock(scope: !9087, file: !1131, line: 3826, column: 5)
!9092 = !DILocation(line: 3829, column: 41, scope: !9090)
!9093 = !DILocation(line: 3829, column: 10, scope: !9090)
!9094 = !DILocation(line: 3829, column: 62, scope: !9090)
!9095 = !DILocation(line: 3829, column: 10, scope: !9091)
!9096 = !DILocation(line: 3834, column: 7, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9090, file: !1131, line: 3830, column: 6)
!9098 = !DILocation(line: 3835, column: 6, scope: !9097)
!9099 = !DILocation(line: 3843, column: 24, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9101, file: !1131, line: 3843, column: 11)
!9101 = distinct !DILexicalBlock(scope: !9091, file: !1131, line: 3842, column: 6)
!9102 = !DILocation(line: 3843, column: 11, scope: !9101)
!9103 = !DILocation(line: 3849, column: 48, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9100, file: !1131, line: 3844, column: 7)
!9105 = !DILocation(line: 3849, column: 62, scope: !9104)
!9106 = !DILocation(line: 3849, column: 8, scope: !9104)
!9107 = !DILocation(line: 3850, column: 7, scope: !9104)
!9108 = !DILocation(line: 3857, column: 22, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9100, file: !1131, line: 3852, column: 7)
!9110 = !DILocation(line: 3857, column: 33, scope: !9109)
!9111 = !DILocation(line: 3858, column: 8, scope: !9109)
!9112 = !DILocation(line: 3876, column: 6, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9091, file: !1131, line: 3876, column: 6)
!9114 = !{i64 2148494770}
!9115 = !{i64 2148494810}
!9116 = !DILocation(line: 3877, column: 5, scope: !9091)
!9117 = !DILocation(line: 3888, column: 3, scope: !9066)
!9118 = !DILocation(line: 3890, column: 3, scope: !9066)
!9119 = !DILocation(line: 3892, column: 15, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9066, file: !1131, line: 3891, column: 3)
!9121 = !DILocation(line: 3892, column: 29, scope: !9120)
!9122 = !DILocation(line: 3894, column: 17, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9120, file: !1131, line: 3894, column: 8)
!9124 = !DILocation(line: 3894, column: 8, scope: !9120)
!9125 = !DILocation(line: 3896, column: 27, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9127, file: !1131, line: 3896, column: 9)
!9127 = distinct !DILexicalBlock(scope: !9123, file: !1131, line: 3895, column: 4)
!9128 = !DILocation(line: 0, scope: !9126)
!9129 = !DILocation(line: 3896, column: 9, scope: !9127)
!9130 = !DILocation(line: 3902, column: 39, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9126, file: !1131, line: 3901, column: 5)
!9132 = !DILocation(line: 3910, column: 4, scope: !9120)
!9133 = !DILocation(line: 3910, column: 18, scope: !9120)
!9134 = !DILocation(line: 3910, column: 31, scope: !9120)
!9135 = !DILocation(line: 3912, column: 3, scope: !9066)
!9136 = !DILocation(line: 3914, column: 3, scope: !9066)
!9137 = distinct !DISubprogram(name: "xTaskNotifyWait", scope: !1131, file: !1131, line: 3922, type: !9138, scopeLine: 3923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9140)
!9138 = !DISubroutineType(types: !9139)
!9139 = !{!1160, !61, !61, !2495, !855}
!9140 = !{!9141, !9142, !9143, !9144, !9145, !9146}
!9141 = !DILocalVariable(name: "ulBitsToClearOnEntry", arg: 1, scope: !9137, file: !1131, line: 3922, type: !61)
!9142 = !DILocalVariable(name: "ulBitsToClearOnExit", arg: 2, scope: !9137, file: !1131, line: 3922, type: !61)
!9143 = !DILocalVariable(name: "pulNotificationValue", arg: 3, scope: !9137, file: !1131, line: 3922, type: !2495)
!9144 = !DILocalVariable(name: "xTicksToWait", arg: 4, scope: !9137, file: !1131, line: 3922, type: !855)
!9145 = !DILocalVariable(name: "xTimeToWake", scope: !9137, file: !1131, line: 3924, type: !855)
!9146 = !DILocalVariable(name: "xReturn", scope: !9137, file: !1131, line: 3925, type: !1160)
!9147 = !DILocation(line: 0, scope: !9137)
!9148 = !DILocation(line: 3927, column: 3, scope: !9137)
!9149 = !DILocation(line: 3930, column: 8, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9151, file: !1131, line: 3930, column: 8)
!9151 = distinct !DILexicalBlock(scope: !9137, file: !1131, line: 3928, column: 3)
!9152 = !DILocation(line: 3930, column: 22, scope: !9150)
!9153 = !DILocation(line: 3930, column: 35, scope: !9150)
!9154 = !DILocation(line: 3930, column: 8, scope: !9151)
!9155 = !DILocation(line: 3935, column: 38, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9150, file: !1131, line: 3931, column: 4)
!9157 = !DILocation(line: 3935, column: 5, scope: !9156)
!9158 = !DILocation(line: 3935, column: 19, scope: !9156)
!9159 = !DILocation(line: 3935, column: 35, scope: !9156)
!9160 = !DILocation(line: 3938, column: 5, scope: !9156)
!9161 = !DILocation(line: 3938, column: 19, scope: !9156)
!9162 = !DILocation(line: 3938, column: 32, scope: !9156)
!9163 = !DILocation(line: 3940, column: 22, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9156, file: !1131, line: 3940, column: 9)
!9165 = !DILocation(line: 3940, column: 9, scope: !9156)
!9166 = !DILocation(line: 3944, column: 27, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9168, file: !1131, line: 3944, column: 10)
!9168 = distinct !DILexicalBlock(scope: !9164, file: !1131, line: 3941, column: 5)
!9169 = !DILocation(line: 3944, column: 41, scope: !9167)
!9170 = !DILocation(line: 3944, column: 10, scope: !9167)
!9171 = !DILocation(line: 3944, column: 62, scope: !9167)
!9172 = !DILocation(line: 3944, column: 10, scope: !9168)
!9173 = !DILocation(line: 3949, column: 7, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9167, file: !1131, line: 3945, column: 6)
!9175 = !DILocation(line: 3950, column: 6, scope: !9174)
!9176 = !DILocation(line: 3958, column: 24, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9178, file: !1131, line: 3958, column: 11)
!9178 = distinct !DILexicalBlock(scope: !9168, file: !1131, line: 3957, column: 6)
!9179 = !DILocation(line: 3958, column: 11, scope: !9178)
!9180 = !DILocation(line: 3964, column: 48, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9177, file: !1131, line: 3959, column: 7)
!9182 = !DILocation(line: 3964, column: 62, scope: !9181)
!9183 = !DILocation(line: 3964, column: 8, scope: !9181)
!9184 = !DILocation(line: 3965, column: 7, scope: !9181)
!9185 = !DILocation(line: 3972, column: 22, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9177, file: !1131, line: 3967, column: 7)
!9187 = !DILocation(line: 3972, column: 33, scope: !9186)
!9188 = !DILocation(line: 3973, column: 8, scope: !9186)
!9189 = !DILocation(line: 3991, column: 6, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9168, file: !1131, line: 3991, column: 6)
!9191 = !{i64 2148495541}
!9192 = !{i64 2148495581}
!9193 = !DILocation(line: 3992, column: 5, scope: !9168)
!9194 = !DILocation(line: 4003, column: 3, scope: !9137)
!9195 = !DILocation(line: 4005, column: 3, scope: !9137)
!9196 = !DILocation(line: 4007, column: 29, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9198, file: !1131, line: 4007, column: 8)
!9198 = distinct !DILexicalBlock(scope: !9137, file: !1131, line: 4006, column: 3)
!9199 = !DILocation(line: 4007, column: 8, scope: !9198)
!9200 = !DILocation(line: 4011, column: 29, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9197, file: !1131, line: 4008, column: 4)
!9202 = !DILocation(line: 4011, column: 43, scope: !9201)
!9203 = !DILocation(line: 4011, column: 27, scope: !9201)
!9204 = !DILocation(line: 4012, column: 4, scope: !9201)
!9205 = !DILocation(line: 4018, column: 8, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9198, file: !1131, line: 4018, column: 8)
!9207 = !DILocation(line: 4018, column: 22, scope: !9206)
!9208 = !DILocation(line: 4018, column: 35, scope: !9206)
!9209 = !DILocation(line: 4018, column: 8, scope: !9198)
!9210 = !DILocation(line: 4027, column: 38, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9206, file: !1131, line: 4024, column: 4)
!9212 = !DILocation(line: 4027, column: 5, scope: !9211)
!9213 = !DILocation(line: 4027, column: 19, scope: !9211)
!9214 = !DILocation(line: 4027, column: 35, scope: !9211)
!9215 = !DILocation(line: 0, scope: !9206)
!9216 = !DILocation(line: 4031, column: 4, scope: !9198)
!9217 = !DILocation(line: 4031, column: 18, scope: !9198)
!9218 = !DILocation(line: 4031, column: 31, scope: !9198)
!9219 = !DILocation(line: 4033, column: 3, scope: !9137)
!9220 = !DILocation(line: 4035, column: 3, scope: !9137)
!9221 = distinct !DISubprogram(name: "xTaskNotify", scope: !1131, file: !1131, line: 4043, type: !9222, scopeLine: 4044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9225)
!9222 = !DISubroutineType(types: !9223)
!9223 = !{!1160, !1159, !61, !9224}
!9224 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyAction", file: !1139, line: 129, baseType: !1146)
!9225 = !{!9226, !9227, !9228, !9229, !9230, !9231}
!9226 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !9221, file: !1131, line: 4043, type: !1159)
!9227 = !DILocalVariable(name: "ulValue", arg: 2, scope: !9221, file: !1131, line: 4043, type: !61)
!9228 = !DILocalVariable(name: "eAction", arg: 3, scope: !9221, file: !1131, line: 4043, type: !9224)
!9229 = !DILocalVariable(name: "pxTCB", scope: !9221, file: !1131, line: 4045, type: !1161)
!9230 = !DILocalVariable(name: "eOriginalNotifyState", scope: !9221, file: !1131, line: 4046, type: !1194)
!9231 = !DILocalVariable(name: "xReturn", scope: !9221, file: !1131, line: 4047, type: !1160)
!9232 = !DILocation(line: 0, scope: !9221)
!9233 = !DILocation(line: 4049, column: 3, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9221, file: !1131, line: 4049, column: 3)
!9235 = !DILocation(line: 4049, column: 3, scope: !9221)
!9236 = !DILocation(line: 4049, column: 3, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9234, file: !1131, line: 4049, column: 3)
!9238 = !DILocation(line: 4052, column: 3, scope: !9221)
!9239 = !DILocation(line: 4054, column: 34, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9221, file: !1131, line: 4053, column: 3)
!9241 = !DILocation(line: 4056, column: 24, scope: !9240)
!9242 = !DILocation(line: 4058, column: 4, scope: !9240)
!9243 = !DILocation(line: 4061, column: 13, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9240, file: !1131, line: 4059, column: 4)
!9245 = !DILocation(line: 4061, column: 29, scope: !9244)
!9246 = !DILocation(line: 4062, column: 6, scope: !9244)
!9247 = !DILocation(line: 4065, column: 15, scope: !9244)
!9248 = !DILocation(line: 4065, column: 32, scope: !9244)
!9249 = !DILocation(line: 4066, column: 6, scope: !9244)
!9250 = !DILocation(line: 4069, column: 13, scope: !9244)
!9251 = !DILocation(line: 4069, column: 29, scope: !9244)
!9252 = !DILocation(line: 4070, column: 6, scope: !9244)
!9253 = !DILocation(line: 4073, column: 31, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9244, file: !1131, line: 4073, column: 10)
!9255 = !DILocation(line: 4073, column: 10, scope: !9244)
!9256 = !DILocation(line: 4075, column: 14, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9254, file: !1131, line: 4074, column: 6)
!9258 = !DILocation(line: 4075, column: 30, scope: !9257)
!9259 = !DILocation(line: 4076, column: 6, scope: !9257)
!9260 = !DILocation(line: 4093, column: 29, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9240, file: !1131, line: 4093, column: 8)
!9262 = !DILocation(line: 4093, column: 8, scope: !9240)
!9263 = !DILocation(line: 4095, column: 38, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9261, file: !1131, line: 4094, column: 4)
!9265 = !DILocation(line: 4095, column: 14, scope: !9264)
!9266 = !DILocation(line: 4096, column: 5, scope: !9264)
!9267 = !DILocation(line: 4099, column: 5, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9264, file: !1131, line: 4099, column: 5)
!9269 = !DILocation(line: 4099, column: 5, scope: !9264)
!9270 = !DILocation(line: 4099, column: 5, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9268, file: !1131, line: 4099, column: 5)
!9272 = !DILocation(line: 4101, column: 16, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9264, file: !1131, line: 4101, column: 9)
!9274 = !DILocation(line: 4101, column: 29, scope: !9273)
!9275 = !DILocation(line: 4101, column: 43, scope: !9273)
!9276 = !DILocation(line: 4101, column: 27, scope: !9273)
!9277 = !DILocation(line: 4101, column: 9, scope: !9264)
!9278 = !DILocation(line: 4105, column: 6, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9280, file: !1131, line: 4105, column: 6)
!9280 = distinct !DILexicalBlock(scope: !9273, file: !1131, line: 4102, column: 5)
!9281 = !{i64 2148497166}
!9282 = !{i64 2148497206}
!9283 = !DILocation(line: 4106, column: 5, scope: !9280)
!9284 = !DILocation(line: 4117, column: 3, scope: !9221)
!9285 = !DILocation(line: 4119, column: 3, scope: !9221)
!9286 = distinct !DISubprogram(name: "xTaskNotifyFromISR", scope: !1131, file: !1131, line: 4127, type: !9287, scopeLine: 4128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9289)
!9287 = !DISubroutineType(types: !9288)
!9288 = !{!1160, !1159, !61, !9224, !1390}
!9289 = !{!9290, !9291, !9292, !9293, !9294, !9295, !9296, !9297}
!9290 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !9286, file: !1131, line: 4127, type: !1159)
!9291 = !DILocalVariable(name: "ulValue", arg: 2, scope: !9286, file: !1131, line: 4127, type: !61)
!9292 = !DILocalVariable(name: "eAction", arg: 3, scope: !9286, file: !1131, line: 4127, type: !9224)
!9293 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !9286, file: !1131, line: 4127, type: !1390)
!9294 = !DILocalVariable(name: "pxTCB", scope: !9286, file: !1131, line: 4129, type: !1161)
!9295 = !DILocalVariable(name: "eOriginalNotifyState", scope: !9286, file: !1131, line: 4130, type: !1194)
!9296 = !DILocalVariable(name: "xReturn", scope: !9286, file: !1131, line: 4131, type: !1160)
!9297 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !9286, file: !1131, line: 4132, type: !1154)
!9298 = !DILocation(line: 0, scope: !9286)
!9299 = !DILocation(line: 4134, column: 3, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9286, file: !1131, line: 4134, column: 3)
!9301 = !DILocation(line: 4134, column: 3, scope: !9286)
!9302 = !DILocation(line: 4134, column: 3, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9300, file: !1131, line: 4134, column: 3)
!9304 = !DILocation(line: 4152, column: 3, scope: !9286)
!9305 = !DILocation(line: 231, column: 2, scope: !7914, inlinedAt: !9306)
!9306 = distinct !DILocation(line: 4156, column: 28, scope: !9286)
!9307 = !DILocation(line: 0, scope: !7914, inlinedAt: !9306)
!9308 = !DILocation(line: 4158, column: 34, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9286, file: !1131, line: 4157, column: 3)
!9310 = !DILocation(line: 4160, column: 24, scope: !9309)
!9311 = !DILocation(line: 4162, column: 4, scope: !9309)
!9312 = !DILocation(line: 4165, column: 13, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9309, file: !1131, line: 4163, column: 4)
!9314 = !DILocation(line: 4165, column: 29, scope: !9313)
!9315 = !DILocation(line: 4166, column: 6, scope: !9313)
!9316 = !DILocation(line: 4169, column: 15, scope: !9313)
!9317 = !DILocation(line: 4169, column: 32, scope: !9313)
!9318 = !DILocation(line: 4170, column: 6, scope: !9313)
!9319 = !DILocation(line: 4173, column: 13, scope: !9313)
!9320 = !DILocation(line: 4173, column: 29, scope: !9313)
!9321 = !DILocation(line: 4174, column: 6, scope: !9313)
!9322 = !DILocation(line: 4177, column: 31, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9313, file: !1131, line: 4177, column: 10)
!9324 = !DILocation(line: 4177, column: 10, scope: !9313)
!9325 = !DILocation(line: 4179, column: 14, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9323, file: !1131, line: 4178, column: 6)
!9327 = !DILocation(line: 4179, column: 30, scope: !9326)
!9328 = !DILocation(line: 4180, column: 6, scope: !9326)
!9329 = !DILocation(line: 4197, column: 29, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9309, file: !1131, line: 4197, column: 8)
!9331 = !DILocation(line: 4197, column: 8, scope: !9309)
!9332 = !DILocation(line: 4200, column: 5, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9334, file: !1131, line: 4200, column: 5)
!9334 = distinct !DILexicalBlock(scope: !9330, file: !1131, line: 4198, column: 4)
!9335 = !DILocation(line: 4200, column: 5, scope: !9334)
!9336 = !DILocation(line: 4200, column: 5, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9333, file: !1131, line: 4200, column: 5)
!9338 = !DILocation(line: 4202, column: 9, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9334, file: !1131, line: 4202, column: 9)
!9340 = !DILocation(line: 4202, column: 30, scope: !9339)
!9341 = !DILocation(line: 4202, column: 9, scope: !9334)
!9342 = !DILocation(line: 4204, column: 39, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9339, file: !1131, line: 4203, column: 5)
!9344 = !DILocation(line: 4204, column: 15, scope: !9343)
!9345 = !DILocation(line: 4205, column: 6, scope: !9343)
!9346 = !DILocation(line: 4206, column: 5, scope: !9343)
!9347 = !DILocation(line: 4211, column: 6, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9339, file: !1131, line: 4208, column: 5)
!9349 = !DILocation(line: 4214, column: 16, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9334, file: !1131, line: 4214, column: 9)
!9351 = !DILocation(line: 4214, column: 29, scope: !9350)
!9352 = !DILocation(line: 4214, column: 43, scope: !9350)
!9353 = !DILocation(line: 4214, column: 27, scope: !9350)
!9354 = !DILocation(line: 4214, column: 9, scope: !9334)
!9355 = !DILocation(line: 4220, column: 34, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9357, file: !1131, line: 4219, column: 6)
!9357 = distinct !DILexicalBlock(scope: !9358, file: !1131, line: 4218, column: 10)
!9358 = distinct !DILexicalBlock(scope: !9350, file: !1131, line: 4215, column: 5)
!9359 = !DILocation(line: 4221, column: 6, scope: !9356)
!9360 = !DILocation(line: 0, scope: !7925, inlinedAt: !9361)
!9361 = distinct !DILocation(line: 4229, column: 3, scope: !9286)
!9362 = !DILocation(line: 249, column: 2, scope: !7925, inlinedAt: !9361)
!9363 = !DILocation(line: 4231, column: 3, scope: !9286)
!9364 = distinct !DISubprogram(name: "vTaskNotifyGiveFromISR", scope: !1131, file: !1131, line: 4239, type: !9365, scopeLine: 4240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9367)
!9365 = !DISubroutineType(types: !9366)
!9366 = !{null, !1159, !1390}
!9367 = !{!9368, !9369, !9370, !9371, !9372}
!9368 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !9364, file: !1131, line: 4239, type: !1159)
!9369 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !9364, file: !1131, line: 4239, type: !1390)
!9370 = !DILocalVariable(name: "pxTCB", scope: !9364, file: !1131, line: 4241, type: !1161)
!9371 = !DILocalVariable(name: "eOriginalNotifyState", scope: !9364, file: !1131, line: 4242, type: !1194)
!9372 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !9364, file: !1131, line: 4243, type: !1154)
!9373 = !DILocation(line: 0, scope: !9364)
!9374 = !DILocation(line: 4245, column: 3, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9364, file: !1131, line: 4245, column: 3)
!9376 = !DILocation(line: 4245, column: 3, scope: !9364)
!9377 = !DILocation(line: 4245, column: 3, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9375, file: !1131, line: 4245, column: 3)
!9379 = !DILocation(line: 4263, column: 3, scope: !9364)
!9380 = !DILocation(line: 231, column: 2, scope: !7914, inlinedAt: !9381)
!9381 = distinct !DILocation(line: 4267, column: 28, scope: !9364)
!9382 = !DILocation(line: 0, scope: !7914, inlinedAt: !9381)
!9383 = !DILocation(line: 4269, column: 34, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9364, file: !1131, line: 4268, column: 3)
!9385 = !DILocation(line: 4270, column: 24, scope: !9384)
!9386 = !DILocation(line: 4274, column: 13, scope: !9384)
!9387 = !DILocation(line: 4274, column: 30, scope: !9384)
!9388 = !DILocation(line: 4278, column: 29, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9384, file: !1131, line: 4278, column: 8)
!9390 = !DILocation(line: 4278, column: 8, scope: !9384)
!9391 = !DILocation(line: 4281, column: 5, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9393, file: !1131, line: 4281, column: 5)
!9393 = distinct !DILexicalBlock(scope: !9389, file: !1131, line: 4279, column: 4)
!9394 = !DILocation(line: 4281, column: 5, scope: !9393)
!9395 = !DILocation(line: 4281, column: 5, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9392, file: !1131, line: 4281, column: 5)
!9397 = !DILocation(line: 4283, column: 9, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9393, file: !1131, line: 4283, column: 9)
!9399 = !DILocation(line: 4283, column: 30, scope: !9398)
!9400 = !DILocation(line: 4283, column: 9, scope: !9393)
!9401 = !DILocation(line: 4285, column: 39, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9398, file: !1131, line: 4284, column: 5)
!9403 = !DILocation(line: 4285, column: 15, scope: !9402)
!9404 = !DILocation(line: 4286, column: 6, scope: !9402)
!9405 = !DILocation(line: 4287, column: 5, scope: !9402)
!9406 = !DILocation(line: 4292, column: 6, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9398, file: !1131, line: 4289, column: 5)
!9408 = !DILocation(line: 4295, column: 16, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9393, file: !1131, line: 4295, column: 9)
!9410 = !DILocation(line: 4295, column: 29, scope: !9409)
!9411 = !DILocation(line: 4295, column: 43, scope: !9409)
!9412 = !DILocation(line: 4295, column: 27, scope: !9409)
!9413 = !DILocation(line: 4295, column: 9, scope: !9393)
!9414 = !DILocation(line: 4301, column: 34, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9416, file: !1131, line: 4300, column: 6)
!9416 = distinct !DILexicalBlock(scope: !9417, file: !1131, line: 4299, column: 10)
!9417 = distinct !DILexicalBlock(scope: !9409, file: !1131, line: 4296, column: 5)
!9418 = !DILocation(line: 4302, column: 6, scope: !9415)
!9419 = !DILocation(line: 0, scope: !7925, inlinedAt: !9420)
!9420 = distinct !DILocation(line: 4310, column: 3, scope: !9364)
!9421 = !DILocation(line: 249, column: 2, scope: !7925, inlinedAt: !9420)
!9422 = !DILocation(line: 4311, column: 2, scope: !9364)
!9423 = distinct !DISubprogram(name: "uxTaskGetBottomOfStack", scope: !1131, file: !1131, line: 4351, type: !7892, scopeLine: 4352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1130, retainedNodes: !9424)
!9424 = !{!9425, !9426}
!9425 = !DILocalVariable(name: "TaskHandle_t", arg: 1, scope: !9423, file: !1131, line: 4351, type: !1159)
!9426 = !DILocalVariable(name: "pxTCB", scope: !9423, file: !1131, line: 4353, type: !1161)
!9427 = !DILocation(line: 0, scope: !9423)
!9428 = !DILocation(line: 4355, column: 24, scope: !9423)
!9429 = !DILocation(line: 4355, column: 10, scope: !9423)
!9430 = !DILocation(line: 4355, column: 47, scope: !9423)
!9431 = !DILocation(line: 4355, column: 62, scope: !9423)
!9432 = !DILocation(line: 4358, column: 33, scope: !9423)
!9433 = !DILocation(line: 4358, column: 9, scope: !9423)
!9434 = !DILocation(line: 4358, column: 2, scope: !9423)
!9435 = distinct !DISubprogram(name: "vListInitialise", scope: !1866, file: !1866, line: 79, type: !9436, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1865, retainedNodes: !9439)
!9436 = !DISubroutineType(types: !9437)
!9437 = !{null, !9438}
!9438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1878)
!9439 = !{!9440}
!9440 = !DILocalVariable(name: "pxList", arg: 1, scope: !9435, file: !1866, line: 79, type: !9438)
!9441 = !DILocation(line: 0, scope: !9435)
!9442 = !DILocation(line: 84, column: 48, scope: !9435)
!9443 = !DILocation(line: 84, column: 10, scope: !9435)
!9444 = !DILocation(line: 84, column: 18, scope: !9435)
!9445 = !DILocation(line: 88, column: 19, scope: !9435)
!9446 = !DILocation(line: 88, column: 30, scope: !9435)
!9447 = !DILocation(line: 92, column: 19, scope: !9435)
!9448 = !DILocation(line: 92, column: 26, scope: !9435)
!9449 = !DILocation(line: 93, column: 19, scope: !9435)
!9450 = !DILocation(line: 93, column: 30, scope: !9435)
!9451 = !DILocation(line: 95, column: 10, scope: !9435)
!9452 = !DILocation(line: 95, column: 26, scope: !9435)
!9453 = !DILocation(line: 101, column: 1, scope: !9435)
!9454 = distinct !DISubprogram(name: "vListInitialiseItem", scope: !1866, file: !1866, line: 104, type: !9455, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1865, retainedNodes: !9458)
!9455 = !DISubroutineType(types: !9456)
!9456 = !{null, !9457}
!9457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1868)
!9458 = !{!9459}
!9459 = !DILocalVariable(name: "pxItem", arg: 1, scope: !9454, file: !1866, line: 104, type: !9457)
!9460 = !DILocation(line: 0, scope: !9454)
!9461 = !DILocation(line: 107, column: 10, scope: !9454)
!9462 = !DILocation(line: 107, column: 22, scope: !9454)
!9463 = !DILocation(line: 113, column: 1, scope: !9454)
!9464 = distinct !DISubprogram(name: "vListInsertEnd", scope: !1866, file: !1866, line: 116, type: !9465, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1865, retainedNodes: !9467)
!9465 = !DISubroutineType(types: !9466)
!9466 = !{null, !9438, !9457}
!9467 = !{!9468, !9469, !9470}
!9468 = !DILocalVariable(name: "pxList", arg: 1, scope: !9464, file: !1866, line: 116, type: !9438)
!9469 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !9464, file: !1866, line: 116, type: !9457)
!9470 = !DILocalVariable(name: "pxIndex", scope: !9464, file: !1866, line: 118, type: !9457)
!9471 = !DILocation(line: 0, scope: !9464)
!9472 = !DILocation(line: 118, column: 38, scope: !9464)
!9473 = !DILocation(line: 129, column: 17, scope: !9464)
!9474 = !DILocation(line: 129, column: 24, scope: !9464)
!9475 = !DILocation(line: 130, column: 39, scope: !9464)
!9476 = !DILocation(line: 130, column: 17, scope: !9464)
!9477 = !DILocation(line: 130, column: 28, scope: !9464)
!9478 = !DILocation(line: 131, column: 11, scope: !9464)
!9479 = !DILocation(line: 131, column: 23, scope: !9464)
!9480 = !DILocation(line: 131, column: 30, scope: !9464)
!9481 = !DILocation(line: 132, column: 22, scope: !9464)
!9482 = !DILocation(line: 135, column: 17, scope: !9464)
!9483 = !DILocation(line: 135, column: 29, scope: !9464)
!9484 = !DILocation(line: 137, column: 12, scope: !9464)
!9485 = !DILocation(line: 137, column: 29, scope: !9464)
!9486 = !DILocation(line: 138, column: 1, scope: !9464)
!9487 = distinct !DISubprogram(name: "vListInsert", scope: !1866, file: !1866, line: 141, type: !9465, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1865, retainedNodes: !9488)
!9488 = !{!9489, !9490, !9491, !9492}
!9489 = !DILocalVariable(name: "pxList", arg: 1, scope: !9487, file: !1866, line: 141, type: !9438)
!9490 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !9487, file: !1866, line: 141, type: !9457)
!9491 = !DILocalVariable(name: "pxIterator", scope: !9487, file: !1866, line: 143, type: !1868)
!9492 = !DILocalVariable(name: "xValueOfInsertion", scope: !9487, file: !1866, line: 144, type: !7596)
!9493 = !DILocation(line: 0, scope: !9487)
!9494 = !DILocation(line: 144, column: 53, scope: !9487)
!9495 = !DILocation(line: 160, column: 24, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9487, file: !1866, line: 160, column: 6)
!9497 = !DILocation(line: 160, column: 6, scope: !9487)
!9498 = !DILocation(line: 162, column: 33, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9496, file: !1866, line: 161, column: 2)
!9500 = !DILocation(line: 195, column: 38, scope: !9487)
!9501 = !DILocation(line: 163, column: 2, scope: !9499)
!9502 = !DILocation(line: 188, column: 49, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9504, file: !1866, line: 188, column: 3)
!9504 = distinct !DILexicalBlock(scope: !9496, file: !1866, line: 165, column: 2)
!9505 = !DILocation(line: 188, column: 21, scope: !9503)
!9506 = !DILocation(line: 188, column: 8, scope: !9503)
!9507 = !DILocation(line: 0, scope: !9503)
!9508 = !DILocation(line: 188, column: 73, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9503, file: !1866, line: 188, column: 3)
!9510 = !DILocation(line: 188, column: 81, scope: !9509)
!9511 = !DILocation(line: 188, column: 92, scope: !9509)
!9512 = !DILocation(line: 188, column: 3, scope: !9503)
!9513 = distinct !{!9513, !9512, !9514}
!9514 = !DILocation(line: 192, column: 3, scope: !9503)
!9515 = !DILocation(line: 0, scope: !9496)
!9516 = !DILocation(line: 195, column: 17, scope: !9487)
!9517 = !DILocation(line: 195, column: 24, scope: !9487)
!9518 = !DILocation(line: 196, column: 25, scope: !9487)
!9519 = !DILocation(line: 196, column: 36, scope: !9487)
!9520 = !DILocation(line: 197, column: 17, scope: !9487)
!9521 = !DILocation(line: 197, column: 28, scope: !9487)
!9522 = !DILocation(line: 198, column: 21, scope: !9487)
!9523 = !DILocation(line: 202, column: 17, scope: !9487)
!9524 = !DILocation(line: 202, column: 29, scope: !9487)
!9525 = !DILocation(line: 204, column: 12, scope: !9487)
!9526 = !DILocation(line: 204, column: 29, scope: !9487)
!9527 = !DILocation(line: 205, column: 1, scope: !9487)
!9528 = distinct !DISubprogram(name: "uxListRemove", scope: !1866, file: !1866, line: 208, type: !9529, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1865, retainedNodes: !9531)
!9529 = !DISubroutineType(types: !9530)
!9530 = !{!1154, !9457}
!9531 = !{!9532, !9533}
!9532 = !DILocalVariable(name: "pxItemToRemove", arg: 1, scope: !9528, file: !1866, line: 208, type: !9457)
!9533 = !DILocalVariable(name: "pxList", scope: !9528, file: !1866, line: 212, type: !9438)
!9534 = !DILocation(line: 0, scope: !9528)
!9535 = !DILocation(line: 212, column: 54, scope: !9528)
!9536 = !DILocation(line: 214, column: 55, scope: !9528)
!9537 = !DILocation(line: 214, column: 18, scope: !9528)
!9538 = !DILocation(line: 214, column: 26, scope: !9528)
!9539 = !DILocation(line: 214, column: 37, scope: !9528)
!9540 = !DILocation(line: 215, column: 55, scope: !9528)
!9541 = !DILocation(line: 215, column: 18, scope: !9528)
!9542 = !DILocation(line: 215, column: 30, scope: !9528)
!9543 = !DILocation(line: 215, column: 37, scope: !9528)
!9544 = !DILocation(line: 218, column: 14, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9528, file: !1866, line: 218, column: 6)
!9546 = !DILocation(line: 218, column: 22, scope: !9545)
!9547 = !DILocation(line: 218, column: 6, scope: !9528)
!9548 = !DILocation(line: 220, column: 37, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9545, file: !1866, line: 219, column: 2)
!9550 = !DILocation(line: 220, column: 19, scope: !9549)
!9551 = !DILocation(line: 221, column: 2, scope: !9549)
!9552 = !DILocation(line: 227, column: 30, scope: !9528)
!9553 = !DILocation(line: 228, column: 12, scope: !9528)
!9554 = !DILocation(line: 228, column: 29, scope: !9528)
!9555 = !DILocation(line: 230, column: 2, scope: !9528)
!9556 = distinct !DISubprogram(name: "xQueueGenericReset", scope: !1275, file: !1275, line: 260, type: !9557, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !9559)
!9557 = !DISubroutineType(types: !9558)
!9558 = !{!1160, !1333, !1160}
!9559 = !{!9560, !9561, !9562}
!9560 = !DILocalVariable(name: "xQueue", arg: 1, scope: !9556, file: !1275, line: 260, type: !1333)
!9561 = !DILocalVariable(name: "xNewQueue", arg: 2, scope: !9556, file: !1275, line: 260, type: !1160)
!9562 = !DILocalVariable(name: "pxQueue", scope: !9556, file: !1275, line: 262, type: !9563)
!9563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1277)
!9564 = !DILocation(line: 0, scope: !9556)
!9565 = !DILocation(line: 264, column: 2, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9556, file: !1275, line: 264, column: 2)
!9567 = !DILocation(line: 264, column: 2, scope: !9556)
!9568 = !DILocation(line: 264, column: 2, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9566, file: !1275, line: 264, column: 2)
!9570 = !DILocation(line: 266, column: 2, scope: !9556)
!9571 = !DILocation(line: 268, column: 30, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9556, file: !1275, line: 267, column: 2)
!9573 = !DILocation(line: 268, column: 50, scope: !9572)
!9574 = !DILocation(line: 268, column: 70, scope: !9572)
!9575 = !DILocation(line: 268, column: 59, scope: !9572)
!9576 = !DILocation(line: 268, column: 37, scope: !9572)
!9577 = !DILocation(line: 268, column: 12, scope: !9572)
!9578 = !DILocation(line: 268, column: 19, scope: !9572)
!9579 = !DILocation(line: 269, column: 12, scope: !9572)
!9580 = !DILocation(line: 269, column: 30, scope: !9572)
!9581 = !DILocation(line: 270, column: 12, scope: !9572)
!9582 = !DILocation(line: 270, column: 22, scope: !9572)
!9583 = !DILocation(line: 271, column: 67, scope: !9572)
!9584 = !DILocation(line: 271, column: 90, scope: !9572)
!9585 = !DILocation(line: 271, column: 43, scope: !9572)
!9586 = !DILocation(line: 271, column: 12, scope: !9572)
!9587 = !DILocation(line: 271, column: 14, scope: !9572)
!9588 = !DILocation(line: 271, column: 25, scope: !9572)
!9589 = !DILocation(line: 272, column: 12, scope: !9572)
!9590 = !DILocation(line: 272, column: 20, scope: !9572)
!9591 = !DILocation(line: 273, column: 12, scope: !9572)
!9592 = !DILocation(line: 273, column: 20, scope: !9572)
!9593 = !DILocation(line: 275, column: 17, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9572, file: !1275, line: 275, column: 7)
!9595 = !DILocation(line: 0, scope: !9594)
!9596 = !DILocation(line: 275, column: 7, scope: !9572)
!9597 = !DILocation(line: 282, column: 8, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9599, file: !1275, line: 282, column: 8)
!9599 = distinct !DILexicalBlock(scope: !9594, file: !1275, line: 276, column: 3)
!9600 = !DILocation(line: 282, column: 8, scope: !9599)
!9601 = !DILocation(line: 284, column: 9, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9603, file: !1275, line: 284, column: 9)
!9603 = distinct !DILexicalBlock(scope: !9598, file: !1275, line: 283, column: 4)
!9604 = !DILocation(line: 284, column: 71, scope: !9602)
!9605 = !DILocation(line: 284, column: 9, scope: !9603)
!9606 = !DILocation(line: 286, column: 6, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9608, file: !1275, line: 286, column: 6)
!9608 = distinct !DILexicalBlock(scope: !9602, file: !1275, line: 285, column: 5)
!9609 = !{i64 2148403407}
!9610 = !{i64 2148403447}
!9611 = !DILocation(line: 287, column: 5, scope: !9608)
!9612 = !DILocation(line: 301, column: 33, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9594, file: !1275, line: 299, column: 3)
!9614 = !DILocation(line: 301, column: 4, scope: !9613)
!9615 = !DILocation(line: 302, column: 33, scope: !9613)
!9616 = !DILocation(line: 302, column: 4, scope: !9613)
!9617 = !DILocation(line: 305, column: 2, scope: !9556)
!9618 = !DILocation(line: 309, column: 2, scope: !9556)
!9619 = distinct !DISubprogram(name: "xQueueGenericCreate", scope: !1275, file: !1275, line: 313, type: !9620, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !9622)
!9620 = !DISubroutineType(types: !9621)
!9621 = !{!1333, !8400, !8400, !1225}
!9622 = !{!9623, !9624, !9625, !9626, !9627, !9628, !9629}
!9623 = !DILocalVariable(name: "uxQueueLength", arg: 1, scope: !9619, file: !1275, line: 313, type: !8400)
!9624 = !DILocalVariable(name: "uxItemSize", arg: 2, scope: !9619, file: !1275, line: 313, type: !8400)
!9625 = !DILocalVariable(name: "ucQueueType", arg: 3, scope: !9619, file: !1275, line: 313, type: !1225)
!9626 = !DILocalVariable(name: "pxNewQueue", scope: !9619, file: !1275, line: 315, type: !1277)
!9627 = !DILocalVariable(name: "xQueueSizeInBytes", scope: !9619, file: !1275, line: 316, type: !1209)
!9628 = !DILocalVariable(name: "xReturn", scope: !9619, file: !1275, line: 317, type: !1333)
!9629 = !DILocalVariable(name: "pcAllocatedBuffer", scope: !9619, file: !1275, line: 318, type: !1283)
!9630 = !DILocation(line: 0, scope: !9619)
!9631 = !DILocation(line: 324, column: 2, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9619, file: !1275, line: 324, column: 2)
!9633 = !DILocation(line: 324, column: 2, scope: !9619)
!9634 = !DILocation(line: 324, column: 2, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9632, file: !1275, line: 324, column: 2)
!9636 = !DILocation(line: 326, column: 17, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9619, file: !1275, line: 326, column: 6)
!9638 = !DILocation(line: 326, column: 6, scope: !9619)
!9639 = !DILocation(line: 339, column: 35, scope: !9619)
!9640 = !DILocation(line: 341, column: 24, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9619, file: !1275, line: 341, column: 6)
!9642 = !DILocation(line: 341, column: 6, scope: !9619)
!9643 = !DILocation(line: 345, column: 7, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9641, file: !1275, line: 342, column: 2)
!9645 = !DILocation(line: 0, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9644, file: !1275, line: 345, column: 7)
!9647 = !DILocation(line: 362, column: 15, scope: !9644)
!9648 = !DILocation(line: 362, column: 24, scope: !9644)
!9649 = !DILocation(line: 363, column: 15, scope: !9644)
!9650 = !DILocation(line: 363, column: 26, scope: !9644)
!9651 = !DILocation(line: 364, column: 12, scope: !9644)
!9652 = !DILocation(line: 368, column: 16, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9644, file: !1275, line: 367, column: 3)
!9654 = !DILocation(line: 368, column: 28, scope: !9653)
!9655 = !DILocation(line: 386, column: 2, scope: !9619)
!9656 = !DILocation(line: 386, column: 2, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9658, file: !1275, line: 386, column: 2)
!9658 = distinct !DILexicalBlock(scope: !9619, file: !1275, line: 386, column: 2)
!9659 = !DILocation(line: 388, column: 2, scope: !9619)
!9660 = distinct !DISubprogram(name: "xQueueCreateMutex", scope: !1275, file: !1275, line: 394, type: !9661, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !9663)
!9661 = !DISubroutineType(types: !9662)
!9662 = !{!1333, !1225}
!9663 = !{!9664, !9665}
!9664 = !DILocalVariable(name: "ucQueueType", arg: 1, scope: !9660, file: !1275, line: 394, type: !1225)
!9665 = !DILocalVariable(name: "pxNewQueue", scope: !9660, file: !1275, line: 396, type: !1277)
!9666 = !DILocation(line: 0, scope: !9660)
!9667 = !DILocation(line: 403, column: 30, scope: !9660)
!9668 = !DILocation(line: 404, column: 7, scope: !9660)
!9669 = !DILocation(line: 407, column: 16, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9671, file: !1275, line: 405, column: 3)
!9671 = distinct !DILexicalBlock(scope: !9660, file: !1275, line: 404, column: 7)
!9672 = !DILocation(line: 407, column: 30, scope: !9670)
!9673 = !DILocation(line: 408, column: 16, scope: !9670)
!9674 = !DILocation(line: 408, column: 28, scope: !9670)
!9675 = !DILocation(line: 412, column: 16, scope: !9670)
!9676 = !DILocation(line: 412, column: 26, scope: !9670)
!9677 = !DILocation(line: 413, column: 16, scope: !9670)
!9678 = !DILocation(line: 413, column: 18, scope: !9670)
!9679 = !DILocation(line: 413, column: 29, scope: !9670)
!9680 = !DILocation(line: 418, column: 16, scope: !9670)
!9681 = !DILocation(line: 418, column: 34, scope: !9670)
!9682 = !DILocation(line: 419, column: 16, scope: !9670)
!9683 = !DILocation(line: 419, column: 25, scope: !9670)
!9684 = !DILocation(line: 420, column: 16, scope: !9670)
!9685 = !DILocation(line: 420, column: 27, scope: !9670)
!9686 = !DILocation(line: 421, column: 16, scope: !9670)
!9687 = !DILocation(line: 421, column: 24, scope: !9670)
!9688 = !DILocation(line: 422, column: 16, scope: !9670)
!9689 = !DILocation(line: 422, column: 24, scope: !9670)
!9690 = !DILocation(line: 426, column: 17, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9670, file: !1275, line: 425, column: 4)
!9692 = !DILocation(line: 426, column: 29, scope: !9691)
!9693 = !DILocation(line: 437, column: 36, scope: !9670)
!9694 = !DILocation(line: 437, column: 4, scope: !9670)
!9695 = !DILocation(line: 438, column: 36, scope: !9670)
!9696 = !DILocation(line: 438, column: 4, scope: !9670)
!9697 = !DILocation(line: 443, column: 13, scope: !9670)
!9698 = !DILocation(line: 450, column: 3, scope: !9660)
!9699 = !DILocation(line: 450, column: 3, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9701, file: !1275, line: 450, column: 3)
!9701 = distinct !DILexicalBlock(scope: !9660, file: !1275, line: 450, column: 3)
!9702 = !DILocation(line: 451, column: 3, scope: !9660)
!9703 = distinct !DISubprogram(name: "xQueueGenericSend", scope: !1275, file: !1275, line: 613, type: !9704, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !9708)
!9704 = !DISubroutineType(types: !9705)
!9705 = !{!1160, !1333, !9706, !855, !9707}
!9706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !375)
!9707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!9708 = !{!9709, !9710, !9711, !9712, !9713, !9714, !9715, !9721}
!9709 = !DILocalVariable(name: "xQueue", arg: 1, scope: !9703, file: !1275, line: 613, type: !1333)
!9710 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !9703, file: !1275, line: 613, type: !9706)
!9711 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !9703, file: !1275, line: 613, type: !855)
!9712 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !9703, file: !1275, line: 613, type: !9707)
!9713 = !DILocalVariable(name: "xEntryTimeSet", scope: !9703, file: !1275, line: 615, type: !1160)
!9714 = !DILocalVariable(name: "xYieldRequired", scope: !9703, file: !1275, line: 615, type: !1160)
!9715 = !DILocalVariable(name: "xTimeOut", scope: !9703, file: !1275, line: 616, type: !9716)
!9716 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !1139, line: 138, baseType: !9717)
!9717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !1139, line: 134, size: 64, elements: !9718)
!9718 = !{!9719, !9720}
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !9717, file: !1139, line: 136, baseType: !1160, size: 32)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !9717, file: !1139, line: 137, baseType: !855, size: 32, offset: 32)
!9721 = !DILocalVariable(name: "pxQueue", scope: !9703, file: !1275, line: 617, type: !9563)
!9722 = !DILocation(line: 0, scope: !9703)
!9723 = !DILocation(line: 616, column: 1, scope: !9703)
!9724 = !DILocation(line: 616, column: 11, scope: !9703)
!9725 = !DILocation(line: 617, column: 27, scope: !9703)
!9726 = !DILocation(line: 619, column: 2, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9703, file: !1275, line: 619, column: 2)
!9728 = !DILocation(line: 619, column: 2, scope: !9703)
!9729 = !DILocation(line: 619, column: 2, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9727, file: !1275, line: 619, column: 2)
!9731 = !DILocation(line: 620, column: 2, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9703, file: !1275, line: 620, column: 2)
!9733 = !DILocation(line: 620, column: 2, scope: !9703)
!9734 = !DILocation(line: 620, column: 2, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9732, file: !1275, line: 620, column: 2)
!9736 = !DILocation(line: 621, column: 2, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9703, file: !1275, line: 621, column: 2)
!9738 = !DILocation(line: 621, column: 2, scope: !9703)
!9739 = !DILocation(line: 621, column: 2, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9737, file: !1275, line: 621, column: 2)
!9741 = !DILocation(line: 624, column: 3, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9743, file: !1275, line: 624, column: 3)
!9743 = distinct !DILexicalBlock(scope: !9703, file: !1275, line: 623, column: 2)
!9744 = !DILocation(line: 624, column: 3, scope: !9743)
!9745 = !DILocation(line: 624, column: 3, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9742, file: !1275, line: 624, column: 3)
!9747 = !DILocation(line: 634, column: 3, scope: !9748)
!9748 = distinct !DILexicalBlock(scope: !9749, file: !1275, line: 633, column: 2)
!9749 = distinct !DILexicalBlock(scope: !9750, file: !1275, line: 632, column: 2)
!9750 = distinct !DILexicalBlock(scope: !9703, file: !1275, line: 632, column: 2)
!9751 = !DILocation(line: 640, column: 19, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9753, file: !1275, line: 640, column: 8)
!9753 = distinct !DILexicalBlock(scope: !9748, file: !1275, line: 635, column: 3)
!9754 = !DILocation(line: 640, column: 48, scope: !9752)
!9755 = !DILocation(line: 640, column: 37, scope: !9752)
!9756 = !DILocation(line: 640, column: 59, scope: !9752)
!9757 = !DILocation(line: 733, column: 22, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9759, file: !1275, line: 733, column: 9)
!9759 = distinct !DILexicalBlock(scope: !9752, file: !1275, line: 732, column: 4)
!9760 = !DILocation(line: 733, column: 9, scope: !9759)
!9761 = !DILocation(line: 643, column: 22, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9752, file: !1275, line: 641, column: 4)
!9763 = !DILocation(line: 698, column: 10, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !1275, line: 698, column: 10)
!9765 = distinct !DILexicalBlock(scope: !9762, file: !1275, line: 695, column: 5)
!9766 = !DILocation(line: 698, column: 10, scope: !9765)
!9767 = !DILocation(line: 700, column: 11, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !1275, line: 700, column: 11)
!9769 = distinct !DILexicalBlock(scope: !9764, file: !1275, line: 699, column: 6)
!9770 = !DILocation(line: 700, column: 76, scope: !9768)
!9771 = !DILocation(line: 700, column: 11, scope: !9769)
!9772 = !DILocation(line: 706, column: 8, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9774, file: !1275, line: 706, column: 8)
!9774 = distinct !DILexicalBlock(scope: !9768, file: !1275, line: 701, column: 7)
!9775 = !{i64 2148406948}
!9776 = !{i64 2148406988}
!9777 = !DILocation(line: 707, column: 7, scope: !9774)
!9778 = !DILocation(line: 713, column: 30, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9764, file: !1275, line: 713, column: 15)
!9780 = !DILocation(line: 713, column: 15, scope: !9764)
!9781 = !DILocation(line: 719, column: 7, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9783, file: !1275, line: 719, column: 7)
!9783 = distinct !DILexicalBlock(scope: !9779, file: !1275, line: 714, column: 6)
!9784 = !{i64 2148407450}
!9785 = !{i64 2148407490}
!9786 = !DILocation(line: 720, column: 6, scope: !9783)
!9787 = !DILocation(line: 728, column: 5, scope: !9762)
!9788 = !DILocation(line: 729, column: 5, scope: !9762)
!9789 = !DILocation(line: 737, column: 6, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9758, file: !1275, line: 734, column: 5)
!9791 = !DILocation(line: 742, column: 6, scope: !9790)
!9792 = !DILocation(line: 748, column: 6, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9794, file: !1275, line: 745, column: 5)
!9794 = distinct !DILexicalBlock(scope: !9758, file: !1275, line: 744, column: 14)
!9795 = !DILocation(line: 750, column: 5, scope: !9793)
!9796 = !DILocation(line: 758, column: 3, scope: !9748)
!9797 = !DILocation(line: 763, column: 3, scope: !9748)
!9798 = !DILocation(line: 764, column: 3, scope: !9748)
!9799 = !DILocation(line: 764, column: 3, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9801, file: !1275, line: 764, column: 3)
!9801 = distinct !DILexicalBlock(scope: !9748, file: !1275, line: 764, column: 3)
!9802 = !DILocation(line: 764, column: 3, scope: !9801)
!9803 = !DILocation(line: 764, column: 3, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9800, file: !1275, line: 764, column: 3)
!9805 = !DILocation(line: 764, column: 3, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9801, file: !1275, line: 764, column: 3)
!9807 = !DILocation(line: 764, column: 3, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9806, file: !1275, line: 764, column: 3)
!9809 = !DILocation(line: 767, column: 7, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9748, file: !1275, line: 767, column: 7)
!9811 = !DILocation(line: 767, column: 56, scope: !9810)
!9812 = !DILocation(line: 767, column: 7, scope: !9748)
!9813 = !DILocation(line: 769, column: 8, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9815, file: !1275, line: 769, column: 8)
!9815 = distinct !DILexicalBlock(scope: !9810, file: !1275, line: 768, column: 3)
!9816 = !DILocation(line: 769, column: 34, scope: !9814)
!9817 = !DILocation(line: 769, column: 8, scope: !9815)
!9818 = !DILocation(line: 772, column: 63, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9814, file: !1275, line: 770, column: 4)
!9820 = !DILocation(line: 772, column: 5, scope: !9819)
!9821 = !DILocation(line: 779, column: 5, scope: !9819)
!9822 = !DILocation(line: 786, column: 9, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9819, file: !1275, line: 786, column: 9)
!9824 = !DILocation(line: 786, column: 26, scope: !9823)
!9825 = !DILocation(line: 786, column: 9, scope: !9819)
!9826 = !DILocation(line: 788, column: 6, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9828, file: !1275, line: 788, column: 6)
!9828 = distinct !DILexicalBlock(scope: !9823, file: !1275, line: 787, column: 5)
!9829 = !{i64 2148408751}
!9830 = !{i64 2148408791}
!9831 = !DILocation(line: 789, column: 5, scope: !9828)
!9832 = !DILocation(line: 794, column: 5, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9814, file: !1275, line: 792, column: 4)
!9834 = !DILocation(line: 795, column: 14, scope: !9833)
!9835 = !DILocation(line: 801, column: 4, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9810, file: !1275, line: 799, column: 3)
!9837 = !DILocation(line: 802, column: 13, scope: !9836)
!9838 = !DILocation(line: 807, column: 4, scope: !9836)
!9839 = distinct !{!9839, !9840, !9841}
!9840 = !DILocation(line: 632, column: 2, scope: !9750)
!9841 = !DILocation(line: 809, column: 2, scope: !9750)
!9842 = !DILocation(line: 733, column: 9, scope: !9758)
!9843 = !DILocation(line: 0, scope: !9748)
!9844 = !DILocation(line: 810, column: 1, scope: !9703)
!9845 = distinct !DISubprogram(name: "prvCopyDataToQueue", scope: !1275, file: !1275, line: 1783, type: !9846, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !9848)
!9846 = !DISubroutineType(types: !9847)
!9847 = !{!1160, !9563, !375, !9707}
!9848 = !{!9849, !9850, !9851, !9852}
!9849 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !9845, file: !1275, line: 1783, type: !9563)
!9850 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !9845, file: !1275, line: 1783, type: !375)
!9851 = !DILocalVariable(name: "xPosition", arg: 3, scope: !9845, file: !1275, line: 1783, type: !9707)
!9852 = !DILocalVariable(name: "xReturn", scope: !9845, file: !1275, line: 1785, type: !1160)
!9853 = !DILocation(line: 0, scope: !9845)
!9854 = !DILocation(line: 1787, column: 15, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9845, file: !1275, line: 1787, column: 6)
!9856 = !DILocation(line: 1787, column: 26, scope: !9855)
!9857 = !DILocation(line: 1787, column: 6, scope: !9845)
!9858 = !DILocation(line: 1791, column: 17, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9860, file: !1275, line: 1791, column: 8)
!9860 = distinct !DILexicalBlock(scope: !9861, file: !1275, line: 1790, column: 3)
!9861 = distinct !DILexicalBlock(scope: !9855, file: !1275, line: 1788, column: 2)
!9862 = !DILocation(line: 1791, column: 29, scope: !9859)
!9863 = !DILocation(line: 1791, column: 8, scope: !9860)
!9864 = !DILocation(line: 1794, column: 60, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9859, file: !1275, line: 1792, column: 4)
!9866 = !DILocation(line: 1794, column: 15, scope: !9865)
!9867 = !DILocation(line: 1795, column: 28, scope: !9865)
!9868 = !DILocation(line: 1796, column: 4, scope: !9865)
!9869 = !DILocation(line: 1804, column: 21, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9855, file: !1275, line: 1804, column: 11)
!9871 = !DILocation(line: 1804, column: 11, scope: !9855)
!9872 = !DILocation(line: 1806, column: 40, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9870, file: !1275, line: 1805, column: 2)
!9874 = !DILocation(line: 1806, column: 12, scope: !9873)
!9875 = !DILocation(line: 1807, column: 34, scope: !9873)
!9876 = !DILocation(line: 1807, column: 22, scope: !9873)
!9877 = !DILocation(line: 1808, column: 38, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9873, file: !1275, line: 1808, column: 7)
!9879 = !DILocation(line: 1808, column: 26, scope: !9878)
!9880 = !DILocation(line: 1808, column: 7, scope: !9873)
!9881 = !DILocation(line: 1810, column: 34, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9878, file: !1275, line: 1809, column: 3)
!9883 = !DILocation(line: 1810, column: 23, scope: !9882)
!9884 = !DILocation(line: 1811, column: 3, scope: !9882)
!9885 = !DILocation(line: 1819, column: 42, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9870, file: !1275, line: 1818, column: 2)
!9887 = !DILocation(line: 1819, column: 12, scope: !9886)
!9888 = !DILocation(line: 1820, column: 37, scope: !9886)
!9889 = !DILocation(line: 1820, column: 25, scope: !9886)
!9890 = !DILocation(line: 1821, column: 40, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9886, file: !1275, line: 1821, column: 7)
!9892 = !DILocation(line: 1821, column: 29, scope: !9891)
!9893 = !DILocation(line: 1821, column: 7, scope: !9886)
!9894 = !DILocation(line: 1823, column: 39, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9891, file: !1275, line: 1822, column: 3)
!9896 = !DILocation(line: 1823, column: 46, scope: !9895)
!9897 = !DILocation(line: 1823, column: 26, scope: !9895)
!9898 = !DILocation(line: 1824, column: 3, scope: !9895)
!9899 = !DILocation(line: 1830, column: 17, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9886, file: !1275, line: 1830, column: 7)
!9901 = !DILocation(line: 1830, column: 7, scope: !9886)
!9902 = !DILocation(line: 1832, column: 17, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9904, file: !1275, line: 1832, column: 8)
!9904 = distinct !DILexicalBlock(scope: !9900, file: !1275, line: 1831, column: 3)
!9905 = !DILocation(line: 1832, column: 35, scope: !9903)
!9906 = !DILocation(line: 1832, column: 8, scope: !9904)
!9907 = !DILocation(line: 1838, column: 5, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9903, file: !1275, line: 1833, column: 4)
!9909 = !DILocation(line: 1839, column: 4, scope: !9908)
!9910 = !DILocation(line: 1851, column: 15, scope: !9845)
!9911 = !DILocation(line: 1851, column: 2, scope: !9845)
!9912 = !DILocation(line: 1853, column: 2, scope: !9845)
!9913 = distinct !DISubprogram(name: "prvIsQueueFull", scope: !1275, file: !1275, line: 2029, type: !9914, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !9918)
!9914 = !DISubroutineType(types: !9915)
!9915 = !{!1160, !9916}
!9916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9917, size: 32)
!9917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1278)
!9918 = !{!9919, !9920}
!9919 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !9913, file: !1275, line: 2029, type: !9916)
!9920 = !DILocalVariable(name: "xReturn", scope: !9913, file: !1275, line: 2031, type: !1160)
!9921 = !DILocation(line: 0, scope: !9913)
!9922 = !DILocation(line: 2033, column: 2, scope: !9913)
!9923 = !DILocation(line: 2035, column: 16, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9925, file: !1275, line: 2035, column: 7)
!9925 = distinct !DILexicalBlock(scope: !9913, file: !1275, line: 2034, column: 2)
!9926 = !DILocation(line: 2035, column: 46, scope: !9924)
!9927 = !DILocation(line: 2035, column: 34, scope: !9924)
!9928 = !DILocation(line: 2044, column: 2, scope: !9913)
!9929 = !DILocation(line: 2046, column: 2, scope: !9913)
!9930 = distinct !DISubprogram(name: "prvUnlockQueue", scope: !1275, file: !1275, line: 1875, type: !9931, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !9933)
!9931 = !DISubroutineType(types: !9932)
!9932 = !{null, !9563}
!9933 = !{!9934}
!9934 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !9930, file: !1275, line: 1875, type: !9563)
!9935 = !DILocation(line: 0, scope: !9930)
!9936 = !DILocation(line: 1883, column: 2, scope: !9930)
!9937 = !DILocation(line: 1933, column: 9, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9939, file: !1275, line: 1933, column: 9)
!9939 = distinct !DILexicalBlock(scope: !9940, file: !1275, line: 1930, column: 4)
!9940 = distinct !DILexicalBlock(scope: !9941, file: !1275, line: 1887, column: 3)
!9941 = distinct !DILexicalBlock(scope: !9930, file: !1275, line: 1884, column: 2)
!9942 = !DILocation(line: 1886, column: 19, scope: !9941)
!9943 = !DILocation(line: 1886, column: 27, scope: !9941)
!9944 = !DILocation(line: 1886, column: 3, scope: !9941)
!9945 = !DILocation(line: 1933, column: 9, scope: !9939)
!9946 = !DILocation(line: 1935, column: 10, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9948, file: !1275, line: 1935, column: 10)
!9948 = distinct !DILexicalBlock(scope: !9938, file: !1275, line: 1934, column: 5)
!9949 = !DILocation(line: 1935, column: 75, scope: !9947)
!9950 = !DILocation(line: 1935, column: 10, scope: !9948)
!9951 = !DILocation(line: 1939, column: 7, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9947, file: !1275, line: 1936, column: 6)
!9953 = !DILocation(line: 1940, column: 6, scope: !9952)
!9954 = !DILocation(line: 1953, column: 4, scope: !9940)
!9955 = distinct !{!9955, !9944, !9956}
!9956 = !DILocation(line: 1954, column: 3, scope: !9941)
!9957 = !DILocation(line: 1956, column: 20, scope: !9941)
!9958 = !DILocation(line: 1958, column: 2, scope: !9930)
!9959 = !DILocation(line: 1961, column: 2, scope: !9930)
!9960 = !DILocation(line: 1965, column: 8, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9962, file: !1275, line: 1965, column: 8)
!9962 = distinct !DILexicalBlock(scope: !9963, file: !1275, line: 1964, column: 3)
!9963 = distinct !DILexicalBlock(scope: !9930, file: !1275, line: 1962, column: 2)
!9964 = !DILocation(line: 1963, column: 19, scope: !9963)
!9965 = !DILocation(line: 1963, column: 27, scope: !9963)
!9966 = !DILocation(line: 1963, column: 3, scope: !9963)
!9967 = !DILocation(line: 1965, column: 8, scope: !9962)
!9968 = !DILocation(line: 1967, column: 9, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !1275, line: 1967, column: 9)
!9970 = distinct !DILexicalBlock(scope: !9961, file: !1275, line: 1966, column: 4)
!9971 = !DILocation(line: 1967, column: 71, scope: !9969)
!9972 = !DILocation(line: 1967, column: 9, scope: !9970)
!9973 = !DILocation(line: 1969, column: 6, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9969, file: !1275, line: 1968, column: 5)
!9975 = !DILocation(line: 1970, column: 5, scope: !9974)
!9976 = !DILocation(line: 1976, column: 5, scope: !9970)
!9977 = distinct !{!9977, !9966, !9978}
!9978 = !DILocation(line: 1982, column: 3, scope: !9963)
!9979 = !DILocation(line: 1984, column: 20, scope: !9963)
!9980 = !DILocation(line: 1986, column: 2, scope: !9930)
!9981 = !DILocation(line: 1987, column: 1, scope: !9930)
!9982 = distinct !DISubprogram(name: "xQueueGiveMutexRecursive", scope: !1275, file: !1275, line: 489, type: !9983, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !9985)
!9983 = !DISubroutineType(types: !9984)
!9984 = !{!1160, !1333}
!9985 = !{!9986, !9987, !9988}
!9986 = !DILocalVariable(name: "xMutex", arg: 1, scope: !9982, file: !1275, line: 489, type: !1333)
!9987 = !DILocalVariable(name: "xReturn", scope: !9982, file: !1275, line: 491, type: !1160)
!9988 = !DILocalVariable(name: "pxMutex", scope: !9982, file: !1275, line: 492, type: !9563)
!9989 = !DILocation(line: 0, scope: !9982)
!9990 = !DILocation(line: 494, column: 3, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9982, file: !1275, line: 494, column: 3)
!9992 = !DILocation(line: 494, column: 3, scope: !9982)
!9993 = !DILocation(line: 494, column: 3, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9991, file: !1275, line: 494, column: 3)
!9995 = !DILocation(line: 502, column: 16, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9982, file: !1275, line: 502, column: 7)
!9997 = !DILocation(line: 502, column: 44, scope: !9996)
!9998 = !DILocation(line: 502, column: 30, scope: !9996)
!9999 = !DILocation(line: 502, column: 7, scope: !9982)
!10000 = !DILocation(line: 511, column: 15, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9996, file: !1275, line: 503, column: 3)
!10002 = !DILocation(line: 511, column: 17, scope: !10001)
!10003 = !DILocation(line: 511, column: 39, scope: !10001)
!10004 = !DILocation(line: 514, column: 40, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10001, file: !1275, line: 514, column: 8)
!10006 = !DILocation(line: 514, column: 8, scope: !10001)
!10007 = !DILocation(line: 518, column: 14, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10005, file: !1275, line: 515, column: 4)
!10009 = !DILocation(line: 519, column: 4, scope: !10008)
!10010 = !DILocation(line: 0, scope: !9996)
!10011 = !DILocation(line: 536, column: 3, scope: !9982)
!10012 = distinct !DISubprogram(name: "xQueueTakeMutexRecursive", scope: !1275, file: !1275, line: 544, type: !10013, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10015)
!10013 = !DISubroutineType(types: !10014)
!10014 = !{!1160, !1333, !855}
!10015 = !{!10016, !10017, !10018, !10019}
!10016 = !DILocalVariable(name: "xMutex", arg: 1, scope: !10012, file: !1275, line: 544, type: !1333)
!10017 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !10012, file: !1275, line: 544, type: !855)
!10018 = !DILocalVariable(name: "xReturn", scope: !10012, file: !1275, line: 546, type: !1160)
!10019 = !DILocalVariable(name: "pxMutex", scope: !10012, file: !1275, line: 547, type: !9563)
!10020 = !DILocation(line: 0, scope: !10012)
!10021 = !DILocation(line: 549, column: 3, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10012, file: !1275, line: 549, column: 3)
!10023 = !DILocation(line: 549, column: 3, scope: !10012)
!10024 = !DILocation(line: 549, column: 3, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10022, file: !1275, line: 549, column: 3)
!10026 = !DILocation(line: 556, column: 16, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10012, file: !1275, line: 556, column: 7)
!10028 = !DILocation(line: 556, column: 44, scope: !10027)
!10029 = !DILocation(line: 556, column: 30, scope: !10027)
!10030 = !DILocation(line: 556, column: 7, scope: !10012)
!10031 = !DILocation(line: 563, column: 14, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10027, file: !1275, line: 562, column: 3)
!10033 = !DILocation(line: 568, column: 16, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10032, file: !1275, line: 568, column: 8)
!10035 = !DILocation(line: 568, column: 8, scope: !10032)
!10036 = !DILocation(line: 0, scope: !10027)
!10037 = !DILocation(line: 578, column: 3, scope: !10012)
!10038 = distinct !DISubprogram(name: "xQueueGenericReceive", scope: !1275, file: !1275, line: 1361, type: !10039, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10041)
!10039 = !DISubroutineType(types: !10040)
!10040 = !{!1160, !1333, !7299, !855, !9707}
!10041 = !{!10042, !10043, !10044, !10045, !10046, !10047, !10048, !10049}
!10042 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10038, file: !1275, line: 1361, type: !1333)
!10043 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !10038, file: !1275, line: 1361, type: !7299)
!10044 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !10038, file: !1275, line: 1361, type: !855)
!10045 = !DILocalVariable(name: "xJustPeeking", arg: 4, scope: !10038, file: !1275, line: 1361, type: !9707)
!10046 = !DILocalVariable(name: "xEntryTimeSet", scope: !10038, file: !1275, line: 1363, type: !1160)
!10047 = !DILocalVariable(name: "xTimeOut", scope: !10038, file: !1275, line: 1364, type: !9716)
!10048 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !10038, file: !1275, line: 1365, type: !1283)
!10049 = !DILocalVariable(name: "pxQueue", scope: !10038, file: !1275, line: 1366, type: !9563)
!10050 = !DILocation(line: 0, scope: !10038)
!10051 = !DILocation(line: 1364, column: 1, scope: !10038)
!10052 = !DILocation(line: 1364, column: 11, scope: !10038)
!10053 = !DILocation(line: 1366, column: 27, scope: !10038)
!10054 = !DILocation(line: 1368, column: 2, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10038, file: !1275, line: 1368, column: 2)
!10056 = !DILocation(line: 1368, column: 2, scope: !10038)
!10057 = !DILocation(line: 1368, column: 2, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10055, file: !1275, line: 1368, column: 2)
!10059 = !DILocation(line: 1369, column: 2, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10038, file: !1275, line: 1369, column: 2)
!10061 = !DILocation(line: 1369, column: 2, scope: !10038)
!10062 = !DILocation(line: 1369, column: 2, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10060, file: !1275, line: 1369, column: 2)
!10064 = !DILocation(line: 1372, column: 3, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10066, file: !1275, line: 1372, column: 3)
!10066 = distinct !DILexicalBlock(scope: !10038, file: !1275, line: 1371, column: 2)
!10067 = !DILocation(line: 1372, column: 3, scope: !10066)
!10068 = !DILocation(line: 1372, column: 3, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10065, file: !1275, line: 1372, column: 3)
!10070 = !DILocation(line: 1382, column: 3, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !1275, line: 1381, column: 2)
!10072 = distinct !DILexicalBlock(scope: !10073, file: !1275, line: 1380, column: 2)
!10073 = distinct !DILexicalBlock(scope: !10038, file: !1275, line: 1380, column: 2)
!10074 = !DILocation(line: 1386, column: 17, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10076, file: !1275, line: 1386, column: 8)
!10076 = distinct !DILexicalBlock(scope: !10071, file: !1275, line: 1383, column: 3)
!10077 = !DILocation(line: 1386, column: 35, scope: !10075)
!10078 = !DILocation(line: 1386, column: 8, scope: !10076)
!10079 = !DILocation(line: 1467, column: 22, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10081, file: !1275, line: 1467, column: 9)
!10081 = distinct !DILexicalBlock(scope: !10075, file: !1275, line: 1466, column: 4)
!10082 = !DILocation(line: 1467, column: 9, scope: !10081)
!10083 = !DILocation(line: 1390, column: 39, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10075, file: !1275, line: 1387, column: 4)
!10085 = !DILocation(line: 1390, column: 41, scope: !10084)
!10086 = !DILocation(line: 1392, column: 5, scope: !10084)
!10087 = !DILocation(line: 1394, column: 22, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10084, file: !1275, line: 1394, column: 9)
!10089 = !DILocation(line: 1394, column: 9, scope: !10084)
!10090 = !DILocation(line: 1399, column: 6, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10088, file: !1275, line: 1395, column: 5)
!10092 = !DILocation(line: 1403, column: 20, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10094, file: !1275, line: 1403, column: 11)
!10094 = distinct !DILexicalBlock(scope: !10091, file: !1275, line: 1402, column: 6)
!10095 = !DILocation(line: 1403, column: 32, scope: !10093)
!10096 = !DILocation(line: 1403, column: 11, scope: !10094)
!10097 = !DILocation(line: 1407, column: 46, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10093, file: !1275, line: 1404, column: 7)
!10099 = !DILocation(line: 1407, column: 17, scope: !10098)
!10100 = !DILocation(line: 1407, column: 31, scope: !10098)
!10101 = !DILocation(line: 1408, column: 7, scope: !10098)
!10102 = !DILocation(line: 1416, column: 10, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10091, file: !1275, line: 1416, column: 10)
!10104 = !DILocation(line: 1416, column: 10, scope: !10091)
!10105 = !DILocation(line: 1418, column: 11, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10107, file: !1275, line: 1418, column: 11)
!10107 = distinct !DILexicalBlock(scope: !10103, file: !1275, line: 1417, column: 6)
!10108 = !DILocation(line: 1418, column: 73, scope: !10106)
!10109 = !DILocation(line: 1418, column: 11, scope: !10107)
!10110 = !DILocation(line: 1420, column: 8, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10112, file: !1275, line: 1420, column: 8)
!10112 = distinct !DILexicalBlock(scope: !10106, file: !1275, line: 1419, column: 7)
!10113 = !{i64 2148412019}
!10114 = !{i64 2148412059}
!10115 = !DILocation(line: 1421, column: 7, scope: !10112)
!10116 = !DILocation(line: 1438, column: 28, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10088, file: !1275, line: 1433, column: 5)
!10118 = !DILocation(line: 1442, column: 10, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10117, file: !1275, line: 1442, column: 10)
!10120 = !DILocation(line: 1442, column: 10, scope: !10117)
!10121 = !DILocation(line: 1446, column: 11, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10123, file: !1275, line: 1446, column: 11)
!10123 = distinct !DILexicalBlock(scope: !10119, file: !1275, line: 1443, column: 6)
!10124 = !DILocation(line: 1446, column: 76, scope: !10122)
!10125 = !DILocation(line: 1446, column: 11, scope: !10123)
!10126 = !DILocation(line: 1449, column: 8, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10128, file: !1275, line: 1449, column: 8)
!10128 = distinct !DILexicalBlock(scope: !10122, file: !1275, line: 1447, column: 7)
!10129 = !{i64 2148412651}
!10130 = !{i64 2148412691}
!10131 = !DILocation(line: 1450, column: 7, scope: !10128)
!10132 = !DILocation(line: 1462, column: 5, scope: !10084)
!10133 = !DILocation(line: 1463, column: 5, scope: !10084)
!10134 = !DILocation(line: 1471, column: 6, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10080, file: !1275, line: 1468, column: 5)
!10136 = !DILocation(line: 1473, column: 6, scope: !10135)
!10137 = !DILocation(line: 1479, column: 6, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10139, file: !1275, line: 1476, column: 5)
!10139 = distinct !DILexicalBlock(scope: !10080, file: !1275, line: 1475, column: 14)
!10140 = !DILocation(line: 1481, column: 5, scope: !10138)
!10141 = !DILocation(line: 1489, column: 3, scope: !10071)
!10142 = !DILocation(line: 1494, column: 3, scope: !10071)
!10143 = !DILocation(line: 1495, column: 3, scope: !10071)
!10144 = !DILocation(line: 1495, column: 3, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10146, file: !1275, line: 1495, column: 3)
!10146 = distinct !DILexicalBlock(scope: !10071, file: !1275, line: 1495, column: 3)
!10147 = !DILocation(line: 1495, column: 3, scope: !10146)
!10148 = !DILocation(line: 1495, column: 3, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10145, file: !1275, line: 1495, column: 3)
!10150 = !DILocation(line: 1495, column: 3, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10146, file: !1275, line: 1495, column: 3)
!10152 = !DILocation(line: 1495, column: 3, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10151, file: !1275, line: 1495, column: 3)
!10154 = !DILocation(line: 1498, column: 7, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10071, file: !1275, line: 1498, column: 7)
!10156 = !DILocation(line: 1498, column: 56, scope: !10155)
!10157 = !DILocation(line: 1498, column: 7, scope: !10071)
!10158 = !DILocation(line: 1500, column: 8, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10160, file: !1275, line: 1500, column: 8)
!10160 = distinct !DILexicalBlock(scope: !10155, file: !1275, line: 1499, column: 3)
!10161 = !DILocation(line: 1500, column: 35, scope: !10159)
!10162 = !DILocation(line: 1500, column: 8, scope: !10160)
!10163 = !DILocation(line: 1506, column: 19, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10165, file: !1275, line: 1506, column: 10)
!10165 = distinct !DILexicalBlock(scope: !10166, file: !1275, line: 1505, column: 5)
!10166 = distinct !DILexicalBlock(scope: !10159, file: !1275, line: 1501, column: 4)
!10167 = !DILocation(line: 1506, column: 31, scope: !10164)
!10168 = !DILocation(line: 1506, column: 10, scope: !10165)
!10169 = !DILocation(line: 1508, column: 7, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10164, file: !1275, line: 1507, column: 6)
!10171 = !DILocation(line: 1510, column: 50, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10170, file: !1275, line: 1509, column: 7)
!10173 = !DILocation(line: 1510, column: 8, scope: !10172)
!10174 = !DILocation(line: 1512, column: 7, scope: !10170)
!10175 = !DILocation(line: 1513, column: 6, scope: !10170)
!10176 = !DILocation(line: 1521, column: 66, scope: !10166)
!10177 = !DILocation(line: 1521, column: 5, scope: !10166)
!10178 = !DILocation(line: 1522, column: 5, scope: !10166)
!10179 = !DILocation(line: 1523, column: 9, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10166, file: !1275, line: 1523, column: 9)
!10181 = !DILocation(line: 1523, column: 26, scope: !10180)
!10182 = !DILocation(line: 1523, column: 9, scope: !10166)
!10183 = !DILocation(line: 1525, column: 6, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10185, file: !1275, line: 1525, column: 6)
!10185 = distinct !DILexicalBlock(scope: !10180, file: !1275, line: 1524, column: 5)
!10186 = !{i64 2148414066}
!10187 = !{i64 2148414106}
!10188 = !DILocation(line: 1526, column: 5, scope: !10185)
!10189 = !DILocation(line: 1535, column: 5, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10159, file: !1275, line: 1533, column: 4)
!10191 = !DILocation(line: 1536, column: 14, scope: !10190)
!10192 = !DILocation(line: 1541, column: 4, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10155, file: !1275, line: 1540, column: 3)
!10194 = !DILocation(line: 1542, column: 13, scope: !10193)
!10195 = !DILocation(line: 1544, column: 4, scope: !10193)
!10196 = distinct !{!10196, !10197, !10198}
!10197 = !DILocation(line: 1380, column: 2, scope: !10073)
!10198 = !DILocation(line: 1546, column: 2, scope: !10073)
!10199 = !DILocation(line: 1467, column: 9, scope: !10080)
!10200 = !DILocation(line: 0, scope: !10071)
!10201 = !DILocation(line: 1547, column: 1, scope: !10038)
!10202 = distinct !DISubprogram(name: "prvCopyDataFromQueue", scope: !1275, file: !1275, line: 1857, type: !10203, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10205)
!10203 = !DISubroutineType(types: !10204)
!10204 = !{null, !9563, !7299}
!10205 = !{!10206, !10207}
!10206 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !10202, file: !1275, line: 1857, type: !9563)
!10207 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !10202, file: !1275, line: 1857, type: !7299)
!10208 = !DILocation(line: 0, scope: !10202)
!10209 = !DILocation(line: 1859, column: 15, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10202, file: !1275, line: 1859, column: 6)
!10211 = !DILocation(line: 1859, column: 26, scope: !10210)
!10212 = !DILocation(line: 1859, column: 6, scope: !10202)
!10213 = !DILocation(line: 1861, column: 14, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10210, file: !1275, line: 1860, column: 2)
!10215 = !DILocation(line: 1861, column: 25, scope: !10214)
!10216 = !DILocation(line: 1862, column: 41, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10214, file: !1275, line: 1862, column: 7)
!10218 = !DILocation(line: 1862, column: 29, scope: !10217)
!10219 = !DILocation(line: 1862, column: 7, scope: !10214)
!10220 = !DILocation(line: 1864, column: 37, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10217, file: !1275, line: 1863, column: 3)
!10222 = !DILocation(line: 1864, column: 26, scope: !10221)
!10223 = !DILocation(line: 1865, column: 3, scope: !10221)
!10224 = !DILocation(line: 1870, column: 63, scope: !10214)
!10225 = !DILocation(line: 1870, column: 12, scope: !10214)
!10226 = !DILocation(line: 1871, column: 2, scope: !10214)
!10227 = !DILocation(line: 1872, column: 1, scope: !10202)
!10228 = distinct !DISubprogram(name: "prvIsQueueEmpty", scope: !1275, file: !1275, line: 1990, type: !9914, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10229)
!10229 = !{!10230, !10231}
!10230 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !10228, file: !1275, line: 1990, type: !9916)
!10231 = !DILocalVariable(name: "xReturn", scope: !10228, file: !1275, line: 1992, type: !1160)
!10232 = !DILocation(line: 0, scope: !10228)
!10233 = !DILocation(line: 1994, column: 2, scope: !10228)
!10234 = !DILocation(line: 1996, column: 16, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10236, file: !1275, line: 1996, column: 7)
!10236 = distinct !DILexicalBlock(scope: !10228, file: !1275, line: 1995, column: 2)
!10237 = !DILocation(line: 1996, column: 34, scope: !10235)
!10238 = !DILocation(line: 2005, column: 2, scope: !10228)
!10239 = !DILocation(line: 2007, column: 2, scope: !10228)
!10240 = distinct !DISubprogram(name: "xQueueCreateCountingSemaphore", scope: !1275, file: !1275, line: 586, type: !10241, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10243)
!10241 = !DISubroutineType(types: !10242)
!10242 = !{!1333, !8400, !8400}
!10243 = !{!10244, !10245, !10246}
!10244 = !DILocalVariable(name: "uxMaxCount", arg: 1, scope: !10240, file: !1275, line: 586, type: !8400)
!10245 = !DILocalVariable(name: "uxInitialCount", arg: 2, scope: !10240, file: !1275, line: 586, type: !8400)
!10246 = !DILocalVariable(name: "xHandle", scope: !10240, file: !1275, line: 588, type: !1333)
!10247 = !DILocation(line: 0, scope: !10240)
!10248 = !DILocation(line: 590, column: 3, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10240, file: !1275, line: 590, column: 3)
!10250 = !DILocation(line: 590, column: 3, scope: !10240)
!10251 = !DILocation(line: 590, column: 3, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10249, file: !1275, line: 590, column: 3)
!10253 = !DILocation(line: 591, column: 3, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10240, file: !1275, line: 591, column: 3)
!10255 = !DILocation(line: 591, column: 3, scope: !10240)
!10256 = !DILocation(line: 591, column: 3, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10254, file: !1275, line: 591, column: 3)
!10258 = !DILocation(line: 593, column: 13, scope: !10240)
!10259 = !DILocation(line: 595, column: 7, scope: !10240)
!10260 = !DILocation(line: 597, column: 31, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10262, file: !1275, line: 596, column: 3)
!10262 = distinct !DILexicalBlock(scope: !10240, file: !1275, line: 595, column: 7)
!10263 = !DILocation(line: 597, column: 49, scope: !10261)
!10264 = !DILocation(line: 606, column: 3, scope: !10240)
!10265 = !DILocation(line: 606, column: 3, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10267, file: !1275, line: 606, column: 3)
!10267 = distinct !DILexicalBlock(scope: !10240, file: !1275, line: 606, column: 3)
!10268 = !DILocation(line: 607, column: 3, scope: !10240)
!10269 = distinct !DISubprogram(name: "xQueueGenericSendFromISR", scope: !1275, file: !1275, line: 1058, type: !10270, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10272)
!10270 = !DISubroutineType(types: !10271)
!10271 = !{!1160, !1333, !9706, !1389, !9707}
!10272 = !{!10273, !10274, !10275, !10276, !10277, !10278, !10279}
!10273 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10269, file: !1275, line: 1058, type: !1333)
!10274 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !10269, file: !1275, line: 1058, type: !9706)
!10275 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !10269, file: !1275, line: 1058, type: !1389)
!10276 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !10269, file: !1275, line: 1058, type: !9707)
!10277 = !DILocalVariable(name: "xReturn", scope: !10269, file: !1275, line: 1060, type: !1160)
!10278 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10269, file: !1275, line: 1061, type: !1154)
!10279 = !DILocalVariable(name: "pxQueue", scope: !10269, file: !1275, line: 1062, type: !9563)
!10280 = !DILocation(line: 0, scope: !10269)
!10281 = !DILocation(line: 1062, column: 27, scope: !10269)
!10282 = !DILocation(line: 1064, column: 2, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10269, file: !1275, line: 1064, column: 2)
!10284 = !DILocation(line: 1064, column: 2, scope: !10269)
!10285 = !DILocation(line: 1064, column: 2, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10283, file: !1275, line: 1064, column: 2)
!10287 = !DILocation(line: 1065, column: 2, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10269, file: !1275, line: 1065, column: 2)
!10289 = !DILocation(line: 1065, column: 2, scope: !10269)
!10290 = !DILocation(line: 1065, column: 2, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10288, file: !1275, line: 1065, column: 2)
!10292 = !DILocation(line: 1066, column: 2, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10269, file: !1275, line: 1066, column: 2)
!10294 = !DILocation(line: 1066, column: 2, scope: !10269)
!10295 = !DILocation(line: 1066, column: 2, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10293, file: !1275, line: 1066, column: 2)
!10297 = !DILocation(line: 1082, column: 2, scope: !10269)
!10298 = !DILocation(line: 231, column: 2, scope: !10299, inlinedAt: !10303)
!10299 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !856, file: !856, line: 227, type: !1916, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10300)
!10300 = !{!10301, !10302}
!10301 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !10299, file: !856, line: 229, type: !61)
!10302 = !DILocalVariable(name: "ulNewBASEPRI", scope: !10299, file: !856, line: 229, type: !61)
!10303 = distinct !DILocation(line: 1089, column: 27, scope: !10269)
!10304 = !{i64 747263, i64 747300, i64 747332, i64 747368, i64 747395}
!10305 = !DILocation(line: 0, scope: !10299, inlinedAt: !10303)
!10306 = !DILocation(line: 1091, column: 18, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10308, file: !1275, line: 1091, column: 7)
!10308 = distinct !DILexicalBlock(scope: !10269, file: !1275, line: 1090, column: 2)
!10309 = !DILocation(line: 1091, column: 47, scope: !10307)
!10310 = !DILocation(line: 1091, column: 36, scope: !10307)
!10311 = !DILocation(line: 1091, column: 58, scope: !10307)
!10312 = !DILocation(line: 1100, column: 13, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10307, file: !1275, line: 1092, column: 3)
!10314 = !DILocation(line: 1104, column: 17, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10313, file: !1275, line: 1104, column: 8)
!10316 = !DILocation(line: 1104, column: 25, scope: !10315)
!10317 = !DILocation(line: 1104, column: 8, scope: !10313)
!10318 = !DILocation(line: 1159, column: 10, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10320, file: !1275, line: 1159, column: 10)
!10320 = distinct !DILexicalBlock(scope: !10321, file: !1275, line: 1158, column: 5)
!10321 = distinct !DILexicalBlock(scope: !10315, file: !1275, line: 1105, column: 4)
!10322 = !DILocation(line: 1159, column: 10, scope: !10320)
!10323 = !DILocation(line: 1161, column: 11, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10325, file: !1275, line: 1161, column: 11)
!10325 = distinct !DILexicalBlock(scope: !10319, file: !1275, line: 1160, column: 6)
!10326 = !DILocation(line: 1161, column: 76, scope: !10324)
!10327 = !DILocation(line: 1161, column: 11, scope: !10325)
!10328 = !DILocation(line: 1167, column: 36, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10330, file: !1275, line: 1166, column: 8)
!10330 = distinct !DILexicalBlock(scope: !10331, file: !1275, line: 1165, column: 12)
!10331 = distinct !DILexicalBlock(scope: !10324, file: !1275, line: 1162, column: 7)
!10332 = !DILocation(line: 1168, column: 8, scope: !10329)
!10333 = !DILocation(line: 1190, column: 5, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10315, file: !1275, line: 1187, column: 4)
!10335 = !DILocation(line: 0, scope: !10307)
!10336 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !10337, file: !856, line: 247, type: !61)
!10337 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !856, file: !856, line: 247, type: !2535, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10338)
!10338 = !{!10336}
!10339 = !DILocation(line: 0, scope: !10337, inlinedAt: !10340)
!10340 = distinct !DILocation(line: 1201, column: 2, scope: !10269)
!10341 = !DILocation(line: 249, column: 2, scope: !10337, inlinedAt: !10340)
!10342 = !{i64 747796}
!10343 = !DILocation(line: 1203, column: 2, scope: !10269)
!10344 = distinct !DISubprogram(name: "xQueueGiveFromISR", scope: !1275, file: !1275, line: 1207, type: !10345, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10347)
!10345 = !DISubroutineType(types: !10346)
!10346 = !{!1160, !1333, !1389}
!10347 = !{!10348, !10349, !10350, !10351, !10352}
!10348 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10344, file: !1275, line: 1207, type: !1333)
!10349 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !10344, file: !1275, line: 1207, type: !1389)
!10350 = !DILocalVariable(name: "xReturn", scope: !10344, file: !1275, line: 1209, type: !1160)
!10351 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10344, file: !1275, line: 1210, type: !1154)
!10352 = !DILocalVariable(name: "pxQueue", scope: !10344, file: !1275, line: 1211, type: !9563)
!10353 = !DILocation(line: 0, scope: !10344)
!10354 = !DILocation(line: 1213, column: 2, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10344, file: !1275, line: 1213, column: 2)
!10356 = !DILocation(line: 1213, column: 2, scope: !10344)
!10357 = !DILocation(line: 1213, column: 2, scope: !10358)
!10358 = distinct !DILexicalBlock(scope: !10355, file: !1275, line: 1213, column: 2)
!10359 = !DILocation(line: 1216, column: 2, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10344, file: !1275, line: 1216, column: 2)
!10361 = !DILocation(line: 1216, column: 2, scope: !10344)
!10362 = !DILocation(line: 1216, column: 2, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10360, file: !1275, line: 1216, column: 2)
!10364 = !DILocation(line: 1232, column: 2, scope: !10344)
!10365 = !DILocation(line: 231, column: 2, scope: !10299, inlinedAt: !10366)
!10366 = distinct !DILocation(line: 1239, column: 27, scope: !10344)
!10367 = !DILocation(line: 0, scope: !10299, inlinedAt: !10366)
!10368 = !DILocation(line: 1244, column: 16, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10370, file: !1275, line: 1244, column: 7)
!10370 = distinct !DILexicalBlock(scope: !10344, file: !1275, line: 1240, column: 2)
!10371 = !DILocation(line: 1244, column: 45, scope: !10369)
!10372 = !DILocation(line: 1244, column: 34, scope: !10369)
!10373 = !DILocation(line: 1244, column: 7, scope: !10370)
!10374 = !DILocation(line: 1254, column: 4, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10369, file: !1275, line: 1245, column: 3)
!10376 = !DILocation(line: 1258, column: 17, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10375, file: !1275, line: 1258, column: 8)
!10378 = !DILocation(line: 1258, column: 25, scope: !10377)
!10379 = !DILocation(line: 1258, column: 8, scope: !10375)
!10380 = !DILocation(line: 1313, column: 10, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10382, file: !1275, line: 1313, column: 10)
!10382 = distinct !DILexicalBlock(scope: !10383, file: !1275, line: 1312, column: 5)
!10383 = distinct !DILexicalBlock(scope: !10377, file: !1275, line: 1259, column: 4)
!10384 = !DILocation(line: 1313, column: 10, scope: !10382)
!10385 = !DILocation(line: 1315, column: 11, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10387, file: !1275, line: 1315, column: 11)
!10387 = distinct !DILexicalBlock(scope: !10381, file: !1275, line: 1314, column: 6)
!10388 = !DILocation(line: 1315, column: 76, scope: !10386)
!10389 = !DILocation(line: 1315, column: 11, scope: !10387)
!10390 = !DILocation(line: 1321, column: 36, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10392, file: !1275, line: 1320, column: 8)
!10392 = distinct !DILexicalBlock(scope: !10393, file: !1275, line: 1319, column: 12)
!10393 = distinct !DILexicalBlock(scope: !10386, file: !1275, line: 1316, column: 7)
!10394 = !DILocation(line: 1322, column: 8, scope: !10391)
!10395 = !DILocation(line: 1344, column: 5, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10377, file: !1275, line: 1341, column: 4)
!10397 = !DILocation(line: 0, scope: !10369)
!10398 = !DILocation(line: 0, scope: !10337, inlinedAt: !10399)
!10399 = distinct !DILocation(line: 1355, column: 2, scope: !10344)
!10400 = !DILocation(line: 249, column: 2, scope: !10337, inlinedAt: !10399)
!10401 = !DILocation(line: 1357, column: 2, scope: !10344)
!10402 = distinct !DISubprogram(name: "xQueueReceiveFromISR", scope: !1275, file: !1275, line: 1550, type: !10403, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10405)
!10403 = !DISubroutineType(types: !10404)
!10404 = !{!1160, !1333, !7299, !1389}
!10405 = !{!10406, !10407, !10408, !10409, !10410, !10411}
!10406 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10402, file: !1275, line: 1550, type: !1333)
!10407 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !10402, file: !1275, line: 1550, type: !7299)
!10408 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !10402, file: !1275, line: 1550, type: !1389)
!10409 = !DILocalVariable(name: "xReturn", scope: !10402, file: !1275, line: 1552, type: !1160)
!10410 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10402, file: !1275, line: 1553, type: !1154)
!10411 = !DILocalVariable(name: "pxQueue", scope: !10402, file: !1275, line: 1554, type: !9563)
!10412 = !DILocation(line: 0, scope: !10402)
!10413 = !DILocation(line: 1554, column: 27, scope: !10402)
!10414 = !DILocation(line: 1556, column: 2, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10402, file: !1275, line: 1556, column: 2)
!10416 = !DILocation(line: 1556, column: 2, scope: !10402)
!10417 = !DILocation(line: 1556, column: 2, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10415, file: !1275, line: 1556, column: 2)
!10419 = !DILocation(line: 1557, column: 2, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10402, file: !1275, line: 1557, column: 2)
!10421 = !DILocation(line: 1557, column: 2, scope: !10402)
!10422 = !DILocation(line: 1557, column: 2, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10420, file: !1275, line: 1557, column: 2)
!10424 = !DILocation(line: 1573, column: 2, scope: !10402)
!10425 = !DILocation(line: 231, column: 2, scope: !10299, inlinedAt: !10426)
!10426 = distinct !DILocation(line: 1575, column: 27, scope: !10402)
!10427 = !DILocation(line: 0, scope: !10299, inlinedAt: !10426)
!10428 = !DILocation(line: 1578, column: 16, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10430, file: !1275, line: 1578, column: 7)
!10430 = distinct !DILexicalBlock(scope: !10402, file: !1275, line: 1576, column: 2)
!10431 = !DILocation(line: 1578, column: 34, scope: !10429)
!10432 = !DILocation(line: 1578, column: 7, scope: !10430)
!10433 = !DILocation(line: 1582, column: 4, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10429, file: !1275, line: 1579, column: 3)
!10435 = !DILocation(line: 1583, column: 4, scope: !10434)
!10436 = !DILocation(line: 1589, column: 17, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10434, file: !1275, line: 1589, column: 8)
!10438 = !DILocation(line: 1589, column: 25, scope: !10437)
!10439 = !DILocation(line: 1589, column: 8, scope: !10434)
!10440 = !DILocation(line: 1591, column: 9, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10442, file: !1275, line: 1591, column: 9)
!10442 = distinct !DILexicalBlock(scope: !10437, file: !1275, line: 1590, column: 4)
!10443 = !DILocation(line: 1591, column: 9, scope: !10442)
!10444 = !DILocation(line: 1593, column: 10, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10446, file: !1275, line: 1593, column: 10)
!10446 = distinct !DILexicalBlock(scope: !10441, file: !1275, line: 1592, column: 5)
!10447 = !DILocation(line: 1593, column: 72, scope: !10445)
!10448 = !DILocation(line: 1593, column: 10, scope: !10446)
!10449 = !DILocation(line: 1599, column: 35, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10451, file: !1275, line: 1598, column: 7)
!10451 = distinct !DILexicalBlock(scope: !10452, file: !1275, line: 1597, column: 11)
!10452 = distinct !DILexicalBlock(scope: !10445, file: !1275, line: 1594, column: 6)
!10453 = !DILocation(line: 1600, column: 7, scope: !10450)
!10454 = !DILocation(line: 1620, column: 5, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10437, file: !1275, line: 1617, column: 4)
!10456 = !DILocation(line: 0, scope: !10429)
!10457 = !DILocation(line: 0, scope: !10337, inlinedAt: !10458)
!10458 = distinct !DILocation(line: 1631, column: 2, scope: !10402)
!10459 = !DILocation(line: 249, column: 2, scope: !10337, inlinedAt: !10458)
!10460 = !DILocation(line: 1633, column: 2, scope: !10402)
!10461 = distinct !DISubprogram(name: "xQueuePeekFromISR", scope: !1275, file: !1275, line: 1637, type: !10462, scopeLine: 1638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10464)
!10462 = !DISubroutineType(types: !10463)
!10463 = !{!1160, !1333, !7299}
!10464 = !{!10465, !10466, !10467, !10468, !10469, !10470}
!10465 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10461, file: !1275, line: 1637, type: !1333)
!10466 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !10461, file: !1275, line: 1637, type: !7299)
!10467 = !DILocalVariable(name: "xReturn", scope: !10461, file: !1275, line: 1639, type: !1160)
!10468 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !10461, file: !1275, line: 1640, type: !1154)
!10469 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !10461, file: !1275, line: 1641, type: !1283)
!10470 = !DILocalVariable(name: "pxQueue", scope: !10461, file: !1275, line: 1642, type: !9563)
!10471 = !DILocation(line: 0, scope: !10461)
!10472 = !DILocation(line: 1642, column: 27, scope: !10461)
!10473 = !DILocation(line: 1644, column: 2, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10461, file: !1275, line: 1644, column: 2)
!10475 = !DILocation(line: 1644, column: 2, scope: !10461)
!10476 = !DILocation(line: 1644, column: 2, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10474, file: !1275, line: 1644, column: 2)
!10478 = !DILocation(line: 1645, column: 2, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10461, file: !1275, line: 1645, column: 2)
!10480 = !DILocation(line: 1645, column: 2, scope: !10461)
!10481 = !DILocation(line: 1645, column: 2, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10479, file: !1275, line: 1645, column: 2)
!10483 = !DILocation(line: 1646, column: 2, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10461, file: !1275, line: 1646, column: 2)
!10485 = !DILocation(line: 1646, column: 2, scope: !10461)
!10486 = !DILocation(line: 1646, column: 2, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10484, file: !1275, line: 1646, column: 2)
!10488 = !DILocation(line: 1662, column: 2, scope: !10461)
!10489 = !DILocation(line: 231, column: 2, scope: !10299, inlinedAt: !10490)
!10490 = distinct !DILocation(line: 1664, column: 27, scope: !10461)
!10491 = !DILocation(line: 0, scope: !10299, inlinedAt: !10490)
!10492 = !DILocation(line: 1667, column: 16, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !1275, line: 1667, column: 7)
!10494 = distinct !DILexicalBlock(scope: !10461, file: !1275, line: 1665, column: 2)
!10495 = !DILocation(line: 1667, column: 34, scope: !10493)
!10496 = !DILocation(line: 1667, column: 7, scope: !10494)
!10497 = !DILocation(line: 1673, column: 38, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10493, file: !1275, line: 1668, column: 3)
!10499 = !DILocation(line: 1673, column: 40, scope: !10498)
!10500 = !DILocation(line: 1674, column: 4, scope: !10498)
!10501 = !DILocation(line: 1675, column: 26, scope: !10498)
!10502 = !DILocation(line: 1678, column: 3, scope: !10498)
!10503 = !DILocation(line: 0, scope: !10493)
!10504 = !DILocation(line: 0, scope: !10337, inlinedAt: !10505)
!10505 = distinct !DILocation(line: 1685, column: 2, scope: !10461)
!10506 = !DILocation(line: 249, column: 2, scope: !10337, inlinedAt: !10505)
!10507 = !DILocation(line: 1687, column: 2, scope: !10461)
!10508 = distinct !DISubprogram(name: "uxQueueMessagesWaiting", scope: !1275, file: !1275, line: 1691, type: !10509, scopeLine: 1692, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10512)
!10509 = !DISubroutineType(types: !10510)
!10510 = !{!1154, !10511}
!10511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1333)
!10512 = !{!10513, !10514}
!10513 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10508, file: !1275, line: 1691, type: !10511)
!10514 = !DILocalVariable(name: "uxReturn", scope: !10508, file: !1275, line: 1693, type: !1154)
!10515 = !DILocation(line: 0, scope: !10508)
!10516 = !DILocation(line: 1695, column: 2, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10508, file: !1275, line: 1695, column: 2)
!10518 = !DILocation(line: 1695, column: 2, scope: !10508)
!10519 = !DILocation(line: 1695, column: 2, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10517, file: !1275, line: 1695, column: 2)
!10521 = !DILocation(line: 1697, column: 2, scope: !10508)
!10522 = !DILocation(line: 1699, column: 40, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10508, file: !1275, line: 1698, column: 2)
!10524 = !DILocation(line: 1701, column: 2, scope: !10508)
!10525 = !DILocation(line: 1703, column: 2, scope: !10508)
!10526 = distinct !DISubprogram(name: "uxQueueSpacesAvailable", scope: !1275, file: !1275, line: 1707, type: !10509, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10527)
!10527 = !{!10528, !10529, !10530}
!10528 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10526, file: !1275, line: 1707, type: !10511)
!10529 = !DILocalVariable(name: "uxReturn", scope: !10526, file: !1275, line: 1709, type: !1154)
!10530 = !DILocalVariable(name: "pxQueue", scope: !10526, file: !1275, line: 1710, type: !1277)
!10531 = !DILocation(line: 0, scope: !10526)
!10532 = !DILocation(line: 1713, column: 2, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10526, file: !1275, line: 1713, column: 2)
!10534 = !DILocation(line: 1713, column: 2, scope: !10526)
!10535 = !DILocation(line: 1713, column: 2, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10533, file: !1275, line: 1713, column: 2)
!10537 = !DILocation(line: 1715, column: 2, scope: !10526)
!10538 = !DILocation(line: 1717, column: 23, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10526, file: !1275, line: 1716, column: 2)
!10540 = !DILocation(line: 1717, column: 43, scope: !10539)
!10541 = !DILocation(line: 1717, column: 32, scope: !10539)
!10542 = !DILocation(line: 1719, column: 2, scope: !10526)
!10543 = !DILocation(line: 1721, column: 2, scope: !10526)
!10544 = distinct !DISubprogram(name: "uxQueueMessagesWaitingFromISR", scope: !1275, file: !1275, line: 1725, type: !10509, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10545)
!10545 = !{!10546, !10547}
!10546 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10544, file: !1275, line: 1725, type: !10511)
!10547 = !DILocalVariable(name: "uxReturn", scope: !10544, file: !1275, line: 1727, type: !1154)
!10548 = !DILocation(line: 0, scope: !10544)
!10549 = !DILocation(line: 1729, column: 2, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10544, file: !1275, line: 1729, column: 2)
!10551 = !DILocation(line: 1729, column: 2, scope: !10544)
!10552 = !DILocation(line: 1729, column: 2, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10550, file: !1275, line: 1729, column: 2)
!10554 = !DILocation(line: 1731, column: 39, scope: !10544)
!10555 = !DILocation(line: 1733, column: 2, scope: !10544)
!10556 = distinct !DISubprogram(name: "vQueueDelete", scope: !1275, file: !1275, line: 1737, type: !10557, scopeLine: 1738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10559)
!10557 = !DISubroutineType(types: !10558)
!10558 = !{null, !1333}
!10559 = !{!10560, !10561}
!10560 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10556, file: !1275, line: 1737, type: !1333)
!10561 = !DILocalVariable(name: "pxQueue", scope: !10556, file: !1275, line: 1739, type: !9563)
!10562 = !DILocation(line: 0, scope: !10556)
!10563 = !DILocation(line: 1741, column: 2, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10556, file: !1275, line: 1741, column: 2)
!10565 = !DILocation(line: 1741, column: 2, scope: !10556)
!10566 = !DILocation(line: 1741, column: 2, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10564, file: !1275, line: 1741, column: 2)
!10568 = !DILocation(line: 1746, column: 3, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10556, file: !1275, line: 1745, column: 2)
!10570 = !DILocation(line: 1749, column: 2, scope: !10556)
!10571 = !DILocation(line: 1750, column: 1, scope: !10556)
!10572 = distinct !DISubprogram(name: "vQueueUnregisterQueue", scope: !1275, file: !1275, line: 2374, type: !10557, scopeLine: 2375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10573)
!10573 = !{!10574, !10575}
!10574 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10572, file: !1275, line: 2374, type: !1333)
!10575 = !DILocalVariable(name: "ux", scope: !10572, file: !1275, line: 2376, type: !1154)
!10576 = !DILocation(line: 0, scope: !10572)
!10577 = !DILocation(line: 2380, column: 3, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10572, file: !1275, line: 2380, column: 3)
!10579 = !DILocation(line: 2382, column: 29, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10581, file: !1275, line: 2382, column: 8)
!10581 = distinct !DILexicalBlock(scope: !10582, file: !1275, line: 2381, column: 3)
!10582 = distinct !DILexicalBlock(scope: !10578, file: !1275, line: 2380, column: 3)
!10583 = !DILocation(line: 2382, column: 37, scope: !10580)
!10584 = !DILocation(line: 2382, column: 8, scope: !10581)
!10585 = !DILocation(line: 2385, column: 26, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10580, file: !1275, line: 2383, column: 4)
!10587 = !DILocation(line: 2385, column: 38, scope: !10586)
!10588 = !DILocation(line: 2386, column: 5, scope: !10586)
!10589 = !DILocation(line: 2380, column: 83, scope: !10582)
!10590 = !DILocation(line: 2380, column: 36, scope: !10582)
!10591 = distinct !{!10591, !10577, !10592}
!10592 = !DILocation(line: 2392, column: 3, scope: !10578)
!10593 = !DILocation(line: 2394, column: 2, scope: !10572)
!10594 = distinct !DISubprogram(name: "uxQueueGetQueueNumber", scope: !1275, file: !1275, line: 1755, type: !10595, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10597)
!10595 = !DISubroutineType(types: !10596)
!10596 = !{!1154, !1333}
!10597 = !{!10598}
!10598 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10594, file: !1275, line: 1755, type: !1333)
!10599 = !DILocation(line: 0, scope: !10594)
!10600 = !DILocation(line: 1757, column: 36, scope: !10594)
!10601 = !DILocation(line: 1757, column: 3, scope: !10594)
!10602 = distinct !DISubprogram(name: "vQueueSetQueueNumber", scope: !1275, file: !1275, line: 1765, type: !10603, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10605)
!10603 = !DISubroutineType(types: !10604)
!10604 = !{null, !1333, !1154}
!10605 = !{!10606, !10607}
!10606 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10602, file: !1275, line: 1765, type: !1333)
!10607 = !DILocalVariable(name: "uxQueueNumber", arg: 2, scope: !10602, file: !1275, line: 1765, type: !1154)
!10608 = !DILocation(line: 0, scope: !10602)
!10609 = !DILocation(line: 1767, column: 29, scope: !10602)
!10610 = !DILocation(line: 1767, column: 43, scope: !10602)
!10611 = !DILocation(line: 1768, column: 2, scope: !10602)
!10612 = distinct !DISubprogram(name: "ucQueueGetQueueType", scope: !1275, file: !1275, line: 1775, type: !10613, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10615)
!10613 = !DISubroutineType(types: !10614)
!10614 = !{!54, !1333}
!10615 = !{!10616}
!10616 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10612, file: !1275, line: 1775, type: !1333)
!10617 = !DILocation(line: 0, scope: !10612)
!10618 = !DILocation(line: 1777, column: 36, scope: !10612)
!10619 = !DILocation(line: 1777, column: 3, scope: !10612)
!10620 = distinct !DISubprogram(name: "xQueueIsQueueEmptyFromISR", scope: !1275, file: !1275, line: 2011, type: !10621, scopeLine: 2012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10623)
!10621 = !DISubroutineType(types: !10622)
!10622 = !{!1160, !10511}
!10623 = !{!10624, !10625}
!10624 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10620, file: !1275, line: 2011, type: !10511)
!10625 = !DILocalVariable(name: "xReturn", scope: !10620, file: !1275, line: 2013, type: !1160)
!10626 = !DILocation(line: 0, scope: !10620)
!10627 = !DILocation(line: 2015, column: 2, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10620, file: !1275, line: 2015, column: 2)
!10629 = !DILocation(line: 2015, column: 2, scope: !10620)
!10630 = !DILocation(line: 2015, column: 2, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10628, file: !1275, line: 2015, column: 2)
!10632 = !DILocation(line: 2016, column: 32, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10620, file: !1275, line: 2016, column: 6)
!10634 = !DILocation(line: 2016, column: 50, scope: !10633)
!10635 = !DILocation(line: 2025, column: 2, scope: !10620)
!10636 = distinct !DISubprogram(name: "xQueueIsQueueFullFromISR", scope: !1275, file: !1275, line: 2050, type: !10621, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10637)
!10637 = !{!10638, !10639}
!10638 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10636, file: !1275, line: 2050, type: !10511)
!10639 = !DILocalVariable(name: "xReturn", scope: !10636, file: !1275, line: 2052, type: !1160)
!10640 = !DILocation(line: 0, scope: !10636)
!10641 = !DILocation(line: 2054, column: 2, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10636, file: !1275, line: 2054, column: 2)
!10643 = !DILocation(line: 2054, column: 2, scope: !10636)
!10644 = !DILocation(line: 2054, column: 2, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10642, file: !1275, line: 2054, column: 2)
!10646 = !DILocation(line: 2055, column: 32, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10636, file: !1275, line: 2055, column: 6)
!10648 = !DILocation(line: 2055, column: 79, scope: !10647)
!10649 = !DILocation(line: 2055, column: 50, scope: !10647)
!10650 = !DILocation(line: 2064, column: 2, scope: !10636)
!10651 = distinct !DISubprogram(name: "vQueueAddToRegistry", scope: !1275, file: !1275, line: 2345, type: !10652, scopeLine: 2346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10654)
!10652 = !DISubroutineType(types: !10653)
!10653 = !{null, !1333, !331}
!10654 = !{!10655, !10656, !10657}
!10655 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10651, file: !1275, line: 2345, type: !1333)
!10656 = !DILocalVariable(name: "pcQueueName", arg: 2, scope: !10651, file: !1275, line: 2345, type: !331)
!10657 = !DILocalVariable(name: "ux", scope: !10651, file: !1275, line: 2347, type: !1154)
!10658 = !DILocation(line: 0, scope: !10651)
!10659 = !DILocation(line: 2351, column: 3, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10651, file: !1275, line: 2351, column: 3)
!10661 = !DILocation(line: 2353, column: 29, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10663, file: !1275, line: 2353, column: 8)
!10663 = distinct !DILexicalBlock(scope: !10664, file: !1275, line: 2352, column: 3)
!10664 = distinct !DILexicalBlock(scope: !10660, file: !1275, line: 2351, column: 3)
!10665 = !DILocation(line: 2353, column: 41, scope: !10662)
!10666 = !DILocation(line: 2353, column: 8, scope: !10663)
!10667 = !DILocation(line: 2356, column: 38, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10662, file: !1275, line: 2354, column: 4)
!10669 = !DILocation(line: 2357, column: 26, scope: !10668)
!10670 = !DILocation(line: 2357, column: 34, scope: !10668)
!10671 = !DILocation(line: 2360, column: 5, scope: !10668)
!10672 = !DILocation(line: 2351, column: 83, scope: !10664)
!10673 = !DILocation(line: 2351, column: 36, scope: !10664)
!10674 = distinct !{!10674, !10659, !10675}
!10675 = !DILocation(line: 2366, column: 3, scope: !10660)
!10676 = !DILocation(line: 2367, column: 2, scope: !10651)
!10677 = distinct !DISubprogram(name: "vQueueWaitForMessageRestricted", scope: !1275, file: !1275, line: 2401, type: !10678, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1274, retainedNodes: !10680)
!10678 = !DISubroutineType(types: !10679)
!10679 = !{null, !1333, !855}
!10680 = !{!10681, !10682, !10683}
!10681 = !DILocalVariable(name: "xQueue", arg: 1, scope: !10677, file: !1275, line: 2401, type: !1333)
!10682 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !10677, file: !1275, line: 2401, type: !855)
!10683 = !DILocalVariable(name: "pxQueue", scope: !10677, file: !1275, line: 2403, type: !9563)
!10684 = !DILocation(line: 0, scope: !10677)
!10685 = !DILocation(line: 2419, column: 3, scope: !10677)
!10686 = !DILocation(line: 2419, column: 3, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10688, file: !1275, line: 2419, column: 3)
!10688 = distinct !DILexicalBlock(scope: !10677, file: !1275, line: 2419, column: 3)
!10689 = !DILocation(line: 2419, column: 3, scope: !10688)
!10690 = !DILocation(line: 2419, column: 3, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10687, file: !1275, line: 2419, column: 3)
!10692 = !DILocation(line: 2419, column: 3, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10688, file: !1275, line: 2419, column: 3)
!10694 = !DILocation(line: 2419, column: 3, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10693, file: !1275, line: 2419, column: 3)
!10696 = !DILocation(line: 2420, column: 16, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10677, file: !1275, line: 2420, column: 7)
!10698 = !DILocation(line: 2420, column: 34, scope: !10697)
!10699 = !DILocation(line: 2420, column: 7, scope: !10677)
!10700 = !DILocation(line: 2423, column: 49, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10697, file: !1275, line: 2421, column: 3)
!10702 = !DILocation(line: 2423, column: 4, scope: !10701)
!10703 = !DILocation(line: 2424, column: 3, scope: !10701)
!10704 = !DILocation(line: 2403, column: 28, scope: !10677)
!10705 = !DILocation(line: 2429, column: 3, scope: !10677)
!10706 = !DILocation(line: 2430, column: 2, scope: !10677)
!10707 = distinct !DISubprogram(name: "xTimerCreateTimerTask", scope: !1338, file: !1338, line: 240, type: !7696, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !10708)
!10708 = !{!10709}
!10709 = !DILocalVariable(name: "xReturn", scope: !10707, file: !1338, line: 242, type: !1160)
!10710 = !DILocation(line: 0, scope: !10707)
!10711 = !DILocation(line: 248, column: 2, scope: !10707)
!10712 = !DILocation(line: 250, column: 6, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10707, file: !1338, line: 250, column: 6)
!10714 = !DILocation(line: 250, column: 18, scope: !10713)
!10715 = !DILocation(line: 250, column: 6, scope: !10707)
!10716 = !DILocation(line: 261, column: 14, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10718, file: !1338, line: 259, column: 3)
!10718 = distinct !DILexicalBlock(scope: !10713, file: !1338, line: 251, column: 2)
!10719 = !DILocation(line: 270, column: 2, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10707, file: !1338, line: 270, column: 2)
!10721 = !DILocation(line: 270, column: 2, scope: !10707)
!10722 = !DILocation(line: 270, column: 2, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10720, file: !1338, line: 270, column: 2)
!10724 = !DILocation(line: 271, column: 2, scope: !10707)
!10725 = distinct !DISubprogram(name: "prvCheckForValidListAndQueue", scope: !1338, file: !1338, line: 770, type: !154, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !1935)
!10726 = !DILocation(line: 775, column: 2, scope: !10725)
!10727 = !DILocation(line: 777, column: 7, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10729, file: !1338, line: 777, column: 7)
!10729 = distinct !DILexicalBlock(scope: !10725, file: !1338, line: 776, column: 2)
!10730 = !DILocation(line: 777, column: 19, scope: !10728)
!10731 = !DILocation(line: 777, column: 7, scope: !10729)
!10732 = !DILocation(line: 779, column: 4, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10728, file: !1338, line: 778, column: 3)
!10734 = !DILocation(line: 780, column: 4, scope: !10733)
!10735 = !DILocation(line: 781, column: 23, scope: !10733)
!10736 = !DILocation(line: 782, column: 24, scope: !10733)
!10737 = !DILocation(line: 783, column: 18, scope: !10733)
!10738 = !DILocation(line: 783, column: 16, scope: !10733)
!10739 = !DILocation(line: 784, column: 4, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10733, file: !1338, line: 784, column: 4)
!10741 = !DILocation(line: 784, column: 4, scope: !10733)
!10742 = !DILocation(line: 784, column: 4, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10740, file: !1338, line: 784, column: 4)
!10744 = !DILocation(line: 788, column: 9, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10746, file: !1338, line: 788, column: 9)
!10746 = distinct !DILexicalBlock(scope: !10733, file: !1338, line: 787, column: 4)
!10747 = !DILocation(line: 788, column: 21, scope: !10745)
!10748 = !DILocation(line: 788, column: 9, scope: !10746)
!10749 = !DILocation(line: 790, column: 6, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10745, file: !1338, line: 789, column: 5)
!10751 = !DILocation(line: 791, column: 5, scope: !10750)
!10752 = !DILocation(line: 804, column: 2, scope: !10725)
!10753 = !DILocation(line: 805, column: 1, scope: !10725)
!10754 = distinct !DISubprogram(name: "prvTimerTask", scope: !1338, file: !1338, line: 418, type: !640, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !10755)
!10755 = !{!10756, !10757, !10758}
!10756 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !10754, file: !1338, line: 418, type: !51)
!10757 = !DILocalVariable(name: "xNextExpireTime", scope: !10754, file: !1338, line: 420, type: !855)
!10758 = !DILocalVariable(name: "xListWasEmpty", scope: !10754, file: !1338, line: 421, type: !1160)
!10759 = !DILocation(line: 0, scope: !10754)
!10760 = !DILocation(line: 421, column: 1, scope: !10754)
!10761 = !DILocation(line: 426, column: 2, scope: !10754)
!10762 = !DILocation(line: 430, column: 21, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10764, file: !1338, line: 427, column: 2)
!10764 = distinct !DILexicalBlock(scope: !10765, file: !1338, line: 426, column: 2)
!10765 = distinct !DILexicalBlock(scope: !10754, file: !1338, line: 426, column: 2)
!10766 = !DILocation(line: 434, column: 48, scope: !10763)
!10767 = !DILocation(line: 434, column: 3, scope: !10763)
!10768 = !DILocation(line: 437, column: 3, scope: !10763)
!10769 = !DILocation(line: 426, column: 2, scope: !10764)
!10770 = distinct !{!10770, !10771, !10772}
!10771 = !DILocation(line: 426, column: 2, scope: !10765)
!10772 = !DILocation(line: 438, column: 2, scope: !10765)
!10773 = distinct !DISubprogram(name: "prvGetNextExpireTime", scope: !1338, file: !1338, line: 495, type: !1387, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !10774)
!10774 = !{!10775, !10776}
!10775 = !DILocalVariable(name: "pxListWasEmpty", arg: 1, scope: !10773, file: !1338, line: 495, type: !1389)
!10776 = !DILocalVariable(name: "xNextExpireTime", scope: !10773, file: !1338, line: 497, type: !855)
!10777 = !DILocation(line: 0, scope: !10773)
!10778 = !DILocation(line: 506, column: 20, scope: !10773)
!10779 = !DILocation(line: 506, column: 18, scope: !10773)
!10780 = !DILocation(line: 507, column: 6, scope: !10773)
!10781 = !DILocation(line: 509, column: 21, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10783, file: !1338, line: 508, column: 2)
!10783 = distinct !DILexicalBlock(scope: !10773, file: !1338, line: 507, column: 6)
!10784 = !DILocation(line: 510, column: 2, scope: !10782)
!10785 = !DILocation(line: 0, scope: !10783)
!10786 = !DILocation(line: 517, column: 2, scope: !10773)
!10787 = distinct !DISubprogram(name: "prvProcessTimerOrBlockTask", scope: !1338, file: !1338, line: 442, type: !10788, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !10790)
!10788 = !DISubroutineType(types: !10789)
!10789 = !{null, !7596, !9707}
!10790 = !{!10791, !10792, !10793, !10794}
!10791 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !10787, file: !1338, line: 442, type: !7596)
!10792 = !DILocalVariable(name: "xListWasEmpty", arg: 2, scope: !10787, file: !1338, line: 442, type: !9707)
!10793 = !DILocalVariable(name: "xTimeNow", scope: !10787, file: !1338, line: 444, type: !855)
!10794 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !10787, file: !1338, line: 445, type: !1160)
!10795 = !DILocation(line: 0, scope: !10787)
!10796 = !DILocation(line: 445, column: 1, scope: !10787)
!10797 = !DILocation(line: 447, column: 2, scope: !10787)
!10798 = !DILocation(line: 454, column: 14, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10787, file: !1338, line: 448, column: 2)
!10800 = !DILocation(line: 455, column: 7, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10799, file: !1338, line: 455, column: 7)
!10802 = !DILocation(line: 455, column: 31, scope: !10801)
!10803 = !DILocation(line: 455, column: 7, scope: !10799)
!10804 = !DILocation(line: 458, column: 24, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10806, file: !1338, line: 458, column: 8)
!10806 = distinct !DILexicalBlock(scope: !10801, file: !1338, line: 456, column: 3)
!10807 = !DILocation(line: 458, column: 37, scope: !10805)
!10808 = !DILocation(line: 460, column: 14, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10805, file: !1338, line: 459, column: 4)
!10810 = !DILocation(line: 461, column: 5, scope: !10809)
!10811 = !DILocation(line: 462, column: 4, scope: !10809)
!10812 = !DILocation(line: 471, column: 37, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10805, file: !1338, line: 464, column: 4)
!10814 = !DILocation(line: 471, column: 68, scope: !10813)
!10815 = !DILocation(line: 471, column: 5, scope: !10813)
!10816 = !DILocation(line: 473, column: 9, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10813, file: !1338, line: 473, column: 9)
!10818 = !DILocation(line: 473, column: 26, scope: !10817)
!10819 = !DILocation(line: 473, column: 9, scope: !10813)
!10820 = !DILocation(line: 479, column: 6, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10822, file: !1338, line: 479, column: 6)
!10822 = distinct !DILexicalBlock(scope: !10817, file: !1338, line: 474, column: 5)
!10823 = !{i64 2148397452}
!10824 = !{i64 2148397492}
!10825 = !DILocation(line: 480, column: 5, scope: !10822)
!10826 = !DILocation(line: 489, column: 13, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10801, file: !1338, line: 488, column: 3)
!10828 = !DILocation(line: 492, column: 1, scope: !10787)
!10829 = distinct !DISubprogram(name: "prvProcessReceivedCommands", scope: !1338, file: !1338, line: 585, type: !154, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !10830)
!10830 = !{!10831, !10845, !10846, !10847, !10848}
!10831 = !DILocalVariable(name: "xMessage", scope: !10829, file: !1338, line: 587, type: !10832)
!10832 = !DIDerivedType(tag: DW_TAG_typedef, name: "DaemonTaskMessage_t", file: !1338, line: 155, baseType: !10833)
!10833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerQueueMessage", file: !1338, line: 142, size: 96, elements: !10834)
!10834 = !{!10835, !10836}
!10835 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageID", scope: !10833, file: !1338, line: 144, baseType: !1160, size: 32)
!10836 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !10833, file: !1338, line: 154, baseType: !10837, size: 64, offset: 32)
!10837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10833, file: !1338, line: 145, size: 64, elements: !10838)
!10838 = !{!10839}
!10839 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerParameters", scope: !10837, file: !1338, line: 147, baseType: !10840, size: 64)
!10840 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerParameter_t", file: !1338, line: 130, baseType: !10841)
!10841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerParameters", file: !1338, line: 126, size: 64, elements: !10842)
!10842 = !{!10843, !10844}
!10843 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageValue", scope: !10841, file: !1338, line: 128, baseType: !855, size: 32)
!10844 = !DIDerivedType(tag: DW_TAG_member, name: "pxTimer", scope: !10841, file: !1338, line: 129, baseType: !1340, size: 32, offset: 32)
!10845 = !DILocalVariable(name: "pxTimer", scope: !10829, file: !1338, line: 588, type: !1340)
!10846 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !10829, file: !1338, line: 589, type: !1160)
!10847 = !DILocalVariable(name: "xResult", scope: !10829, file: !1338, line: 589, type: !1160)
!10848 = !DILocalVariable(name: "xTimeNow", scope: !10829, file: !1338, line: 590, type: !855)
!10849 = !DILocation(line: 587, column: 1, scope: !10829)
!10850 = !DILocation(line: 587, column: 21, scope: !10829)
!10851 = !DILocation(line: 589, column: 1, scope: !10829)
!10852 = !DILocation(line: 592, column: 9, scope: !10829)
!10853 = !DILocation(line: 592, column: 62, scope: !10829)
!10854 = !DILocation(line: 592, column: 2, scope: !10829)
!10855 = !DILocation(line: 618, column: 16, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !1338, line: 618, column: 7)
!10857 = distinct !DILexicalBlock(scope: !10829, file: !1338, line: 593, column: 2)
!10858 = !DILocation(line: 618, column: 27, scope: !10856)
!10859 = !DILocation(line: 618, column: 7, scope: !10857)
!10860 = !DILocation(line: 622, column: 42, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10856, file: !1338, line: 619, column: 3)
!10862 = !DILocation(line: 0, scope: !10829)
!10863 = !DILocation(line: 624, column: 8, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10861, file: !1338, line: 624, column: 8)
!10865 = !DILocation(line: 624, column: 8, scope: !10861)
!10866 = !DILocation(line: 627, column: 14, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10864, file: !1338, line: 625, column: 4)
!10868 = !DILocation(line: 628, column: 4, scope: !10867)
!10869 = !DILocation(line: 642, column: 15, scope: !10861)
!10870 = !DILocation(line: 644, column: 21, scope: !10861)
!10871 = !DILocation(line: 644, column: 4, scope: !10861)
!10872 = !DILocation(line: 652, column: 76, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10874, file: !1338, line: 652, column: 10)
!10874 = distinct !DILexicalBlock(scope: !10861, file: !1338, line: 645, column: 4)
!10875 = !DILocation(line: 652, column: 101, scope: !10873)
!10876 = !DILocation(line: 652, column: 90, scope: !10873)
!10877 = !DILocation(line: 652, column: 10, scope: !10873)
!10878 = !DILocation(line: 652, column: 176, scope: !10873)
!10879 = !DILocation(line: 652, column: 10, scope: !10874)
!10880 = !DILocation(line: 656, column: 16, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10873, file: !1338, line: 653, column: 6)
!10882 = !DILocation(line: 656, column: 36, scope: !10881)
!10883 = !DILocation(line: 656, column: 7, scope: !10881)
!10884 = !DILocation(line: 659, column: 20, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10881, file: !1338, line: 659, column: 11)
!10886 = !DILocation(line: 659, column: 33, scope: !10885)
!10887 = !DILocation(line: 659, column: 11, scope: !10881)
!10888 = !DILocation(line: 661, column: 106, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10885, file: !1338, line: 660, column: 7)
!10890 = !DILocation(line: 661, column: 131, scope: !10889)
!10891 = !DILocation(line: 661, column: 120, scope: !10889)
!10892 = !DILocation(line: 661, column: 18, scope: !10889)
!10893 = !DILocation(line: 662, column: 8, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10889, file: !1338, line: 662, column: 8)
!10895 = !DILocation(line: 662, column: 8, scope: !10889)
!10896 = !DILocation(line: 662, column: 8, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10894, file: !1338, line: 662, column: 8)
!10898 = !DILocation(line: 684, column: 65, scope: !10874)
!10899 = !DILocation(line: 684, column: 15, scope: !10874)
!10900 = !DILocation(line: 684, column: 35, scope: !10874)
!10901 = !DILocation(line: 685, column: 6, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10874, file: !1338, line: 685, column: 6)
!10903 = !DILocation(line: 685, column: 6, scope: !10874)
!10904 = !DILocation(line: 685, column: 6, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10902, file: !1338, line: 685, column: 6)
!10906 = !DILocation(line: 693, column: 74, scope: !10874)
!10907 = !DILocation(line: 693, column: 63, scope: !10874)
!10908 = !DILocation(line: 693, column: 15, scope: !10874)
!10909 = !DILocation(line: 694, column: 6, scope: !10874)
!10910 = !DILocation(line: 699, column: 17, scope: !10874)
!10911 = !DILocation(line: 699, column: 6, scope: !10874)
!10912 = !DILocation(line: 700, column: 6, scope: !10874)
!10913 = distinct !{!10913, !10854, !10914}
!10914 = !DILocation(line: 707, column: 2, scope: !10829)
!10915 = !DILocation(line: 708, column: 1, scope: !10829)
!10916 = !DILocation(line: 0, scope: !1386)
!10917 = !DILocation(line: 526, column: 13, scope: !1386)
!10918 = !DILocation(line: 528, column: 17, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !1386, file: !1338, line: 528, column: 6)
!10920 = !DILocation(line: 528, column: 15, scope: !10919)
!10921 = !DILocation(line: 528, column: 6, scope: !1386)
!10922 = !DILocation(line: 530, column: 3, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10919, file: !1338, line: 529, column: 2)
!10924 = !DILocation(line: 532, column: 2, scope: !10923)
!10925 = !DILocation(line: 0, scope: !10919)
!10926 = !DILocation(line: 538, column: 12, scope: !1386)
!10927 = !DILocation(line: 540, column: 2, scope: !1386)
!10928 = distinct !DISubprogram(name: "prvInsertTimerInActiveList", scope: !1338, file: !1338, line: 544, type: !10929, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !10932)
!10929 = !DISubroutineType(types: !10930)
!10930 = !{!1160, !10931, !7596, !7596, !7596}
!10931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1340)
!10932 = !{!10933, !10934, !10935, !10936, !10937}
!10933 = !DILocalVariable(name: "pxTimer", arg: 1, scope: !10928, file: !1338, line: 544, type: !10931)
!10934 = !DILocalVariable(name: "xNextExpiryTime", arg: 2, scope: !10928, file: !1338, line: 544, type: !7596)
!10935 = !DILocalVariable(name: "xTimeNow", arg: 3, scope: !10928, file: !1338, line: 544, type: !7596)
!10936 = !DILocalVariable(name: "xCommandTime", arg: 4, scope: !10928, file: !1338, line: 544, type: !7596)
!10937 = !DILocalVariable(name: "xProcessTimerNow", scope: !10928, file: !1338, line: 546, type: !1160)
!10938 = !DILocation(line: 0, scope: !10928)
!10939 = !DILocation(line: 548, column: 2, scope: !10928)
!10940 = !DILocation(line: 549, column: 2, scope: !10928)
!10941 = !DILocation(line: 551, column: 22, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10928, file: !1338, line: 551, column: 6)
!10943 = !DILocation(line: 551, column: 6, scope: !10928)
!10944 = !DILocation(line: 555, column: 18, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10946, file: !1338, line: 555, column: 7)
!10946 = distinct !DILexicalBlock(scope: !10942, file: !1338, line: 552, column: 2)
!10947 = !DILocation(line: 555, column: 47, scope: !10945)
!10948 = !DILocation(line: 555, column: 35, scope: !10945)
!10949 = !DILocation(line: 555, column: 7, scope: !10946)
!10950 = !DILocation(line: 568, column: 18, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10952, file: !1338, line: 568, column: 7)
!10952 = distinct !DILexicalBlock(scope: !10942, file: !1338, line: 567, column: 2)
!10953 = !DILocation(line: 568, column: 35, scope: !10951)
!10954 = !DILocation(line: 0, scope: !10942)
!10955 = !DILocation(line: 581, column: 2, scope: !10928)
!10956 = distinct !DISubprogram(name: "xTimerGenericCommand", scope: !1338, file: !1338, line: 316, type: !10957, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !10959)
!10957 = !DISubroutineType(types: !10958)
!10958 = !{!1160, !1365, !9707, !7596, !1389, !7596}
!10959 = !{!10960, !10961, !10962, !10963, !10964, !10965, !10966}
!10960 = !DILocalVariable(name: "xTimer", arg: 1, scope: !10956, file: !1338, line: 316, type: !1365)
!10961 = !DILocalVariable(name: "xCommandID", arg: 2, scope: !10956, file: !1338, line: 316, type: !9707)
!10962 = !DILocalVariable(name: "xOptionalValue", arg: 3, scope: !10956, file: !1338, line: 316, type: !7596)
!10963 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !10956, file: !1338, line: 316, type: !1389)
!10964 = !DILocalVariable(name: "xTicksToWait", arg: 5, scope: !10956, file: !1338, line: 316, type: !7596)
!10965 = !DILocalVariable(name: "xReturn", scope: !10956, file: !1338, line: 318, type: !1160)
!10966 = !DILocalVariable(name: "xMessage", scope: !10956, file: !1338, line: 319, type: !10832)
!10967 = !DILocation(line: 0, scope: !10956)
!10968 = !DILocation(line: 319, column: 1, scope: !10956)
!10969 = !DILocation(line: 319, column: 21, scope: !10956)
!10970 = !DILocation(line: 323, column: 6, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10956, file: !1338, line: 323, column: 6)
!10972 = !DILocation(line: 323, column: 18, scope: !10971)
!10973 = !DILocation(line: 323, column: 6, scope: !10956)
!10974 = !DILocation(line: 326, column: 12, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10971, file: !1338, line: 324, column: 2)
!10976 = !DILocation(line: 326, column: 23, scope: !10975)
!10977 = !DILocation(line: 327, column: 31, scope: !10975)
!10978 = !DILocation(line: 327, column: 45, scope: !10975)
!10979 = !DILocation(line: 328, column: 31, scope: !10975)
!10980 = !DILocation(line: 328, column: 39, scope: !10975)
!10981 = !DILocation(line: 330, column: 18, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10975, file: !1338, line: 330, column: 7)
!10983 = !DILocation(line: 330, column: 7, scope: !10975)
!10984 = !DILocation(line: 332, column: 8, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10986, file: !1338, line: 332, column: 8)
!10986 = distinct !DILexicalBlock(scope: !10982, file: !1338, line: 331, column: 3)
!10987 = !DILocation(line: 332, column: 33, scope: !10985)
!10988 = !DILocation(line: 0, scope: !10985)
!10989 = !DILocation(line: 332, column: 8, scope: !10986)
!10990 = !DILocation(line: 334, column: 15, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10985, file: !1338, line: 333, column: 4)
!10992 = !DILocation(line: 335, column: 4, scope: !10991)
!10993 = !DILocation(line: 338, column: 15, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10985, file: !1338, line: 337, column: 4)
!10995 = !DILocation(line: 343, column: 14, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10982, file: !1338, line: 342, column: 3)
!10997 = !DILocation(line: 354, column: 1, scope: !10956)
!10998 = !DILocation(line: 353, column: 2, scope: !10956)
!10999 = distinct !DISubprogram(name: "prvSwitchTimerLists", scope: !1338, file: !1338, line: 711, type: !154, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !11000)
!11000 = !{!11001, !11002, !11003, !11004, !11005}
!11001 = !DILocalVariable(name: "xNextExpireTime", scope: !10999, file: !1338, line: 713, type: !855)
!11002 = !DILocalVariable(name: "xReloadTime", scope: !10999, file: !1338, line: 713, type: !855)
!11003 = !DILocalVariable(name: "pxTemp", scope: !10999, file: !1338, line: 714, type: !1370)
!11004 = !DILocalVariable(name: "pxTimer", scope: !10999, file: !1338, line: 715, type: !1340)
!11005 = !DILocalVariable(name: "xResult", scope: !10999, file: !1338, line: 716, type: !1160)
!11006 = !DILocation(line: 722, column: 9, scope: !10999)
!11007 = !DILocation(line: 722, column: 2, scope: !10999)
!11008 = !DILocation(line: 724, column: 21, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !10999, file: !1338, line: 723, column: 2)
!11010 = !DILocation(line: 0, scope: !10999)
!11011 = !DILocation(line: 727, column: 27, scope: !11009)
!11012 = !DILocation(line: 728, column: 38, scope: !11009)
!11013 = !DILocation(line: 728, column: 12, scope: !11009)
!11014 = !DILocation(line: 734, column: 12, scope: !11009)
!11015 = !DILocation(line: 734, column: 3, scope: !11009)
!11016 = !DILocation(line: 736, column: 16, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11009, file: !1338, line: 736, column: 7)
!11018 = !DILocation(line: 736, column: 29, scope: !11017)
!11019 = !DILocation(line: 736, column: 7, scope: !11009)
!11020 = !DILocation(line: 744, column: 47, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11017, file: !1338, line: 737, column: 3)
!11022 = !DILocation(line: 744, column: 36, scope: !11021)
!11023 = !DILocation(line: 745, column: 20, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11021, file: !1338, line: 745, column: 8)
!11025 = !DILocation(line: 745, column: 8, scope: !11021)
!11026 = !DILocation(line: 747, column: 5, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11024, file: !1338, line: 746, column: 4)
!11028 = !DILocation(line: 748, column: 5, scope: !11027)
!11029 = !DILocation(line: 749, column: 18, scope: !11027)
!11030 = !DILocation(line: 749, column: 5, scope: !11027)
!11031 = !DILocation(line: 750, column: 4, scope: !11027)
!11032 = !DILocation(line: 753, column: 15, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11024, file: !1338, line: 752, column: 4)
!11034 = !DILocation(line: 754, column: 5, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11033, file: !1338, line: 754, column: 5)
!11036 = !DILocation(line: 754, column: 5, scope: !11033)
!11037 = !DILocation(line: 754, column: 5, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11035, file: !1338, line: 754, column: 5)
!11039 = distinct !{!11039, !11007, !11040}
!11040 = !DILocation(line: 762, column: 2, scope: !10999)
!11041 = !DILocation(line: 765, column: 23, scope: !10999)
!11042 = !DILocation(line: 765, column: 21, scope: !10999)
!11043 = !DILocation(line: 766, column: 22, scope: !10999)
!11044 = !DILocation(line: 767, column: 1, scope: !10999)
!11045 = distinct !DISubprogram(name: "prvProcessExpiredTimer", scope: !1338, file: !1338, line: 378, type: !11046, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !11048)
!11046 = !DISubroutineType(types: !11047)
!11047 = !{null, !7596, !7596}
!11048 = !{!11049, !11050, !11051, !11052}
!11049 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !11045, file: !1338, line: 378, type: !7596)
!11050 = !DILocalVariable(name: "xTimeNow", arg: 2, scope: !11045, file: !1338, line: 378, type: !7596)
!11051 = !DILocalVariable(name: "xResult", scope: !11045, file: !1338, line: 380, type: !1160)
!11052 = !DILocalVariable(name: "pxTimer", scope: !11045, file: !1338, line: 381, type: !10931)
!11053 = !DILocation(line: 0, scope: !11045)
!11054 = !DILocation(line: 381, column: 41, scope: !11045)
!11055 = !DILocation(line: 385, column: 37, scope: !11045)
!11056 = !DILocation(line: 385, column: 11, scope: !11045)
!11057 = !DILocation(line: 390, column: 15, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11045, file: !1338, line: 390, column: 6)
!11059 = !DILocation(line: 390, column: 28, scope: !11058)
!11060 = !DILocation(line: 390, column: 6, scope: !11045)
!11061 = !DILocation(line: 381, column: 27, scope: !11045)
!11062 = !DILocation(line: 395, column: 73, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11064, file: !1338, line: 395, column: 7)
!11064 = distinct !DILexicalBlock(scope: !11058, file: !1338, line: 391, column: 2)
!11065 = !DILocation(line: 395, column: 62, scope: !11063)
!11066 = !DILocation(line: 395, column: 7, scope: !11063)
!11067 = !DILocation(line: 395, column: 124, scope: !11063)
!11068 = !DILocation(line: 395, column: 7, scope: !11064)
!11069 = !DILocation(line: 399, column: 14, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11063, file: !1338, line: 396, column: 3)
!11071 = !DILocation(line: 400, column: 4, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11070, file: !1338, line: 400, column: 4)
!11073 = !DILocation(line: 400, column: 4, scope: !11070)
!11074 = !DILocation(line: 400, column: 4, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11072, file: !1338, line: 400, column: 4)
!11076 = !DILocation(line: 414, column: 11, scope: !11045)
!11077 = !DILocation(line: 414, column: 2, scope: !11045)
!11078 = !DILocation(line: 415, column: 1, scope: !11045)
!11079 = distinct !DISubprogram(name: "xTimerCreate", scope: !1338, file: !1338, line: 275, type: !11080, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !11082)
!11080 = !DISubroutineType(types: !11081)
!11081 = !{!1365, !330, !7596, !8400, !7299, !1360}
!11082 = !{!11083, !11084, !11085, !11086, !11087, !11088}
!11083 = !DILocalVariable(name: "pcTimerName", arg: 1, scope: !11079, file: !1338, line: 275, type: !330)
!11084 = !DILocalVariable(name: "xTimerPeriodInTicks", arg: 2, scope: !11079, file: !1338, line: 275, type: !7596)
!11085 = !DILocalVariable(name: "uxAutoReload", arg: 3, scope: !11079, file: !1338, line: 275, type: !8400)
!11086 = !DILocalVariable(name: "pvTimerID", arg: 4, scope: !11079, file: !1338, line: 275, type: !7299)
!11087 = !DILocalVariable(name: "pxCallbackFunction", arg: 5, scope: !11079, file: !1338, line: 275, type: !1360)
!11088 = !DILocalVariable(name: "pxNewTimer", scope: !11079, file: !1338, line: 277, type: !1340)
!11089 = !DILocation(line: 0, scope: !11079)
!11090 = !DILocation(line: 280, column: 26, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11079, file: !1338, line: 280, column: 6)
!11092 = !DILocation(line: 280, column: 6, scope: !11079)
!11093 = !DILocation(line: 286, column: 30, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !11091, file: !1338, line: 285, column: 2)
!11095 = !DILocation(line: 287, column: 18, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11094, file: !1338, line: 287, column: 7)
!11097 = !DILocation(line: 287, column: 7, scope: !11094)
!11098 = !DILocation(line: 291, column: 4, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11096, file: !1338, line: 288, column: 3)
!11100 = !DILocation(line: 294, column: 16, scope: !11099)
!11101 = !DILocation(line: 294, column: 28, scope: !11099)
!11102 = !DILocation(line: 295, column: 16, scope: !11099)
!11103 = !DILocation(line: 295, column: 36, scope: !11099)
!11104 = !DILocation(line: 296, column: 16, scope: !11099)
!11105 = !DILocation(line: 296, column: 29, scope: !11099)
!11106 = !DILocation(line: 297, column: 16, scope: !11099)
!11107 = !DILocation(line: 297, column: 26, scope: !11099)
!11108 = !DILocation(line: 298, column: 16, scope: !11099)
!11109 = !DILocation(line: 298, column: 35, scope: !11099)
!11110 = !DILocation(line: 299, column: 40, scope: !11099)
!11111 = !DILocation(line: 299, column: 4, scope: !11099)
!11112 = !DILocation(line: 302, column: 3, scope: !11099)
!11113 = !DILocation(line: 310, column: 2, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11115, file: !1338, line: 310, column: 2)
!11115 = distinct !DILexicalBlock(scope: !11079, file: !1338, line: 310, column: 2)
!11116 = !DILocation(line: 312, column: 2, scope: !11079)
!11117 = distinct !DISubprogram(name: "pcTimerGetTimerName", scope: !1338, file: !1338, line: 370, type: !11118, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !11120)
!11118 = !DISubroutineType(types: !11119)
!11119 = !{!331, !1365}
!11120 = !{!11121, !11122}
!11121 = !DILocalVariable(name: "xTimer", arg: 1, scope: !11117, file: !1338, line: 370, type: !1365)
!11122 = !DILocalVariable(name: "pxTimer", scope: !11117, file: !1338, line: 372, type: !1340)
!11123 = !DILocation(line: 0, scope: !11117)
!11124 = !DILocation(line: 374, column: 18, scope: !11117)
!11125 = !DILocation(line: 374, column: 2, scope: !11117)
!11126 = distinct !DISubprogram(name: "xTimerIsTimerActive", scope: !1338, file: !1338, line: 808, type: !11127, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !11129)
!11127 = !DISubroutineType(types: !11128)
!11128 = !{!1160, !1365}
!11129 = !{!11130, !11131, !11132}
!11130 = !DILocalVariable(name: "xTimer", arg: 1, scope: !11126, file: !1338, line: 808, type: !1365)
!11131 = !DILocalVariable(name: "xTimerIsInActiveList", scope: !11126, file: !1338, line: 810, type: !1160)
!11132 = !DILocalVariable(name: "pxTimer", scope: !11126, file: !1338, line: 811, type: !1340)
!11133 = !DILocation(line: 0, scope: !11126)
!11134 = !DILocation(line: 814, column: 2, scope: !11126)
!11135 = !DILocation(line: 819, column: 44, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11126, file: !1338, line: 815, column: 2)
!11137 = !DILocation(line: 819, column: 41, scope: !11136)
!11138 = !DILocation(line: 821, column: 2, scope: !11126)
!11139 = !DILocation(line: 823, column: 2, scope: !11126)
!11140 = distinct !DISubprogram(name: "pvTimerGetTimerID", scope: !1338, file: !1338, line: 827, type: !11141, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1337, retainedNodes: !11144)
!11141 = !DISubroutineType(types: !11142)
!11142 = !{!51, !11143}
!11143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1365)
!11144 = !{!11145, !11146}
!11145 = !DILocalVariable(name: "xTimer", arg: 1, scope: !11140, file: !1338, line: 827, type: !11143)
!11146 = !DILocalVariable(name: "pxTimer", scope: !11140, file: !1338, line: 829, type: !10931)
!11147 = !DILocation(line: 0, scope: !11140)
!11148 = !DILocation(line: 831, column: 18, scope: !11140)
!11149 = !DILocation(line: 831, column: 2, scope: !11140)
!11150 = distinct !DISubprogram(name: "pxPortInitialiseStack", scope: !1403, file: !1403, line: 222, type: !11151, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !11153)
!11151 = !DISubroutineType(types: !11152)
!11152 = !{!1157, !1157, !7296, !51}
!11153 = !{!11154, !11155, !11156}
!11154 = !DILocalVariable(name: "pxTopOfStack", arg: 1, scope: !11150, file: !1403, line: 222, type: !1157)
!11155 = !DILocalVariable(name: "pxCode", arg: 2, scope: !11150, file: !1403, line: 222, type: !7296)
!11156 = !DILocalVariable(name: "pvParameters", arg: 3, scope: !11150, file: !1403, line: 222, type: !51)
!11157 = !DILocation(line: 0, scope: !11150)
!11158 = !DILocation(line: 229, column: 14, scope: !11150)
!11159 = !DILocation(line: 231, column: 16, scope: !11150)
!11160 = !DILocation(line: 232, column: 14, scope: !11150)
!11161 = !DILocation(line: 233, column: 18, scope: !11150)
!11162 = !DILocation(line: 233, column: 16, scope: !11150)
!11163 = !DILocation(line: 234, column: 14, scope: !11150)
!11164 = !DILocation(line: 235, column: 16, scope: !11150)
!11165 = !DILocation(line: 238, column: 15, scope: !11150)
!11166 = !DILocation(line: 239, column: 18, scope: !11150)
!11167 = !DILocation(line: 239, column: 16, scope: !11150)
!11168 = !DILocation(line: 243, column: 14, scope: !11150)
!11169 = !DILocation(line: 244, column: 16, scope: !11150)
!11170 = !DILocation(line: 246, column: 15, scope: !11150)
!11171 = !DILocation(line: 248, column: 2, scope: !11150)
!11172 = distinct !DISubprogram(name: "prvTaskExitError", scope: !1403, file: !1403, line: 252, type: !154, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !1935)
!11173 = !DILocation(line: 260, column: 2, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11172, file: !1403, line: 260, column: 2)
!11175 = !DILocation(line: 260, column: 2, scope: !11172)
!11176 = !DILocation(line: 260, column: 2, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11174, file: !1403, line: 260, column: 2)
!11178 = !DILocation(line: 215, column: 2, scope: !11179, inlinedAt: !11182)
!11179 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !856, file: !856, line: 211, type: !154, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !11180)
!11180 = !{!11181}
!11181 = !DILocalVariable(name: "ulNewBASEPRI", scope: !11179, file: !856, line: 213, type: !61)
!11182 = distinct !DILocation(line: 261, column: 2, scope: !11172)
!11183 = !{i64 657616, i64 657649, i64 657685, i64 657712}
!11184 = !DILocation(line: 0, scope: !11179, inlinedAt: !11182)
!11185 = !DILocation(line: 262, column: 2, scope: !11172)
!11186 = !DILocation(line: 262, column: 2, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11188, file: !1403, line: 262, column: 2)
!11188 = distinct !DILexicalBlock(scope: !11172, file: !1403, line: 262, column: 2)
!11189 = distinct !{!11189, !11190, !11191}
!11190 = !DILocation(line: 262, column: 2, scope: !11188)
!11191 = !DILocation(line: 262, column: 11, scope: !11188)
!11192 = distinct !DISubprogram(name: "vPortCurrentTaskStackOverflowCheck", scope: !1403, file: !1403, line: 268, type: !154, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !11193)
!11193 = !{!11194, !11195}
!11194 = !DILocalVariable(name: "stack_start_address", scope: !11192, file: !1403, line: 270, type: !61)
!11195 = !DILocalVariable(name: "ret", scope: !11192, file: !1403, line: 271, type: !527)
!11196 = !DILocation(line: 273, column: 24, scope: !11192)
!11197 = !DILocation(line: 0, scope: !11192)
!11198 = !DILocation(line: 276, column: 8, scope: !11192)
!11199 = !DILocation(line: 281, column: 1, scope: !11192)
!11200 = distinct !DISubprogram(name: "SVC_Handler", scope: !1403, file: !1403, line: 287, type: !154, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !1935)
!11201 = !DILocation(line: 289, column: 2, scope: !11200)
!11202 = !{i64 11674, i64 11700, i64 11789, i64 11939, i64 11982, i64 12128, i64 12194, i64 12283, i64 12374, i64 12519, i64 12585, i64 12607, i64 12635, i64 12666, i64 12690, i64 12709, i64 12734}
!11203 = !DILocation(line: 312, column: 1, scope: !11200)
!11204 = distinct !DISubprogram(name: "xPortStartScheduler", scope: !1403, file: !1403, line: 335, type: !7696, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !11205)
!11205 = !{!11206, !11208, !11210}
!11206 = !DILocalVariable(name: "ulOriginalPriority", scope: !11207, file: !1403, line: 343, type: !60)
!11207 = distinct !DILexicalBlock(scope: !11204, file: !1403, line: 342, column: 2)
!11208 = !DILocalVariable(name: "pucFirstUserPriorityRegister", scope: !11207, file: !1403, line: 344, type: !11209)
!11209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !52)
!11210 = !DILocalVariable(name: "ucMaxPriorityValue", scope: !11207, file: !1403, line: 345, type: !53)
!11211 = !DILocation(line: 343, column: 3, scope: !11207)
!11212 = !DILocation(line: 343, column: 21, scope: !11207)
!11213 = !DILocation(line: 0, scope: !11207)
!11214 = !DILocation(line: 345, column: 3, scope: !11207)
!11215 = !DILocation(line: 345, column: 20, scope: !11207)
!11216 = !DILocation(line: 353, column: 24, scope: !11207)
!11217 = !DILocation(line: 353, column: 22, scope: !11207)
!11218 = !DILocation(line: 357, column: 33, scope: !11207)
!11219 = !DILocation(line: 360, column: 24, scope: !11207)
!11220 = !DILocation(line: 360, column: 22, scope: !11207)
!11221 = !DILocation(line: 363, column: 65, scope: !11207)
!11222 = !DILocation(line: 363, column: 63, scope: !11207)
!11223 = !DILocation(line: 363, column: 24, scope: !11207)
!11224 = !DILocation(line: 368, column: 12, scope: !11207)
!11225 = !DILocation(line: 368, column: 55, scope: !11207)
!11226 = !DILocation(line: 368, column: 3, scope: !11207)
!11227 = !DILocation(line: 370, column: 22, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11207, file: !1403, line: 369, column: 3)
!11229 = !DILocation(line: 371, column: 23, scope: !11228)
!11230 = distinct !{!11230, !11226, !11231}
!11231 = !DILocation(line: 372, column: 3, scope: !11207)
!11232 = !DILocation(line: 376, column: 22, scope: !11207)
!11233 = !DILocation(line: 377, column: 22, scope: !11207)
!11234 = !DILocation(line: 381, column: 35, scope: !11207)
!11235 = !DILocation(line: 381, column: 33, scope: !11207)
!11236 = !DILocation(line: 382, column: 2, scope: !11204)
!11237 = !DILocation(line: 386, column: 23, scope: !11204)
!11238 = !DILocation(line: 388, column: 23, scope: !11204)
!11239 = !DILocation(line: 392, column: 2, scope: !11204)
!11240 = !DILocation(line: 395, column: 20, scope: !11204)
!11241 = !DILocation(line: 398, column: 2, scope: !11204)
!11242 = !DILocation(line: 401, column: 17, scope: !11204)
!11243 = !DILocation(line: 404, column: 2, scope: !11204)
!11244 = !DILocation(line: 410, column: 2, scope: !11204)
!11245 = !DILocation(line: 413, column: 2, scope: !11204)
!11246 = distinct !DISubprogram(name: "vPortEnableVFP", scope: !1403, file: !1403, line: 741, type: !154, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !1935)
!11247 = !DILocation(line: 743, column: 2, scope: !11246)
!11248 = !{i64 28402, i64 28478, i64 28502, i64 28517, i64 28609, i64 28633}
!11249 = !DILocation(line: 752, column: 1, scope: !11246)
!11250 = distinct !DISubprogram(name: "prvPortStartFirstTask", scope: !1403, file: !1403, line: 315, type: !154, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !1935)
!11251 = !DILocation(line: 317, column: 2, scope: !11250)
!11252 = !{i64 12920, i64 13009, i64 13036, i64 13063, i64 13138, i64 13194, i64 13216, i64 13235, i64 13254, i64 13314}
!11253 = !DILocation(line: 329, column: 1, scope: !11250)
!11254 = distinct !DISubprogram(name: "vPortEndScheduler", scope: !1403, file: !1403, line: 417, type: !154, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !1935)
!11255 = !DILocation(line: 421, column: 2, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11254, file: !1403, line: 421, column: 2)
!11257 = !DILocation(line: 421, column: 2, scope: !11254)
!11258 = !DILocation(line: 421, column: 2, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11256, file: !1403, line: 421, column: 2)
!11260 = !DILocation(line: 422, column: 1, scope: !11254)
!11261 = distinct !DISubprogram(name: "vPortEnterCritical", scope: !1403, file: !1403, line: 425, type: !154, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !1935)
!11262 = !DILocation(line: 215, column: 2, scope: !11179, inlinedAt: !11263)
!11263 = distinct !DILocation(line: 427, column: 2, scope: !11261)
!11264 = !DILocation(line: 0, scope: !11179, inlinedAt: !11263)
!11265 = !DILocation(line: 428, column: 19, scope: !11261)
!11266 = !DILocation(line: 435, column: 24, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11261, file: !1403, line: 435, column: 6)
!11268 = !DILocation(line: 435, column: 6, scope: !11261)
!11269 = !DILocation(line: 437, column: 3, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11271, file: !1403, line: 437, column: 3)
!11271 = distinct !DILexicalBlock(scope: !11267, file: !1403, line: 436, column: 2)
!11272 = !DILocation(line: 437, column: 3, scope: !11271)
!11273 = !DILocation(line: 437, column: 3, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11270, file: !1403, line: 437, column: 3)
!11275 = !DILocation(line: 439, column: 1, scope: !11261)
!11276 = distinct !DISubprogram(name: "vPortExitCritical", scope: !1403, file: !1403, line: 442, type: !154, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !1935)
!11277 = !DILocation(line: 444, column: 2, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11276, file: !1403, line: 444, column: 2)
!11279 = !DILocation(line: 444, column: 2, scope: !11276)
!11280 = !DILocation(line: 444, column: 2, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11278, file: !1403, line: 444, column: 2)
!11282 = !DILocation(line: 445, column: 19, scope: !11276)
!11283 = !DILocation(line: 446, column: 24, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11276, file: !1403, line: 446, column: 6)
!11285 = !DILocation(line: 446, column: 6, scope: !11276)
!11286 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !11287, file: !856, line: 247, type: !61)
!11287 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !856, file: !856, line: 247, type: !2535, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !11288)
!11288 = !{!11286}
!11289 = !DILocation(line: 0, scope: !11287, inlinedAt: !11290)
!11290 = distinct !DILocation(line: 448, column: 3, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11284, file: !1403, line: 447, column: 2)
!11292 = !DILocation(line: 249, column: 2, scope: !11287, inlinedAt: !11290)
!11293 = !{i64 658537}
!11294 = !DILocation(line: 449, column: 2, scope: !11291)
!11295 = !DILocation(line: 450, column: 1, scope: !11276)
!11296 = distinct !DISubprogram(name: "PendSV_Handler", scope: !1403, file: !1403, line: 469, type: !154, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !1935)
!11297 = !DILocation(line: 473, column: 2, scope: !11296)
!11298 = !{i64 18243, i64 18266, i64 18289, i64 18376, i64 18399, i64 18421, i64 18446, i64 18465, i64 18481, i64 18559, i64 18584, i64 18600, i64 18701, i64 18721, i64 18755, i64 18771, i64 18836, i64 18852, i64 18943, i64 18959, i64 18987, i64 19012, i64 19040, i64 19059, i64 19080, i64 19258, i64 19436, i64 19460, i64 19488, i64 19516, i64 19532, i64 19620, i64 19645, i64 19661, i64 19725, i64 19741, i64 19849, i64 19869, i64 19903, i64 19919, i64 19944, i64 19963, i64 20148, i64 20164, i64 20185, i64 20201, i64 20223}
!11299 = !DILocation(line: 537, column: 1, scope: !11296)
!11300 = distinct !DISubprogram(name: "SysTick_Handler", scope: !1403, file: !1403, line: 540, type: !154, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !11301)
!11301 = !{!11302}
!11302 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !11300, file: !1403, line: 547, type: !1154)
!11303 = !DILocation(line: 231, column: 2, scope: !11304, inlinedAt: !11308)
!11304 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !856, file: !856, line: 227, type: !1916, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !11305)
!11305 = !{!11306, !11307}
!11306 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !11304, file: !856, line: 229, type: !61)
!11307 = !DILocalVariable(name: "ulNewBASEPRI", scope: !11304, file: !856, line: 229, type: !61)
!11308 = distinct !DILocation(line: 548, column: 27, scope: !11300)
!11309 = !{i64 658004, i64 658041, i64 658073, i64 658109, i64 658136}
!11310 = !DILocation(line: 0, scope: !11304, inlinedAt: !11308)
!11311 = !DILocation(line: 0, scope: !11300)
!11312 = !DILocation(line: 552, column: 3, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11300, file: !1403, line: 549, column: 2)
!11314 = !DILocation(line: 555, column: 7, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11313, file: !1403, line: 555, column: 7)
!11316 = !DILocation(line: 555, column: 28, scope: !11315)
!11317 = !DILocation(line: 555, column: 7, scope: !11313)
!11318 = !DILocation(line: 559, column: 26, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11315, file: !1403, line: 556, column: 3)
!11320 = !DILocation(line: 560, column: 3, scope: !11319)
!11321 = !DILocation(line: 0, scope: !11287, inlinedAt: !11322)
!11322 = distinct !DILocation(line: 562, column: 2, scope: !11300)
!11323 = !DILocation(line: 249, column: 2, scope: !11287, inlinedAt: !11322)
!11324 = !DILocation(line: 564, column: 1, scope: !11300)
!11325 = distinct !DISubprogram(name: "vPortValidateInterruptPriority", scope: !1403, file: !1403, line: 757, type: !154, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1402, retainedNodes: !11326)
!11326 = !{!11327, !11328}
!11327 = !DILocalVariable(name: "ulCurrentInterrupt", scope: !11325, file: !1403, line: 759, type: !61)
!11328 = !DILocalVariable(name: "ucCurrentPriority", scope: !11325, file: !1403, line: 760, type: !54)
!11329 = !DILocation(line: 763, column: 3, scope: !11325)
!11330 = !{i64 28942}
!11331 = !DILocation(line: 0, scope: !11325)
!11332 = !DILocation(line: 766, column: 26, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11325, file: !1403, line: 766, column: 7)
!11334 = !DILocation(line: 766, column: 7, scope: !11325)
!11335 = !DILocation(line: 769, column: 24, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11333, file: !1403, line: 767, column: 3)
!11337 = !DILocation(line: 794, column: 4, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11336, file: !1403, line: 794, column: 4)
!11339 = !DILocation(line: 794, column: 4, scope: !11336)
!11340 = !DILocation(line: 794, column: 4, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11338, file: !1403, line: 794, column: 4)
!11342 = !DILocation(line: 810, column: 3, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11325, file: !1403, line: 810, column: 3)
!11344 = !DILocation(line: 810, column: 3, scope: !11325)
!11345 = !DILocation(line: 810, column: 3, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11343, file: !1403, line: 810, column: 3)
!11347 = !DILocation(line: 811, column: 2, scope: !11325)
!11348 = distinct !DISubprogram(name: "pvPortMalloc", scope: !1426, file: !1426, line: 162, type: !11349, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11351)
!11349 = !DISubroutineType(types: !11350)
!11350 = !{!51, !1209}
!11351 = !{!11352, !11353, !11354, !11355, !11356}
!11352 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !11348, file: !1426, line: 162, type: !1209)
!11353 = !DILocalVariable(name: "pxBlock", scope: !11348, file: !1426, line: 164, type: !1428)
!11354 = !DILocalVariable(name: "pxPreviousBlock", scope: !11348, file: !1426, line: 164, type: !1428)
!11355 = !DILocalVariable(name: "pxNewBlockLink", scope: !11348, file: !1426, line: 164, type: !1428)
!11356 = !DILocalVariable(name: "pvReturn", scope: !11348, file: !1426, line: 165, type: !51)
!11357 = !DILocation(line: 0, scope: !11348)
!11358 = !DILocation(line: 178, column: 2, scope: !11348)
!11359 = !DILocation(line: 182, column: 7, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11361, file: !1426, line: 182, column: 7)
!11361 = distinct !DILexicalBlock(scope: !11348, file: !1426, line: 179, column: 2)
!11362 = !DILocation(line: 182, column: 13, scope: !11360)
!11363 = !DILocation(line: 182, column: 7, scope: !11361)
!11364 = !DILocation(line: 184, column: 4, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11360, file: !1426, line: 183, column: 3)
!11366 = !DILocation(line: 185, column: 3, scope: !11365)
!11367 = !DILocation(line: 195, column: 23, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11361, file: !1426, line: 195, column: 7)
!11369 = !DILocation(line: 195, column: 21, scope: !11368)
!11370 = !DILocation(line: 195, column: 44, scope: !11368)
!11371 = !DILocation(line: 195, column: 7, scope: !11361)
!11372 = !DILocation(line: 201, column: 17, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11374, file: !1426, line: 200, column: 4)
!11374 = distinct !DILexicalBlock(scope: !11375, file: !1426, line: 199, column: 8)
!11375 = distinct !DILexicalBlock(scope: !11368, file: !1426, line: 196, column: 3)
!11376 = !DILocation(line: 205, column: 23, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11373, file: !1426, line: 205, column: 9)
!11378 = !DILocation(line: 205, column: 51, scope: !11377)
!11379 = !DILocation(line: 205, column: 9, scope: !11373)
!11380 = !DILocation(line: 221, column: 22, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11375, file: !1426, line: 221, column: 8)
!11382 = !DILocation(line: 221, column: 28, scope: !11381)
!11383 = !DILocation(line: 226, column: 22, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11381, file: !1426, line: 222, column: 4)
!11385 = !DILocation(line: 227, column: 23, scope: !11384)
!11386 = !DILocation(line: 227, column: 34, scope: !11384)
!11387 = !DILocation(line: 227, column: 50, scope: !11384)
!11388 = !DILocation(line: 227, column: 64, scope: !11384)
!11389 = !DILocation(line: 227, column: 80, scope: !11384)
!11390 = !DILocation(line: 227, column: 5, scope: !11384)
!11391 = distinct !{!11391, !11390, !11392}
!11392 = !DILocation(line: 231, column: 5, scope: !11384)
!11393 = !DILocation(line: 0, scope: !11384)
!11394 = !DILocation(line: 235, column: 20, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11384, file: !1426, line: 235, column: 9)
!11396 = !DILocation(line: 235, column: 17, scope: !11395)
!11397 = !DILocation(line: 235, column: 9, scope: !11384)
!11398 = !DILocation(line: 239, column: 63, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11395, file: !1426, line: 236, column: 5)
!11400 = !DILocation(line: 239, column: 81, scope: !11399)
!11401 = !DILocation(line: 246, column: 50, scope: !11399)
!11402 = !DILocation(line: 246, column: 39, scope: !11399)
!11403 = !DILocation(line: 250, column: 21, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11399, file: !1426, line: 250, column: 10)
!11405 = !DILocation(line: 250, column: 32, scope: !11404)
!11406 = !DILocation(line: 250, column: 48, scope: !11404)
!11407 = !DILocation(line: 250, column: 10, scope: !11399)
!11408 = !DILocation(line: 256, column: 39, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11404, file: !1426, line: 251, column: 6)
!11410 = !DILocation(line: 256, column: 63, scope: !11409)
!11411 = !DILocation(line: 256, column: 24, scope: !11409)
!11412 = !DILocation(line: 257, column: 7, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11409, file: !1426, line: 257, column: 7)
!11414 = !DILocation(line: 257, column: 7, scope: !11409)
!11415 = !DILocation(line: 257, column: 7, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11413, file: !1426, line: 257, column: 7)
!11417 = !DILocation(line: 261, column: 45, scope: !11409)
!11418 = !DILocation(line: 261, column: 56, scope: !11409)
!11419 = !DILocation(line: 261, column: 23, scope: !11409)
!11420 = !DILocation(line: 261, column: 34, scope: !11409)
!11421 = !DILocation(line: 262, column: 27, scope: !11409)
!11422 = !DILocation(line: 265, column: 7, scope: !11409)
!11423 = !DILocation(line: 272, column: 38, scope: !11399)
!11424 = !DILocation(line: 266, column: 6, scope: !11409)
!11425 = !DILocation(line: 272, column: 26, scope: !11399)
!11426 = !DILocation(line: 274, column: 32, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11399, file: !1426, line: 274, column: 10)
!11428 = !DILocation(line: 274, column: 30, scope: !11427)
!11429 = !DILocation(line: 274, column: 10, scope: !11399)
!11430 = !DILocation(line: 276, column: 38, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11427, file: !1426, line: 275, column: 6)
!11432 = !DILocation(line: 277, column: 6, scope: !11431)
!11433 = !DILocation(line: 285, column: 29, scope: !11399)
!11434 = !DILocation(line: 285, column: 26, scope: !11399)
!11435 = !DILocation(line: 286, column: 31, scope: !11399)
!11436 = !DILocation(line: 287, column: 5, scope: !11399)
!11437 = !DILocation(line: 305, column: 11, scope: !11348)
!11438 = !DILocation(line: 321, column: 2, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11348, file: !1426, line: 321, column: 2)
!11440 = !DILocation(line: 321, column: 2, scope: !11348)
!11441 = !DILocation(line: 321, column: 2, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11439, file: !1426, line: 321, column: 2)
!11443 = !DILocation(line: 322, column: 2, scope: !11348)
!11444 = distinct !DISubprogram(name: "prvHeapInit", scope: !1426, file: !1426, line: 392, type: !154, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11445)
!11445 = !{!11446, !11447, !11448, !11449}
!11446 = !DILocalVariable(name: "pxFirstFreeBlock", scope: !11444, file: !1426, line: 394, type: !1428)
!11447 = !DILocalVariable(name: "pucAlignedHeap", scope: !11444, file: !1426, line: 395, type: !210)
!11448 = !DILocalVariable(name: "ulAddress", scope: !11444, file: !1426, line: 396, type: !61)
!11449 = !DILocalVariable(name: "xTotalHeapSize", scope: !11444, file: !1426, line: 397, type: !1209)
!11450 = !DILocation(line: 0, scope: !11444)
!11451 = !DILocation(line: 412, column: 25, scope: !11444)
!11452 = !DILocation(line: 413, column: 20, scope: !11444)
!11453 = !DILocation(line: 420, column: 8, scope: !11444)
!11454 = !DILocation(line: 421, column: 20, scope: !11444)
!11455 = !DILocation(line: 422, column: 25, scope: !11444)
!11456 = !DILocation(line: 427, column: 31, scope: !11444)
!11457 = !DILocation(line: 428, column: 38, scope: !11444)
!11458 = !DILocation(line: 428, column: 36, scope: !11444)
!11459 = !DILocation(line: 434, column: 33, scope: !11444)
!11460 = !DILocation(line: 435, column: 22, scope: !11444)
!11461 = !DILocation(line: 438, column: 21, scope: !11444)
!11462 = !DILocation(line: 439, column: 1, scope: !11444)
!11463 = distinct !DISubprogram(name: "prvInsertBlockIntoFreeList", scope: !1426, file: !1426, line: 442, type: !11464, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11466)
!11464 = !DISubroutineType(types: !11465)
!11465 = !{null, !1428}
!11466 = !{!11467, !11468, !11469}
!11467 = !DILocalVariable(name: "pxBlockToInsert", arg: 1, scope: !11463, file: !1426, line: 442, type: !1428)
!11468 = !DILocalVariable(name: "pxIterator", scope: !11463, file: !1426, line: 444, type: !1428)
!11469 = !DILocalVariable(name: "puc", scope: !11463, file: !1426, line: 445, type: !210)
!11470 = !DILocation(line: 0, scope: !11463)
!11471 = !DILocation(line: 449, column: 7, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11463, file: !1426, line: 449, column: 2)
!11473 = !DILocation(line: 0, scope: !11472)
!11474 = !DILocation(line: 449, column: 41, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11472, file: !1426, line: 449, column: 2)
!11476 = !DILocation(line: 449, column: 57, scope: !11475)
!11477 = !DILocation(line: 449, column: 2, scope: !11472)
!11478 = distinct !{!11478, !11477, !11479}
!11479 = !DILocation(line: 452, column: 2, scope: !11472)
!11480 = !DILocation(line: 456, column: 8, scope: !11463)
!11481 = !DILocation(line: 457, column: 26, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11463, file: !1426, line: 457, column: 6)
!11483 = !DILocation(line: 457, column: 12, scope: !11482)
!11484 = !DILocation(line: 457, column: 42, scope: !11482)
!11485 = !DILocation(line: 457, column: 39, scope: !11482)
!11486 = !DILocation(line: 457, column: 6, scope: !11463)
!11487 = !DILocation(line: 459, column: 26, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11482, file: !1426, line: 458, column: 2)
!11489 = !DILocation(line: 461, column: 2, scope: !11488)
!11490 = !DILocation(line: 469, column: 8, scope: !11463)
!11491 = !DILocation(line: 470, column: 31, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11463, file: !1426, line: 470, column: 6)
!11493 = !DILocation(line: 470, column: 12, scope: !11492)
!11494 = !DILocation(line: 470, column: 47, scope: !11492)
!11495 = !DILocation(line: 470, column: 44, scope: !11492)
!11496 = !DILocation(line: 470, column: 6, scope: !11463)
!11497 = !DILocation(line: 475, column: 64, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11499, file: !1426, line: 473, column: 3)
!11499 = distinct !DILexicalBlock(scope: !11500, file: !1426, line: 472, column: 7)
!11500 = distinct !DILexicalBlock(scope: !11492, file: !1426, line: 471, column: 2)
!11501 = !DILocation(line: 475, column: 32, scope: !11498)
!11502 = !DILocation(line: 476, column: 51, scope: !11498)
!11503 = !DILocation(line: 476, column: 68, scope: !11498)
!11504 = !DILocation(line: 477, column: 3, scope: !11498)
!11505 = !DILocation(line: 0, scope: !11492)
!11506 = !DILocation(line: 492, column: 17, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11463, file: !1426, line: 492, column: 6)
!11508 = !DILocation(line: 492, column: 6, scope: !11463)
!11509 = !DILocation(line: 494, column: 31, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11507, file: !1426, line: 493, column: 2)
!11511 = !DILocation(line: 495, column: 2, scope: !11510)
!11512 = !DILocation(line: 500, column: 1, scope: !11463)
!11513 = distinct !DISubprogram(name: "vPortFree", scope: !1426, file: !1426, line: 326, type: !640, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11514)
!11514 = !{!11515, !11516, !11517}
!11515 = !DILocalVariable(name: "pv", arg: 1, scope: !11513, file: !1426, line: 326, type: !51)
!11516 = !DILocalVariable(name: "puc", scope: !11513, file: !1426, line: 328, type: !210)
!11517 = !DILocalVariable(name: "pxLink", scope: !11513, file: !1426, line: 329, type: !1428)
!11518 = !DILocation(line: 0, scope: !11513)
!11519 = !DILocation(line: 331, column: 9, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11513, file: !1426, line: 331, column: 6)
!11521 = !DILocation(line: 331, column: 6, scope: !11513)
!11522 = !DILocation(line: 335, column: 7, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11520, file: !1426, line: 332, column: 2)
!11524 = !DILocation(line: 338, column: 12, scope: !11523)
!11525 = !DILocation(line: 341, column: 3, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11523, file: !1426, line: 341, column: 3)
!11527 = !DILocation(line: 341, column: 3, scope: !11523)
!11528 = !DILocation(line: 341, column: 3, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11526, file: !1426, line: 341, column: 3)
!11530 = !DILocation(line: 342, column: 3, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11523, file: !1426, line: 342, column: 3)
!11532 = !DILocation(line: 342, column: 3, scope: !11523)
!11533 = !DILocation(line: 342, column: 3, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11531, file: !1426, line: 342, column: 3)
!11535 = !DILocation(line: 344, column: 17, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11523, file: !1426, line: 344, column: 7)
!11537 = !DILocation(line: 344, column: 30, scope: !11536)
!11538 = !DILocation(line: 344, column: 28, scope: !11536)
!11539 = !DILocation(line: 344, column: 51, scope: !11536)
!11540 = !DILocation(line: 344, column: 7, scope: !11523)
!11541 = !DILocation(line: 346, column: 16, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11543, file: !1426, line: 346, column: 8)
!11543 = distinct !DILexicalBlock(scope: !11536, file: !1426, line: 345, column: 3)
!11544 = !DILocation(line: 346, column: 32, scope: !11542)
!11545 = !DILocation(line: 346, column: 8, scope: !11543)
!11546 = !DILocation(line: 350, column: 27, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11542, file: !1426, line: 347, column: 4)
!11548 = !DILocation(line: 350, column: 24, scope: !11547)
!11549 = !DILocation(line: 352, column: 5, scope: !11547)
!11550 = !DILocation(line: 355, column: 37, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11547, file: !1426, line: 353, column: 5)
!11552 = !DILocation(line: 355, column: 26, scope: !11551)
!11553 = !DILocation(line: 357, column: 6, scope: !11551)
!11554 = !DILocation(line: 359, column: 14, scope: !11547)
!11555 = !DILocation(line: 360, column: 4, scope: !11547)
!11556 = !DILocation(line: 371, column: 1, scope: !11513)
!11557 = distinct !DISubprogram(name: "xPortGetFreeHeapSize", scope: !1426, file: !1426, line: 374, type: !11558, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !1935)
!11558 = !DISubroutineType(types: !11559)
!11559 = !{!1209}
!11560 = !DILocation(line: 376, column: 9, scope: !11557)
!11561 = !DILocation(line: 376, column: 2, scope: !11557)
!11562 = distinct !DISubprogram(name: "xPortGetMinimumEverFreeHeapSize", scope: !1426, file: !1426, line: 380, type: !11558, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !1935)
!11563 = !DILocation(line: 382, column: 9, scope: !11562)
!11564 = !DILocation(line: 382, column: 2, scope: !11562)
!11565 = distinct !DISubprogram(name: "vPortInitialiseBlocks", scope: !1426, file: !1426, line: 386, type: !154, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !1935)
!11566 = !DILocation(line: 389, column: 1, scope: !11565)
!11567 = distinct !DISubprogram(name: "pvPortCalloc", scope: !1426, file: !1426, line: 505, type: !11568, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11570)
!11568 = !DISubroutineType(types: !11569)
!11569 = !{!51, !1209, !1209}
!11570 = !{!11571, !11572, !11573}
!11571 = !DILocalVariable(name: "nmemb", arg: 1, scope: !11567, file: !1426, line: 505, type: !1209)
!11572 = !DILocalVariable(name: "size", arg: 2, scope: !11567, file: !1426, line: 505, type: !1209)
!11573 = !DILocalVariable(name: "pvReturn", scope: !11567, file: !1426, line: 507, type: !51)
!11574 = !DILocation(line: 0, scope: !11567)
!11575 = !DILocation(line: 516, column: 35, scope: !11567)
!11576 = !DILocation(line: 516, column: 16, scope: !11567)
!11577 = !DILocation(line: 518, column: 9, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11567, file: !1426, line: 518, column: 9)
!11579 = !DILocation(line: 518, column: 9, scope: !11567)
!11580 = !DILocation(line: 520, column: 9, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11578, file: !1426, line: 519, column: 5)
!11582 = !DILocation(line: 521, column: 5, scope: !11581)
!11583 = !DILocation(line: 523, column: 5, scope: !11567)
!11584 = distinct !DISubprogram(name: "pvPortRealloc", scope: !1426, file: !1426, line: 528, type: !11585, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11587)
!11585 = !DISubroutineType(types: !11586)
!11586 = !{!51, !51, !1209}
!11587 = !{!11588, !11589, !11590, !11591, !11592, !11593}
!11588 = !DILocalVariable(name: "pv", arg: 1, scope: !11584, file: !1426, line: 528, type: !51)
!11589 = !DILocalVariable(name: "size", arg: 2, scope: !11584, file: !1426, line: 528, type: !1209)
!11590 = !DILocalVariable(name: "pvReturn", scope: !11584, file: !1426, line: 530, type: !51)
!11591 = !DILocalVariable(name: "xBlockSize", scope: !11584, file: !1426, line: 531, type: !1209)
!11592 = !DILocalVariable(name: "puc", scope: !11584, file: !1426, line: 532, type: !210)
!11593 = !DILocalVariable(name: "pxLink", scope: !11584, file: !1426, line: 533, type: !1428)
!11594 = !DILocation(line: 0, scope: !11584)
!11595 = !DILocation(line: 535, column: 16, scope: !11584)
!11596 = !DILocation(line: 537, column: 12, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11584, file: !1426, line: 537, column: 9)
!11598 = !DILocation(line: 537, column: 9, scope: !11584)
!11599 = !DILocation(line: 540, column: 13, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11597, file: !1426, line: 538, column: 5)
!11601 = !DILocation(line: 546, column: 9, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11600, file: !1426, line: 546, column: 9)
!11603 = !DILocation(line: 546, column: 9, scope: !11600)
!11604 = !DILocation(line: 546, column: 9, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11602, file: !1426, line: 546, column: 9)
!11606 = !DILocation(line: 547, column: 9, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11600, file: !1426, line: 547, column: 9)
!11608 = !DILocation(line: 547, column: 9, scope: !11600)
!11609 = !DILocation(line: 547, column: 9, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11607, file: !1426, line: 547, column: 9)
!11611 = !DILocation(line: 550, column: 31, scope: !11600)
!11612 = !DILocation(line: 550, column: 45, scope: !11600)
!11613 = !DILocation(line: 550, column: 44, scope: !11600)
!11614 = !DILocation(line: 550, column: 42, scope: !11600)
!11615 = !DILocation(line: 553, column: 34, scope: !11600)
!11616 = !DILocation(line: 555, column: 23, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11600, file: !1426, line: 555, column: 12)
!11618 = !DILocation(line: 0, scope: !11617)
!11619 = !DILocation(line: 561, column: 9, scope: !11600)
!11620 = !DILocation(line: 562, column: 5, scope: !11600)
!11621 = !DILocation(line: 564, column: 5, scope: !11584)
!11622 = distinct !DISubprogram(name: "pvPortMallocNC", scope: !1426, file: !1426, line: 570, type: !11349, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11623)
!11623 = !{!11624}
!11624 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !11622, file: !1426, line: 570, type: !1209)
!11625 = !DILocation(line: 0, scope: !11622)
!11626 = !DILocation(line: 649, column: 12, scope: !11622)
!11627 = !DILocation(line: 649, column: 5, scope: !11622)
!11628 = distinct !DISubprogram(name: "vPortFreeNC", scope: !1426, file: !1426, line: 652, type: !640, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11629)
!11629 = !{!11630}
!11630 = !DILocalVariable(name: "pv", arg: 1, scope: !11628, file: !1426, line: 652, type: !51)
!11631 = !DILocation(line: 0, scope: !11628)
!11632 = !DILocation(line: 680, column: 5, scope: !11628)
!11633 = !DILocation(line: 682, column: 1, scope: !11628)
!11634 = distinct !DISubprogram(name: "__wrap_malloc", scope: !1426, file: !1426, line: 686, type: !11349, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11635)
!11635 = !{!11636}
!11636 = !DILocalVariable(name: "size", arg: 1, scope: !11634, file: !1426, line: 686, type: !1209)
!11637 = !DILocation(line: 0, scope: !11634)
!11638 = !DILocation(line: 688, column: 12, scope: !11634)
!11639 = !DILocation(line: 688, column: 5, scope: !11634)
!11640 = distinct !DISubprogram(name: "__wrap_calloc", scope: !1426, file: !1426, line: 690, type: !11568, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11641)
!11641 = !{!11642, !11643}
!11642 = !DILocalVariable(name: "nmemb", arg: 1, scope: !11640, file: !1426, line: 690, type: !1209)
!11643 = !DILocalVariable(name: "size", arg: 2, scope: !11640, file: !1426, line: 690, type: !1209)
!11644 = !DILocation(line: 0, scope: !11640)
!11645 = !DILocation(line: 692, column: 12, scope: !11640)
!11646 = !DILocation(line: 692, column: 5, scope: !11640)
!11647 = distinct !DISubprogram(name: "__wrap_realloc", scope: !1426, file: !1426, line: 694, type: !11585, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11648)
!11648 = !{!11649, !11650}
!11649 = !DILocalVariable(name: "pv", arg: 1, scope: !11647, file: !1426, line: 694, type: !51)
!11650 = !DILocalVariable(name: "size", arg: 2, scope: !11647, file: !1426, line: 694, type: !1209)
!11651 = !DILocation(line: 0, scope: !11647)
!11652 = !DILocation(line: 696, column: 12, scope: !11647)
!11653 = !DILocation(line: 696, column: 5, scope: !11647)
!11654 = distinct !DISubprogram(name: "__wrap_free", scope: !1426, file: !1426, line: 698, type: !640, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1425, retainedNodes: !11655)
!11655 = !{!11656}
!11656 = !DILocalVariable(name: "pv", arg: 1, scope: !11654, file: !1426, line: 698, type: !51)
!11657 = !DILocation(line: 0, scope: !11654)
!11658 = !DILocation(line: 700, column: 6, scope: !11654)
!11659 = !DILocation(line: 701, column: 1, scope: !11654)
!11660 = distinct !DISubprogram(name: "vPortSetupTimerInterrupt", scope: !1892, file: !1892, line: 769, type: !154, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1891, retainedNodes: !1935)
!11661 = !DILocation(line: 781, column: 22, scope: !11660)
!11662 = !DILocation(line: 781, column: 45, scope: !11660)
!11663 = !DILocation(line: 781, column: 67, scope: !11660)
!11664 = !DILocation(line: 781, column: 19, scope: !11660)
!11665 = !DILocation(line: 782, column: 19, scope: !11660)
!11666 = !DILocation(line: 783, column: 1, scope: !11660)
!11667 = distinct !DISubprogram(name: "abort", scope: !1456, file: !1456, line: 108, type: !154, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !1935)
!11668 = !DILocation(line: 110, column: 5, scope: !11667)
!11669 = !{i64 4281}
!11670 = !DILocation(line: 111, column: 14, scope: !11667)
!11671 = !DILocation(line: 112, column: 45, scope: !11667)
!11672 = !DILocation(line: 113, column: 5, scope: !11667)
!11673 = !DILocation(line: 113, column: 5, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11675, file: !1456, line: 113, column: 5)
!11675 = distinct !DILexicalBlock(scope: !11667, file: !1456, line: 113, column: 5)
!11676 = distinct !{!11676, !11677, !11678}
!11677 = !DILocation(line: 113, column: 5, scope: !11675)
!11678 = !DILocation(line: 113, column: 13, scope: !11675)
!11679 = distinct !DISubprogram(name: "platform_assert", scope: !1456, file: !1456, line: 116, type: !11680, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !11682)
!11680 = !DISubroutineType(types: !11681)
!11681 = !{null, !331, !331, !7}
!11682 = !{!11683, !11684, !11685}
!11683 = !DILocalVariable(name: "expr", arg: 1, scope: !11679, file: !1456, line: 116, type: !331)
!11684 = !DILocalVariable(name: "file", arg: 2, scope: !11679, file: !1456, line: 116, type: !331)
!11685 = !DILocalVariable(name: "line", arg: 3, scope: !11679, file: !1456, line: 116, type: !7)
!11686 = !DILocation(line: 0, scope: !11679)
!11687 = !DILocation(line: 118, column: 5, scope: !11679)
!11688 = !{i64 4480}
!11689 = !DILocation(line: 119, column: 14, scope: !11679)
!11690 = !DILocation(line: 120, column: 26, scope: !11679)
!11691 = !DILocation(line: 121, column: 22, scope: !11679)
!11692 = !DILocation(line: 122, column: 22, scope: !11679)
!11693 = !DILocation(line: 123, column: 22, scope: !11679)
!11694 = !DILocation(line: 124, column: 45, scope: !11679)
!11695 = !DILocation(line: 125, column: 5, scope: !11679)
!11696 = !DILocation(line: 125, column: 5, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11698, file: !1456, line: 125, column: 5)
!11698 = distinct !DILexicalBlock(scope: !11679, file: !1456, line: 125, column: 5)
!11699 = distinct !{!11699, !11700, !11701}
!11700 = !DILocation(line: 125, column: 5, scope: !11698)
!11701 = !DILocation(line: 125, column: 13, scope: !11698)
!11702 = distinct !DISubprogram(name: "exception_dump_config", scope: !1456, file: !1456, line: 128, type: !1071, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !11703)
!11703 = !{!11704}
!11704 = !DILocalVariable(name: "flag", arg: 1, scope: !11702, file: !1456, line: 128, type: !7)
!11705 = !DILocation(line: 0, scope: !11702)
!11706 = !DILocation(line: 130, column: 17, scope: !11702)
!11707 = !DILocation(line: 131, column: 1, scope: !11702)
!11708 = distinct !DISubprogram(name: "exception_register_callbacks", scope: !1456, file: !1456, line: 142, type: !11709, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !11712)
!11709 = !DISubroutineType(types: !11710)
!11710 = !{!69, !11711}
!11711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 32)
!11712 = !{!11713, !11714}
!11713 = !DILocalVariable(name: "cb", arg: 1, scope: !11708, file: !1456, line: 142, type: !11711)
!11714 = !DILocalVariable(name: "i", scope: !11708, file: !1456, line: 144, type: !7)
!11715 = !DILocation(line: 0, scope: !11708)
!11716 = !DILocation(line: 146, column: 26, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11708, file: !1456, line: 146, column: 9)
!11718 = !DILocation(line: 146, column: 32, scope: !11717)
!11719 = !DILocation(line: 146, column: 9, scope: !11708)
!11720 = !DILocation(line: 150, column: 22, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11722, file: !1456, line: 150, column: 8)
!11722 = distinct !DILexicalBlock(scope: !11723, file: !1456, line: 150, column: 8)
!11723 = distinct !DILexicalBlock(scope: !11717, file: !1456, line: 148, column: 12)
!11724 = !DILocation(line: 150, column: 8, scope: !11722)
!11725 = !DILocation(line: 151, column: 45, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11727, file: !1456, line: 151, column: 17)
!11727 = distinct !DILexicalBlock(scope: !11721, file: !1456, line: 150, column: 53)
!11728 = !DILocation(line: 151, column: 53, scope: !11726)
!11729 = !DILocation(line: 152, column: 14, scope: !11726)
!11730 = !DILocation(line: 152, column: 45, scope: !11726)
!11731 = !DILocation(line: 152, column: 60, scope: !11726)
!11732 = !DILocation(line: 152, column: 53, scope: !11726)
!11733 = !DILocation(line: 151, column: 17, scope: !11727)
!11734 = !DILocation(line: 150, column: 49, scope: !11721)
!11735 = distinct !{!11735, !11724, !11736}
!11736 = !DILocation(line: 155, column: 8, scope: !11722)
!11737 = !DILocation(line: 156, column: 57, scope: !11723)
!11738 = !DILocation(line: 156, column: 65, scope: !11723)
!11739 = !DILocation(line: 157, column: 71, scope: !11723)
!11740 = !DILocation(line: 157, column: 57, scope: !11723)
!11741 = !DILocation(line: 157, column: 65, scope: !11723)
!11742 = !DILocation(line: 158, column: 30, scope: !11723)
!11743 = !DILocation(line: 159, column: 8, scope: !11723)
!11744 = !DILocation(line: 0, scope: !11717)
!11745 = !DILocation(line: 161, column: 1, scope: !11708)
!11746 = distinct !DISubprogram(name: "exception_init", scope: !1456, file: !1456, line: 163, type: !154, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !11747)
!11747 = !{!11748}
!11748 = !DILocalVariable(name: "i", scope: !11746, file: !1456, line: 165, type: !7)
!11749 = !DILocation(line: 167, column: 14, scope: !11746)
!11750 = !DILocation(line: 170, column: 5, scope: !11746)
!11751 = !DILocation(line: 0, scope: !11746)
!11752 = !DILocation(line: 177, column: 38, scope: !11753)
!11753 = distinct !DILexicalBlock(scope: !11754, file: !1456, line: 177, column: 5)
!11754 = distinct !DILexicalBlock(scope: !11746, file: !1456, line: 177, column: 5)
!11755 = !DILocation(line: 177, column: 19, scope: !11753)
!11756 = !DILocation(line: 177, column: 5, scope: !11754)
!11757 = !DILocation(line: 178, column: 41, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11759, file: !1456, line: 178, column: 13)
!11759 = distinct !DILexicalBlock(scope: !11753, file: !1456, line: 177, column: 50)
!11760 = !DILocation(line: 178, column: 13, scope: !11758)
!11761 = !DILocation(line: 178, column: 13, scope: !11759)
!11762 = !DILocation(line: 179, column: 13, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11758, file: !1456, line: 178, column: 50)
!11764 = !DILocation(line: 180, column: 9, scope: !11763)
!11765 = !DILocation(line: 177, column: 46, scope: !11753)
!11766 = distinct !{!11766, !11756, !11767}
!11767 = !DILocation(line: 181, column: 5, scope: !11754)
!11768 = !DILocation(line: 183, column: 21, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11746, file: !1456, line: 183, column: 9)
!11770 = !DILocation(line: 183, column: 9, scope: !11746)
!11771 = !DILocation(line: 185, column: 28, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11769, file: !1456, line: 183, column: 31)
!11773 = !DILocation(line: 186, column: 28, scope: !11772)
!11774 = !DILocation(line: 187, column: 28, scope: !11772)
!11775 = !DILocation(line: 184, column: 9, scope: !11772)
!11776 = !DILocation(line: 188, column: 5, scope: !11772)
!11777 = !DILocation(line: 189, column: 1, scope: !11746)
!11778 = distinct !DISubprogram(name: "NMI_Handler", scope: !1456, file: !1456, line: 196, type: !154, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !1935)
!11779 = !DILocation(line: 198, column: 1, scope: !11778)
!11780 = distinct !DISubprogram(name: "printUsageErrorMsg", scope: !1456, file: !1456, line: 200, type: !2535, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !11781)
!11781 = !{!11782}
!11782 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !11780, file: !1456, line: 200, type: !61)
!11783 = !DILocation(line: 0, scope: !11780)
!11784 = !DILocation(line: 202, column: 5, scope: !11780)
!11785 = !DILocation(line: 204, column: 32, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11780, file: !1456, line: 204, column: 9)
!11787 = !DILocation(line: 204, column: 9, scope: !11780)
!11788 = !DILocation(line: 205, column: 9, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11786, file: !1456, line: 204, column: 38)
!11790 = !DILocation(line: 206, column: 5, scope: !11789)
!11791 = !DILocation(line: 207, column: 32, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11780, file: !1456, line: 207, column: 9)
!11793 = !DILocation(line: 207, column: 9, scope: !11780)
!11794 = !DILocation(line: 208, column: 9, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11792, file: !1456, line: 207, column: 38)
!11796 = !DILocation(line: 209, column: 5, scope: !11795)
!11797 = !DILocation(line: 210, column: 32, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11780, file: !1456, line: 210, column: 9)
!11799 = !DILocation(line: 210, column: 9, scope: !11780)
!11800 = !DILocation(line: 211, column: 9, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11798, file: !1456, line: 210, column: 38)
!11802 = !DILocation(line: 212, column: 5, scope: !11801)
!11803 = !DILocation(line: 213, column: 32, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11780, file: !1456, line: 213, column: 9)
!11805 = !DILocation(line: 213, column: 9, scope: !11780)
!11806 = !DILocation(line: 214, column: 9, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11804, file: !1456, line: 213, column: 38)
!11808 = !DILocation(line: 215, column: 5, scope: !11807)
!11809 = !DILocation(line: 216, column: 32, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11780, file: !1456, line: 216, column: 9)
!11811 = !DILocation(line: 216, column: 9, scope: !11780)
!11812 = !DILocation(line: 217, column: 9, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11810, file: !1456, line: 216, column: 38)
!11814 = !DILocation(line: 218, column: 5, scope: !11813)
!11815 = !DILocation(line: 219, column: 32, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11780, file: !1456, line: 219, column: 9)
!11817 = !DILocation(line: 219, column: 9, scope: !11780)
!11818 = !DILocation(line: 220, column: 9, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11816, file: !1456, line: 219, column: 38)
!11820 = !DILocation(line: 221, column: 5, scope: !11819)
!11821 = !DILocation(line: 222, column: 1, scope: !11780)
!11822 = distinct !DISubprogram(name: "printMemoryManagementErrorMsg", scope: !1456, file: !1456, line: 224, type: !2535, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !11823)
!11823 = !{!11824}
!11824 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !11822, file: !1456, line: 224, type: !61)
!11825 = !DILocation(line: 0, scope: !11822)
!11826 = !DILocation(line: 226, column: 5, scope: !11822)
!11827 = !DILocation(line: 228, column: 20, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11822, file: !1456, line: 228, column: 9)
!11829 = !DILocation(line: 228, column: 32, scope: !11828)
!11830 = !DILocation(line: 228, column: 9, scope: !11822)
!11831 = !DILocation(line: 229, column: 9, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11828, file: !1456, line: 228, column: 38)
!11833 = !DILocation(line: 230, column: 5, scope: !11832)
!11834 = !DILocation(line: 231, column: 20, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11822, file: !1456, line: 231, column: 9)
!11836 = !DILocation(line: 231, column: 32, scope: !11835)
!11837 = !DILocation(line: 231, column: 9, scope: !11822)
!11838 = !DILocation(line: 232, column: 9, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11835, file: !1456, line: 231, column: 38)
!11840 = !DILocation(line: 233, column: 5, scope: !11839)
!11841 = !DILocation(line: 234, column: 20, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11822, file: !1456, line: 234, column: 9)
!11843 = !DILocation(line: 234, column: 32, scope: !11842)
!11844 = !DILocation(line: 234, column: 9, scope: !11822)
!11845 = !DILocation(line: 235, column: 9, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11842, file: !1456, line: 234, column: 38)
!11847 = !DILocation(line: 236, column: 5, scope: !11846)
!11848 = !DILocation(line: 237, column: 20, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11822, file: !1456, line: 237, column: 9)
!11850 = !DILocation(line: 237, column: 32, scope: !11849)
!11851 = !DILocation(line: 237, column: 9, scope: !11822)
!11852 = !DILocation(line: 238, column: 72, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11849, file: !1456, line: 237, column: 38)
!11854 = !DILocation(line: 238, column: 9, scope: !11853)
!11855 = !DILocation(line: 239, column: 5, scope: !11853)
!11856 = !DILocation(line: 240, column: 20, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11822, file: !1456, line: 240, column: 9)
!11858 = !DILocation(line: 240, column: 32, scope: !11857)
!11859 = !DILocation(line: 240, column: 9, scope: !11822)
!11860 = !DILocation(line: 241, column: 9, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11857, file: !1456, line: 240, column: 38)
!11862 = !DILocation(line: 242, column: 5, scope: !11861)
!11863 = !DILocation(line: 243, column: 20, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11822, file: !1456, line: 243, column: 9)
!11865 = !DILocation(line: 243, column: 32, scope: !11864)
!11866 = !DILocation(line: 243, column: 9, scope: !11822)
!11867 = !DILocation(line: 244, column: 62, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11864, file: !1456, line: 243, column: 38)
!11869 = !DILocation(line: 244, column: 9, scope: !11868)
!11870 = !DILocation(line: 245, column: 5, scope: !11868)
!11871 = !DILocation(line: 246, column: 1, scope: !11822)
!11872 = distinct !DISubprogram(name: "printBusFaultErrorMsg", scope: !1456, file: !1456, line: 248, type: !2535, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !11873)
!11873 = !{!11874}
!11874 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !11872, file: !1456, line: 248, type: !61)
!11875 = !DILocation(line: 0, scope: !11872)
!11876 = !DILocation(line: 250, column: 5, scope: !11872)
!11877 = !DILocation(line: 253, column: 32, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11872, file: !1456, line: 253, column: 9)
!11879 = !DILocation(line: 253, column: 9, scope: !11872)
!11880 = !DILocation(line: 254, column: 9, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11878, file: !1456, line: 253, column: 38)
!11882 = !DILocation(line: 255, column: 5, scope: !11881)
!11883 = !DILocation(line: 256, column: 32, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11872, file: !1456, line: 256, column: 9)
!11885 = !DILocation(line: 256, column: 9, scope: !11872)
!11886 = !DILocation(line: 257, column: 9, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11884, file: !1456, line: 256, column: 38)
!11888 = !DILocation(line: 258, column: 5, scope: !11887)
!11889 = !DILocation(line: 259, column: 32, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11872, file: !1456, line: 259, column: 9)
!11891 = !DILocation(line: 259, column: 9, scope: !11872)
!11892 = !DILocation(line: 260, column: 9, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11890, file: !1456, line: 259, column: 38)
!11894 = !DILocation(line: 261, column: 5, scope: !11893)
!11895 = !DILocation(line: 262, column: 32, scope: !11896)
!11896 = distinct !DILexicalBlock(scope: !11872, file: !1456, line: 262, column: 9)
!11897 = !DILocation(line: 262, column: 9, scope: !11872)
!11898 = !DILocation(line: 263, column: 9, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11896, file: !1456, line: 262, column: 38)
!11900 = !DILocation(line: 264, column: 5, scope: !11899)
!11901 = !DILocation(line: 265, column: 32, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11872, file: !1456, line: 265, column: 9)
!11903 = !DILocation(line: 265, column: 9, scope: !11872)
!11904 = !DILocation(line: 266, column: 90, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11902, file: !1456, line: 265, column: 38)
!11906 = !DILocation(line: 266, column: 9, scope: !11905)
!11907 = !DILocation(line: 267, column: 5, scope: !11905)
!11908 = !DILocation(line: 268, column: 32, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11872, file: !1456, line: 268, column: 9)
!11910 = !DILocation(line: 268, column: 9, scope: !11872)
!11911 = !DILocation(line: 269, column: 9, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11909, file: !1456, line: 268, column: 38)
!11913 = !DILocation(line: 270, column: 5, scope: !11912)
!11914 = !DILocation(line: 271, column: 32, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11872, file: !1456, line: 271, column: 9)
!11916 = !DILocation(line: 271, column: 9, scope: !11872)
!11917 = !DILocation(line: 272, column: 61, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11915, file: !1456, line: 271, column: 38)
!11919 = !DILocation(line: 272, column: 9, scope: !11918)
!11920 = !DILocation(line: 273, column: 5, scope: !11918)
!11921 = !DILocation(line: 274, column: 1, scope: !11872)
!11922 = distinct !DISubprogram(name: "exception_reboot", scope: !1456, file: !1456, line: 799, type: !154, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !1935)
!11923 = !DILocation(line: 805, column: 5, scope: !11922)
!11924 = distinct !DISubprogram(name: "stackDump", scope: !1456, file: !1456, line: 823, type: !11925, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !11927)
!11925 = !DISubroutineType(types: !11926)
!11926 = !{null, !2495}
!11927 = !{!11928}
!11928 = !DILocalVariable(name: "stack", arg: 1, scope: !11924, file: !1456, line: 823, type: !2495)
!11929 = !DILocation(line: 0, scope: !11924)
!11930 = !DILocation(line: 825, column: 24, scope: !11924)
!11931 = !DILocation(line: 825, column: 22, scope: !11924)
!11932 = !DILocation(line: 826, column: 24, scope: !11924)
!11933 = !DILocation(line: 826, column: 22, scope: !11924)
!11934 = !DILocation(line: 827, column: 24, scope: !11924)
!11935 = !DILocation(line: 827, column: 22, scope: !11924)
!11936 = !DILocation(line: 828, column: 24, scope: !11924)
!11937 = !DILocation(line: 828, column: 22, scope: !11924)
!11938 = !DILocation(line: 829, column: 24, scope: !11924)
!11939 = !DILocation(line: 829, column: 22, scope: !11924)
!11940 = !DILocation(line: 830, column: 25, scope: !11924)
!11941 = !DILocation(line: 830, column: 42, scope: !11924)
!11942 = !DILocation(line: 830, column: 22, scope: !11924)
!11943 = !DILocation(line: 831, column: 24, scope: !11924)
!11944 = !DILocation(line: 831, column: 22, scope: !11924)
!11945 = !DILocation(line: 832, column: 24, scope: !11924)
!11946 = !DILocation(line: 832, column: 22, scope: !11924)
!11947 = !DILocation(line: 833, column: 24, scope: !11924)
!11948 = !DILocation(line: 833, column: 22, scope: !11924)
!11949 = !DILocation(line: 836, column: 23, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11924, file: !1456, line: 836, column: 10)
!11951 = !DILocation(line: 836, column: 34, scope: !11950)
!11952 = !DILocation(line: 836, column: 42, scope: !11950)
!11953 = !DILocation(line: 836, column: 10, scope: !11924)
!11954 = !DILocation(line: 837, column: 26, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11950, file: !1456, line: 836, column: 49)
!11956 = !DILocation(line: 837, column: 24, scope: !11955)
!11957 = !DILocation(line: 838, column: 26, scope: !11955)
!11958 = !DILocation(line: 838, column: 24, scope: !11955)
!11959 = !DILocation(line: 839, column: 26, scope: !11955)
!11960 = !DILocation(line: 839, column: 24, scope: !11955)
!11961 = !DILocation(line: 840, column: 26, scope: !11955)
!11962 = !DILocation(line: 840, column: 24, scope: !11955)
!11963 = !DILocation(line: 841, column: 26, scope: !11955)
!11964 = !DILocation(line: 841, column: 24, scope: !11955)
!11965 = !DILocation(line: 842, column: 26, scope: !11955)
!11966 = !DILocation(line: 842, column: 24, scope: !11955)
!11967 = !DILocation(line: 843, column: 26, scope: !11955)
!11968 = !DILocation(line: 843, column: 24, scope: !11955)
!11969 = !DILocation(line: 844, column: 26, scope: !11955)
!11970 = !DILocation(line: 844, column: 24, scope: !11955)
!11971 = !DILocation(line: 845, column: 26, scope: !11955)
!11972 = !DILocation(line: 845, column: 24, scope: !11955)
!11973 = !DILocation(line: 846, column: 26, scope: !11955)
!11974 = !DILocation(line: 846, column: 24, scope: !11955)
!11975 = !DILocation(line: 847, column: 27, scope: !11955)
!11976 = !DILocation(line: 847, column: 25, scope: !11955)
!11977 = !DILocation(line: 848, column: 27, scope: !11955)
!11978 = !DILocation(line: 848, column: 25, scope: !11955)
!11979 = !DILocation(line: 849, column: 27, scope: !11955)
!11980 = !DILocation(line: 849, column: 25, scope: !11955)
!11981 = !DILocation(line: 850, column: 27, scope: !11955)
!11982 = !DILocation(line: 850, column: 25, scope: !11955)
!11983 = !DILocation(line: 851, column: 27, scope: !11955)
!11984 = !DILocation(line: 851, column: 25, scope: !11955)
!11985 = !DILocation(line: 852, column: 27, scope: !11955)
!11986 = !DILocation(line: 852, column: 25, scope: !11955)
!11987 = !DILocation(line: 853, column: 29, scope: !11955)
!11988 = !DILocation(line: 853, column: 27, scope: !11955)
!11989 = !DILocation(line: 854, column: 24, scope: !11955)
!11990 = !DILocation(line: 855, column: 5, scope: !11955)
!11991 = !DILocation(line: 858, column: 16, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11924, file: !1456, line: 858, column: 10)
!11993 = !DILocation(line: 858, column: 20, scope: !11992)
!11994 = !DILocation(line: 858, column: 44, scope: !11992)
!11995 = !DILocation(line: 859, column: 24, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11992, file: !1456, line: 858, column: 74)
!11997 = !DILocation(line: 860, column: 5, scope: !11996)
!11998 = !DILocation(line: 862, column: 5, scope: !11924)
!11999 = !DILocation(line: 863, column: 44, scope: !11924)
!12000 = !DILocation(line: 863, column: 5, scope: !11924)
!12001 = !DILocation(line: 864, column: 44, scope: !11924)
!12002 = !DILocation(line: 864, column: 5, scope: !11924)
!12003 = !DILocation(line: 865, column: 44, scope: !11924)
!12004 = !DILocation(line: 865, column: 5, scope: !11924)
!12005 = !DILocation(line: 866, column: 44, scope: !11924)
!12006 = !DILocation(line: 866, column: 5, scope: !11924)
!12007 = !DILocation(line: 867, column: 44, scope: !11924)
!12008 = !DILocation(line: 867, column: 5, scope: !11924)
!12009 = !DILocation(line: 868, column: 44, scope: !11924)
!12010 = !DILocation(line: 868, column: 5, scope: !11924)
!12011 = !DILocation(line: 869, column: 44, scope: !11924)
!12012 = !DILocation(line: 869, column: 5, scope: !11924)
!12013 = !DILocation(line: 870, column: 44, scope: !11924)
!12014 = !DILocation(line: 870, column: 5, scope: !11924)
!12015 = !DILocation(line: 871, column: 44, scope: !11924)
!12016 = !DILocation(line: 871, column: 5, scope: !11924)
!12017 = !DILocation(line: 872, column: 44, scope: !11924)
!12018 = !DILocation(line: 872, column: 5, scope: !11924)
!12019 = !DILocation(line: 873, column: 44, scope: !11924)
!12020 = !DILocation(line: 873, column: 5, scope: !11924)
!12021 = !DILocation(line: 874, column: 44, scope: !11924)
!12022 = !DILocation(line: 874, column: 5, scope: !11924)
!12023 = !DILocation(line: 875, column: 44, scope: !11924)
!12024 = !DILocation(line: 875, column: 5, scope: !11924)
!12025 = !DILocation(line: 876, column: 44, scope: !11924)
!12026 = !DILocation(line: 876, column: 5, scope: !11924)
!12027 = !DILocation(line: 877, column: 44, scope: !11924)
!12028 = !DILocation(line: 877, column: 5, scope: !11924)
!12029 = !DILocation(line: 878, column: 48, scope: !11924)
!12030 = !DILocation(line: 878, column: 5, scope: !11924)
!12031 = !DILocation(line: 881, column: 21, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !11924, file: !1456, line: 881, column: 9)
!12033 = !DILocation(line: 881, column: 32, scope: !12032)
!12034 = !DILocation(line: 881, column: 9, scope: !11924)
!12035 = !DILocation(line: 882, column: 29, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12032, file: !1456, line: 881, column: 39)
!12037 = !DILocation(line: 884, column: 5, scope: !12036)
!12038 = !DILocation(line: 0, scope: !12032)
!12039 = !DILocation(line: 889, column: 34, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !11924, file: !1456, line: 889, column: 10)
!12041 = !DILocation(line: 889, column: 42, scope: !12040)
!12042 = !DILocation(line: 889, column: 10, scope: !11924)
!12043 = !DILocation(line: 890, column: 29, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12040, file: !1456, line: 889, column: 49)
!12045 = !DILocation(line: 891, column: 48, scope: !12044)
!12046 = !DILocation(line: 891, column: 9, scope: !12044)
!12047 = !DILocation(line: 892, column: 48, scope: !12044)
!12048 = !DILocation(line: 892, column: 9, scope: !12044)
!12049 = !DILocation(line: 893, column: 48, scope: !12044)
!12050 = !DILocation(line: 893, column: 9, scope: !12044)
!12051 = !DILocation(line: 894, column: 48, scope: !12044)
!12052 = !DILocation(line: 894, column: 9, scope: !12044)
!12053 = !DILocation(line: 895, column: 48, scope: !12044)
!12054 = !DILocation(line: 895, column: 9, scope: !12044)
!12055 = !DILocation(line: 896, column: 48, scope: !12044)
!12056 = !DILocation(line: 896, column: 9, scope: !12044)
!12057 = !DILocation(line: 897, column: 48, scope: !12044)
!12058 = !DILocation(line: 897, column: 9, scope: !12044)
!12059 = !DILocation(line: 898, column: 48, scope: !12044)
!12060 = !DILocation(line: 898, column: 9, scope: !12044)
!12061 = !DILocation(line: 899, column: 48, scope: !12044)
!12062 = !DILocation(line: 899, column: 9, scope: !12044)
!12063 = !DILocation(line: 900, column: 48, scope: !12044)
!12064 = !DILocation(line: 900, column: 9, scope: !12044)
!12065 = !DILocation(line: 901, column: 48, scope: !12044)
!12066 = !DILocation(line: 901, column: 9, scope: !12044)
!12067 = !DILocation(line: 902, column: 48, scope: !12044)
!12068 = !DILocation(line: 902, column: 9, scope: !12044)
!12069 = !DILocation(line: 903, column: 48, scope: !12044)
!12070 = !DILocation(line: 903, column: 9, scope: !12044)
!12071 = !DILocation(line: 904, column: 48, scope: !12044)
!12072 = !DILocation(line: 904, column: 9, scope: !12044)
!12073 = !DILocation(line: 905, column: 48, scope: !12044)
!12074 = !DILocation(line: 905, column: 9, scope: !12044)
!12075 = !DILocation(line: 906, column: 48, scope: !12044)
!12076 = !DILocation(line: 906, column: 9, scope: !12044)
!12077 = !DILocation(line: 907, column: 48, scope: !12044)
!12078 = !DILocation(line: 907, column: 9, scope: !12044)
!12079 = !DILocation(line: 908, column: 48, scope: !12044)
!12080 = !DILocation(line: 908, column: 9, scope: !12044)
!12081 = !DILocation(line: 909, column: 48, scope: !12044)
!12082 = !DILocation(line: 909, column: 9, scope: !12044)
!12083 = !DILocation(line: 910, column: 48, scope: !12044)
!12084 = !DILocation(line: 910, column: 9, scope: !12044)
!12085 = !DILocation(line: 911, column: 48, scope: !12044)
!12086 = !DILocation(line: 911, column: 9, scope: !12044)
!12087 = !DILocation(line: 912, column: 48, scope: !12044)
!12088 = !DILocation(line: 912, column: 9, scope: !12044)
!12089 = !DILocation(line: 913, column: 48, scope: !12044)
!12090 = !DILocation(line: 913, column: 9, scope: !12044)
!12091 = !DILocation(line: 914, column: 48, scope: !12044)
!12092 = !DILocation(line: 914, column: 9, scope: !12044)
!12093 = !DILocation(line: 915, column: 48, scope: !12044)
!12094 = !DILocation(line: 915, column: 9, scope: !12044)
!12095 = !DILocation(line: 916, column: 48, scope: !12044)
!12096 = !DILocation(line: 916, column: 9, scope: !12044)
!12097 = !DILocation(line: 917, column: 48, scope: !12044)
!12098 = !DILocation(line: 917, column: 9, scope: !12044)
!12099 = !DILocation(line: 918, column: 48, scope: !12044)
!12100 = !DILocation(line: 918, column: 9, scope: !12044)
!12101 = !DILocation(line: 919, column: 48, scope: !12044)
!12102 = !DILocation(line: 919, column: 9, scope: !12044)
!12103 = !DILocation(line: 920, column: 48, scope: !12044)
!12104 = !DILocation(line: 920, column: 9, scope: !12044)
!12105 = !DILocation(line: 921, column: 48, scope: !12044)
!12106 = !DILocation(line: 921, column: 9, scope: !12044)
!12107 = !DILocation(line: 922, column: 48, scope: !12044)
!12108 = !DILocation(line: 922, column: 9, scope: !12044)
!12109 = !DILocation(line: 923, column: 50, scope: !12044)
!12110 = !DILocation(line: 923, column: 9, scope: !12044)
!12111 = !DILocation(line: 924, column: 5, scope: !12044)
!12112 = !DILocation(line: 926, column: 48, scope: !11924)
!12113 = !DILocation(line: 926, column: 5, scope: !11924)
!12114 = !DILocation(line: 927, column: 48, scope: !11924)
!12115 = !DILocation(line: 927, column: 5, scope: !11924)
!12116 = !DILocation(line: 928, column: 48, scope: !11924)
!12117 = !DILocation(line: 928, column: 5, scope: !11924)
!12118 = !DILocation(line: 929, column: 48, scope: !11924)
!12119 = !DILocation(line: 929, column: 5, scope: !11924)
!12120 = !DILocation(line: 959, column: 9, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !11924, file: !1456, line: 959, column: 9)
!12122 = !DILocation(line: 959, column: 9, scope: !11924)
!12123 = !DILocation(line: 960, column: 9, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12121, file: !1456, line: 959, column: 33)
!12125 = !DILocation(line: 961, column: 5, scope: !12124)
!12126 = !DILocation(line: 962, column: 1, scope: !11924)
!12127 = distinct !DISubprogram(name: "reboot_check", scope: !1456, file: !1456, line: 808, type: !12128, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !1935)
!12128 = !DISubroutineType(types: !12129)
!12129 = !{!69}
!12130 = !DILocation(line: 810, column: 13, scope: !12127)
!12131 = !DILocation(line: 810, column: 25, scope: !12127)
!12132 = !DILocation(line: 810, column: 5, scope: !12127)
!12133 = distinct !DISubprogram(name: "memoryDumpAll", scope: !1456, file: !1456, line: 964, type: !154, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !12134)
!12134 = !{!12135, !12136, !12137}
!12135 = !DILocalVariable(name: "current", scope: !12133, file: !1456, line: 966, type: !1541)
!12136 = !DILocalVariable(name: "end", scope: !12133, file: !1456, line: 966, type: !1541)
!12137 = !DILocalVariable(name: "i", scope: !12133, file: !1456, line: 967, type: !30)
!12138 = !DILocation(line: 0, scope: !12133)
!12139 = !DILocation(line: 971, column: 33, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12141, file: !1456, line: 971, column: 14)
!12141 = distinct !DILexicalBlock(scope: !12142, file: !1456, line: 969, column: 24)
!12142 = distinct !DILexicalBlock(scope: !12143, file: !1456, line: 969, column: 5)
!12143 = distinct !DILexicalBlock(scope: !12133, file: !1456, line: 969, column: 5)
!12144 = !DILocation(line: 971, column: 15, scope: !12140)
!12145 = !DILocation(line: 971, column: 14, scope: !12141)
!12146 = !DILocation(line: 1000, column: 38, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12148, file: !1456, line: 1000, column: 5)
!12148 = distinct !DILexicalBlock(scope: !12133, file: !1456, line: 1000, column: 5)
!12149 = !DILocation(line: 1000, column: 19, scope: !12147)
!12150 = !DILocation(line: 1000, column: 5, scope: !12148)
!12151 = !DILocation(line: 975, column: 33, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12141, file: !1456, line: 975, column: 14)
!12153 = !DILocation(line: 975, column: 15, scope: !12152)
!12154 = !DILocation(line: 975, column: 14, scope: !12141)
!12155 = !DILocation(line: 979, column: 37, scope: !12141)
!12156 = !DILocation(line: 980, column: 37, scope: !12141)
!12157 = !DILocation(line: 982, column: 24, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12159, file: !1456, line: 982, column: 9)
!12159 = distinct !DILexicalBlock(scope: !12141, file: !1456, line: 982, column: 9)
!12160 = !DILocation(line: 982, column: 9, scope: !12159)
!12161 = !DILocation(line: 984, column: 17, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12163, file: !1456, line: 984, column: 17)
!12163 = distinct !DILexicalBlock(scope: !12158, file: !1456, line: 982, column: 45)
!12164 = !DILocation(line: 984, column: 32, scope: !12162)
!12165 = !DILocation(line: 0, scope: !12163)
!12166 = !DILocation(line: 984, column: 37, scope: !12162)
!12167 = !DILocation(line: 986, column: 27, scope: !12162)
!12168 = !DILocation(line: 986, column: 17, scope: !12162)
!12169 = !DILocation(line: 986, column: 32, scope: !12162)
!12170 = !DILocation(line: 986, column: 37, scope: !12162)
!12171 = !DILocation(line: 987, column: 27, scope: !12162)
!12172 = !DILocation(line: 987, column: 17, scope: !12162)
!12173 = !DILocation(line: 987, column: 32, scope: !12162)
!12174 = !DILocation(line: 984, column: 17, scope: !12163)
!12175 = !DILocation(line: 994, column: 20, scope: !12163)
!12176 = !DILocation(line: 992, column: 20, scope: !12163)
!12177 = !DILocation(line: 995, column: 30, scope: !12163)
!12178 = !DILocation(line: 995, column: 20, scope: !12163)
!12179 = !DILocation(line: 996, column: 30, scope: !12163)
!12180 = !DILocation(line: 996, column: 20, scope: !12163)
!12181 = !DILocation(line: 991, column: 13, scope: !12163)
!12182 = !DILocation(line: 997, column: 10, scope: !12163)
!12183 = !DILocation(line: 982, column: 39, scope: !12158)
!12184 = distinct !{!12184, !12160, !12185}
!12185 = !DILocation(line: 997, column: 10, scope: !12159)
!12186 = !DILocation(line: 969, column: 20, scope: !12142)
!12187 = distinct !{!12187, !12188, !12189}
!12188 = !DILocation(line: 969, column: 5, scope: !12143)
!12189 = !DILocation(line: 998, column: 5, scope: !12143)
!12190 = !DILocation(line: 1001, column: 41, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12192, file: !1456, line: 1001, column: 13)
!12192 = distinct !DILexicalBlock(scope: !12147, file: !1456, line: 1000, column: 50)
!12193 = !DILocation(line: 1001, column: 13, scope: !12191)
!12194 = !DILocation(line: 1001, column: 13, scope: !12192)
!12195 = !DILocation(line: 1002, column: 13, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12191, file: !1456, line: 1001, column: 50)
!12197 = !DILocation(line: 1003, column: 9, scope: !12196)
!12198 = !DILocation(line: 1000, column: 46, scope: !12147)
!12199 = distinct !{!12199, !12150, !12200}
!12200 = !DILocation(line: 1004, column: 5, scope: !12148)
!12201 = !DILocation(line: 1006, column: 5, scope: !12133)
!12202 = !DILocation(line: 1017, column: 1, scope: !12133)
!12203 = distinct !DISubprogram(name: "Hard_Fault_Handler", scope: !1456, file: !1456, line: 1040, type: !11925, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !12204)
!12204 = !{!12205}
!12205 = !DILocalVariable(name: "stack", arg: 1, scope: !12203, file: !1456, line: 1040, type: !2495)
!12206 = !DILocation(line: 0, scope: !12203)
!12207 = !DILocation(line: 1042, column: 5, scope: !12203)
!12208 = !DILocation(line: 1043, column: 57, scope: !12203)
!12209 = !DILocation(line: 1043, column: 5, scope: !12203)
!12210 = !DILocation(line: 1044, column: 15, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12203, file: !1456, line: 1044, column: 9)
!12212 = !DILocation(line: 1044, column: 20, scope: !12211)
!12213 = !DILocation(line: 1044, column: 33, scope: !12211)
!12214 = !DILocation(line: 1044, column: 9, scope: !12203)
!12215 = !DILocation(line: 1045, column: 9, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12211, file: !1456, line: 1044, column: 39)
!12217 = !DILocation(line: 1046, column: 61, scope: !12216)
!12218 = !DILocation(line: 1046, column: 9, scope: !12216)
!12219 = !DILocation(line: 1047, column: 19, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12216, file: !1456, line: 1047, column: 13)
!12221 = !DILocation(line: 1047, column: 38, scope: !12220)
!12222 = !DILocation(line: 1047, column: 13, scope: !12216)
!12223 = !DILocation(line: 1048, column: 37, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12220, file: !1456, line: 1047, column: 44)
!12225 = !DILocation(line: 1048, column: 13, scope: !12224)
!12226 = !DILocation(line: 1049, column: 9, scope: !12224)
!12227 = !DILocation(line: 1050, column: 19, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12216, file: !1456, line: 1050, column: 13)
!12229 = !DILocation(line: 1050, column: 24, scope: !12228)
!12230 = !DILocation(line: 1050, column: 38, scope: !12228)
!12231 = !DILocation(line: 1050, column: 13, scope: !12216)
!12232 = !DILocation(line: 1051, column: 40, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12228, file: !1456, line: 1050, column: 45)
!12234 = !DILocation(line: 1051, column: 13, scope: !12233)
!12235 = !DILocation(line: 1052, column: 9, scope: !12233)
!12236 = !DILocation(line: 1053, column: 19, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12216, file: !1456, line: 1053, column: 13)
!12238 = !DILocation(line: 1053, column: 24, scope: !12237)
!12239 = !DILocation(line: 1053, column: 38, scope: !12237)
!12240 = !DILocation(line: 1053, column: 13, scope: !12216)
!12241 = !DILocation(line: 1054, column: 48, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12237, file: !1456, line: 1053, column: 45)
!12243 = !DILocation(line: 1054, column: 13, scope: !12242)
!12244 = !DILocation(line: 1055, column: 9, scope: !12242)
!12245 = !DILocation(line: 1058, column: 5, scope: !12203)
!12246 = !DILocation(line: 1060, column: 5, scope: !12203)
!12247 = !DILocation(line: 1065, column: 5, scope: !12203)
!12248 = distinct !{!12248, !12247, !12249}
!12249 = !DILocation(line: 1065, column: 14, scope: !12203)
!12250 = distinct !DISubprogram(name: "MemManage_Fault_Handler", scope: !1456, file: !1456, line: 1069, type: !11925, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !12251)
!12251 = !{!12252}
!12252 = !DILocalVariable(name: "stack", arg: 1, scope: !12250, file: !1456, line: 1069, type: !2495)
!12253 = !DILocation(line: 0, scope: !12250)
!12254 = !DILocation(line: 1071, column: 5, scope: !12250)
!12255 = !DILocation(line: 1072, column: 57, scope: !12250)
!12256 = !DILocation(line: 1072, column: 5, scope: !12250)
!12257 = !DILocation(line: 1073, column: 15, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12250, file: !1456, line: 1073, column: 9)
!12259 = !DILocation(line: 1073, column: 20, scope: !12258)
!12260 = !DILocation(line: 1073, column: 28, scope: !12258)
!12261 = !DILocation(line: 1073, column: 9, scope: !12250)
!12262 = !DILocation(line: 1074, column: 44, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12258, file: !1456, line: 1073, column: 34)
!12264 = !DILocation(line: 1074, column: 9, scope: !12263)
!12265 = !DILocation(line: 1075, column: 5, scope: !12263)
!12266 = !DILocation(line: 1077, column: 5, scope: !12250)
!12267 = !DILocation(line: 1079, column: 5, scope: !12250)
!12268 = !DILocation(line: 1084, column: 5, scope: !12250)
!12269 = distinct !{!12269, !12268, !12270}
!12270 = !DILocation(line: 1084, column: 14, scope: !12250)
!12271 = distinct !DISubprogram(name: "Bus_Fault_Handler", scope: !1456, file: !1456, line: 1088, type: !11925, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !12272)
!12272 = !{!12273}
!12273 = !DILocalVariable(name: "stack", arg: 1, scope: !12271, file: !1456, line: 1088, type: !2495)
!12274 = !DILocation(line: 0, scope: !12271)
!12275 = !DILocation(line: 1090, column: 5, scope: !12271)
!12276 = !DILocation(line: 1091, column: 57, scope: !12271)
!12277 = !DILocation(line: 1091, column: 5, scope: !12271)
!12278 = !DILocation(line: 1092, column: 15, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12271, file: !1456, line: 1092, column: 9)
!12280 = !DILocation(line: 1092, column: 20, scope: !12279)
!12281 = !DILocation(line: 1092, column: 30, scope: !12279)
!12282 = !DILocation(line: 1092, column: 9, scope: !12271)
!12283 = !DILocation(line: 1093, column: 36, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12279, file: !1456, line: 1092, column: 36)
!12285 = !DILocation(line: 1093, column: 9, scope: !12284)
!12286 = !DILocation(line: 1094, column: 5, scope: !12284)
!12287 = !DILocation(line: 1096, column: 5, scope: !12271)
!12288 = !DILocation(line: 1098, column: 5, scope: !12271)
!12289 = !DILocation(line: 1103, column: 5, scope: !12271)
!12290 = distinct !{!12290, !12289, !12291}
!12291 = !DILocation(line: 1103, column: 14, scope: !12271)
!12292 = distinct !DISubprogram(name: "Usage_Fault_Handler", scope: !1456, file: !1456, line: 1107, type: !11925, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !12293)
!12293 = !{!12294}
!12294 = !DILocalVariable(name: "stack", arg: 1, scope: !12292, file: !1456, line: 1107, type: !2495)
!12295 = !DILocation(line: 0, scope: !12292)
!12296 = !DILocation(line: 1109, column: 5, scope: !12292)
!12297 = !DILocation(line: 1110, column: 57, scope: !12292)
!12298 = !DILocation(line: 1110, column: 5, scope: !12292)
!12299 = !DILocation(line: 1111, column: 15, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12292, file: !1456, line: 1111, column: 9)
!12301 = !DILocation(line: 1111, column: 34, scope: !12300)
!12302 = !DILocation(line: 1111, column: 9, scope: !12292)
!12303 = !DILocation(line: 1112, column: 33, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12300, file: !1456, line: 1111, column: 40)
!12305 = !DILocation(line: 1112, column: 9, scope: !12304)
!12306 = !DILocation(line: 1113, column: 5, scope: !12304)
!12307 = !DILocation(line: 1115, column: 5, scope: !12292)
!12308 = !DILocation(line: 1117, column: 5, scope: !12292)
!12309 = !DILocation(line: 1122, column: 5, scope: !12292)
!12310 = distinct !{!12310, !12309, !12311}
!12311 = !DILocation(line: 1122, column: 14, scope: !12292)
!12312 = distinct !DISubprogram(name: "Debug_Monitor_Handler", scope: !1456, file: !1456, line: 1127, type: !11925, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !12313)
!12313 = !{!12314, !12315, !12316, !12317}
!12314 = !DILocalVariable(name: "stack", arg: 1, scope: !12312, file: !1456, line: 1127, type: !2495)
!12315 = !DILocalVariable(name: "offset", scope: !12312, file: !1456, line: 1129, type: !61)
!12316 = !DILocalVariable(name: "stack_end", scope: !12312, file: !1456, line: 1129, type: !61)
!12317 = !DILocalVariable(name: "is_match", scope: !12312, file: !1456, line: 1129, type: !61)
!12318 = !DILocation(line: 0, scope: !12312)
!12319 = !DILocation(line: 1131, column: 5, scope: !12312)
!12320 = !DILocation(line: 1136, column: 22, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12312, file: !1456, line: 1134, column: 5)
!12322 = !DILocation(line: 1137, column: 21, scope: !12321)
!12323 = !DILocation(line: 1138, column: 63, scope: !12321)
!12324 = !DILocation(line: 1138, column: 9, scope: !12321)
!12325 = !DILocation(line: 1141, column: 5, scope: !12312)
!12326 = !DILocation(line: 1143, column: 5, scope: !12312)
!12327 = !DILocation(line: 1148, column: 5, scope: !12312)
!12328 = distinct !{!12328, !12327, !12329}
!12329 = !DILocation(line: 1148, column: 14, scope: !12312)
!12330 = distinct !DISubprogram(name: "CommonFault_Handler", scope: !1456, file: !1456, line: 1165, type: !154, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !1935)
!12331 = !DILocation(line: 1167, column: 5, scope: !12330)
!12332 = !{i64 35854, i64 35936, i64 35979, i64 36060, i64 36103, i64 36184, i64 36265, i64 36346, i64 36427, i64 36508, i64 36589, i64 36670, i64 36751, i64 36832, i64 36913, i64 36994, i64 37075, i64 37156, i64 37199, i64 37280, i64 37361, i64 37442, i64 37485, i64 37566, i64 37609, i64 37652, i64 37695, i64 37776, i64 37819, i64 37862, i64 37905}
!12333 = !DILocation(line: 1201, column: 1, scope: !12330)
!12334 = distinct !DISubprogram(name: "HardFault_Handler", scope: !1456, file: !1456, line: 1208, type: !154, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !1935)
!12335 = !DILocation(line: 1210, column: 5, scope: !12334)
!12336 = !{i64 38128, i64 38172, i64 38215}
!12337 = !DILocation(line: 1216, column: 1, scope: !12334)
!12338 = distinct !DISubprogram(name: "MemManage_Handler", scope: !1456, file: !1456, line: 1223, type: !154, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !1935)
!12339 = !DILocation(line: 1225, column: 5, scope: !12338)
!12340 = !{i64 38441, i64 38485, i64 38528}
!12341 = !DILocation(line: 1231, column: 1, scope: !12338)
!12342 = distinct !DISubprogram(name: "BusFault_Handler", scope: !1456, file: !1456, line: 1238, type: !154, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !1935)
!12343 = !DILocation(line: 1240, column: 5, scope: !12342)
!12344 = !{i64 38749, i64 38793, i64 38836}
!12345 = !DILocation(line: 1246, column: 1, scope: !12342)
!12346 = distinct !DISubprogram(name: "UsageFault_Handler", scope: !1456, file: !1456, line: 1253, type: !154, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !1935)
!12347 = !DILocation(line: 1255, column: 5, scope: !12346)
!12348 = !{i64 39061, i64 39105, i64 39148}
!12349 = !DILocation(line: 1261, column: 1, scope: !12346)
!12350 = distinct !DISubprogram(name: "DebugMon_Handler", scope: !1456, file: !1456, line: 1264, type: !154, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1455, retainedNodes: !1935)
!12351 = !DILocation(line: 1266, column: 5, scope: !12350)
!12352 = !{i64 39302, i64 39346, i64 39389}
!12353 = !DILocation(line: 1272, column: 1, scope: !12350)
!12354 = distinct !DISubprogram(name: "vApplicationStackOverflowHook", scope: !1903, file: !1903, line: 100, type: !12355, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1902, retainedNodes: !12357)
!12355 = !DISubroutineType(types: !12356)
!12356 = !{null, !1159, !201}
!12357 = !{!12358, !12359}
!12358 = !DILocalVariable(name: "xTask", arg: 1, scope: !12354, file: !1903, line: 100, type: !1159)
!12359 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !12354, file: !1903, line: 100, type: !201)
!12360 = !DILocation(line: 0, scope: !12354)
!12361 = !DILocation(line: 102, column: 40, scope: !12354)
!12362 = !DILocation(line: 102, column: 5, scope: !12354)
!12363 = !DILocation(line: 103, column: 5, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12365, file: !1903, line: 103, column: 5)
!12365 = distinct !DILexicalBlock(scope: !12354, file: !1903, line: 103, column: 5)
!12366 = !DILocation(line: 104, column: 1, scope: !12354)
!12367 = distinct !DISubprogram(name: "print_module_log", scope: !1654, file: !1654, line: 1102, type: !368, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12368)
!12368 = !{!12369, !12370, !12371, !12372, !12373, !12374}
!12369 = !DILocalVariable(name: "handle", arg: 1, scope: !12367, file: !1654, line: 1102, type: !51)
!12370 = !DILocalVariable(name: "func", arg: 2, scope: !12367, file: !1654, line: 1103, type: !331)
!12371 = !DILocalVariable(name: "line", arg: 3, scope: !12367, file: !1654, line: 1104, type: !7)
!12372 = !DILocalVariable(name: "level", arg: 4, scope: !12367, file: !1654, line: 1105, type: !364)
!12373 = !DILocalVariable(name: "message", arg: 5, scope: !12367, file: !1654, line: 1106, type: !331)
!12374 = !DILocalVariable(name: "ap", scope: !12367, file: !1654, line: 1108, type: !12375)
!12375 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5017, line: 46, baseType: !12376)
!12376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5019, line: 32, baseType: !12377)
!12377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1654, baseType: !12378)
!12378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !12379)
!12379 = !{!12380}
!12380 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !12378, file: !1654, line: 1044, baseType: !51, size: 32)
!12381 = !DILocation(line: 0, scope: !12367)
!12382 = !DILocation(line: 1108, column: 5, scope: !12367)
!12383 = !DILocation(line: 1108, column: 13, scope: !12367)
!12384 = !DILocation(line: 1109, column: 5, scope: !12367)
!12385 = !DILocation(line: 1110, column: 5, scope: !12367)
!12386 = !DILocation(line: 1111, column: 5, scope: !12367)
!12387 = !DILocation(line: 1112, column: 1, scope: !12367)
!12388 = distinct !DISubprogram(name: "dump_module_buffer", scope: !1654, file: !1654, line: 1200, type: !373, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12389)
!12389 = !{!12390, !12391, !12392, !12393, !12394, !12395, !12396, !12397}
!12390 = !DILocalVariable(name: "handle", arg: 1, scope: !12388, file: !1654, line: 1200, type: !51)
!12391 = !DILocalVariable(name: "func", arg: 2, scope: !12388, file: !1654, line: 1201, type: !331)
!12392 = !DILocalVariable(name: "line", arg: 3, scope: !12388, file: !1654, line: 1202, type: !7)
!12393 = !DILocalVariable(name: "level", arg: 4, scope: !12388, file: !1654, line: 1203, type: !364)
!12394 = !DILocalVariable(name: "data", arg: 5, scope: !12388, file: !1654, line: 1204, type: !375)
!12395 = !DILocalVariable(name: "length", arg: 6, scope: !12388, file: !1654, line: 1205, type: !7)
!12396 = !DILocalVariable(name: "message", arg: 7, scope: !12388, file: !1654, line: 1206, type: !331)
!12397 = !DILocalVariable(name: "ap", scope: !12388, file: !1654, line: 1208, type: !12375)
!12398 = !DILocation(line: 0, scope: !12388)
!12399 = !DILocation(line: 1208, column: 5, scope: !12388)
!12400 = !DILocation(line: 1208, column: 13, scope: !12388)
!12401 = !DILocation(line: 1209, column: 5, scope: !12388)
!12402 = !DILocation(line: 1210, column: 5, scope: !12388)
!12403 = !DILocation(line: 1211, column: 5, scope: !12388)
!12404 = !DILocation(line: 1212, column: 1, scope: !12388)
!12405 = distinct !DISubprogram(name: "vdump_module_buffer", scope: !1654, file: !1654, line: 1114, type: !12406, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12408)
!12406 = !DISubroutineType(types: !12407)
!12407 = !{null, !51, !331, !7, !364, !375, !7, !331, !12375}
!12408 = !{!12409, !12410, !12411, !12412, !12413, !12414, !12415, !12416, !12417, !12418, !12419, !12426, !12428, !12429}
!12409 = !DILocalVariable(name: "handle", arg: 1, scope: !12405, file: !1654, line: 1114, type: !51)
!12410 = !DILocalVariable(name: "func", arg: 2, scope: !12405, file: !1654, line: 1115, type: !331)
!12411 = !DILocalVariable(name: "line", arg: 3, scope: !12405, file: !1654, line: 1116, type: !7)
!12412 = !DILocalVariable(name: "level", arg: 4, scope: !12405, file: !1654, line: 1117, type: !364)
!12413 = !DILocalVariable(name: "data", arg: 5, scope: !12405, file: !1654, line: 1118, type: !375)
!12414 = !DILocalVariable(name: "length", arg: 6, scope: !12405, file: !1654, line: 1119, type: !7)
!12415 = !DILocalVariable(name: "message", arg: 7, scope: !12405, file: !1654, line: 1120, type: !331)
!12416 = !DILocalVariable(name: "list", arg: 8, scope: !12405, file: !1654, line: 1121, type: !12375)
!12417 = !DILocalVariable(name: "context", scope: !12405, file: !1654, line: 1123, type: !1710)
!12418 = !DILocalVariable(name: "additional_length", scope: !12405, file: !1654, line: 1124, type: !7)
!12419 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !12420, file: !1654, line: 1133, type: !1154)
!12420 = distinct !DILexicalBlock(scope: !12421, file: !1654, line: 1132, column: 39)
!12421 = distinct !DILexicalBlock(scope: !12422, file: !1654, line: 1132, column: 17)
!12422 = distinct !DILexicalBlock(scope: !12423, file: !1654, line: 1131, column: 62)
!12423 = distinct !DILexicalBlock(scope: !12424, file: !1654, line: 1129, column: 13)
!12424 = distinct !DILexicalBlock(scope: !12425, file: !1654, line: 1127, column: 49)
!12425 = distinct !DILexicalBlock(scope: !12405, file: !1654, line: 1126, column: 9)
!12426 = !DILocalVariable(name: "syslog_buffer", scope: !12427, file: !1654, line: 1151, type: !1719)
!12427 = distinct !DILexicalBlock(scope: !12423, file: !1654, line: 1149, column: 16)
!12428 = !DILocalVariable(name: "log_message", scope: !12427, file: !1654, line: 1152, type: !1669)
!12429 = !DILocalVariable(name: "hex_dump_message", scope: !12427, file: !1654, line: 1153, type: !12430)
!12430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!12431 = !DILocation(line: 0, scope: !12405)
!12432 = !DILocation(line: 1126, column: 19, scope: !12425)
!12433 = !DILocation(line: 1126, column: 30, scope: !12425)
!12434 = !DILocation(line: 1127, column: 13, scope: !12425)
!12435 = !DILocation(line: 1127, column: 26, scope: !12425)
!12436 = !DILocation(line: 1127, column: 38, scope: !12425)
!12437 = !DILocation(line: 1126, column: 9, scope: !12405)
!12438 = !DILocation(line: 1129, column: 14, scope: !12423)
!12439 = !DILocation(line: 1130, column: 17, scope: !12423)
!12440 = !DILocation(line: 1130, column: 21, scope: !12423)
!12441 = !DILocation(line: 1130, column: 46, scope: !12423)
!12442 = !DILocation(line: 1131, column: 21, scope: !12423)
!12443 = !DILocation(line: 1131, column: 25, scope: !12423)
!12444 = !DILocation(line: 1131, column: 47, scope: !12423)
!12445 = !DILocation(line: 1131, column: 55, scope: !12423)
!12446 = !DILocation(line: 1129, column: 13, scope: !12424)
!12447 = !DILocation(line: 1132, column: 17, scope: !12421)
!12448 = !DILocation(line: 1132, column: 34, scope: !12421)
!12449 = !DILocation(line: 1132, column: 17, scope: !12422)
!12450 = !DILocation(line: 231, column: 2, scope: !12451, inlinedAt: !12455)
!12451 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !856, file: !856, line: 227, type: !1916, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12452)
!12452 = !{!12453, !12454}
!12453 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !12451, file: !856, line: 229, type: !61)
!12454 = !DILocalVariable(name: "ulNewBASEPRI", scope: !12451, file: !856, line: 229, type: !61)
!12455 = distinct !DILocation(line: 1134, column: 42, scope: !12420)
!12456 = !{i64 690469, i64 690506, i64 690538, i64 690574, i64 690601}
!12457 = !DILocation(line: 0, scope: !12451, inlinedAt: !12455)
!12458 = !DILocation(line: 0, scope: !12420)
!12459 = !DILocation(line: 1135, column: 21, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12420, file: !1654, line: 1135, column: 21)
!12461 = !DILocation(line: 1135, column: 38, scope: !12460)
!12462 = !DILocation(line: 1135, column: 21, scope: !12420)
!12463 = !DILocation(line: 1138, column: 28, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12460, file: !1654, line: 1135, column: 63)
!12465 = !DILocation(line: 1139, column: 37, scope: !12464)
!12466 = !DILocation(line: 1140, column: 28, scope: !12464)
!12467 = !DILocation(line: 1137, column: 21, scope: !12464)
!12468 = !DILocation(line: 1143, column: 17, scope: !12464)
!12469 = !DILocation(line: 1144, column: 17, scope: !12420)
!12470 = !DILocation(line: 1145, column: 17, scope: !12420)
!12471 = !DILocation(line: 1146, column: 17, scope: !12420)
!12472 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !12473, file: !856, line: 247, type: !61)
!12473 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !856, file: !856, line: 247, type: !2535, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12474)
!12474 = !{!12472}
!12475 = !DILocation(line: 0, scope: !12473, inlinedAt: !12476)
!12476 = distinct !DILocation(line: 1147, column: 17, scope: !12420)
!12477 = !DILocation(line: 249, column: 2, scope: !12473, inlinedAt: !12476)
!12478 = !{i64 691002}
!12479 = !DILocation(line: 1148, column: 13, scope: !12420)
!12480 = !DILocation(line: 1151, column: 13, scope: !12427)
!12481 = !DILocation(line: 1151, column: 46, scope: !12427)
!12482 = !DILocation(line: 0, scope: !12427)
!12483 = !DILocation(line: 1151, column: 30, scope: !12427)
!12484 = !DILocation(line: 1155, column: 22, scope: !12485)
!12485 = distinct !DILexicalBlock(scope: !12427, file: !1654, line: 1155, column: 17)
!12486 = !DILocation(line: 1155, column: 17, scope: !12427)
!12487 = !DILocation(line: 1159, column: 44, scope: !12427)
!12488 = !DILocation(line: 1160, column: 26, scope: !12427)
!12489 = !DILocation(line: 1160, column: 39, scope: !12427)
!12490 = !DILocation(line: 1161, column: 46, scope: !12427)
!12491 = !DILocation(line: 1162, column: 54, scope: !12427)
!12492 = !DILocation(line: 1162, column: 31, scope: !12427)
!12493 = !DILocation(line: 1162, column: 43, scope: !12427)
!12494 = !DILocation(line: 1163, column: 31, scope: !12427)
!12495 = !DILocation(line: 1163, column: 43, scope: !12427)
!12496 = !DILocation(line: 1164, column: 31, scope: !12427)
!12497 = !DILocation(line: 1164, column: 41, scope: !12427)
!12498 = !DILocation(line: 1165, column: 31, scope: !12427)
!12499 = !DILocation(line: 1165, column: 43, scope: !12427)
!12500 = !DILocation(line: 1166, column: 43, scope: !12427)
!12501 = !DILocation(line: 1166, column: 31, scope: !12427)
!12502 = !DILocation(line: 1166, column: 41, scope: !12427)
!12503 = !DILocation(line: 1170, column: 47, scope: !12427)
!12504 = !DILocation(line: 1170, column: 19, scope: !12427)
!12505 = !DILocation(line: 1172, column: 17, scope: !12427)
!12506 = !DILocation(line: 1177, column: 24, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12427, file: !1654, line: 1177, column: 17)
!12508 = !DILocation(line: 1177, column: 17, scope: !12427)
!12509 = !DILocation(line: 1178, column: 23, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12511, file: !1654, line: 1178, column: 22)
!12511 = distinct !DILexicalBlock(scope: !12507, file: !1654, line: 1177, column: 46)
!12512 = !DILocation(line: 1178, column: 45, scope: !12510)
!12513 = !DILocation(line: 1178, column: 53, scope: !12510)
!12514 = !DILocation(line: 0, scope: !12511)
!12515 = !DILocation(line: 1184, column: 38, scope: !12427)
!12516 = !DILocation(line: 1184, column: 13, scope: !12427)
!12517 = !DILocation(line: 1185, column: 31, scope: !12427)
!12518 = !DILocation(line: 1185, column: 43, scope: !12427)
!12519 = !DILocation(line: 1187, column: 31, scope: !12427)
!12520 = !DILocation(line: 1187, column: 47, scope: !12427)
!12521 = !DILocation(line: 1188, column: 17, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12427, file: !1654, line: 1188, column: 17)
!12523 = !DILocation(line: 1188, column: 17, scope: !12427)
!12524 = !DILocation(line: 1189, column: 67, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12526, file: !1654, line: 1189, column: 21)
!12526 = distinct !DILexicalBlock(scope: !12522, file: !1654, line: 1188, column: 36)
!12527 = !DILocation(line: 1189, column: 56, scope: !12525)
!12528 = !DILocation(line: 1189, column: 100, scope: !12525)
!12529 = !DILocation(line: 1189, column: 21, scope: !12526)
!12530 = !DILocation(line: 1190, column: 76, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12525, file: !1654, line: 1189, column: 109)
!12532 = !DILocation(line: 1190, column: 21, scope: !12531)
!12533 = !DILocation(line: 1191, column: 51, scope: !12531)
!12534 = !DILocation(line: 1192, column: 17, scope: !12531)
!12535 = !DILocation(line: 1195, column: 13, scope: !12427)
!12536 = !DILocation(line: 1196, column: 9, scope: !12423)
!12537 = !DILocation(line: 1198, column: 1, scope: !12405)
!12538 = distinct !DISubprogram(name: "get_current_time_in_ms", scope: !1654, file: !1654, line: 601, type: !12539, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12541)
!12539 = !DISubroutineType(types: !12540)
!12540 = !{!30}
!12541 = !{!12542, !12543}
!12542 = !DILocalVariable(name: "count", scope: !12538, file: !1654, line: 603, type: !61)
!12543 = !DILocalVariable(name: "count64", scope: !12538, file: !1654, line: 604, type: !1728)
!12544 = !DILocation(line: 603, column: 5, scope: !12538)
!12545 = !DILocation(line: 0, scope: !12538)
!12546 = !DILocation(line: 603, column: 14, scope: !12538)
!12547 = !DILocation(line: 605, column: 5, scope: !12538)
!12548 = !DILocation(line: 606, column: 26, scope: !12538)
!12549 = !DILocation(line: 606, column: 16, scope: !12538)
!12550 = !DILocation(line: 606, column: 32, scope: !12538)
!12551 = !DILocation(line: 606, column: 37, scope: !12538)
!12552 = !DILocation(line: 607, column: 12, scope: !12538)
!12553 = !DILocation(line: 608, column: 1, scope: !12538)
!12554 = !DILocation(line: 607, column: 5, scope: !12538)
!12555 = distinct !DISubprogram(name: "hex_dump_data", scope: !1654, file: !1654, line: 865, type: !12556, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12558)
!12556 = !DISubroutineType(types: !12557)
!12557 = !{null, !331, !7}
!12558 = !{!12559, !12560, !12561}
!12559 = !DILocalVariable(name: "data", arg: 1, scope: !12555, file: !1654, line: 865, type: !331)
!12560 = !DILocalVariable(name: "length", arg: 2, scope: !12555, file: !1654, line: 865, type: !7)
!12561 = !DILocalVariable(name: "index", scope: !12555, file: !1654, line: 867, type: !7)
!12562 = !DILocation(line: 0, scope: !12555)
!12563 = !DILocation(line: 868, column: 27, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12565, file: !1654, line: 868, column: 5)
!12565 = distinct !DILexicalBlock(scope: !12555, file: !1654, line: 868, column: 5)
!12566 = !DILocation(line: 868, column: 5, scope: !12565)
!12567 = !DILocation(line: 869, column: 30, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12564, file: !1654, line: 868, column: 46)
!12569 = !DILocation(line: 869, column: 24, scope: !12568)
!12570 = !DILocation(line: 869, column: 9, scope: !12568)
!12571 = !DILocation(line: 870, column: 20, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12568, file: !1654, line: 870, column: 13)
!12573 = !DILocation(line: 870, column: 25, scope: !12572)
!12574 = !DILocation(line: 870, column: 30, scope: !12572)
!12575 = !DILocation(line: 870, column: 13, scope: !12568)
!12576 = !DILocation(line: 874, column: 23, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12568, file: !1654, line: 874, column: 13)
!12578 = !DILocation(line: 874, column: 13, scope: !12568)
!12579 = !DILocation(line: 0, scope: !12568)
!12580 = distinct !{!12580, !12566, !12581}
!12581 = !DILocation(line: 877, column: 5, scope: !12565)
!12582 = !DILocation(line: 878, column: 20, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12555, file: !1654, line: 878, column: 9)
!12584 = !DILocation(line: 879, column: 9, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12583, file: !1654, line: 878, column: 40)
!12586 = !DILocation(line: 880, column: 5, scope: !12585)
!12587 = !DILocation(line: 881, column: 1, scope: !12555)
!12588 = distinct !DISubprogram(name: "buffer_pool_alloc", scope: !1654, file: !1654, line: 562, type: !12589, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12591)
!12589 = !DISubroutineType(types: !12590)
!12590 = !{!1719}
!12591 = !{!12592, !12593}
!12592 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !12588, file: !1654, line: 564, type: !1154)
!12593 = !DILocalVariable(name: "index", scope: !12588, file: !1654, line: 565, type: !61)
!12594 = !DILocation(line: 231, column: 2, scope: !12451, inlinedAt: !12595)
!12595 = distinct !DILocation(line: 567, column: 30, scope: !12588)
!12596 = !DILocation(line: 0, scope: !12451, inlinedAt: !12595)
!12597 = !DILocation(line: 0, scope: !12588)
!12598 = !DILocation(line: 568, column: 5, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12588, file: !1654, line: 568, column: 5)
!12600 = !DILocation(line: 568, column: 50, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12599, file: !1654, line: 568, column: 5)
!12602 = !DILocation(line: 568, column: 27, scope: !12601)
!12603 = distinct !{!12603, !12598, !12604}
!12604 = !DILocation(line: 574, column: 5, scope: !12599)
!12605 = !DILocation(line: 569, column: 14, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12607, file: !1654, line: 569, column: 13)
!12607 = distinct !DILexicalBlock(scope: !12601, file: !1654, line: 568, column: 54)
!12608 = !DILocation(line: 569, column: 40, scope: !12606)
!12609 = !DILocation(line: 569, column: 13, scope: !12607)
!12610 = !DILocation(line: 570, column: 48, scope: !12611)
!12611 = distinct !DILexicalBlock(scope: !12606, file: !1654, line: 569, column: 50)
!12612 = !DILocation(line: 0, scope: !12473, inlinedAt: !12613)
!12613 = distinct !DILocation(line: 571, column: 13, scope: !12611)
!12614 = !DILocation(line: 249, column: 2, scope: !12473, inlinedAt: !12613)
!12615 = !DILocation(line: 572, column: 13, scope: !12611)
!12616 = !DILocation(line: 575, column: 22, scope: !12588)
!12617 = !DILocation(line: 0, scope: !12473, inlinedAt: !12618)
!12618 = distinct !DILocation(line: 576, column: 5, scope: !12588)
!12619 = !DILocation(line: 249, column: 2, scope: !12473, inlinedAt: !12618)
!12620 = !DILocation(line: 582, column: 5, scope: !12588)
!12621 = !DILocation(line: 583, column: 1, scope: !12588)
!12622 = distinct !DISubprogram(name: "log_queue_send", scope: !1654, file: !1654, line: 621, type: !12623, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12626)
!12623 = !DISubroutineType(types: !12624)
!12624 = !{null, !12625}
!12625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 32)
!12626 = !{!12627, !12628}
!12627 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !12622, file: !1654, line: 621, type: !12625)
!12628 = !DILocalVariable(name: "xTaskWokenByPost", scope: !12629, file: !1654, line: 624, type: !1160)
!12629 = distinct !DILexicalBlock(scope: !12630, file: !1654, line: 623, column: 39)
!12630 = distinct !DILexicalBlock(scope: !12622, file: !1654, line: 623, column: 9)
!12631 = !DILocation(line: 0, scope: !12622)
!12632 = !DILocation(line: 623, column: 9, scope: !12630)
!12633 = !DILocation(line: 623, column: 31, scope: !12630)
!12634 = !DILocation(line: 623, column: 9, scope: !12622)
!12635 = !DILocation(line: 624, column: 9, scope: !12629)
!12636 = !DILocation(line: 0, scope: !12629)
!12637 = !DILocation(line: 624, column: 20, scope: !12629)
!12638 = !DILocation(line: 625, column: 13, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12629, file: !1654, line: 625, column: 13)
!12640 = !DILocation(line: 625, column: 75, scope: !12639)
!12641 = !DILocation(line: 625, column: 13, scope: !12629)
!12642 = !DILocation(line: 626, column: 33, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12639, file: !1654, line: 625, column: 95)
!12644 = !DILocation(line: 626, column: 13, scope: !12643)
!12645 = !DILocation(line: 627, column: 9, scope: !12643)
!12646 = !DILocation(line: 628, column: 13, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12648, file: !1654, line: 628, column: 13)
!12648 = distinct !DILexicalBlock(scope: !12639, file: !1654, line: 627, column: 16)
!12649 = !DILocation(line: 628, column: 13, scope: !12648)
!12650 = !DILocation(line: 628, column: 13, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12647, file: !1654, line: 628, column: 13)
!12652 = !{i64 2148485601}
!12653 = !{i64 2148485641}
!12654 = !DILocation(line: 630, column: 5, scope: !12630)
!12655 = !DILocation(line: 630, column: 5, scope: !12629)
!12656 = !DILocation(line: 631, column: 9, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12630, file: !1654, line: 630, column: 12)
!12658 = !DILocation(line: 633, column: 1, scope: !12622)
!12659 = distinct !DISubprogram(name: "buffer_pool_release", scope: !1654, file: !1654, line: 587, type: !12660, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12662)
!12660 = !DISubroutineType(types: !12661)
!12661 = !{null, !1719}
!12662 = !{!12663, !12664, !12665}
!12663 = !DILocalVariable(name: "syslog_buffer", arg: 1, scope: !12659, file: !1654, line: 587, type: !1719)
!12664 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !12659, file: !1654, line: 589, type: !1154)
!12665 = !DILocalVariable(name: "log_message", scope: !12659, file: !1654, line: 590, type: !1669)
!12666 = !DILocation(line: 0, scope: !12659)
!12667 = !DILocation(line: 590, column: 51, scope: !12659)
!12668 = !DILocation(line: 231, column: 2, scope: !12451, inlinedAt: !12669)
!12669 = distinct !DILocation(line: 592, column: 30, scope: !12659)
!12670 = !DILocation(line: 0, scope: !12451, inlinedAt: !12669)
!12671 = !DILocation(line: 593, column: 20, scope: !12659)
!12672 = !DILocation(line: 593, column: 29, scope: !12659)
!12673 = !DILocation(line: 594, column: 23, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12659, file: !1654, line: 594, column: 9)
!12675 = !DILocation(line: 594, column: 36, scope: !12674)
!12676 = !DILocation(line: 595, column: 13, scope: !12674)
!12677 = !DILocation(line: 595, column: 49, scope: !12674)
!12678 = !DILocation(line: 595, column: 16, scope: !12674)
!12679 = !DILocation(line: 594, column: 9, scope: !12659)
!12680 = !DILocation(line: 596, column: 9, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12674, file: !1654, line: 595, column: 68)
!12682 = !DILocation(line: 597, column: 5, scope: !12681)
!12683 = !DILocation(line: 0, scope: !12473, inlinedAt: !12684)
!12684 = distinct !DILocation(line: 598, column: 5, scope: !12659)
!12685 = !DILocation(line: 249, column: 2, scope: !12473, inlinedAt: !12684)
!12686 = !DILocation(line: 599, column: 1, scope: !12659)
!12687 = distinct !DISubprogram(name: "vprint_module_log", scope: !1654, file: !1654, line: 1046, type: !12688, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12690)
!12688 = !DISubroutineType(types: !12689)
!12689 = !{null, !51, !331, !7, !364, !331, !12375}
!12690 = !{!12691, !12692, !12693, !12694, !12695, !12696, !12697, !12698, !12705, !12707, !12708}
!12691 = !DILocalVariable(name: "handle", arg: 1, scope: !12687, file: !1654, line: 1046, type: !51)
!12692 = !DILocalVariable(name: "func", arg: 2, scope: !12687, file: !1654, line: 1047, type: !331)
!12693 = !DILocalVariable(name: "line", arg: 3, scope: !12687, file: !1654, line: 1048, type: !7)
!12694 = !DILocalVariable(name: "level", arg: 4, scope: !12687, file: !1654, line: 1049, type: !364)
!12695 = !DILocalVariable(name: "message", arg: 5, scope: !12687, file: !1654, line: 1050, type: !331)
!12696 = !DILocalVariable(name: "list", arg: 6, scope: !12687, file: !1654, line: 1051, type: !12375)
!12697 = !DILocalVariable(name: "context", scope: !12687, file: !1654, line: 1053, type: !1710)
!12698 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !12699, file: !1654, line: 1061, type: !1154)
!12699 = distinct !DILexicalBlock(scope: !12700, file: !1654, line: 1060, column: 39)
!12700 = distinct !DILexicalBlock(scope: !12701, file: !1654, line: 1060, column: 17)
!12701 = distinct !DILexicalBlock(scope: !12702, file: !1654, line: 1059, column: 62)
!12702 = distinct !DILexicalBlock(scope: !12703, file: !1654, line: 1057, column: 13)
!12703 = distinct !DILexicalBlock(scope: !12704, file: !1654, line: 1055, column: 49)
!12704 = distinct !DILexicalBlock(scope: !12687, file: !1654, line: 1054, column: 9)
!12705 = !DILocalVariable(name: "syslog_buffer", scope: !12706, file: !1654, line: 1078, type: !1719)
!12706 = distinct !DILexicalBlock(scope: !12702, file: !1654, line: 1076, column: 16)
!12707 = !DILocalVariable(name: "log_message", scope: !12706, file: !1654, line: 1079, type: !1669)
!12708 = !DILocalVariable(name: "normal_log_message", scope: !12706, file: !1654, line: 1080, type: !12709)
!12709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 32)
!12710 = !DILocation(line: 0, scope: !12687)
!12711 = !DILocation(line: 1054, column: 19, scope: !12704)
!12712 = !DILocation(line: 1054, column: 30, scope: !12704)
!12713 = !DILocation(line: 1055, column: 13, scope: !12704)
!12714 = !DILocation(line: 1055, column: 26, scope: !12704)
!12715 = !DILocation(line: 1055, column: 38, scope: !12704)
!12716 = !DILocation(line: 1054, column: 9, scope: !12687)
!12717 = !DILocation(line: 1057, column: 14, scope: !12702)
!12718 = !DILocation(line: 1058, column: 17, scope: !12702)
!12719 = !DILocation(line: 1058, column: 21, scope: !12702)
!12720 = !DILocation(line: 1058, column: 46, scope: !12702)
!12721 = !DILocation(line: 1059, column: 21, scope: !12702)
!12722 = !DILocation(line: 1059, column: 25, scope: !12702)
!12723 = !DILocation(line: 1059, column: 47, scope: !12702)
!12724 = !DILocation(line: 1059, column: 55, scope: !12702)
!12725 = !DILocation(line: 1057, column: 13, scope: !12703)
!12726 = !DILocation(line: 1060, column: 17, scope: !12700)
!12727 = !DILocation(line: 1060, column: 34, scope: !12700)
!12728 = !DILocation(line: 1060, column: 17, scope: !12701)
!12729 = !DILocation(line: 231, column: 2, scope: !12451, inlinedAt: !12730)
!12730 = distinct !DILocation(line: 1062, column: 42, scope: !12699)
!12731 = !DILocation(line: 0, scope: !12451, inlinedAt: !12730)
!12732 = !DILocation(line: 0, scope: !12699)
!12733 = !DILocation(line: 1063, column: 21, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12699, file: !1654, line: 1063, column: 21)
!12735 = !DILocation(line: 1063, column: 38, scope: !12734)
!12736 = !DILocation(line: 1063, column: 21, scope: !12699)
!12737 = !DILocation(line: 1066, column: 28, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12734, file: !1654, line: 1063, column: 63)
!12739 = !DILocation(line: 1067, column: 37, scope: !12738)
!12740 = !DILocation(line: 1068, column: 28, scope: !12738)
!12741 = !DILocation(line: 1065, column: 21, scope: !12738)
!12742 = !DILocation(line: 1071, column: 17, scope: !12738)
!12743 = !DILocation(line: 1072, column: 17, scope: !12699)
!12744 = !DILocation(line: 1073, column: 17, scope: !12699)
!12745 = !DILocation(line: 0, scope: !12473, inlinedAt: !12746)
!12746 = distinct !DILocation(line: 1074, column: 17, scope: !12699)
!12747 = !DILocation(line: 249, column: 2, scope: !12473, inlinedAt: !12746)
!12748 = !DILocation(line: 1075, column: 13, scope: !12699)
!12749 = !DILocation(line: 1078, column: 13, scope: !12706)
!12750 = !DILocation(line: 1078, column: 46, scope: !12706)
!12751 = !DILocation(line: 0, scope: !12706)
!12752 = !DILocation(line: 1078, column: 30, scope: !12706)
!12753 = !DILocation(line: 1082, column: 22, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12706, file: !1654, line: 1082, column: 17)
!12755 = !DILocation(line: 1082, column: 17, scope: !12706)
!12756 = !DILocation(line: 1085, column: 44, scope: !12706)
!12757 = !DILocation(line: 1086, column: 26, scope: !12706)
!12758 = !DILocation(line: 1086, column: 39, scope: !12706)
!12759 = !DILocation(line: 1087, column: 48, scope: !12706)
!12760 = !DILocation(line: 1088, column: 56, scope: !12706)
!12761 = !DILocation(line: 1088, column: 33, scope: !12706)
!12762 = !DILocation(line: 1088, column: 45, scope: !12706)
!12763 = !DILocation(line: 1089, column: 33, scope: !12706)
!12764 = !DILocation(line: 1089, column: 45, scope: !12706)
!12765 = !DILocation(line: 1090, column: 33, scope: !12706)
!12766 = !DILocation(line: 1090, column: 43, scope: !12706)
!12767 = !DILocation(line: 1091, column: 33, scope: !12706)
!12768 = !DILocation(line: 1091, column: 45, scope: !12706)
!12769 = !DILocation(line: 1092, column: 45, scope: !12706)
!12770 = !DILocation(line: 1092, column: 33, scope: !12706)
!12771 = !DILocation(line: 1092, column: 43, scope: !12706)
!12772 = !DILocation(line: 1096, column: 49, scope: !12706)
!12773 = !DILocation(line: 1096, column: 19, scope: !12706)
!12774 = !DILocation(line: 1097, column: 13, scope: !12706)
!12775 = !DILocation(line: 1098, column: 9, scope: !12702)
!12776 = !DILocation(line: 1100, column: 1, scope: !12687)
!12777 = distinct !DISubprogram(name: "log_uart_init", scope: !1654, file: !1654, line: 185, type: !6218, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12778)
!12778 = !{!12779, !12780, !12788}
!12779 = !DILocalVariable(name: "port", arg: 1, scope: !12777, file: !1654, line: 185, type: !755)
!12780 = !DILocalVariable(name: "uart_config", scope: !12777, file: !1654, line: 187, type: !12781)
!12781 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !650, line: 378, baseType: !12782)
!12782 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 373, size: 128, elements: !12783)
!12783 = !{!12784, !12785, !12786, !12787}
!12784 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !12782, file: !650, line: 374, baseType: !712, size: 32)
!12785 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !12782, file: !650, line: 375, baseType: !714, size: 32, offset: 32)
!12786 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !12782, file: !650, line: 376, baseType: !716, size: 32, offset: 64)
!12787 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !12782, file: !650, line: 377, baseType: !718, size: 32, offset: 96)
!12788 = !DILocalVariable(name: "ret", scope: !12777, file: !1654, line: 188, type: !6067)
!12789 = !DILocation(line: 0, scope: !12777)
!12790 = !DILocation(line: 187, column: 5, scope: !12777)
!12791 = !DILocation(line: 187, column: 23, scope: !12777)
!12792 = !DILocation(line: 191, column: 17, scope: !12777)
!12793 = !DILocation(line: 191, column: 26, scope: !12777)
!12794 = !DILocation(line: 192, column: 17, scope: !12777)
!12795 = !DILocation(line: 192, column: 24, scope: !12777)
!12796 = !DILocation(line: 193, column: 17, scope: !12777)
!12797 = !DILocation(line: 193, column: 26, scope: !12777)
!12798 = !DILocation(line: 194, column: 17, scope: !12777)
!12799 = !DILocation(line: 194, column: 29, scope: !12777)
!12800 = !DILocation(line: 196, column: 21, scope: !12777)
!12801 = !DILocation(line: 197, column: 11, scope: !12777)
!12802 = !DILocation(line: 199, column: 22, scope: !12777)
!12803 = !DILocation(line: 202, column: 1, scope: !12777)
!12804 = !DILocation(line: 201, column: 5, scope: !12777)
!12805 = distinct !DISubprogram(name: "log_putchar", scope: !1654, file: !1654, line: 204, type: !12806, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12808)
!12806 = !DISubroutineType(types: !12807)
!12807 = !{null, !202}
!12808 = !{!12809}
!12809 = !DILocalVariable(name: "byte", arg: 1, scope: !12805, file: !1654, line: 204, type: !202)
!12810 = !DILocation(line: 0, scope: !12805)
!12811 = !DILocation(line: 206, column: 23, scope: !12805)
!12812 = !DILocation(line: 206, column: 5, scope: !12805)
!12813 = !DILocation(line: 207, column: 1, scope: !12805)
!12814 = distinct !DISubprogram(name: "buffer_pool_init", scope: !1654, file: !1654, line: 524, type: !154, scopeLine: 525, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !1935)
!12815 = !DILocation(line: 526, column: 5, scope: !12814)
!12816 = !DILocation(line: 527, column: 1, scope: !12814)
!12817 = distinct !DISubprogram(name: "log_queue_create", scope: !1654, file: !1654, line: 613, type: !154, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !1935)
!12818 = !DILocation(line: 615, column: 19, scope: !12817)
!12819 = !DILocation(line: 615, column: 17, scope: !12817)
!12820 = !DILocation(line: 616, column: 14, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12817, file: !1654, line: 616, column: 9)
!12822 = !DILocation(line: 616, column: 9, scope: !12817)
!12823 = !DILocation(line: 617, column: 9, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12821, file: !1654, line: 616, column: 30)
!12825 = !DILocation(line: 618, column: 5, scope: !12824)
!12826 = !DILocation(line: 619, column: 1, scope: !12817)
!12827 = distinct !DISubprogram(name: "log_queue_receive", scope: !1654, file: !1654, line: 635, type: !12828, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12830)
!12828 = !DISubroutineType(types: !12829)
!12829 = !{!7, !12625}
!12830 = !{!12831, !12832}
!12831 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !12827, file: !1654, line: 635, type: !12625)
!12832 = !DILocalVariable(name: "ret_val", scope: !12827, file: !1654, line: 637, type: !1160)
!12833 = !DILocation(line: 0, scope: !12827)
!12834 = !DILocation(line: 637, column: 26, scope: !12827)
!12835 = !DILocation(line: 638, column: 20, scope: !12827)
!12836 = !DILocation(line: 638, column: 12, scope: !12827)
!12837 = !DILocation(line: 638, column: 5, scope: !12827)
!12838 = distinct !DISubprogram(name: "print_normal_log", scope: !1654, file: !1654, line: 854, type: !12839, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12843)
!12839 = !DISubroutineType(types: !12840)
!12840 = !{null, !12841}
!12841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12842, size: 32)
!12842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1679)
!12843 = !{!12844}
!12844 = !DILocalVariable(name: "normal_log_message", arg: 1, scope: !12838, file: !1654, line: 854, type: !12841)
!12845 = !DILocation(line: 0, scope: !12838)
!12846 = !DILocation(line: 857, column: 46, scope: !12838)
!12847 = !DILocation(line: 858, column: 32, scope: !12838)
!12848 = !DILocation(line: 859, column: 12, scope: !12838)
!12849 = !DILocation(line: 860, column: 32, scope: !12838)
!12850 = !DILocation(line: 861, column: 32, scope: !12838)
!12851 = !DILocation(line: 856, column: 5, scope: !12838)
!12852 = !DILocation(line: 862, column: 30, scope: !12838)
!12853 = !DILocation(line: 862, column: 5, scope: !12838)
!12854 = !DILocation(line: 863, column: 1, scope: !12838)
!12855 = distinct !DISubprogram(name: "print_hex_dump", scope: !1654, file: !1654, line: 883, type: !12856, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12860)
!12856 = !DISubroutineType(types: !12857)
!12857 = !{null, !12858}
!12858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12859, size: 32)
!12859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1692)
!12860 = !{!12861}
!12861 = !DILocalVariable(name: "hex_dump_message", arg: 1, scope: !12855, file: !1654, line: 883, type: !12858)
!12862 = !DILocation(line: 0, scope: !12855)
!12863 = !DILocation(line: 886, column: 44, scope: !12855)
!12864 = !DILocation(line: 887, column: 30, scope: !12855)
!12865 = !DILocation(line: 888, column: 12, scope: !12855)
!12866 = !DILocation(line: 889, column: 30, scope: !12855)
!12867 = !DILocation(line: 890, column: 30, scope: !12855)
!12868 = !DILocation(line: 885, column: 5, scope: !12855)
!12869 = !DILocation(line: 891, column: 30, scope: !12855)
!12870 = !DILocation(line: 891, column: 5, scope: !12855)
!12871 = !DILocation(line: 892, column: 27, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12855, file: !1654, line: 892, column: 9)
!12873 = !DILocation(line: 892, column: 39, scope: !12872)
!12874 = !DILocation(line: 0, scope: !12872)
!12875 = !DILocation(line: 892, column: 9, scope: !12855)
!12876 = !DILocation(line: 893, column: 9, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12872, file: !1654, line: 892, column: 61)
!12878 = !DILocation(line: 894, column: 41, scope: !12877)
!12879 = !DILocation(line: 894, column: 76, scope: !12877)
!12880 = !DILocation(line: 894, column: 88, scope: !12877)
!12881 = !DILocation(line: 894, column: 9, scope: !12877)
!12882 = !DILocation(line: 895, column: 5, scope: !12877)
!12883 = !DILocation(line: 896, column: 9, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12872, file: !1654, line: 895, column: 12)
!12885 = !DILocation(line: 898, column: 1, scope: !12855)
!12886 = distinct !DISubprogram(name: "process_log_message", scope: !1654, file: !1654, line: 900, type: !12887, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12891)
!12887 = !DISubroutineType(types: !12888)
!12888 = !{null, !12889}
!12889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12890, size: 32)
!12890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1670)
!12891 = !{!12892, !12893}
!12892 = !DILocalVariable(name: "log_message", arg: 1, scope: !12886, file: !1654, line: 900, type: !12889)
!12893 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !12894, file: !1654, line: 903, type: !1154)
!12894 = distinct !DILexicalBlock(scope: !12895, file: !1654, line: 902, column: 28)
!12895 = distinct !DILexicalBlock(scope: !12886, file: !1654, line: 902, column: 9)
!12896 = !DILocation(line: 0, scope: !12886)
!12897 = !DILocation(line: 902, column: 9, scope: !12895)
!12898 = !DILocation(line: 902, column: 9, scope: !12886)
!12899 = !DILocation(line: 231, column: 2, scope: !12451, inlinedAt: !12900)
!12900 = distinct !DILocation(line: 903, column: 46, scope: !12894)
!12901 = !DILocation(line: 0, scope: !12451, inlinedAt: !12900)
!12902 = !DILocation(line: 0, scope: !12894)
!12903 = !DILocation(line: 904, column: 67, scope: !12894)
!12904 = !DILocation(line: 904, column: 9, scope: !12894)
!12905 = !DILocation(line: 905, column: 27, scope: !12894)
!12906 = !DILocation(line: 0, scope: !12473, inlinedAt: !12907)
!12907 = distinct !DILocation(line: 906, column: 9, scope: !12894)
!12908 = !DILocation(line: 249, column: 2, scope: !12473, inlinedAt: !12907)
!12909 = !DILocation(line: 907, column: 5, scope: !12894)
!12910 = !DILocation(line: 909, column: 49, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12886, file: !1654, line: 909, column: 9)
!12912 = !DILocation(line: 909, column: 33, scope: !12911)
!12913 = !DILocation(line: 909, column: 9, scope: !12886)
!12914 = !DILocation(line: 910, column: 40, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12911, file: !1654, line: 909, column: 63)
!12916 = !DILocation(line: 910, column: 42, scope: !12915)
!12917 = !DILocation(line: 910, column: 9, scope: !12915)
!12918 = !DILocation(line: 911, column: 5, scope: !12915)
!12919 = !DILocation(line: 912, column: 40, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12911, file: !1654, line: 911, column: 12)
!12921 = !DILocation(line: 912, column: 9, scope: !12920)
!12922 = !DILocation(line: 914, column: 1, scope: !12886)
!12923 = distinct !DISubprogram(name: "syslog_task_entry", scope: !1654, file: !1654, line: 966, type: !640, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12924)
!12924 = !{!12925, !12926}
!12925 = !DILocalVariable(name: "args", arg: 1, scope: !12923, file: !1654, line: 966, type: !51)
!12926 = !DILocalVariable(name: "log_buffer", scope: !12927, file: !1654, line: 983, type: !1719)
!12927 = distinct !DILexicalBlock(scope: !12928, file: !1654, line: 982, column: 14)
!12928 = distinct !DILexicalBlock(scope: !12929, file: !1654, line: 982, column: 5)
!12929 = distinct !DILexicalBlock(scope: !12923, file: !1654, line: 982, column: 5)
!12930 = !DILocation(line: 0, scope: !12923)
!12931 = !DILocation(line: 979, column: 23, scope: !12923)
!12932 = !DILocation(line: 980, column: 5, scope: !12923)
!12933 = !DILocation(line: 982, column: 5, scope: !12923)
!12934 = !DILocation(line: 983, column: 9, scope: !12927)
!12935 = !DILocation(line: 0, scope: !12927)
!12936 = !DILocation(line: 983, column: 26, scope: !12927)
!12937 = !DILocation(line: 984, column: 18, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12927, file: !1654, line: 984, column: 13)
!12939 = !DILocation(line: 984, column: 15, scope: !12938)
!12940 = !DILocation(line: 984, column: 13, scope: !12927)
!12941 = !DILocation(line: 993, column: 42, scope: !12942)
!12942 = distinct !DILexicalBlock(scope: !12938, file: !1654, line: 984, column: 50)
!12943 = !DILocation(line: 993, column: 41, scope: !12942)
!12944 = !DILocation(line: 993, column: 24, scope: !12942)
!12945 = !DILocation(line: 993, column: 4, scope: !12942)
!12946 = !DILocation(line: 995, column: 33, scope: !12942)
!12947 = !DILocation(line: 995, column: 13, scope: !12942)
!12948 = !DILocation(line: 996, column: 9, scope: !12942)
!12949 = !DILocation(line: 997, column: 5, scope: !12928)
!12950 = !DILocation(line: 982, column: 5, scope: !12928)
!12951 = distinct !{!12951, !12952, !12953}
!12952 = !DILocation(line: 982, column: 5, scope: !12929)
!12953 = !DILocation(line: 997, column: 5, scope: !12929)
!12954 = distinct !DISubprogram(name: "log_init", scope: !1654, file: !1654, line: 1000, type: !12955, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !12962)
!12955 = !DISubroutineType(types: !12956)
!12956 = !{null, !1742, !12957, !1749}
!12957 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_load_fn", file: !346, line: 117, baseType: !12958)
!12958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12959, size: 32)
!12959 = !DISubroutineType(types: !12960)
!12960 = !{!61, !12961}
!12961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!12962 = !{!12963, !12964, !12965, !12966}
!12963 = !DILocalVariable(name: "save", arg: 1, scope: !12954, file: !1654, line: 1000, type: !1742)
!12964 = !DILocalVariable(name: "load", arg: 2, scope: !12954, file: !1654, line: 1001, type: !12957)
!12965 = !DILocalVariable(name: "entries", arg: 3, scope: !12954, file: !1654, line: 1002, type: !1749)
!12966 = !DILocalVariable(name: "exception_config", scope: !12954, file: !1654, line: 1004, type: !12967)
!12967 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !1622, line: 99, baseType: !12968)
!12968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1622, line: 95, size: 64, elements: !12969)
!12969 = !{!12970, !12971}
!12970 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !12968, file: !1622, line: 97, baseType: !1626, size: 32)
!12971 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !12968, file: !1622, line: 98, baseType: !1626, size: 32, offset: 32)
!12972 = !DILocation(line: 0, scope: !12954)
!12973 = !DILocation(line: 1004, column: 5, scope: !12954)
!12974 = !DILocation(line: 1004, column: 27, scope: !12954)
!12975 = !DILocation(line: 1006, column: 9, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12954, file: !1654, line: 1006, column: 9)
!12977 = !DILocation(line: 1006, column: 26, scope: !12976)
!12978 = !DILocation(line: 1006, column: 9, scope: !12954)
!12979 = !DILocation(line: 1011, column: 22, scope: !12954)
!12980 = !DILocation(line: 1012, column: 5, scope: !12954)
!12981 = !DILocation(line: 1013, column: 5, scope: !12954)
!12982 = !DILocation(line: 1014, column: 23, scope: !12954)
!12983 = !DILocation(line: 1016, column: 22, scope: !12954)
!12984 = !DILocation(line: 1016, column: 30, scope: !12954)
!12985 = !DILocation(line: 1017, column: 22, scope: !12954)
!12986 = !DILocation(line: 1017, column: 30, scope: !12954)
!12987 = !DILocation(line: 1018, column: 5, scope: !12954)
!12988 = !DILocation(line: 1021, column: 19, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12954, file: !1654, line: 1021, column: 9)
!12990 = !DILocation(line: 1021, column: 16, scope: !12989)
!12991 = !DILocation(line: 1021, column: 9, scope: !12954)
!12992 = !DILocation(line: 1027, column: 9, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12989, file: !1654, line: 1026, column: 53)
!12994 = !DILocation(line: 1028, column: 5, scope: !12993)
!12995 = !DILocation(line: 1030, column: 24, scope: !12954)
!12996 = !DILocation(line: 1031, column: 22, scope: !12954)
!12997 = !DILocation(line: 1034, column: 27, scope: !12954)
!12998 = !DILocation(line: 1035, column: 27, scope: !12954)
!12999 = !DILocation(line: 1037, column: 9, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12954, file: !1654, line: 1037, column: 9)
!13001 = !DILocation(line: 1037, column: 9, scope: !12954)
!13002 = !DILocation(line: 1039, column: 13, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !13004, file: !1654, line: 1039, column: 13)
!13004 = distinct !DILexicalBlock(scope: !13000, file: !1654, line: 1037, column: 15)
!13005 = !DILocation(line: 1039, column: 34, scope: !13003)
!13006 = !DILocation(line: 1039, column: 13, scope: !13004)
!13007 = !DILocation(line: 1040, column: 13, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !13009, file: !1654, line: 1040, column: 13)
!13009 = distinct !DILexicalBlock(scope: !13003, file: !1654, line: 1039, column: 40)
!13010 = !DILocation(line: 1041, column: 9, scope: !13009)
!13011 = !DILocation(line: 1043, column: 22, scope: !12954)
!13012 = !DILocation(line: 1044, column: 1, scope: !12954)
!13013 = distinct !DISubprogram(name: "syslog_exception_cb", scope: !1654, file: !1654, line: 513, type: !154, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !1935)
!13014 = !DILocation(line: 518, column: 5, scope: !13013)
!13015 = !DILocation(line: 519, column: 1, scope: !13013)
!13016 = distinct !DISubprogram(name: "syslog_buffer_dump", scope: !1654, file: !1654, line: 483, type: !154, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13017)
!13017 = !{!13018, !13019, !13020}
!13018 = !DILocalVariable(name: "index", scope: !13016, file: !1654, line: 485, type: !61)
!13019 = !DILocalVariable(name: "pHead", scope: !13016, file: !1654, line: 486, type: !1719)
!13020 = !DILocalVariable(name: "pCurr", scope: !13016, file: !1654, line: 486, type: !1719)
!13021 = !DILocation(line: 0, scope: !13016)
!13022 = !DILocation(line: 489, column: 5, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13016, file: !1654, line: 489, column: 5)
!13024 = !DILocation(line: 491, column: 13, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13026, file: !1654, line: 491, column: 13)
!13026 = distinct !DILexicalBlock(scope: !13027, file: !1654, line: 489, column: 54)
!13027 = distinct !DILexicalBlock(scope: !13023, file: !1654, line: 489, column: 5)
!13028 = !DILocation(line: 491, column: 39, scope: !13025)
!13029 = !DILocation(line: 491, column: 13, scope: !13026)
!13030 = !DILocation(line: 492, column: 50, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13025, file: !1654, line: 491, column: 49)
!13032 = !DILocation(line: 492, column: 48, scope: !13031)
!13033 = !DILocation(line: 494, column: 9, scope: !13031)
!13034 = !DILocation(line: 489, column: 50, scope: !13027)
!13035 = !DILocation(line: 489, column: 27, scope: !13027)
!13036 = distinct !{!13036, !13022, !13037}
!13037 = !DILocation(line: 495, column: 5, scope: !13023)
!13038 = !DILocation(line: 498, column: 13, scope: !13016)
!13039 = !DILocation(line: 500, column: 5, scope: !13016)
!13040 = !DILocation(line: 503, column: 5, scope: !13016)
!13041 = !DILocation(line: 505, column: 43, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13016, file: !1654, line: 503, column: 19)
!13043 = !DILocation(line: 505, column: 17, scope: !13042)
!13044 = !DILocation(line: 506, column: 25, scope: !13042)
!13045 = !DILocation(line: 507, column: 46, scope: !13042)
!13046 = !DILocation(line: 507, column: 29, scope: !13042)
!13047 = !DILocation(line: 507, column: 9, scope: !13042)
!13048 = distinct !{!13048, !13040, !13049}
!13049 = !DILocation(line: 508, column: 5, scope: !13016)
!13050 = !DILocation(line: 509, column: 1, scope: !13016)
!13051 = distinct !DISubprogram(name: "sort_syslog_buffer", scope: !1654, file: !1654, line: 338, type: !13052, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13054)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!1719, !1719}
!13054 = !{!13055, !13056, !13057, !13058}
!13055 = !DILocalVariable(name: "pList", arg: 1, scope: !13051, file: !1654, line: 338, type: !1719)
!13056 = !DILocalVariable(name: "pHead", scope: !13051, file: !1654, line: 340, type: !1719)
!13057 = !DILocalVariable(name: "pCurr", scope: !13051, file: !1654, line: 340, type: !1719)
!13058 = !DILocalVariable(name: "p", scope: !13051, file: !1654, line: 340, type: !1719)
!13059 = !DILocation(line: 0, scope: !13051)
!13060 = !DILocation(line: 342, column: 15, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13051, file: !1654, line: 342, column: 9)
!13062 = !DILocation(line: 342, column: 23, scope: !13061)
!13063 = !DILocation(line: 342, column: 33, scope: !13061)
!13064 = !DILocation(line: 342, column: 42, scope: !13061)
!13065 = !DILocation(line: 342, column: 9, scope: !13051)
!13066 = !DILocation(line: 348, column: 43, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !13051, file: !1654, line: 346, column: 27)
!13068 = !DILocation(line: 348, column: 17, scope: !13067)
!13069 = !DILocation(line: 349, column: 20, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13067, file: !1654, line: 349, column: 13)
!13071 = !DILocation(line: 349, column: 29, scope: !13070)
!13072 = !DILocation(line: 349, column: 32, scope: !13070)
!13073 = !DILocation(line: 349, column: 48, scope: !13070)
!13074 = !DILocation(line: 349, column: 46, scope: !13070)
!13075 = !DILocation(line: 349, column: 13, scope: !13067)
!13076 = !DILocation(line: 0, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13070, file: !1654, line: 353, column: 14)
!13078 = !DILocation(line: 356, column: 23, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13080, file: !1654, line: 356, column: 19)
!13080 = distinct !DILexicalBlock(scope: !13077, file: !1654, line: 355, column: 30)
!13081 = !DILocation(line: 356, column: 32, scope: !13079)
!13082 = !DILocation(line: 356, column: 38, scope: !13079)
!13083 = !DILocation(line: 357, column: 35, scope: !13079)
!13084 = !DILocation(line: 357, column: 33, scope: !13079)
!13085 = !DILocation(line: 356, column: 19, scope: !13080)
!13086 = distinct !{!13086, !13087, !13088}
!13087 = !DILocation(line: 355, column: 12, scope: !13077)
!13088 = !DILocation(line: 363, column: 12, scope: !13077)
!13089 = !DILocation(line: 358, column: 35, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13079, file: !1654, line: 357, column: 76)
!13091 = !DILocation(line: 360, column: 19, scope: !13090)
!13092 = !DILocation(line: 0, scope: !13070)
!13093 = !DILocation(line: 346, column: 18, scope: !13051)
!13094 = !DILocation(line: 346, column: 5, scope: !13051)
!13095 = distinct !{!13095, !13094, !13096}
!13096 = !DILocation(line: 365, column: 5, scope: !13051)
!13097 = !DILocation(line: 367, column: 1, scope: !13051)
!13098 = distinct !DISubprogram(name: "syslog_get_config", scope: !1654, file: !1654, line: 1215, type: !13099, scopeLine: 1216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13101)
!13099 = !DISubroutineType(types: !13100)
!13100 = !{null, !12961}
!13101 = !{!13102}
!13102 = !DILocalVariable(name: "config", arg: 1, scope: !13098, file: !1654, line: 1215, type: !12961)
!13103 = !DILocation(line: 0, scope: !13098)
!13104 = !DILocation(line: 1217, column: 15, scope: !13098)
!13105 = !DILocation(line: 1218, column: 1, scope: !13098)
!13106 = distinct !DISubprogram(name: "syslog_set_filter", scope: !1654, file: !1654, line: 1271, type: !13107, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13109)
!13107 = !DISubroutineType(types: !13108)
!13108 = !{!7, !201, !201, !201, !7}
!13109 = !{!13110, !13111, !13112, !13113, !13114, !13115, !13116}
!13110 = !DILocalVariable(name: "module_name", arg: 1, scope: !13106, file: !1654, line: 1271, type: !201)
!13111 = !DILocalVariable(name: "log_switch_str", arg: 2, scope: !13106, file: !1654, line: 1271, type: !201)
!13112 = !DILocalVariable(name: "print_level_str", arg: 3, scope: !13106, file: !1654, line: 1271, type: !201)
!13113 = !DILocalVariable(name: "save", arg: 4, scope: !13106, file: !1654, line: 1271, type: !7)
!13114 = !DILocalVariable(name: "i", scope: !13106, file: !1654, line: 1273, type: !7)
!13115 = !DILocalVariable(name: "log_switch", scope: !13106, file: !1654, line: 1274, type: !7)
!13116 = !DILocalVariable(name: "print_level", scope: !13106, file: !1654, line: 1275, type: !7)
!13117 = !DILocation(line: 0, scope: !13106)
!13118 = !DILocation(line: 1277, column: 18, scope: !13106)
!13119 = !DILocation(line: 1278, column: 20, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13106, file: !1654, line: 1278, column: 9)
!13121 = !DILocation(line: 1278, column: 9, scope: !13106)
!13122 = !DILocation(line: 1282, column: 19, scope: !13106)
!13123 = !DILocation(line: 1283, column: 21, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !13106, file: !1654, line: 1283, column: 9)
!13125 = !DILocation(line: 1283, column: 9, scope: !13106)
!13126 = !DILocation(line: 1287, column: 9, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13106, file: !1654, line: 1287, column: 9)
!13128 = !DILocation(line: 1287, column: 34, scope: !13127)
!13129 = !DILocation(line: 0, scope: !13127)
!13130 = !DILocation(line: 1287, column: 9, scope: !13106)
!13131 = !DILocation(line: 1289, column: 35, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13133, file: !1654, line: 1289, column: 13)
!13133 = distinct !DILexicalBlock(scope: !13127, file: !1654, line: 1287, column: 40)
!13134 = !DILocation(line: 1289, column: 13, scope: !13133)
!13135 = !DILocation(line: 1294, column: 16, scope: !13133)
!13136 = !DILocation(line: 1294, column: 9, scope: !13133)
!13137 = !DILocation(line: 1295, column: 39, scope: !13138)
!13138 = distinct !DILexicalBlock(scope: !13133, file: !1654, line: 1294, column: 42)
!13139 = !DILocation(line: 1295, column: 50, scope: !13138)
!13140 = !DILocation(line: 1296, column: 27, scope: !13138)
!13141 = !DILocation(line: 1296, column: 13, scope: !13138)
!13142 = !DILocation(line: 1296, column: 39, scope: !13138)
!13143 = !DILocation(line: 1296, column: 51, scope: !13138)
!13144 = !DILocation(line: 1297, column: 14, scope: !13138)
!13145 = distinct !{!13145, !13136, !13146}
!13146 = !DILocation(line: 1298, column: 9, scope: !13133)
!13147 = !DILocation(line: 1302, column: 13, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13127, file: !1654, line: 1300, column: 12)
!13149 = !DILocation(line: 1304, column: 15, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13148, file: !1654, line: 1304, column: 13)
!13151 = !DILocation(line: 1304, column: 13, scope: !13148)
!13152 = !DILocation(line: 1307, column: 23, scope: !13148)
!13153 = !DILocation(line: 1307, column: 9, scope: !13148)
!13154 = !DILocation(line: 1307, column: 35, scope: !13148)
!13155 = !DILocation(line: 1307, column: 46, scope: !13148)
!13156 = !DILocation(line: 1308, column: 23, scope: !13148)
!13157 = !DILocation(line: 1308, column: 9, scope: !13148)
!13158 = !DILocation(line: 1308, column: 35, scope: !13148)
!13159 = !DILocation(line: 1308, column: 47, scope: !13148)
!13160 = !DILocation(line: 1312, column: 9, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13106, file: !1654, line: 1312, column: 9)
!13162 = !DILocation(line: 1312, column: 9, scope: !13106)
!13163 = !DILocation(line: 1313, column: 23, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13161, file: !1654, line: 1312, column: 15)
!13165 = !DILocation(line: 1313, column: 9, scope: !13164)
!13166 = !DILocation(line: 1314, column: 5, scope: !13164)
!13167 = !DILocation(line: 1317, column: 1, scope: !13106)
!13168 = distinct !DISubprogram(name: "str_to_log_switch", scope: !1654, file: !1654, line: 1484, type: !13169, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13171)
!13169 = !DISubroutineType(types: !13170)
!13170 = !{!7, !331}
!13171 = !{!13172, !13173}
!13172 = !DILocalVariable(name: "log_switch_str", arg: 1, scope: !13168, file: !1654, line: 1484, type: !331)
!13173 = !DILocalVariable(name: "i", scope: !13168, file: !1654, line: 1486, type: !7)
!13174 = !DILocation(line: 0, scope: !13168)
!13175 = !DILocation(line: 1488, column: 5, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13168, file: !1654, line: 1488, column: 5)
!13177 = !DILocation(line: 1489, column: 37, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13179, file: !1654, line: 1489, column: 13)
!13179 = distinct !DILexicalBlock(scope: !13180, file: !1654, line: 1488, column: 69)
!13180 = distinct !DILexicalBlock(scope: !13176, file: !1654, line: 1488, column: 5)
!13181 = !DILocation(line: 1489, column: 14, scope: !13178)
!13182 = !DILocation(line: 1489, column: 13, scope: !13179)
!13183 = !DILocation(line: 1494, column: 1, scope: !13168)
!13184 = distinct !DISubprogram(name: "str_to_print_level", scope: !1654, file: !1654, line: 1496, type: !13169, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13185)
!13185 = !{!13186, !13187}
!13186 = !DILocalVariable(name: "print_level_str", arg: 1, scope: !13184, file: !1654, line: 1496, type: !331)
!13187 = !DILocalVariable(name: "i", scope: !13184, file: !1654, line: 1498, type: !7)
!13188 = !DILocation(line: 0, scope: !13184)
!13189 = !DILocation(line: 1500, column: 5, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13184, file: !1654, line: 1500, column: 5)
!13191 = !DILocation(line: 1501, column: 38, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13193, file: !1654, line: 1501, column: 13)
!13193 = distinct !DILexicalBlock(scope: !13194, file: !1654, line: 1500, column: 70)
!13194 = distinct !DILexicalBlock(scope: !13190, file: !1654, line: 1500, column: 5)
!13195 = !DILocation(line: 1501, column: 14, scope: !13192)
!13196 = !DILocation(line: 1501, column: 13, scope: !13193)
!13197 = !DILocation(line: 1500, column: 66, scope: !13194)
!13198 = !DILocation(line: 1500, column: 19, scope: !13194)
!13199 = distinct !{!13199, !13189, !13200}
!13200 = !DILocation(line: 1504, column: 5, scope: !13190)
!13201 = !DILocation(line: 1506, column: 1, scope: !13184)
!13202 = distinct !DISubprogram(name: "syslog_get_index_from_module_name", scope: !1654, file: !1654, line: 1252, type: !13203, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13205)
!13203 = !DISubroutineType(types: !13204)
!13204 = !{!7, !1749, !331}
!13205 = !{!13206, !13207, !13208}
!13206 = !DILocalVariable(name: "filters", arg: 1, scope: !13202, file: !1654, line: 1252, type: !1749)
!13207 = !DILocalVariable(name: "module_name", arg: 2, scope: !13202, file: !1654, line: 1252, type: !331)
!13208 = !DILocalVariable(name: "i", scope: !13202, file: !1654, line: 1254, type: !7)
!13209 = !DILocation(line: 0, scope: !13202)
!13210 = !DILocation(line: 1256, column: 17, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13202, file: !1654, line: 1256, column: 9)
!13212 = !DILocation(line: 1256, column: 9, scope: !13202)
!13213 = !DILocation(line: 1260, column: 12, scope: !13202)
!13214 = !DILocation(line: 1260, column: 5, scope: !13202)
!13215 = !DILocation(line: 1261, column: 33, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13217, file: !1654, line: 1261, column: 13)
!13217 = distinct !DILexicalBlock(scope: !13202, file: !1654, line: 1260, column: 24)
!13218 = !DILocation(line: 1261, column: 14, scope: !13216)
!13219 = !DILocation(line: 1261, column: 13, scope: !13217)
!13220 = !DILocation(line: 1264, column: 10, scope: !13217)
!13221 = distinct !{!13221, !13214, !13222}
!13222 = !DILocation(line: 1265, column: 5, scope: !13202)
!13223 = !DILocation(line: 1269, column: 1, scope: !13202)
!13224 = distinct !DISubprogram(name: "syslog_at_set_filter", scope: !1654, file: !1654, line: 1319, type: !13225, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13227)
!13225 = !DISubroutineType(types: !13226)
!13226 = !{!7, !201, !7, !7, !7}
!13227 = !{!13228, !13229, !13230, !13231, !13232}
!13228 = !DILocalVariable(name: "module_name", arg: 1, scope: !13224, file: !1654, line: 1319, type: !201)
!13229 = !DILocalVariable(name: "log_switch", arg: 2, scope: !13224, file: !1654, line: 1319, type: !7)
!13230 = !DILocalVariable(name: "print_level", arg: 3, scope: !13224, file: !1654, line: 1319, type: !7)
!13231 = !DILocalVariable(name: "save", arg: 4, scope: !13224, file: !1654, line: 1319, type: !7)
!13232 = !DILocalVariable(name: "i", scope: !13224, file: !1654, line: 1321, type: !7)
!13233 = !DILocation(line: 0, scope: !13224)
!13234 = !DILocation(line: 1323, column: 9, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13224, file: !1654, line: 1323, column: 9)
!13236 = !DILocation(line: 1323, column: 34, scope: !13235)
!13237 = !DILocation(line: 0, scope: !13235)
!13238 = !DILocation(line: 1323, column: 9, scope: !13224)
!13239 = !DILocation(line: 1325, column: 35, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13241, file: !1654, line: 1325, column: 13)
!13241 = distinct !DILexicalBlock(scope: !13235, file: !1654, line: 1323, column: 40)
!13242 = !DILocation(line: 1325, column: 13, scope: !13241)
!13243 = !DILocation(line: 1330, column: 16, scope: !13241)
!13244 = !DILocation(line: 1330, column: 9, scope: !13241)
!13245 = !DILocation(line: 1331, column: 39, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !13241, file: !1654, line: 1330, column: 42)
!13247 = !DILocation(line: 1331, column: 50, scope: !13246)
!13248 = !DILocation(line: 1332, column: 27, scope: !13246)
!13249 = !DILocation(line: 1332, column: 13, scope: !13246)
!13250 = !DILocation(line: 1332, column: 39, scope: !13246)
!13251 = !DILocation(line: 1332, column: 51, scope: !13246)
!13252 = !DILocation(line: 1333, column: 14, scope: !13246)
!13253 = distinct !{!13253, !13244, !13254}
!13254 = !DILocation(line: 1334, column: 9, scope: !13241)
!13255 = !DILocation(line: 1338, column: 13, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13235, file: !1654, line: 1336, column: 12)
!13257 = !DILocation(line: 1340, column: 15, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13256, file: !1654, line: 1340, column: 13)
!13259 = !DILocation(line: 1340, column: 13, scope: !13256)
!13260 = !DILocation(line: 1343, column: 23, scope: !13256)
!13261 = !DILocation(line: 1343, column: 9, scope: !13256)
!13262 = !DILocation(line: 1343, column: 35, scope: !13256)
!13263 = !DILocation(line: 1343, column: 46, scope: !13256)
!13264 = !DILocation(line: 1344, column: 23, scope: !13256)
!13265 = !DILocation(line: 1344, column: 9, scope: !13256)
!13266 = !DILocation(line: 1344, column: 35, scope: !13256)
!13267 = !DILocation(line: 1344, column: 47, scope: !13256)
!13268 = !DILocation(line: 1348, column: 9, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13224, file: !1654, line: 1348, column: 9)
!13270 = !DILocation(line: 1348, column: 9, scope: !13224)
!13271 = !DILocation(line: 1349, column: 23, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13269, file: !1654, line: 1348, column: 15)
!13273 = !DILocation(line: 1349, column: 9, scope: !13272)
!13274 = !DILocation(line: 1350, column: 5, scope: !13272)
!13275 = !DILocation(line: 1353, column: 1, scope: !13224)
!13276 = distinct !DISubprogram(name: "syslog_convert_filter_str2val", scope: !1654, file: !1654, line: 1358, type: !13277, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13279)
!13277 = !DISubroutineType(types: !13278)
!13278 = !{!7, !1749, !201}
!13279 = !{!13280, !13281, !13282, !13283, !13284, !13285, !13286, !13287, !13288, !13289, !13290}
!13280 = !DILocalVariable(name: "filters", arg: 1, scope: !13276, file: !1654, line: 1358, type: !1749)
!13281 = !DILocalVariable(name: "buff", arg: 2, scope: !13276, file: !1654, line: 1358, type: !201)
!13282 = !DILocalVariable(name: "pos", scope: !13276, file: !1654, line: 1360, type: !7)
!13283 = !DILocalVariable(name: "i", scope: !13276, file: !1654, line: 1361, type: !7)
!13284 = !DILocalVariable(name: "module_name", scope: !13276, file: !1654, line: 1362, type: !201)
!13285 = !DILocalVariable(name: "log_switch_str", scope: !13276, file: !1654, line: 1363, type: !201)
!13286 = !DILocalVariable(name: "print_level_str", scope: !13276, file: !1654, line: 1364, type: !201)
!13287 = !DILocalVariable(name: "done", scope: !13276, file: !1654, line: 1365, type: !69)
!13288 = !DILocalVariable(name: "log_switch", scope: !13276, file: !1654, line: 1366, type: !61)
!13289 = !DILocalVariable(name: "print_level", scope: !13276, file: !1654, line: 1367, type: !61)
!13290 = !DILocalVariable(name: "type", scope: !13276, file: !1654, line: 1368, type: !54)
!13291 = !DILocation(line: 0, scope: !13276)
!13292 = !DILocation(line: 1362, column: 5, scope: !13276)
!13293 = !DILocation(line: 1363, column: 5, scope: !13276)
!13294 = !DILocation(line: 1364, column: 5, scope: !13276)
!13295 = !DILocation(line: 1368, column: 5, scope: !13276)
!13296 = !DILocation(line: 1370, column: 5, scope: !13276)
!13297 = !DILocation(line: 1376, column: 34, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13276, file: !1654, line: 1370, column: 19)
!13299 = !DILocation(line: 1376, column: 13, scope: !13298)
!13300 = !DILocation(line: 1377, column: 15, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13298, file: !1654, line: 1377, column: 13)
!13302 = !DILocation(line: 1377, column: 20, scope: !13301)
!13303 = !DILocation(line: 1377, column: 32, scope: !13301)
!13304 = !DILocation(line: 1377, column: 23, scope: !13301)
!13305 = !DILocation(line: 1377, column: 37, scope: !13301)
!13306 = !DILocation(line: 1377, column: 13, scope: !13298)
!13307 = !DILocation(line: 1382, column: 24, scope: !13298)
!13308 = !DILocation(line: 1383, column: 23, scope: !13298)
!13309 = !DILocation(line: 1389, column: 34, scope: !13298)
!13310 = !DILocation(line: 1389, column: 13, scope: !13298)
!13311 = !DILocation(line: 1390, column: 15, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13298, file: !1654, line: 1390, column: 13)
!13313 = !DILocation(line: 1390, column: 13, scope: !13298)
!13314 = !DILocation(line: 1395, column: 24, scope: !13298)
!13315 = !DILocation(line: 1395, column: 17, scope: !13298)
!13316 = !DILocation(line: 1397, column: 24, scope: !13298)
!13317 = !DILocation(line: 1398, column: 23, scope: !13298)
!13318 = !DILocation(line: 1404, column: 34, scope: !13298)
!13319 = !DILocation(line: 1404, column: 13, scope: !13298)
!13320 = !DILocation(line: 1405, column: 15, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13298, file: !1654, line: 1405, column: 13)
!13322 = !DILocation(line: 1405, column: 13, scope: !13298)
!13323 = !DILocation(line: 1410, column: 24, scope: !13298)
!13324 = !DILocation(line: 1410, column: 17, scope: !13298)
!13325 = !DILocation(line: 1410, column: 31, scope: !13298)
!13326 = !DILocation(line: 1412, column: 24, scope: !13298)
!13327 = !DILocation(line: 1413, column: 23, scope: !13298)
!13328 = !DILocation(line: 1417, column: 56, scope: !13298)
!13329 = !DILocation(line: 1417, column: 13, scope: !13298)
!13330 = !DILocation(line: 1420, column: 15, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13298, file: !1654, line: 1420, column: 13)
!13332 = !DILocation(line: 1420, column: 13, scope: !13298)
!13333 = !DILocation(line: 1424, column: 26, scope: !13298)
!13334 = !DILocation(line: 1424, column: 22, scope: !13298)
!13335 = !DILocation(line: 1427, column: 13, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13298, file: !1654, line: 1427, column: 13)
!13337 = !DILocation(line: 1427, column: 18, scope: !13336)
!13338 = !DILocation(line: 1427, column: 13, scope: !13298)
!13339 = !DILocation(line: 1434, column: 27, scope: !13298)
!13340 = !DILocation(line: 1434, column: 23, scope: !13298)
!13341 = !DILocation(line: 1437, column: 13, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13298, file: !1654, line: 1437, column: 13)
!13343 = !DILocation(line: 1437, column: 18, scope: !13342)
!13344 = !DILocation(line: 1437, column: 13, scope: !13298)
!13345 = !DILocation(line: 1432, column: 22, scope: !13298)
!13346 = !DILocation(line: 1442, column: 23, scope: !13298)
!13347 = !DILocation(line: 1444, column: 9, scope: !13298)
!13348 = !DILocation(line: 1444, column: 21, scope: !13298)
!13349 = !DILocation(line: 1444, column: 32, scope: !13298)
!13350 = !DILocation(line: 1445, column: 9, scope: !13298)
!13351 = !DILocation(line: 1445, column: 21, scope: !13298)
!13352 = !DILocation(line: 1445, column: 33, scope: !13298)
!13353 = distinct !{!13353, !13296, !13354}
!13354 = !DILocation(line: 1446, column: 5, scope: !13276)
!13355 = !DILocation(line: 1449, column: 1, scope: !13276)
!13356 = distinct !DISubprogram(name: "syslog_get_a_string", scope: !1654, file: !1654, line: 1227, type: !13357, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13360)
!13357 = !DISubroutineType(types: !13358)
!13358 = !{!7, !331, !13359}
!13359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!13360 = !{!13361, !13362, !13363}
!13361 = !DILocalVariable(name: "p", arg: 1, scope: !13356, file: !1654, line: 1227, type: !331)
!13362 = !DILocalVariable(name: "pp", arg: 2, scope: !13356, file: !1654, line: 1227, type: !13359)
!13363 = !DILocalVariable(name: "start", scope: !13356, file: !1654, line: 1229, type: !331)
!13364 = !DILocation(line: 0, scope: !13356)
!13365 = !DILocation(line: 1231, column: 5, scope: !13356)
!13366 = !DILocation(line: 1231, column: 12, scope: !13356)
!13367 = !DILocation(line: 1232, column: 10, scope: !13368)
!13368 = distinct !DILexicalBlock(scope: !13356, file: !1654, line: 1231, column: 23)
!13369 = distinct !{!13369, !13365, !13370}
!13370 = !DILocation(line: 1233, column: 5, scope: !13356)
!13371 = !DILocation(line: 1239, column: 13, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !1654, line: 1238, column: 21)
!13373 = distinct !DILexicalBlock(scope: !13356, file: !1654, line: 1238, column: 9)
!13374 = !DILocation(line: 1240, column: 9, scope: !13372)
!13375 = !DILocation(line: 1243, column: 9, scope: !13356)
!13376 = !DILocation(line: 1245, column: 5, scope: !13356)
!13377 = !DILocation(line: 1245, column: 12, scope: !13356)
!13378 = !DILocation(line: 1245, column: 22, scope: !13356)
!13379 = !DILocation(line: 1246, column: 10, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13356, file: !1654, line: 1245, column: 37)
!13381 = distinct !{!13381, !13376, !13382}
!13382 = !DILocation(line: 1247, column: 5, scope: !13356)
!13383 = !DILocation(line: 1249, column: 15, scope: !13356)
!13384 = !DILocation(line: 1249, column: 5, scope: !13356)
!13385 = !DILocation(line: 1250, column: 1, scope: !13356)
!13386 = distinct !DISubprogram(name: "syslog_convert_filter_val2str", scope: !1654, file: !1654, line: 1451, type: !13387, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13392)
!13387 = !DISubroutineType(types: !13388)
!13388 = !{!7, !13389, !201}
!13389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13390, size: 32)
!13390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13391, size: 32)
!13391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1711)
!13392 = !{!13393, !13394, !13395, !13396, !13397}
!13393 = !DILocalVariable(name: "filters", arg: 1, scope: !13386, file: !1654, line: 1451, type: !13389)
!13394 = !DILocalVariable(name: "buff", arg: 2, scope: !13386, file: !1654, line: 1451, type: !201)
!13395 = !DILocalVariable(name: "i", scope: !13386, file: !1654, line: 1453, type: !7)
!13396 = !DILocalVariable(name: "pos", scope: !13386, file: !1654, line: 1454, type: !7)
!13397 = !DILocalVariable(name: "n", scope: !13386, file: !1654, line: 1455, type: !7)
!13398 = !DILocation(line: 0, scope: !13386)
!13399 = !DILocation(line: 1457, column: 20, scope: !13386)
!13400 = !DILocation(line: 1457, column: 23, scope: !13386)
!13401 = !DILocation(line: 1457, column: 5, scope: !13386)
!13402 = !DILocation(line: 1458, column: 23, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13386, file: !1654, line: 1457, column: 35)
!13404 = !DILocation(line: 1458, column: 52, scope: !13403)
!13405 = !DILocation(line: 1459, column: 24, scope: !13403)
!13406 = !DILocation(line: 1459, column: 21, scope: !13403)
!13407 = !DILocation(line: 1460, column: 33, scope: !13403)
!13408 = !DILocation(line: 1461, column: 33, scope: !13403)
!13409 = !DILocation(line: 1462, column: 33, scope: !13403)
!13410 = !DILocation(line: 1458, column: 13, scope: !13403)
!13411 = !DILocation(line: 1463, column: 13, scope: !13403)
!13412 = !DILocation(line: 1464, column: 10, scope: !13403)
!13413 = distinct !{!13413, !13401, !13414}
!13414 = !DILocation(line: 1465, column: 5, scope: !13386)
!13415 = !DILocation(line: 1467, column: 5, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13386, file: !1654, line: 1467, column: 5)
!13417 = !DILocation(line: 1467, column: 5, scope: !13386)
!13418 = !DILocation(line: 1467, column: 5, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13416, file: !1654, line: 1467, column: 5)
!13420 = !DILocation(line: 1469, column: 5, scope: !13386)
!13421 = distinct !DISubprogram(name: "log_switch_to_str", scope: !1654, file: !1654, line: 1472, type: !13422, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13424)
!13422 = !DISubroutineType(types: !13423)
!13423 = !{!331, !362}
!13424 = !{!13425}
!13425 = !DILocalVariable(name: "log_switch", arg: 1, scope: !13421, file: !1654, line: 1472, type: !362)
!13426 = !DILocation(line: 0, scope: !13421)
!13427 = !DILocation(line: 1474, column: 5, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13421, file: !1654, line: 1474, column: 5)
!13429 = !DILocation(line: 1474, column: 5, scope: !13421)
!13430 = !DILocation(line: 1474, column: 5, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13428, file: !1654, line: 1474, column: 5)
!13432 = !DILocation(line: 1475, column: 13, scope: !13421)
!13433 = !DILocation(line: 1475, column: 5, scope: !13421)
!13434 = distinct !DISubprogram(name: "print_level_to_str", scope: !1654, file: !1654, line: 1478, type: !13435, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13437)
!13435 = !DISubroutineType(types: !13436)
!13436 = !{!331, !364}
!13437 = !{!13438}
!13438 = !DILocalVariable(name: "print_level", arg: 1, scope: !13434, file: !1654, line: 1478, type: !364)
!13439 = !DILocation(line: 0, scope: !13434)
!13440 = !DILocation(line: 1480, column: 5, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13434, file: !1654, line: 1480, column: 5)
!13442 = !DILocation(line: 1480, column: 5, scope: !13434)
!13443 = !DILocation(line: 1480, column: 5, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13441, file: !1654, line: 1480, column: 5)
!13445 = !DILocation(line: 1481, column: 13, scope: !13434)
!13446 = !DILocation(line: 1481, column: 5, scope: !13434)
!13447 = distinct !DISubprogram(name: "__wrap_printf", scope: !1654, file: !1654, line: 1508, type: !13448, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1653, retainedNodes: !13450)
!13448 = !DISubroutineType(types: !13449)
!13449 = !{!7, !331, null}
!13450 = !{!13451, !13452, !13453, !13454}
!13451 = !DILocalVariable(name: "format", arg: 1, scope: !13447, file: !1654, line: 1508, type: !331)
!13452 = !DILocalVariable(name: "ap", scope: !13447, file: !1654, line: 1510, type: !12375)
!13453 = !DILocalVariable(name: "ret", scope: !13447, file: !1654, line: 1511, type: !7)
!13454 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !13447, file: !1654, line: 1512, type: !1154)
!13455 = !DILocation(line: 0, scope: !13447)
!13456 = !DILocation(line: 1510, column: 5, scope: !13447)
!13457 = !DILocation(line: 1510, column: 13, scope: !13447)
!13458 = !DILocation(line: 1514, column: 11, scope: !13459)
!13459 = distinct !DILexicalBlock(scope: !13447, file: !1654, line: 1514, column: 10)
!13460 = !DILocation(line: 1514, column: 10, scope: !13447)
!13461 = !DILocation(line: 231, column: 2, scope: !12451, inlinedAt: !13462)
!13462 = distinct !DILocation(line: 1518, column: 30, scope: !13447)
!13463 = !DILocation(line: 0, scope: !12451, inlinedAt: !13462)
!13464 = !DILocation(line: 1520, column: 5, scope: !13447)
!13465 = !DILocation(line: 1521, column: 11, scope: !13447)
!13466 = !DILocation(line: 1522, column: 5, scope: !13447)
!13467 = !DILocation(line: 0, scope: !12473, inlinedAt: !13468)
!13468 = distinct !DILocation(line: 1524, column: 5, scope: !13447)
!13469 = !DILocation(line: 249, column: 2, scope: !12473, inlinedAt: !13468)
!13470 = !DILocation(line: 1526, column: 5, scope: !13447)
!13471 = !DILocation(line: 1527, column: 1, scope: !13447)
