; ModuleID = './build/flash_read_write_data.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.flash_info_t = type { i8*, i8, i32, i32, i32, i8, i8, i8 }
%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.hal_gpt_context_t = type { i32, %struct.hal_gpt_callback_context, i8 }
%struct.hal_gpt_callback_context = type { void (i8*)*, i8* }
%struct.uart_context_t = type { i8, %struct.hal_uart_config_t, i8, %struct.hal_uart_callback_config_t, i8, %struct.hal_uart_dma_config_t }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.hal_uart_callback_config_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.__va_list = type { i8* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.gpio_status = type { i32, i8, i8, i8 }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.__tm*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct.__tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !0
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !67
@.str = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/flash_sfc.c\00", align 1
@__func__.gpt_get_current_time = private unnamed_addr constant [21 x i8] c"gpt_get_current_time\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@sf_Mutex = internal unnamed_addr global i1 false, align 4, !dbg !80
@__func__.free_sf_lock = private unnamed_addr constant [13 x i8] c"free_sf_lock\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"SF_DAL_FLAG_BUSY()\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@suspend_time = dso_local local_unnamed_addr global i32 0, align 4, !dbg !72
@resume_suspend_on_ready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !74
@resume_suspend_on_checkready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !76
@g_u4ClkCnt1ms = dso_local local_unnamed_addr global i32 0, align 4, !dbg !81
@.str.3 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.4 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/gpt.c\00", align 1
@GPTTimer.0 = internal unnamed_addr global void ()* null, align 4, !dbg !160
@GPTTimer.1 = internal unnamed_addr global void ()* null, align 4, !dbg !161
@g_sfc_security_enable = dso_local local_unnamed_addr global i32 0, align 4, !dbg !162
@.str.9 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.10 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/sfc.c\00", align 1
@switch.table.sfc_direct_read_setup = private unnamed_addr constant [3 x i32] [i32 16, i32 112, i32 113], align 4
@gSFC_max_data_size = dso_local local_unnamed_addr global i32 128, align 4, !dbg !181
@cmdlist_switchqpi_winbond = dso_local constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !212
@cmdlist_switchspi_winbond = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !217
@cmdlist_switchspiq_winbond = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !222
@cmdlist_suspend_winbond = dso_local global [4 x i8] c"\01\01u\00", align 1, !dbg !227
@cmdlist_resume_winbond = dso_local global [4 x i8] c"\01\01z\00", align 1, !dbg !230
@cmdlist_switchspiq_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !232
@cmdlist_switchqpi_mxic = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !237
@cmdlist_switchspi_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01\00\00", align 1, !dbg !239
@cmdlist_switchspiq_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !241
@cmdlist_switchqpi_gd = dso_local local_unnamed_addr constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !243
@cmdlist_switchspi_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\00\00", align 1, !dbg !245
@cmdlist_switchspi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\00\00", align 1, !dbg !247
@cmdlist_switchspiq_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !249
@cmdlist_switchqpi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !251
@cmdlist_switchspi_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\01\00", align 1, !dbg !253
@cmdlist_switchspiq_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !255
@cmdlist_switchqpi_micron = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !257
@cmdlist_flash_reset_spimode = dso_local constant [7 x i8] c"\01\01f\01\01\99\00", align 1, !dbg !259
@cmdlist_flash_reset_qpimode = dso_local constant [7 x i8] c"\03\01f\03\01\99\00", align 1, !dbg !264
@spi_chip_info = dso_local local_unnamed_addr global %struct.flash_info_t* null, align 4, !dbg !266
@gd_write_sr2_1 = dso_local local_unnamed_addr global i32 0, align 4, !dbg !268
@support_flash_id = dso_local local_unnamed_addr global i32 0, align 4, !dbg !270
@gucFlashSFCMode = dso_local local_unnamed_addr global i32 0, align 4, !dbg !70
@chips_data = internal constant [13 x %struct.flash_info_t] [%struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.23, i32 0, i32 0), i8 -1, i32 -1, i32 4096, i32 256, i8 0, i8 0, i8 0 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), i8 -17, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8 -17, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8 -17, i32 1075052544, i32 4096, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i8 -62, i32 538312704, i32 16384, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8 -62, i32 538181632, i32 4096, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8 -62, i32 588578816, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0), i8 -56, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i8 -56, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8 -56, i32 1108738048, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21.24, i32 0, i32 0), i8 32, i32 -1172832256, i32 65536, i32 256, i8 50, i8 107, i8 -21 }], align 4, !dbg !273
@sf_drvier_status = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !64
@__FUNCTION__.flash_check_device = private unnamed_addr constant [19 x i8] c"flash_check_device\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c" Check flash device Failed !! \0A\0D\00", align 1
@.str.1.22 = private unnamed_addr constant [31 x i8] c"spi device id: %x %x %x (%x)\0A\0D\00", align 1
@.str.2.25 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.3.26 = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/spi_flash.c\00", align 1
@__FUNCTION__.flash_config = private unnamed_addr constant [13 x i8] c"flash_config\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"spi device id: %x %x %x (%x)\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"find flash: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Don't support flash: %s\0A\00", align 1
@__FUNCTION__.flash_init = private unnamed_addr constant [11 x i8] c"flash_init\00", align 1
@__func__.flash_wait_ready = private unnamed_addr constant [17 x i8] c"flash_wait_ready\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__FUNCTION__.flash_read_sr2 = private unnamed_addr constant [15 x i8] c"flash_read_sr2\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"flash_read_sr2: no init flash !\0A\00", align 1
@__func__.flash_write = private unnamed_addr constant [12 x i8] c"flash_write\00", align 1
@.str.9.23 = private unnamed_addr constant [10 x i8] c"DEF_FLASH\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"W25Q32JV\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"W25Q16DV\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"W25Q80DV\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"MX25L3233F\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"MX25L1635F\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"MX25V1635F\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"MX25V8035F\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"KH25V1635F\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"GD25Q32CSIG\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"GD25Q16CSIG\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"GD25VE32C\00", align 1
@.str.21.24 = private unnamed_addr constant [9 x i8] c"N25Q128A\00", align 1
@gXtalFreq = internal unnamed_addr global i32 0, align 4, !dbg !278
@gCpuFrequency = internal unnamed_addr global i32 0, align 4, !dbg !288
@switch.table.top_xtal_init = private unnamed_addr constant [8 x i32] [i32 20000000, i32 40000000, i32 26000000, i32 52000000, i32 40000000, i32 40000000, i32 40000000, i32 40000000], align 4
@switch.table.top_xtal_init.1 = private unnamed_addr constant [8 x i32] [i32 16, i32 512, i32 64, i32 1024, i32 512, i32 512, i32 512, i32 512], align 4
@__const.halUART_SetFormat.fraction_L_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 16, i16 68, i16 146, i16 41, i16 170, i16 182, i16 219, i16 173, i16 255, i16 255], align 2
@__const.halUART_SetFormat.fraction_M_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3], align 2
@gUartClkFreq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !290
@g_cache_status = dso_local global i8 0, align 1, !dbg !327
@.str.61 = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt7687/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1.62 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_cache_con = dso_local local_unnamed_addr global %union.CACHE_CON_Type zeroinitializer, align 4, !dbg !410
@g_cache_region_en = dso_local local_unnamed_addr global i32 0, align 4, !dbg !415
@g_cache_entry = dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type] zeroinitializer, align 4, !dbg !418
@nvic_function_table = dso_local local_unnamed_addr global [96 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !463
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.73 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@g_gpt_context = internal global [5 x %struct.hal_gpt_context_t] zeroinitializer, align 4, !dbg !558
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"Invalid port: %d.\00", align 1
@__FUNCTION__.hal_gpt_deinit = private unnamed_addr constant [15 x i8] c"hal_gpt_deinit\00", align 1
@.str.1.81 = private unnamed_addr constant [23 x i8] c"Should call  port: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_free_run_count = private unnamed_addr constant [27 x i8] c"hal_gpt_get_free_run_count\00", align 1
@.str.2.84 = private unnamed_addr constant [23 x i8] c"Invalid parameter: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_running_status = private unnamed_addr constant [27 x i8] c"hal_gpt_get_running_status\00", align 1
@.str.3.85 = private unnamed_addr constant [45 x i8] c"Invalid hal_gpt_stop_timer to stop port: %d.\00", align 1
@__FUNCTION__.hal_gpt_register_callback = private unnamed_addr constant [26 x i8] c"hal_gpt_register_callback\00", align 1
@.str.4.86 = private unnamed_addr constant [51 x i8] c"Invalid port: %d. Only port 0 or 1 works as timer.\00", align 1
@__FUNCTION__.hal_gpt_start_timer_ms = private unnamed_addr constant [23 x i8] c"hal_gpt_start_timer_ms\00", align 1
@__FUNCTION__.hal_gpt_stop_timer = private unnamed_addr constant [19 x i8] c"hal_gpt_stop_timer\00", align 1
@g_uart_context_table = internal global [2 x %struct.uart_context_t] zeroinitializer, align 4, !dbg !597
@hal_uart_map_receive_callback.func_tbl = internal unnamed_addr constant [2 x void ()*] [void ()* @hal_uart_receive_callback0, void ()* @hal_uart_receive_callback1], align 4, !dbg !653
@__const.hal_uart_translate_baudrate.baudrate_tbl = private unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4
@__const.hal_uart_translate_word_length.databit_tbl = private unnamed_addr constant [4 x i16] [i16 0, i16 1, i16 2, i16 3], align 2
@__const.hal_uart_translate_parity.parity_tbl = private unnamed_addr constant [5 x i16] [i16 0, i16 8, i16 24, i16 0, i16 0], align 2
@__const.hal_uart_translate_stopbit.stopbit_tbl = private unnamed_addr constant [3 x i16] [i16 0, i16 4, i16 4], align 2
@cmdlist_switchqpi_default = dso_local local_unnamed_addr constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !705
@cmdlist_switchspi_default = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !725
@cmdlist_switchspiq_default = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !727
@customer_flash_info = dso_local local_unnamed_addr constant %struct.flash_info_t zeroinitializer, align 4, !dbg !729
@.str.97 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.98 = private unnamed_addr constant [20 x i8] c"Welcome to main()\0D\0A\00", align 1
@__const.flash_sample.data = private unnamed_addr constant [8 x i32] [i32 1515870810, i32 -1515870811, i32 1432760836, i32 623007832, i32 -2245735, i32 -288576888, i32 1432760836, i32 623007832], align 4
@.str.2.99 = private unnamed_addr constant [32 x i8] c"\0D\0A ---flash_example begins---\0D\0A\00", align 1
@.str.3.100 = private unnamed_addr constant [23 x i8] c"Flash erase failed! \0A\0D\00", align 1
@.str.4.101 = private unnamed_addr constant [23 x i8] c"Flash write failed! \0A\0D\00", align 1
@.str.5.102 = private unnamed_addr constant [27 x i8] c"Data comparison failed! \0A\0D\00", align 1
@.str.6.103 = private unnamed_addr constant [32 x i8] c"Flash example is successful! \0A\0D\00", align 1
@.str.7.104 = private unnamed_addr constant [31 x i8] c"example project test success.\0A\00", align 1
@.str.8.105 = private unnamed_addr constant [37 x i8] c"\0D\0A ---flash_example finished!!!---\0D\0A\00", align 1
@SystemCoreClock = dso_local local_unnamed_addr global i32 40000000, align 4, !dbg !731
@System_Initialize_Done = internal global i32 0, align 4, !dbg !789
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !791
@end = external dso_local global i8, align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"_exit\0A\00", align 1
@.str.1.113 = private unnamed_addr constant [10 x i8] c"_kill %d\0A\00", align 1
@.str.2.114 = private unnamed_addr constant [9 x i8] c"_getpid\0A\00", align 1
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 07:54:25 GMT +00:00\00", align 1, !dbg !995
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !1000
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt7687_hdk\00", align 1, !dbg !1006

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_get_current_time() local_unnamed_addr #0 section ".ramTEXT" !dbg !1285 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !1292
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #14, !dbg !1292
  call void @llvm.dbg.value(metadata i32 0, metadata !1289, metadata !DIExpression()), !dbg !1293
  store i32 0, i32* %1, align 4, !dbg !1294
  call void @llvm.dbg.value(metadata i32* %1, metadata !1289, metadata !DIExpression(DW_OP_deref)), !dbg !1293
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #15, !dbg !1295
  call void @llvm.dbg.value(metadata i32 %3, metadata !1290, metadata !DIExpression()), !dbg !1293
  %4 = icmp eq i32 %3, 0, !dbg !1296
  br i1 %4, label %6, label %5, !dbg !1298

5:                                                ; preds = %0
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 92, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpt_get_current_time, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #16, !dbg !1299
  unreachable, !dbg !1299

6:                                                ; preds = %0
  %7 = load i32, i32* %1, align 4, !dbg !1301
  call void @llvm.dbg.value(metadata i32 %7, metadata !1289, metadata !DIExpression()), !dbg !1293
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #14, !dbg !1302
  ret i32 %7, !dbg !1303
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !1304 {
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !1306
  ret void, !dbg !1307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !1308 {
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !1309
  ret void, !dbg !1310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !1311 {
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !1312
  ret void, !dbg !1313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !1314 {
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !1315
  ret void, !dbg !1316
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_sf_lock() local_unnamed_addr #0 !dbg !1317 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !1322
  call void @llvm.dbg.value(metadata i32 %1, metadata !1321, metadata !DIExpression()), !dbg !1323
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !1324
  br i1 %2, label %4, label %3, !dbg !1326

3:                                                ; preds = %0
  store i1 true, i1* @sf_Mutex, align 4, !dbg !1327
  br label %4, !dbg !1329

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !1330
  tail call void @restore_interrupt_mask(i32 noundef %1) #15, !dbg !1330
  ret i32 %5, !dbg !1331
}

; Function Attrs: noinline nounwind optsize
define dso_local void @free_sf_lock() local_unnamed_addr #0 !dbg !1332 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !1335
  call void @llvm.dbg.value(metadata i32 %1, metadata !1334, metadata !DIExpression()), !dbg !1336
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !1337
  br i1 %2, label %3, label %4, !dbg !1339

3:                                                ; preds = %0
  store i1 false, i1* @sf_Mutex, align 4, !dbg !1340
  tail call void @restore_interrupt_mask(i32 noundef %1) #15, !dbg !1342
  ret void, !dbg !1343

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #15, !dbg !1344
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.free_sf_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #16, !dbg !1346
  unreachable, !dbg !1346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_sf_lock() local_unnamed_addr #0 !dbg !1347 {
  br label %1, !dbg !1350

1:                                                ; preds = %1, %0
  %2 = tail call i32 @get_sf_lock() #17, !dbg !1351
  call void @llvm.dbg.value(metadata i32 %2, metadata !1349, metadata !DIExpression()), !dbg !1353
  %3 = icmp eq i32 %2, 0, !dbg !1354
  br i1 %3, label %4, label %1, !dbg !1355, !llvm.loop !1356

4:                                                ; preds = %1
  ret void, !dbg !1358
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_sf_lock() local_unnamed_addr #0 !dbg !1359 {
  tail call void @free_sf_lock() #17, !dbg !1360
  ret void, !dbg !1361
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_config(i8 noundef zeroext %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !1362 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1366, metadata !DIExpression()), !dbg !1369
  call void @llvm.dbg.value(metadata i32 0, metadata !1367, metadata !DIExpression()), !dbg !1369
  tail call fastcc void @sfc_pad_config() #17, !dbg !1370
  %2 = tail call i32 @gpt_get_current_time() #17, !dbg !1371
  %3 = tail call %struct.flash_info_t* @customer_flash_register() #15, !dbg !1372
  %4 = icmp eq %struct.flash_info_t* %3, null, !dbg !1374
  br i1 %4, label %6, label %5, !dbg !1375

5:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !1376
  br label %6, !dbg !1378

6:                                                ; preds = %5, %1
  %7 = tail call i32 @flash_check_device() #15, !dbg !1379
  ret i32 0, !dbg !1380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_pad_config() unnamed_addr #5 !dbg !1381 {
  call void @llvm.dbg.value(metadata i32 0, metadata !1383, metadata !DIExpression()), !dbg !1384
  %1 = load volatile i32, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !1385
  call void @llvm.dbg.value(metadata i32 %1, metadata !1383, metadata !DIExpression()), !dbg !1384
  %2 = or i32 %1, 32256, !dbg !1386
  call void @llvm.dbg.value(metadata i32 %2, metadata !1383, metadata !DIExpression()), !dbg !1384
  store volatile i32 %2, i32* inttoptr (i32 135274888 to i32*), align 8, !dbg !1387
  ret void, !dbg !1388
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_flash_direct_read(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !1389 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1393, metadata !DIExpression()), !dbg !1396
  call void @llvm.dbg.value(metadata i8* %1, metadata !1394, metadata !DIExpression()), !dbg !1396
  call void @llvm.dbg.value(metadata i32 %2, metadata !1395, metadata !DIExpression()), !dbg !1396
  tail call void @retrieve_sf_lock() #17, !dbg !1397
  %4 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %0, i32 noundef %2) #15, !dbg !1398
  tail call void @release_sf_lock() #17, !dbg !1399
  ret void, !dbg !1400
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_read(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !1401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1405, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.value(metadata i32 %1, metadata !1406, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.value(metadata i8* %2, metadata !1407, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.value(metadata i32 0, metadata !1408, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.value(metadata i32 %1, metadata !1409, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.value(metadata i32 0, metadata !1410, metadata !DIExpression()), !dbg !1411
  tail call void @retrieve_sf_lock() #17, !dbg !1412
  call void @llvm.dbg.value(metadata i32 %1, metadata !1409, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.value(metadata i32 %0, metadata !1405, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.value(metadata i8* %2, metadata !1407, metadata !DIExpression()), !dbg !1411
  %4 = icmp ugt i32 %1, 127, !dbg !1413
  br i1 %4, label %5, label %19, !dbg !1414

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %1, %3 ]
  %7 = phi i32 [ %16, %14 ], [ %0, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !1409, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.value(metadata i32 %7, metadata !1405, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.value(metadata i8* %8, metadata !1407, metadata !DIExpression()), !dbg !1411
  call void @llvm.dbg.value(metadata i32 128, metadata !1410, metadata !DIExpression()), !dbg !1411
  %9 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !1415
  switch i32 %9, label %14 [
    i32 0, label %10
    i32 1, label %12
  ], !dbg !1418

10:                                               ; preds = %5
  %11 = tail call i32 @flash_read(i8* noundef %8, i32 noundef %7, i32 noundef 128) #15, !dbg !1419
  br label %14, !dbg !1421

12:                                               ; preds = %5
  %13 = tail call i32 @flash_fast_read(i8* noundef %8, i32 noundef %7, i32 noundef 128, i32 noundef 1) #15, !dbg !1422
  br label %14, !dbg !1425

14:                                               ; preds = %5, %12, %10
  %15 = getelementptr inbounds i8, i8* %8, i32 128, !dbg !1426
  call void @llvm.dbg.value(metadata i8* %15, metadata !1407, metadata !DIExpression()), !dbg !1411
  %16 = add i32 %7, 128, !dbg !1427
  call void @llvm.dbg.value(metadata i32 %16, metadata !1405, metadata !DIExpression()), !dbg !1411
  %17 = add i32 %6, -128, !dbg !1428
  call void @llvm.dbg.value(metadata i32 %17, metadata !1409, metadata !DIExpression()), !dbg !1411
  %18 = icmp ugt i32 %17, 127, !dbg !1413
  br i1 %18, label %5, label %19, !dbg !1414, !llvm.loop !1429

19:                                               ; preds = %14, %3
  %20 = phi i8* [ %2, %3 ], [ %15, %14 ]
  %21 = phi i32 [ %0, %3 ], [ %16, %14 ]
  %22 = phi i32 [ %1, %3 ], [ %17, %14 ], !dbg !1411
  %23 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !1431
  switch i32 %23, label %28 [
    i32 0, label %24
    i32 1, label %26
  ], !dbg !1433

24:                                               ; preds = %19
  %25 = tail call i32 @flash_read(i8* noundef %20, i32 noundef %21, i32 noundef %22) #15, !dbg !1434
  br label %28, !dbg !1436

26:                                               ; preds = %19
  %27 = tail call i32 @flash_fast_read(i8* noundef %20, i32 noundef %21, i32 noundef %22, i32 noundef 1) #15, !dbg !1437
  br label %28, !dbg !1440

28:                                               ; preds = %19, %26, %24
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !1441
  tail call void @release_sf_lock() #17, !dbg !1442
  ret i32 0, !dbg !1443
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_write(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !1444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1450, metadata !DIExpression()), !dbg !1454
  call void @llvm.dbg.value(metadata i32 %1, metadata !1451, metadata !DIExpression()), !dbg !1454
  call void @llvm.dbg.value(metadata i8* %2, metadata !1452, metadata !DIExpression()), !dbg !1454
  call void @llvm.dbg.value(metadata i32 0, metadata !1453, metadata !DIExpression()), !dbg !1454
  tail call void @retrieve_sf_lock() #17, !dbg !1455
  %4 = tail call i32 @hal_cache_invalidate_all_cache_lines() #15, !dbg !1456
  %5 = tail call i32 @hal_cache_disable() #15, !dbg !1457
  %6 = tail call i32 @flash_write(i8* noundef %2, i32 noundef %0, i32 noundef %1) #15, !dbg !1458
  call void @llvm.dbg.value(metadata i32 %6, metadata !1453, metadata !DIExpression()), !dbg !1454
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !1459
  %7 = tail call i32 @hal_cache_enable() #15, !dbg !1460
  tail call void @release_sf_lock() #17, !dbg !1461
  ret i32 %6, !dbg !1462
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !1463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1467, metadata !DIExpression()), !dbg !1470
  call void @llvm.dbg.value(metadata i32 %1, metadata !1468, metadata !DIExpression()), !dbg !1470
  call void @llvm.dbg.value(metadata i32 0, metadata !1469, metadata !DIExpression()), !dbg !1470
  tail call void @retrieve_sf_lock() #17, !dbg !1471
  %3 = tail call i32 @hal_cache_invalidate_all_cache_lines() #15, !dbg !1472
  %4 = tail call i32 @hal_cache_disable() #15, !dbg !1473
  %5 = tail call i32 @flash_write_enable() #15, !dbg !1474
  %6 = tail call i32 @flash_unprotect() #15, !dbg !1475
  switch i32 %1, label %22 [
    i32 0, label %7
    i32 1, label %12
    i32 2, label %17
  ], !dbg !1476

7:                                                ; preds = %2
  %8 = and i32 %0, 4095, !dbg !1477
  %9 = icmp eq i32 %8, 0, !dbg !1481
  br i1 %9, label %10, label %22, !dbg !1482

10:                                               ; preds = %7
  %11 = tail call i32 @flash_erase_page(i32 noundef %0) #15, !dbg !1483
  call void @llvm.dbg.value(metadata i32 %11, metadata !1469, metadata !DIExpression()), !dbg !1470
  br label %22, !dbg !1484

12:                                               ; preds = %2
  %13 = and i32 %0, 32767, !dbg !1485
  %14 = icmp eq i32 %13, 0, !dbg !1489
  br i1 %14, label %15, label %22, !dbg !1490

15:                                               ; preds = %12
  %16 = tail call i32 @flash_erase_sector_32k(i32 noundef %0) #15, !dbg !1491
  call void @llvm.dbg.value(metadata i32 %16, metadata !1469, metadata !DIExpression()), !dbg !1470
  br label %22, !dbg !1492

17:                                               ; preds = %2
  %18 = and i32 %0, 65535, !dbg !1493
  %19 = icmp eq i32 %18, 0, !dbg !1497
  br i1 %19, label %20, label %22, !dbg !1498

20:                                               ; preds = %17
  %21 = tail call i32 @flash_erase_sector(i32 noundef %0) #15, !dbg !1499
  call void @llvm.dbg.value(metadata i32 %21, metadata !1469, metadata !DIExpression()), !dbg !1470
  br label %22, !dbg !1500

22:                                               ; preds = %10, %20, %15, %2, %17, %12, %7
  %23 = phi i32 [ -3, %7 ], [ -3, %12 ], [ -3, %17 ], [ %11, %10 ], [ %16, %15 ], [ %21, %20 ], [ 0, %2 ], !dbg !1470
  %24 = tail call i32 @hal_cache_enable() #15, !dbg !1470
  tail call void @release_sf_lock() #17, !dbg !1470
  ret i32 %23, !dbg !1501
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ramTEXT" !dbg !1502 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #14, !dbg !1506
  call void @llvm.dbg.value(metadata i8 0, metadata !1504, metadata !DIExpression()), !dbg !1507
  store i8 0, i8* %1, align 1, !dbg !1508
  call void @llvm.dbg.value(metadata i32 0, metadata !1505, metadata !DIExpression()), !dbg !1507
  %2 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !1509
  call void @llvm.dbg.value(metadata i32 %2, metadata !1505, metadata !DIExpression()), !dbg !1507
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !1510, !range !1512
  %4 = icmp ne i8 %3, 0, !dbg !1510
  %5 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %4, i1 true, i1 %6, !dbg !1513
  br i1 %7, label %27, label %8, !dbg !1513

8:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i8* %1, metadata !1504, metadata !DIExpression(DW_OP_deref)), !dbg !1507
  %9 = call i32 @flash_read_sr(i8* noundef nonnull %1) #15, !dbg !1514
  %10 = icmp slt i32 %9, 0, !dbg !1517
  br i1 %10, label %11, label %12, !dbg !1518

11:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 333, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #16, !dbg !1519
  unreachable, !dbg !1519

12:                                               ; preds = %8
  %13 = load i8, i8* %1, align 1, !dbg !1521
  call void @llvm.dbg.value(metadata i8 %13, metadata !1504, metadata !DIExpression()), !dbg !1507
  %14 = and i8 %13, 1, !dbg !1523
  %15 = icmp eq i8 %14, 0, !dbg !1524
  br i1 %15, label %26, label %16, !dbg !1525

16:                                               ; preds = %12
  call void @flash_suspend_Winbond() #15, !dbg !1526
  br label %17, !dbg !1528

17:                                               ; preds = %21, %16
  call void @llvm.dbg.value(metadata i8* %1, metadata !1504, metadata !DIExpression(DW_OP_deref)), !dbg !1507
  %18 = call i32 @flash_read_sr(i8* noundef nonnull %1) #15, !dbg !1529
  %19 = icmp slt i32 %18, 0, !dbg !1532
  br i1 %19, label %20, label %21, !dbg !1533

20:                                               ; preds = %17
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 344, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #16, !dbg !1534
  unreachable, !dbg !1534

21:                                               ; preds = %17
  %22 = load i8, i8* %1, align 1, !dbg !1536
  call void @llvm.dbg.value(metadata i8 %22, metadata !1504, metadata !DIExpression()), !dbg !1507
  %23 = and i8 %22, 1, !dbg !1538
  %24 = icmp eq i8 %23, 0, !dbg !1539
  br i1 %24, label %25, label %17, !dbg !1540, !llvm.loop !1541

25:                                               ; preds = %21
  call void @SF_DAL_FLAG_SUS_SET() #17, !dbg !1543
  br label %27, !dbg !1544

26:                                               ; preds = %12
  call void @SF_DAL_FLAG_BUSY_CLR() #17, !dbg !1545
  br label %27

27:                                               ; preds = %25, %26, %0
  call void @restore_interrupt_mask(i32 noundef %2) #15, !dbg !1547
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #14, !dbg !1548
  ret void, !dbg !1548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !1549 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !1553, metadata !DIExpression()), !dbg !1564
  call void @llvm.dbg.value(metadata i32 %1, metadata !1554, metadata !DIExpression()), !dbg !1564
  call void @llvm.dbg.value(metadata i32 0, metadata !1556, metadata !DIExpression()), !dbg !1564
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #14, !dbg !1565
  call void @llvm.dbg.value(metadata i8 0, metadata !1559, metadata !DIExpression()), !dbg !1564
  store i8 0, i8* %3, align 1, !dbg !1566
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14, !dbg !1567
  call void @llvm.dbg.value(metadata i8 0, metadata !1560, metadata !DIExpression()), !dbg !1564
  store i8 0, i8* %4, align 1, !dbg !1568
  call void @llvm.dbg.value(metadata i8* %3, metadata !1559, metadata !DIExpression(DW_OP_deref)), !dbg !1564
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %3) #15, !dbg !1569
  %6 = icmp slt i32 %5, 0, !dbg !1571
  br i1 %6, label %7, label %8, !dbg !1572

7:                                                ; preds = %2
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 368, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #16, !dbg !1573
  unreachable, !dbg !1573

8:                                                ; preds = %2
  %9 = load i8, i8* %3, align 1, !dbg !1575
  call void @llvm.dbg.value(metadata i8 %9, metadata !1559, metadata !DIExpression()), !dbg !1564
  call void @llvm.dbg.value(metadata i8 %9, metadata !1557, metadata !DIExpression()), !dbg !1564
  call void @llvm.dbg.value(metadata i8* %4, metadata !1560, metadata !DIExpression(DW_OP_deref)), !dbg !1564
  %10 = call i32 @flash_read_sr2(i8* noundef nonnull %4) #15, !dbg !1577
  %11 = icmp slt i32 %10, 0, !dbg !1579
  br i1 %11, label %12, label %13, !dbg !1580

12:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 374, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #16, !dbg !1581
  unreachable, !dbg !1581

13:                                               ; preds = %8
  %14 = load i8, i8* %4, align 1, !dbg !1583
  call void @llvm.dbg.value(metadata i8 %14, metadata !1560, metadata !DIExpression()), !dbg !1564
  call void @llvm.dbg.value(metadata i8 %14, metadata !1558, metadata !DIExpression()), !dbg !1564
  %15 = call i32 @save_and_set_interrupt_mask() #15, !dbg !1585
  call void @llvm.dbg.value(metadata i32 %15, metadata !1556, metadata !DIExpression()), !dbg !1564
  %16 = and i8 %9, 1, !dbg !1586
  %17 = icmp eq i8 %16, 0, !dbg !1587
  br i1 %17, label %18, label %46, !dbg !1588

18:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8 12, metadata !1561, metadata !DIExpression()), !dbg !1589
  %19 = load i32, i32* @support_flash_id, align 4, !dbg !1590
  switch i32 %19, label %28 [
    i32 239, label %20
    i32 200, label %20
    i32 255, label %25
    i32 32, label %24
  ], !dbg !1592

20:                                               ; preds = %18, %18
  call void @llvm.dbg.value(metadata i8 -128, metadata !1561, metadata !DIExpression()), !dbg !1589
  %21 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !1593
  %22 = icmp eq i32 %21, 49, !dbg !1596
  %23 = select i1 %22, i32 132, i32 128, !dbg !1597
  br label %28, !dbg !1597

24:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i8 66, metadata !1561, metadata !DIExpression()), !dbg !1589
  br label %28, !dbg !1598

25:                                               ; preds = %18
  %26 = call zeroext i8 @customer_flash_suspend_bit() #15, !dbg !1602
  call void @llvm.dbg.value(metadata i8 %26, metadata !1561, metadata !DIExpression()), !dbg !1589
  %27 = zext i8 %26 to i32, !dbg !1605
  br label %28, !dbg !1605

28:                                               ; preds = %20, %18, %25, %24
  %29 = phi i32 [ 66, %24 ], [ %27, %25 ], [ %23, %20 ], [ 12, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !1561, metadata !DIExpression()), !dbg !1589
  %30 = zext i8 %14 to i32, !dbg !1606
  %31 = and i32 %29, %30, !dbg !1608
  %32 = icmp eq i32 %31, 0, !dbg !1609
  br i1 %32, label %33, label %38, !dbg !1610

33:                                               ; preds = %28
  %34 = icmp ne i32 %29, 0, !dbg !1611
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %34, i1 true, i1 %36, !dbg !1612
  br i1 %37, label %43, label %38, !dbg !1612

38:                                               ; preds = %33, %28
  %39 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !1613, !range !1512
  %40 = icmp eq i8 %39, 0, !dbg !1613
  br i1 %40, label %41, label %42, !dbg !1613

41:                                               ; preds = %38
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 407, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #16, !dbg !1613
  unreachable, !dbg !1613

42:                                               ; preds = %38
  call void @flash_resume_Winbond() #15, !dbg !1615
  call void @llvm.dbg.value(metadata i32 -121, metadata !1555, metadata !DIExpression()), !dbg !1564
  br label %44, !dbg !1616

43:                                               ; preds = %33
  call void @SF_DAL_FLAG_BUSY_CLR() #17, !dbg !1617
  call void @llvm.dbg.value(metadata i32 0, metadata !1555, metadata !DIExpression()), !dbg !1564
  br label %44

44:                                               ; preds = %43, %42
  %45 = phi i32 [ 0, %43 ], [ -121, %42 ]
  call void @SF_DAL_FLAG_SUS_CLR() #17, !dbg !1619
  br label %46, !dbg !1620

46:                                               ; preds = %44, %13
  %47 = phi i32 [ -121, %13 ], [ %45, %44 ], !dbg !1621
  call void @llvm.dbg.value(metadata i32 %47, metadata !1555, metadata !DIExpression()), !dbg !1564
  call void @restore_interrupt_mask(i32 noundef %15) #15, !dbg !1620
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14, !dbg !1622
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #14, !dbg !1622
  ret i32 %47, !dbg !1623
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readnone %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !1624 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !1628, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.value(metadata i32 %1, metadata !1629, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.value(metadata i8 %2, metadata !1630, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.value(metadata i32 0, metadata !1632, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.value(metadata i16 0, metadata !1634, metadata !DIExpression()), !dbg !1638
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14, !dbg !1639
  call void @llvm.dbg.value(metadata i8 0, metadata !1637, metadata !DIExpression()), !dbg !1638
  store i8 0, i8* %4, align 1, !dbg !1640
  call void @llvm.dbg.value(metadata i8* %4, metadata !1637, metadata !DIExpression(DW_OP_deref)), !dbg !1638
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %4) #15, !dbg !1641
  %6 = icmp slt i32 %5, 0, !dbg !1643
  br i1 %6, label %7, label %8, !dbg !1644

7:                                                ; preds = %3
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 449, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #16, !dbg !1645
  unreachable, !dbg !1645

8:                                                ; preds = %3
  %9 = load i8, i8* %4, align 1, !dbg !1647
  call void @llvm.dbg.value(metadata i8 %9, metadata !1637, metadata !DIExpression()), !dbg !1638
  call void @llvm.dbg.value(metadata i8 %9, metadata !1634, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1638
  %10 = call i32 @save_and_set_interrupt_mask() #15, !dbg !1649
  call void @llvm.dbg.value(metadata i32 %10, metadata !1631, metadata !DIExpression()), !dbg !1638
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !1650, !range !1512
  %12 = icmp eq i8 %11, 0, !dbg !1650
  br i1 %12, label %18, label %13, !dbg !1652

13:                                               ; preds = %8
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !1653, !range !1512
  %15 = icmp eq i8 %14, 0, !dbg !1653
  br i1 %15, label %16, label %17, !dbg !1653

16:                                               ; preds = %13
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #16, !dbg !1653
  unreachable, !dbg !1653

17:                                               ; preds = %13
  call void @flash_resume_Winbond() #15, !dbg !1655
  call void @SF_DAL_FLAG_SUS_CLR() #17, !dbg !1656
  call void @restore_interrupt_mask(i32 noundef %10) #15, !dbg !1657
  br label %26, !dbg !1658

18:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 %9, metadata !1634, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1638
  %19 = and i8 %9, 1, !dbg !1659
  %20 = icmp eq i8 %19, 0, !dbg !1661
  br i1 %20, label %21, label %26, !dbg !1662

21:                                               ; preds = %18
  call void @SF_DAL_FLAG_BUSY_CLR() #17, !dbg !1663
  %22 = inttoptr i32 %1 to i8*, !dbg !1665
  %23 = load volatile i8, i8* %22, align 1, !dbg !1666
  call void @llvm.dbg.value(metadata i8 %23, metadata !1633, metadata !DIExpression()), !dbg !1638
  %24 = icmp eq i8 %23, %2, !dbg !1667
  %25 = select i1 %24, i32 1, i32 -1
  br label %26

26:                                               ; preds = %21, %18, %17
  %27 = phi i32 [ 0, %17 ], [ 0, %18 ], [ %25, %21 ], !dbg !1638
  call void @llvm.dbg.value(metadata i32 %27, metadata !1632, metadata !DIExpression()), !dbg !1638
  call void @restore_interrupt_mask(i32 noundef %10) #15, !dbg !1669
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14, !dbg !1670
  ret i32 %27, !dbg !1671
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #0 !dbg !1672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1676, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata i32 %1, metadata !1677, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.value(metadata i1 %2, metadata !1678, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1679
  %4 = icmp ugt i32 %0, 1, !dbg !1680
  br i1 %4, label %5, label %8, !dbg !1682

5:                                                ; preds = %3
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 75) #15, !dbg !1683
  br label %7, !dbg !1683

7:                                                ; preds = %5, %7
  br label %7, !dbg !1683, !llvm.loop !1685

8:                                                ; preds = %3
  switch i32 %0, label %21 [
    i32 0, label %9
    i32 1, label %15
  ], !dbg !1686

9:                                                ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824300 to i32*), align 4, !dbg !1687
  %10 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1690
  br i1 %2, label %11, label %13, !dbg !1692

11:                                               ; preds = %9
  %12 = or i32 %10, 2, !dbg !1693
  store volatile i32 %12, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1693
  br label %21, !dbg !1695

13:                                               ; preds = %9
  %14 = and i32 %10, -3, !dbg !1696
  store volatile i32 %14, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1696
  br label %21

15:                                               ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824284 to i32*), align 4, !dbg !1698
  %16 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1701
  br i1 %2, label %17, label %19, !dbg !1703

17:                                               ; preds = %15
  %18 = or i32 %16, 2, !dbg !1704
  store volatile i32 %18, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1704
  br label %21, !dbg !1706

19:                                               ; preds = %15
  %20 = and i32 %16, -3, !dbg !1707
  store volatile i32 %20, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1707
  br label %21

21:                                               ; preds = %8, %19, %17, %11, %13
  ret void, !dbg !1709
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !1710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1714, metadata !DIExpression()), !dbg !1715
  switch i32 %0, label %2 [
    i32 0, label %5
    i32 1, label %9
    i32 4, label %13
  ], !dbg !1716

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 96) #15, !dbg !1717
  br label %4, !dbg !1717

4:                                                ; preds = %2, %4
  br label %4, !dbg !1717, !llvm.loop !1720

5:                                                ; preds = %1
  %6 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1721
  %7 = or i32 %6, 1, !dbg !1721
  store volatile i32 %7, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1721
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #15, !dbg !1724
  br label %16, !dbg !1725

9:                                                ; preds = %1
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1726
  %11 = or i32 %10, 1, !dbg !1726
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1726
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #15, !dbg !1729
  br label %16, !dbg !1730

13:                                               ; preds = %1
  %14 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1731
  %15 = or i32 %14, 1, !dbg !1731
  store volatile i32 %15, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1731
  br label %16, !dbg !1734

16:                                               ; preds = %9, %13, %5
  ret void, !dbg !1735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPT_Stop(i32 noundef %0) local_unnamed_addr #5 !dbg !1736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1738, metadata !DIExpression()), !dbg !1739
  switch i32 %0, label %18 [
    i32 0, label %2
    i32 1, label %7
    i32 2, label %12
    i32 4, label %15
  ], !dbg !1740

2:                                                ; preds = %1
  %3 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1741
  %4 = and i32 %3, -2, !dbg !1741
  store volatile i32 %4, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1741
  %5 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1744
  %6 = and i32 %5, -2, !dbg !1744
  store volatile i32 %6, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1744
  store volatile i32 1, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !1745
  br label %18, !dbg !1746

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1747
  %9 = and i32 %8, -3, !dbg !1747
  store volatile i32 %9, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1747
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1750
  %11 = and i32 %10, -2, !dbg !1750
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1750
  store volatile i32 2, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !1751
  br label %18, !dbg !1752

12:                                               ; preds = %1
  %13 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !1753
  %14 = and i32 %13, -2, !dbg !1753
  store volatile i32 %14, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !1753
  br label %18, !dbg !1756

15:                                               ; preds = %1
  %16 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1757
  %17 = and i32 %16, -2, !dbg !1757
  store volatile i32 %17, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1757
  br label %18, !dbg !1760

18:                                               ; preds = %1, %7, %15, %12, %2
  ret void, !dbg !1761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_INT_Handler(i32 %0) #0 !dbg !1762 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !1764, metadata !DIExpression()), !dbg !1766
  call void @llvm.dbg.value(metadata i32 undef, metadata !1764, metadata !DIExpression()), !dbg !1766
  %2 = load volatile i32, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !1767
  %3 = and i32 %2, 65535, !dbg !1768
  call void @llvm.dbg.value(metadata i32 %2, metadata !1765, metadata !DIExpression()), !dbg !1766
  store volatile i32 %3, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !1769
  %4 = and i32 %2, 1, !dbg !1770
  %5 = icmp eq i32 %4, 0, !dbg !1770
  br i1 %5, label %6, label %9, !dbg !1772

6:                                                ; preds = %1
  %7 = and i32 %2, 2, !dbg !1773
  %8 = icmp eq i32 %7, 0, !dbg !1773
  br i1 %8, label %13, label %9, !dbg !1775

9:                                                ; preds = %6, %1
  %10 = phi i32 [ 0, %1 ], [ 1, %6 ]
  %11 = phi void ()** [ @GPTTimer.0, %1 ], [ @GPTTimer.1, %6 ]
  tail call void @clear_TMR_INT_status_bit(i32 noundef %10) #15, !dbg !1776
  %12 = load void ()*, void ()** %11, align 4, !dbg !1776
  tail call void %12() #15, !dbg !1776
  br label %13, !dbg !1777

13:                                               ; preds = %9, %6
  ret void, !dbg !1777
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_init(i32 noundef %0, i32 noundef %1, void ()* noundef %2) local_unnamed_addr #0 !dbg !1778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1782, metadata !DIExpression()), !dbg !1785
  call void @llvm.dbg.value(metadata i32 %1, metadata !1783, metadata !DIExpression()), !dbg !1785
  call void @llvm.dbg.value(metadata void ()* %2, metadata !1784, metadata !DIExpression()), !dbg !1785
  switch i32 %0, label %4 [
    i32 4, label %7
    i32 2, label %7
    i32 1, label %7
    i32 0, label %7
  ], !dbg !1786

4:                                                ; preds = %3
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 149) #15, !dbg !1787
  br label %6, !dbg !1787

6:                                                ; preds = %4, %6
  br label %6, !dbg !1787, !llvm.loop !1790

7:                                                ; preds = %3, %3, %3, %3
  %8 = icmp ult i32 %0, 2, !dbg !1791
  br i1 %8, label %9, label %13, !dbg !1792

9:                                                ; preds = %7
  %10 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 24, void (i32)* noundef nonnull @GPT_INT_Handler) #15, !dbg !1794
  %11 = tail call i32 @hal_nvic_set_priority(i32 noundef 24, i32 noundef 5) #15, !dbg !1796
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #15, !dbg !1797
  br label %13, !dbg !1798

13:                                               ; preds = %7, %9
  switch i32 %0, label %36 [
    i32 0, label %14
    i32 1, label %20
    i32 2, label %26
    i32 4, label %31
  ], !dbg !1799

14:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.0, align 4, !dbg !1800
  %15 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1803
  %16 = or i32 %15, 1, !dbg !1803
  store volatile i32 %16, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1803
  %17 = shl i32 %1, 2, !dbg !1804
  %18 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1805
  %19 = or i32 %18, %17, !dbg !1805
  store volatile i32 %19, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1805
  br label %36, !dbg !1806

20:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.1, align 4, !dbg !1807
  %21 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1810
  %22 = or i32 %21, 2, !dbg !1810
  store volatile i32 %22, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1810
  %23 = shl i32 %1, 2, !dbg !1811
  %24 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1812
  %25 = or i32 %24, %23, !dbg !1812
  store volatile i32 %25, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1812
  br label %36, !dbg !1813

26:                                               ; preds = %13
  %27 = shl i32 %1, 1, !dbg !1814
  %28 = or i32 %27, 1, !dbg !1817
  %29 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !1818
  %30 = or i32 %29, %28, !dbg !1818
  store volatile i32 %30, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !1818
  br label %36, !dbg !1819

31:                                               ; preds = %13
  %32 = shl i32 %1, 1, !dbg !1820
  %33 = or i32 %32, 1, !dbg !1823
  %34 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1824
  %35 = or i32 %34, %33, !dbg !1824
  store volatile i32 %35, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1824
  store volatile i32 0, i32* inttoptr (i32 -2096824220 to i32*), align 4, !dbg !1825
  br label %36, !dbg !1826

36:                                               ; preds = %13, %20, %31, %26, %14
  ret void, !dbg !1827
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GPT_return_current_count(i32 noundef %0) local_unnamed_addr #0 !dbg !1828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1832, metadata !DIExpression()), !dbg !1834
  switch i32 %0, label %2 [
    i32 0, label %8
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
  ], !dbg !1835

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 177) #15, !dbg !1836
  br label %4, !dbg !1836

4:                                                ; preds = %4, %2
  br label %4, !dbg !1836, !llvm.loop !1839

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !1833, metadata !DIExpression()), !dbg !1834
  br label %8, !dbg !1840

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !1833, metadata !DIExpression()), !dbg !1834
  br label %8, !dbg !1844

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !1833, metadata !DIExpression()), !dbg !1834
  br label %8, !dbg !1847

8:                                                ; preds = %1, %5, %7, %6
  %9 = phi i32* [ inttoptr (i32 -2096824252 to i32*), %5 ], [ inttoptr (i32 -2096824268 to i32*), %6 ], [ inttoptr (i32 -2096824216 to i32*), %7 ], [ inttoptr (i32 -2096824256 to i32*), %1 ]
  %10 = load volatile i32, i32* %9, align 4, !dbg !1850
  call void @llvm.dbg.value(metadata i32 %10, metadata !1833, metadata !DIExpression()), !dbg !1834
  ret i32 %10, !dbg !1851
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT2Init() local_unnamed_addr #0 !dbg !1852 {
  tail call void @GPT_init(i32 noundef 2, i32 noundef 1, void ()* noundef null) #17, !dbg !1853
  ret void, !dbg !1854
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT4Init() local_unnamed_addr #0 !dbg !1855 {
  tail call void @GPT_init(i32 noundef 4, i32 noundef 1, void ()* noundef null) #17, !dbg !1856
  ret void, !dbg !1857
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_ConfDirection(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !1858 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1862, metadata !DIExpression()), !dbg !1867
  call void @llvm.dbg.value(metadata i8 %1, metadata !1863, metadata !DIExpression()), !dbg !1867
  %3 = lshr i32 %0, 5, !dbg !1868
  call void @llvm.dbg.value(metadata i32 %3, metadata !1864, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1867
  %4 = trunc i32 %0 to i16, !dbg !1869
  %5 = and i16 %4, 31, !dbg !1869
  call void @llvm.dbg.value(metadata i16 %4, metadata !1866, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !1867
  %6 = trunc i32 %3 to i16, !dbg !1870
  switch i16 %6, label %97 [
    i16 0, label %7
    i16 1, label %70
  ], !dbg !1870

7:                                                ; preds = %2
  %8 = icmp eq i8 %1, 1, !dbg !1871
  %9 = zext i16 %5 to i32, !dbg !1874
  %10 = icmp ult i16 %5, 27, !dbg !1874
  br i1 %8, label %11, label %46, !dbg !1875

11:                                               ; preds = %7
  br i1 %10, label %12, label %17, !dbg !1876

12:                                               ; preds = %11
  %13 = shl nuw i32 1, %9, !dbg !1878
  %14 = xor i32 %13, -1, !dbg !1881
  %15 = load volatile i32, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !1882
  %16 = and i32 %15, %14, !dbg !1882
  store volatile i32 %16, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !1882
  br label %44, !dbg !1883

17:                                               ; preds = %11
  %18 = trunc i32 %0 to i5, !dbg !1884
  switch i5 %18, label %39 [
    i5 -5, label %19
    i5 -4, label %24
    i5 -3, label %29
    i5 -2, label %34
  ], !dbg !1884

19:                                               ; preds = %17
  %20 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1885
  %21 = and i32 %20, -3, !dbg !1885
  store volatile i32 %21, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1885
  %22 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1888
  %23 = or i32 %22, 2048, !dbg !1888
  store volatile i32 %23, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1888
  br label %44, !dbg !1889

24:                                               ; preds = %17
  %25 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1890
  %26 = and i32 %25, -3, !dbg !1890
  store volatile i32 %26, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1890
  %27 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1893
  %28 = or i32 %27, 2048, !dbg !1893
  store volatile i32 %28, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1893
  br label %44, !dbg !1894

29:                                               ; preds = %17
  %30 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1895
  %31 = and i32 %30, -3, !dbg !1895
  store volatile i32 %31, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1895
  %32 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1898
  %33 = or i32 %32, 2048, !dbg !1898
  store volatile i32 %33, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1898
  br label %44, !dbg !1899

34:                                               ; preds = %17
  %35 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1900
  %36 = and i32 %35, -3, !dbg !1900
  store volatile i32 %36, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1900
  %37 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1903
  %38 = or i32 %37, 2048, !dbg !1903
  store volatile i32 %38, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1903
  br label %44, !dbg !1904

39:                                               ; preds = %17
  %40 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1905
  %41 = and i32 %40, -3, !dbg !1905
  store volatile i32 %41, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1905
  %42 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1908
  %43 = or i32 %42, 2048, !dbg !1908
  store volatile i32 %43, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1908
  br label %44, !dbg !1909

44:                                               ; preds = %19, %29, %39, %34, %24, %12
  %45 = shl nuw i32 1, %9, !dbg !1910
  store volatile i32 %45, i32* inttoptr (i32 -2097106796 to i32*), align 4, !dbg !1910
  br label %97, !dbg !1911

46:                                               ; preds = %7
  br i1 %10, label %47, label %51, !dbg !1912

47:                                               ; preds = %46
  %48 = shl nuw i32 1, %9, !dbg !1914
  %49 = load volatile i32, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !1917
  %50 = or i32 %49, %48, !dbg !1917
  store volatile i32 %50, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !1917
  br label %68, !dbg !1918

51:                                               ; preds = %46
  %52 = trunc i32 %0 to i5, !dbg !1919
  switch i5 %52, label %65 [
    i5 -5, label %53
    i5 -4, label %56
    i5 -3, label %59
    i5 -2, label %62
  ], !dbg !1919

53:                                               ; preds = %51
  %54 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1920
  %55 = or i32 %54, 2050, !dbg !1920
  store volatile i32 %55, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1920
  br label %68, !dbg !1923

56:                                               ; preds = %51
  %57 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1924
  %58 = or i32 %57, 2050, !dbg !1924
  store volatile i32 %58, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1924
  br label %68, !dbg !1927

59:                                               ; preds = %51
  %60 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1928
  %61 = or i32 %60, 2050, !dbg !1928
  store volatile i32 %61, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1928
  br label %68, !dbg !1931

62:                                               ; preds = %51
  %63 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1932
  %64 = or i32 %63, 2050, !dbg !1932
  store volatile i32 %64, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1932
  br label %68, !dbg !1935

65:                                               ; preds = %51
  %66 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1936
  %67 = or i32 %66, 2050, !dbg !1936
  store volatile i32 %67, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1936
  br label %68, !dbg !1939

68:                                               ; preds = %53, %59, %65, %62, %56, %47
  %69 = shl nuw i32 1, %9, !dbg !1940
  store volatile i32 %69, i32* inttoptr (i32 -2097106792 to i32*), align 8, !dbg !1940
  br label %97

70:                                               ; preds = %2
  %71 = icmp eq i8 %1, 1, !dbg !1941
  %72 = zext i16 %5 to i32, !dbg !1943
  %73 = icmp eq i16 %5, 0, !dbg !1943
  br i1 %71, label %74, label %87, !dbg !1944

74:                                               ; preds = %70
  br i1 %73, label %80, label %75, !dbg !1945

75:                                               ; preds = %74
  %76 = shl nuw i32 1, %72, !dbg !1947
  %77 = xor i32 %76, -1, !dbg !1950
  %78 = load volatile i32, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !1951
  %79 = and i32 %78, %77, !dbg !1951
  store volatile i32 %79, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !1951
  br label %85, !dbg !1952

80:                                               ; preds = %74
  %81 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1953
  %82 = and i32 %81, -3, !dbg !1953
  store volatile i32 %82, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1953
  %83 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1955
  %84 = or i32 %83, 2048, !dbg !1955
  store volatile i32 %84, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1955
  br label %85

85:                                               ; preds = %80, %75
  %86 = phi i32 [ 1, %80 ], [ %76, %75 ], !dbg !1956
  store volatile i32 %86, i32* inttoptr (i32 -2097106780 to i32*), align 4, !dbg !1956
  br label %97, !dbg !1957

87:                                               ; preds = %70
  br i1 %73, label %92, label %88, !dbg !1958

88:                                               ; preds = %87
  %89 = shl nuw i32 1, %72, !dbg !1960
  %90 = load volatile i32, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !1963
  %91 = or i32 %90, %89, !dbg !1963
  store volatile i32 %91, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !1963
  br label %95, !dbg !1964

92:                                               ; preds = %87
  %93 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1965
  %94 = or i32 %93, 2050, !dbg !1965
  store volatile i32 %94, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1965
  br label %95

95:                                               ; preds = %92, %88
  %96 = phi i32 [ 1, %92 ], [ %89, %88 ], !dbg !1967
  store volatile i32 %96, i32* inttoptr (i32 -2097106776 to i32*), align 8, !dbg !1967
  br label %97

97:                                               ; preds = %68, %44, %95, %85, %2
  %98 = phi i32 [ -1, %2 ], [ 0, %85 ], [ 0, %95 ], [ 0, %44 ], [ 0, %68 ], !dbg !1867
  ret i32 %98, !dbg !1968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPO_Write(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !1969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1971, metadata !DIExpression()), !dbg !1975
  call void @llvm.dbg.value(metadata i8 %1, metadata !1972, metadata !DIExpression()), !dbg !1975
  %3 = lshr i32 %0, 5, !dbg !1976
  call void @llvm.dbg.value(metadata i32 %3, metadata !1973, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1975
  %4 = trunc i32 %0 to i16, !dbg !1977
  %5 = and i16 %4, 31, !dbg !1977
  call void @llvm.dbg.value(metadata i16 %5, metadata !1974, metadata !DIExpression()), !dbg !1975
  %6 = trunc i32 %3 to i16, !dbg !1978
  switch i16 %6, label %19 [
    i16 0, label %7
    i16 1, label %13
  ], !dbg !1978

7:                                                ; preds = %2
  %8 = icmp eq i8 %1, 0, !dbg !1979
  %9 = zext i16 %5 to i32, !dbg !1982
  %10 = shl nuw i32 1, %9, !dbg !1982
  br i1 %8, label %12, label %11, !dbg !1983

11:                                               ; preds = %7
  store volatile i32 %10, i32* inttoptr (i32 -2097106844 to i32*), align 4, !dbg !1984
  br label %19, !dbg !1986

12:                                               ; preds = %7
  store volatile i32 %10, i32* inttoptr (i32 -2097106840 to i32*), align 8, !dbg !1987
  br label %19

13:                                               ; preds = %2
  %14 = icmp eq i8 %1, 0, !dbg !1989
  %15 = zext i16 %5 to i32, !dbg !1991
  %16 = shl nuw i32 1, %15, !dbg !1991
  br i1 %14, label %18, label %17, !dbg !1992

17:                                               ; preds = %13
  store volatile i32 %16, i32* inttoptr (i32 -2097106828 to i32*), align 4, !dbg !1993
  br label %19, !dbg !1995

18:                                               ; preds = %13
  store volatile i32 %16, i32* inttoptr (i32 -2097106824 to i32*), align 8, !dbg !1996
  br label %19

19:                                               ; preds = %12, %11, %18, %17, %2
  %20 = phi i32 [ -1, %2 ], [ 0, %17 ], [ 0, %18 ], [ 0, %11 ], [ 0, %12 ], !dbg !1975
  ret i32 %20, !dbg !1998
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i8 @halgetGPIO_DOUT(i32 noundef %0) local_unnamed_addr #7 !dbg !1999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2003, metadata !DIExpression()), !dbg !2007
  %2 = lshr i32 %0, 5, !dbg !2008
  call void @llvm.dbg.value(metadata i32 %2, metadata !2004, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2007
  %3 = and i32 %0, 31, !dbg !2009
  call void @llvm.dbg.value(metadata i32 %0, metadata !2005, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2007
  call void @llvm.dbg.value(metadata i8 0, metadata !2006, metadata !DIExpression()), !dbg !2007
  %4 = trunc i32 %2 to i16, !dbg !2010
  switch i16 %4, label %12 [
    i16 0, label %6
    i16 1, label %5
  ], !dbg !2010

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %9, metadata !2006, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !2007
  br label %6, !dbg !2011

6:                                                ; preds = %1, %5
  %7 = phi i32* [ inttoptr (i32 -2097106832 to i32*), %5 ], [ inttoptr (i32 -2097106848 to i32*), %1 ]
  %8 = load volatile i32, i32* %7, align 16, !dbg !2013
  %9 = lshr i32 %8, %3, !dbg !2013
  %10 = trunc i32 %9 to i8, !dbg !2013
  %11 = and i8 %10, 1, !dbg !2013
  call void @llvm.dbg.value(metadata i8 %11, metadata !2006, metadata !DIExpression()), !dbg !2007
  br label %12, !dbg !2014

12:                                               ; preds = %1, %6
  %13 = phi i8 [ %11, %6 ], [ 0, %1 ], !dbg !2007
  ret i8 %13, !dbg !2015
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i8 @halgetGPIO_DIN(i32 noundef %0) local_unnamed_addr #7 !dbg !2016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2018, metadata !DIExpression()), !dbg !2022
  %2 = lshr i32 %0, 5, !dbg !2023
  call void @llvm.dbg.value(metadata i32 %2, metadata !2019, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2022
  %3 = and i32 %0, 31, !dbg !2024
  call void @llvm.dbg.value(metadata i32 %0, metadata !2020, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2022
  call void @llvm.dbg.value(metadata i8 0, metadata !2021, metadata !DIExpression()), !dbg !2022
  %4 = trunc i32 %2 to i16, !dbg !2025
  switch i16 %4, label %12 [
    i16 0, label %6
    i16 1, label %5
  ], !dbg !2025

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %9, metadata !2021, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !2022
  br label %6, !dbg !2026

6:                                                ; preds = %1, %5
  %7 = phi i32* [ inttoptr (i32 -2097106748 to i32*), %5 ], [ inttoptr (i32 -2097106752 to i32*), %1 ]
  %8 = load volatile i32, i32* %7, align 4, !dbg !2028
  %9 = lshr i32 %8, %3, !dbg !2028
  %10 = trunc i32 %9 to i8, !dbg !2028
  %11 = and i8 %10, 1, !dbg !2028
  call void @llvm.dbg.value(metadata i8 %11, metadata !2021, metadata !DIExpression()), !dbg !2022
  br label %12, !dbg !2029

12:                                               ; preds = %1, %6
  %13 = phi i8 [ %11, %6 ], [ 0, %1 ], !dbg !2022
  ret i8 %13, !dbg !2030
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i8 @halgetGPIO_OutEnable(i32 noundef %0) local_unnamed_addr #7 !dbg !2031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2033, metadata !DIExpression()), !dbg !2037
  %2 = lshr i32 %0, 5, !dbg !2038
  call void @llvm.dbg.value(metadata i32 %2, metadata !2034, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2037
  %3 = and i32 %0, 31, !dbg !2039
  call void @llvm.dbg.value(metadata i32 %0, metadata !2035, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2037
  call void @llvm.dbg.value(metadata i8 0, metadata !2036, metadata !DIExpression()), !dbg !2037
  %4 = trunc i32 %2 to i16, !dbg !2040
  switch i16 %4, label %12 [
    i16 0, label %6
    i16 1, label %5
  ], !dbg !2040

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %9, metadata !2036, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !2037
  br label %6, !dbg !2041

6:                                                ; preds = %1, %5
  %7 = phi i32* [ inttoptr (i32 -2097106784 to i32*), %5 ], [ inttoptr (i32 -2097106800 to i32*), %1 ]
  %8 = load volatile i32, i32* %7, align 16, !dbg !2043
  %9 = lshr i32 %8, %3, !dbg !2043
  %10 = trunc i32 %9 to i8, !dbg !2043
  %11 = and i8 %10, 1, !dbg !2043
  call void @llvm.dbg.value(metadata i8 %11, metadata !2036, metadata !DIExpression()), !dbg !2037
  br label %12, !dbg !2044

12:                                               ; preds = %1, %6
  %13 = phi i8 [ %11, %6 ], [ 0, %1 ], !dbg !2037
  ret i8 %13, !dbg !2045
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullUp_SET(i32 noundef %0) local_unnamed_addr #5 !dbg !2046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2050, metadata !DIExpression()), !dbg !2053
  %2 = lshr i32 %0, 5, !dbg !2054
  call void @llvm.dbg.value(metadata i32 %2, metadata !2051, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2053
  %3 = trunc i32 %0 to i16, !dbg !2055
  %4 = and i16 %3, 31, !dbg !2055
  call void @llvm.dbg.value(metadata i16 %3, metadata !2052, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2053
  %5 = tail call i32 @halGPIO_PullDown_RESET(i32 noundef %0) #17, !dbg !2056
  %6 = trunc i32 %2 to i16, !dbg !2057
  switch i16 %6, label %49 [
    i16 0, label %7
    i16 1, label %39
  ], !dbg !2057

7:                                                ; preds = %1
  %8 = icmp ult i16 %4, 27, !dbg !2058
  br i1 %8, label %9, label %12, !dbg !2061

9:                                                ; preds = %7
  %10 = zext i16 %4 to i32, !dbg !2062
  %11 = shl nuw nsw i32 1, %10, !dbg !2063
  store volatile i32 %11, i32* inttoptr (i32 -2097106940 to i32*), align 4, !dbg !2063
  br label %49, !dbg !2065

12:                                               ; preds = %7
  %13 = trunc i32 %0 to i5, !dbg !2066
  switch i5 %13, label %34 [
    i5 -5, label %14
    i5 -4, label %19
    i5 -3, label %24
    i5 -2, label %29
  ], !dbg !2066

14:                                               ; preds = %12
  %15 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2067
  %16 = and i32 %15, -29, !dbg !2067
  store volatile i32 %16, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2067
  %17 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2070
  %18 = or i32 %17, 2052, !dbg !2070
  store volatile i32 %18, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2070
  br label %49, !dbg !2071

19:                                               ; preds = %12
  %20 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2072
  %21 = and i32 %20, -29, !dbg !2072
  store volatile i32 %21, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2072
  %22 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2075
  %23 = or i32 %22, 2052, !dbg !2075
  store volatile i32 %23, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2075
  br label %49, !dbg !2076

24:                                               ; preds = %12
  %25 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2077
  %26 = and i32 %25, -29, !dbg !2077
  store volatile i32 %26, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2077
  %27 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2080
  %28 = or i32 %27, 2052, !dbg !2080
  store volatile i32 %28, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2080
  br label %49, !dbg !2081

29:                                               ; preds = %12
  %30 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2082
  %31 = and i32 %30, -29, !dbg !2082
  store volatile i32 %31, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2082
  %32 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2085
  %33 = or i32 %32, 2052, !dbg !2085
  store volatile i32 %33, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2085
  br label %49, !dbg !2086

34:                                               ; preds = %12
  %35 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2087
  %36 = and i32 %35, -29, !dbg !2087
  store volatile i32 %36, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2087
  %37 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2090
  %38 = or i32 %37, 2052, !dbg !2090
  store volatile i32 %38, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2090
  br label %49, !dbg !2091

39:                                               ; preds = %1
  %40 = icmp eq i16 %4, 0, !dbg !2092
  br i1 %40, label %41, label %46, !dbg !2094

41:                                               ; preds = %39
  %42 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2095
  %43 = and i32 %42, -29, !dbg !2095
  store volatile i32 %43, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2095
  %44 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2097
  %45 = or i32 %44, 2052, !dbg !2097
  store volatile i32 %45, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2097
  br label %49, !dbg !2098

46:                                               ; preds = %39
  %47 = zext i16 %4 to i32, !dbg !2099
  %48 = shl nuw i32 1, %47, !dbg !2099
  store volatile i32 %48, i32* inttoptr (i32 -2097106924 to i32*), align 4, !dbg !2099
  br label %49

49:                                               ; preds = %14, %24, %34, %29, %19, %9, %46, %41, %1
  %50 = phi i32 [ -1, %1 ], [ 0, %41 ], [ 0, %46 ], [ 0, %9 ], [ 0, %19 ], [ 0, %29 ], [ 0, %34 ], [ 0, %24 ], [ 0, %14 ], !dbg !2053
  ret i32 %50, !dbg !2101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullDown_RESET(i32 noundef %0) local_unnamed_addr #5 !dbg !2102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2104, metadata !DIExpression()), !dbg !2107
  %2 = lshr i32 %0, 5, !dbg !2108
  call void @llvm.dbg.value(metadata i32 %2, metadata !2105, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2107
  %3 = trunc i32 %0 to i16, !dbg !2109
  %4 = and i16 %3, 31, !dbg !2109
  call void @llvm.dbg.value(metadata i16 %3, metadata !2106, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2107
  %5 = trunc i32 %2 to i16, !dbg !2110
  switch i16 %5, label %48 [
    i16 0, label %6
    i16 1, label %38
  ], !dbg !2110

6:                                                ; preds = %1
  %7 = icmp ult i16 %4, 27, !dbg !2111
  br i1 %7, label %8, label %11, !dbg !2114

8:                                                ; preds = %6
  %9 = zext i16 %4 to i32, !dbg !2115
  %10 = shl nuw nsw i32 1, %9, !dbg !2116
  store volatile i32 %10, i32* inttoptr (i32 -2097106888 to i32*), align 8, !dbg !2116
  br label %48, !dbg !2118

11:                                               ; preds = %6
  %12 = trunc i32 %0 to i5, !dbg !2119
  switch i5 %12, label %33 [
    i5 -5, label %13
    i5 -4, label %18
    i5 -3, label %23
    i5 -2, label %28
  ], !dbg !2119

13:                                               ; preds = %11
  %14 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2120
  %15 = and i32 %14, -29, !dbg !2120
  store volatile i32 %15, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2120
  %16 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2123
  %17 = or i32 %16, 2048, !dbg !2123
  store volatile i32 %17, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2123
  br label %48, !dbg !2124

18:                                               ; preds = %11
  %19 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2125
  %20 = and i32 %19, -29, !dbg !2125
  store volatile i32 %20, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2125
  %21 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2128
  %22 = or i32 %21, 2048, !dbg !2128
  store volatile i32 %22, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2128
  br label %48, !dbg !2129

23:                                               ; preds = %11
  %24 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2130
  %25 = and i32 %24, -29, !dbg !2130
  store volatile i32 %25, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2130
  %26 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2133
  %27 = or i32 %26, 2048, !dbg !2133
  store volatile i32 %27, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2133
  br label %48, !dbg !2134

28:                                               ; preds = %11
  %29 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2135
  %30 = and i32 %29, -29, !dbg !2135
  store volatile i32 %30, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2135
  %31 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2138
  %32 = or i32 %31, 2048, !dbg !2138
  store volatile i32 %32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2138
  br label %48, !dbg !2139

33:                                               ; preds = %11
  %34 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2140
  %35 = and i32 %34, -29, !dbg !2140
  store volatile i32 %35, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2140
  %36 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2143
  %37 = or i32 %36, 2048, !dbg !2143
  store volatile i32 %37, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2143
  br label %48, !dbg !2144

38:                                               ; preds = %1
  %39 = icmp eq i16 %4, 0, !dbg !2145
  br i1 %39, label %40, label %45, !dbg !2147

40:                                               ; preds = %38
  %41 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2148
  %42 = and i32 %41, -29, !dbg !2148
  store volatile i32 %42, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2148
  %43 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2150
  %44 = or i32 %43, 2048, !dbg !2150
  store volatile i32 %44, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2150
  br label %48, !dbg !2151

45:                                               ; preds = %38
  %46 = zext i16 %4 to i32, !dbg !2152
  %47 = shl nuw i32 1, %46, !dbg !2152
  store volatile i32 %47, i32* inttoptr (i32 -2097106872 to i32*), align 8, !dbg !2152
  br label %48

48:                                               ; preds = %13, %23, %33, %28, %18, %8, %45, %40, %1
  %49 = phi i32 [ -1, %1 ], [ 0, %40 ], [ 0, %45 ], [ 0, %8 ], [ 0, %18 ], [ 0, %28 ], [ 0, %33 ], [ 0, %23 ], [ 0, %13 ], !dbg !2107
  ret i32 %49, !dbg !2154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullUp_RESET(i32 noundef %0) local_unnamed_addr #5 !dbg !2155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2157, metadata !DIExpression()), !dbg !2160
  %2 = lshr i32 %0, 5, !dbg !2161
  call void @llvm.dbg.value(metadata i32 %2, metadata !2158, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2160
  %3 = trunc i32 %0 to i16, !dbg !2162
  %4 = and i16 %3, 31, !dbg !2162
  call void @llvm.dbg.value(metadata i16 %3, metadata !2159, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2160
  %5 = trunc i32 %2 to i16, !dbg !2163
  switch i16 %5, label %48 [
    i16 0, label %6
    i16 1, label %38
  ], !dbg !2163

6:                                                ; preds = %1
  %7 = icmp ult i16 %4, 27, !dbg !2164
  br i1 %7, label %8, label %11, !dbg !2167

8:                                                ; preds = %6
  %9 = zext i16 %4 to i32, !dbg !2168
  %10 = shl nuw nsw i32 1, %9, !dbg !2169
  store volatile i32 %10, i32* inttoptr (i32 -2097106936 to i32*), align 8, !dbg !2169
  br label %48, !dbg !2171

11:                                               ; preds = %6
  %12 = trunc i32 %0 to i5, !dbg !2172
  switch i5 %12, label %33 [
    i5 -5, label %13
    i5 -4, label %18
    i5 -3, label %23
    i5 -2, label %28
  ], !dbg !2172

13:                                               ; preds = %11
  %14 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2173
  %15 = and i32 %14, -29, !dbg !2173
  store volatile i32 %15, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2173
  %16 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2176
  %17 = or i32 %16, 2048, !dbg !2176
  store volatile i32 %17, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2176
  br label %48, !dbg !2177

18:                                               ; preds = %11
  %19 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2178
  %20 = and i32 %19, -29, !dbg !2178
  store volatile i32 %20, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2178
  %21 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2181
  %22 = or i32 %21, 2048, !dbg !2181
  store volatile i32 %22, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2181
  br label %48, !dbg !2182

23:                                               ; preds = %11
  %24 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2183
  %25 = and i32 %24, -29, !dbg !2183
  store volatile i32 %25, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2183
  %26 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2186
  %27 = or i32 %26, 2048, !dbg !2186
  store volatile i32 %27, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2186
  br label %48, !dbg !2187

28:                                               ; preds = %11
  %29 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2188
  %30 = and i32 %29, -29, !dbg !2188
  store volatile i32 %30, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2188
  %31 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2191
  %32 = or i32 %31, 2048, !dbg !2191
  store volatile i32 %32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2191
  br label %48, !dbg !2192

33:                                               ; preds = %11
  %34 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2193
  %35 = and i32 %34, -29, !dbg !2193
  store volatile i32 %35, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2193
  %36 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2196
  %37 = or i32 %36, 2048, !dbg !2196
  store volatile i32 %37, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2196
  br label %48, !dbg !2197

38:                                               ; preds = %1
  %39 = icmp eq i16 %4, 0, !dbg !2198
  br i1 %39, label %40, label %45, !dbg !2200

40:                                               ; preds = %38
  %41 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2201
  %42 = and i32 %41, -29, !dbg !2201
  store volatile i32 %42, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2201
  %43 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2203
  %44 = or i32 %43, 2048, !dbg !2203
  store volatile i32 %44, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2203
  br label %48, !dbg !2204

45:                                               ; preds = %38
  %46 = zext i16 %4 to i32, !dbg !2205
  %47 = shl nuw i32 1, %46, !dbg !2205
  store volatile i32 %47, i32* inttoptr (i32 -2097106920 to i32*), align 8, !dbg !2205
  br label %48

48:                                               ; preds = %13, %23, %33, %28, %18, %8, %45, %40, %1
  %49 = phi i32 [ -1, %1 ], [ 0, %40 ], [ 0, %45 ], [ 0, %8 ], [ 0, %18 ], [ 0, %28 ], [ 0, %33 ], [ 0, %23 ], [ 0, %13 ], !dbg !2160
  ret i32 %49, !dbg !2207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullDown_SET(i32 noundef %0) local_unnamed_addr #5 !dbg !2208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2210, metadata !DIExpression()), !dbg !2213
  %2 = lshr i32 %0, 5, !dbg !2214
  call void @llvm.dbg.value(metadata i32 %2, metadata !2211, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2213
  %3 = trunc i32 %0 to i16, !dbg !2215
  %4 = and i16 %3, 31, !dbg !2215
  call void @llvm.dbg.value(metadata i16 %3, metadata !2212, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2213
  %5 = tail call i32 @halGPIO_PullUp_RESET(i32 noundef %0) #17, !dbg !2216
  %6 = trunc i32 %2 to i16, !dbg !2217
  switch i16 %6, label %49 [
    i16 0, label %7
    i16 1, label %39
  ], !dbg !2217

7:                                                ; preds = %1
  %8 = icmp ult i16 %4, 27, !dbg !2218
  br i1 %8, label %9, label %12, !dbg !2221

9:                                                ; preds = %7
  %10 = zext i16 %4 to i32, !dbg !2222
  %11 = shl nuw nsw i32 1, %10, !dbg !2223
  store volatile i32 %11, i32* inttoptr (i32 -2097106892 to i32*), align 4, !dbg !2223
  br label %49, !dbg !2225

12:                                               ; preds = %7
  %13 = trunc i32 %0 to i5, !dbg !2226
  switch i5 %13, label %34 [
    i5 -5, label %14
    i5 -4, label %19
    i5 -3, label %24
    i5 -2, label %29
  ], !dbg !2226

14:                                               ; preds = %12
  %15 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2227
  %16 = and i32 %15, -29, !dbg !2227
  store volatile i32 %16, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2227
  %17 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2230
  %18 = or i32 %17, 2068, !dbg !2230
  store volatile i32 %18, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2230
  br label %49, !dbg !2231

19:                                               ; preds = %12
  %20 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2232
  %21 = and i32 %20, -29, !dbg !2232
  store volatile i32 %21, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2232
  %22 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2235
  %23 = or i32 %22, 2068, !dbg !2235
  store volatile i32 %23, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2235
  br label %49, !dbg !2236

24:                                               ; preds = %12
  %25 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2237
  %26 = and i32 %25, -29, !dbg !2237
  store volatile i32 %26, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2237
  %27 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2240
  %28 = or i32 %27, 2068, !dbg !2240
  store volatile i32 %28, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2240
  br label %49, !dbg !2241

29:                                               ; preds = %12
  %30 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2242
  %31 = and i32 %30, -29, !dbg !2242
  store volatile i32 %31, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2242
  %32 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2245
  %33 = or i32 %32, 2068, !dbg !2245
  store volatile i32 %33, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2245
  br label %49, !dbg !2246

34:                                               ; preds = %12
  %35 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2247
  %36 = and i32 %35, -29, !dbg !2247
  store volatile i32 %36, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2247
  %37 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2250
  %38 = or i32 %37, 2068, !dbg !2250
  store volatile i32 %38, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2250
  br label %49, !dbg !2251

39:                                               ; preds = %1
  %40 = icmp eq i16 %4, 0, !dbg !2252
  br i1 %40, label %41, label %46, !dbg !2254

41:                                               ; preds = %39
  %42 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2255
  %43 = and i32 %42, -29, !dbg !2255
  store volatile i32 %43, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2255
  %44 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2257
  %45 = or i32 %44, 2068, !dbg !2257
  store volatile i32 %45, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2257
  br label %49, !dbg !2258

46:                                               ; preds = %39
  %47 = zext i16 %4 to i32, !dbg !2259
  %48 = shl nuw i32 1, %47, !dbg !2259
  store volatile i32 %48, i32* inttoptr (i32 -2097106876 to i32*), align 4, !dbg !2259
  br label %49

49:                                               ; preds = %14, %24, %34, %29, %19, %9, %46, %41, %1
  %50 = phi i32 [ -1, %1 ], [ 0, %41 ], [ 0, %46 ], [ 0, %9 ], [ 0, %19 ], [ 0, %29 ], [ 0, %34 ], [ 0, %24 ], [ 0, %14 ], !dbg !2213
  ret i32 %50, !dbg !2261
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_SetDriving(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !2262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2264, metadata !DIExpression()), !dbg !2268
  call void @llvm.dbg.value(metadata i8 %1, metadata !2265, metadata !DIExpression()), !dbg !2268
  %3 = lshr i32 %0, 4, !dbg !2269
  call void @llvm.dbg.value(metadata i32 %3, metadata !2266, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2268
  %4 = trunc i32 %0 to i16, !dbg !2270
  %5 = and i16 %4, 15, !dbg !2270
  call void @llvm.dbg.value(metadata i16 %4, metadata !2267, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !2268
  %6 = trunc i32 %3 to i16, !dbg !2271
  switch i16 %6, label %131 [
    i16 0, label %7
    i16 1, label %20
    i16 2, label %92
    i16 3, label %118
  ], !dbg !2271

7:                                                ; preds = %2
  %8 = shl nuw nsw i16 %5, 1, !dbg !2272
  %9 = zext i16 %8 to i32, !dbg !2272
  %10 = shl nuw i32 3, %9, !dbg !2274
  %11 = xor i32 %10, -1, !dbg !2275
  %12 = load volatile i32, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !2276
  %13 = and i32 %12, %11, !dbg !2276
  store volatile i32 %13, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !2276
  %14 = lshr i8 %1, 2, !dbg !2277
  %15 = zext i8 %14 to i32, !dbg !2277
  %16 = add nsw i32 %15, -1, !dbg !2278
  %17 = shl i32 %16, %9, !dbg !2279
  %18 = load volatile i32, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !2280
  %19 = or i32 %18, %17, !dbg !2280
  store volatile i32 %19, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !2280
  br label %131, !dbg !2281

20:                                               ; preds = %2
  %21 = icmp ult i16 %5, 11, !dbg !2282
  br i1 %21, label %22, label %35, !dbg !2284

22:                                               ; preds = %20
  %23 = shl nuw nsw i16 %5, 1, !dbg !2285
  %24 = zext i16 %23 to i32, !dbg !2285
  %25 = shl nuw nsw i32 3, %24, !dbg !2287
  %26 = xor i32 %25, -1, !dbg !2288
  %27 = load volatile i32, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !2289
  %28 = and i32 %27, %26, !dbg !2289
  store volatile i32 %28, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !2289
  %29 = lshr i8 %1, 2, !dbg !2290
  %30 = zext i8 %29 to i32, !dbg !2290
  %31 = add nsw i32 %30, -1, !dbg !2291
  %32 = shl nsw i32 %31, %24, !dbg !2292
  %33 = load volatile i32, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !2293
  %34 = or i32 %33, %32, !dbg !2293
  store volatile i32 %34, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !2293
  br label %131, !dbg !2294

35:                                               ; preds = %20
  %36 = trunc i32 %0 to i4, !dbg !2295
  switch i4 %36, label %81 [
    i4 -5, label %37
    i4 -4, label %48
    i4 -3, label %59
    i4 -2, label %70
  ], !dbg !2295

37:                                               ; preds = %35
  %38 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2296
  %39 = and i32 %38, -449, !dbg !2296
  store volatile i32 %39, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2296
  %40 = lshr i8 %1, 1, !dbg !2299
  %41 = zext i8 %40 to i32, !dbg !2299
  %42 = shl nuw nsw i32 %41, 6, !dbg !2300
  %43 = add nsw i32 %42, -64, !dbg !2300
  %44 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2301
  %45 = or i32 %44, %43, !dbg !2301
  store volatile i32 %45, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2301
  %46 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2302
  %47 = or i32 %46, 2048, !dbg !2302
  store volatile i32 %47, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2302
  br label %131, !dbg !2303

48:                                               ; preds = %35
  %49 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2304
  %50 = and i32 %49, -449, !dbg !2304
  store volatile i32 %50, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2304
  %51 = lshr i8 %1, 1, !dbg !2307
  %52 = zext i8 %51 to i32, !dbg !2307
  %53 = shl nuw nsw i32 %52, 6, !dbg !2308
  %54 = add nsw i32 %53, -64, !dbg !2308
  %55 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2309
  %56 = or i32 %55, %54, !dbg !2309
  store volatile i32 %56, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2309
  %57 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2310
  %58 = or i32 %57, 2048, !dbg !2310
  store volatile i32 %58, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2310
  br label %131, !dbg !2311

59:                                               ; preds = %35
  %60 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2312
  %61 = and i32 %60, -449, !dbg !2312
  store volatile i32 %61, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2312
  %62 = lshr i8 %1, 1, !dbg !2315
  %63 = zext i8 %62 to i32, !dbg !2315
  %64 = shl nuw nsw i32 %63, 6, !dbg !2316
  %65 = add nsw i32 %64, -64, !dbg !2316
  %66 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2317
  %67 = or i32 %66, %65, !dbg !2317
  store volatile i32 %67, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2317
  %68 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2318
  %69 = or i32 %68, 2048, !dbg !2318
  store volatile i32 %69, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2318
  br label %131, !dbg !2319

70:                                               ; preds = %35
  %71 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2320
  %72 = and i32 %71, -449, !dbg !2320
  store volatile i32 %72, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2320
  %73 = lshr i8 %1, 1, !dbg !2323
  %74 = zext i8 %73 to i32, !dbg !2323
  %75 = shl nuw nsw i32 %74, 6, !dbg !2324
  %76 = add nsw i32 %75, -64, !dbg !2324
  %77 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2325
  %78 = or i32 %77, %76, !dbg !2325
  store volatile i32 %78, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2325
  %79 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2326
  %80 = or i32 %79, 2048, !dbg !2326
  store volatile i32 %80, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2326
  br label %131, !dbg !2327

81:                                               ; preds = %35
  %82 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2328
  %83 = and i32 %82, -449, !dbg !2328
  store volatile i32 %83, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2328
  %84 = lshr i8 %1, 1, !dbg !2331
  %85 = zext i8 %84 to i32, !dbg !2331
  %86 = shl nuw nsw i32 %85, 6, !dbg !2332
  %87 = add nsw i32 %86, -64, !dbg !2332
  %88 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2333
  %89 = or i32 %88, %87, !dbg !2333
  store volatile i32 %89, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2333
  %90 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2334
  %91 = or i32 %90, 2048, !dbg !2334
  store volatile i32 %91, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2334
  br label %131, !dbg !2335

92:                                               ; preds = %2
  %93 = icmp eq i16 %5, 0, !dbg !2336
  br i1 %93, label %94, label %105, !dbg !2338

94:                                               ; preds = %92
  %95 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2339
  %96 = and i32 %95, -449, !dbg !2339
  store volatile i32 %96, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2339
  %97 = lshr i8 %1, 1, !dbg !2341
  %98 = zext i8 %97 to i32, !dbg !2341
  %99 = shl nuw nsw i32 %98, 6, !dbg !2342
  %100 = add nsw i32 %99, -64, !dbg !2342
  %101 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2343
  %102 = or i32 %101, %100, !dbg !2343
  store volatile i32 %102, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2343
  %103 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2344
  %104 = or i32 %103, 2048, !dbg !2344
  store volatile i32 %104, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2344
  br label %131, !dbg !2345

105:                                              ; preds = %92
  %106 = shl nuw nsw i16 %5, 1, !dbg !2346
  %107 = zext i16 %106 to i32, !dbg !2346
  %108 = shl nuw i32 3, %107, !dbg !2348
  %109 = xor i32 %108, -1, !dbg !2349
  %110 = load volatile i32, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !2350
  %111 = and i32 %110, %109, !dbg !2350
  store volatile i32 %111, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !2350
  %112 = lshr i8 %1, 2, !dbg !2351
  %113 = zext i8 %112 to i32, !dbg !2351
  %114 = add nsw i32 %113, -1, !dbg !2352
  %115 = shl i32 %114, %107, !dbg !2353
  %116 = load volatile i32, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !2354
  %117 = or i32 %116, %115, !dbg !2354
  store volatile i32 %117, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !2354
  br label %131

118:                                              ; preds = %2
  %119 = shl nuw nsw i16 %5, 1, !dbg !2355
  %120 = zext i16 %119 to i32, !dbg !2355
  %121 = shl nuw i32 3, %120, !dbg !2356
  %122 = xor i32 %121, -1, !dbg !2357
  %123 = load volatile i32, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !2358
  %124 = and i32 %123, %122, !dbg !2358
  store volatile i32 %124, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !2358
  %125 = lshr i8 %1, 2, !dbg !2359
  %126 = zext i8 %125 to i32, !dbg !2359
  %127 = add nsw i32 %126, -1, !dbg !2360
  %128 = shl i32 %127, %120, !dbg !2361
  %129 = load volatile i32, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !2362
  %130 = or i32 %129, %128, !dbg !2362
  store volatile i32 %130, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !2362
  br label %131, !dbg !2363

131:                                              ; preds = %7, %118, %37, %59, %81, %70, %48, %22, %105, %94, %2
  %132 = phi i32 [ -1, %2 ], [ 0, %94 ], [ 0, %105 ], [ 0, %22 ], [ 0, %48 ], [ 0, %70 ], [ 0, %81 ], [ 0, %59 ], [ 0, %37 ], [ 0, %118 ], [ 0, %7 ], !dbg !2268
  ret i32 %132, !dbg !2364
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @halGPIO_GetDriving(i32 noundef %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !2365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2370, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata i8* %1, metadata !2371, metadata !DIExpression()), !dbg !2375
  %3 = lshr i32 %0, 4, !dbg !2376
  call void @llvm.dbg.value(metadata i32 %3, metadata !2372, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2375
  %4 = trunc i32 %0 to i16, !dbg !2377
  %5 = and i16 %4, 15, !dbg !2377
  call void @llvm.dbg.value(metadata i16 %4, metadata !2373, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !2375
  %6 = trunc i32 %3 to i16, !dbg !2378
  switch i16 %6, label %91 [
    i16 0, label %7
    i16 1, label %17
    i16 2, label %61
    i16 3, label %79
  ], !dbg !2378

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !2379
  call void @llvm.dbg.value(metadata i32 %8, metadata !2374, metadata !DIExpression()), !dbg !2375
  %9 = shl nuw nsw i16 %5, 1, !dbg !2381
  %10 = zext i16 %9 to i32, !dbg !2381
  %11 = shl nuw i32 3, %10, !dbg !2382
  %12 = and i32 %8, %11, !dbg !2383
  call void @llvm.dbg.value(metadata i32 %12, metadata !2374, metadata !DIExpression()), !dbg !2375
  %13 = lshr i32 %12, %10, !dbg !2384
  %14 = trunc i32 %13 to i8, !dbg !2385
  %15 = shl i8 %14, 2, !dbg !2385
  %16 = add i8 %15, 4, !dbg !2385
  br label %89, !dbg !2386

17:                                               ; preds = %2
  %18 = icmp ult i16 %5, 11, !dbg !2387
  br i1 %18, label %19, label %29, !dbg !2389

19:                                               ; preds = %17
  %20 = load volatile i32, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !2390
  call void @llvm.dbg.value(metadata i32 %20, metadata !2374, metadata !DIExpression()), !dbg !2375
  %21 = shl nuw nsw i16 %5, 1, !dbg !2392
  %22 = zext i16 %21 to i32, !dbg !2392
  %23 = shl nuw nsw i32 3, %22, !dbg !2393
  %24 = and i32 %20, %23, !dbg !2394
  call void @llvm.dbg.value(metadata i32 %24, metadata !2374, metadata !DIExpression()), !dbg !2375
  %25 = lshr i32 %24, %22, !dbg !2395
  %26 = trunc i32 %25 to i8, !dbg !2396
  %27 = shl i8 %26, 2, !dbg !2396
  %28 = add i8 %27, 4, !dbg !2396
  br label %89, !dbg !2397

29:                                               ; preds = %17
  %30 = trunc i32 %0 to i4, !dbg !2398
  switch i4 %30, label %55 [
    i4 -5, label %31
    i4 -4, label %37
    i4 -3, label %43
    i4 -2, label %49
  ], !dbg !2398

31:                                               ; preds = %29
  %32 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2399
  call void @llvm.dbg.value(metadata i32 %32, metadata !2374, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata i32 %32, metadata !2374, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2375
  %33 = lshr i32 %32, 5, !dbg !2402
  %34 = trunc i32 %33 to i8, !dbg !2403
  %35 = and i8 %34, 14, !dbg !2403
  %36 = add nuw nsw i8 %35, 2, !dbg !2403
  br label %89, !dbg !2404

37:                                               ; preds = %29
  %38 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2405
  call void @llvm.dbg.value(metadata i32 %38, metadata !2374, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata i32 %38, metadata !2374, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2375
  %39 = lshr i32 %38, 5, !dbg !2408
  %40 = trunc i32 %39 to i8, !dbg !2409
  %41 = and i8 %40, 14, !dbg !2409
  %42 = add nuw nsw i8 %41, 2, !dbg !2409
  br label %89, !dbg !2410

43:                                               ; preds = %29
  %44 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2411
  call void @llvm.dbg.value(metadata i32 %44, metadata !2374, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata i32 %44, metadata !2374, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2375
  %45 = lshr i32 %44, 5, !dbg !2414
  %46 = trunc i32 %45 to i8, !dbg !2415
  %47 = and i8 %46, 14, !dbg !2415
  %48 = add nuw nsw i8 %47, 2, !dbg !2415
  br label %89, !dbg !2416

49:                                               ; preds = %29
  %50 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2417
  call void @llvm.dbg.value(metadata i32 %50, metadata !2374, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata i32 %50, metadata !2374, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2375
  %51 = lshr i32 %50, 5, !dbg !2420
  %52 = trunc i32 %51 to i8, !dbg !2421
  %53 = and i8 %52, 14, !dbg !2421
  %54 = add nuw nsw i8 %53, 2, !dbg !2421
  br label %89, !dbg !2422

55:                                               ; preds = %29
  %56 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2423
  call void @llvm.dbg.value(metadata i32 %56, metadata !2374, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata i32 %56, metadata !2374, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2375
  %57 = lshr i32 %56, 5, !dbg !2426
  %58 = trunc i32 %57 to i8, !dbg !2427
  %59 = and i8 %58, 14, !dbg !2427
  %60 = add nuw nsw i8 %59, 2, !dbg !2427
  br label %89, !dbg !2428

61:                                               ; preds = %2
  %62 = icmp eq i16 %5, 0, !dbg !2429
  br i1 %62, label %63, label %69, !dbg !2431

63:                                               ; preds = %61
  %64 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2432
  call void @llvm.dbg.value(metadata i32 %64, metadata !2374, metadata !DIExpression()), !dbg !2375
  call void @llvm.dbg.value(metadata i32 %64, metadata !2374, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2375
  %65 = lshr i32 %64, 5, !dbg !2434
  %66 = trunc i32 %65 to i8, !dbg !2435
  %67 = and i8 %66, 14, !dbg !2435
  %68 = add nuw nsw i8 %67, 2, !dbg !2435
  br label %89, !dbg !2436

69:                                               ; preds = %61
  %70 = load volatile i32, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !2437
  call void @llvm.dbg.value(metadata i32 %70, metadata !2374, metadata !DIExpression()), !dbg !2375
  %71 = shl nuw nsw i16 %5, 1, !dbg !2439
  %72 = zext i16 %71 to i32, !dbg !2439
  %73 = shl nuw i32 3, %72, !dbg !2440
  %74 = and i32 %70, %73, !dbg !2441
  call void @llvm.dbg.value(metadata i32 %74, metadata !2374, metadata !DIExpression()), !dbg !2375
  %75 = lshr i32 %74, %72, !dbg !2442
  %76 = trunc i32 %75 to i8, !dbg !2443
  %77 = shl i8 %76, 2, !dbg !2443
  %78 = add i8 %77, 4, !dbg !2443
  br label %89

79:                                               ; preds = %2
  %80 = load volatile i32, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !2444
  call void @llvm.dbg.value(metadata i32 %80, metadata !2374, metadata !DIExpression()), !dbg !2375
  %81 = shl nuw nsw i16 %5, 1, !dbg !2445
  %82 = zext i16 %81 to i32, !dbg !2445
  %83 = shl nuw i32 3, %82, !dbg !2446
  %84 = and i32 %80, %83, !dbg !2447
  call void @llvm.dbg.value(metadata i32 %84, metadata !2374, metadata !DIExpression()), !dbg !2375
  %85 = lshr i32 %84, %82, !dbg !2448
  %86 = trunc i32 %85 to i8, !dbg !2449
  %87 = shl i8 %86, 2, !dbg !2449
  %88 = add i8 %87, 4, !dbg !2449
  br label %89, !dbg !2450

89:                                               ; preds = %63, %69, %19, %37, %49, %55, %43, %31, %79, %7
  %90 = phi i8 [ %16, %7 ], [ %88, %79 ], [ %36, %31 ], [ %48, %43 ], [ %60, %55 ], [ %54, %49 ], [ %42, %37 ], [ %28, %19 ], [ %78, %69 ], [ %68, %63 ]
  store i8 %90, i8* %1, align 1, !dbg !2451
  br label %91, !dbg !2452

91:                                               ; preds = %89, %2
  %92 = phi i32 [ -1, %2 ], [ 0, %89 ], !dbg !2375
  ret i32 %92, !dbg !2452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @topPAD_Control_GPIO(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !2453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2458, metadata !DIExpression()), !dbg !2462
  call void @llvm.dbg.value(metadata i32 %1, metadata !2459, metadata !DIExpression()), !dbg !2462
  %3 = lshr i32 %0, 5, !dbg !2463
  call void @llvm.dbg.value(metadata i32 %3, metadata !2460, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2462
  %4 = trunc i32 %0 to i16, !dbg !2464
  %5 = and i16 %4, 31, !dbg !2464
  call void @llvm.dbg.value(metadata i16 %5, metadata !2461, metadata !DIExpression()), !dbg !2462
  switch i32 %1, label %32 [
    i32 1, label %6
    i32 0, label %18
  ], !dbg !2465

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !2460, metadata !DIExpression()), !dbg !2462
  %7 = trunc i32 %3 to i16, !dbg !2466
  switch i16 %7, label %32 [
    i16 0, label %8
    i16 1, label %13
  ], !dbg !2466

8:                                                ; preds = %6
  %9 = zext i16 %5 to i32, !dbg !2469
  %10 = shl nuw i32 1, %9, !dbg !2471
  %11 = load volatile i32, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !2472
  %12 = or i32 %11, %10, !dbg !2472
  store volatile i32 %12, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !2472
  br label %32, !dbg !2473

13:                                               ; preds = %6
  %14 = zext i16 %5 to i32, !dbg !2474
  %15 = shl nuw i32 1, %14, !dbg !2475
  %16 = load volatile i32, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !2476
  %17 = or i32 %16, %15, !dbg !2476
  store volatile i32 %17, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !2476
  br label %32, !dbg !2477

18:                                               ; preds = %2
  %19 = trunc i32 %3 to i16, !dbg !2478
  switch i16 %19, label %32 [
    i16 0, label %20
    i16 1, label %26
  ], !dbg !2478

20:                                               ; preds = %18
  %21 = zext i16 %5 to i32, !dbg !2481
  %22 = shl nuw i32 1, %21, !dbg !2483
  %23 = xor i32 %22, -1, !dbg !2484
  %24 = load volatile i32, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !2485
  %25 = and i32 %24, %23, !dbg !2485
  store volatile i32 %25, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !2485
  br label %32, !dbg !2486

26:                                               ; preds = %18
  %27 = zext i16 %5 to i32, !dbg !2487
  %28 = shl nuw i32 1, %27, !dbg !2488
  %29 = xor i32 %28, -1, !dbg !2489
  %30 = load volatile i32, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !2490
  %31 = and i32 %30, %29, !dbg !2490
  store volatile i32 %31, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !2490
  br label %32, !dbg !2491

32:                                               ; preds = %2, %18, %26, %20, %8, %13, %6
  ret void, !dbg !2492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halPinmuxTopOnPadFunc(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !2493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2499, metadata !DIExpression()), !dbg !2502
  call void @llvm.dbg.value(metadata i8 %1, metadata !2500, metadata !DIExpression()), !dbg !2502
  switch i32 %0, label %187 [
    i32 0, label %3
    i32 1, label %8
    i32 2, label %14
    i32 3, label %20
    i32 4, label %26
    i32 5, label %32
    i32 6, label %38
    i32 7, label %44
    i32 24, label %50
    i32 25, label %55
    i32 26, label %61
    i32 27, label %67
    i32 28, label %75
    i32 29, label %85
    i32 30, label %94
    i32 31, label %102
    i32 32, label %112
    i32 33, label %121
    i32 34, label %127
    i32 35, label %133
    i32 36, label %139
    i32 37, label %145
    i32 38, label %151
    i32 39, label %157
    i32 57, label %163
    i32 58, label %169
    i32 59, label %175
    i32 60, label %181
  ], !dbg !2503

3:                                                ; preds = %2
  %4 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2504
  call void @llvm.dbg.value(metadata i32 %4, metadata !2501, metadata !DIExpression()), !dbg !2502
  %5 = and i32 %4, -16, !dbg !2506
  call void @llvm.dbg.value(metadata i32 %5, metadata !2501, metadata !DIExpression()), !dbg !2502
  %6 = zext i8 %1 to i32, !dbg !2507
  %7 = or i32 %5, %6, !dbg !2508
  store volatile i32 %7, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2509
  br label %187, !dbg !2510

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2511
  call void @llvm.dbg.value(metadata i32 %9, metadata !2501, metadata !DIExpression()), !dbg !2502
  %10 = and i32 %9, -241, !dbg !2512
  call void @llvm.dbg.value(metadata i32 %10, metadata !2501, metadata !DIExpression()), !dbg !2502
  %11 = zext i8 %1 to i32, !dbg !2513
  %12 = shl nuw nsw i32 %11, 4, !dbg !2514
  %13 = or i32 %10, %12, !dbg !2515
  store volatile i32 %13, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2516
  br label %187, !dbg !2517

14:                                               ; preds = %2
  %15 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2518
  call void @llvm.dbg.value(metadata i32 %15, metadata !2501, metadata !DIExpression()), !dbg !2502
  %16 = and i32 %15, -3841, !dbg !2519
  call void @llvm.dbg.value(metadata i32 %16, metadata !2501, metadata !DIExpression()), !dbg !2502
  %17 = zext i8 %1 to i32, !dbg !2520
  %18 = shl nuw nsw i32 %17, 8, !dbg !2521
  %19 = or i32 %16, %18, !dbg !2522
  store volatile i32 %19, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2523
  br label %187, !dbg !2524

20:                                               ; preds = %2
  %21 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2525
  call void @llvm.dbg.value(metadata i32 %21, metadata !2501, metadata !DIExpression()), !dbg !2502
  %22 = and i32 %21, -61441, !dbg !2526
  call void @llvm.dbg.value(metadata i32 %22, metadata !2501, metadata !DIExpression()), !dbg !2502
  %23 = zext i8 %1 to i32, !dbg !2527
  %24 = shl nuw nsw i32 %23, 12, !dbg !2528
  %25 = or i32 %22, %24, !dbg !2529
  store volatile i32 %25, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2530
  br label %187, !dbg !2531

26:                                               ; preds = %2
  %27 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2532
  call void @llvm.dbg.value(metadata i32 %27, metadata !2501, metadata !DIExpression()), !dbg !2502
  %28 = and i32 %27, -983041, !dbg !2533
  call void @llvm.dbg.value(metadata i32 %28, metadata !2501, metadata !DIExpression()), !dbg !2502
  %29 = zext i8 %1 to i32, !dbg !2534
  %30 = shl nuw nsw i32 %29, 16, !dbg !2535
  %31 = or i32 %28, %30, !dbg !2536
  store volatile i32 %31, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2537
  br label %187, !dbg !2538

32:                                               ; preds = %2
  %33 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2539
  call void @llvm.dbg.value(metadata i32 %33, metadata !2501, metadata !DIExpression()), !dbg !2502
  %34 = and i32 %33, -15728641, !dbg !2540
  call void @llvm.dbg.value(metadata i32 %34, metadata !2501, metadata !DIExpression()), !dbg !2502
  %35 = zext i8 %1 to i32, !dbg !2541
  %36 = shl nuw nsw i32 %35, 20, !dbg !2542
  %37 = or i32 %34, %36, !dbg !2543
  store volatile i32 %37, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2544
  br label %187, !dbg !2545

38:                                               ; preds = %2
  %39 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2546
  call void @llvm.dbg.value(metadata i32 %39, metadata !2501, metadata !DIExpression()), !dbg !2502
  %40 = and i32 %39, -251658241, !dbg !2547
  call void @llvm.dbg.value(metadata i32 %40, metadata !2501, metadata !DIExpression()), !dbg !2502
  %41 = zext i8 %1 to i32, !dbg !2548
  %42 = shl nuw i32 %41, 24, !dbg !2549
  %43 = or i32 %40, %42, !dbg !2550
  store volatile i32 %43, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2551
  br label %187, !dbg !2552

44:                                               ; preds = %2
  %45 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2553
  call void @llvm.dbg.value(metadata i32 %45, metadata !2501, metadata !DIExpression()), !dbg !2502
  %46 = and i32 %45, 268435455, !dbg !2554
  call void @llvm.dbg.value(metadata i32 %46, metadata !2501, metadata !DIExpression()), !dbg !2502
  %47 = zext i8 %1 to i32, !dbg !2555
  %48 = shl i32 %47, 28, !dbg !2556
  %49 = or i32 %46, %48, !dbg !2557
  store volatile i32 %49, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2558
  br label %187, !dbg !2559

50:                                               ; preds = %2
  %51 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2560
  call void @llvm.dbg.value(metadata i32 %51, metadata !2501, metadata !DIExpression()), !dbg !2502
  %52 = and i32 %51, -16, !dbg !2561
  call void @llvm.dbg.value(metadata i32 %52, metadata !2501, metadata !DIExpression()), !dbg !2502
  %53 = zext i8 %1 to i32, !dbg !2562
  %54 = or i32 %52, %53, !dbg !2563
  store volatile i32 %54, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2564
  br label %187, !dbg !2565

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2566
  call void @llvm.dbg.value(metadata i32 %56, metadata !2501, metadata !DIExpression()), !dbg !2502
  %57 = and i32 %56, -241, !dbg !2567
  call void @llvm.dbg.value(metadata i32 %57, metadata !2501, metadata !DIExpression()), !dbg !2502
  %58 = zext i8 %1 to i32, !dbg !2568
  %59 = shl nuw nsw i32 %58, 4, !dbg !2569
  %60 = or i32 %57, %59, !dbg !2570
  store volatile i32 %60, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2571
  br label %187, !dbg !2572

61:                                               ; preds = %2
  %62 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2573
  call void @llvm.dbg.value(metadata i32 %62, metadata !2501, metadata !DIExpression()), !dbg !2502
  %63 = and i32 %62, -3841, !dbg !2574
  call void @llvm.dbg.value(metadata i32 %63, metadata !2501, metadata !DIExpression()), !dbg !2502
  %64 = zext i8 %1 to i32, !dbg !2575
  %65 = shl nuw nsw i32 %64, 8, !dbg !2576
  %66 = or i32 %63, %65, !dbg !2577
  store volatile i32 %66, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2578
  br label %187, !dbg !2579

67:                                               ; preds = %2
  %68 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2580
  call void @llvm.dbg.value(metadata i32 %68, metadata !2501, metadata !DIExpression()), !dbg !2502
  %69 = and i32 %68, -61441, !dbg !2581
  call void @llvm.dbg.value(metadata i32 %69, metadata !2501, metadata !DIExpression()), !dbg !2502
  %70 = zext i8 %1 to i32, !dbg !2582
  %71 = shl nuw nsw i32 %70, 12, !dbg !2583
  %72 = or i32 %69, %71, !dbg !2584
  store volatile i32 %72, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2585
  switch i8 %1, label %187 [
    i8 5, label %73
    i8 4, label %73
    i8 2, label %73
  ], !dbg !2586

73:                                               ; preds = %67, %67, %67
  %74 = tail call i32 @halGPIO_ConfDirection(i32 noundef 27, i8 noundef zeroext 0) #15, !dbg !2588
  br label %187, !dbg !2590

75:                                               ; preds = %2
  %76 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2591
  call void @llvm.dbg.value(metadata i32 %76, metadata !2501, metadata !DIExpression()), !dbg !2502
  %77 = and i32 %76, -983041, !dbg !2592
  call void @llvm.dbg.value(metadata i32 %77, metadata !2501, metadata !DIExpression()), !dbg !2502
  %78 = zext i8 %1 to i32, !dbg !2593
  %79 = shl nuw nsw i32 %78, 16, !dbg !2594
  %80 = or i32 %77, %79, !dbg !2595
  store volatile i32 %80, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2596
  %81 = and i8 %1, -2, !dbg !2597
  %82 = icmp eq i8 %81, 4, !dbg !2597
  br i1 %82, label %83, label %187, !dbg !2597

83:                                               ; preds = %75
  %84 = tail call i32 @halGPIO_ConfDirection(i32 noundef 28, i8 noundef zeroext 0) #15, !dbg !2599
  br label %187, !dbg !2601

85:                                               ; preds = %2
  %86 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2602
  call void @llvm.dbg.value(metadata i32 %86, metadata !2501, metadata !DIExpression()), !dbg !2502
  %87 = and i32 %86, -15728641, !dbg !2603
  call void @llvm.dbg.value(metadata i32 %87, metadata !2501, metadata !DIExpression()), !dbg !2502
  %88 = zext i8 %1 to i32, !dbg !2604
  %89 = shl nuw nsw i32 %88, 20, !dbg !2605
  %90 = or i32 %87, %89, !dbg !2606
  store volatile i32 %90, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2607
  %91 = icmp eq i8 %1, 6, !dbg !2608
  br i1 %91, label %92, label %187, !dbg !2610

92:                                               ; preds = %85
  %93 = tail call i32 @halGPIO_ConfDirection(i32 noundef 29, i8 noundef zeroext 0) #15, !dbg !2611
  br label %187, !dbg !2613

94:                                               ; preds = %2
  %95 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2614
  call void @llvm.dbg.value(metadata i32 %95, metadata !2501, metadata !DIExpression()), !dbg !2502
  %96 = and i32 %95, -251658241, !dbg !2615
  call void @llvm.dbg.value(metadata i32 %96, metadata !2501, metadata !DIExpression()), !dbg !2502
  %97 = zext i8 %1 to i32, !dbg !2616
  %98 = shl nuw i32 %97, 24, !dbg !2617
  %99 = or i32 %96, %98, !dbg !2618
  store volatile i32 %99, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2619
  switch i8 %1, label %187 [
    i8 7, label %100
    i8 4, label %100
  ], !dbg !2620

100:                                              ; preds = %94, %94
  %101 = tail call i32 @halGPIO_ConfDirection(i32 noundef 30, i8 noundef zeroext 0) #15, !dbg !2622
  br label %187, !dbg !2624

102:                                              ; preds = %2
  %103 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2625
  call void @llvm.dbg.value(metadata i32 %103, metadata !2501, metadata !DIExpression()), !dbg !2502
  %104 = and i32 %103, 268435455, !dbg !2626
  call void @llvm.dbg.value(metadata i32 %104, metadata !2501, metadata !DIExpression()), !dbg !2502
  %105 = zext i8 %1 to i32, !dbg !2627
  %106 = shl i32 %105, 28, !dbg !2628
  %107 = or i32 %104, %106, !dbg !2629
  store volatile i32 %107, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !2630
  %108 = and i8 %1, -3, !dbg !2631
  %109 = icmp eq i8 %108, 4, !dbg !2631
  br i1 %109, label %110, label %187, !dbg !2631

110:                                              ; preds = %102
  %111 = tail call i32 @halGPIO_ConfDirection(i32 noundef 31, i8 noundef zeroext 0) #15, !dbg !2633
  br label %187, !dbg !2635

112:                                              ; preds = %2
  %113 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2636
  call void @llvm.dbg.value(metadata i32 %113, metadata !2501, metadata !DIExpression()), !dbg !2502
  %114 = and i32 %113, -16, !dbg !2637
  call void @llvm.dbg.value(metadata i32 %114, metadata !2501, metadata !DIExpression()), !dbg !2502
  %115 = zext i8 %1 to i32, !dbg !2638
  %116 = or i32 %114, %115, !dbg !2639
  store volatile i32 %116, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2640
  %117 = and i8 %1, -3, !dbg !2641
  %118 = icmp eq i8 %117, 4, !dbg !2641
  br i1 %118, label %119, label %187, !dbg !2641

119:                                              ; preds = %112
  %120 = tail call i32 @halGPIO_ConfDirection(i32 noundef 32, i8 noundef zeroext 0) #15, !dbg !2643
  br label %187, !dbg !2645

121:                                              ; preds = %2
  %122 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2646
  call void @llvm.dbg.value(metadata i32 %122, metadata !2501, metadata !DIExpression()), !dbg !2502
  %123 = and i32 %122, -241, !dbg !2647
  call void @llvm.dbg.value(metadata i32 %123, metadata !2501, metadata !DIExpression()), !dbg !2502
  %124 = zext i8 %1 to i32, !dbg !2648
  %125 = shl nuw nsw i32 %124, 4, !dbg !2649
  %126 = or i32 %123, %125, !dbg !2650
  store volatile i32 %126, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2651
  br label %187, !dbg !2652

127:                                              ; preds = %2
  %128 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2653
  call void @llvm.dbg.value(metadata i32 %128, metadata !2501, metadata !DIExpression()), !dbg !2502
  %129 = and i32 %128, -3841, !dbg !2654
  call void @llvm.dbg.value(metadata i32 %129, metadata !2501, metadata !DIExpression()), !dbg !2502
  %130 = zext i8 %1 to i32, !dbg !2655
  %131 = shl nuw nsw i32 %130, 8, !dbg !2656
  %132 = or i32 %129, %131, !dbg !2657
  store volatile i32 %132, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2658
  br label %187, !dbg !2659

133:                                              ; preds = %2
  %134 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2660
  call void @llvm.dbg.value(metadata i32 %134, metadata !2501, metadata !DIExpression()), !dbg !2502
  %135 = and i32 %134, -61441, !dbg !2661
  call void @llvm.dbg.value(metadata i32 %135, metadata !2501, metadata !DIExpression()), !dbg !2502
  %136 = zext i8 %1 to i32, !dbg !2662
  %137 = shl nuw nsw i32 %136, 12, !dbg !2663
  %138 = or i32 %135, %137, !dbg !2664
  store volatile i32 %138, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2665
  br label %187, !dbg !2666

139:                                              ; preds = %2
  %140 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2667
  call void @llvm.dbg.value(metadata i32 %140, metadata !2501, metadata !DIExpression()), !dbg !2502
  %141 = and i32 %140, -983041, !dbg !2668
  call void @llvm.dbg.value(metadata i32 %141, metadata !2501, metadata !DIExpression()), !dbg !2502
  %142 = zext i8 %1 to i32, !dbg !2669
  %143 = shl nuw nsw i32 %142, 16, !dbg !2670
  %144 = or i32 %141, %143, !dbg !2671
  store volatile i32 %144, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2672
  br label %187, !dbg !2673

145:                                              ; preds = %2
  %146 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2674
  call void @llvm.dbg.value(metadata i32 %146, metadata !2501, metadata !DIExpression()), !dbg !2502
  %147 = and i32 %146, -15728641, !dbg !2675
  call void @llvm.dbg.value(metadata i32 %147, metadata !2501, metadata !DIExpression()), !dbg !2502
  %148 = zext i8 %1 to i32, !dbg !2676
  %149 = shl nuw nsw i32 %148, 20, !dbg !2677
  %150 = or i32 %147, %149, !dbg !2678
  store volatile i32 %150, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2679
  br label %187, !dbg !2680

151:                                              ; preds = %2
  %152 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2681
  call void @llvm.dbg.value(metadata i32 %152, metadata !2501, metadata !DIExpression()), !dbg !2502
  %153 = and i32 %152, -251658241, !dbg !2682
  call void @llvm.dbg.value(metadata i32 %153, metadata !2501, metadata !DIExpression()), !dbg !2502
  %154 = zext i8 %1 to i32, !dbg !2683
  %155 = shl nuw i32 %154, 24, !dbg !2684
  %156 = or i32 %153, %155, !dbg !2685
  store volatile i32 %156, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2686
  br label %187, !dbg !2687

157:                                              ; preds = %2
  %158 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2688
  call void @llvm.dbg.value(metadata i32 %158, metadata !2501, metadata !DIExpression()), !dbg !2502
  %159 = and i32 %158, 268435455, !dbg !2689
  call void @llvm.dbg.value(metadata i32 %159, metadata !2501, metadata !DIExpression()), !dbg !2502
  %160 = zext i8 %1 to i32, !dbg !2690
  %161 = shl i32 %160, 28, !dbg !2691
  %162 = or i32 %159, %161, !dbg !2692
  store volatile i32 %162, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !2693
  br label %187, !dbg !2694

163:                                              ; preds = %2
  %164 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !2695
  call void @llvm.dbg.value(metadata i32 %164, metadata !2501, metadata !DIExpression()), !dbg !2502
  %165 = and i32 %164, -241, !dbg !2696
  call void @llvm.dbg.value(metadata i32 %165, metadata !2501, metadata !DIExpression()), !dbg !2502
  %166 = zext i8 %1 to i32, !dbg !2697
  %167 = shl nuw nsw i32 %166, 4, !dbg !2698
  %168 = or i32 %165, %167, !dbg !2699
  store volatile i32 %168, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !2700
  br label %187, !dbg !2701

169:                                              ; preds = %2
  %170 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !2702
  call void @llvm.dbg.value(metadata i32 %170, metadata !2501, metadata !DIExpression()), !dbg !2502
  %171 = and i32 %170, -3841, !dbg !2703
  call void @llvm.dbg.value(metadata i32 %171, metadata !2501, metadata !DIExpression()), !dbg !2502
  %172 = zext i8 %1 to i32, !dbg !2704
  %173 = shl nuw nsw i32 %172, 8, !dbg !2705
  %174 = or i32 %171, %173, !dbg !2706
  store volatile i32 %174, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !2707
  br label %187, !dbg !2708

175:                                              ; preds = %2
  %176 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !2709
  call void @llvm.dbg.value(metadata i32 %176, metadata !2501, metadata !DIExpression()), !dbg !2502
  %177 = and i32 %176, -61441, !dbg !2710
  call void @llvm.dbg.value(metadata i32 %177, metadata !2501, metadata !DIExpression()), !dbg !2502
  %178 = zext i8 %1 to i32, !dbg !2711
  %179 = shl nuw nsw i32 %178, 12, !dbg !2712
  %180 = or i32 %177, %179, !dbg !2713
  store volatile i32 %180, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !2714
  br label %187, !dbg !2715

181:                                              ; preds = %2
  %182 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !2716
  call void @llvm.dbg.value(metadata i32 %182, metadata !2501, metadata !DIExpression()), !dbg !2502
  %183 = and i32 %182, -983041, !dbg !2717
  call void @llvm.dbg.value(metadata i32 %183, metadata !2501, metadata !DIExpression()), !dbg !2502
  %184 = zext i8 %1 to i32, !dbg !2718
  %185 = shl nuw nsw i32 %184, 16, !dbg !2719
  %186 = or i32 %183, %185, !dbg !2720
  store volatile i32 %186, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !2721
  br label %187, !dbg !2722

187:                                              ; preds = %94, %67, %2, %119, %112, %110, %102, %100, %85, %92, %83, %75, %73, %181, %175, %169, %163, %157, %151, %145, %139, %133, %127, %121, %61, %55, %50, %44, %38, %32, %26, %20, %14, %8, %3
  ret void, !dbg !2723
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NVIC_SetupVectorTable(i32 noundef %0) local_unnamed_addr #0 !dbg !2724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2728, metadata !DIExpression()), !dbg !2729
  store volatile i32 %0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !2730
  tail call void asm sideeffect "dsb", ""() #14, !dbg !2731, !srcloc !2732
  tail call void asm sideeffect "isb", ""() #14, !dbg !2733, !srcloc !2734
  ret void, !dbg !2735
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @NVIC_SWInt(i32 noundef %0) local_unnamed_addr #5 !dbg !2736 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2740, metadata !DIExpression()), !dbg !2741
  store volatile i32 %0, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !2742
  ret void, !dbg !2743
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".ramTEXT" !dbg !2744 {
  %1 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #14, !dbg !2747, !srcloc !2754
  call void @llvm.dbg.value(metadata i32 %1, metadata !2751, metadata !DIExpression()) #14, !dbg !2755
  call void @llvm.dbg.value(metadata i32 %1, metadata !2746, metadata !DIExpression()), !dbg !2756
  tail call void asm sideeffect "cpsid i", "~{memory}"() #14, !dbg !2757, !srcloc !2760
  ret i32 %1, !dbg !2761
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !2762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2764, metadata !DIExpression()), !dbg !2765
  call void @llvm.dbg.value(metadata i32 %0, metadata !2766, metadata !DIExpression()) #14, !dbg !2769
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %0) #14, !dbg !2772, !srcloc !2773
  ret void, !dbg !2774
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinmux_config(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2779, metadata !DIExpression()), !dbg !2782
  call void @llvm.dbg.value(metadata i32 %1, metadata !2780, metadata !DIExpression()), !dbg !2782
  switch i32 %0, label %5 [
    i32 0, label %3
    i32 1, label %3
    i32 2, label %3
    i32 3, label %3
    i32 4, label %3
    i32 5, label %3
    i32 6, label %3
    i32 7, label %3
    i32 24, label %3
    i32 25, label %3
    i32 26, label %3
    i32 27, label %3
    i32 28, label %3
    i32 29, label %3
    i32 30, label %3
    i32 31, label %3
    i32 32, label %3
    i32 33, label %3
    i32 34, label %3
    i32 35, label %3
    i32 36, label %3
    i32 37, label %3
    i32 38, label %3
    i32 39, label %3
    i32 57, label %3
    i32 58, label %3
    i32 59, label %3
    i32 60, label %3
  ], !dbg !2783

3:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  call void @llvm.dbg.value(metadata i32 %0, metadata !2781, metadata !DIExpression()), !dbg !2782
  %4 = trunc i32 %1 to i8, !dbg !2784
  tail call void @halPinmuxTopOnPadFunc(i32 noundef %0, i8 noundef zeroext %4) #15, !dbg !2785
  br label %5, !dbg !2786

5:                                                ; preds = %2, %3
  %6 = phi i32 [ 0, %3 ], [ -1, %2 ], !dbg !2782
  ret i32 %6, !dbg !2787
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GPT_return_current_count() local_unnamed_addr #7 section ".ramTEXT" !dbg !2788 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096824268 to i32*), align 4, !dbg !2793
  call void @llvm.dbg.value(metadata i32 %1, metadata !2792, metadata !DIExpression()), !dbg !2794
  ret i32 %1, !dbg !2795
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_get_systime() local_unnamed_addr #7 section ".ramTEXT" !dbg !2796 {
  %1 = tail call i32 @sfc_GPT_return_current_count() #17, !dbg !2797
  ret i32 %1, !dbg !2798
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_time(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2801, metadata !DIExpression()), !dbg !2804
  %2 = tail call i32 @sfc_get_systime() #17, !dbg !2805
  %3 = add i32 %2, %0, !dbg !2806
  %4 = xor i32 %3, -1, !dbg !2807
  call void @llvm.dbg.value(metadata i32 %3, metadata !2802, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2804
  %5 = tail call i32 @sfc_get_systime() #17, !dbg !2808
  call void @llvm.dbg.value(metadata i32 %5, metadata !2803, metadata !DIExpression()), !dbg !2804
  %6 = add i32 %5, %4, !dbg !2809
  %7 = icmp slt i32 %6, 0, !dbg !2809
  br i1 %7, label %8, label %12, !dbg !2810

8:                                                ; preds = %1, %8
  %9 = tail call i32 @sfc_get_systime() #17, !dbg !2811
  call void @llvm.dbg.value(metadata i32 %9, metadata !2803, metadata !DIExpression()), !dbg !2804
  %10 = add i32 %9, %4, !dbg !2809
  %11 = icmp slt i32 %10, 0, !dbg !2809
  br i1 %11, label %8, label %12, !dbg !2810, !llvm.loop !2813

12:                                               ; preds = %8, %1
  ret void, !dbg !2815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_ms(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2816 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2818, metadata !DIExpression()), !dbg !2819
  %2 = shl i32 %0, 5, !dbg !2820
  tail call void @sfc_delay_time(i32 noundef %2) #17, !dbg !2821
  ret void, !dbg !2822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfc_getMaxGPRamSize() local_unnamed_addr #8 section ".ramTEXT" !dbg !2823 {
  ret i32 128, !dbg !2826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_Init(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !2827 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2829, metadata !DIExpression()), !dbg !2831
  store i32 0, i32* @g_sfc_security_enable, align 4, !dbg !2832
  store volatile i32 65536, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2833
  store volatile i32 185300880, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2834
  store volatile i32 -1296039920, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2835
  store volatile i32 0, i32* inttoptr (i32 -2096693236 to i32*), align 4, !dbg !2836
  store volatile i32 0, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !2837
  store volatile i32 0, i32* inttoptr (i32 -2096693220 to i32*), align 4, !dbg !2838
  %2 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2839
  call void @llvm.dbg.value(metadata i32 %2, metadata !2830, metadata !DIExpression()), !dbg !2831
  %3 = and i32 %2, -4194305, !dbg !2840
  call void @llvm.dbg.value(metadata i32 %3, metadata !2830, metadata !DIExpression()), !dbg !2831
  store volatile i32 %3, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2841
  tail call void @sfc_delay_ms(i32 noundef 1) #17, !dbg !2842
  %4 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2843
  call void @llvm.dbg.value(metadata i32 %4, metadata !2830, metadata !DIExpression()), !dbg !2831
  %5 = or i32 %4, 4194304, !dbg !2844
  call void @llvm.dbg.value(metadata i32 %5, metadata !2830, metadata !DIExpression()), !dbg !2831
  store volatile i32 %5, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2845
  tail call void @sfc_delay_ms(i32 noundef 1) #17, !dbg !2846
  %6 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2847
  call void @llvm.dbg.value(metadata i32 %6, metadata !2830, metadata !DIExpression()), !dbg !2831
  %7 = and i32 %6, -4194305, !dbg !2848
  call void @llvm.dbg.value(metadata i32 %7, metadata !2830, metadata !DIExpression()), !dbg !2831
  store volatile i32 %7, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2849
  tail call void @sfc_delay_ms(i32 noundef 1) #17, !dbg !2850
  %8 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2851
  call void @llvm.dbg.value(metadata i32 %8, metadata !2830, metadata !DIExpression()), !dbg !2831
  %9 = or i32 %8, 4194304, !dbg !2852
  call void @llvm.dbg.value(metadata i32 %9, metadata !2830, metadata !DIExpression()), !dbg !2831
  store volatile i32 %9, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !2853
  tail call void @sfc_delay_ms(i32 noundef 1) #17, !dbg !2854
  %10 = icmp eq i32 %0, 0, !dbg !2855
  br i1 %10, label %12, label %11, !dbg !2857

11:                                               ; preds = %1
  store i32 1, i32* @g_sfc_security_enable, align 4, !dbg !2858
  store volatile i32 268435456, i32* inttoptr (i32 -2096660480 to i32*), align 32768, !dbg !2860
  store volatile i32 268435456, i32* inttoptr (i32 -2096660476 to i32*), align 4, !dbg !2861
  store volatile i32 3, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2862
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2863
  store volatile i32 135, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2864
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2865
  store volatile i32 69632, i32* inttoptr (i32 -2096660460 to i32*), align 4, !dbg !2866
  br label %12, !dbg !2867

12:                                               ; preds = %11, %1
  ret void, !dbg !2868
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GetDirectMode() local_unnamed_addr #7 section ".ramTEXT" !dbg !2869 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2873
  call void @llvm.dbg.value(metadata i32 %1, metadata !2871, metadata !DIExpression(DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !2874
  %2 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2875
  %3 = lshr i32 %2, 4, !dbg !2876
  %4 = and i32 %3, 7, !dbg !2876
  call void @llvm.dbg.value(metadata i32 %4, metadata !2872, metadata !DIExpression()), !dbg !2874
  %5 = icmp ne i32 %4, 7, !dbg !2877
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %5, i1 %7, i1 false, !dbg !2879
  call void @llvm.dbg.value(metadata i32 %6, metadata !2871, metadata !DIExpression()), !dbg !2874
  %9 = icmp ult i32 %4, 2, !dbg !2879
  %10 = zext i1 %9 to i32, !dbg !2879
  %11 = select i1 %8, i32 %10, i32 3, !dbg !2879
  ret i32 %11, !dbg !2880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_direct_read_setup(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 section ".ramTEXT" !dbg !2881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2885, metadata !DIExpression()), !dbg !2888
  call void @llvm.dbg.value(metadata i32 %1, metadata !2886, metadata !DIExpression()), !dbg !2888
  call void @llvm.dbg.value(metadata i32 0, metadata !2887, metadata !DIExpression()), !dbg !2888
  %3 = add i32 %1, -1, !dbg !2889
  %4 = icmp ult i32 %3, 3, !dbg !2889
  br i1 %4, label %5, label %8, !dbg !2889

5:                                                ; preds = %2
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.sfc_direct_read_setup, i32 0, i32 %3, !dbg !2889
  %7 = load i32, i32* %6, align 4, !dbg !2889
  br label %8, !dbg !2889

8:                                                ; preds = %5, %2
  %9 = phi i32 [ 0, %2 ], [ %7, %5 ], !dbg !2888
  call void @llvm.dbg.value(metadata i32 %9, metadata !2887, metadata !DIExpression()), !dbg !2888
  %10 = or i32 %9, %0, !dbg !2890
  call void @llvm.dbg.value(metadata i32 %10, metadata !2887, metadata !DIExpression()), !dbg !2888
  store volatile i32 %10, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !2891
  ret void, !dbg !2892
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sfc_Command_List(i8* noundef readonly %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !2893 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2897, metadata !DIExpression()), !dbg !2901
  call void @llvm.dbg.value(metadata i32 0, metadata !2898, metadata !DIExpression()), !dbg !2901
  call void @llvm.dbg.value(metadata i32 0, metadata !2900, metadata !DIExpression()), !dbg !2901
  %2 = icmp eq i8* %0, null, !dbg !2902
  br i1 %2, label %25, label %3, !dbg !2904

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2905
  call void @llvm.dbg.value(metadata i32 %4, metadata !2899, metadata !DIExpression()), !dbg !2901
  br label %5, !dbg !2906

5:                                                ; preds = %12, %3
  %6 = phi i32 [ 0, %3 ], [ %23, %12 ], !dbg !2901
  %7 = phi i32 [ 0, %3 ], [ %13, %12 ], !dbg !2901
  call void @llvm.dbg.value(metadata i32 %7, metadata !2900, metadata !DIExpression()), !dbg !2901
  call void @llvm.dbg.value(metadata i32 %6, metadata !2898, metadata !DIExpression()), !dbg !2901
  %8 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !2907
  %9 = load i8, i8* %8, align 1, !dbg !2907
  switch i8 %9, label %11 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %10
  ], !dbg !2909

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 1, metadata !2900, metadata !DIExpression()), !dbg !2901
  br label %12, !dbg !2910

11:                                               ; preds = %5
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !2912
  br label %25, !dbg !2913

12:                                               ; preds = %5, %5, %10
  %13 = phi i32 [ 1, %10 ], [ %7, %5 ], [ %7, %5 ], !dbg !2901
  call void @llvm.dbg.value(metadata i32 %13, metadata !2900, metadata !DIExpression()), !dbg !2901
  %14 = add i32 %6, 2, !dbg !2914
  %15 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !2915
  %16 = add i32 %6, 1, !dbg !2916
  %17 = getelementptr inbounds i8, i8* %0, i32 %16, !dbg !2917
  %18 = load i8, i8* %17, align 1, !dbg !2917
  %19 = zext i8 %18 to i32, !dbg !2917
  %20 = tail call i32 @sfc_transfer(i8* noundef nonnull %15, i32 noundef %19, i8* noundef null, i32 noundef 0, i32 noundef %13) #17, !dbg !2918
  %21 = load i8, i8* %17, align 1, !dbg !2919
  %22 = zext i8 %21 to i32, !dbg !2919
  %23 = add i32 %14, %22, !dbg !2920
  call void @llvm.dbg.value(metadata i32 %23, metadata !2898, metadata !DIExpression()), !dbg !2901
  %24 = tail call i32 @flash_wait_ready(i32 noundef 1) #15, !dbg !2921
  br label %5, !dbg !2906, !llvm.loop !2922

25:                                               ; preds = %1, %11
  ret void, !dbg !2924
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_transfer(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !2925 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2930, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 %1, metadata !2931, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i8* %2, metadata !2932, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 %3, metadata !2933, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 %4, metadata !2934, metadata !DIExpression()), !dbg !2941
  %7 = bitcast i32* %6 to i8*, !dbg !2942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #14, !dbg !2942
  %8 = add i32 %3, %1, !dbg !2943
  %9 = icmp ugt i32 %8, 160, !dbg !2945
  br i1 %9, label %59, label %10, !dbg !2946

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !2938, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 0, metadata !2936, metadata !DIExpression()), !dbg !2941
  %11 = icmp eq i32 %1, 0, !dbg !2947
  br i1 %11, label %41, label %12, !dbg !2950

12:                                               ; preds = %10, %38
  %13 = phi i8* [ %39, %38 ], [ inttoptr (i32 -2096691200 to i8*), %10 ]
  %14 = phi i32 [ %31, %38 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !2938, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 %14, metadata !2936, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 0, metadata !2937, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 0, metadata !2935, metadata !DIExpression()), !dbg !2941
  store i32 0, i32* %6, align 4, !dbg !2951
  call void @llvm.dbg.value(metadata i32 0, metadata !2937, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 %14, metadata !2936, metadata !DIExpression()), !dbg !2941
  %15 = icmp ult i32 %14, %1, !dbg !2954
  br i1 %15, label %16, label %29, !dbg !2956

16:                                               ; preds = %12, %16
  %17 = phi i32 [ %23, %16 ], [ 0, %12 ]
  %18 = phi i32 [ %22, %16 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !2937, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 %18, metadata !2936, metadata !DIExpression()), !dbg !2941
  %19 = getelementptr inbounds i8, i8* %0, i32 %18, !dbg !2957
  %20 = load i8, i8* %19, align 1, !dbg !2957
  %21 = getelementptr inbounds i8, i8* %7, i32 %17, !dbg !2959
  store i8 %20, i8* %21, align 1, !dbg !2960
  %22 = add nuw i32 %18, 1, !dbg !2961
  call void @llvm.dbg.value(metadata i32 %22, metadata !2936, metadata !DIExpression()), !dbg !2941
  %23 = add nuw nsw i32 %17, 1, !dbg !2962
  call void @llvm.dbg.value(metadata i32 %23, metadata !2937, metadata !DIExpression()), !dbg !2941
  %24 = icmp ult i32 %22, %1, !dbg !2954
  %25 = icmp ult i32 %17, 3, !dbg !2963
  %26 = select i1 %24, i1 %25, i1 false, !dbg !2963
  br i1 %26, label %16, label %27, !dbg !2956, !llvm.loop !2964

27:                                               ; preds = %16
  %28 = load i32, i32* %6, align 4, !dbg !2966
  br label %29, !dbg !2966

29:                                               ; preds = %27, %12
  %30 = phi i32 [ 0, %12 ], [ %28, %27 ], !dbg !2966
  %31 = phi i32 [ %14, %12 ], [ %22, %27 ], !dbg !2967
  call void @llvm.dbg.value(metadata i32 %30, metadata !2935, metadata !DIExpression()), !dbg !2941
  %32 = bitcast i8* %13 to i32*, !dbg !2966
  store volatile i32 %30, i32* %32, align 4, !dbg !2966
  %33 = icmp eq i32 %31, 4, !dbg !2968
  %34 = load i32, i32* @g_sfc_security_enable, align 4
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %33, i1 %35, i1 false, !dbg !2970
  br i1 %36, label %37, label %38, !dbg !2970

37:                                               ; preds = %29
  store volatile i32 64, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2971
  store volatile i32 256, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2973
  br label %38, !dbg !2974

38:                                               ; preds = %29, %37
  %39 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !2975
  call void @llvm.dbg.value(metadata i8* %39, metadata !2938, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 %31, metadata !2936, metadata !DIExpression()), !dbg !2941
  %40 = icmp ult i32 %31, %1, !dbg !2947
  br i1 %40, label %12, label %41, !dbg !2950, !llvm.loop !2976

41:                                               ; preds = %38, %10
  %42 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !2978
  call void @llvm.dbg.value(metadata i32 %42, metadata !2940, metadata !DIExpression()), !dbg !2941
  %43 = load i32, i32* @g_sfc_security_enable, align 4, !dbg !2979
  %44 = icmp eq i32 %43, 0, !dbg !2979
  br i1 %44, label %46, label %45, !dbg !2981

45:                                               ; preds = %41
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !2982
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !2984
  br label %46, !dbg !2985

46:                                               ; preds = %45, %41
  store volatile i32 %1, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !2986
  store volatile i32 %3, i32* inttoptr (i32 -2096693228 to i32*), align 4, !dbg !2987
  tail call fastcc void @sfc_MacEnable(i32 noundef %4) #17, !dbg !2988
  tail call fastcc void @sfc_MacWaitReady() #17, !dbg !2989
  tail call void @restore_interrupt_mask(i32 noundef %42) #15, !dbg !2990
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -2096691200 to i8*), i32 %1), metadata !2938, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2941
  call void @llvm.dbg.value(metadata i8* %2, metadata !2932, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 0, metadata !2936, metadata !DIExpression()), !dbg !2941
  %47 = icmp eq i32 %3, 0, !dbg !2991
  br i1 %47, label %59, label %48, !dbg !2994

48:                                               ; preds = %46
  %49 = getelementptr inbounds i8, i8* inttoptr (i32 -2096691200 to i8*), i32 %1, !dbg !2995
  call void @llvm.dbg.value(metadata i8* %49, metadata !2938, metadata !DIExpression()), !dbg !2941
  br label %50, !dbg !2994

50:                                               ; preds = %48, %50
  %51 = phi i8* [ %56, %50 ], [ %2, %48 ]
  %52 = phi i8* [ %57, %50 ], [ %49, %48 ]
  %53 = phi i32 [ %55, %50 ], [ 0, %48 ]
  call void @llvm.dbg.value(metadata i8* %51, metadata !2932, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i8* %52, metadata !2938, metadata !DIExpression()), !dbg !2941
  call void @llvm.dbg.value(metadata i32 %53, metadata !2936, metadata !DIExpression()), !dbg !2941
  %54 = load volatile i8, i8* %52, align 1, !dbg !2996
  store i8 %54, i8* %51, align 1, !dbg !2998
  %55 = add nuw i32 %53, 1, !dbg !2999
  call void @llvm.dbg.value(metadata i32 %55, metadata !2936, metadata !DIExpression()), !dbg !2941
  %56 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !3000
  call void @llvm.dbg.value(metadata i8* %56, metadata !2932, metadata !DIExpression()), !dbg !2941
  %57 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !3001
  call void @llvm.dbg.value(metadata i8* %57, metadata !2938, metadata !DIExpression()), !dbg !2941
  %58 = icmp eq i32 %55, %3, !dbg !2991
  br i1 %58, label %59, label %50, !dbg !2994, !llvm.loop !3002

59:                                               ; preds = %50, %46, %5
  %60 = phi i32 [ -1, %5 ], [ 0, %46 ], [ %3, %50 ], !dbg !2941
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #14, !dbg !3004
  ret i32 %60, !dbg !3004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacEnable(i32 noundef %0) unnamed_addr #5 section ".ramTEXT" !dbg !3005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3007, metadata !DIExpression()), !dbg !3009
  %2 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3010
  call void @llvm.dbg.value(metadata i32 %2, metadata !3008, metadata !DIExpression()), !dbg !3009
  %3 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3011
  %4 = and i32 %3, 1, !dbg !3011
  %5 = or i32 %4, %0, !dbg !3013
  %6 = icmp eq i32 %5, 0, !dbg !3013
  %7 = or i32 %2, 16
  %8 = select i1 %6, i32 %2, i32 %7, !dbg !3013
  call void @llvm.dbg.value(metadata i32 %8, metadata !3008, metadata !DIExpression()), !dbg !3009
  %9 = or i32 %8, 8, !dbg !3014
  call void @llvm.dbg.value(metadata i32 %9, metadata !3008, metadata !DIExpression()), !dbg !3009
  store volatile i32 %9, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3015
  ret void, !dbg !3016
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacWaitReady() unnamed_addr #5 section ".ramTEXT" !dbg !3017 {
  tail call fastcc void @sfc_MacTrigger() #17, !dbg !3018
  tail call fastcc void @sfc_MacLeave() #17, !dbg !3019
  ret void, !dbg !3020
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacTrigger() unnamed_addr #5 section ".ramTEXT" !dbg !3021 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3025, metadata !DIExpression()), !dbg !3027
  call void @llvm.dbg.value(metadata i32 0, metadata !3026, metadata !DIExpression()), !dbg !3027
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3028
  call void @llvm.dbg.value(metadata i32 %1, metadata !3025, metadata !DIExpression()), !dbg !3027
  %2 = or i32 %1, 12, !dbg !3029
  call void @llvm.dbg.value(metadata i32 %2, metadata !3025, metadata !DIExpression()), !dbg !3027
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3030
  br label %3, !dbg !3031

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3032
  %5 = and i32 %4, 2, !dbg !3033
  %6 = icmp eq i32 %5, 0, !dbg !3034
  br i1 %6, label %3, label %7, !dbg !3031, !llvm.loop !3035

7:                                                ; preds = %3, %7
  %8 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3037
  %9 = and i32 %8, 1, !dbg !3038
  %10 = icmp eq i32 %9, 0, !dbg !3039
  br i1 %10, label %11, label %7, !dbg !3039, !llvm.loop !3040

11:                                               ; preds = %7
  ret void, !dbg !3042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacLeave() unnamed_addr #5 section ".ramTEXT" !dbg !3043 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3046
  call void @llvm.dbg.value(metadata i32 %1, metadata !3045, metadata !DIExpression()), !dbg !3047
  %2 = and i32 %1, -268435477, !dbg !3048
  call void @llvm.dbg.value(metadata i32 %2, metadata !3045, metadata !DIExpression()), !dbg !3047
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3049
  %3 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3050
  call void @llvm.dbg.value(metadata i32 %3, metadata !3045, metadata !DIExpression()), !dbg !3047
  %4 = and i32 %3, -9, !dbg !3051
  call void @llvm.dbg.value(metadata i32 %4, metadata !3045, metadata !DIExpression()), !dbg !3047
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3052
  ret void, !dbg !3053
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_clear_gpram() local_unnamed_addr #5 section ".ramTEXT" !dbg !3054 {
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !3057, metadata !DIExpression()), !dbg !3058
  call void @llvm.dbg.value(metadata i32 0, metadata !3056, metadata !DIExpression()), !dbg !3058
  br label %1, !dbg !3059

1:                                                ; preds = %0, %1
  %2 = phi i8* [ inttoptr (i32 -2096691200 to i8*), %0 ], [ %5, %1 ]
  %3 = phi i32 [ 0, %0 ], [ %6, %1 ]
  call void @llvm.dbg.value(metadata i8* %2, metadata !3057, metadata !DIExpression()), !dbg !3058
  call void @llvm.dbg.value(metadata i32 %3, metadata !3056, metadata !DIExpression()), !dbg !3058
  %4 = bitcast i8* %2 to i32*, !dbg !3061
  store volatile i32 0, i32* %4, align 4, !dbg !3061
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3064
  call void @llvm.dbg.value(metadata i8* %5, metadata !3057, metadata !DIExpression()), !dbg !3058
  %6 = add nuw nsw i32 %3, 1, !dbg !3065
  call void @llvm.dbg.value(metadata i32 %6, metadata !3056, metadata !DIExpression()), !dbg !3058
  %7 = icmp eq i32 %6, 40, !dbg !3066
  br i1 %7, label %8, label %1, !dbg !3059, !llvm.loop !3067

8:                                                ; preds = %1
  ret void, !dbg !3069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_read(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !3070 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3074, metadata !DIExpression()), !dbg !3078
  call void @llvm.dbg.value(metadata i32 %1, metadata !3075, metadata !DIExpression()), !dbg !3078
  call void @llvm.dbg.value(metadata i8* %2, metadata !3076, metadata !DIExpression()), !dbg !3078
  call void @llvm.dbg.value(metadata i32 %3, metadata !3077, metadata !DIExpression()), !dbg !3078
  %5 = tail call i32 @sfc_transfer(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef 0) #17, !dbg !3079
  ret i32 %5, !dbg !3080
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !3081 {
  %5 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3085, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.value(metadata i32 %1, metadata !3086, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.value(metadata i8* %2, metadata !3087, metadata !DIExpression()), !dbg !3094
  call void @llvm.dbg.value(metadata i32 %3, metadata !3088, metadata !DIExpression()), !dbg !3094
  %6 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 0, !dbg !3095
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #14, !dbg !3095
  call void @llvm.dbg.declare(metadata [160 x i8]* %5, metadata !3089, metadata !DIExpression()), !dbg !3096
  %7 = add i32 %3, %1, !dbg !3097
  call void @llvm.dbg.value(metadata i32 %7, metadata !3093, metadata !DIExpression()), !dbg !3094
  %8 = icmp ugt i32 %7, 159, !dbg !3098
  br i1 %8, label %9, label %12, !dbg !3100

9:                                                ; preds = %4
  %10 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 496) #15, !dbg !3101
  br label %11, !dbg !3101

11:                                               ; preds = %11, %9
  br label %11, !dbg !3101, !llvm.loop !3105

12:                                               ; preds = %4
  %13 = call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %0, i32 noundef %1) #15, !dbg !3106
  %14 = icmp ne i8* %2, null, !dbg !3107
  %15 = icmp ne i32 %3, 0
  %16 = and i1 %14, %15, !dbg !3109
  br i1 %16, label %17, label %20, !dbg !3109

17:                                               ; preds = %12
  %18 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 %1, !dbg !3110
  %19 = call i8* @memcpy(i8* noundef nonnull %18, i8* noundef nonnull %2, i32 noundef %3) #15, !dbg !3112
  br label %20, !dbg !3113

20:                                               ; preds = %17, %12
  %21 = call i32 @sfc_transfer(i8* noundef nonnull %6, i32 noundef %7, i8* noundef null, i32 noundef 0, i32 noundef 0) #17, !dbg !3114
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #14, !dbg !3115
  ret i32 %21, !dbg !3116
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_security_write_crc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3117 {
  %3 = alloca [160 x i8], align 1
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3121, metadata !DIExpression()), !dbg !3126
  call void @llvm.dbg.value(metadata i32 %1, metadata !3122, metadata !DIExpression()), !dbg !3126
  %5 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 0, !dbg !3127
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #14, !dbg !3127
  call void @llvm.dbg.declare(metadata [160 x i8]* %3, metadata !3123, metadata !DIExpression()), !dbg !3128
  %6 = bitcast i32* %4 to i8*, !dbg !3129
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14, !dbg !3129
  %7 = load volatile i32, i32* inttoptr (i32 -2096660420 to i32*), align 4, !dbg !3130
  call void @llvm.dbg.value(metadata i32 %7, metadata !3124, metadata !DIExpression()), !dbg !3126
  store i32 %7, i32* %4, align 4, !dbg !3131
  %8 = add i32 %1, 4, !dbg !3132
  call void @llvm.dbg.value(metadata i32 %8, metadata !3125, metadata !DIExpression()), !dbg !3126
  %9 = call i8* @memcpy(i8* noundef nonnull %5, i8* noundef %0, i32 noundef %1) #15, !dbg !3133
  %10 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 %1, !dbg !3134
  call void @llvm.dbg.value(metadata i32* %4, metadata !3124, metadata !DIExpression(DW_OP_deref)), !dbg !3126
  %11 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef nonnull %6, i32 noundef 4) #15, !dbg !3135
  %12 = call i32 @sfc_transfer(i8* noundef nonnull %5, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #17, !dbg !3136
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14, !dbg !3137
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #14, !dbg !3137
  ret i32 %12, !dbg !3138
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !3139 {
  %6 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3141, metadata !DIExpression()), !dbg !3148
  call void @llvm.dbg.value(metadata i32 %1, metadata !3142, metadata !DIExpression()), !dbg !3148
  call void @llvm.dbg.value(metadata i8* %2, metadata !3143, metadata !DIExpression()), !dbg !3148
  call void @llvm.dbg.value(metadata i32 %3, metadata !3144, metadata !DIExpression()), !dbg !3148
  call void @llvm.dbg.value(metadata i32 %4, metadata !3145, metadata !DIExpression()), !dbg !3148
  %7 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 0, !dbg !3149
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #14, !dbg !3149
  call void @llvm.dbg.declare(metadata [160 x i8]* %6, metadata !3146, metadata !DIExpression()), !dbg !3150
  %8 = add i32 %3, %1, !dbg !3151
  call void @llvm.dbg.value(metadata i32 %8, metadata !3147, metadata !DIExpression()), !dbg !3148
  %9 = icmp ugt i32 %8, 160, !dbg !3152
  br i1 %9, label %10, label %13, !dbg !3154

10:                                               ; preds = %5
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 544) #15, !dbg !3155
  br label %12, !dbg !3155

12:                                               ; preds = %12, %10
  br label %12, !dbg !3155, !llvm.loop !3159

13:                                               ; preds = %5
  %14 = call i8* @memcpy(i8* noundef nonnull %7, i8* noundef %0, i32 noundef %1) #15, !dbg !3160
  %15 = icmp ne i8* %2, null, !dbg !3161
  %16 = icmp ne i32 %3, 0
  %17 = and i1 %15, %16, !dbg !3163
  br i1 %17, label %18, label %21, !dbg !3163

18:                                               ; preds = %13
  %19 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 %1, !dbg !3164
  %20 = call i8* @memcpy(i8* noundef nonnull %19, i8* noundef nonnull %2, i32 noundef %3) #15, !dbg !3166
  br label %21, !dbg !3167

21:                                               ; preds = %18, %13
  %22 = call i32 @sfc_transfer(i8* noundef nonnull %7, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #17, !dbg !3168
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #14, !dbg !3169
  ret i32 %22, !dbg !3170
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_suspend_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !3171 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_suspend_winbond, i32 0, i32 0)) #15, !dbg !3172
  ret void, !dbg !3173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_resume_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !3174 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_resume_winbond, i32 0, i32 0)) #15, !dbg !3175
  ret void, !dbg !3176
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_check_device() local_unnamed_addr #0 section ".ramTEXT" !dbg !3177 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3184
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #14, !dbg !3184
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3181, metadata !DIExpression()), !dbg !3185
  %3 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #17, !dbg !3186
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !3187
  %5 = load i8, i8* %4, align 1, !dbg !3187
  %6 = zext i8 %5 to i32, !dbg !3188
  %7 = shl nuw i32 %6, 24, !dbg !3189
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !3190
  %9 = load i8, i8* %8, align 1, !dbg !3190
  %10 = zext i8 %9 to i32, !dbg !3191
  %11 = shl nuw nsw i32 %10, 16, !dbg !3192
  %12 = or i32 %11, %7, !dbg !3193
  call void @llvm.dbg.value(metadata i32 %12, metadata !3180, metadata !DIExpression()), !dbg !3194
  %13 = call i32 @sfc_GetDirectMode() #15, !dbg !3195
  store i32 %13, i32* @gucFlashSFCMode, align 4, !dbg !3196
  call void @llvm.dbg.value(metadata i32 1, metadata !3179, metadata !DIExpression()), !dbg !3194
  %14 = load i8, i8* %2, align 1
  call void @llvm.dbg.value(metadata i32 1, metadata !3179, metadata !DIExpression()), !dbg !3194
  br label %15, !dbg !3197

15:                                               ; preds = %0, %44
  %16 = phi i32 [ 1, %0 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3179, metadata !DIExpression()), !dbg !3194
  call void @llvm.dbg.value(metadata !DIArgList([13 x %struct.flash_info_t]* @chips_data, i32 %16), metadata !3183, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 24, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3194
  %17 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 1, !dbg !3199
  %18 = load i8, i8* %17, align 4, !dbg !3199
  %19 = icmp eq i8 %18, %14, !dbg !3203
  br i1 %19, label %20, label %44, !dbg !3204

20:                                               ; preds = %15
  %21 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 2, !dbg !3205
  %22 = load i32, i32* %21, align 4, !dbg !3205
  %23 = icmp eq i32 %22, %12, !dbg !3206
  br i1 %23, label %24, label %44, !dbg !3207

24:                                               ; preds = %20
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, !dbg !3208
  store %struct.flash_info_t* %25, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3209
  %26 = add nsw i32 %16, -4, !dbg !3211
  %27 = icmp ult i32 %26, 5, !dbg !3211
  br i1 %27, label %42, label %28, !dbg !3213

28:                                               ; preds = %24
  %29 = add nsw i32 %16, -1, !dbg !3214
  %30 = icmp ult i32 %29, 3, !dbg !3214
  br i1 %30, label %42, label %31, !dbg !3216

31:                                               ; preds = %28
  %32 = add nsw i32 %16, -9, !dbg !3217
  %33 = icmp ult i32 %32, 3, !dbg !3217
  br i1 %33, label %34, label %40, !dbg !3219

34:                                               ; preds = %31
  %35 = and i32 %16, 2147483639, !dbg !3220
  %36 = icmp eq i32 %35, 1, !dbg !3220
  %37 = icmp eq i32 %16, 11
  %38 = or i1 %37, %36, !dbg !3223
  %39 = select i1 %38, i32 49, i32 1, !dbg !3223
  store i32 %39, i32* @gd_write_sr2_1, align 4, !dbg !3224
  br label %42, !dbg !3225

40:                                               ; preds = %31
  %41 = icmp eq i32 %16, 12, !dbg !3226
  br i1 %41, label %42, label %67, !dbg !3228

42:                                               ; preds = %40, %28, %24, %34
  %43 = phi i32 [ 200, %34 ], [ 194, %24 ], [ 239, %28 ], [ 32, %40 ]
  store i32 %43, i32* @support_flash_id, align 4, !dbg !3229
  br label %67, !dbg !3230

44:                                               ; preds = %15, %20
  %45 = add nuw nsw i32 %16, 1, !dbg !3231
  call void @llvm.dbg.value(metadata i32 %45, metadata !3179, metadata !DIExpression()), !dbg !3194
  %46 = icmp eq i32 %45, 13, !dbg !3232
  br i1 %46, label %47, label %15, !dbg !3197, !llvm.loop !3233

47:                                               ; preds = %44
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3235
  %48 = load i32, i32* @support_flash_id, align 4, !dbg !3236
  %49 = icmp eq i32 %48, 255, !dbg !3238
  br i1 %49, label %50, label %67, !dbg !3239

50:                                               ; preds = %47
  %51 = call %struct.flash_info_t* @customer_flash_register() #15, !dbg !3240
  store %struct.flash_info_t* %51, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3242
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !3183, metadata !DIExpression()), !dbg !3194
  %52 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 1, !dbg !3243
  %53 = load i8, i8* %52, align 4, !dbg !3243
  %54 = load i8, i8* %2, align 1, !dbg !3245
  %55 = icmp eq i8 %53, %54, !dbg !3246
  br i1 %55, label %56, label %60, !dbg !3247

56:                                               ; preds = %50
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !3183, metadata !DIExpression()), !dbg !3194
  %57 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 2, !dbg !3248
  %58 = load i32, i32* %57, align 4, !dbg !3248
  %59 = icmp eq i32 %58, %12, !dbg !3249
  br i1 %59, label %67, label %60, !dbg !3250

60:                                               ; preds = %56, %50
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 322, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0)) #15, !dbg !3251
  %61 = load i8, i8* %2, align 1, !dbg !3253
  %62 = zext i8 %61 to i32, !dbg !3253
  %63 = load i8, i8* %4, align 1, !dbg !3253
  %64 = zext i8 %63 to i32, !dbg !3253
  %65 = load i8, i8* %8, align 1, !dbg !3253
  %66 = zext i8 %65 to i32, !dbg !3253
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 323, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef %62, i32 noundef %64, i32 noundef %66, i32 noundef %12) #15, !dbg !3253
  br label %67, !dbg !3254

67:                                               ; preds = %47, %60, %56, %40, %42
  %68 = phi i32 [ 0, %42 ], [ 0, %40 ], [ 0, %56 ], [ -1, %60 ], [ -1, %47 ]
  %69 = phi i32 [ 1, %42 ], [ 1, %40 ], [ 1, %56 ], [ 0, %60 ], [ 0, %47 ], !dbg !3194
  store i32 %68, i32* @sf_drvier_status, align 4, !dbg !3194
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #14, !dbg !3255
  ret i32 %69, !dbg !3255
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_jedec_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3256 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3260, metadata !DIExpression()), !dbg !3264
  call void @llvm.dbg.value(metadata i32 %1, metadata !3261, metadata !DIExpression()), !dbg !3264
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #14, !dbg !3265
  call void @llvm.dbg.value(metadata i8 -97, metadata !3262, metadata !DIExpression()), !dbg !3264
  store i8 -97, i8* %3, align 1, !dbg !3266
  call void @llvm.dbg.value(metadata i8* %3, metadata !3262, metadata !DIExpression(DW_OP_deref)), !dbg !3264
  %4 = call i32 @sfc_read(i8* noundef nonnull %3, i32 noundef 1, i8* noundef %0, i32 noundef %1) #15, !dbg !3267
  call void @llvm.dbg.value(metadata i32 %4, metadata !3263, metadata !DIExpression()), !dbg !3264
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #14, !dbg !3268
  ret i32 %4, !dbg !3269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_switch_mode(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3274, metadata !DIExpression()), !dbg !3275
  %2 = tail call %struct.flash_info_t* @customer_flash_register() #15, !dbg !3276
  %3 = icmp eq %struct.flash_info_t* %2, null, !dbg !3278
  br i1 %3, label %5, label %4, !dbg !3279

4:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !3280
  br label %5, !dbg !3282

5:                                                ; preds = %4, %1
  %6 = tail call i32 @flash_check_device() #17, !dbg !3283
  tail call fastcc void @flash_Switch_Device_Mode(i32 noundef %0) #17, !dbg !3284
  switch i32 %0, label %14 [
    i32 1, label %7
    i32 2, label %8
    i32 3, label %13
  ], !dbg !3285

7:                                                ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 185298944, i32 noundef 1) #15, !dbg !3286
  br label %17, !dbg !3289

8:                                                ; preds = %5
  %9 = load i32, i32* @support_flash_id, align 4, !dbg !3290
  %10 = icmp eq i32 %9, 32, !dbg !3294
  br i1 %10, label %11, label %12, !dbg !3295

11:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335572992, i32 noundef 2) #15, !dbg !3296
  br label %17, !dbg !3298

12:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335589376, i32 noundef 2) #15, !dbg !3299
  br label %17

13:                                               ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 201265152, i32 noundef 3) #15, !dbg !3301
  br label %17

14:                                               ; preds = %5
  %15 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 352) #15, !dbg !3304
  br label %16, !dbg !3304

16:                                               ; preds = %14, %16
  br label %16, !dbg !3304, !llvm.loop !3308

17:                                               ; preds = %13, %12, %11, %7
  store i32 %0, i32* @gucFlashSFCMode, align 4, !dbg !3309
  ret void, !dbg !3310
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_Switch_Device_Mode(i32 noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !3311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3313, metadata !DIExpression()), !dbg !3315
  switch i32 %0, label %29 [
    i32 1, label %2
    i32 2, label %11
    i32 3, label %20
  ], !dbg !3316

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), metadata !3314, metadata !DIExpression()), !dbg !3315
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !3317
  switch i32 %3, label %32 [
    i32 194, label %35
    i32 200, label %4
    i32 32, label %8
    i32 255, label %9
  ], !dbg !3320

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), metadata !3314, metadata !DIExpression()), !dbg !3315
  %5 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3321
  %6 = icmp eq i32 %5, 49, !dbg !3325
  %7 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), !dbg !3326
  call void @llvm.dbg.value(metadata i8* %7, metadata !3314, metadata !DIExpression()), !dbg !3315
  br label %35, !dbg !3327

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), metadata !3314, metadata !DIExpression()), !dbg !3315
  br label %35, !dbg !3328

9:                                                ; preds = %2
  %10 = tail call i8* @customer_switch_spi_mode_command() #15, !dbg !3331
  call void @llvm.dbg.value(metadata i8* %10, metadata !3314, metadata !DIExpression()), !dbg !3315
  br label %35, !dbg !3334

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), metadata !3314, metadata !DIExpression()), !dbg !3315
  %12 = load i32, i32* @support_flash_id, align 4, !dbg !3335
  switch i32 %12, label %33 [
    i32 194, label %35
    i32 200, label %13
    i32 32, label %17
    i32 255, label %18
  ], !dbg !3337

13:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !3314, metadata !DIExpression()), !dbg !3315
  %14 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3338
  %15 = icmp eq i32 %14, 49, !dbg !3342
  %16 = select i1 %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !3343
  call void @llvm.dbg.value(metadata i8* %16, metadata !3314, metadata !DIExpression()), !dbg !3315
  br label %35, !dbg !3344

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !3314, metadata !DIExpression()), !dbg !3315
  br label %35, !dbg !3345

18:                                               ; preds = %11
  %19 = tail call i8* @customer_switch_spiq_mode_command() #15, !dbg !3348
  call void @llvm.dbg.value(metadata i8* %19, metadata !3314, metadata !DIExpression()), !dbg !3315
  br label %35, !dbg !3351

20:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), metadata !3314, metadata !DIExpression()), !dbg !3315
  %21 = load i32, i32* @support_flash_id, align 4, !dbg !3352
  switch i32 %21, label %34 [
    i32 194, label %35
    i32 200, label %22
    i32 32, label %26
    i32 255, label %27
  ], !dbg !3354

22:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !3314, metadata !DIExpression()), !dbg !3315
  %23 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3355
  %24 = icmp eq i32 %23, 49, !dbg !3359
  %25 = select i1 %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchqpi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !3360
  call void @llvm.dbg.value(metadata i8* %25, metadata !3314, metadata !DIExpression()), !dbg !3315
  br label %35, !dbg !3361

26:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !3314, metadata !DIExpression()), !dbg !3315
  br label %35, !dbg !3362

27:                                               ; preds = %20
  %28 = tail call i8* @customer_switch_spiq_mode_command() #15, !dbg !3365
  call void @llvm.dbg.value(metadata i8* %28, metadata !3314, metadata !DIExpression()), !dbg !3315
  br label %35, !dbg !3368

29:                                               ; preds = %1
  %30 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 268) #15, !dbg !3369
  br label %31, !dbg !3369

31:                                               ; preds = %31, %29
  br label %31, !dbg !3369, !llvm.loop !3372

32:                                               ; preds = %2
  br label %35, !dbg !3373

33:                                               ; preds = %11
  br label %35, !dbg !3373

34:                                               ; preds = %20
  br label %35, !dbg !3373

35:                                               ; preds = %20, %34, %11, %33, %2, %32, %26, %27, %22, %17, %18, %13, %8, %9, %4
  %36 = phi i8* [ %25, %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %26 ], [ %28, %27 ], [ %16, %13 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %17 ], [ %19, %18 ], [ %7, %4 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), %8 ], [ %10, %9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_mxic, i32 0, i32 0), %2 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), %32 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %11 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), %33 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %20 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), %34 ], !dbg !3374
  call void @llvm.dbg.value(metadata i8* %36, metadata !3314, metadata !DIExpression()), !dbg !3315
  tail call void @sfc_Command_List(i8* noundef %36) #15, !dbg !3373
  ret void, !dbg !3375
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_config() local_unnamed_addr #0 section ".ramTEXT" !dbg !3376 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3382
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #14, !dbg !3382
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3380, metadata !DIExpression()), !dbg !3383
  %3 = tail call i32 @sfc_getMaxGPRamSize() #15, !dbg !3384
  store i32 %3, i32* @gSFC_max_data_size, align 4, !dbg !3385
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3386
  %4 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #17, !dbg !3387
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !3388
  %6 = load i8, i8* %5, align 1, !dbg !3388
  %7 = zext i8 %6 to i32, !dbg !3389
  %8 = shl nuw i32 %7, 24, !dbg !3390
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !3391
  %10 = load i8, i8* %9, align 1, !dbg !3391
  %11 = zext i8 %10 to i32, !dbg !3392
  %12 = shl nuw nsw i32 %11, 16, !dbg !3393
  %13 = or i32 %12, %8, !dbg !3394
  call void @llvm.dbg.value(metadata i32 %13, metadata !3379, metadata !DIExpression()), !dbg !3395
  %14 = load i8, i8* %2, align 1, !dbg !3396
  %15 = zext i8 %14 to i32, !dbg !3396
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 385, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i32 noundef %15, i32 noundef %7, i32 noundef %11, i32 noundef %13) #15, !dbg !3396
  call void @llvm.dbg.value(metadata i32 1, metadata !3378, metadata !DIExpression()), !dbg !3395
  br label %16, !dbg !3397

16:                                               ; preds = %0, %43
  %17 = phi i32 [ 1, %0 ], [ %44, %43 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !3378, metadata !DIExpression()), !dbg !3395
  %18 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, !dbg !3399
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %18, metadata !3381, metadata !DIExpression()), !dbg !3395
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 1, !dbg !3402
  %20 = load i8, i8* %19, align 4, !dbg !3402
  %21 = load i8, i8* %2, align 1, !dbg !3404
  %22 = icmp eq i8 %20, %21, !dbg !3405
  br i1 %22, label %23, label %43, !dbg !3406

23:                                               ; preds = %16
  %24 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 2, !dbg !3407
  %25 = load i32, i32* %24, align 4, !dbg !3407
  %26 = icmp eq i32 %25, %13, !dbg !3408
  br i1 %26, label %27, label %43, !dbg !3409

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %18, i32 0, i32 0, !dbg !3410
  %29 = load i8*, i8** %28, align 4, !dbg !3410
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 390, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %29) #15, !dbg !3410
  store %struct.flash_info_t* %18, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3412
  %30 = add nsw i32 %17, -4, !dbg !3413
  %31 = icmp ult i32 %30, 5, !dbg !3413
  br i1 %31, label %41, label %32, !dbg !3415

32:                                               ; preds = %27
  %33 = add nsw i32 %17, -1, !dbg !3416
  %34 = icmp ult i32 %33, 3, !dbg !3416
  br i1 %34, label %41, label %35, !dbg !3418

35:                                               ; preds = %32
  %36 = add nsw i32 %17, -9, !dbg !3419
  %37 = icmp ult i32 %36, 3, !dbg !3419
  br i1 %37, label %41, label %38, !dbg !3421

38:                                               ; preds = %35
  %39 = icmp eq i32 %17, 12, !dbg !3422
  br i1 %39, label %40, label %43, !dbg !3424

40:                                               ; preds = %38
  store i32 32, i32* @support_flash_id, align 4, !dbg !3425
  call void @llvm.dbg.value(metadata i32 %44, metadata !3378, metadata !DIExpression()), !dbg !3395
  br label %66, !dbg !3427

41:                                               ; preds = %35, %32, %27
  %42 = phi i32 [ 194, %27 ], [ 239, %32 ], [ 200, %35 ]
  store i32 %42, i32* @support_flash_id, align 4, !dbg !3428
  br label %43, !dbg !3429

43:                                               ; preds = %41, %16, %23, %38
  %44 = add nuw nsw i32 %17, 1, !dbg !3429
  call void @llvm.dbg.value(metadata i32 %44, metadata !3378, metadata !DIExpression()), !dbg !3395
  %45 = icmp eq i32 %44, 13, !dbg !3430
  br i1 %45, label %46, label %16, !dbg !3397, !llvm.loop !3431

46:                                               ; preds = %43
  %47 = load i32, i32* @support_flash_id, align 4, !dbg !3433
  %48 = icmp eq i32 %47, 255, !dbg !3435
  br i1 %48, label %49, label %66, !dbg !3427

49:                                               ; preds = %46
  %50 = call %struct.flash_info_t* @customer_flash_register() #15, !dbg !3436
  store %struct.flash_info_t* %50, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3438
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !3381, metadata !DIExpression()), !dbg !3395
  %51 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 1, !dbg !3439
  %52 = load i8, i8* %51, align 4, !dbg !3439
  %53 = load i8, i8* %2, align 1, !dbg !3441
  %54 = icmp eq i8 %52, %53, !dbg !3442
  br i1 %54, label %55, label %59, !dbg !3443

55:                                               ; preds = %49
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !3381, metadata !DIExpression()), !dbg !3395
  %56 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 2, !dbg !3444
  %57 = load i32, i32* %56, align 4, !dbg !3444
  %58 = icmp eq i32 %57, %13, !dbg !3445
  br i1 %58, label %71, label %59, !dbg !3446

59:                                               ; preds = %55, %49
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 411, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0)) #15, !dbg !3447
  %60 = load i8, i8* %2, align 1, !dbg !3449
  %61 = zext i8 %60 to i32, !dbg !3449
  %62 = load i8, i8* %5, align 1, !dbg !3449
  %63 = zext i8 %62 to i32, !dbg !3449
  %64 = load i8, i8* %9, align 1, !dbg !3449
  %65 = zext i8 %64 to i32, !dbg !3449
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 412, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef %61, i32 noundef %63, i32 noundef %65, i32 noundef %13) #15, !dbg !3449
  br label %66, !dbg !3450

66:                                               ; preds = %40, %59, %46
  %67 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3451
  %68 = icmp eq %struct.flash_info_t* %67, null, !dbg !3451
  br i1 %68, label %69, label %71, !dbg !3453

69:                                               ; preds = %66
  %70 = inttoptr i32 %13 to i8*, !dbg !3454
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 417, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %70) #15, !dbg !3454
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3456
  br label %71, !dbg !3457

71:                                               ; preds = %66, %69, %55
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3395
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #14, !dbg !3458
  ret void, !dbg !3458
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_init(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3459 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3461, metadata !DIExpression()), !dbg !3466
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3467
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #14, !dbg !3467
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3464, metadata !DIExpression()), !dbg !3468
  tail call void @sfc_Init(i32 noundef %0) #15, !dbg !3469
  %4 = tail call i32 @sfc_getMaxGPRamSize() #15, !dbg !3470
  store i32 %4, i32* @gSFC_max_data_size, align 4, !dbg !3471
  tail call fastcc void @flash_reset() #17, !dbg !3472
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3473
  %5 = call i32 @flash_read_jedec_id(i8* noundef nonnull %3, i32 noundef 3) #17, !dbg !3474
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3475
  %7 = load i8, i8* %6, align 1, !dbg !3475
  %8 = zext i8 %7 to i32, !dbg !3476
  %9 = shl nuw i32 %8, 24, !dbg !3477
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3478
  %11 = load i8, i8* %10, align 1, !dbg !3478
  %12 = zext i8 %11 to i32, !dbg !3479
  %13 = shl nuw nsw i32 %12, 16, !dbg !3480
  %14 = or i32 %13, %9, !dbg !3481
  call void @llvm.dbg.value(metadata i32 %14, metadata !3463, metadata !DIExpression()), !dbg !3466
  %15 = load i8, i8* %3, align 1, !dbg !3482
  %16 = zext i8 %15 to i32, !dbg !3482
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 447, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i32 noundef %16, i32 noundef %8, i32 noundef %12, i32 noundef %14) #15, !dbg !3482
  call void @llvm.dbg.value(metadata i32 1, metadata !3462, metadata !DIExpression()), !dbg !3466
  br label %17, !dbg !3483

17:                                               ; preds = %1, %31
  %18 = phi i32 [ 1, %1 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !3462, metadata !DIExpression()), !dbg !3466
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, !dbg !3485
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %19, metadata !3465, metadata !DIExpression()), !dbg !3466
  %20 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 1, !dbg !3488
  %21 = load i8, i8* %20, align 4, !dbg !3488
  %22 = load i8, i8* %3, align 1, !dbg !3490
  %23 = icmp eq i8 %21, %22, !dbg !3491
  br i1 %23, label %24, label %31, !dbg !3492

24:                                               ; preds = %17
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 2, !dbg !3493
  %26 = load i32, i32* %25, align 4, !dbg !3493
  %27 = icmp eq i32 %26, %14, !dbg !3494
  br i1 %27, label %28, label %31, !dbg !3495

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %19, i32 0, i32 0, !dbg !3496
  %30 = load i8*, i8** %29, align 4, !dbg !3496
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 452, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %30) #15, !dbg !3496
  store %struct.flash_info_t* %19, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3498
  br label %31, !dbg !3499

31:                                               ; preds = %17, %24, %28
  %32 = add nuw nsw i32 %18, 1, !dbg !3500
  call void @llvm.dbg.value(metadata i32 %32, metadata !3462, metadata !DIExpression()), !dbg !3466
  %33 = icmp eq i32 %32, 13, !dbg !3501
  br i1 %33, label %34, label %17, !dbg !3483, !llvm.loop !3502

34:                                               ; preds = %31
  %35 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3504
  %36 = icmp eq %struct.flash_info_t* %35, null, !dbg !3504
  br i1 %36, label %37, label %39, !dbg !3506

37:                                               ; preds = %34
  %38 = inttoptr i32 %14 to i8*, !dbg !3507
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %38) #15, !dbg !3507
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3509
  br label %39, !dbg !3510

39:                                               ; preds = %37, %34
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #14, !dbg !3511
  ret void, !dbg !3511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_reset() unnamed_addr #0 section ".ramTEXT" !dbg !3512 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_qpimode, i32 0, i32 0)) #15, !dbg !3513
  tail call void @sfc_delay_ms(i32 noundef 1) #15, !dbg !3514
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_spimode, i32 0, i32 0)) #15, !dbg !3515
  tail call void @sfc_delay_ms(i32 noundef 1) #15, !dbg !3516
  ret void, !dbg !3517
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_wait_ready(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3518 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3522, metadata !DIExpression()), !dbg !3525
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #14, !dbg !3526
  call void @llvm.dbg.value(metadata i8 0, metadata !3524, metadata !DIExpression()), !dbg !3525
  store i8 0, i8* %2, align 1, !dbg !3527
  call void @llvm.dbg.value(metadata i32 0, metadata !3523, metadata !DIExpression()), !dbg !3525
  %3 = mul i32 %0, 1000
  %4 = add i32 %3, 1000
  call void @llvm.dbg.value(metadata i32 0, metadata !3523, metadata !DIExpression()), !dbg !3525
  %5 = icmp sgt i32 %4, 0, !dbg !3528
  br i1 %5, label %6, label %18, !dbg !3531

6:                                                ; preds = %1, %15
  %7 = phi i32 [ %16, %15 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3523, metadata !DIExpression()), !dbg !3525
  call void @llvm.dbg.value(metadata i8* %2, metadata !3524, metadata !DIExpression(DW_OP_deref)), !dbg !3525
  %8 = call i32 @flash_read_sr(i8* noundef nonnull %2) #17, !dbg !3532
  %9 = icmp slt i32 %8, 0, !dbg !3535
  br i1 %9, label %18, label %10, !dbg !3536

10:                                               ; preds = %6
  %11 = load i8, i8* %2, align 1, !dbg !3537
  call void @llvm.dbg.value(metadata i8 %11, metadata !3524, metadata !DIExpression()), !dbg !3525
  %12 = and i8 %11, 1, !dbg !3539
  %13 = icmp eq i8 %12, 0, !dbg !3539
  br i1 %13, label %14, label %15, !dbg !3540

14:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #14, !dbg !3541
  ret i32 0, !dbg !3542

15:                                               ; preds = %10
  call void @sfc_delay_ms(i32 noundef 1) #15, !dbg !3544
  %16 = add nuw nsw i32 %7, 1, !dbg !3545
  call void @llvm.dbg.value(metadata i32 %16, metadata !3523, metadata !DIExpression()), !dbg !3525
  %17 = icmp eq i32 %16, %4, !dbg !3528
  br i1 %17, label %18, label %6, !dbg !3531, !llvm.loop !3546

18:                                               ; preds = %15, %6, %1
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 491, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.flash_wait_ready, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0)) #16, !dbg !3548
  unreachable, !dbg !3548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3549 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3553, metadata !DIExpression()), !dbg !3556
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #14, !dbg !3557
  call void @llvm.dbg.value(metadata i8 5, metadata !3555, metadata !DIExpression()), !dbg !3556
  store i8 5, i8* %2, align 1, !dbg !3558
  call void @llvm.dbg.value(metadata i8* %2, metadata !3555, metadata !DIExpression(DW_OP_deref)), !dbg !3556
  %3 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #15, !dbg !3559
  call void @llvm.dbg.value(metadata i32 %3, metadata !3554, metadata !DIExpression()), !dbg !3556
  %4 = icmp ne i32 %3, 1, !dbg !3560
  %5 = sext i1 %4 to i32, !dbg !3556
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #14, !dbg !3562
  ret i32 %5, !dbg !3562
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3563 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3565, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i32 %1, metadata !3566, metadata !DIExpression()), !dbg !3569
  %4 = bitcast i32* %3 to i8*, !dbg !3570
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #14, !dbg !3570
  call void @llvm.dbg.value(metadata i32 0, metadata !3567, metadata !DIExpression()), !dbg !3569
  store i32 144, i32* %3, align 4, !dbg !3571
  call void @llvm.dbg.value(metadata i8 undef, metadata !3567, metadata !DIExpression()), !dbg !3569
  call void @llvm.dbg.value(metadata i32* %3, metadata !3567, metadata !DIExpression(DW_OP_deref)), !dbg !3569
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #15, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %5, metadata !3568, metadata !DIExpression()), !dbg !3569
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #14, !dbg !3573
  ret i32 %5, !dbg !3574
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id_quad(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3575 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3577, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.value(metadata i32 %1, metadata !3578, metadata !DIExpression()), !dbg !3581
  %4 = bitcast i32* %3 to i8*, !dbg !3582
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #14, !dbg !3582
  call void @llvm.dbg.value(metadata i32 0, metadata !3579, metadata !DIExpression()), !dbg !3581
  store i32 144, i32* %3, align 4, !dbg !3583
  call void @llvm.dbg.value(metadata i8 undef, metadata !3579, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.value(metadata i32* %3, metadata !3579, metadata !DIExpression(DW_OP_deref)), !dbg !3581
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #15, !dbg !3584
  call void @llvm.dbg.value(metadata i32 %5, metadata !3580, metadata !DIExpression()), !dbg !3581
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #14, !dbg !3585
  ret i32 %5, !dbg !3586
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !3587 {
  %4 = alloca [4 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3591, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i32 %1, metadata !3592, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i32 %2, metadata !3593, metadata !DIExpression()), !dbg !3596
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 0, !dbg !3597
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #14, !dbg !3597
  call void @llvm.dbg.declare(metadata [4 x i8]* %4, metadata !3594, metadata !DIExpression()), !dbg !3598
  %6 = icmp eq i32 %2, 0, !dbg !3599
  br i1 %6, label %18, label %7, !dbg !3601

7:                                                ; preds = %3
  %8 = tail call i32 @flash_wait_ready(i32 noundef 1) #17, !dbg !3602
  store i32 1, i32* @sf_drvier_status, align 4, !dbg !3604
  store i8 3, i8* %5, align 1, !dbg !3605
  %9 = lshr i32 %1, 16, !dbg !3606
  %10 = trunc i32 %9 to i8, !dbg !3607
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 1, !dbg !3608
  store i8 %10, i8* %11, align 1, !dbg !3609
  %12 = lshr i32 %1, 8, !dbg !3610
  %13 = trunc i32 %12 to i8, !dbg !3611
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 2, !dbg !3612
  store i8 %13, i8* %14, align 1, !dbg !3613
  %15 = trunc i32 %1 to i8, !dbg !3614
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 3, !dbg !3615
  store i8 %15, i8* %16, align 1, !dbg !3616
  %17 = call i32 @sfc_read(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %0, i32 noundef %2) #15, !dbg !3617
  call void @llvm.dbg.value(metadata i32 %17, metadata !3595, metadata !DIExpression()), !dbg !3596
  br label %18, !dbg !3618

18:                                               ; preds = %3, %7
  %19 = phi i32 [ %17, %7 ], [ 0, %3 ], !dbg !3596
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #14, !dbg !3619
  ret i32 %19, !dbg !3619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_fast_read(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !3620 {
  %5 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3624, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.value(metadata i32 %1, metadata !3625, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.value(metadata i32 %2, metadata !3626, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.value(metadata i32 %3, metadata !3627, metadata !DIExpression()), !dbg !3633
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0, !dbg !3634
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #14, !dbg !3634
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !3628, metadata !DIExpression()), !dbg !3635
  %7 = icmp eq i32 %2, 0, !dbg !3636
  br i1 %7, label %33, label %8, !dbg !3638

8:                                                ; preds = %4
  %9 = tail call i32 @flash_wait_ready(i32 noundef 1) #17, !dbg !3639
  store i8 11, i8* %6, align 1, !dbg !3641
  %10 = lshr i32 %1, 16, !dbg !3642
  %11 = trunc i32 %10 to i8, !dbg !3643
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 1, !dbg !3644
  store i8 %11, i8* %12, align 1, !dbg !3645
  %13 = lshr i32 %1, 8, !dbg !3646
  %14 = trunc i32 %13 to i8, !dbg !3647
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 2, !dbg !3648
  store i8 %14, i8* %15, align 1, !dbg !3649
  %16 = trunc i32 %1 to i8, !dbg !3650
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 3, !dbg !3651
  store i8 %16, i8* %17, align 1, !dbg !3652
  call void @llvm.dbg.value(metadata i32 4, metadata !3630, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.value(metadata i32 0, metadata !3632, metadata !DIExpression()), !dbg !3633
  %18 = icmp sgt i32 %3, 0, !dbg !3653
  br i1 %18, label %19, label %30, !dbg !3656

19:                                               ; preds = %8
  %20 = add nsw i32 %3, -1, !dbg !3656
  %21 = call i32 @llvm.umin.i32(i32 %20, i32 27), !dbg !3656
  br label %22, !dbg !3656

22:                                               ; preds = %19, %22
  %23 = phi i32 [ %26, %22 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !3632, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.value(metadata i32 undef, metadata !3630, metadata !DIExpression()), !dbg !3633
  %24 = add nuw nsw i32 %23, 4, !dbg !3657
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 %24, !dbg !3659
  store i8 0, i8* %25, align 1, !dbg !3660
  call void @llvm.dbg.value(metadata i32 undef, metadata !3630, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3633
  %26 = add nuw nsw i32 %23, 1, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %26, metadata !3632, metadata !DIExpression()), !dbg !3633
  %27 = icmp eq i32 %23, %21, !dbg !3662
  br i1 %27, label %28, label %22, !dbg !3656, !llvm.loop !3663

28:                                               ; preds = %22
  %29 = add nuw nsw i32 %21, 5, !dbg !3656
  br label %30, !dbg !3665

30:                                               ; preds = %28, %8
  %31 = phi i32 [ 4, %8 ], [ %29, %28 ], !dbg !3633
  %32 = call i32 @sfc_read(i8* noundef nonnull %6, i32 noundef %31, i8* noundef %0, i32 noundef %2) #15, !dbg !3665
  call void @llvm.dbg.value(metadata i32 %32, metadata !3631, metadata !DIExpression()), !dbg !3633
  br label %33, !dbg !3666

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !3633
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #14, !dbg !3667
  ret i32 %34, !dbg !3667
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr2(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3668 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3670, metadata !DIExpression()), !dbg !3673
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #14, !dbg !3674
  call void @llvm.dbg.value(metadata i8 53, metadata !3672, metadata !DIExpression()), !dbg !3673
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !3675
  switch i32 %3, label %9 [
    i32 239, label %4
    i32 200, label %4
    i32 194, label %5
    i32 32, label %6
    i32 255, label %7
  ], !dbg !3677

4:                                                ; preds = %1, %1
  call void @llvm.dbg.value(metadata i8 53, metadata !3672, metadata !DIExpression()), !dbg !3673
  store i8 53, i8* %2, align 1, !dbg !3678
  br label %10, !dbg !3680

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 43, metadata !3672, metadata !DIExpression()), !dbg !3673
  store i8 43, i8* %2, align 1, !dbg !3681
  br label %10, !dbg !3684

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 112, metadata !3672, metadata !DIExpression()), !dbg !3673
  store i8 112, i8* %2, align 1, !dbg !3685
  br label %10, !dbg !3688

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @customer_flash_read_SR2_comand() #15, !dbg !3689
  call void @llvm.dbg.value(metadata i8 %8, metadata !3672, metadata !DIExpression()), !dbg !3673
  store i8 %8, i8* %2, align 1, !dbg !3692
  br label %10, !dbg !3693

9:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.flash_read_sr2, i32 0, i32 0), i32 noundef 655, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0)) #15, !dbg !3694
  call void @llvm.dbg.value(metadata i8 5, metadata !3672, metadata !DIExpression()), !dbg !3673
  store i8 5, i8* %2, align 1, !dbg !3696
  br label %10

10:                                               ; preds = %5, %7, %9, %6, %4
  call void @llvm.dbg.value(metadata i8* %2, metadata !3672, metadata !DIExpression(DW_OP_deref)), !dbg !3673
  %11 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #15, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %11, metadata !3671, metadata !DIExpression()), !dbg !3673
  %12 = icmp ne i32 %11, 1, !dbg !3698
  %13 = sext i1 %12 to i32, !dbg !3673
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #14, !dbg !3700
  ret i32 %13, !dbg !3700
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_unprotect() local_unnamed_addr #0 section ".ramTEXT" !dbg !3701 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #14, !dbg !3704
  call void @llvm.dbg.value(metadata i8 0, metadata !3703, metadata !DIExpression()), !dbg !3705
  store i8 0, i8* %1, align 1, !dbg !3706
  call void @llvm.dbg.value(metadata i8* %1, metadata !3703, metadata !DIExpression(DW_OP_deref)), !dbg !3705
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #17, !dbg !3707
  %3 = icmp slt i32 %2, 0, !dbg !3709
  br i1 %3, label %9, label %4, !dbg !3710

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !3711
  call void @llvm.dbg.value(metadata i8 %5, metadata !3703, metadata !DIExpression()), !dbg !3705
  %6 = and i8 %5, 28, !dbg !3713
  %7 = icmp eq i8 %6, 0, !dbg !3714
  br i1 %7, label %9, label %8, !dbg !3715

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 0, metadata !3703, metadata !DIExpression()), !dbg !3705
  store i8 0, i8* %1, align 1, !dbg !3716
  call void @llvm.dbg.value(metadata i8* %1, metadata !3703, metadata !DIExpression(DW_OP_deref)), !dbg !3705
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #17, !dbg !3718
  br label %9, !dbg !3719

9:                                                ; preds = %4, %8, %0
  %10 = phi i32 [ -1, %0 ], [ 0, %8 ], [ 0, %4 ], !dbg !3705
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #14, !dbg !3720
  ret i32 %10, !dbg !3720
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_write_sr(i8* noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !3721 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3723, metadata !DIExpression()), !dbg !3726
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #14, !dbg !3727
  call void @llvm.dbg.value(metadata i8 1, metadata !3725, metadata !DIExpression()), !dbg !3726
  store i8 1, i8* %2, align 1, !dbg !3728
  call void @llvm.dbg.value(metadata i8* %2, metadata !3725, metadata !DIExpression(DW_OP_deref)), !dbg !3726
  %3 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #15, !dbg !3729
  call void @llvm.dbg.value(metadata i32 %3, metadata !3724, metadata !DIExpression()), !dbg !3726
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #14, !dbg !3730
  ret void, !dbg !3730
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_protect() local_unnamed_addr #0 section ".ramTEXT" !dbg !3731 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #14, !dbg !3734
  call void @llvm.dbg.value(metadata i8 0, metadata !3733, metadata !DIExpression()), !dbg !3735
  store i8 0, i8* %1, align 1, !dbg !3736
  call void @llvm.dbg.value(metadata i8* %1, metadata !3733, metadata !DIExpression(DW_OP_deref)), !dbg !3735
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #17, !dbg !3737
  %3 = icmp slt i32 %2, 0, !dbg !3739
  br i1 %3, label %7, label %4, !dbg !3740

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !3741
  call void @llvm.dbg.value(metadata i8 %5, metadata !3733, metadata !DIExpression()), !dbg !3735
  %6 = or i8 %5, 28, !dbg !3741
  call void @llvm.dbg.value(metadata i8 %6, metadata !3733, metadata !DIExpression()), !dbg !3735
  store i8 %6, i8* %1, align 1, !dbg !3741
  call void @llvm.dbg.value(metadata i8* %1, metadata !3733, metadata !DIExpression(DW_OP_deref)), !dbg !3735
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #17, !dbg !3742
  br label %7, !dbg !3743

7:                                                ; preds = %0, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %0 ], !dbg !3735
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #14, !dbg !3744
  ret i32 %8, !dbg !3744
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_enable() local_unnamed_addr #0 section ".ramTEXT" !dbg !3745 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #14, !dbg !3748
  call void @llvm.dbg.value(metadata i8 6, metadata !3747, metadata !DIExpression()), !dbg !3749
  store i8 6, i8* %1, align 1, !dbg !3750
  call void @llvm.dbg.value(metadata i8* %1, metadata !3747, metadata !DIExpression(DW_OP_deref)), !dbg !3749
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #15, !dbg !3751
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #14, !dbg !3752
  ret i32 %2, !dbg !3753
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_disable() local_unnamed_addr #0 section ".ramTEXT" !dbg !3754 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #14, !dbg !3757
  call void @llvm.dbg.value(metadata i8 4, metadata !3756, metadata !DIExpression()), !dbg !3758
  store i8 4, i8* %1, align 1, !dbg !3759
  call void @llvm.dbg.value(metadata i8* %1, metadata !3756, metadata !DIExpression(DW_OP_deref)), !dbg !3758
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #15, !dbg !3760
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #14, !dbg !3761
  ret i32 %2, !dbg !3762
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3763 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3767, metadata !DIExpression()), !dbg !3771
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3772
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #14, !dbg !3772
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3768, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.value(metadata i32 0, metadata !3770, metadata !DIExpression()), !dbg !3771
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #17, !dbg !3774
  store i32 8, i32* @sf_drvier_status, align 4, !dbg !3776
  br label %5, !dbg !3777

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #15, !dbg !3778
  call void @llvm.dbg.value(metadata i32 %6, metadata !3770, metadata !DIExpression()), !dbg !3771
  %7 = icmp eq i32 %6, -121, !dbg !3780
  br i1 %7, label %5, label %8, !dbg !3781, !llvm.loop !3782

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !3784
  call void @llvm.dbg.value(metadata i32 %9, metadata !3769, metadata !DIExpression()), !dbg !3771
  store i8 -40, i8* %3, align 1, !dbg !3785
  %10 = lshr i32 %0, 16, !dbg !3786
  %11 = trunc i32 %10 to i8, !dbg !3787
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3788
  store i8 %11, i8* %12, align 1, !dbg !3789
  %13 = lshr i32 %0, 8, !dbg !3790
  %14 = trunc i32 %13 to i8, !dbg !3791
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3792
  store i8 %14, i8* %15, align 1, !dbg !3793
  %16 = trunc i32 %0 to i8, !dbg !3794
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3795
  store i8 %16, i8* %17, align 1, !dbg !3796
  tail call void @SF_DAL_FLAG_BUSY_SET() #15, !dbg !3797
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #15, !dbg !3798
  call void @restore_interrupt_mask(i32 noundef %9) #15, !dbg !3799
  br label %19, !dbg !3800

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #15, !dbg !3801
  call void @llvm.dbg.value(metadata i32 %20, metadata !3770, metadata !DIExpression()), !dbg !3771
  %21 = icmp eq i32 %20, -121, !dbg !3803
  br i1 %21, label %19, label %22, !dbg !3804, !llvm.loop !3805

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #17, !dbg !3807
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #14, !dbg !3808
  ret i32 0, !dbg !3808
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector_32k(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3809 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3811, metadata !DIExpression()), !dbg !3815
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3816
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #14, !dbg !3816
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3812, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i32 0, metadata !3814, metadata !DIExpression()), !dbg !3815
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #17, !dbg !3818
  store i32 7, i32* @sf_drvier_status, align 4, !dbg !3820
  br label %5, !dbg !3821

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #15, !dbg !3822
  call void @llvm.dbg.value(metadata i32 %6, metadata !3814, metadata !DIExpression()), !dbg !3815
  %7 = icmp eq i32 %6, -121, !dbg !3824
  br i1 %7, label %5, label %8, !dbg !3825, !llvm.loop !3826

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !3828
  call void @llvm.dbg.value(metadata i32 %9, metadata !3813, metadata !DIExpression()), !dbg !3815
  store i8 82, i8* %3, align 1, !dbg !3829
  %10 = lshr i32 %0, 16, !dbg !3830
  %11 = trunc i32 %10 to i8, !dbg !3831
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3832
  store i8 %11, i8* %12, align 1, !dbg !3833
  %13 = lshr i32 %0, 8, !dbg !3834
  %14 = trunc i32 %13 to i8, !dbg !3835
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3836
  store i8 %14, i8* %15, align 1, !dbg !3837
  %16 = trunc i32 %0 to i8, !dbg !3838
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3839
  store i8 %16, i8* %17, align 1, !dbg !3840
  tail call void @SF_DAL_FLAG_BUSY_SET() #15, !dbg !3841
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #15, !dbg !3842
  br label %19, !dbg !3843

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #15, !dbg !3844
  call void @llvm.dbg.value(metadata i32 %20, metadata !3814, metadata !DIExpression()), !dbg !3815
  %21 = icmp eq i32 %20, -121, !dbg !3846
  br i1 %21, label %19, label %22, !dbg !3847, !llvm.loop !3848

22:                                               ; preds = %19
  call void @restore_interrupt_mask(i32 noundef %9) #15, !dbg !3850
  %23 = call i32 @flash_write_disable() #17, !dbg !3851
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #14, !dbg !3852
  ret i32 0, !dbg !3852
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_page(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3853 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3855, metadata !DIExpression()), !dbg !3859
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3860
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #14, !dbg !3860
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3856, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.value(metadata i32 0, metadata !3858, metadata !DIExpression()), !dbg !3859
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #17, !dbg !3862
  store i32 6, i32* @sf_drvier_status, align 4, !dbg !3864
  br label %5, !dbg !3865

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #15, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %6, metadata !3858, metadata !DIExpression()), !dbg !3859
  %7 = icmp eq i32 %6, -121, !dbg !3868
  br i1 %7, label %5, label %8, !dbg !3869, !llvm.loop !3870

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %9, metadata !3857, metadata !DIExpression()), !dbg !3859
  store i8 32, i8* %3, align 1, !dbg !3873
  %10 = lshr i32 %0, 16, !dbg !3874
  %11 = trunc i32 %10 to i8, !dbg !3875
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3876
  store i8 %11, i8* %12, align 1, !dbg !3877
  %13 = lshr i32 %0, 8, !dbg !3878
  %14 = trunc i32 %13 to i8, !dbg !3879
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3880
  store i8 %14, i8* %15, align 1, !dbg !3881
  %16 = trunc i32 %0 to i8, !dbg !3882
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !3883
  store i8 %16, i8* %17, align 1, !dbg !3884
  tail call void @SF_DAL_FLAG_BUSY_SET() #15, !dbg !3885
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #15, !dbg !3886
  call void @restore_interrupt_mask(i32 noundef %9) #15, !dbg !3887
  br label %19, !dbg !3888

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #15, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %20, metadata !3858, metadata !DIExpression()), !dbg !3859
  %21 = icmp eq i32 %20, -121, !dbg !3891
  br i1 %21, label %19, label %22, !dbg !3892, !llvm.loop !3893

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #17, !dbg !3895
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #14, !dbg !3896
  ret i32 0, !dbg !3896
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_chip() local_unnamed_addr #0 section ".ramTEXT" !dbg !3897 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3900
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #14, !dbg !3900
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3899, metadata !DIExpression()), !dbg !3901
  %3 = tail call i32 @flash_wait_ready(i32 noundef 3) #17, !dbg !3902
  store i32 9, i32* @sf_drvier_status, align 4, !dbg !3904
  %4 = tail call i32 @flash_write_enable() #17, !dbg !3905
  %5 = tail call i32 @flash_unprotect() #17, !dbg !3906
  store i8 96, i8* %2, align 1, !dbg !3907
  %6 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef null, i32 noundef 0) #15, !dbg !3908
  %7 = call i32 @flash_wait_ready(i32 noundef 30000) #17, !dbg !3909
  %8 = call i32 @flash_write_disable() #17, !dbg !3911
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3912
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #14, !dbg !3913
  ret i32 0, !dbg !3913
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3914 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3918, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %1, metadata !3919, metadata !DIExpression()), !dbg !3920
  %3 = icmp sgt i32 %1, 0
  call void @llvm.dbg.value(metadata i32 %1, metadata !3919, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %0, metadata !3918, metadata !DIExpression()), !dbg !3920
  br i1 %3, label %4, label %14, !dbg !3921

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %12, %4 ], [ %1, %2 ]
  %6 = phi i32 [ %11, %4 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3919, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %6, metadata !3918, metadata !DIExpression()), !dbg !3920
  %7 = tail call i32 @flash_erase_page(i32 noundef %6) #17, !dbg !3922
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3925
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !3926
  %10 = load i32, i32* %9, align 4, !dbg !3926
  %11 = add i32 %10, %6, !dbg !3927
  call void @llvm.dbg.value(metadata i32 %11, metadata !3918, metadata !DIExpression()), !dbg !3920
  %12 = sub i32 %5, %10, !dbg !3928
  call void @llvm.dbg.value(metadata i32 %12, metadata !3919, metadata !DIExpression()), !dbg !3920
  %13 = icmp sgt i32 %12, 0, !dbg !3929
  br i1 %13, label %4, label %14, !dbg !3930, !llvm.loop !3931

14:                                               ; preds = %4, %2
  ret i32 0, !dbg !3933
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !3934 {
  %4 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3938, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 %1, metadata !3939, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 %2, metadata !3940, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 0, metadata !3943, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 0, metadata !3944, metadata !DIExpression()), !dbg !3952
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 0, !dbg !3953
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %5) #14, !dbg !3953
  call void @llvm.dbg.declare(metadata [5 x i8]* %4, metadata !3946, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.value(metadata i32 %1, metadata !3949, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i8* %0, metadata !3950, metadata !DIExpression()), !dbg !3952
  %6 = icmp eq i32 %2, 0, !dbg !3955
  br i1 %6, label %86, label %7, !dbg !3957

7:                                                ; preds = %3
  %8 = add i32 %2, %1, !dbg !3958
  %9 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3960
  %10 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 3, !dbg !3961
  %11 = load i32, i32* %10, align 4, !dbg !3961
  %12 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 4, !dbg !3962
  %13 = load i32, i32* %12, align 4, !dbg !3962
  %14 = mul i32 %13, %11, !dbg !3963
  %15 = icmp ugt i32 %8, %14, !dbg !3964
  br i1 %15, label %86, label %16, !dbg !3965

16:                                               ; preds = %7
  %17 = tail call i32 @flash_wait_ready(i32 noundef 2) #17, !dbg !3966
  br label %18

18:                                               ; preds = %16, %18
  %19 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #15, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %19, metadata !3947, metadata !DIExpression()), !dbg !3952
  %20 = icmp eq i32 %19, -121, !dbg !3970
  br i1 %20, label %18, label %21, !dbg !3971, !llvm.loop !3972

21:                                               ; preds = %18
  store i32 3, i32* @sf_drvier_status, align 4, !dbg !3975
  %22 = tail call i32 @sfc_GetDirectMode() #15, !dbg !3976
  call void @llvm.dbg.value(metadata i32 %22, metadata !3945, metadata !DIExpression()), !dbg !3952
  %23 = icmp eq i32 %22, 2, !dbg !3977
  br i1 %23, label %24, label %29, !dbg !3979

24:                                               ; preds = %21
  %25 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3980
  %26 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %25, i32 0, i32 5, !dbg !3981
  %27 = load i8, i8* %26, align 4, !dbg !3981
  %28 = icmp eq i8 %27, 0, !dbg !3980
  br i1 %28, label %29, label %30, !dbg !3982

29:                                               ; preds = %24, %21
  br label %30

30:                                               ; preds = %24, %29
  %31 = phi i8 [ 2, %29 ], [ %27, %24 ], !dbg !3983
  store i8 %31, i8* %5, align 1, !dbg !3983
  call void @llvm.dbg.value(metadata i32 undef, metadata !3941, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i8* %0, metadata !3950, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 %1, metadata !3949, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 %2, metadata !3940, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 0, metadata !3944, metadata !DIExpression()), !dbg !3952
  %32 = icmp sgt i32 %2, 0, !dbg !3984
  br i1 %32, label %33, label %41, !dbg !3985

33:                                               ; preds = %30
  %34 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !3986
  %35 = urem i32 %1, %34, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %35, metadata !3941, metadata !DIExpression()), !dbg !3952
  %36 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 1
  %37 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 2
  %38 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 3
  %39 = add i32 %1, -1
  %40 = getelementptr inbounds i8, i8* %0, i32 -1
  br label %43, !dbg !3985

41:                                               ; preds = %73, %30
  %42 = phi i32 [ 0, %30 ], [ %74, %73 ], !dbg !3952
  br label %81, !dbg !3988

43:                                               ; preds = %77, %33
  %44 = phi i32 [ %34, %33 ], [ %80, %77 ], !dbg !3989
  %45 = phi i8* [ %0, %33 ], [ %78, %77 ]
  %46 = phi i32 [ %1, %33 ], [ %79, %77 ]
  %47 = phi i32 [ %2, %33 ], [ %75, %77 ]
  %48 = phi i32 [ %35, %33 ], [ 0, %77 ]
  %49 = phi i32 [ 0, %33 ], [ %74, %77 ]
  call void @llvm.dbg.value(metadata i8* %45, metadata !3950, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 %46, metadata !3949, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 %47, metadata !3940, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 %48, metadata !3941, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 %49, metadata !3944, metadata !DIExpression()), !dbg !3952
  %50 = sub i32 %44, %48, !dbg !3989
  %51 = icmp ugt i32 %47, %50, !dbg !3989
  %52 = select i1 %51, i32 %50, i32 %47, !dbg !3989
  call void @llvm.dbg.value(metadata i32 %52, metadata !3942, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i32 0, metadata !3941, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata i8* %45, metadata !3951, metadata !DIExpression()), !dbg !3952
  %53 = lshr i32 %46, 16, !dbg !3991
  %54 = trunc i32 %53 to i8, !dbg !3992
  store i8 %54, i8* %36, align 1, !dbg !3993
  %55 = lshr i32 %46, 8, !dbg !3994
  %56 = trunc i32 %55 to i8, !dbg !3995
  store i8 %56, i8* %37, align 1, !dbg !3996
  %57 = trunc i32 %46 to i8, !dbg !3997
  store i8 %57, i8* %38, align 1, !dbg !3998
  %58 = call i32 @flash_wait_ready(i32 noundef 3) #17, !dbg !3999
  %59 = call i32 @flash_write_enable() #17, !dbg !4001
  %60 = call i32 @save_and_set_interrupt_mask() #15, !dbg !4002
  call void @llvm.dbg.value(metadata i32 %60, metadata !3948, metadata !DIExpression()), !dbg !3952
  call void @SF_DAL_FLAG_BUSY_SET() #15, !dbg !4003
  %61 = call i32 @sfc_write(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %45, i32 noundef %52) #15, !dbg !4004
  call void @llvm.dbg.value(metadata i32 %61, metadata !3943, metadata !DIExpression()), !dbg !3952
  call void @restore_interrupt_mask(i32 noundef %60) #15, !dbg !4005
  br label %62, !dbg !4006

62:                                               ; preds = %62, %43
  %63 = load i8, i8* %40, align 1, !dbg !4007
  %64 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef null, i32 noundef %39, i8 noundef zeroext %63) #15, !dbg !4009
  call void @llvm.dbg.value(metadata i32 %64, metadata !3947, metadata !DIExpression()), !dbg !3952
  %65 = icmp eq i32 %64, 0, !dbg !4010
  br i1 %65, label %62, label %66, !dbg !4011, !llvm.loop !4012

66:                                               ; preds = %62
  %67 = icmp sgt i32 %61, 0, !dbg !4014
  br i1 %67, label %68, label %73, !dbg !4016

68:                                               ; preds = %66
  %69 = add nsw i32 %61, %49, !dbg !4017
  call void @llvm.dbg.value(metadata i32 %69, metadata !3944, metadata !DIExpression()), !dbg !3952
  %70 = icmp ult i32 %61, %52, !dbg !4019
  br i1 %70, label %71, label %73, !dbg !4021

71:                                               ; preds = %68
  %72 = call i32 @flash_write_disable() #17, !dbg !4022
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 942, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.flash_write, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0)) #16, !dbg !4024
  unreachable, !dbg !4024

73:                                               ; preds = %68, %66
  %74 = phi i32 [ %69, %68 ], [ %49, %66 ], !dbg !3952
  call void @llvm.dbg.value(metadata i32 %74, metadata !3944, metadata !DIExpression()), !dbg !3952
  %75 = sub i32 %47, %52, !dbg !4025
  call void @llvm.dbg.value(metadata i32 %75, metadata !3940, metadata !DIExpression()), !dbg !3952
  call void @llvm.dbg.value(metadata !DIArgList(i32 %52, i32 %46), metadata !3949, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3952
  call void @llvm.dbg.value(metadata !DIArgList(i8* %45, i32 %52), metadata !3950, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3952
  call void @llvm.dbg.value(metadata i32 0, metadata !3941, metadata !DIExpression()), !dbg !3952
  %76 = icmp sgt i32 %75, 0, !dbg !3984
  br i1 %76, label %77, label %41, !dbg !3985, !llvm.loop !4026

77:                                               ; preds = %73
  %78 = getelementptr inbounds i8, i8* %45, i32 %52, !dbg !4028
  call void @llvm.dbg.value(metadata i8* %78, metadata !3950, metadata !DIExpression()), !dbg !3952
  %79 = add i32 %52, %46, !dbg !4029
  call void @llvm.dbg.value(metadata i32 %79, metadata !3949, metadata !DIExpression()), !dbg !3952
  %80 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !3989
  br label %43, !dbg !3985

81:                                               ; preds = %41, %81
  %82 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #15, !dbg !4030
  call void @llvm.dbg.value(metadata i32 %82, metadata !3947, metadata !DIExpression()), !dbg !3952
  %83 = icmp eq i32 %82, -121, !dbg !4032
  br i1 %83, label %81, label %84, !dbg !4033, !llvm.loop !4034

84:                                               ; preds = %81
  %85 = call i32 @flash_write_disable() #17, !dbg !4036
  br label %86, !dbg !4037

86:                                               ; preds = %7, %3, %84
  %87 = phi i32 [ %42, %84 ], [ 0, %3 ], [ -1, %7 ], !dbg !3952
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %5) #14, !dbg !4038
  ret i32 %87, !dbg !4038
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write_security_crc(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !4039 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4041, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i32 4, metadata !4042, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.value(metadata i32 0, metadata !4043, metadata !DIExpression()), !dbg !4045
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !4046
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #14, !dbg !4046
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !4044, metadata !DIExpression()), !dbg !4047
  %4 = and i32 %0, 4095, !dbg !4048
  %5 = icmp eq i32 %4, 0, !dbg !4048
  br i1 %5, label %6, label %29, !dbg !4050

6:                                                ; preds = %1
  %7 = add nuw i32 %0, 4, !dbg !4051
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4053
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !4054
  %10 = load i32, i32* %9, align 4, !dbg !4054
  %11 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 4, !dbg !4055
  %12 = load i32, i32* %11, align 4, !dbg !4055
  %13 = mul i32 %12, %10, !dbg !4056
  %14 = icmp ugt i32 %7, %13, !dbg !4057
  br i1 %14, label %29, label %15, !dbg !4058

15:                                               ; preds = %6
  store i32 5, i32* @sf_drvier_status, align 4, !dbg !4059
  %16 = tail call i32 @flash_wait_ready(i32 noundef 2) #17, !dbg !4060
  %17 = tail call i32 @flash_erase_page(i32 noundef %0) #17, !dbg !4062
  store i8 2, i8* %3, align 1, !dbg !4063
  %18 = lshr i32 %0, 16, !dbg !4064
  %19 = trunc i32 %18 to i8, !dbg !4065
  %20 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4066
  store i8 %19, i8* %20, align 1, !dbg !4067
  %21 = lshr i32 %0, 8, !dbg !4068
  %22 = trunc i32 %21 to i8, !dbg !4069
  %23 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4070
  store i8 %22, i8* %23, align 1, !dbg !4071
  %24 = trunc i32 %0 to i8, !dbg !4072
  %25 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !4073
  store i8 %24, i8* %25, align 1, !dbg !4074
  %26 = tail call i32 @flash_write_enable() #17, !dbg !4075
  %27 = tail call i32 @flash_unprotect() #17, !dbg !4076
  %28 = call i32 @sfc_security_write_crc(i8* noundef nonnull %3, i32 noundef 4) #15, !dbg !4077
  call void @llvm.dbg.value(metadata i32 %28, metadata !4043, metadata !DIExpression()), !dbg !4045
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4078
  br label %29, !dbg !4079

29:                                               ; preds = %6, %1, %15
  %30 = phi i32 [ %28, %15 ], [ -1, %1 ], [ -1, %6 ], !dbg !4045
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #14, !dbg !4080
  ret i32 %30, !dbg !4080
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !4081 {
  %4 = alloca [4096 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4083, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %1, metadata !4084, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %2, metadata !4085, metadata !DIExpression()), !dbg !4100
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 0, !dbg !4101
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %5) #14, !dbg !4101
  call void @llvm.dbg.declare(metadata [4096 x i8]* %4, metadata !4086, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.value(metadata i32 4096, metadata !4090, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 4095, metadata !4091, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i8* %0, metadata !4083, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %1, metadata !4084, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %2, metadata !4085, metadata !DIExpression()), !dbg !4100
  %6 = icmp sgt i32 %2, 0, !dbg !4103
  br i1 %6, label %7, label %43, !dbg !4104

7:                                                ; preds = %3, %37
  %8 = phi i8* [ %40, %37 ], [ %0, %3 ]
  %9 = phi i32 [ %41, %37 ], [ %1, %3 ]
  %10 = phi i32 [ %38, %37 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !4083, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %9, metadata !4084, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %10, metadata !4085, metadata !DIExpression()), !dbg !4100
  %11 = and i32 %9, 4095, !dbg !4105
  %12 = icmp ne i32 %11, 0, !dbg !4105
  %13 = icmp ult i32 %10, 4096
  %14 = select i1 %12, i1 true, i1 %13, !dbg !4106
  br i1 %14, label %15, label %30, !dbg !4106

15:                                               ; preds = %7
  %16 = and i32 %9, -4096, !dbg !4107
  call void @llvm.dbg.value(metadata i32 %16, metadata !4096, metadata !DIExpression()), !dbg !4108
  %17 = call i32 @flash_direct_read_nocache(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #17, !dbg !4109
  %18 = icmp eq i32 %17, 4096, !dbg !4111
  br i1 %18, label %19, label %45, !dbg !4112

19:                                               ; preds = %15
  store i32 4, i32* @sf_drvier_status, align 4, !dbg !4113
  call void @llvm.dbg.value(metadata i32 %11, metadata !4092, metadata !DIExpression()), !dbg !4108
  %20 = sub nuw nsw i32 4096, %11, !dbg !4114
  %21 = icmp ugt i32 %10, %20, !dbg !4114
  %22 = select i1 %21, i32 %20, i32 %10, !dbg !4114
  call void @llvm.dbg.value(metadata i32 %22, metadata !4097, metadata !DIExpression()), !dbg !4108
  %23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 %11, !dbg !4115
  %24 = call i8* @memcpy(i8* noundef nonnull %23, i8* noundef %8, i32 noundef %22) #15, !dbg !4116
  %25 = call i32 @flash_erase(i32 noundef %16, i32 noundef 4096) #17, !dbg !4117
  %26 = call i32 @flash_write(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #17, !dbg !4119
  %27 = icmp eq i32 %26, 4096, !dbg !4121
  br i1 %27, label %28, label %45, !dbg !4122

28:                                               ; preds = %19
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %22), metadata !4083, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %22), metadata !4084, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %29 = sub nsw i32 %10, %22, !dbg !4123
  call void @llvm.dbg.value(metadata i32 %29, metadata !4085, metadata !DIExpression()), !dbg !4100
  br label %37

30:                                               ; preds = %7
  %31 = and i32 %10, -4096, !dbg !4124
  call void @llvm.dbg.value(metadata i32 %31, metadata !4098, metadata !DIExpression()), !dbg !4125
  %32 = call i32 @flash_erase(i32 noundef %9, i32 noundef %31) #17, !dbg !4126
  %33 = call i32 @flash_write(i8* noundef %8, i32 noundef %9, i32 noundef %31) #17, !dbg !4128
  %34 = icmp eq i32 %33, %31, !dbg !4130
  br i1 %34, label %35, label %43, !dbg !4131

35:                                               ; preds = %30
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %31), metadata !4083, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %31), metadata !4084, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4100
  %36 = and i32 %10, 4095, !dbg !4132
  call void @llvm.dbg.value(metadata i8* %8, metadata !4083, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %9, metadata !4084, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %10, metadata !4085, metadata !DIExpression()), !dbg !4100
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %29, %28 ], [ %36, %35 ]
  %39 = phi i32 [ %22, %28 ], [ %31, %35 ]
  %40 = getelementptr inbounds i8, i8* %8, i32 %39, !dbg !4133
  %41 = add i32 %39, %9, !dbg !4133
  call void @llvm.dbg.value(metadata i8* %40, metadata !4083, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %41, metadata !4084, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.value(metadata i32 %38, metadata !4085, metadata !DIExpression()), !dbg !4100
  %42 = icmp sgt i32 %38, 0, !dbg !4103
  br i1 %42, label %7, label %43, !dbg !4104, !llvm.loop !4134

43:                                               ; preds = %37, %30, %3
  %44 = phi i32 [ 0, %3 ], [ -1, %30 ], [ 0, %37 ]
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4100
  br label %45, !dbg !4136

45:                                               ; preds = %19, %15, %43
  %46 = phi i32 [ %44, %43 ], [ -2, %15 ], [ -4, %19 ], !dbg !4100
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %5) #14, !dbg !4136
  ret i32 %46, !dbg !4136
}

; Function Attrs: noinline nounwind optsize
declare dso_local i32 @flash_direct_read_nocache(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #0 section ".ramTEXT"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @query_spi_flash_status() local_unnamed_addr #9 section ".ramTEXT" !dbg !4137 {
  %1 = load i32, i32* @sf_drvier_status, align 4, !dbg !4141
  switch i32 %1, label %3 [
    i32 -1, label %7
    i32 0, label %2
  ], !dbg !4143

2:                                                ; preds = %0
  br label %7, !dbg !4144

3:                                                ; preds = %0
  %4 = add i32 %1, -3, !dbg !4147
  %5 = icmp ult i32 %4, 3, !dbg !4147
  %6 = select i1 %5, i32 1, i32 2, !dbg !4149
  br label %7, !dbg !4149

7:                                                ; preds = %3, %0, %2
  %8 = phi i32 [ 0, %2 ], [ %1, %0 ], [ %6, %3 ], !dbg !4150
  ret i32 %8, !dbg !4151
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_count() local_unnamed_addr #0 !dbg !4152 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 2) #15, !dbg !4153
  ret i32 %1, !dbg !4154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time(i32 noundef %0) local_unnamed_addr #0 !dbg !4155 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4157, metadata !DIExpression()), !dbg !4160
  %2 = tail call i32 @get_current_count() #17, !dbg !4161
  %3 = add i32 %2, %0, !dbg !4162
  %4 = xor i32 %3, -1, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %3, metadata !4158, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4160
  %5 = tail call i32 @get_current_count() #17, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %5, metadata !4159, metadata !DIExpression()), !dbg !4160
  %6 = add i32 %5, %4, !dbg !4165
  %7 = icmp slt i32 %6, 0, !dbg !4165
  br i1 %7, label %8, label %12, !dbg !4166

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_count() #17, !dbg !4167
  call void @llvm.dbg.value(metadata i32 %9, metadata !4159, metadata !DIExpression()), !dbg !4160
  %10 = add i32 %9, %4, !dbg !4165
  %11 = icmp slt i32 %10, 0, !dbg !4165
  br i1 %11, label %8, label %12, !dbg !4166, !llvm.loop !4169

12:                                               ; preds = %8, %1
  ret void, !dbg !4171
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time_for_gpt4(i32 noundef %0) local_unnamed_addr #0 !dbg !4172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4174, metadata !DIExpression()), !dbg !4177
  %2 = tail call i32 @get_current_gpt4_count() #17, !dbg !4178
  %3 = add i32 %2, %0, !dbg !4179
  %4 = xor i32 %3, -1, !dbg !4180
  call void @llvm.dbg.value(metadata i32 %3, metadata !4175, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4177
  %5 = tail call i32 @get_current_gpt4_count() #17, !dbg !4181
  call void @llvm.dbg.value(metadata i32 %5, metadata !4176, metadata !DIExpression()), !dbg !4177
  %6 = add i32 %5, %4, !dbg !4182
  %7 = icmp slt i32 %6, 0, !dbg !4182
  br i1 %7, label %8, label %12, !dbg !4183

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_gpt4_count() #17, !dbg !4184
  call void @llvm.dbg.value(metadata i32 %9, metadata !4176, metadata !DIExpression()), !dbg !4177
  %10 = add i32 %9, %4, !dbg !4182
  %11 = icmp slt i32 %10, 0, !dbg !4182
  br i1 %11, label %8, label %12, !dbg !4183, !llvm.loop !4186

12:                                               ; preds = %8, %1
  ret void, !dbg !4188
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_gpt4_count() local_unnamed_addr #0 !dbg !4189 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 4) #15, !dbg !4190
  ret i32 %1, !dbg !4191
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !4192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4194, metadata !DIExpression()), !dbg !4196
  %2 = shl i32 %0, 5, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %2, metadata !4195, metadata !DIExpression()), !dbg !4196
  %3 = mul i32 %0, 7, !dbg !4198
  %4 = udiv i32 %3, 10, !dbg !4199
  %5 = add i32 %4, %2, !dbg !4200
  call void @llvm.dbg.value(metadata i32 %5, metadata !4195, metadata !DIExpression()), !dbg !4196
  %6 = mul i32 %0, 6, !dbg !4201
  %7 = udiv i32 %6, 100, !dbg !4202
  %8 = add i32 %5, %7, !dbg !4203
  call void @llvm.dbg.value(metadata i32 %8, metadata !4195, metadata !DIExpression()), !dbg !4196
  %9 = shl i32 %0, 3, !dbg !4204
  %10 = udiv i32 %9, 1000, !dbg !4205
  %11 = add i32 %8, %10, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %11, metadata !4195, metadata !DIExpression()), !dbg !4196
  tail call void @delay_time(i32 noundef %11) #17, !dbg !4207
  ret void, !dbg !4208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !4209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4211, metadata !DIExpression()), !dbg !4214
  %2 = tail call i32 @top_mcu_freq_get() #15, !dbg !4215
  %3 = udiv i32 %2, 1000000, !dbg !4216
  call void @llvm.dbg.value(metadata i32 %3, metadata !4213, metadata !DIExpression()), !dbg !4214
  %4 = mul i32 %3, %0, !dbg !4217
  call void @llvm.dbg.value(metadata i32 %4, metadata !4212, metadata !DIExpression()), !dbg !4214
  tail call void @delay_time_for_gpt4(i32 noundef %4) #17, !dbg !4218
  ret void, !dbg !4219
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvTMR_init(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2, void ()* noundef %3) local_unnamed_addr #0 !dbg !4220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4224, metadata !DIExpression()), !dbg !4228
  call void @llvm.dbg.value(metadata i32 %1, metadata !4225, metadata !DIExpression()), !dbg !4228
  call void @llvm.dbg.value(metadata i1 %2, metadata !4226, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4228
  call void @llvm.dbg.value(metadata void ()* %3, metadata !4227, metadata !DIExpression()), !dbg !4228
  tail call void @GPT_Stop(i32 noundef %0) #15, !dbg !4229
  %5 = icmp eq i32 %0, 0, !dbg !4230
  br i1 %5, label %6, label %7, !dbg !4232

6:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !4233
  br label %8, !dbg !4235

7:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !4236
  br label %8

8:                                                ; preds = %7, %6
  %9 = phi i32 [ %0, %7 ], [ 0, %6 ]
  tail call void @GPT_init(i32 noundef %9, i32 noundef 1, void ()* noundef %3) #15, !dbg !4238
  tail call void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) #15, !dbg !4239
  ret void, !dbg !4240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !4241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4243, metadata !DIExpression()), !dbg !4244
  tail call void @GPT_Start(i32 noundef %0) #15, !dbg !4245
  ret void, !dbg !4246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Stop(i32 noundef %0) local_unnamed_addr #0 !dbg !4247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4249, metadata !DIExpression()), !dbg !4250
  tail call void @GPT_Stop(i32 noundef %0) #15, !dbg !4251
  ret void, !dbg !4252
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT2Init() local_unnamed_addr #0 !dbg !4253 {
  tail call void @CM4_GPT2Init() #15, !dbg !4254
  ret void, !dbg !4255
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT4Init() local_unnamed_addr #0 !dbg !4256 {
  tail call void @CM4_GPT4Init() #15, !dbg !4257
  ret void, !dbg !4258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @clear_TMR_INT_status_bit(i32 noundef %0) local_unnamed_addr #5 !dbg !4259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4261, metadata !DIExpression()), !dbg !4262
  switch i32 %0, label %5 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !4263

2:                                                ; preds = %1
  br label %3, !dbg !4264

3:                                                ; preds = %1, %2
  %4 = phi i32 [ 2, %2 ], [ 1, %1 ]
  store volatile i32 %4, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !4262
  br label %5, !dbg !4267

5:                                                ; preds = %3, %1
  ret void, !dbg !4267
}

; Function Attrs: noinline nounwind optsize
define dso_local void @top_xtal_init() local_unnamed_addr #0 !dbg !4268 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4270, metadata !DIExpression()), !dbg !4272
  %1 = load volatile i32, i32* inttoptr (i32 -2097118784 to i32*), align 64, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %1, metadata !4271, metadata !DIExpression()), !dbg !4272
  %2 = lshr i32 %1, 13, !dbg !4274
  %3 = and i32 %2, 7, !dbg !4275
  call void @llvm.dbg.value(metadata i32 %3, metadata !4271, metadata !DIExpression()), !dbg !4272
  %4 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !4276
  call void @llvm.dbg.value(metadata i32 %4, metadata !4270, metadata !DIExpression()), !dbg !4272
  call void @llvm.dbg.value(metadata i32 %4, metadata !4270, metadata !DIExpression(DW_OP_constu, 18446744073709549568, DW_OP_and, DW_OP_stack_value)), !dbg !4272
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init, i32 0, i32 %3, !dbg !4277
  %6 = load i32, i32* %5, align 4, !dbg !4277
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init.1, i32 0, i32 %3, !dbg !4277
  %8 = load i32, i32* %7, align 4, !dbg !4277
  %9 = and i32 %4, -2048, !dbg !4278
  call void @llvm.dbg.value(metadata i32 %9, metadata !4270, metadata !DIExpression()), !dbg !4272
  store i32 %6, i32* @gXtalFreq, align 4, !dbg !4279
  %10 = or i32 %9, %8, !dbg !4279
  call void @llvm.dbg.value(metadata i32 %10, metadata !4270, metadata !DIExpression()), !dbg !4272
  store volatile i32 %10, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !4281
  %11 = load i32, i32* @gXtalFreq, align 4, !dbg !4282
  store i32 %11, i32* @gCpuFrequency, align 4, !dbg !4283
  tail call void @SystemCoreClockUpdate() #15, !dbg !4284
  %12 = load i32, i32* @SystemCoreClock, align 4, !dbg !4285
  %13 = udiv i32 %12, 1000, !dbg !4286
  %14 = tail call i32 @SysTick_Set(i32 noundef %13) #15, !dbg !4287
  ret void, !dbg !4288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_xtal_freq_get() local_unnamed_addr #9 !dbg !4289 {
  %1 = load i32, i32* @gXtalFreq, align 4, !dbg !4290
  ret i32 %1, !dbg !4291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_mcu_freq_get() local_unnamed_addr #9 !dbg !4292 {
  %1 = load i32, i32* @gCpuFrequency, align 4, !dbg !4293
  ret i32 %1, !dbg !4294
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON() local_unnamed_addr #10 !dbg !4295 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4299
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4299
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4297, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4298, metadata !DIExpression()), !dbg !4301
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !4302
  store volatile i32 %3, i32* %1, align 4, !dbg !4303
  %4 = load volatile i32, i32* %1, align 4, !dbg !4304
  %5 = lshr i32 %4, 28, !dbg !4305
  %6 = and i32 %5, 3, !dbg !4306
  store volatile i32 %6, i32* %1, align 4, !dbg !4307
  %7 = load volatile i32, i32* %1, align 4, !dbg !4308
  %8 = icmp eq i32 %7, 0, !dbg !4310
  br i1 %8, label %9, label %22, !dbg !4311

9:                                                ; preds = %0
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !4312
  store volatile i32 %10, i32* %1, align 4, !dbg !4314
  %11 = load volatile i32, i32* %1, align 4, !dbg !4315
  %12 = and i32 %11, -16777217, !dbg !4316
  store volatile i32 %12, i32* %1, align 4, !dbg !4317
  %13 = load volatile i32, i32* %1, align 4, !dbg !4318
  %14 = or i32 %13, 536870912, !dbg !4319
  store volatile i32 %14, i32* %1, align 4, !dbg !4320
  %15 = load volatile i32, i32* %1, align 4, !dbg !4321
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %15) #17, !dbg !4322
  br label %16, !dbg !4323

16:                                               ; preds = %16, %9
  %17 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !4324
  store volatile i32 %17, i32* %1, align 4, !dbg !4326
  %18 = load volatile i32, i32* %1, align 4, !dbg !4327
  %19 = and i32 %18, 134217728, !dbg !4328
  store volatile i32 %19, i32* %1, align 4, !dbg !4329
  %20 = load volatile i32, i32* %1, align 4, !dbg !4330
  %21 = icmp eq i32 %20, 0, !dbg !4331
  br i1 %21, label %16, label %22, !dbg !4332, !llvm.loop !4333

22:                                               ; preds = %16, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4335
  ret void, !dbg !4335
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @cmnReadRegister32(i8* noundef %0) unnamed_addr #7 !dbg !4336 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4343, metadata !DIExpression()), !dbg !4344
  %2 = bitcast i8* %0 to i32*, !dbg !4345
  %3 = load volatile i32, i32* %2, align 4, !dbg !4346
  ret i32 %3, !dbg !4347
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @cmnWriteRegister32(i8* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4348 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4352, metadata !DIExpression()), !dbg !4354
  call void @llvm.dbg.value(metadata i32 %1, metadata !4353, metadata !DIExpression()), !dbg !4354
  %3 = bitcast i8* %0 to i32*, !dbg !4355
  store volatile i32 %1, i32* %3, align 4, !dbg !4356
  ret void, !dbg !4357
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON_PLL2ON(i8 noundef zeroext %0) local_unnamed_addr #10 !dbg !4358 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !4362, metadata !DIExpression()), !dbg !4365
  %3 = bitcast i32* %2 to i8*, !dbg !4366
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4366
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4363, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4364, metadata !DIExpression()), !dbg !4365
  %4 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !4368
  store volatile i32 %4, i32* %2, align 4, !dbg !4369
  %5 = load volatile i32, i32* %2, align 4, !dbg !4370
  %6 = lshr i32 %5, 28, !dbg !4371
  %7 = and i32 %6, 3, !dbg !4372
  store volatile i32 %7, i32* %2, align 4, !dbg !4373
  %8 = load volatile i32, i32* %2, align 4, !dbg !4374
  %9 = icmp eq i32 %8, 3, !dbg !4376
  br i1 %9, label %38, label %10, !dbg !4377

10:                                               ; preds = %1
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !4378
  store volatile i32 %11, i32* %2, align 4, !dbg !4380
  %12 = load volatile i32, i32* %2, align 4, !dbg !4381
  %13 = and i32 %12, -262145, !dbg !4382
  store volatile i32 %13, i32* %2, align 4, !dbg !4383
  %14 = load volatile i32, i32* %2, align 4, !dbg !4384
  %15 = and i32 %14, -16777217, !dbg !4385
  store volatile i32 %15, i32* %2, align 4, !dbg !4386
  %16 = load volatile i32, i32* %2, align 4, !dbg !4387
  store volatile i32 %16, i32* %2, align 4, !dbg !4388
  %17 = load volatile i32, i32* %2, align 4, !dbg !4389
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %17) #17, !dbg !4390
  %18 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !4391
  store volatile i32 %18, i32* %2, align 4, !dbg !4392
  %19 = load volatile i32, i32* %2, align 4, !dbg !4393
  %20 = and i32 %19, -805306369, !dbg !4394
  store volatile i32 %20, i32* %2, align 4, !dbg !4395
  %21 = load volatile i32, i32* %2, align 4, !dbg !4396
  %22 = and i32 %21, -16777217, !dbg !4397
  store volatile i32 %22, i32* %2, align 4, !dbg !4398
  %23 = load volatile i32, i32* %2, align 4, !dbg !4399
  %24 = or i32 %23, 805306368, !dbg !4400
  store volatile i32 %24, i32* %2, align 4, !dbg !4401
  %25 = load volatile i32, i32* %2, align 4, !dbg !4402
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %25) #17, !dbg !4403
  br label %26, !dbg !4404

26:                                               ; preds = %26, %10
  %27 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !4405
  store volatile i32 %27, i32* %2, align 4, !dbg !4407
  %28 = load volatile i32, i32* %2, align 4, !dbg !4408
  %29 = and i32 %28, 67108864, !dbg !4409
  store volatile i32 %29, i32* %2, align 4, !dbg !4410
  %30 = load volatile i32, i32* %2, align 4, !dbg !4411
  %31 = icmp eq i32 %30, 0, !dbg !4412
  br i1 %31, label %26, label %32, !dbg !4413, !llvm.loop !4414

32:                                               ; preds = %26
  %33 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !4416
  store volatile i32 %33, i32* %2, align 4, !dbg !4417
  %34 = load volatile i32, i32* %2, align 4, !dbg !4418
  %35 = and i32 %34, -262145, !dbg !4419
  store volatile i32 %35, i32* %2, align 4, !dbg !4420
  %36 = load volatile i32, i32* %2, align 4, !dbg !4421
  %37 = and i32 %36, -16777217, !dbg !4422
  store volatile i32 %37, i32* %2, align 4, !dbg !4423
  br label %38, !dbg !4424

38:                                               ; preds = %32, %1
  %39 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !4425
  store volatile i32 %39, i32* %2, align 4, !dbg !4426
  %40 = icmp eq i8 %0, 0, !dbg !4427
  %41 = load volatile i32, i32* %2, align 4, !dbg !4429
  br i1 %40, label %44, label %42, !dbg !4430

42:                                               ; preds = %38
  %43 = or i32 %41, 262144, !dbg !4431
  store volatile i32 %43, i32* %2, align 4, !dbg !4433
  br label %45, !dbg !4434

44:                                               ; preds = %38
  store volatile i32 %41, i32* %2, align 4, !dbg !4435
  br label %45

45:                                               ; preds = %44, %42
  %46 = load volatile i32, i32* %2, align 4, !dbg !4437
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %46) #17, !dbg !4438
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4439
  ret void, !dbg !4439
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1OFF_PLL2OFF() local_unnamed_addr #10 !dbg !4440 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4444
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4444
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4442, metadata !DIExpression()), !dbg !4445
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4443, metadata !DIExpression()), !dbg !4446
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !4447
  store volatile i32 %3, i32* %1, align 4, !dbg !4448
  %4 = load volatile i32, i32* %1, align 4, !dbg !4449
  %5 = and i32 %4, -805306369, !dbg !4450
  store volatile i32 %5, i32* %1, align 4, !dbg !4451
  %6 = load volatile i32, i32* %1, align 4, !dbg !4452
  %7 = and i32 %6, -16777217, !dbg !4453
  store volatile i32 %7, i32* %1, align 4, !dbg !4454
  %8 = load volatile i32, i32* %1, align 4, !dbg !4455
  store volatile i32 %8, i32* %1, align 4, !dbg !4456
  %9 = load volatile i32, i32* %1, align 4, !dbg !4457
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %9) #17, !dbg !4458
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !4459
  store volatile i32 %10, i32* %1, align 4, !dbg !4460
  %11 = load volatile i32, i32* %1, align 4, !dbg !4461
  %12 = and i32 %11, -262145, !dbg !4462
  store volatile i32 %12, i32* %1, align 4, !dbg !4463
  %13 = load volatile i32, i32* %1, align 4, !dbg !4464
  %14 = and i32 %13, -16777217, !dbg !4465
  store volatile i32 %14, i32* %1, align 4, !dbg !4466
  %15 = load volatile i32, i32* %1, align 4, !dbg !4467
  store volatile i32 %15, i32* %1, align 4, !dbg !4468
  %16 = load volatile i32, i32* %1, align 4, !dbg !4469
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %16) #17, !dbg !4470
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4471
  ret void, !dbg !4471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureToXtal() local_unnamed_addr #0 !dbg !4472 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4476
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4476
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4474, metadata !DIExpression()), !dbg !4477
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4475, metadata !DIExpression()), !dbg !4478
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4479
  store volatile i32 %3, i32* %1, align 4, !dbg !4480
  %4 = load volatile i32, i32* %1, align 4, !dbg !4481
  %5 = and i32 %4, -8, !dbg !4482
  store volatile i32 %5, i32* %1, align 4, !dbg !4483
  %6 = load volatile i32, i32* %1, align 4, !dbg !4484
  store volatile i32 %6, i32* %1, align 4, !dbg !4485
  %7 = load volatile i32, i32* %1, align 4, !dbg !4486
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #17, !dbg !4487
  %8 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4488
  store volatile i32 %8, i32* %1, align 4, !dbg !4489
  %9 = load volatile i32, i32* %1, align 4, !dbg !4490
  %10 = and i32 %9, -49153, !dbg !4491
  store volatile i32 %10, i32* %1, align 4, !dbg !4492
  %11 = load volatile i32, i32* %1, align 4, !dbg !4493
  store volatile i32 %11, i32* %1, align 4, !dbg !4494
  %12 = load volatile i32, i32* %1, align 4, !dbg !4495
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %12) #17, !dbg !4496
  br label %13, !dbg !4497

13:                                               ; preds = %13, %0
  %14 = load volatile i32, i32* %1, align 4, !dbg !4498
  %15 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4499
  %16 = icmp eq i32 %14, %15, !dbg !4500
  br i1 %16, label %17, label %13, !dbg !4497, !llvm.loop !4501

17:                                               ; preds = %13
  %18 = tail call i32 @top_xtal_freq_get() #17, !dbg !4503
  store i32 %18, i32* @gCpuFrequency, align 4, !dbg !4504
  tail call void @SystemCoreClockUpdate() #15, !dbg !4505
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !4506
  %20 = udiv i32 %19, 1000, !dbg !4507
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #15, !dbg !4508
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4509
  ret void, !dbg !4509
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo192M() local_unnamed_addr #0 !dbg !4510 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4514
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4514
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4512, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4513, metadata !DIExpression()), !dbg !4516
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 1) #17, !dbg !4517
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4518
  store volatile i32 %3, i32* %1, align 4, !dbg !4519
  %4 = load volatile i32, i32* %1, align 4, !dbg !4520
  %5 = and i32 %4, -49153, !dbg !4521
  store volatile i32 %5, i32* %1, align 4, !dbg !4522
  %6 = load volatile i32, i32* %1, align 4, !dbg !4523
  %7 = or i32 %6, 16384, !dbg !4524
  store volatile i32 %7, i32* %1, align 4, !dbg !4525
  %8 = load volatile i32, i32* %1, align 4, !dbg !4526
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #17, !dbg !4527
  br label %9, !dbg !4528

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !4529
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4530
  %12 = icmp eq i32 %10, %11, !dbg !4531
  br i1 %12, label %13, label %9, !dbg !4528, !llvm.loop !4532

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4534
  store volatile i32 %14, i32* %1, align 4, !dbg !4535
  %15 = load volatile i32, i32* %1, align 4, !dbg !4536
  %16 = and i32 %15, -1009, !dbg !4537
  store volatile i32 %16, i32* %1, align 4, !dbg !4538
  %17 = load volatile i32, i32* %1, align 4, !dbg !4539
  %18 = or i32 %17, 128, !dbg !4540
  store volatile i32 %18, i32* %1, align 4, !dbg !4541
  %19 = load volatile i32, i32* %1, align 4, !dbg !4542
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #17, !dbg !4543
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4544
  store volatile i32 %20, i32* %1, align 4, !dbg !4545
  %21 = load volatile i32, i32* %1, align 4, !dbg !4546
  %22 = and i32 %21, -8, !dbg !4547
  store volatile i32 %22, i32* %1, align 4, !dbg !4548
  %23 = load volatile i32, i32* %1, align 4, !dbg !4549
  %24 = or i32 %23, 4, !dbg !4550
  store volatile i32 %24, i32* %1, align 4, !dbg !4551
  %25 = load volatile i32, i32* %1, align 4, !dbg !4552
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #17, !dbg !4553
  store i32 192000000, i32* @gCpuFrequency, align 4, !dbg !4554
  tail call void @SystemCoreClockUpdate() #15, !dbg !4555
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !4556
  %27 = udiv i32 %26, 1000, !dbg !4557
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #15, !dbg !4558
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4559
  ret void, !dbg !4559
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo160M() local_unnamed_addr #0 !dbg !4560 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4564
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4564
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4562, metadata !DIExpression()), !dbg !4565
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4563, metadata !DIExpression()), !dbg !4566
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 0) #17, !dbg !4567
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4568
  store volatile i32 %3, i32* %1, align 4, !dbg !4569
  %4 = load volatile i32, i32* %1, align 4, !dbg !4570
  %5 = and i32 %4, -49153, !dbg !4571
  store volatile i32 %5, i32* %1, align 4, !dbg !4572
  %6 = load volatile i32, i32* %1, align 4, !dbg !4573
  %7 = or i32 %6, 32768, !dbg !4574
  store volatile i32 %7, i32* %1, align 4, !dbg !4575
  %8 = load volatile i32, i32* %1, align 4, !dbg !4576
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #17, !dbg !4577
  br label %9, !dbg !4578

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !4579
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4580
  %12 = icmp eq i32 %10, %11, !dbg !4581
  br i1 %12, label %13, label %9, !dbg !4578, !llvm.loop !4582

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4584
  store volatile i32 %14, i32* %1, align 4, !dbg !4585
  %15 = load volatile i32, i32* %1, align 4, !dbg !4586
  %16 = and i32 %15, -1009, !dbg !4587
  store volatile i32 %16, i32* %1, align 4, !dbg !4588
  %17 = load volatile i32, i32* %1, align 4, !dbg !4589
  %18 = or i32 %17, 32, !dbg !4590
  store volatile i32 %18, i32* %1, align 4, !dbg !4591
  %19 = load volatile i32, i32* %1, align 4, !dbg !4592
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #17, !dbg !4593
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4594
  store volatile i32 %20, i32* %1, align 4, !dbg !4595
  %21 = load volatile i32, i32* %1, align 4, !dbg !4596
  %22 = and i32 %21, -8, !dbg !4597
  store volatile i32 %22, i32* %1, align 4, !dbg !4598
  %23 = load volatile i32, i32* %1, align 4, !dbg !4599
  %24 = or i32 %23, 4, !dbg !4600
  store volatile i32 %24, i32* %1, align 4, !dbg !4601
  %25 = load volatile i32, i32* %1, align 4, !dbg !4602
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #17, !dbg !4603
  store i32 160000000, i32* @gCpuFrequency, align 4, !dbg !4604
  tail call void @SystemCoreClockUpdate() #15, !dbg !4605
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !4606
  %27 = udiv i32 %26, 1000, !dbg !4607
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #15, !dbg !4608
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4609
  ret void, !dbg !4609
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo64M() local_unnamed_addr #0 !dbg !4610 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4614
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4612, metadata !DIExpression()), !dbg !4615
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4613, metadata !DIExpression()), !dbg !4616
  tail call void @cmnPLL1ON() #17, !dbg !4617
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4618
  store volatile i32 %3, i32* %1, align 4, !dbg !4619
  %4 = load volatile i32, i32* %1, align 4, !dbg !4620
  %5 = and i32 %4, -49153, !dbg !4621
  store volatile i32 %5, i32* %1, align 4, !dbg !4622
  %6 = load volatile i32, i32* %1, align 4, !dbg !4623
  store volatile i32 %6, i32* %1, align 4, !dbg !4624
  %7 = load volatile i32, i32* %1, align 4, !dbg !4625
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #17, !dbg !4626
  br label %8, !dbg !4627

8:                                                ; preds = %8, %0
  %9 = load volatile i32, i32* %1, align 4, !dbg !4628
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4629
  %11 = icmp eq i32 %9, %10, !dbg !4630
  br i1 %11, label %12, label %8, !dbg !4627, !llvm.loop !4631

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !4633
  store volatile i32 %13, i32* %1, align 4, !dbg !4634
  %14 = load volatile i32, i32* %1, align 4, !dbg !4635
  %15 = and i32 %14, -8, !dbg !4636
  store volatile i32 %15, i32* %1, align 4, !dbg !4637
  %16 = load volatile i32, i32* %1, align 4, !dbg !4638
  %17 = or i32 %16, 2, !dbg !4639
  store volatile i32 %17, i32* %1, align 4, !dbg !4640
  %18 = load volatile i32, i32* %1, align 4, !dbg !4641
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %18) #17, !dbg !4642
  store i32 64000000, i32* @gCpuFrequency, align 4, !dbg !4643
  tail call void @SystemCoreClockUpdate() #15, !dbg !4644
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !4645
  %20 = udiv i32 %19, 1000, !dbg !4646
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #15, !dbg !4647
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4648
  ret void, !dbg !4648
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfToXtal() local_unnamed_addr #10 section ".ramTEXT" !dbg !4649 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4653
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4653
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4651, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !4652, metadata !DIExpression()), !dbg !4655
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #17, !dbg !4656
  store volatile i32 %3, i32* %1, align 4, !dbg !4657
  %4 = load volatile i32, i32* %1, align 4, !dbg !4658
  %5 = and i32 %4, -24577, !dbg !4659
  store volatile i32 %5, i32* %1, align 4, !dbg !4660
  %6 = load volatile i32, i32* %1, align 4, !dbg !4661
  store volatile i32 %6, i32* %1, align 4, !dbg !4662
  %7 = load volatile i32, i32* %1, align 4, !dbg !4663
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %7) #17, !dbg !4664
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4665
  ret void, !dbg !4665
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfTo64M() local_unnamed_addr #10 section ".ramTEXT" !dbg !4666 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4676
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4676
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4668, metadata !DIExpression()), !dbg !4677
  store volatile i32 0, i32* %1, align 4, !dbg !4677
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !4669, metadata !DIExpression()), !dbg !4678
  tail call void @cmnPLL1ON() #17, !dbg !4679
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #17, !dbg !4680
  store volatile i32 %3, i32* %1, align 4, !dbg !4681
  %4 = load volatile i32, i32* %1, align 4, !dbg !4682
  %5 = and i32 %4, -24577, !dbg !4683
  store volatile i32 %5, i32* %1, align 4, !dbg !4684
  %6 = load volatile i32, i32* %1, align 4, !dbg !4685
  %7 = or i32 %6, 8192, !dbg !4686
  store volatile i32 %7, i32* %1, align 4, !dbg !4687
  %8 = load volatile i32, i32* %1, align 4, !dbg !4688
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %8) #17, !dbg !4689
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !4670, metadata !DIExpression()), !dbg !4690
  %9 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4691
  %10 = and i32 %9, -4, !dbg !4691
  store volatile i32 %10, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4691
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !4672, metadata !DIExpression()), !dbg !4692
  %11 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4693
  %12 = or i32 %11, 16, !dbg !4693
  store volatile i32 %12, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !4693
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693208 to i32*), metadata !4674, metadata !DIExpression()), !dbg !4694
  %13 = load volatile i32, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !4695
  %14 = and i32 %13, -64, !dbg !4695
  %15 = or i32 %14, 24, !dbg !4695
  store volatile i32 %15, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !4695
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4696
  ret void, !dbg !4696
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc() local_unnamed_addr #7 !dbg !4697 {
  %1 = tail call i32 @getc_nowait() #17, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %1, metadata !4699, metadata !DIExpression()), !dbg !4701
  ret i32 %1, !dbg !4702
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc_nowait() local_unnamed_addr #7 !dbg !4703 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096955372 to i32*), align 4, !dbg !4706
  %2 = and i32 %1, 1, !dbg !4708
  %3 = icmp eq i32 %2, 0, !dbg !4708
  br i1 %3, label %7, label %4, !dbg !4709

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -2096955392 to i32*), align 65536, !dbg !4710
  %6 = and i32 %5, 255, !dbg !4712
  call void @llvm.dbg.value(metadata i32 %5, metadata !4705, metadata !DIExpression()), !dbg !4713
  br label %7, !dbg !4714

7:                                                ; preds = %0, %4
  %8 = phi i32 [ %6, %4 ], [ -1, %0 ], !dbg !4715
  ret i32 %8, !dbg !4716
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_output_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !4717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4722, metadata !DIExpression()), !dbg !4725
  call void @llvm.dbg.value(metadata i8 %1, metadata !4723, metadata !DIExpression()), !dbg !4725
  %3 = icmp eq i32 %0, 0, !dbg !4726
  %4 = select i1 %3, i32 -2096955392, i32 -2096889856, !dbg !4726
  call void @llvm.dbg.value(metadata i32 %4, metadata !4724, metadata !DIExpression()), !dbg !4725
  %5 = or i32 %4, 20
  %6 = inttoptr i32 %5 to i32*
  br label %7, !dbg !4727

7:                                                ; preds = %7, %2
  %8 = load volatile i32, i32* %6, align 4, !dbg !4728
  %9 = and i32 %8, 32, !dbg !4729
  %10 = icmp eq i32 %9, 0, !dbg !4730
  br i1 %10, label %7, label %11, !dbg !4727, !llvm.loop !4731

11:                                               ; preds = %7
  %12 = zext i8 %1 to i32, !dbg !4733
  %13 = inttoptr i32 %4 to i32*, !dbg !4734
  store volatile i32 %12, i32* %13, align 65536, !dbg !4735
  ret void, !dbg !4736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_input_char(i32 noundef %0) local_unnamed_addr #5 !dbg !4737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4741, metadata !DIExpression()), !dbg !4744
  %2 = icmp eq i32 %0, 0, !dbg !4745
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %3, metadata !4742, metadata !DIExpression()), !dbg !4744
  %4 = or i32 %3, 20
  %5 = inttoptr i32 %4 to i32*
  br label %6, !dbg !4746

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* %5, align 4, !dbg !4747
  %8 = and i32 %7, 1, !dbg !4748
  %9 = icmp eq i32 %8, 0, !dbg !4749
  br i1 %9, label %6, label %10, !dbg !4746, !llvm.loop !4750

10:                                               ; preds = %6
  %11 = inttoptr i32 %3 to i32*, !dbg !4752
  %12 = load volatile i32, i32* %11, align 65536, !dbg !4752
  %13 = trunc i32 %12 to i8, !dbg !4752
  call void @llvm.dbg.value(metadata i8 %13, metadata !4743, metadata !DIExpression()), !dbg !4744
  ret i8 %13, !dbg !4753
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_input_char_unblocking(i32 noundef %0) local_unnamed_addr #7 !dbg !4754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4758, metadata !DIExpression()), !dbg !4761
  %2 = icmp eq i32 %0, 0, !dbg !4762
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %3, metadata !4759, metadata !DIExpression()), !dbg !4761
  %4 = or i32 %3, 20, !dbg !4763
  %5 = inttoptr i32 %4 to i32*, !dbg !4763
  %6 = load volatile i32, i32* %5, align 4, !dbg !4763
  %7 = and i32 %6, 1, !dbg !4765
  %8 = icmp eq i32 %7, 0, !dbg !4765
  br i1 %8, label %13, label %9, !dbg !4766

9:                                                ; preds = %1
  %10 = inttoptr i32 %3 to i32*, !dbg !4767
  %11 = load volatile i32, i32* %10, align 65536, !dbg !4767
  %12 = and i32 %11, 255, !dbg !4769
  call void @llvm.dbg.value(metadata i32 %11, metadata !4760, metadata !DIExpression()), !dbg !4761
  br label %13, !dbg !4770

13:                                               ; preds = %1, %9
  %14 = phi i32 [ %12, %9 ], [ -1, %1 ], !dbg !4771
  ret i32 %14, !dbg !4772
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_HWInit(i32 noundef %0) local_unnamed_addr #0 !dbg !4773 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4777, metadata !DIExpression()), !dbg !4778
  tail call void @halUART_SetFormat(i32 noundef %0, i32 noundef 115200, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 0) #17, !dbg !4779
  switch i32 %0, label %7 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !4780

2:                                                ; preds = %1
  br label %3, !dbg !4781

3:                                                ; preds = %1, %2
  %4 = phi i32* [ inttoptr (i32 -2096889780 to i32*), %2 ], [ inttoptr (i32 -2096955316 to i32*), %1 ]
  %5 = load volatile i32, i32* %4, align 4, !dbg !4785
  %6 = or i32 %5, 1, !dbg !4785
  store volatile i32 %6, i32* %4, align 4, !dbg !4785
  br label %7, !dbg !4786

7:                                                ; preds = %3, %1
  ret void, !dbg !4786
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_SetFormat(i32 noundef %0, i32 noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 !dbg !4787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4791, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i32 %1, metadata !4792, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i16 %2, metadata !4793, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i16 %3, metadata !4794, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i16 %4, metadata !4795, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i32 -2096955392, metadata !4797, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, metadata !4804, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, metadata !4806, metadata !DIExpression()), !dbg !4810
  call void @llvm.dbg.value(metadata i32 0, metadata !4807, metadata !DIExpression()), !dbg !4808
  %6 = tail call i32 @top_xtal_freq_get() #15, !dbg !4811
  store i32 %6, i32* @gUartClkFreq, align 4, !dbg !4812
  %7 = icmp eq i32 %0, 1, !dbg !4813
  %8 = select i1 %7, i32 -2096889856, i32 -2096955392, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %8, metadata !4797, metadata !DIExpression()), !dbg !4808
  %9 = or i32 %8, 36, !dbg !4814
  %10 = inttoptr i32 %9 to i32*, !dbg !4814
  store volatile i32 3, i32* %10, align 4, !dbg !4815
  %11 = or i32 %8, 12, !dbg !4816
  %12 = inttoptr i32 %11 to i32*, !dbg !4816
  %13 = load volatile i32, i32* %12, align 4, !dbg !4816
  call void @llvm.dbg.value(metadata i32 %13, metadata !4799, metadata !DIExpression()), !dbg !4808
  %14 = or i32 %13, 128, !dbg !4817
  store volatile i32 %14, i32* %12, align 4, !dbg !4818
  %15 = load i32, i32* @gUartClkFreq, align 4, !dbg !4819
  %16 = udiv i32 %15, %1, !dbg !4820
  call void @llvm.dbg.value(metadata i32 %16, metadata !4798, metadata !DIExpression()), !dbg !4808
  %17 = lshr i32 %16, 8, !dbg !4821
  %18 = add nuw nsw i32 %17, 1, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %18, metadata !4800, metadata !DIExpression()), !dbg !4808
  %19 = udiv i32 %16, %18, !dbg !4823
  %20 = add i32 %19, -1, !dbg !4825
  call void @llvm.dbg.value(metadata i32 %20, metadata !4801, metadata !DIExpression()), !dbg !4808
  %21 = icmp eq i32 %20, 3, !dbg !4826
  %22 = lshr i32 %20, 1, !dbg !4828
  %23 = add nsw i32 %22, -1, !dbg !4828
  %24 = select i1 %21, i32 0, i32 %23, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %24, metadata !4802, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata i32 undef, metadata !4807, metadata !DIExpression()), !dbg !4808
  %25 = mul i32 %15, 10, !dbg !4829
  %26 = udiv i32 %25, %1, !dbg !4830
  %27 = udiv i32 %26, %16, !dbg !4831
  %28 = mul i32 %19, -10, !dbg !4832
  %29 = add i32 %27, %28, !dbg !4833
  %30 = urem i32 %29, 10, !dbg !4834
  call void @llvm.dbg.value(metadata i32 %30, metadata !4803, metadata !DIExpression()), !dbg !4808
  %31 = and i32 %18, 255, !dbg !4835
  %32 = inttoptr i32 %8 to i32*, !dbg !4836
  store volatile i32 %31, i32* %32, align 65536, !dbg !4837
  %33 = lshr i32 %18, 8, !dbg !4838
  %34 = and i32 %33, 255, !dbg !4839
  %35 = or i32 %8, 4, !dbg !4840
  %36 = inttoptr i32 %35 to i32*, !dbg !4840
  store volatile i32 %34, i32* %36, align 4, !dbg !4841
  %37 = or i32 %8, 40, !dbg !4842
  %38 = inttoptr i32 %37 to i32*, !dbg !4842
  store volatile i32 %20, i32* %38, align 8, !dbg !4843
  %39 = or i32 %8, 44, !dbg !4844
  %40 = inttoptr i32 %39 to i32*, !dbg !4844
  store volatile i32 %24, i32* %40, align 4, !dbg !4845
  %41 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, i32 0, i32 %30, !dbg !4846
  %42 = load i16, i16* %41, align 2, !dbg !4846
  %43 = zext i16 %42 to i32, !dbg !4846
  %44 = or i32 %8, 88, !dbg !4847
  %45 = inttoptr i32 %44 to i32*, !dbg !4847
  store volatile i32 %43, i32* %45, align 8, !dbg !4848
  %46 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, i32 0, i32 %30, !dbg !4849
  %47 = load i16, i16* %46, align 2, !dbg !4849
  %48 = zext i16 %47 to i32, !dbg !4849
  %49 = or i32 %8, 84, !dbg !4850
  %50 = inttoptr i32 %49 to i32*, !dbg !4850
  store volatile i32 %48, i32* %50, align 4, !dbg !4851
  store volatile i32 %13, i32* %12, align 4, !dbg !4852
  %51 = or i32 %8, 8, !dbg !4853
  %52 = inttoptr i32 %51 to i32*, !dbg !4853
  store volatile i32 71, i32* %52, align 8, !dbg !4854
  %53 = inttoptr i32 %11 to i16*, !dbg !4855
  %54 = load volatile i16, i16* %53, align 4, !dbg !4855
  call void @llvm.dbg.value(metadata i16 %54, metadata !4796, metadata !DIExpression()), !dbg !4808
  %55 = and i16 %54, -64, !dbg !4856
  call void @llvm.dbg.value(metadata i16 %54, metadata !4796, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !4808
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %2), metadata !4796, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4808
  %56 = and i16 %2, -61, !dbg !4857
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %56), metadata !4796, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4808
  call void @llvm.dbg.value(metadata !DIArgList(i16 %55, i16 %4, i16 %56), metadata !4796, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !4808
  %57 = and i16 %4, -57, !dbg !4858
  call void @llvm.dbg.value(metadata i16 undef, metadata !4796, metadata !DIExpression()), !dbg !4808
  %58 = or i16 %56, %3, !dbg !4857
  %59 = or i16 %58, %57, !dbg !4858
  %60 = or i16 %59, %55, !dbg !4859
  call void @llvm.dbg.value(metadata i16 %60, metadata !4796, metadata !DIExpression()), !dbg !4808
  store volatile i16 %60, i16* %53, align 4, !dbg !4860
  ret void, !dbg !4861
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #7 !dbg !4862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4867, metadata !DIExpression()), !dbg !4870
  call void @llvm.dbg.value(metadata i32 %1, metadata !4868, metadata !DIExpression()), !dbg !4870
  call void @llvm.dbg.value(metadata i32* %2, metadata !4869, metadata !DIExpression()), !dbg !4870
  %4 = icmp eq i32 %0, 0, !dbg !4871
  %5 = icmp eq i32 %1, 0, !dbg !4873
  br i1 %4, label %6, label %16, !dbg !4874

6:                                                ; preds = %3
  br i1 %5, label %10, label %7, !dbg !4875

7:                                                ; preds = %6
  %8 = load volatile i16, i16* inttoptr (i32 -2097082568 to i16*), align 8, !dbg !4877
  %9 = zext i16 %8 to i32, !dbg !4877
  br label %26, !dbg !4880

10:                                               ; preds = %6
  %11 = load volatile i16, i16* inttoptr (i32 -2097082812 to i16*), align 4, !dbg !4881
  %12 = zext i16 %11 to i32, !dbg !4881
  store i32 %12, i32* %2, align 4, !dbg !4883
  %13 = load volatile i16, i16* inttoptr (i32 -2097082824 to i16*), align 8, !dbg !4884
  %14 = zext i16 %13 to i32, !dbg !4884
  %15 = sub nsw i32 %12, %14, !dbg !4885
  br label %26

16:                                               ; preds = %3
  br i1 %5, label %20, label %17, !dbg !4886

17:                                               ; preds = %16
  %18 = load volatile i16, i16* inttoptr (i32 -2097082056 to i16*), align 8, !dbg !4888
  %19 = zext i16 %18 to i32, !dbg !4888
  br label %26, !dbg !4891

20:                                               ; preds = %16
  %21 = load volatile i16, i16* inttoptr (i32 -2097082300 to i16*), align 4, !dbg !4892
  %22 = zext i16 %21 to i32, !dbg !4892
  store i32 %22, i32* %2, align 4, !dbg !4894
  %23 = load volatile i16, i16* inttoptr (i32 -2097082312 to i16*), align 8, !dbg !4895
  %24 = zext i16 %23 to i32, !dbg !4895
  %25 = sub nsw i32 %22, %24, !dbg !4896
  br label %26

26:                                               ; preds = %17, %20, %7, %10
  %27 = phi i32 [ %19, %17 ], [ %25, %20 ], [ %9, %7 ], [ %15, %10 ]
  store i32 %27, i32* %2, align 4, !dbg !4873
  ret void, !dbg !4897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Read_VFIFO_Data(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !4898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4902, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %1, metadata !4903, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 %2, metadata !4904, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 0, metadata !4905, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i32 0, metadata !4905, metadata !DIExpression()), !dbg !4906
  %4 = icmp eq i32 %2, 0, !dbg !4907
  br i1 %4, label %15, label %5, !dbg !4910

5:                                                ; preds = %3, %12
  %6 = phi i32 [ %13, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4905, metadata !DIExpression()), !dbg !4906
  switch i32 %0, label %12 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !4911

7:                                                ; preds = %5
  br label %8, !dbg !4913

8:                                                ; preds = %5, %7
  %9 = phi i8* [ inttoptr (i32 2030044416 to i8*), %7 ], [ inttoptr (i32 2030043904 to i8*), %5 ]
  %10 = load volatile i8, i8* %9, align 256, !dbg !4917
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !4917
  store i8 %10, i8* %11, align 1, !dbg !4917
  br label %12, !dbg !4918

12:                                               ; preds = %8, %5
  %13 = add nuw i32 %6, 1, !dbg !4918
  call void @llvm.dbg.value(metadata i32 %13, metadata !4905, metadata !DIExpression()), !dbg !4906
  %14 = icmp eq i32 %13, %2, !dbg !4907
  br i1 %14, label %15, label %5, !dbg !4910, !llvm.loop !4919

15:                                               ; preds = %12, %3
  ret void, !dbg !4921
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Write_VFIFO_Data(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !4922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4926, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i8* %1, metadata !4927, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i32 %2, metadata !4928, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i32 0, metadata !4929, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.value(metadata i32 0, metadata !4929, metadata !DIExpression()), !dbg !4930
  %4 = icmp eq i32 %2, 0, !dbg !4931
  br i1 %4, label %16, label %5, !dbg !4934

5:                                                ; preds = %3, %13
  %6 = phi i32 [ %14, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4929, metadata !DIExpression()), !dbg !4930
  switch i32 %0, label %13 [
    i32 0, label %7
    i32 1, label %10
  ], !dbg !4935

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !4937
  %9 = load i8, i8* %8, align 1, !dbg !4937
  store volatile i8 %9, i8* inttoptr (i32 2030043648 to i8*), align 512, !dbg !4940
  br label %13, !dbg !4941

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !4942
  %12 = load i8, i8* %11, align 1, !dbg !4942
  store volatile i8 %12, i8* inttoptr (i32 2030044160 to i8*), align 1024, !dbg !4945
  br label %13, !dbg !4946

13:                                               ; preds = %5, %7, %10
  %14 = add nuw i32 %6, 1, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %14, metadata !4929, metadata !DIExpression()), !dbg !4930
  %15 = icmp eq i32 %14, %2, !dbg !4931
  br i1 %15, label %16, label %5, !dbg !4934, !llvm.loop !4948

16:                                               ; preds = %13, %3
  ret void, !dbg !4950
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Tx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !4951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4955, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i8* %1, metadata !4956, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i32 %2, metadata !4957, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i32 %3, metadata !4958, metadata !DIExpression()), !dbg !4959
  switch i32 %0, label %9 [
    i32 0, label %6
    i32 1, label %5
  ], !dbg !4960

5:                                                ; preds = %4
  br label %6, !dbg !4961

6:                                                ; preds = %4, %5
  %7 = phi i32 [ 16, %5 ], [ 14, %4 ]
  %8 = ptrtoint i8* %1 to i32, !dbg !4965
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %8, i32 noundef %2, i32 noundef %7, i32 noundef 0, i32 noundef %3, i32 noundef 0) #15, !dbg !4965
  tail call void @DMA_Vfifo_Flush(i32 noundef %7) #15, !dbg !4965
  br label %9, !dbg !4966

9:                                                ; preds = %6, %4
  ret void, !dbg !4966
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_SetAdrs(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Flush(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Rx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #0 !dbg !4967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4971, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata i8* %1, metadata !4972, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata i32 %2, metadata !4973, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata i32 %3, metadata !4974, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata i32 %4, metadata !4975, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.value(metadata i32 %5, metadata !4976, metadata !DIExpression()), !dbg !4977
  switch i32 %0, label %11 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !4978

7:                                                ; preds = %6
  br label %8, !dbg !4979

8:                                                ; preds = %6, %7
  %9 = phi i32 [ 17, %7 ], [ 15, %6 ]
  %10 = ptrtoint i8* %1 to i32, !dbg !4983
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %10, i32 noundef %2, i32 noundef %9, i32 noundef %3, i32 noundef %4, i32 noundef %5) #15, !dbg !4983
  tail call void @DMA_Vfifo_Flush(i32 noundef %9) #15, !dbg !4983
  br label %11, !dbg !4984

11:                                               ; preds = %8, %6
  ret void, !dbg !4984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !4985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4989, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.value(metadata void ()* %1, metadata !4990, metadata !DIExpression()), !dbg !4991
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !4992

3:                                                ; preds = %2
  br label %4, !dbg !4993

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef %5, void ()* noundef %1) #15, !dbg !4997
  br label %6, !dbg !4998

6:                                                ; preds = %4, %2
  ret void, !dbg !4998
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !4999 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5001, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata void ()* %1, metadata !5002, metadata !DIExpression()), !dbg !5003
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !5004

3:                                                ; preds = %2
  br label %4, !dbg !5005

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_TO_Callback(i32 noundef %5, void ()* noundef %1) #15, !dbg !5009
  br label %6, !dbg !5010

6:                                                ; preds = %4, %2
  ret void, !dbg !5010
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_TO_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !5011 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5013, metadata !DIExpression()), !dbg !5017
  %2 = icmp eq i32 %0, 0, !dbg !5018
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5018
  call void @llvm.dbg.value(metadata i32 %3, metadata !5014, metadata !DIExpression()), !dbg !5017
  %4 = or i32 %3, 12, !dbg !5019
  %5 = inttoptr i32 %4 to i32*, !dbg !5019
  %6 = load volatile i32, i32* %5, align 4, !dbg !5019
  call void @llvm.dbg.value(metadata i32 %6, metadata !5016, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5017
  store volatile i32 191, i32* %5, align 4, !dbg !5020
  %7 = or i32 %3, 8, !dbg !5021
  %8 = inttoptr i32 %7 to i32*, !dbg !5021
  %9 = load volatile i32, i32* %8, align 8, !dbg !5021
  call void @llvm.dbg.value(metadata i32 %9, metadata !5015, metadata !DIExpression()), !dbg !5017
  %10 = and i32 %9, 65327, !dbg !5022
  %11 = or i32 %10, 208, !dbg !5022
  call void @llvm.dbg.value(metadata i32 %9, metadata !5015, metadata !DIExpression(DW_OP_constu, 208, DW_OP_or, DW_OP_stack_value)), !dbg !5017
  store volatile i32 %11, i32* %8, align 8, !dbg !5023
  %12 = or i32 %3, 68, !dbg !5024
  %13 = inttoptr i32 %12 to i32*, !dbg !5024
  store volatile i32 0, i32* %13, align 4, !dbg !5025
  store volatile i32 0, i32* %5, align 4, !dbg !5026
  %14 = or i32 %3, 16, !dbg !5027
  %15 = inttoptr i32 %14 to i32*, !dbg !5027
  store volatile i32 2, i32* %15, align 16, !dbg !5028
  %16 = and i32 %6, 65535, !dbg !5029
  store volatile i32 %16, i32* %5, align 4, !dbg !5030
  ret void, !dbg !5031
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #5 !dbg !5032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5036, metadata !DIExpression()), !dbg !5043
  call void @llvm.dbg.value(metadata i8 %1, metadata !5037, metadata !DIExpression()), !dbg !5043
  call void @llvm.dbg.value(metadata i8 %2, metadata !5038, metadata !DIExpression()), !dbg !5043
  call void @llvm.dbg.value(metadata i8 %3, metadata !5039, metadata !DIExpression()), !dbg !5043
  %5 = icmp eq i32 %0, 0, !dbg !5044
  %6 = select i1 %5, i32 -2096955392, i32 -2096889856, !dbg !5044
  call void @llvm.dbg.value(metadata i32 %6, metadata !5040, metadata !DIExpression()), !dbg !5043
  %7 = or i32 %6, 12, !dbg !5045
  %8 = inttoptr i32 %7 to i32*, !dbg !5045
  %9 = load volatile i32, i32* %8, align 4, !dbg !5045
  call void @llvm.dbg.value(metadata i32 %9, metadata !5042, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5043
  store volatile i32 191, i32* %8, align 4, !dbg !5046
  %10 = zext i8 %1 to i32, !dbg !5047
  %11 = or i32 %6, 16, !dbg !5048
  %12 = inttoptr i32 %11 to i32*, !dbg !5048
  store volatile i32 %10, i32* %12, align 16, !dbg !5049
  %13 = or i32 %6, 20, !dbg !5050
  %14 = inttoptr i32 %13 to i32*, !dbg !5050
  store volatile i32 %10, i32* %14, align 4, !dbg !5051
  %15 = zext i8 %2 to i32, !dbg !5052
  %16 = or i32 %6, 24, !dbg !5053
  %17 = inttoptr i32 %16 to i32*, !dbg !5053
  store volatile i32 %15, i32* %17, align 8, !dbg !5054
  %18 = or i32 %6, 28, !dbg !5055
  %19 = inttoptr i32 %18 to i32*, !dbg !5055
  store volatile i32 %15, i32* %19, align 4, !dbg !5056
  %20 = or i32 %6, 8, !dbg !5057
  %21 = inttoptr i32 %20 to i32*, !dbg !5057
  %22 = load volatile i32, i32* %21, align 8, !dbg !5057
  call void @llvm.dbg.value(metadata i32 %22, metadata !5041, metadata !DIExpression()), !dbg !5043
  %23 = and i32 %22, 65525, !dbg !5058
  %24 = or i32 %23, 10, !dbg !5058
  call void @llvm.dbg.value(metadata i32 %22, metadata !5041, metadata !DIExpression(DW_OP_constu, 10, DW_OP_or, DW_OP_stack_value)), !dbg !5043
  store volatile i32 %24, i32* %21, align 8, !dbg !5059
  %25 = and i32 %9, 65535, !dbg !5060
  store volatile i32 %25, i32* %8, align 4, !dbg !5061
  %26 = zext i8 %3 to i32, !dbg !5062
  %27 = or i32 %6, 64, !dbg !5063
  %28 = inttoptr i32 %27 to i32*, !dbg !5063
  store volatile i32 %26, i32* %28, align 64, !dbg !5064
  %29 = or i32 %6, 68, !dbg !5065
  %30 = inttoptr i32 %29 to i32*, !dbg !5065
  store volatile i32 1, i32* %30, align 4, !dbg !5066
  ret void, !dbg !5067
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !5068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5070, metadata !DIExpression()), !dbg !5073
  %2 = icmp eq i32 %0, 0, !dbg !5074
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5074
  call void @llvm.dbg.value(metadata i32 %3, metadata !5071, metadata !DIExpression()), !dbg !5073
  %4 = or i32 %3, 12, !dbg !5075
  %5 = inttoptr i32 %4 to i32*, !dbg !5075
  %6 = load volatile i32, i32* %5, align 4, !dbg !5075
  call void @llvm.dbg.value(metadata i32 %6, metadata !5072, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5073
  store volatile i32 191, i32* %5, align 4, !dbg !5076
  %7 = or i32 %3, 8, !dbg !5077
  %8 = inttoptr i32 %7 to i32*, !dbg !5077
  store volatile i32 0, i32* %8, align 8, !dbg !5078
  store volatile i32 0, i32* %5, align 4, !dbg !5079
  %9 = and i32 %6, 65535, !dbg !5080
  store volatile i32 %9, i32* %5, align 4, !dbg !5081
  ret void, !dbg !5082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(i32 noundef %0) local_unnamed_addr #5 !dbg !5083 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5085, metadata !DIExpression()), !dbg !5087
  %2 = icmp eq i32 %0, 0, !dbg !5088
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5088
  call void @llvm.dbg.value(metadata i32 %3, metadata !5086, metadata !DIExpression()), !dbg !5087
  %4 = or i32 %3, 12, !dbg !5089
  %5 = inttoptr i32 %4 to i32*, !dbg !5089
  store volatile i32 191, i32* %5, align 4, !dbg !5090
  %6 = or i32 %3, 8, !dbg !5091
  %7 = inttoptr i32 %6 to i32*, !dbg !5091
  store volatile i32 16, i32* %7, align 8, !dbg !5092
  %8 = or i32 %3, 16, !dbg !5093
  %9 = inttoptr i32 %8 to i32*, !dbg !5093
  store volatile i32 0, i32* %9, align 16, !dbg !5094
  %10 = or i32 %3, 24, !dbg !5095
  %11 = inttoptr i32 %10 to i32*, !dbg !5095
  store volatile i32 0, i32* %11, align 8, !dbg !5096
  store volatile i32 128, i32* %5, align 4, !dbg !5097
  %12 = inttoptr i32 %3 to i32*, !dbg !5098
  store volatile i32 0, i32* %12, align 65536, !dbg !5099
  %13 = or i32 %3, 4, !dbg !5100
  %14 = inttoptr i32 %13 to i32*, !dbg !5100
  store volatile i32 0, i32* %14, align 4, !dbg !5101
  store volatile i32 0, i32* %5, align 4, !dbg !5102
  store volatile i32 0, i32* %14, align 4, !dbg !5103
  store volatile i32 0, i32* %7, align 8, !dbg !5104
  store volatile i32 191, i32* %5, align 4, !dbg !5105
  store volatile i32 0, i32* %7, align 8, !dbg !5106
  store volatile i32 0, i32* %5, align 4, !dbg !5107
  store volatile i32 0, i32* %9, align 16, !dbg !5108
  %15 = or i32 %3, 28, !dbg !5109
  %16 = inttoptr i32 %15 to i32*, !dbg !5109
  store volatile i32 0, i32* %16, align 4, !dbg !5110
  %17 = or i32 %3, 36, !dbg !5111
  %18 = inttoptr i32 %17 to i32*, !dbg !5111
  store volatile i32 0, i32* %18, align 4, !dbg !5112
  %19 = or i32 %3, 40, !dbg !5113
  %20 = inttoptr i32 %19 to i32*, !dbg !5113
  store volatile i32 0, i32* %20, align 8, !dbg !5114
  %21 = or i32 %3, 44, !dbg !5115
  %22 = inttoptr i32 %21 to i32*, !dbg !5115
  store volatile i32 0, i32* %22, align 4, !dbg !5116
  %23 = or i32 %3, 52, !dbg !5117
  %24 = inttoptr i32 %23 to i32*, !dbg !5117
  store volatile i32 0, i32* %24, align 4, !dbg !5118
  %25 = or i32 %3, 60, !dbg !5119
  %26 = inttoptr i32 %25 to i32*, !dbg !5119
  store volatile i32 0, i32* %26, align 4, !dbg !5120
  %27 = or i32 %3, 64, !dbg !5121
  %28 = inttoptr i32 %27 to i32*, !dbg !5121
  store volatile i32 0, i32* %28, align 64, !dbg !5122
  %29 = or i32 %3, 68, !dbg !5123
  %30 = inttoptr i32 %29 to i32*, !dbg !5123
  store volatile i32 0, i32* %30, align 4, !dbg !5124
  %31 = or i32 %3, 72, !dbg !5125
  %32 = inttoptr i32 %31 to i32*, !dbg !5125
  store volatile i32 0, i32* %32, align 8, !dbg !5126
  %33 = or i32 %3, 76, !dbg !5127
  %34 = inttoptr i32 %33 to i32*, !dbg !5127
  store volatile i32 0, i32* %34, align 4, !dbg !5128
  %35 = or i32 %3, 80, !dbg !5129
  %36 = inttoptr i32 %35 to i32*, !dbg !5129
  store volatile i32 0, i32* %36, align 16, !dbg !5130
  %37 = or i32 %3, 84, !dbg !5131
  %38 = inttoptr i32 %37 to i32*, !dbg !5131
  store volatile i32 0, i32* %38, align 4, !dbg !5132
  %39 = or i32 %3, 88, !dbg !5133
  %40 = inttoptr i32 %39 to i32*, !dbg !5133
  store volatile i32 0, i32* %40, align 8, !dbg !5134
  %41 = or i32 %3, 96, !dbg !5135
  %42 = inttoptr i32 %41 to i32*, !dbg !5135
  store volatile i32 0, i32* %42, align 32, !dbg !5136
  ret void, !dbg !5137
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(i32 noundef %0) local_unnamed_addr #5 !dbg !5138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5140, metadata !DIExpression()), !dbg !5142
  %2 = icmp eq i32 %0, 0, !dbg !5143
  call void @llvm.dbg.value(metadata i32 undef, metadata !5141, metadata !DIExpression()), !dbg !5142
  %3 = select i1 %2, i32 -2096955372, i32 -2096889836
  %4 = inttoptr i32 %3 to i32*
  br label %5, !dbg !5144

5:                                                ; preds = %5, %1
  %6 = load volatile i32, i32* %4, align 4, !dbg !5145
  %7 = and i32 %6, 64, !dbg !5146
  %8 = icmp eq i32 %7, 0, !dbg !5147
  br i1 %8, label %5, label %9, !dbg !5144, !llvm.loop !5148

9:                                                ; preds = %5
  ret void, !dbg !5150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_fatal_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5151 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5155, metadata !DIExpression()), !dbg !5168
  call void @llvm.dbg.value(metadata i32 %1, metadata !5156, metadata !DIExpression()), !dbg !5168
  call void @llvm.dbg.value(metadata i8* %2, metadata !5157, metadata !DIExpression()), !dbg !5168
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !5169
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14, !dbg !5169
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5158, metadata !DIExpression()), !dbg !5170
  %7 = bitcast i32* %5 to i8*, !dbg !5171
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #14, !dbg !5171
  call void @llvm.dbg.value(metadata i32* %5, metadata !5167, metadata !DIExpression(DW_OP_deref)), !dbg !5168
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #15, !dbg !5172
  call void @llvm.va_start(i8* nonnull %6), !dbg !5173
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !5174
  %10 = load i32, i32* %9, align 4, !dbg !5174
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !5174
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #15, !dbg !5174
  call void @llvm.va_end(i8* nonnull %6), !dbg !5175
  %13 = load i32, i32* %5, align 4, !dbg !5176
  call void @llvm.dbg.value(metadata i32 %13, metadata !5167, metadata !DIExpression()), !dbg !5168
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #15, !dbg !5177
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #14, !dbg !5178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14, !dbg !5178
  ret void, !dbg !5178
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #11

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #11

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5179 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5181, metadata !DIExpression()), !dbg !5186
  call void @llvm.dbg.value(metadata i32 %1, metadata !5182, metadata !DIExpression()), !dbg !5186
  call void @llvm.dbg.value(metadata i8* %2, metadata !5183, metadata !DIExpression()), !dbg !5186
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !5187
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14, !dbg !5187
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5184, metadata !DIExpression()), !dbg !5188
  %7 = bitcast i32* %5 to i8*, !dbg !5189
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #14, !dbg !5189
  call void @llvm.dbg.value(metadata i32* %5, metadata !5185, metadata !DIExpression(DW_OP_deref)), !dbg !5186
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #15, !dbg !5190
  call void @llvm.va_start(i8* nonnull %6), !dbg !5191
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !5192
  %10 = load i32, i32* %9, align 4, !dbg !5192
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !5192
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #15, !dbg !5192
  call void @llvm.va_end(i8* nonnull %6), !dbg !5193
  %13 = load i32, i32* %5, align 4, !dbg !5194
  call void @llvm.dbg.value(metadata i32 %13, metadata !5185, metadata !DIExpression()), !dbg !5186
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #15, !dbg !5195
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #14, !dbg !5196
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14, !dbg !5196
  ret void, !dbg !5196
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5197 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5199, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i32 %1, metadata !5200, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i8* %2, metadata !5201, metadata !DIExpression()), !dbg !5204
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !5205
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14, !dbg !5205
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5202, metadata !DIExpression()), !dbg !5206
  %7 = bitcast i32* %5 to i8*, !dbg !5207
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #14, !dbg !5207
  call void @llvm.dbg.value(metadata i32* %5, metadata !5203, metadata !DIExpression(DW_OP_deref)), !dbg !5204
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #15, !dbg !5208
  call void @llvm.va_start(i8* nonnull %6), !dbg !5209
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !5210
  %10 = load i32, i32* %9, align 4, !dbg !5210
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !5210
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #15, !dbg !5210
  call void @llvm.va_end(i8* nonnull %6), !dbg !5211
  %13 = load i32, i32* %5, align 4, !dbg !5212
  call void @llvm.dbg.value(metadata i32 %13, metadata !5203, metadata !DIExpression()), !dbg !5204
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #15, !dbg !5213
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #14, !dbg !5214
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14, !dbg !5214
  ret void, !dbg !5214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5215 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5217, metadata !DIExpression()), !dbg !5222
  call void @llvm.dbg.value(metadata i32 %1, metadata !5218, metadata !DIExpression()), !dbg !5222
  call void @llvm.dbg.value(metadata i8* %2, metadata !5219, metadata !DIExpression()), !dbg !5222
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !5223
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14, !dbg !5223
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5220, metadata !DIExpression()), !dbg !5224
  %7 = bitcast i32* %5 to i8*, !dbg !5225
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #14, !dbg !5225
  call void @llvm.dbg.value(metadata i32* %5, metadata !5221, metadata !DIExpression(DW_OP_deref)), !dbg !5222
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #15, !dbg !5226
  call void @llvm.va_start(i8* nonnull %6), !dbg !5227
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !5228
  %10 = load i32, i32* %9, align 4, !dbg !5228
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !5228
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #15, !dbg !5228
  call void @llvm.va_end(i8* nonnull %6), !dbg !5229
  %13 = load i32, i32* %5, align 4, !dbg !5230
  call void @llvm.dbg.value(metadata i32 %13, metadata !5221, metadata !DIExpression()), !dbg !5222
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #15, !dbg !5231
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #14, !dbg !5232
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14, !dbg !5232
  ret void, !dbg !5232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #8 !dbg !5233 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5239, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i32 %1, metadata !5240, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i8* %2, metadata !5241, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i8* %3, metadata !5242, metadata !DIExpression()), !dbg !5244
  call void @llvm.dbg.value(metadata i32 %4, metadata !5243, metadata !DIExpression()), !dbg !5244
  ret void, !dbg !5245
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !5246 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !5254
  call void @llvm.dbg.value(metadata i32 %1, metadata !5253, metadata !DIExpression()), !dbg !5255
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !5256, !range !1512
  %3 = icmp eq i8 %2, 0, !dbg !5256
  br i1 %3, label %5, label %4, !dbg !5258

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #15, !dbg !5259
  br label %15, !dbg !5261

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !5262
  tail call void @restore_interrupt_mask(i32 noundef %1) #15, !dbg !5264
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #17, !dbg !5265
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5266
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5267
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5268
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !5269
  call void @llvm.dbg.value(metadata i32 0, metadata !5251, metadata !DIExpression()), !dbg !5255
  br label %7, !dbg !5270

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5251, metadata !DIExpression()), !dbg !5255
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %8, !dbg !5272
  store volatile i32 0, i32* %9, align 4, !dbg !5275
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %8, !dbg !5276
  store volatile i32 0, i32* %10, align 4, !dbg !5277
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !5278
  store i32 0, i32* %11, align 4, !dbg !5279
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !5280
  store i32 0, i32* %12, align 4, !dbg !5281
  %13 = add nuw nsw i32 %8, 1, !dbg !5282
  call void @llvm.dbg.value(metadata i32 %13, metadata !5251, metadata !DIExpression()), !dbg !5255
  %14 = icmp eq i32 %13, 16, !dbg !5283
  br i1 %14, label %15, label %7, !dbg !5270, !llvm.loop !5284

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !5255
  ret i32 %16, !dbg !5286
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !5287 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !5290
  call void @llvm.dbg.value(metadata i32 %1, metadata !5289, metadata !DIExpression()), !dbg !5291
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5292
  %3 = and i32 %2, -31, !dbg !5292
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5292
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5293
  %5 = or i32 %4, 19, !dbg !5293
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5293
  %6 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5294
  %7 = and i32 %6, -31, !dbg !5294
  store volatile i32 %7, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5294
  %8 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5295
  %9 = or i32 %8, 3, !dbg !5295
  store volatile i32 %9, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5295
  tail call void asm sideeffect "isb", ""() #14, !dbg !5296, !srcloc !5300
  tail call void @restore_interrupt_mask(i32 noundef %1) #15, !dbg !5301
  ret i32 0, !dbg !5302
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !5303 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #17, !dbg !5306
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5307
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5308
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5309
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !5310
  call void @llvm.dbg.value(metadata i32 0, metadata !5305, metadata !DIExpression()), !dbg !5311
  br label %2, !dbg !5312

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5305, metadata !DIExpression()), !dbg !5311
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %3, !dbg !5314
  store volatile i32 0, i32* %4, align 4, !dbg !5317
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %3, !dbg !5318
  store volatile i32 0, i32* %5, align 4, !dbg !5319
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !5320
  store i32 0, i32* %6, align 4, !dbg !5321
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !5322
  store i32 0, i32* %7, align 4, !dbg !5323
  %8 = add nuw nsw i32 %3, 1, !dbg !5324
  call void @llvm.dbg.value(metadata i32 %8, metadata !5305, metadata !DIExpression()), !dbg !5311
  %9 = icmp eq i32 %8, 16, !dbg !5325
  br i1 %9, label %10, label %2, !dbg !5312, !llvm.loop !5326

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !5328
  ret i32 0, !dbg !5329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #5 !dbg !5330 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5331
  %2 = and i32 %1, 768, !dbg !5333
  %3 = icmp eq i32 %2, 0, !dbg !5333
  br i1 %3, label %8, label %4, !dbg !5334

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5335
  %6 = or i32 %5, 13, !dbg !5335
  store volatile i32 %6, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5335
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5336
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5337
  br label %8, !dbg !5338

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !5339
  ret i32 %9, !dbg !5340
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !5341 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !5344
  call void @llvm.dbg.value(metadata i32 %1, metadata !5343, metadata !DIExpression()), !dbg !5345
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5346
  %3 = and i32 %2, 1, !dbg !5348
  %4 = icmp eq i32 %3, 0, !dbg !5348
  br i1 %4, label %7, label %5, !dbg !5349

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #17, !dbg !5350
  br label %7, !dbg !5352

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5353
  %9 = and i32 %8, -2, !dbg !5353
  store volatile i32 %9, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5353
  %10 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5354
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5355
  tail call void @restore_interrupt_mask(i32 noundef %1) #15, !dbg !5356
  ret i32 0, !dbg !5357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #5 !dbg !5358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5362, metadata !DIExpression()), !dbg !5363
  %2 = icmp ugt i32 %0, 15, !dbg !5364
  br i1 %2, label %13, label %3, !dbg !5366

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !5367
  %5 = load volatile i32, i32* %4, align 4, !dbg !5367
  %6 = and i32 %5, 256, !dbg !5369
  %7 = icmp eq i32 %6, 0, !dbg !5369
  br i1 %7, label %13, label %8, !dbg !5370

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !5371
  %10 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5373
  %11 = or i32 %10, %9, !dbg !5373
  store volatile i32 %11, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5373
  %12 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5374
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !5375
  br label %13, !dbg !5376

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !5363
  ret i32 %14, !dbg !5377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #5 !dbg !5378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5380, metadata !DIExpression()), !dbg !5381
  %2 = icmp ugt i32 %0, 15, !dbg !5382
  br i1 %2, label %11, label %3, !dbg !5384

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !5385
  %5 = xor i32 %4, -1, !dbg !5386
  %6 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5387
  %7 = and i32 %6, %5, !dbg !5387
  store volatile i32 %7, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5387
  %8 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5388
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !5389
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !5390
  store i32 0, i32* %9, align 4, !dbg !5391
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !5392
  store i32 0, i32* %10, align 4, !dbg !5393
  br label %11, !dbg !5394

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !5381
  ret i32 %12, !dbg !5395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #5 !dbg !5396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5401, metadata !DIExpression()), !dbg !5402
  %2 = icmp ugt i32 %0, 3, !dbg !5403
  br i1 %2, label %13, label %3, !dbg !5405

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5406
  %5 = and i32 %4, -769, !dbg !5406
  store volatile i32 %5, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5406
  %6 = shl nuw nsw i32 %0, 8, !dbg !5407
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5408
  %8 = or i32 %7, %6, !dbg !5408
  store volatile i32 %8, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5408
  %9 = icmp eq i32 %0, 0, !dbg !5409
  br i1 %9, label %10, label %11, !dbg !5411

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5412
  br label %11, !dbg !5414

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5415
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5416
  br label %13, !dbg !5417

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !5402
  ret i32 %14, !dbg !5418
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !5419 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5430, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !5431, metadata !DIExpression()), !dbg !5432
  %3 = icmp ugt i32 %0, 15, !dbg !5433
  br i1 %3, label %30, label %4, !dbg !5435

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !5436
  br i1 %5, label %30, label %6, !dbg !5438

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !5439
  %8 = load i32, i32* %7, align 4, !dbg !5439
  %9 = and i32 %8, 4095, !dbg !5441
  %10 = icmp eq i32 %9, 0, !dbg !5441
  br i1 %10, label %12, label %11, !dbg !5442

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.61, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #16, !dbg !5443
  unreachable, !dbg !5443

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !5445
  %14 = load i32, i32* %13, align 4, !dbg !5445
  %15 = and i32 %14, 4095, !dbg !5447
  %16 = icmp eq i32 %15, 0, !dbg !5447
  br i1 %16, label %18, label %17, !dbg !5448

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.61, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #16, !dbg !5449
  unreachable, !dbg !5449

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !5451
  store volatile i32 %8, i32* %19, align 4, !dbg !5452
  %20 = load i32, i32* %7, align 4, !dbg !5453
  %21 = load i32, i32* %13, align 4, !dbg !5454
  %22 = add i32 %21, %20, !dbg !5455
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %0, !dbg !5456
  store volatile i32 %22, i32* %23, align 4, !dbg !5457
  %24 = load volatile i32, i32* %19, align 4, !dbg !5458
  %25 = or i32 %24, 256, !dbg !5458
  store volatile i32 %25, i32* %19, align 4, !dbg !5458
  %26 = load volatile i32, i32* %19, align 4, !dbg !5459
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !5460
  store i32 %26, i32* %27, align 4, !dbg !5461
  %28 = load volatile i32, i32* %23, align 4, !dbg !5462
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !5463
  store i32 %28, i32* %29, align 4, !dbg !5464
  br label %30, !dbg !5465

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !5432
  ret i32 %31, !dbg !5466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5471, metadata !DIExpression()), !dbg !5473
  %2 = and i32 %0, 31, !dbg !5474
  %3 = icmp eq i32 %2, 0, !dbg !5474
  br i1 %3, label %4, label %9, !dbg !5476

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !5477
  call void @llvm.dbg.value(metadata i32 %5, metadata !5472, metadata !DIExpression()), !dbg !5473
  %6 = and i32 %0, -32, !dbg !5478
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5479
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5480
  %8 = or i32 %7, 5, !dbg !5480
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5480
  tail call void asm sideeffect "isb", ""() #14, !dbg !5481, !srcloc !5300
  tail call void @restore_interrupt_mask(i32 noundef %5) #15, !dbg !5483
  br label %9, !dbg !5484

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !5473
  ret i32 %10, !dbg !5485
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5486 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5490, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.value(metadata i32 %1, metadata !5491, metadata !DIExpression()), !dbg !5494
  %3 = add i32 %1, %0, !dbg !5495
  call void @llvm.dbg.value(metadata i32 %3, metadata !5493, metadata !DIExpression()), !dbg !5494
  %4 = or i32 %1, %0, !dbg !5496
  %5 = and i32 %4, 31, !dbg !5496
  %6 = icmp eq i32 %5, 0, !dbg !5496
  br i1 %6, label %7, label %16, !dbg !5496

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !5498
  call void @llvm.dbg.value(metadata i32 %8, metadata !5492, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.value(metadata i32 %0, metadata !5490, metadata !DIExpression()), !dbg !5494
  %9 = icmp ugt i32 %3, %0, !dbg !5499
  br i1 %9, label %10, label %15, !dbg !5500

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !5490, metadata !DIExpression()), !dbg !5494
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #17, !dbg !5501
  %13 = add i32 %11, 32, !dbg !5503
  call void @llvm.dbg.value(metadata i32 %13, metadata !5490, metadata !DIExpression()), !dbg !5494
  %14 = icmp ult i32 %13, %3, !dbg !5499
  br i1 %14, label %10, label %15, !dbg !5500, !llvm.loop !5504

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #14, !dbg !5506, !srcloc !5300
  tail call void @restore_interrupt_mask(i32 noundef %8) #15, !dbg !5508
  br label %16, !dbg !5509

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !5494
  ret i32 %17, !dbg !5510
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5511 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5513, metadata !DIExpression()), !dbg !5515
  %2 = and i32 %0, 31, !dbg !5516
  %3 = icmp eq i32 %2, 0, !dbg !5516
  br i1 %3, label %4, label %9, !dbg !5518

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !5519
  call void @llvm.dbg.value(metadata i32 %5, metadata !5514, metadata !DIExpression()), !dbg !5515
  %6 = and i32 %0, -32, !dbg !5520
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5521
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5522
  %8 = or i32 %7, 21, !dbg !5522
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5522
  tail call void asm sideeffect "isb", ""() #14, !dbg !5523, !srcloc !5300
  tail call void @restore_interrupt_mask(i32 noundef %5) #15, !dbg !5525
  br label %9, !dbg !5526

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !5515
  ret i32 %10, !dbg !5527
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !5528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5530, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.value(metadata i32 %1, metadata !5531, metadata !DIExpression()), !dbg !5534
  %3 = add i32 %1, %0, !dbg !5535
  call void @llvm.dbg.value(metadata i32 %3, metadata !5533, metadata !DIExpression()), !dbg !5534
  %4 = or i32 %1, %0, !dbg !5536
  %5 = and i32 %4, 31, !dbg !5536
  %6 = icmp eq i32 %5, 0, !dbg !5536
  br i1 %6, label %7, label %16, !dbg !5536

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !5538
  call void @llvm.dbg.value(metadata i32 %8, metadata !5532, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.value(metadata i32 %0, metadata !5530, metadata !DIExpression()), !dbg !5534
  %9 = icmp ugt i32 %3, %0, !dbg !5539
  br i1 %9, label %10, label %15, !dbg !5540

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !5530, metadata !DIExpression()), !dbg !5534
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #17, !dbg !5541
  %13 = add i32 %11, 32, !dbg !5543
  call void @llvm.dbg.value(metadata i32 %13, metadata !5530, metadata !DIExpression()), !dbg !5534
  %14 = icmp ult i32 %13, %3, !dbg !5539
  br i1 %14, label %10, label %15, !dbg !5540, !llvm.loop !5544

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #14, !dbg !5546, !srcloc !5300
  tail call void @restore_interrupt_mask(i32 noundef %8) #15, !dbg !5548
  br label %16, !dbg !5549

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !5534
  ret i32 %17, !dbg !5550
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !5551 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !5554
  call void @llvm.dbg.value(metadata i32 %1, metadata !5553, metadata !DIExpression()), !dbg !5555
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5556
  %3 = and i32 %2, -31, !dbg !5556
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5556
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5557
  %5 = or i32 %4, 19, !dbg !5557
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5557
  tail call void asm sideeffect "isb", ""() #14, !dbg !5558, !srcloc !5300
  tail call void @restore_interrupt_mask(i32 noundef %1) #15, !dbg !5560
  ret i32 0, !dbg !5561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #5 !dbg !5562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5566, metadata !DIExpression()), !dbg !5568
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5569
  %3 = and i32 %2, 8, !dbg !5571
  %4 = icmp eq i32 %3, 0, !dbg !5571
  br i1 %4, label %23, label %5, !dbg !5572

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5567, metadata !DIExpression()), !dbg !5568
  %7 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5573
  %8 = shl nuw nsw i32 1, %6, !dbg !5578
  %9 = and i32 %7, %8, !dbg !5579
  %10 = icmp eq i32 %9, 0, !dbg !5579
  br i1 %10, label %20, label %11, !dbg !5580

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %6, !dbg !5581
  %13 = load volatile i32, i32* %12, align 4, !dbg !5581
  %14 = and i32 %13, -257, !dbg !5584
  %15 = icmp ugt i32 %14, %0, !dbg !5585
  br i1 %15, label %20, label %16, !dbg !5586

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %6, !dbg !5587
  %18 = load volatile i32, i32* %17, align 4, !dbg !5587
  %19 = icmp ugt i32 %18, %0, !dbg !5588
  br i1 %19, label %23, label %20, !dbg !5589

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !5590
  call void @llvm.dbg.value(metadata i32 %21, metadata !5567, metadata !DIExpression()), !dbg !5568
  %22 = icmp eq i32 %21, 16, !dbg !5591
  br i1 %22, label %23, label %5, !dbg !5592, !llvm.loop !5593

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !5568
  ret i1 %24, !dbg !5595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_nvic_init() local_unnamed_addr #8 !dbg !5596 {
  ret i32 0, !dbg !5600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5605, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.value(metadata i32 -1, metadata !5606, metadata !DIExpression()), !dbg !5607
  %2 = icmp ugt i32 %0, 95, !dbg !5608
  br i1 %2, label %4, label %3, !dbg !5608

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #17, !dbg !5610
  call void @llvm.dbg.value(metadata i32 0, metadata !5606, metadata !DIExpression()), !dbg !5607
  br label %4, !dbg !5612

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5607
  ret i32 %5, !dbg !5613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5618, metadata !DIExpression()), !dbg !5619
  %2 = and i32 %0, 31, !dbg !5620
  %3 = shl nuw i32 1, %2, !dbg !5621
  %4 = lshr i32 %0, 5, !dbg !5622
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !5623
  store volatile i32 %3, i32* %5, align 4, !dbg !5624
  ret void, !dbg !5625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5628, metadata !DIExpression()), !dbg !5630
  call void @llvm.dbg.value(metadata i32 -1, metadata !5629, metadata !DIExpression()), !dbg !5630
  %2 = icmp ugt i32 %0, 95, !dbg !5631
  br i1 %2, label %4, label %3, !dbg !5631

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #17, !dbg !5633
  call void @llvm.dbg.value(metadata i32 0, metadata !5629, metadata !DIExpression()), !dbg !5630
  br label %4, !dbg !5635

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5630
  ret i32 %5, !dbg !5636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5639, metadata !DIExpression()), !dbg !5640
  %2 = and i32 %0, 31, !dbg !5641
  %3 = shl nuw i32 1, %2, !dbg !5642
  %4 = lshr i32 %0, 5, !dbg !5643
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !5644
  store volatile i32 %3, i32* %5, align 4, !dbg !5645
  ret void, !dbg !5646
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #7 !dbg !5647 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5651, metadata !DIExpression()), !dbg !5653
  call void @llvm.dbg.value(metadata i32 255, metadata !5652, metadata !DIExpression()), !dbg !5653
  %2 = icmp ugt i32 %0, 95, !dbg !5654
  br i1 %2, label %5, label %3, !dbg !5654

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #17, !dbg !5656
  call void @llvm.dbg.value(metadata i32 %4, metadata !5652, metadata !DIExpression()), !dbg !5653
  br label %5, !dbg !5658

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !5653
  ret i32 %6, !dbg !5659
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #7 !dbg !5660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5664, metadata !DIExpression()), !dbg !5665
  %2 = lshr i32 %0, 5, !dbg !5666
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !5667
  %4 = load volatile i32, i32* %3, align 4, !dbg !5667
  %5 = and i32 %0, 31, !dbg !5668
  %6 = lshr i32 %4, %5, !dbg !5669
  %7 = and i32 %6, 1, !dbg !5669
  ret i32 %7, !dbg !5670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5671 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5673, metadata !DIExpression()), !dbg !5675
  call void @llvm.dbg.value(metadata i32 -1, metadata !5674, metadata !DIExpression()), !dbg !5675
  %2 = icmp ugt i32 %0, 95, !dbg !5676
  br i1 %2, label %4, label %3, !dbg !5676

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #17, !dbg !5678
  call void @llvm.dbg.value(metadata i32 0, metadata !5674, metadata !DIExpression()), !dbg !5675
  br label %4, !dbg !5680

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5675
  ret i32 %5, !dbg !5681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5684, metadata !DIExpression()), !dbg !5685
  %2 = and i32 %0, 31, !dbg !5686
  %3 = shl nuw i32 1, %2, !dbg !5687
  %4 = lshr i32 %0, 5, !dbg !5688
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !5689
  store volatile i32 %3, i32* %5, align 4, !dbg !5690
  ret void, !dbg !5691
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !5692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5694, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.value(metadata i32 -1, metadata !5695, metadata !DIExpression()), !dbg !5696
  %2 = icmp ugt i32 %0, 95, !dbg !5697
  br i1 %2, label %4, label %3, !dbg !5697

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #17, !dbg !5699
  call void @llvm.dbg.value(metadata i32 0, metadata !5695, metadata !DIExpression()), !dbg !5696
  br label %4, !dbg !5701

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5696
  ret i32 %5, !dbg !5702
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !5703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5705, metadata !DIExpression()), !dbg !5706
  %2 = and i32 %0, 31, !dbg !5707
  %3 = shl nuw i32 1, %2, !dbg !5708
  %4 = lshr i32 %0, 5, !dbg !5709
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !5710
  store volatile i32 %3, i32* %5, align 4, !dbg !5711
  ret void, !dbg !5712
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !5713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5717, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.value(metadata i32 %1, metadata !5718, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.value(metadata i32 -1, metadata !5719, metadata !DIExpression()), !dbg !5720
  %3 = icmp ugt i32 %0, 95, !dbg !5721
  br i1 %3, label %5, label %4, !dbg !5721

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #17, !dbg !5723
  call void @llvm.dbg.value(metadata i32 0, metadata !5719, metadata !DIExpression()), !dbg !5720
  br label %5, !dbg !5725

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !5720
  ret i32 %6, !dbg !5726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !5727 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5731, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.value(metadata i32 %1, metadata !5732, metadata !DIExpression()), !dbg !5733
  %3 = trunc i32 %1 to i8, !dbg !5734
  %4 = shl i8 %3, 5, !dbg !5734
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5737
  store volatile i8 %4, i8* %5, align 1, !dbg !5738
  ret void, !dbg !5739
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #7 !dbg !5740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5742, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.value(metadata i32 68, metadata !5743, metadata !DIExpression()), !dbg !5744
  %2 = icmp ugt i32 %0, 95, !dbg !5745
  br i1 %2, label %5, label %3, !dbg !5745

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #17, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %4, metadata !5743, metadata !DIExpression()), !dbg !5744
  br label %5, !dbg !5749

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !5744
  ret i32 %6, !dbg !5750
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #7 !dbg !5751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5753, metadata !DIExpression()), !dbg !5754
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5755
  %3 = load volatile i8, i8* %2, align 1, !dbg !5755
  %4 = lshr i8 %3, 5, !dbg !5758
  %5 = zext i8 %4 to i32, !dbg !5758
  ret i32 %5, !dbg !5759
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".ramTEXT" !dbg !5760 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !5762, metadata !DIExpression()), !dbg !5764
  tail call void @Flash_ReturnReady() #15, !dbg !5765
  %1 = tail call fastcc i32 @get_current_irq() #17, !dbg !5766
  call void @llvm.dbg.value(metadata i32 %1, metadata !5763, metadata !DIExpression()), !dbg !5764
  %2 = icmp ugt i32 %1, 95, !dbg !5767
  br i1 %2, label %12, label %3, !dbg !5767

3:                                                ; preds = %0
  %4 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !5769
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !5769
  %6 = icmp eq void (i32)* %5, null, !dbg !5771
  br i1 %6, label %7, label %8, !dbg !5772

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !5762, metadata !DIExpression()), !dbg !5764
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 194, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.73, i32 0, i32 0)) #15, !dbg !5773
  br label %12, !dbg !5775

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #17, !dbg !5776
  %10 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !5778
  store i32 %9, i32* %10, align 4, !dbg !5779
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !5780
  tail call void %11(i32 noundef %1) #15, !dbg !5781
  call void @llvm.dbg.value(metadata i32 0, metadata !5762, metadata !DIExpression()), !dbg !5764
  br label %12, !dbg !5782

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !5764
  ret i32 %13, !dbg !5783
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #7 !dbg !5784 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5787
  %2 = and i32 %1, 511, !dbg !5788
  call void @llvm.dbg.value(metadata i32 %2, metadata !5786, metadata !DIExpression()), !dbg !5789
  %3 = add nsw i32 %2, -16, !dbg !5790
  ret i32 %3, !dbg !5791
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #7 !dbg !5792 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5793
  %2 = lshr i32 %1, 22, !dbg !5794
  %3 = and i32 %2, 1, !dbg !5794
  ret i32 %3, !dbg !5795
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !5796 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5801, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !5802, metadata !DIExpression()), !dbg !5804
  %3 = icmp ugt i32 %0, 95, !dbg !5805
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !5805
  br i1 %5, label %10, label %6, !dbg !5805

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !5807
  call void @llvm.dbg.value(metadata i32 %7, metadata !5803, metadata !DIExpression()), !dbg !5804
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #17, !dbg !5808
  %8 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !5809
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !5810
  %9 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !5811
  store i32 0, i32* %9, align 4, !dbg !5812
  tail call void @restore_interrupt_mask(i32 noundef %7) #15, !dbg !5813
  br label %10, !dbg !5814

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !5804
  ret i32 %11, !dbg !5815
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !5816 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !5820, metadata !DIExpression()), !dbg !5821
  %2 = tail call i32 @save_and_set_interrupt_mask() #15, !dbg !5822
  store i32 %2, i32* %0, align 4, !dbg !5823
  ret i32 0, !dbg !5824
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !5825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5829, metadata !DIExpression()), !dbg !5830
  tail call void @restore_interrupt_mask(i32 noundef %0) #15, !dbg !5831
  ret i32 0, !dbg !5832
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !5833 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !5838, metadata !DIExpression()), !dbg !5839
  %1 = tail call i32 @flash_sfc_config(i8 noundef zeroext 0) #15, !dbg !5840
  call void @llvm.dbg.value(metadata i32 %1, metadata !5838, metadata !DIExpression()), !dbg !5839
  %2 = ashr i32 %1, 31, !dbg !5841
  ret i32 %2, !dbg !5842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #8 !dbg !5843 {
  ret i32 0, !dbg !5844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5849, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.value(metadata i32 %1, metadata !5850, metadata !DIExpression()), !dbg !5852
  call void @llvm.dbg.value(metadata i32 -1, metadata !5851, metadata !DIExpression()), !dbg !5852
  %3 = tail call i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) #15, !dbg !5853
  call void @llvm.dbg.value(metadata i32 %3, metadata !5851, metadata !DIExpression()), !dbg !5852
  %4 = ashr i32 %3, 31, !dbg !5854
  ret i32 %4, !dbg !5855
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5860, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.value(metadata i8* %1, metadata !5861, metadata !DIExpression()), !dbg !5863
  call void @llvm.dbg.value(metadata i32 %2, metadata !5862, metadata !DIExpression()), !dbg !5863
  %4 = add i32 %0, 268435456, !dbg !5864
  %5 = inttoptr i32 %4 to i8*, !dbg !5865
  tail call void @hal_flash_direct_read(i8* noundef %5, i8* noundef %1, i32 noundef %2) #15, !dbg !5866
  ret i32 0, !dbg !5867
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5872, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.value(metadata i8* %1, metadata !5873, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.value(metadata i32 %2, metadata !5874, metadata !DIExpression()), !dbg !5876
  %4 = tail call i32 @flash_sfc_write(i32 noundef %0, i32 noundef %2, i8* noundef %1) #15, !dbg !5877
  call void @llvm.dbg.value(metadata i32 %4, metadata !5875, metadata !DIExpression()), !dbg !5876
  %5 = ashr i32 %4, 31, !dbg !5878
  ret i32 %5, !dbg !5879
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5886, metadata !DIExpression()), !dbg !5889
  call void @llvm.dbg.value(metadata i8 %1, metadata !5887, metadata !DIExpression()), !dbg !5889
  %3 = icmp ugt i32 %0, 60, !dbg !5890
  br i1 %3, label %11, label %4, !dbg !5892

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !5893
  br i1 %5, label %11, label %6, !dbg !5895

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !5896
  %8 = tail call i32 @pinmux_config(i32 noundef %0, i32 noundef %7) #15, !dbg !5897
  call void @llvm.dbg.value(metadata i32 %8, metadata !5888, metadata !DIExpression()), !dbg !5889
  %9 = icmp slt i32 %8, 0, !dbg !5898
  %10 = select i1 %9, i32 -3, i32 0, !dbg !5898
  br label %11, !dbg !5899

11:                                               ; preds = %4, %2, %6
  %12 = phi i32 [ %10, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5889
  ret i32 %12, !dbg !5900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #8 !dbg !5901 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5906, metadata !DIExpression()), !dbg !5907
  ret i32 0, !dbg !5908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #8 !dbg !5909 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5911, metadata !DIExpression()), !dbg !5912
  ret i32 0, !dbg !5913
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !5914 {
  %3 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5919, metadata !DIExpression()), !dbg !5929
  call void @llvm.dbg.value(metadata i32* %1, metadata !5920, metadata !DIExpression()), !dbg !5929
  %4 = icmp eq i32* %1, null, !dbg !5930
  br i1 %4, label %12, label %5, !dbg !5932

5:                                                ; preds = %2
  %6 = icmp ugt i32 %0, 60, !dbg !5933
  br i1 %6, label %12, label %7, !dbg !5935

7:                                                ; preds = %5
  %8 = bitcast %struct.gpio_status* %3 to i8*, !dbg !5936
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14, !dbg !5936
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %3, i32 noundef %0) #15, !dbg !5936
  %9 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %3, i32 0, i32 2, !dbg !5936
  %10 = load i8, i8* %9, align 1, !dbg !5936
  call void @llvm.dbg.value(metadata i8 %10, metadata !5921, metadata !DIExpression(DW_OP_LLVM_fragment, 40, 8)), !dbg !5929
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14, !dbg !5936
  %11 = zext i8 %10 to i32, !dbg !5937
  store i32 %11, i32* %1, align 4, !dbg !5938
  br label %12, !dbg !5939

12:                                               ; preds = %5, %2, %7
  %13 = phi i32 [ 0, %7 ], [ -1, %2 ], [ -2, %5 ], !dbg !5929
  ret i32 %13, !dbg !5940
}

; Function Attrs: optsize
declare dso_local void @gpio_get_status(%struct.gpio_status* sret(%struct.gpio_status) align 4, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5945, metadata !DIExpression()), !dbg !5948
  call void @llvm.dbg.value(metadata i32 %1, metadata !5946, metadata !DIExpression()), !dbg !5948
  %3 = icmp ugt i32 %0, 60, !dbg !5949
  br i1 %3, label %9, label %4, !dbg !5951

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i8, !dbg !5952
  %6 = tail call i32 @gpio_write(i32 noundef %0, i8 noundef zeroext %5) #15, !dbg !5953
  call void @llvm.dbg.value(metadata i32 %6, metadata !5947, metadata !DIExpression()), !dbg !5948
  %7 = icmp slt i32 %6, 0, !dbg !5954
  %8 = select i1 %7, i32 -3, i32 0, !dbg !5954
  br label %9, !dbg !5955

9:                                                ; preds = %2, %4
  %10 = phi i32 [ %8, %4 ], [ -2, %2 ], !dbg !5948
  ret i32 %10, !dbg !5956
}

; Function Attrs: optsize
declare dso_local i32 @gpio_write(i32 noundef, i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !5957 {
  %3 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5959, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.value(metadata i32* %1, metadata !5960, metadata !DIExpression()), !dbg !5962
  %4 = icmp ugt i32 %0, 60, !dbg !5963
  br i1 %4, label %12, label %5, !dbg !5965

5:                                                ; preds = %2
  %6 = icmp eq i32* %1, null, !dbg !5966
  br i1 %6, label %12, label %7, !dbg !5968

7:                                                ; preds = %5
  %8 = bitcast %struct.gpio_status* %3 to i8*, !dbg !5969
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14, !dbg !5969
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %3, i32 noundef %0) #15, !dbg !5969
  %9 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %3, i32 0, i32 3, !dbg !5969
  %10 = load i8, i8* %9, align 2, !dbg !5969
  call void @llvm.dbg.value(metadata i8 %10, metadata !5961, metadata !DIExpression(DW_OP_LLVM_fragment, 48, 8)), !dbg !5962
  call void @llvm.dbg.value(metadata i8 undef, metadata !5961, metadata !DIExpression(DW_OP_LLVM_fragment, 56, 8)), !dbg !5962
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14, !dbg !5969
  %11 = zext i8 %10 to i32, !dbg !5970
  store i32 %11, i32* %1, align 4, !dbg !5971
  br label %12, !dbg !5972

12:                                               ; preds = %5, %2, %7
  %13 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !5962
  ret i32 %13, !dbg !5973
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5979, metadata !DIExpression()), !dbg !5982
  call void @llvm.dbg.value(metadata i32 %1, metadata !5980, metadata !DIExpression()), !dbg !5982
  %3 = icmp ugt i32 %0, 60, !dbg !5983
  br i1 %3, label %8, label %4, !dbg !5985

4:                                                ; preds = %2
  %5 = tail call i32 @gpio_direction(i32 noundef %0, i32 noundef %1) #15, !dbg !5986
  call void @llvm.dbg.value(metadata i32 %5, metadata !5981, metadata !DIExpression()), !dbg !5982
  %6 = icmp slt i32 %5, 0, !dbg !5987
  %7 = select i1 %6, i32 -3, i32 0, !dbg !5987
  br label %8, !dbg !5988

8:                                                ; preds = %2, %4
  %9 = phi i32 [ %7, %4 ], [ -2, %2 ], !dbg !5982
  ret i32 %9, !dbg !5989
}

; Function Attrs: optsize
declare dso_local i32 @gpio_direction(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !5990 {
  %3 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5995, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata i32* %1, metadata !5996, metadata !DIExpression()), !dbg !5998
  %4 = icmp ugt i32 %0, 60, !dbg !5999
  br i1 %4, label %13, label %5, !dbg !6001

5:                                                ; preds = %2
  %6 = icmp eq i32* %1, null, !dbg !6002
  br i1 %6, label %13, label %7, !dbg !6004

7:                                                ; preds = %5
  %8 = bitcast %struct.gpio_status* %3 to i8*, !dbg !6005
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14, !dbg !6005
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %3, i32 noundef %0) #15, !dbg !6005
  call void @llvm.dbg.value(metadata i32 undef, metadata !5997, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !5998
  %9 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %3, i32 0, i32 1, !dbg !6005
  %10 = load i8, i8* %9, align 4, !dbg !6005
  call void @llvm.dbg.value(metadata i8 %10, metadata !5997, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 8)), !dbg !5998
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14, !dbg !6005
  %11 = icmp ne i8 %10, 0, !dbg !6006
  %12 = zext i1 %11 to i32, !dbg !6006
  store i32 %12, i32* %1, align 4, !dbg !6007
  br label %13, !dbg !6008

13:                                               ; preds = %5, %2, %7
  %14 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !5998
  ret i32 %14, !dbg !6009
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #0 !dbg !6010 {
  %2 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6012, metadata !DIExpression()), !dbg !6014
  %3 = icmp ugt i32 %0, 60, !dbg !6015
  br i1 %3, label %11, label %4, !dbg !6017

4:                                                ; preds = %1
  %5 = bitcast %struct.gpio_status* %2 to i8*, !dbg !6018
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14, !dbg !6018
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %2, i32 noundef %0) #15, !dbg !6018
  %6 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %2, i32 0, i32 3, !dbg !6018
  %7 = load i8, i8* %6, align 2, !dbg !6018
  call void @llvm.dbg.value(metadata i8 %7, metadata !6013, metadata !DIExpression(DW_OP_LLVM_fragment, 48, 8)), !dbg !6014
  call void @llvm.dbg.value(metadata i8 undef, metadata !6013, metadata !DIExpression(DW_OP_LLVM_fragment, 56, 8)), !dbg !6014
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14, !dbg !6018
  %8 = xor i8 %7, 1, !dbg !6019
  %9 = zext i8 %8 to i32, !dbg !6019
  %10 = call i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %9) #17, !dbg !6020
  br label %11, !dbg !6021

11:                                               ; preds = %1, %4
  %12 = phi i32 [ %10, %4 ], [ -2, %1 ], !dbg !6014
  ret i32 %12, !dbg !6022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #0 !dbg !6023 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6025, metadata !DIExpression()), !dbg !6027
  %2 = icmp ugt i32 %0, 60, !dbg !6028
  br i1 %2, label %10, label %3, !dbg !6030

3:                                                ; preds = %1
  %4 = tail call i32 @gpio_PullDisable(i32 noundef %0) #15, !dbg !6031
  call void @llvm.dbg.value(metadata i32 %4, metadata !6026, metadata !DIExpression()), !dbg !6027
  %5 = icmp slt i32 %4, 0, !dbg !6032
  br i1 %5, label %10, label %6, !dbg !6034

6:                                                ; preds = %3
  %7 = tail call i32 @gpio_PullUp(i32 noundef %0) #15, !dbg !6035
  call void @llvm.dbg.value(metadata i32 %7, metadata !6026, metadata !DIExpression()), !dbg !6027
  %8 = icmp slt i32 %7, 0, !dbg !6036
  %9 = select i1 %8, i32 -3, i32 0, !dbg !6036
  br label %10, !dbg !6037

10:                                               ; preds = %3, %1, %6
  %11 = phi i32 [ %9, %6 ], [ -2, %1 ], [ -3, %3 ], !dbg !6027
  ret i32 %11, !dbg !6038
}

; Function Attrs: optsize
declare dso_local i32 @gpio_PullDisable(i32 noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i32 @gpio_PullUp(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #0 !dbg !6039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6041, metadata !DIExpression()), !dbg !6043
  %2 = icmp ugt i32 %0, 60, !dbg !6044
  br i1 %2, label %10, label %3, !dbg !6046

3:                                                ; preds = %1
  %4 = tail call i32 @gpio_PullDisable(i32 noundef %0) #15, !dbg !6047
  call void @llvm.dbg.value(metadata i32 %4, metadata !6042, metadata !DIExpression()), !dbg !6043
  %5 = icmp slt i32 %4, 0, !dbg !6048
  br i1 %5, label %10, label %6, !dbg !6050

6:                                                ; preds = %3
  %7 = tail call i32 @gpio_PullDown(i32 noundef %0) #15, !dbg !6051
  call void @llvm.dbg.value(metadata i32 %7, metadata !6042, metadata !DIExpression()), !dbg !6043
  %8 = icmp slt i32 %7, 0, !dbg !6052
  %9 = select i1 %8, i32 -3, i32 0, !dbg !6052
  br label %10, !dbg !6053

10:                                               ; preds = %3, %1, %6
  %11 = phi i32 [ %9, %6 ], [ -2, %1 ], [ -3, %3 ], !dbg !6043
  ret i32 %11, !dbg !6054
}

; Function Attrs: optsize
declare dso_local i32 @gpio_PullDown(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #0 !dbg !6055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6057, metadata !DIExpression()), !dbg !6059
  %2 = icmp ugt i32 %0, 60, !dbg !6060
  br i1 %2, label %7, label %3, !dbg !6062

3:                                                ; preds = %1
  %4 = tail call i32 @gpio_PullDisable(i32 noundef %0) #15, !dbg !6063
  call void @llvm.dbg.value(metadata i32 %4, metadata !6058, metadata !DIExpression()), !dbg !6059
  %5 = icmp slt i32 %4, 0, !dbg !6064
  %6 = select i1 %5, i32 -3, i32 0, !dbg !6064
  br label %7, !dbg !6065

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ -2, %1 ], !dbg !6059
  ret i32 %8, !dbg !6066
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6071, metadata !DIExpression()), !dbg !6074
  call void @llvm.dbg.value(metadata i32 %1, metadata !6072, metadata !DIExpression()), !dbg !6074
  %3 = icmp ugt i32 %0, 60, !dbg !6075
  br i1 %3, label %9, label %4, !dbg !6077

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i8, !dbg !6078
  %6 = tail call i32 @gpio_SetDriving(i32 noundef %0, i8 noundef zeroext %5) #15, !dbg !6079
  call void @llvm.dbg.value(metadata i32 %6, metadata !6073, metadata !DIExpression()), !dbg !6074
  %7 = icmp slt i32 %6, 0, !dbg !6080
  %8 = select i1 %7, i32 -3, i32 0, !dbg !6080
  br label %9, !dbg !6081

9:                                                ; preds = %2, %4
  %10 = phi i32 [ %8, %4 ], [ -2, %2 ], !dbg !6074
  ret i32 %10, !dbg !6082
}

; Function Attrs: optsize
declare dso_local i32 @gpio_SetDriving(i32 noundef, i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !6083 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !6088, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.value(metadata i32* %1, metadata !6089, metadata !DIExpression()), !dbg !6092
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #14, !dbg !6093
  %4 = icmp ugt i32 %0, 60, !dbg !6094
  br i1 %4, label %11, label %5, !dbg !6096

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %3, metadata !6091, metadata !DIExpression(DW_OP_deref)), !dbg !6092
  %6 = call i32 @gpio_GetDriving(i32 noundef %0, i8* noundef nonnull %3) #15, !dbg !6097
  call void @llvm.dbg.value(metadata i32 %6, metadata !6090, metadata !DIExpression()), !dbg !6092
  %7 = load i8, i8* %3, align 1, !dbg !6098
  call void @llvm.dbg.value(metadata i8 %7, metadata !6091, metadata !DIExpression()), !dbg !6092
  %8 = zext i8 %7 to i32, !dbg !6099
  store i32 %8, i32* %1, align 4, !dbg !6100
  %9 = icmp slt i32 %6, 0, !dbg !6101
  %10 = select i1 %9, i32 -3, i32 0, !dbg !6101
  br label %11, !dbg !6102

11:                                               ; preds = %2, %5
  %12 = phi i32 [ %10, %5 ], [ -2, %2 ], !dbg !6092
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #14, !dbg !6103
  ret i32 %12, !dbg !6103
}

; Function Attrs: optsize
declare dso_local i32 @gpio_GetDriving(i32 noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !6104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6109, metadata !DIExpression()), !dbg !6110
  %2 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !6111
  %3 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6113
  %4 = load i8, i8* %3, align 4, !dbg !6113, !range !1512
  %5 = icmp eq i8 %4, 0, !dbg !6113
  br i1 %5, label %6, label %12, !dbg !6114

6:                                                ; preds = %1
  %7 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #17, !dbg !6115
  br i1 %7, label %9, label %8, !dbg !6117

8:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 89, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i32 0, i32 0), i32 noundef %0) #15, !dbg !6118
  br label %12, !dbg !6120

9:                                                ; preds = %6
  %10 = bitcast %struct.hal_gpt_context_t* %2 to i8*, !dbg !6121
  %11 = tail call i8* @memset(i8* noundef nonnull %10, i32 noundef 0, i32 noundef 16) #15, !dbg !6122
  store i8 1, i8* %3, align 4, !dbg !6123
  br label %12, !dbg !6124

12:                                               ; preds = %1, %9, %8
  %13 = phi i32 [ -2, %8 ], [ 0, %9 ], [ -3, %1 ], !dbg !6110
  ret i32 %13, !dbg !6125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #8 !dbg !6126 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6130, metadata !DIExpression()), !dbg !6131
  %2 = icmp ult i32 %0, 5, !dbg !6132
  %3 = icmp ne i32 %0, 2
  %4 = and i1 %2, %3, !dbg !6134
  ret i1 %4, !dbg !6135
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6138, metadata !DIExpression()), !dbg !6139
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #17, !dbg !6140
  br i1 %2, label %4, label %3, !dbg !6142

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 104, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i32 0, i32 0), i32 noundef %0) #15, !dbg !6143
  br label %14, !dbg !6145

4:                                                ; preds = %1
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !6146
  %6 = getelementptr inbounds %struct.hal_gpt_context_t, %struct.hal_gpt_context_t* %5, i32 0, i32 0, !dbg !6148
  %7 = load i32, i32* %6, align 4, !dbg !6148
  %8 = icmp eq i32 %7, 0, !dbg !6149
  br i1 %8, label %10, label %9, !dbg !6150

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 109, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.81, i32 0, i32 0), i32 noundef %0) #15, !dbg !6151
  br label %14, !dbg !6153

10:                                               ; preds = %4
  %11 = bitcast %struct.hal_gpt_context_t* %5 to i8*, !dbg !6154
  %12 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 0, i32 noundef 16) #15, !dbg !6155
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6156
  store i8 0, i8* %13, align 4, !dbg !6157
  br label %14, !dbg !6158

14:                                               ; preds = %10, %9, %3
  %15 = phi i32 [ -2, %3 ], [ -3, %9 ], [ 0, %10 ], !dbg !6139
  ret i32 %15, !dbg !6159
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !6160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6165, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.value(metadata i32* %1, metadata !6166, metadata !DIExpression()), !dbg !6167
  switch i32 %0, label %24 [
    i32 0, label %3
    i32 1, label %9
    i32 2, label %18
  ], !dbg !6168

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6169
  %5 = icmp eq i32 %4, 1, !dbg !6173
  br i1 %5, label %7, label %6, !dbg !6174

6:                                                ; preds = %3
  tail call void @CM4_GPT2Init() #15, !dbg !6175
  br label %7, !dbg !6177

7:                                                ; preds = %6, %3
  %8 = tail call i32 @get_current_count() #15, !dbg !6178
  store i32 %8, i32* %1, align 4, !dbg !6179
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6180
  br label %25, !dbg !6181

9:                                                ; preds = %2
  %10 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6182
  %11 = icmp eq i32 %10, 1, !dbg !6186
  br i1 %11, label %13, label %12, !dbg !6187

12:                                               ; preds = %9
  tail call void @CM4_GPT4Init() #15, !dbg !6188
  br label %13, !dbg !6190

13:                                               ; preds = %12, %9
  %14 = tail call i32 @get_current_gpt4_count() #15, !dbg !6191
  %15 = tail call i32 @top_mcu_freq_get() #15, !dbg !6192
  %16 = udiv i32 %15, 1000000, !dbg !6193
  %17 = udiv i32 %14, %16, !dbg !6194
  store i32 %17, i32* %1, align 4, !dbg !6195
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6196
  br label %25, !dbg !6197

18:                                               ; preds = %2
  %19 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6198
  %20 = icmp eq i32 %19, 1, !dbg !6202
  br i1 %20, label %22, label %21, !dbg !6203

21:                                               ; preds = %18
  tail call void @CM4_GPT4Init() #15, !dbg !6204
  br label %22, !dbg !6206

22:                                               ; preds = %21, %18
  %23 = tail call i32 @get_current_gpt4_count() #15, !dbg !6207
  store i32 %23, i32* %1, align 4, !dbg !6208
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6209
  br label %25

24:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_free_run_count, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef %0) #15, !dbg !6210
  br label %25, !dbg !6212

25:                                               ; preds = %7, %22, %13, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %13 ], [ 0, %22 ], [ 0, %7 ], !dbg !6167
  ret i32 %26, !dbg !6213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #4 !dbg !6214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6218, metadata !DIExpression()), !dbg !6221
  call void @llvm.dbg.value(metadata i32 %1, metadata !6219, metadata !DIExpression()), !dbg !6221
  call void @llvm.dbg.value(metadata i32* %2, metadata !6220, metadata !DIExpression()), !dbg !6221
  %4 = icmp eq i32* %2, null, !dbg !6222
  br i1 %4, label %7, label %5, !dbg !6224

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !6225
  store i32 %6, i32* %2, align 4, !dbg !6225
  br label %7, !dbg !6227

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !6221
  ret i32 %8, !dbg !6228
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !6229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6234, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.value(metadata i32* %1, metadata !6235, metadata !DIExpression()), !dbg !6236
  %3 = icmp ugt i32 %0, 4, !dbg !6237
  br i1 %3, label %4, label %5, !dbg !6239

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_running_status, i32 0, i32 0), i32 noundef 167, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.85, i32 0, i32 0), i32 noundef %0) #15, !dbg !6240
  br label %8, !dbg !6242

5:                                                ; preds = %2
  %6 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6243
  %7 = load i32, i32* %6, align 4, !dbg !6243
  store i32 %7, i32* %1, align 4, !dbg !6244
  br label %8, !dbg !6245

8:                                                ; preds = %5, %4
  %9 = phi i32 [ -2, %4 ], [ 0, %5 ], !dbg !6236
  ret i32 %9, !dbg !6246
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6251, metadata !DIExpression()), !dbg !6254
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !6252, metadata !DIExpression()), !dbg !6254
  call void @llvm.dbg.value(metadata i8* %2, metadata !6253, metadata !DIExpression()), !dbg !6254
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #17, !dbg !6255
  br i1 %4, label %6, label %5, !dbg !6257

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_gpt_register_callback, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.86, i32 0, i32 0), i32 noundef %0) #15, !dbg !6258
  br label %15, !dbg !6260

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6261
  %8 = load i8, i8* %7, align 4, !dbg !6261, !range !1512
  %9 = icmp eq i8 %8, 1, !dbg !6263
  br i1 %9, label %10, label %15, !dbg !6264

10:                                               ; preds = %6
  %11 = icmp eq void (i8*)* %1, null, !dbg !6265
  br i1 %11, label %15, label %12, !dbg !6267

12:                                               ; preds = %10
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !6268
  store void (i8*)* %1, void (i8*)** %13, align 4, !dbg !6269
  %14 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !6270
  store i8* %2, i8** %14, align 4, !dbg !6271
  br label %15, !dbg !6272

15:                                               ; preds = %10, %6, %12, %5
  %16 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !6254
  ret i32 %16, !dbg !6273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6279, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.value(metadata i32 %1, metadata !6280, metadata !DIExpression()), !dbg !6282
  call void @llvm.dbg.value(metadata i32 %2, metadata !6281, metadata !DIExpression()), !dbg !6282
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #17, !dbg !6283
  br i1 %4, label %6, label %5, !dbg !6285

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_gpt_start_timer_ms, i32 0, i32 0), i32 noundef 221, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.86, i32 0, i32 0), i32 noundef %0) #15, !dbg !6286
  br label %17, !dbg !6288

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6289
  %8 = load i8, i8* %7, align 4, !dbg !6289, !range !1512
  %9 = icmp eq i8 %8, 1, !dbg !6291
  br i1 %9, label %10, label %17, !dbg !6292

10:                                               ; preds = %6
  %11 = icmp ugt i32 %1, 130150523, !dbg !6293
  br i1 %11, label %17, label %12, !dbg !6295

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %1) #17, !dbg !6296
  %14 = tail call fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %2) #17, !dbg !6297
  %15 = tail call fastcc void ()* @hal_gpt_map_callback(i32 noundef %0) #17, !dbg !6298
  tail call void @drvTMR_init(i32 noundef %0, i32 noundef %13, i1 noundef zeroext %14, void ()* noundef nonnull %15) #15, !dbg !6299
  tail call void @TMR_Start(i32 noundef %0) #15, !dbg !6300
  %16 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6301
  store i32 1, i32* %16, align 4, !dbg !6302
  br label %17, !dbg !6303

17:                                               ; preds = %10, %6, %12, %5
  %18 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !6282
  ret i32 %18, !dbg !6304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %0) unnamed_addr #8 !dbg !6305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6309, metadata !DIExpression()), !dbg !6310
  %2 = shl i32 %0, 5, !dbg !6311
  %3 = mul i32 %0, 7, !dbg !6312
  %4 = udiv i32 %3, 10, !dbg !6313
  %5 = add i32 %4, %2, !dbg !6314
  %6 = mul i32 %0, 6, !dbg !6315
  %7 = udiv i32 %6, 100, !dbg !6316
  %8 = add i32 %5, %7, !dbg !6317
  %9 = shl i32 %0, 3, !dbg !6318
  %10 = udiv i32 %9, 1000, !dbg !6319
  %11 = add i32 %8, %10, !dbg !6320
  ret i32 %11, !dbg !6321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %0) unnamed_addr #8 !dbg !6322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6326, metadata !DIExpression()), !dbg !6327
  %2 = icmp eq i32 %0, 1, !dbg !6328
  ret i1 %2, !dbg !6329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull void ()* @hal_gpt_map_callback(i32 noundef %0) unnamed_addr #8 !dbg !6330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6335, metadata !DIExpression()), !dbg !6336
  %2 = icmp eq i32 %0, 0, !dbg !6337
  %3 = select i1 %2, void ()* @hal_gpt_callback0, void ()* @hal_gpt_callback1, !dbg !6338
  ret void ()* %3, !dbg !6339
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback0() #0 !dbg !6340 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 0), align 4, !dbg !6344
  %2 = icmp eq void (i8*)* %1, null, !dbg !6346
  br i1 %2, label %5, label %3, !dbg !6347

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 1), align 4, !dbg !6348
  tail call void %1(i8* noundef %4) #15, !dbg !6350
  br label %5, !dbg !6351

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 0), align 4, !dbg !6352
  ret void, !dbg !6353
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback1() #0 !dbg !6354 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 0), align 4, !dbg !6357
  %2 = icmp eq void (i8*)* %1, null, !dbg !6359
  br i1 %2, label %5, label %3, !dbg !6360

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 1), align 4, !dbg !6361
  tail call void %1(i8* noundef %4) #15, !dbg !6363
  br label %5, !dbg !6364

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 0), align 4, !dbg !6365
  ret void, !dbg !6366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !6367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6369, metadata !DIExpression()), !dbg !6370
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #17, !dbg !6371
  br i1 %2, label %4, label %3, !dbg !6373

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_gpt_stop_timer, i32 0, i32 0), i32 noundef 245, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.86, i32 0, i32 0), i32 noundef %0) #15, !dbg !6374
  br label %6, !dbg !6376

4:                                                ; preds = %1
  tail call void @TMR_Stop(i32 noundef %0) #15, !dbg !6377
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6378
  store i32 0, i32* %5, align 4, !dbg !6379
  br label %6, !dbg !6380

6:                                                ; preds = %4, %3
  %7 = phi i32 [ -2, %3 ], [ 0, %4 ], !dbg !6370
  ret i32 %7, !dbg !6381
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !6382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6386, metadata !DIExpression()), !dbg !6387
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6388
  %3 = icmp eq i32 %2, 1, !dbg !6390
  br i1 %3, label %5, label %4, !dbg !6391

4:                                                ; preds = %1
  tail call void @CM4_GPT2Init() #15, !dbg !6392
  br label %5, !dbg !6394

5:                                                ; preds = %4, %1
  tail call void @delay_ms(i32 noundef %0) #15, !dbg !6395
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6396
  ret i32 0, !dbg !6397
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !6398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6400, metadata !DIExpression()), !dbg !6401
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6402
  %3 = icmp eq i32 %2, 1, !dbg !6404
  br i1 %3, label %5, label %4, !dbg !6405

4:                                                ; preds = %1
  tail call void @CM4_GPT4Init() #15, !dbg !6406
  br label %5, !dbg !6408

5:                                                ; preds = %4, %1
  tail call void @delay_us(i32 noundef %0) #15, !dbg !6409
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6410
  ret i32 0, !dbg !6411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6418, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6419, metadata !DIExpression()), !dbg !6420
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #17, !dbg !6421
  br i1 %3, label %4, label %18, !dbg !6423

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !6424
  %6 = load i8, i8* %5, align 4, !dbg !6424, !range !1512
  %7 = icmp eq i8 %6, 0, !dbg !6424
  br i1 %7, label %8, label %18, !dbg !6426

8:                                                ; preds = %4
  %9 = tail call i8* @memset(i8* noundef nonnull %5, i32 noundef 0, i32 noundef 64) #15, !dbg !6427
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6428
  %11 = bitcast %struct.hal_uart_config_t* %10 to i8*, !dbg !6429
  %12 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !6430
  %13 = tail call i8* @memcpy(i8* noundef nonnull %11, i8* noundef %12, i32 noundef 16) #15, !dbg !6431
  store i8 1, i8* %5, align 4, !dbg !6432
  %14 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !6433, !range !6434
  tail call void @uart_reset_default_value(i32 noundef %14) #15, !dbg !6435
  tail call void @halUART_HWInit(i32 noundef %14) #15, !dbg !6436
  %15 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #17, !dbg !6437
  %16 = icmp eq i32 %15, 0, !dbg !6439
  %17 = select i1 %16, i32 0, i32 -4, !dbg !6420
  br label %18, !dbg !6420

18:                                               ; preds = %8, %4, %2
  %19 = phi i32 [ -4, %2 ], [ -3, %4 ], [ %17, %8 ], !dbg !6420
  ret i32 %19, !dbg !6440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef readonly %1) unnamed_addr #9 !dbg !6441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6447, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6448, metadata !DIExpression()), !dbg !6449
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !6450
  %4 = icmp ne %struct.hal_uart_config_t* %1, null
  %5 = and i1 %4, %3, !dbg !6452
  br i1 %5, label %6, label %22, !dbg !6452

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6453
  %8 = load i32, i32* %7, align 4, !dbg !6453
  %9 = icmp ugt i32 %8, 12, !dbg !6455
  br i1 %9, label %22, label %10, !dbg !6456

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6457
  %12 = load i32, i32* %11, align 4, !dbg !6457
  %13 = icmp ugt i32 %12, 2, !dbg !6458
  br i1 %13, label %22, label %14, !dbg !6459

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6460
  %16 = load i32, i32* %15, align 4, !dbg !6460
  %17 = icmp ugt i32 %16, 1, !dbg !6461
  br i1 %17, label %22, label %18, !dbg !6462

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6463
  %20 = load i32, i32* %19, align 4, !dbg !6463
  %21 = icmp ult i32 %20, 4, !dbg !6464
  br label %22, !dbg !6465

22:                                               ; preds = %18, %6, %10, %14, %2
  %23 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %10 ], [ false, %6 ], [ %21, %18 ], !dbg !6449
  ret i1 %23, !dbg !6466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_port(i32 noundef %0) unnamed_addr #8 !dbg !6467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6471, metadata !DIExpression()), !dbg !6472
  %2 = icmp ne i32 %0, 0, !dbg !6473
  %3 = zext i1 %2 to i32, !dbg !6474
  ret i32 %3, !dbg !6475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6480, metadata !DIExpression()), !dbg !6482
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6481, metadata !DIExpression()), !dbg !6482
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #17, !dbg !6483
  br i1 %3, label %4, label %22, !dbg !6485

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6486
  %6 = bitcast %struct.hal_uart_config_t* %5 to i8*, !dbg !6487
  %7 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !6488
  %8 = tail call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %7, i32 noundef 16) #15, !dbg !6489
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !6490
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6491
  %11 = load i32, i32* %10, align 4, !dbg !6491
  %12 = tail call fastcc i32 @hal_uart_translate_baudrate(i32 noundef %11) #17, !dbg !6492
  %13 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6493
  %14 = load i32, i32* %13, align 4, !dbg !6493
  %15 = tail call fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %14) #17, !dbg !6494
  %16 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6495
  %17 = load i32, i32* %16, align 4, !dbg !6495
  %18 = tail call fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %17) #17, !dbg !6496
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6497
  %20 = load i32, i32* %19, align 4, !dbg !6497
  %21 = tail call fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %20) #17, !dbg !6498
  tail call void @halUART_SetFormat(i32 noundef %9, i32 noundef %12, i16 noundef zeroext %15, i16 noundef zeroext %18, i16 noundef zeroext %21) #15, !dbg !6499
  br label %22, !dbg !6500

22:                                               ; preds = %2, %4
  %23 = phi i32 [ 0, %4 ], [ -4, %2 ], !dbg !6482
  ret i32 %23, !dbg !6501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_baudrate(i32 noundef %0) unnamed_addr #8 !dbg !6502 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6506, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.declare(metadata [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, metadata !6507, metadata !DIExpression()), !dbg !6510
  %2 = getelementptr inbounds [13 x i32], [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, i32 0, i32 %0, !dbg !6511
  %3 = load i32, i32* %2, align 4, !dbg !6511
  ret i32 %3, !dbg !6512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %0) unnamed_addr #8 !dbg !6513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6517, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.declare(metadata [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, metadata !6518, metadata !DIExpression()), !dbg !6521
  %2 = getelementptr inbounds [4 x i16], [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, i32 0, i32 %0, !dbg !6522
  %3 = load i16, i16* %2, align 2, !dbg !6522
  ret i16 %3, !dbg !6523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %0) unnamed_addr #8 !dbg !6524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6528, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.declare(metadata [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, metadata !6529, metadata !DIExpression()), !dbg !6532
  %2 = getelementptr inbounds [5 x i16], [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, i32 0, i32 %0, !dbg !6533
  %3 = load i16, i16* %2, align 2, !dbg !6533
  ret i16 %3, !dbg !6534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %0) unnamed_addr #8 !dbg !6535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6539, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.declare(metadata [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, metadata !6540, metadata !DIExpression()), !dbg !6543
  %2 = getelementptr inbounds [3 x i16], [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, i32 0, i32 %0, !dbg !6544
  %3 = load i16, i16* %2, align 2, !dbg !6544
  ret i16 %3, !dbg !6545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) unnamed_addr #8 !dbg !6546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6550, metadata !DIExpression()), !dbg !6551
  %2 = icmp ult i32 %0, 2, !dbg !6552
  ret i1 %2, !dbg !6553
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6558, metadata !DIExpression()), !dbg !6559
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !6560
  br i1 %2, label %3, label %10, !dbg !6562

3:                                                ; preds = %1
  %4 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !6563
  %5 = load i8, i8* %4, align 4, !dbg !6563, !range !1512
  %6 = icmp eq i8 %5, 0, !dbg !6565
  br i1 %6, label %10, label %7, !dbg !6566

7:                                                ; preds = %3
  %8 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef 64) #15, !dbg !6567
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !6568, !range !6434
  tail call void @uart_query_empty(i32 noundef %9) #15, !dbg !6569
  tail call void @uart_reset_default_value(i32 noundef %9) #15, !dbg !6570
  br label %10, !dbg !6571

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6559
  ret i32 %11, !dbg !6572
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !6573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6577, metadata !DIExpression()), !dbg !6580
  call void @llvm.dbg.value(metadata i8 %1, metadata !6578, metadata !DIExpression()), !dbg !6580
  %3 = icmp eq i32 %0, 0, !dbg !6581
  %4 = icmp eq i32 %0, 1, !dbg !6581
  %5 = select i1 %4, i32 1, i32 2, !dbg !6581
  %6 = select i1 %3, i32 0, i32 %5, !dbg !6581
  call void @llvm.dbg.value(metadata i32 %6, metadata !6579, metadata !DIExpression()), !dbg !6580
  %7 = icmp eq i32 %6, 2, !dbg !6582
  br i1 %7, label %9, label %8, !dbg !6584

8:                                                ; preds = %2
  tail call void @uart_output_char(i32 noundef %6, i8 noundef zeroext %1) #15, !dbg !6585
  br label %9, !dbg !6587

9:                                                ; preds = %2, %8
  ret void, !dbg !6588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6589 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6593, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.value(metadata i8* %1, metadata !6594, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.value(metadata i32 %2, metadata !6595, metadata !DIExpression()), !dbg !6598
  %4 = icmp eq i32 %0, 0, !dbg !6599
  %5 = icmp eq i32 %0, 1, !dbg !6599
  %6 = select i1 %5, i32 1, i32 2, !dbg !6599
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6599
  call void @llvm.dbg.value(metadata i32 %7, metadata !6596, metadata !DIExpression()), !dbg !6598
  %8 = icmp eq i8* %1, null, !dbg !6600
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !6602
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6602
  call void @llvm.dbg.value(metadata i32 0, metadata !6597, metadata !DIExpression()), !dbg !6598
  br i1 %12, label %19, label %13, !dbg !6602

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6597, metadata !DIExpression()), !dbg !6598
  %15 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6603
  %16 = load i8, i8* %15, align 1, !dbg !6603
  tail call void @uart_output_char(i32 noundef %7, i8 noundef zeroext %16) #15, !dbg !6609
  %17 = add nuw i32 %14, 1, !dbg !6610
  call void @llvm.dbg.value(metadata i32 %17, metadata !6597, metadata !DIExpression()), !dbg !6598
  %18 = icmp eq i32 %17, %2, !dbg !6611
  br i1 %18, label %19, label %13, !dbg !6612, !llvm.loop !6613

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !6598
  ret i32 %20, !dbg !6615
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6616 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6618, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.value(metadata i8* %1, metadata !6619, metadata !DIExpression()), !dbg !6625
  call void @llvm.dbg.value(metadata i32 %2, metadata !6620, metadata !DIExpression()), !dbg !6625
  %5 = bitcast i32* %4 to i8*, !dbg !6626
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #14, !dbg !6626
  %6 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !6627
  br i1 %6, label %7, label %24, !dbg !6629

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !6630
  %9 = icmp eq i32 %2, 0
  %10 = or i1 %8, %9, !dbg !6632
  br i1 %10, label %24, label %11, !dbg !6632

11:                                               ; preds = %7
  %12 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !6633
  %13 = load i8, i8* %12, align 4, !dbg !6633, !range !1512
  %14 = icmp eq i8 %13, 0, !dbg !6633
  br i1 %14, label %24, label %15, !dbg !6635

15:                                               ; preds = %11
  %16 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !6636, !range !6434
  call void @llvm.dbg.value(metadata i32* %4, metadata !6621, metadata !DIExpression(DW_OP_deref)), !dbg !6625
  call void @halUART_Get_VFIFO_Length(i32 noundef %16, i32 noundef 0, i32* noundef nonnull %4) #15, !dbg !6637
  %17 = load i32, i32* %4, align 4, !dbg !6638
  call void @llvm.dbg.value(metadata i32 %17, metadata !6621, metadata !DIExpression()), !dbg !6625
  %18 = icmp ult i32 %17, %2, !dbg !6640
  %19 = select i1 %18, i32 %17, i32 %2
  call void @llvm.dbg.value(metadata i32 %19, metadata !6622, metadata !DIExpression()), !dbg !6625
  call void @halUART_Write_VFIFO_Data(i32 noundef %16, i8* noundef nonnull %1, i32 noundef %19) #15, !dbg !6641
  %20 = load i32, i32* %4, align 4, !dbg !6642
  call void @llvm.dbg.value(metadata i32 %20, metadata !6621, metadata !DIExpression()), !dbg !6625
  %21 = icmp eq i32 %19, %20, !dbg !6644
  br i1 %21, label %22, label %24, !dbg !6645

22:                                               ; preds = %15
  %23 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %16, i1 noundef zeroext false) #17, !dbg !6646, !range !6648
  call void @llvm.dbg.value(metadata i32 %23, metadata !6623, metadata !DIExpression()), !dbg !6625
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %23) #15, !dbg !6649
  br label %24, !dbg !6650

24:                                               ; preds = %15, %22, %11, %7, %3
  %25 = phi i32 [ 0, %3 ], [ 0, %7 ], [ 0, %11 ], [ %19, %22 ], [ %19, %15 ], !dbg !6625
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #14, !dbg !6651
  ret i32 %25, !dbg !6651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #8 !dbg !6652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6656, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.value(metadata i1 %1, metadata !6657, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6659
  %3 = icmp eq i32 %0, 0, !dbg !6660
  %4 = select i1 %1, i32 15, i32 14, !dbg !6662
  %5 = select i1 %1, i32 17, i32 16, !dbg !6662
  %6 = select i1 %3, i32 %4, i32 %5, !dbg !6662
  call void @llvm.dbg.value(metadata i32 %6, metadata !6658, metadata !DIExpression()), !dbg !6659
  ret i32 %6, !dbg !6663
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_enable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !6664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6668, metadata !DIExpression()), !dbg !6670
  %2 = icmp eq i32 %0, 0, !dbg !6671
  %3 = icmp eq i32 %0, 1, !dbg !6671
  %4 = select i1 %3, i32 1, i32 2, !dbg !6671
  %5 = select i1 %2, i32 0, i32 %4, !dbg !6671
  call void @llvm.dbg.value(metadata i32 %5, metadata !6669, metadata !DIExpression()), !dbg !6670
  %6 = icmp ult i32 %5, 2, !dbg !6672
  br i1 %6, label %7, label %9, !dbg !6674

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @uart_input_char(i32 noundef %5) #15, !dbg !6675
  br label %9, !dbg !6677

9:                                                ; preds = %1, %7
  %10 = phi i8 [ %8, %7 ], [ 0, %1 ], !dbg !6678
  ret i8 %10, !dbg !6679
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !6680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6684, metadata !DIExpression()), !dbg !6686
  %2 = icmp eq i32 %0, 0, !dbg !6687
  %3 = icmp eq i32 %0, 1, !dbg !6687
  %4 = select i1 %3, i32 1, i32 2, !dbg !6687
  %5 = select i1 %2, i32 0, i32 %4, !dbg !6687
  call void @llvm.dbg.value(metadata i32 %5, metadata !6685, metadata !DIExpression()), !dbg !6686
  %6 = icmp ult i32 %5, 2, !dbg !6688
  br i1 %6, label %7, label %9, !dbg !6690

7:                                                ; preds = %1
  %8 = tail call i32 @uart_input_char_unblocking(i32 noundef %5) #15, !dbg !6691
  br label %9, !dbg !6693

9:                                                ; preds = %1, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %1 ], !dbg !6694
  ret i32 %10, !dbg !6695
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6700, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i8* %1, metadata !6701, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i32 %2, metadata !6702, metadata !DIExpression()), !dbg !6705
  %4 = icmp eq i32 %0, 0, !dbg !6706
  %5 = icmp eq i32 %0, 1, !dbg !6706
  %6 = select i1 %5, i32 1, i32 2, !dbg !6706
  %7 = select i1 %4, i32 0, i32 %6, !dbg !6706
  call void @llvm.dbg.value(metadata i32 %7, metadata !6703, metadata !DIExpression()), !dbg !6705
  %8 = icmp eq i8* %1, null, !dbg !6707
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !6709
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6709
  call void @llvm.dbg.value(metadata i32 0, metadata !6704, metadata !DIExpression()), !dbg !6705
  br i1 %12, label %19, label %13, !dbg !6709

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6704, metadata !DIExpression()), !dbg !6705
  %15 = tail call zeroext i8 @uart_input_char(i32 noundef %7) #15, !dbg !6710
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6716
  store i8 %15, i8* %16, align 1, !dbg !6717
  %17 = add nuw i32 %14, 1, !dbg !6718
  call void @llvm.dbg.value(metadata i32 %17, metadata !6704, metadata !DIExpression()), !dbg !6705
  %18 = icmp eq i32 %17, %2, !dbg !6719
  br i1 %18, label %19, label %13, !dbg !6720, !llvm.loop !6721

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !6705
  ret i32 %20, !dbg !6723
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6724 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6726, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i8* %1, metadata !6727, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata i32 %2, metadata !6728, metadata !DIExpression()), !dbg !6732
  %5 = bitcast i32* %4 to i8*, !dbg !6733
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #14, !dbg !6733
  %6 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !6734
  br i1 %6, label %7, label %20, !dbg !6736

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !6737
  %9 = icmp eq i32 %2, 0
  %10 = or i1 %8, %9, !dbg !6739
  br i1 %10, label %20, label %11, !dbg !6739

11:                                               ; preds = %7
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !6740, !range !6434
  call void @llvm.dbg.value(metadata i32* %4, metadata !6729, metadata !DIExpression(DW_OP_deref)), !dbg !6732
  call void @halUART_Get_VFIFO_Length(i32 noundef %12, i32 noundef 1, i32* noundef nonnull %4) #15, !dbg !6741
  %13 = load i32, i32* %4, align 4, !dbg !6742
  call void @llvm.dbg.value(metadata i32 %13, metadata !6729, metadata !DIExpression()), !dbg !6732
  %14 = icmp ult i32 %13, %2, !dbg !6744
  %15 = select i1 %14, i32 %13, i32 %2
  call void @llvm.dbg.value(metadata i32 %15, metadata !6730, metadata !DIExpression()), !dbg !6732
  call void @halUART_Read_VFIFO_Data(i32 noundef %12, i8* noundef nonnull %1, i32 noundef %15) #15, !dbg !6745
  %16 = load i32, i32* %4, align 4, !dbg !6746
  call void @llvm.dbg.value(metadata i32 %16, metadata !6729, metadata !DIExpression()), !dbg !6732
  %17 = icmp eq i32 %15, %16, !dbg !6748
  br i1 %17, label %18, label %20, !dbg !6749

18:                                               ; preds = %11
  %19 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %12, i1 noundef zeroext true) #17, !dbg !6750, !range !6648
  call void @llvm.dbg.value(metadata i32 %19, metadata !6731, metadata !DIExpression()), !dbg !6732
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %19) #15, !dbg !6752
  br label %20, !dbg !6753

20:                                               ; preds = %11, %18, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %15, %18 ], [ %15, %11 ], !dbg !6732
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #14, !dbg !6754
  ret i32 %21, !dbg !6754
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !6755 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6757, metadata !DIExpression()), !dbg !6759
  %3 = bitcast i32* %2 to i8*, !dbg !6760
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #14, !dbg !6760
  call void @llvm.dbg.value(metadata i32 0, metadata !6758, metadata !DIExpression()), !dbg !6759
  store i32 0, i32* %2, align 4, !dbg !6761
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !6762
  br i1 %4, label %5, label %8, !dbg !6764

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !6765, !range !6434
  call void @llvm.dbg.value(metadata i32* %2, metadata !6758, metadata !DIExpression(DW_OP_deref)), !dbg !6759
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 0, i32* noundef nonnull %2) #15, !dbg !6766
  %7 = load i32, i32* %2, align 4, !dbg !6767
  call void @llvm.dbg.value(metadata i32 %7, metadata !6758, metadata !DIExpression()), !dbg !6759
  br label %8, !dbg !6768

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !6759
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #14, !dbg !6769
  ret i32 %9, !dbg !6769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !6770 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6772, metadata !DIExpression()), !dbg !6774
  %3 = bitcast i32* %2 to i8*, !dbg !6775
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #14, !dbg !6775
  call void @llvm.dbg.value(metadata i32 0, metadata !6773, metadata !DIExpression()), !dbg !6774
  store i32 0, i32* %2, align 4, !dbg !6776
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !6777
  br i1 %4, label %5, label %8, !dbg !6779

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !6780, !range !6434
  call void @llvm.dbg.value(metadata i32* %2, metadata !6773, metadata !DIExpression(DW_OP_deref)), !dbg !6774
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 1, i32* noundef nonnull %2) #15, !dbg !6781
  %7 = load i32, i32* %2, align 4, !dbg !6782
  call void @llvm.dbg.value(metadata i32 %7, metadata !6773, metadata !DIExpression()), !dbg !6774
  br label %8, !dbg !6783

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !6774
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #14, !dbg !6784
  ret i32 %9, !dbg !6784
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6789, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6790, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.value(metadata i8* %2, metadata !6791, metadata !DIExpression()), !dbg !6793
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !6794
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !6796
  br i1 %6, label %7, label %18, !dbg !6796

7:                                                ; preds = %3
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 0, !dbg !6797
  store void (i32, i8*)* %1, void (i32, i8*)** %8, align 4, !dbg !6798
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 1, !dbg !6799
  store i8* %2, i8** %9, align 4, !dbg !6800
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 2, !dbg !6801
  store i8 1, i8* %10, align 4, !dbg !6802
  %11 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !6803
  %12 = tail call fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) #17, !dbg !6804
  tail call void @halUART_VDMA_Rx_Register_Callback(i32 noundef %11, void ()* noundef %12) #15, !dbg !6805
  tail call void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %11, void ()* noundef %12) #15, !dbg !6806
  %13 = icmp eq i32 %11, 0, !dbg !6807
  br i1 %13, label %14, label %15, !dbg !6809

14:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 14, void ()* noundef nonnull @hal_uart_send_callback0) #15, !dbg !6810
  br label %16, !dbg !6812

15:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 16, void ()* noundef nonnull @hal_uart_send_callback1) #15, !dbg !6813
  br label %16

16:                                               ; preds = %15, %14
  %17 = tail call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %11, i1 noundef zeroext false) #17, !dbg !6815, !range !6648
  call void @llvm.dbg.value(metadata i32 %17, metadata !6792, metadata !DIExpression()), !dbg !6793
  tail call void @DMA_Vfifo_enable_interrupt(i32 noundef %17) #15, !dbg !6816
  br label %18, !dbg !6817

18:                                               ; preds = %3, %16
  %19 = phi i32 [ 0, %16 ], [ -4, %3 ], !dbg !6793
  ret i32 %19, !dbg !6818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) unnamed_addr #8 !dbg !655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !661, metadata !DIExpression()), !dbg !6819
  %2 = getelementptr inbounds [2 x void ()*], [2 x void ()*]* @hal_uart_map_receive_callback.func_tbl, i32 0, i32 %0, !dbg !6820
  %3 = load void ()*, void ()** %2, align 4, !dbg !6820
  ret void ()* %3, !dbg !6821
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback0() #0 !dbg !6822 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !6828, !range !1512
  %2 = icmp eq i8 %1, 0, !dbg !6828
  br i1 %2, label %8, label %3, !dbg !6829

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !6830
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !6832
  br i1 %5, label %8, label %6, !dbg !6833

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !6834
  tail call void %4(i32 noundef 2, i8* noundef %7) #15, !dbg !6836
  br label %8, !dbg !6837

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #17, !dbg !6838, !range !6434
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #17, !dbg !6839
  ret void, !dbg !6840
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback1() #0 !dbg !6841 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !6846, !range !1512
  %2 = icmp eq i8 %1, 0, !dbg !6846
  br i1 %2, label %8, label %3, !dbg !6847

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !6848
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !6850
  br i1 %5, label %8, label %6, !dbg !6851

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !6852
  tail call void %4(i32 noundef 2, i8* noundef %7) #15, !dbg !6854
  br label %8, !dbg !6855

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #17, !dbg !6856, !range !6434
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #17, !dbg !6857
  ret void, !dbg !6858
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_uart_check_irq_disable(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #0 !dbg !6859 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6863, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.value(metadata i1 %1, metadata !6864, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6870
  %5 = bitcast i32* %3 to i8*, !dbg !6871
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #14, !dbg !6871
  %6 = bitcast i32* %4 to i8*, !dbg !6871
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14, !dbg !6871
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !6867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !6870
  br i1 %1, label %7, label %12, !dbg !6872

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !6867, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !6870
  call void @llvm.dbg.value(metadata i32* %3, metadata !6865, metadata !DIExpression(DW_OP_deref)), !dbg !6870
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 1, i32* noundef nonnull %3) #15, !dbg !6873
  %8 = load i32, i32* %3, align 4, !dbg !6876
  call void @llvm.dbg.value(metadata i32 %8, metadata !6865, metadata !DIExpression()), !dbg !6870
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 5, !dbg !6878
  %10 = load i32, i32* %9, align 4, !dbg !6878
  %11 = icmp ult i32 %8, %10, !dbg !6879
  br i1 %11, label %22, label %20, !dbg !6880

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32* %4, metadata !6866, metadata !DIExpression(DW_OP_deref)), !dbg !6870
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %4) #15, !dbg !6881
  %13 = load i32, i32* %4, align 4, !dbg !6883
  call void @llvm.dbg.value(metadata i32 %13, metadata !6866, metadata !DIExpression()), !dbg !6870
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !6885
  %15 = load i32, i32* %14, align 4, !dbg !6885
  %16 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 2, !dbg !6886
  %17 = load i32, i32* %16, align 4, !dbg !6886
  %18 = sub i32 %15, %17, !dbg !6887
  %19 = icmp ult i32 %13, %18, !dbg !6888
  br i1 %19, label %22, label %20, !dbg !6889

20:                                               ; preds = %12, %7
  %21 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) #17, !dbg !6890, !range !6648
  call void @DMA_Vfifo_disable_interrupt(i32 noundef %21) #15, !dbg !6890
  br label %22, !dbg !6891

22:                                               ; preds = %20, %12, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14, !dbg !6891
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #14, !dbg !6891
  ret void, !dbg !6891
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_disable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback0() #0 !dbg !6892 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !6897, !range !1512
  %2 = icmp eq i8 %1, 0, !dbg !6897
  br i1 %2, label %11, label %3, !dbg !6898

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 0) #17, !dbg !6899
  %5 = icmp eq i32 %4, 0, !dbg !6900
  br i1 %5, label %11, label %6, !dbg !6901

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !6902
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !6904
  br i1 %8, label %11, label %9, !dbg !6905

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !6906
  tail call void %7(i32 noundef 1, i8* noundef %10) #15, !dbg !6908
  br label %11, !dbg !6909

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #17, !dbg !6910, !range !6434
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #17, !dbg !6911
  ret void, !dbg !6912
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback1() #0 !dbg !6913 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !6918, !range !1512
  %2 = icmp eq i8 %1, 0, !dbg !6918
  br i1 %2, label %11, label %3, !dbg !6919

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 1) #17, !dbg !6920
  %5 = icmp eq i32 %4, 0, !dbg !6921
  br i1 %5, label %11, label %6, !dbg !6922

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !6923
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !6925
  br i1 %8, label %11, label %9, !dbg !6926

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !6927
  tail call void %7(i32 noundef 1, i8* noundef %10) #15, !dbg !6929
  br label %11, !dbg !6930

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #17, !dbg !6931, !range !6434
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #17, !dbg !6932
  ret void, !dbg !6933
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6938, metadata !DIExpression()), !dbg !6940
  call void @llvm.dbg.value(metadata i32 %1, metadata !6939, metadata !DIExpression()), !dbg !6940
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !6941
  %4 = icmp ult i32 %1, 13
  %5 = and i1 %4, %3, !dbg !6943
  br i1 %5, label %6, label %10, !dbg !6943

6:                                                ; preds = %2
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6944
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %7, i32 0, i32 0, !dbg !6945
  store i32 %1, i32* %8, align 4, !dbg !6946
  %9 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %7) #17, !dbg !6947
  br label %10, !dbg !6948

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ -4, %2 ], !dbg !6940
  ret i32 %11, !dbg !6949
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* noundef %1) local_unnamed_addr #0 !dbg !6950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6956, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !6957, metadata !DIExpression()), !dbg !6958
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !6959
  br i1 %3, label %4, label %28, !dbg !6961

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef %1) #17, !dbg !6962
  br i1 %5, label %6, label %28, !dbg !6964

6:                                                ; preds = %4
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !6965
  store i8 1, i8* %7, align 4, !dbg !6966
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, !dbg !6967
  %9 = bitcast %struct.hal_uart_dma_config_t* %8 to i8*, !dbg !6968
  %10 = bitcast %struct.hal_uart_dma_config_t* %1 to i8*, !dbg !6969
  %11 = tail call i8* @memcpy(i8* noundef nonnull %9, i8* noundef %10, i32 noundef 28) #15, !dbg !6970
  tail call void @DMA_Init() #15, !dbg !6971
  tail call void @DMA_Vfifo_init() #15, !dbg !6972
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !6973
  %13 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !6974
  %14 = load i8*, i8** %13, align 4, !dbg !6974
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !6975
  %16 = load i32, i32* %15, align 4, !dbg !6975
  %17 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !6976
  %18 = load i32, i32* %17, align 4, !dbg !6976
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !6977
  %20 = load i32, i32* %19, align 4, !dbg !6977
  %21 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef 5000) #17, !dbg !6978
  tail call void @halUART_Rx_VFIFO_Initialize(i32 noundef %12, i8* noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %21) #15, !dbg !6979
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !6980
  %23 = load i8*, i8** %22, align 4, !dbg !6980
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !6981
  %25 = load i32, i32* %24, align 4, !dbg !6981
  %26 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !6982
  %27 = load i32, i32* %26, align 4, !dbg !6982
  tail call void @halUART_Tx_VFIFO_Initialize(i32 noundef %12, i8* noundef %23, i32 noundef %25, i32 noundef %27) #15, !dbg !6983
  br label %28, !dbg !6984

28:                                               ; preds = %4, %2, %6
  %29 = phi i32 [ 0, %6 ], [ -4, %2 ], [ -4, %4 ], !dbg !6958
  ret i32 %29, !dbg !6985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef readonly %0) unnamed_addr #9 !dbg !6986 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %0, metadata !6990, metadata !DIExpression()), !dbg !6991
  %2 = icmp eq %struct.hal_uart_dma_config_t* %0, null, !dbg !6992
  br i1 %2, label %27, label %3, !dbg !6994

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 3, !dbg !6995
  %5 = load i8*, i8** %4, align 4, !dbg !6995
  %6 = icmp eq i8* %5, null, !dbg !6997
  br i1 %6, label %27, label %7, !dbg !6998

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 4, !dbg !6999
  %9 = load i32, i32* %8, align 4, !dbg !6999
  %10 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 5, !dbg !7001
  %11 = load i32, i32* %10, align 4, !dbg !7001
  %12 = icmp ult i32 %9, %11, !dbg !7002
  br i1 %12, label %27, label %13, !dbg !7003

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 6, !dbg !7004
  %15 = load i32, i32* %14, align 4, !dbg !7004
  %16 = icmp ult i32 %9, %15, !dbg !7006
  br i1 %16, label %27, label %17, !dbg !7007

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 0, !dbg !7008
  %19 = load i8*, i8** %18, align 4, !dbg !7008
  %20 = icmp eq i8* %19, null, !dbg !7010
  br i1 %20, label %27, label %21, !dbg !7011

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 1, !dbg !7012
  %23 = load i32, i32* %22, align 4, !dbg !7012
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 2, !dbg !7014
  %25 = load i32, i32* %24, align 4, !dbg !7014
  %26 = icmp uge i32 %23, %25, !dbg !7015
  br label %27, !dbg !7016

27:                                               ; preds = %21, %17, %13, %7, %3, %1
  %28 = phi i1 [ false, %1 ], [ false, %3 ], [ false, %7 ], [ false, %13 ], [ false, %17 ], [ %26, %21 ], !dbg !6991
  ret i1 %28, !dbg !7017
}

; Function Attrs: optsize
declare dso_local void @DMA_Init() local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_init() local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hal_uart_translate_timeout(i32 noundef %0) unnamed_addr #0 !dbg !7018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7020, metadata !DIExpression()), !dbg !7022
  %2 = tail call i32 @top_mcu_freq_get() #15, !dbg !7023
  %3 = udiv i32 %2, 1000000, !dbg !7024
  call void @llvm.dbg.value(metadata i32 %3, metadata !7021, metadata !DIExpression()), !dbg !7022
  %4 = mul i32 %3, %0, !dbg !7025
  ret i32 %4, !dbg !7026
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !7027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7029, metadata !DIExpression()), !dbg !7031
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !7032
  br i1 %2, label %3, label %8, !dbg !7034

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !7035
  %5 = icmp eq i32 %0, 1, !dbg !7035
  %6 = select i1 %5, i32 1, i32 2, !dbg !7035
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7035
  call void @llvm.dbg.value(metadata i32 %7, metadata !7030, metadata !DIExpression()), !dbg !7031
  tail call void @uart_set_hardware_flowcontrol(i32 noundef %7) #15, !dbg !7036
  br label %8, !dbg !7037

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !7031
  ret i32 %9, !dbg !7038
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !7039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7043, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i8 %1, metadata !7044, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i8 %2, metadata !7045, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i8 %3, metadata !7046, metadata !DIExpression()), !dbg !7048
  %5 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !7049
  br i1 %5, label %6, label %11, !dbg !7051

6:                                                ; preds = %4
  %7 = icmp eq i32 %0, 0, !dbg !7052
  %8 = icmp eq i32 %0, 1, !dbg !7052
  %9 = select i1 %8, i32 1, i32 2, !dbg !7052
  %10 = select i1 %7, i32 0, i32 %9, !dbg !7052
  call void @llvm.dbg.value(metadata i32 %10, metadata !7047, metadata !DIExpression()), !dbg !7048
  tail call void @uart_set_software_flowcontrol(i32 noundef %10, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #15, !dbg !7053
  br label %11, !dbg !7054

11:                                               ; preds = %4, %6
  %12 = phi i32 [ 0, %6 ], [ -4, %4 ], !dbg !7048
  ret i32 %12, !dbg !7055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !7056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7058, metadata !DIExpression()), !dbg !7060
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !7061
  br i1 %2, label %3, label %8, !dbg !7063

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !7064
  %5 = icmp eq i32 %0, 1, !dbg !7064
  %6 = select i1 %5, i32 1, i32 2, !dbg !7064
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7064
  call void @llvm.dbg.value(metadata i32 %7, metadata !7059, metadata !DIExpression()), !dbg !7060
  tail call void @uart_disable_flowcontrol(i32 noundef %7) #15, !dbg !7065
  br label %8, !dbg !7066

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !7060
  ret i32 %9, !dbg !7067
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7072, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i32 %1, metadata !7073, metadata !DIExpression()), !dbg !7074
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !7075
  br i1 %3, label %4, label %8, !dbg !7077

4:                                                ; preds = %2
  %5 = icmp eq i32 %0, 0, !dbg !7078
  %6 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef %1) #17, !dbg !7080
  %7 = select i1 %5, i32 15, i32 17
  tail call void @DMA_Vfifo_Set_timeout(i32 noundef %7, i32 noundef %6) #15, !dbg !7080
  br label %8, !dbg !7081

8:                                                ; preds = %4, %2
  %9 = phi i32 [ -4, %2 ], [ 0, %4 ], !dbg !7074
  ret i32 %9, !dbg !7081
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Set_timeout(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_suspend_bit() local_unnamed_addr #8 !dbg !7082 {
  call void @llvm.dbg.value(metadata i8 5, metadata !7086, metadata !DIExpression()), !dbg !7087
  ret i8 5, !dbg !7088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spi_mode_command() local_unnamed_addr #8 !dbg !7089 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_default, i32 0, i32 0), !dbg !7092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spiq_mode_command() local_unnamed_addr #8 !dbg !7093 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_default, i32 0, i32 0), !dbg !7094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_read_SR2_comand() local_unnamed_addr #8 !dbg !7095 {
  call void @llvm.dbg.value(metadata i8 5, metadata !7097, metadata !DIExpression()), !dbg !7098
  ret i8 5, !dbg !7099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias %struct.flash_info_t* @customer_flash_register() local_unnamed_addr #8 !dbg !7100 {
  ret %struct.flash_info_t* null, !dbg !7103
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !7104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7106, metadata !DIExpression()), !dbg !7107
  %2 = trunc i32 %0 to i8, !dbg !7108
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext %2) #15, !dbg !7109
  ret i32 %0, !dbg !7110
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #12 !dbg !7111 {
  tail call fastcc void @SystemClock_Config() #17, !dbg !7112
  tail call fastcc void @prvSetupHardware() #17, !dbg !7113
  tail call void asm sideeffect "cpsie i", "~{memory}"() #14, !dbg !7114, !srcloc !7117
  tail call void asm sideeffect "cpsie f", "~{memory}"() #14, !dbg !7118, !srcloc !7121
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i32 0, i32 0)) #15, !dbg !7122
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.98, i32 0, i32 0)) #15, !dbg !7123
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i32 0, i32 0)) #15, !dbg !7124
  tail call fastcc void @flash_sample() #17, !dbg !7125
  br label %4, !dbg !7126

4:                                                ; preds = %4, %0
  br label %4, !dbg !7127, !llvm.loop !7130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !7133 {
  tail call void @top_xtal_init() #15, !dbg !7134
  ret void, !dbg !7135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !7136 {
  tail call fastcc void @log_uart_init() #17, !dbg !7137
  %1 = tail call i32 @hal_flash_init() #15, !dbg !7138
  ret void, !dbg !7139
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_sample() unnamed_addr #0 !dbg !7140 {
  %1 = alloca [8 x i32], align 4
  %2 = alloca [8 x i32], align 4
  %3 = bitcast [8 x i32]* %1 to i8*, !dbg !7148
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #14, !dbg !7148
  call void @llvm.dbg.declare(metadata [8 x i32]* %1, metadata !7143, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i32 2064384, metadata !7146, metadata !DIExpression()), !dbg !7150
  %4 = bitcast [8 x i32]* %2 to i8*, !dbg !7151
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #14, !dbg !7151
  call void @llvm.dbg.declare(metadata [8 x i32]* %2, metadata !7147, metadata !DIExpression()), !dbg !7152
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %4, i8* noundef nonnull align 4 dereferenceable(32) bitcast ([8 x i32]* @__const.flash_sample.data to i8*), i32 32, i1 false), !dbg !7152
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.99, i32 0, i32 0)) #15, !dbg !7153
  %6 = tail call i32 @hal_flash_erase(i32 noundef 2064384, i32 noundef 0) #15, !dbg !7154
  call void @llvm.dbg.value(metadata i32 %6, metadata !7142, metadata !DIExpression()), !dbg !7150
  %7 = icmp eq i32 %6, 0, !dbg !7155
  br i1 %7, label %10, label %8, !dbg !7157

8:                                                ; preds = %0
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.100, i32 0, i32 0)) #15, !dbg !7158
  br label %33, !dbg !7160

10:                                               ; preds = %0
  %11 = call i32 @hal_flash_write(i32 noundef 2064384, i8* noundef nonnull %4, i32 noundef 32) #15, !dbg !7161
  call void @llvm.dbg.value(metadata i32 %11, metadata !7142, metadata !DIExpression()), !dbg !7150
  %12 = icmp eq i32 %11, 0, !dbg !7162
  br i1 %12, label %15, label %13, !dbg !7164

13:                                               ; preds = %10
  %14 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.101, i32 0, i32 0)) #15, !dbg !7165
  br label %33, !dbg !7167

15:                                               ; preds = %10
  %16 = call i32 @hal_flash_read(i32 noundef 2064384, i8* noundef nonnull %3, i32 noundef 32) #15, !dbg !7168
  call void @llvm.dbg.value(metadata i32 0, metadata !7145, metadata !DIExpression()), !dbg !7150
  br label %20, !dbg !7169

17:                                               ; preds = %20
  %18 = add nuw nsw i32 %21, 1, !dbg !7171
  call void @llvm.dbg.value(metadata i32 %18, metadata !7145, metadata !DIExpression()), !dbg !7150
  call void @llvm.dbg.value(metadata i32 %21, metadata !7145, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7150
  %19 = icmp eq i32 %18, 8, !dbg !7173
  br i1 %19, label %29, label %20, !dbg !7169, !llvm.loop !7174

20:                                               ; preds = %15, %17
  %21 = phi i32 [ 0, %15 ], [ %18, %17 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !7145, metadata !DIExpression()), !dbg !7150
  %22 = getelementptr inbounds [8 x i32], [8 x i32]* %1, i32 0, i32 %21, !dbg !7176
  %23 = load i32, i32* %22, align 4, !dbg !7176
  %24 = getelementptr inbounds [8 x i32], [8 x i32]* %2, i32 0, i32 %21, !dbg !7179
  %25 = load i32, i32* %24, align 4, !dbg !7179
  %26 = icmp eq i32 %23, %25, !dbg !7180
  call void @llvm.dbg.value(metadata i32 %21, metadata !7145, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7150
  br i1 %26, label %17, label %27, !dbg !7181

27:                                               ; preds = %20
  %28 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5.102, i32 0, i32 0)) #15, !dbg !7182
  call void @llvm.dbg.value(metadata i32 -6, metadata !7142, metadata !DIExpression()), !dbg !7150
  br label %33, !dbg !7184

29:                                               ; preds = %17
  %30 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6.103, i32 0, i32 0)) #15, !dbg !7185
  %31 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7.104, i32 0, i32 0)) #15, !dbg !7188
  %32 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.105, i32 0, i32 0)) #15, !dbg !7189
  br label %33, !dbg !7190

33:                                               ; preds = %29, %27, %13, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #14, !dbg !7191
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #14, !dbg !7191
  ret void, !dbg !7191
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #13

; Function Attrs: noinline nounwind optsize
define internal fastcc void @log_uart_init() unnamed_addr #0 !dbg !7192 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !7202
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #14, !dbg !7202
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !7194, metadata !DIExpression()), !dbg !7203
  %3 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 7) #15, !dbg !7204
  %4 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 7) #15, !dbg !7205
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 2, i8 noundef zeroext 7) #15, !dbg !7206
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 3, i8 noundef zeroext 7) #15, !dbg !7207
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !7208
  store i32 9, i32* %7, align 4, !dbg !7209
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !7210
  store i32 3, i32* %8, align 4, !dbg !7211
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !7212
  store i32 0, i32* %9, align 4, !dbg !7213
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !7214
  store i32 0, i32* %10, align 4, !dbg !7215
  %11 = call i32 @hal_uart_init(i32 noundef 0, %struct.hal_uart_config_t* noundef nonnull %1) #15, !dbg !7216
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #14, !dbg !7217
  ret void, !dbg !7217
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #5 !dbg !7218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7220, metadata !DIExpression()), !dbg !7222
  %2 = add i32 %0, -1, !dbg !7223
  %3 = icmp ugt i32 %2, 16777215, !dbg !7225
  br i1 %3, label %8, label %4, !dbg !7226

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7227
  call void @llvm.dbg.value(metadata i32 %5, metadata !7221, metadata !DIExpression()), !dbg !7222
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7228
  %7 = and i32 %6, -4, !dbg !7228
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7228
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !7229
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7230
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7231
  br label %8, !dbg !7232

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !7222
  ret i32 %9, !dbg !7233
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #5 !dbg !7234 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !7235
  ret void, !dbg !7236
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #7 !dbg !7237 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !7238
  ret i32 %1, !dbg !7239
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #0 !dbg !7240 {
  %1 = tail call i32 @top_mcu_freq_get() #15, !dbg !7241
  store i32 %1, i32* @SystemCoreClock, align 4, !dbg !7242
  ret void, !dbg !7243
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !7244 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7245
  %2 = or i32 %1, 15728640, !dbg !7245
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7245
  store volatile i32 536870912, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7246
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7247
  %4 = or i32 %3, 458752, !dbg !7247
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7247
  ret void, !dbg !7248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #5 !dbg !7249 {
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7250
  store volatile i32 19, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7251
  store volatile i32 3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7252
  store volatile i32 268931328, i32* inttoptr (i32 22282240 to i32*), align 262144, !dbg !7253
  store volatile i32 269713408, i32* inttoptr (i32 22282304 to i32*), align 64, !dbg !7254
  store volatile i32 1, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7255
  store volatile i32 781, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7256
  ret void, !dbg !7257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #8 !dbg !7258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7260, metadata !DIExpression()), !dbg !7261
  ret i32 0, !dbg !7262
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #8 !dbg !7263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7313, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !7314, metadata !DIExpression()), !dbg !7315
  ret i32 0, !dbg !7316
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #8 !dbg !7317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7319, metadata !DIExpression()), !dbg !7320
  ret i32 1, !dbg !7321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7326, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.value(metadata i32 %1, metadata !7327, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.value(metadata i32 %2, metadata !7328, metadata !DIExpression()), !dbg !7329
  ret i32 0, !dbg !7330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7331 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7335, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i32 %1, metadata !7336, metadata !DIExpression()), !dbg !7338
  call void @llvm.dbg.value(metadata i32 %2, metadata !7337, metadata !DIExpression()), !dbg !7338
  ret i32 -1, !dbg !7339
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7344, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i8* %1, metadata !7345, metadata !DIExpression()), !dbg !7347
  call void @llvm.dbg.value(metadata i32 %2, metadata !7346, metadata !DIExpression()), !dbg !7347
  ret i32 0, !dbg !7348
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !7349 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7351, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i8* %1, metadata !7352, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i32 %2, metadata !7353, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i32 0, metadata !7354, metadata !DIExpression()), !dbg !7355
  %4 = icmp sgt i32 %2, 0, !dbg !7356
  br i1 %4, label %5, label %14, !dbg !7359

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7354, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.value(metadata i8* %7, metadata !7352, metadata !DIExpression()), !dbg !7355
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7360
  call void @llvm.dbg.value(metadata i8* %8, metadata !7352, metadata !DIExpression()), !dbg !7355
  %9 = load i8, i8* %7, align 1, !dbg !7362
  %10 = zext i8 %9 to i32, !dbg !7362
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #15, !dbg !7363
  %12 = add nuw nsw i32 %6, 1, !dbg !7364
  call void @llvm.dbg.value(metadata i32 %12, metadata !7354, metadata !DIExpression()), !dbg !7355
  %13 = icmp eq i32 %12, %2, !dbg !7356
  br i1 %13, label %14, label %5, !dbg !7359, !llvm.loop !7365

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !7367
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !793 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !991, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.value(metadata i32 %1, metadata !992, metadata !DIExpression()), !dbg !7368
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #14, !dbg !7369, !srcloc !7370
  call void @llvm.dbg.value(metadata i8* %3, metadata !994, metadata !DIExpression()), !dbg !7368
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !7371
  %5 = icmp eq i8* %4, null, !dbg !7373
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !7374
  call void @llvm.dbg.value(metadata i8* %6, metadata !993, metadata !DIExpression()), !dbg !7368
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !7375
  %8 = icmp ult i8* %3, %7, !dbg !7377
  %9 = xor i1 %8, true, !dbg !7378
  %10 = or i1 %5, %9, !dbg !7378
  br i1 %10, label %11, label %13, !dbg !7378

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !7379
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !7378
  br label %13, !dbg !7378

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !7379
  ret i8* %14, !dbg !7378
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @_exit(i32 noundef %0) local_unnamed_addr #12 !dbg !7380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7382, metadata !DIExpression()), !dbg !7383
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0)) #15, !dbg !7384
  br label %3, !dbg !7385

3:                                                ; preds = %1, %3
  br label %3, !dbg !7385, !llvm.loop !7386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7392, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.value(metadata i32 %1, metadata !7393, metadata !DIExpression()), !dbg !7394
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.113, i32 0, i32 0), i32 noundef %1) #15, !dbg !7395
  ret i32 -1, !dbg !7396
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_getpid() local_unnamed_addr #0 !dbg !7397 {
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.114, i32 0, i32 0)) #15, !dbg !7402
  ret i32 0, !dbg !7403
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree nosync nounwind willreturn }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { argmemonly nofree nounwind willreturn }
attributes #14 = { nounwind }
attributes #15 = { nobuiltin nounwind optsize "no-builtins" }
attributes #16 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #17 = { nobuiltin optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !83, !1011, !1020, !1101, !1146, !164, !183, !1180, !280, !292, !1183, !329, !412, !465, !1185, !1199, !560, !599, !707, !1270, !733, !986, !997}
!llvm.ident = !{!1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275, !1275}
!llvm.module.flags = !{!1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2, file: !3, line: 74, type: !69, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !50, globals: !63, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/flash_sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!4 = !{!5, !20, !28, !35, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 52, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/spi_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19}
!9 = !DIEnumerator(name: "SF_DRV_NOT_READY", value: -1)
!10 = !DIEnumerator(name: "SF_DRV_READY", value: 0)
!11 = !DIEnumerator(name: "SF_DRV_READING", value: 1)
!12 = !DIEnumerator(name: "SF_DRV_DIRECT_READING", value: 2)
!13 = !DIEnumerator(name: "SF_DRV_PROGRAMMING", value: 3)
!14 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE", value: 4)
!15 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE_CRC", value: 5)
!16 = !DIEnumerator(name: "SF_DRV_SECTOR_4K_ERASING", value: 6)
!17 = !DIEnumerator(name: "SF_DRV_SECTOR_32K_ERASING", value: 7)
!18 = !DIEnumerator(name: "SF_DRV_SECTOR_64K_ERASING", value: 8)
!19 = !DIEnumerator(name: "SF_DRV_CHIP_ERASING", value: 9)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 387, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!24 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!25 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!26 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!27 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 666, baseType: !30, size: 32, elements: !31)
!29 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!30 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!33 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!34 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_BUS", value: 2)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 73, baseType: !30, size: 32, elements: !36)
!36 = !{!37, !38, !39, !40, !41, !42, !43}
!37 = !DIEnumerator(name: "SF_TYPE_NONE", value: 0)
!38 = !DIEnumerator(name: "SF_TYPE_MXIC", value: 194)
!39 = !DIEnumerator(name: "SF_TYPE_WINBOND", value: 239)
!40 = !DIEnumerator(name: "SF_TYPE_GD", value: 200)
!41 = !DIEnumerator(name: "SF_TYPE_MICRON", value: 32)
!42 = !DIEnumerator(name: "SF_TYPE_CUSTOMER", value: 255)
!43 = !DIEnumerator(name: "SF_TYPE_COUNT", value: 65535)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 123, baseType: !30, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!48 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!49 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!50 = !{!51, !52, !59}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 32)
!53 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !54)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !55, line: 24, baseType: !56)
!55 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !57, line: 43, baseType: !58)
!57 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!58 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !55, line: 48, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !57, line: 79, baseType: !30)
!63 = !{!64, !0, !67, !70, !72, !74, !76, !78}
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(name: "sf_drvier_status", scope: !2, file: !3, line: 72, type: !66, isLocal: false, isDefinition: true)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_DRV_STATE", file: !6, line: 64, baseType: !5)
!67 = !DIGlobalVariableExpression(var: !68, expr: !DIExpression())
!68 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2, file: !3, line: 75, type: !69, isLocal: false, isDefinition: true)
!69 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!70 = !DIGlobalVariableExpression(var: !71, expr: !DIExpression())
!71 = distinct !DIGlobalVariable(name: "gucFlashSFCMode", scope: !2, file: !3, line: 77, type: !61, isLocal: false, isDefinition: true)
!72 = !DIGlobalVariableExpression(var: !73, expr: !DIExpression())
!73 = distinct !DIGlobalVariable(name: "suspend_time", scope: !2, file: !3, line: 82, type: !61, isLocal: false, isDefinition: true)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(name: "resume_suspend_on_ready", scope: !2, file: !3, line: 83, type: !61, isLocal: false, isDefinition: true)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(name: "resume_suspend_on_checkready", scope: !2, file: !3, line: 84, type: !61, isLocal: false, isDefinition: true)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "sf_Mutex", scope: !2, file: !3, line: 78, type: !7, isLocal: true, isDefinition: true)
!80 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression())
!82 = distinct !DIGlobalVariable(name: "g_u4ClkCnt1ms", scope: !83, file: !84, line: 71, type: !158, isLocal: false, isDefinition: true)
!83 = distinct !DICompileUnit(language: DW_LANG_C99, file: !84, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !85, retainedTypes: !136, globals: !141, splitDebugInlining: false, nameTableKind: None)
!84 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!85 = !{!86, !91}
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 121, baseType: !30, size: 32, elements: !88)
!87 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/type_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!88 = !{!89, !90}
!89 = !DIEnumerator(name: "KAL_FALSE", value: 0)
!90 = !DIEnumerator(name: "KAL_TRUE", value: 1)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !92, line: 47, baseType: !7, size: 32, elements: !93)
!92 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!93 = !{!94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!94 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!95 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!96 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!97 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!98 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!99 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!100 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!101 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!102 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!103 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!104 = !DIEnumerator(name: "CM4_UART1_IRQ", value: 0)
!105 = !DIEnumerator(name: "CM4_DMA_IRQ", value: 1)
!106 = !DIEnumerator(name: "CM4_HIF_IRQ", value: 2)
!107 = !DIEnumerator(name: "CM4_I2C1_IRQ", value: 3)
!108 = !DIEnumerator(name: "CM4_I2C2_IRQ", value: 4)
!109 = !DIEnumerator(name: "CM4_UART2_IRQ", value: 5)
!110 = !DIEnumerator(name: "CM4_MTK_CRYPTO_IRQ", value: 6)
!111 = !DIEnumerator(name: "CM4_SF_IRQ", value: 7)
!112 = !DIEnumerator(name: "CM4_EINT_IRQ", value: 8)
!113 = !DIEnumerator(name: "CM4_BTIF_IRQ", value: 9)
!114 = !DIEnumerator(name: "CM4_WDT_IRQ", value: 10)
!115 = !DIEnumerator(name: "CM4_AHB_MON_IRQ", value: 11)
!116 = !DIEnumerator(name: "CM4_SPI_SLAVE_IRQ", value: 12)
!117 = !DIEnumerator(name: "CM4_N9_WDT_IRQ", value: 13)
!118 = !DIEnumerator(name: "CM4_ADC_IRQ", value: 14)
!119 = !DIEnumerator(name: "CM4_IRDA_TX_IRQ", value: 15)
!120 = !DIEnumerator(name: "CM4_IRDA_RX_IRQ", value: 16)
!121 = !DIEnumerator(name: "CM4_USB_VBUS_ON_IRQ", value: 17)
!122 = !DIEnumerator(name: "CM4_USB_VBUS_OFF_IRQ", value: 18)
!123 = !DIEnumerator(name: "CM4_SPIS_CS_WAKEUP_IRQ", value: 19)
!124 = !DIEnumerator(name: "CM4_GPT3_IRQ", value: 20)
!125 = !DIEnumerator(name: "CM4_IRQ21_IRQ", value: 21)
!126 = !DIEnumerator(name: "CM4_AUDIO_IRQ", value: 22)
!127 = !DIEnumerator(name: "CM4_HIF_DMA_IRQ", value: 23)
!128 = !DIEnumerator(name: "CM4_GPT_IRQ", value: 24)
!129 = !DIEnumerator(name: "CM4_ADC_COMP_IRQ", value: 25)
!130 = !DIEnumerator(name: "CM4_AUDIO_WAKE_IRQ", value: 26)
!131 = !DIEnumerator(name: "CM4_SPIM_IRQ", value: 27)
!132 = !DIEnumerator(name: "CM4_USB_IRQ", value: 28)
!133 = !DIEnumerator(name: "CM4_UDMA_IRQ", value: 29)
!134 = !DIEnumerator(name: "CM4_TRNG_IRQ", value: 30)
!135 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 96)
!136 = !{!137, !140}
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !139)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint32", file: !87, line: 116, baseType: !30)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !92, line: 95, baseType: !91)
!141 = !{!81, !142}
!142 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression())
!143 = distinct !DIGlobalVariable(name: "GPTTimer", scope: !83, file: !84, line: 67, type: !144, isLocal: true, isDefinition: true)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPTStruct", file: !145, line: 111, baseType: !146)
!145 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 109, size: 96, elements: !147)
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_FUNC", scope: !146, file: !145, line: 110, baseType: !149, size: 96)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_func", file: !145, line: 106, baseType: !150)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 102, size: 96, elements: !151)
!151 = !{!152, !156, !157}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "gpt0_func", scope: !150, file: !145, line: 103, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DISubroutineType(types: !155)
!155 = !{null}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "gpt1_func", scope: !150, file: !145, line: 104, baseType: !153, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "gpt3_func", scope: !150, file: !145, line: 105, baseType: !153, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT32", file: !87, line: 62, baseType: !30)
!160 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 32))
!161 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "g_sfc_security_enable", scope: !164, file: !165, line: 58, type: !30, isLocal: false, isDefinition: true)
!164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !166, retainedTypes: !173, globals: !180, splitDebugInlining: false, nameTableKind: None)
!165 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!166 = !{!167}
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 45, baseType: !30, size: 32, elements: !168)
!168 = !{!169, !170, !171, !172}
!169 = !DIEnumerator(name: "SF_UNDEF", value: 0)
!170 = !DIEnumerator(name: "SPI", value: 1)
!171 = !DIEnumerator(name: "SPIQ", value: 2)
!172 = !DIEnumerator(name: "QPI", value: 3)
!173 = !{!137, !174, !30, !175, !177, !178}
!174 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !30)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !58)
!180 = !{!162}
!181 = !DIGlobalVariableExpression(var: !182, expr: !DIExpression())
!182 = distinct !DIGlobalVariable(name: "gSFC_max_data_size", scope: !183, file: !184, line: 67, type: !30, isLocal: false, isDefinition: true)
!183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !185, retainedTypes: !192, globals: !211, splitDebugInlining: false, nameTableKind: None)
!184 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/spi_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!185 = !{!35, !5, !167, !186}
!186 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 66, baseType: !7, size: 32, elements: !187)
!187 = !{!188, !189, !190, !191}
!188 = !DIEnumerator(name: "FLASH_NOT_READY", value: -1)
!189 = !DIEnumerator(name: "FLASH_READY", value: 0)
!190 = !DIEnumerator(name: "FLASH_PROGRAMMING", value: 1)
!191 = !DIEnumerator(name: "FLASH_ERASING", value: 2)
!192 = !{!193, !195, !196, !30, !51, !210, !61, !139}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !58)
!195 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chip_info", file: !6, line: 137, size: 192, elements: !199)
!199 = !{!200, !203, !204, !205, !206, !207, !208, !209}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !198, file: !6, line: 138, baseType: !201, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 32)
!202 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !198, file: !6, line: 139, baseType: !58, size: 8, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !198, file: !6, line: 140, baseType: !195, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !198, file: !6, line: 141, baseType: !195, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !198, file: !6, line: 142, baseType: !30, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !198, file: !6, line: 144, baseType: !58, size: 8, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !198, file: !6, line: 145, baseType: !58, size: 8, offset: 168)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !198, file: !6, line: 146, baseType: !58, size: 8, offset: 176)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 32)
!211 = !{!181, !212, !217, !222, !227, !230, !232, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !259, !264, !266, !268, !270, !273}
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_winbond", scope: !183, file: !184, line: 70, type: !214, isLocal: false, isDefinition: true)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 96, elements: !215)
!215 = !{!216}
!216 = !DISubrange(count: 12)
!217 = !DIGlobalVariableExpression(var: !218, expr: !DIExpression())
!218 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_winbond", scope: !183, file: !184, line: 73, type: !219, isLocal: false, isDefinition: true)
!219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 32, elements: !220)
!220 = !{!221}
!221 = !DISubrange(count: 4)
!222 = !DIGlobalVariableExpression(var: !223, expr: !DIExpression())
!223 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_winbond", scope: !183, file: !184, line: 76, type: !224, isLocal: false, isDefinition: true)
!224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 72, elements: !225)
!225 = !{!226}
!226 = !DISubrange(count: 9)
!227 = !DIGlobalVariableExpression(var: !228, expr: !DIExpression())
!228 = distinct !DIGlobalVariable(name: "cmdlist_suspend_winbond", scope: !183, file: !184, line: 79, type: !229, isLocal: false, isDefinition: true)
!229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32, elements: !220)
!230 = !DIGlobalVariableExpression(var: !231, expr: !DIExpression())
!231 = distinct !DIGlobalVariable(name: "cmdlist_resume_winbond", scope: !183, file: !184, line: 82, type: !229, isLocal: false, isDefinition: true)
!232 = !DIGlobalVariableExpression(var: !233, expr: !DIExpression())
!233 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_mxic", scope: !183, file: !184, line: 87, type: !234, isLocal: false, isDefinition: true)
!234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 64, elements: !235)
!235 = !{!236}
!236 = !DISubrange(count: 8)
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_mxic", scope: !183, file: !184, line: 91, type: !234, isLocal: false, isDefinition: true)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_mxic", scope: !183, file: !184, line: 95, type: !234, isLocal: false, isDefinition: true)
!241 = !DIGlobalVariableExpression(var: !242, expr: !DIExpression())
!242 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd", scope: !183, file: !184, line: 100, type: !224, isLocal: false, isDefinition: true)
!243 = !DIGlobalVariableExpression(var: !244, expr: !DIExpression())
!244 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd", scope: !183, file: !184, line: 104, type: !224, isLocal: false, isDefinition: true)
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd", scope: !183, file: !184, line: 108, type: !224, isLocal: false, isDefinition: true)
!247 = !DIGlobalVariableExpression(var: !248, expr: !DIExpression())
!248 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd25q32c", scope: !183, file: !184, line: 112, type: !234, isLocal: false, isDefinition: true)
!249 = !DIGlobalVariableExpression(var: !250, expr: !DIExpression())
!250 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd25q32c", scope: !183, file: !184, line: 115, type: !234, isLocal: false, isDefinition: true)
!251 = !DIGlobalVariableExpression(var: !252, expr: !DIExpression())
!252 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd25q32c", scope: !183, file: !184, line: 119, type: !234, isLocal: false, isDefinition: true)
!253 = !DIGlobalVariableExpression(var: !254, expr: !DIExpression())
!254 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_micron", scope: !183, file: !184, line: 123, type: !234, isLocal: false, isDefinition: true)
!255 = !DIGlobalVariableExpression(var: !256, expr: !DIExpression())
!256 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_micron", scope: !183, file: !184, line: 126, type: !234, isLocal: false, isDefinition: true)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_micron", scope: !183, file: !184, line: 130, type: !234, isLocal: false, isDefinition: true)
!259 = !DIGlobalVariableExpression(var: !260, expr: !DIExpression())
!260 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_spimode", scope: !183, file: !184, line: 135, type: !261, isLocal: false, isDefinition: true)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 56, elements: !262)
!262 = !{!263}
!263 = !DISubrange(count: 7)
!264 = !DIGlobalVariableExpression(var: !265, expr: !DIExpression())
!265 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_qpimode", scope: !183, file: !184, line: 138, type: !261, isLocal: false, isDefinition: true)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "spi_chip_info", scope: !183, file: !184, line: 142, type: !196, isLocal: false, isDefinition: true)
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "gd_write_sr2_1", scope: !183, file: !184, line: 161, type: !7, isLocal: false, isDefinition: true)
!270 = !DIGlobalVariableExpression(var: !271, expr: !DIExpression())
!271 = distinct !DIGlobalVariable(name: "support_flash_id", scope: !183, file: !184, line: 162, type: !272, isLocal: false, isDefinition: true)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_TYPT", file: !6, line: 81, baseType: !35)
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "chips_data", scope: !183, file: !184, line: 144, type: !275, isLocal: true, isDefinition: true)
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 2496, elements: !276)
!276 = !{!277}
!277 = !DISubrange(count: 13)
!278 = !DIGlobalVariableExpression(var: !279, expr: !DIExpression())
!279 = distinct !DIGlobalVariable(name: "gXtalFreq", scope: !280, file: !281, line: 43, type: !61, isLocal: true, isDefinition: true)
!280 = distinct !DICompileUnit(language: DW_LANG_C99, file: !281, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !282, globals: !287, splitDebugInlining: false, nameTableKind: None)
!281 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/top.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!282 = !{!175, !159, !59, !283, !284, !286}
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !286)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int32", file: !87, line: 133, baseType: !30)
!287 = !{!278, !288}
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "gCpuFrequency", scope: !280, file: !281, line: 44, type: !61, isLocal: true, isDefinition: true)
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "gUartClkFreq", scope: !292, file: !293, line: 54, type: !61, isLocal: false, isDefinition: true)
!292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !294, retainedTypes: !318, globals: !326, splitDebugInlining: false, nameTableKind: None)
!293 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!294 = !{!295, !301}
!295 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !296, line: 71, baseType: !30, size: 32, elements: !297)
!296 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!297 = !{!298, !299, !300}
!298 = !DIEnumerator(name: "UART_PORT0", value: 0)
!299 = !DIEnumerator(name: "UART_PORT1", value: 1)
!300 = !DIEnumerator(name: "UART_MAX_PORT", value: 2)
!301 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !302, line: 129, baseType: !30, size: 32, elements: !303)
!302 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/dma_sw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!303 = !{!304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317}
!304 = !DIEnumerator(name: "VDMA_I2S_TX_CH", value: 12)
!305 = !DIEnumerator(name: "VDMA_I2S_RX_CH", value: 13)
!306 = !DIEnumerator(name: "VDMA_UART1TX_CH", value: 14)
!307 = !DIEnumerator(name: "VDMA_UART1RX_CH", value: 15)
!308 = !DIEnumerator(name: "VDMA_UART2TX_CH", value: 16)
!309 = !DIEnumerator(name: "VDMA_UART2RX_CH", value: 17)
!310 = !DIEnumerator(name: "VDMA_BTIF_TX_CH", value: 18)
!311 = !DIEnumerator(name: "VDMA_BTIF_RX_CH", value: 19)
!312 = !DIEnumerator(name: "VDMA_USB_EP2O_CH", value: 20)
!313 = !DIEnumerator(name: "VDMA_USB_EP3I_CH", value: 21)
!314 = !DIEnumerator(name: "VDMA_USB_EP3O_CH", value: 22)
!315 = !DIEnumerator(name: "VDMA_USB_EP4I_CH", value: 23)
!316 = !DIEnumerator(name: "VDMA_USB_EP4O_CH", value: 24)
!317 = !DIEnumerator(name: "VDMA_ADC_RX_CH", value: 25)
!318 = !{!175, !61, !319, !321, !323, !324, !159}
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!320 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !321)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint16", file: !87, line: 113, baseType: !322)
!322 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT8", file: !87, line: 59, baseType: !58)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 32)
!325 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !323)
!326 = !{!290}
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !329, file: !330, line: 51, type: !409, isLocal: false, isDefinition: true)
!329 = distinct !DICompileUnit(language: DW_LANG_C99, file: !330, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !331, retainedTypes: !378, globals: !408, splitDebugInlining: false, nameTableKind: None)
!330 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!331 = !{!332, !343, !362, !369}
!332 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !333, line: 163, baseType: !7, size: 32, elements: !334)
!333 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!334 = !{!335, !336, !337, !338, !339, !340, !341, !342}
!335 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!336 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!337 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!338 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!339 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!340 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!341 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!342 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!343 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !333, line: 186, baseType: !30, size: 32, elements: !344)
!344 = !{!345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361}
!345 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!346 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!347 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!348 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!349 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!350 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!351 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!352 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!353 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!354 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!355 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!356 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!357 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!358 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!359 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!360 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!361 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!362 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !333, line: 176, baseType: !30, size: 32, elements: !363)
!363 = !{!364, !365, !366, !367, !368}
!364 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!365 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!366 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!367 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!368 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!369 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !370, line: 99, baseType: !30, size: 32, elements: !371)
!370 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!371 = !{!372, !373, !374, !375, !376, !377}
!372 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!373 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!374 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!375 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!376 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!377 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!378 = !{!379, !51}
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !381, line: 72, baseType: !382)
!381 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_hw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !381, line: 56, size: 525312, elements: !383)
!383 = !{!384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !398, !399, !403, !407}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !382, file: !381, line: 57, baseType: !60, size: 32)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !382, file: !381, line: 58, baseType: !60, size: 32, offset: 32)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !382, file: !381, line: 59, baseType: !60, size: 32, offset: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !382, file: !381, line: 60, baseType: !60, size: 32, offset: 96)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !382, file: !381, line: 61, baseType: !60, size: 32, offset: 128)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !382, file: !381, line: 62, baseType: !60, size: 32, offset: 160)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !382, file: !381, line: 63, baseType: !60, size: 32, offset: 192)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !382, file: !381, line: 64, baseType: !60, size: 32, offset: 224)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !382, file: !381, line: 65, baseType: !60, size: 32, offset: 256)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !382, file: !381, line: 66, baseType: !60, size: 32, offset: 288)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !382, file: !381, line: 67, baseType: !395, size: 32, offset: 320)
!395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !396)
!396 = !{!397}
!397 = !DISubrange(count: 1)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !382, file: !381, line: 68, baseType: !60, size: 32, offset: 352)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !382, file: !381, line: 69, baseType: !400, size: 523904, offset: 384)
!400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !401)
!401 = !{!402}
!402 = !DISubrange(count: 16372)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !382, file: !381, line: 70, baseType: !404, size: 512, offset: 524288)
!404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !405)
!405 = !{!406}
!406 = !DISubrange(count: 16)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !382, file: !381, line: 71, baseType: !404, size: 512, offset: 524800)
!408 = !{!327}
!409 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !69)
!410 = !DIGlobalVariableExpression(var: !411, expr: !DIExpression())
!411 = distinct !DIGlobalVariable(name: "g_cache_con", scope: !412, file: !413, line: 48, type: !447, isLocal: false, isDefinition: true)
!412 = distinct !DICompileUnit(language: DW_LANG_C99, file: !413, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !414, splitDebugInlining: false, nameTableKind: None)
!413 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!414 = !{!410, !415, !418}
!415 = !DIGlobalVariableExpression(var: !416, expr: !DIExpression())
!416 = distinct !DIGlobalVariable(name: "g_cache_region_en", scope: !412, file: !413, line: 49, type: !417, isLocal: false, isDefinition: true)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGION_EN_Type", file: !370, line: 66, baseType: !61)
!418 = !DIGlobalVariableExpression(var: !419, expr: !DIExpression())
!419 = distinct !DIGlobalVariable(name: "g_cache_entry", scope: !412, file: !413, line: 50, type: !420, isLocal: false, isDefinition: true)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 1024, elements: !405)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_Type", file: !370, line: 90, baseType: !422)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !370, line: 87, size: 64, elements: !423)
!423 = !{!424, !437}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "cache_entry_n", scope: !422, file: !370, line: 88, baseType: !425, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_N_Type", file: !370, line: 77, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !370, line: 68, size: 32, elements: !427)
!427 = !{!428, !436}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !426, file: !370, line: 75, baseType: !429, size: 32)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !426, file: !370, line: 69, size: 32, elements: !430)
!430 = !{!431, !432, !433, !434, !435}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !429, file: !370, line: 70, baseType: !61, size: 5, flags: DIFlagBitField, extraData: i64 0)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "ATTR", scope: !429, file: !370, line: 71, baseType: !61, size: 3, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !429, file: !370, line: 72, baseType: !61, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !429, file: !370, line: 73, baseType: !61, size: 3, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !429, file: !370, line: 74, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !426, file: !370, line: 76, baseType: !61, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "cache_end_entry_n", scope: !422, file: !370, line: 89, baseType: !438, size: 32, offset: 32)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_END_ENTRY_N_Type", file: !370, line: 85, baseType: !439)
!439 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !370, line: 79, size: 32, elements: !440)
!440 = !{!441, !446}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !439, file: !370, line: 83, baseType: !442, size: 32)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !439, file: !370, line: 80, size: 32, elements: !443)
!443 = !{!444, !445}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !442, file: !370, line: 81, baseType: !61, size: 12, flags: DIFlagBitField, extraData: i64 0)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !442, file: !370, line: 82, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !439, file: !370, line: 84, baseType: !61, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_CON_Type", file: !370, line: 64, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !370, line: 51, size: 32, elements: !449)
!449 = !{!450, !462}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !448, file: !370, line: 62, baseType: !451, size: 32)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !448, file: !370, line: 52, size: 32, elements: !452)
!452 = !{!453, !454, !455, !456, !457, !458, !459, !460, !461}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "MCEN", scope: !451, file: !370, line: 53, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "MPEN", scope: !451, file: !370, line: 54, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN0", scope: !451, file: !370, line: 55, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN1", scope: !451, file: !370, line: 56, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "MPDEFEN", scope: !451, file: !370, line: 57, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !451, file: !370, line: 58, baseType: !61, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "MDRF", scope: !451, file: !370, line: 59, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "CACHESIZE", scope: !451, file: !370, line: 60, baseType: !61, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !451, file: !370, line: 61, baseType: !61, size: 22, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !448, file: !370, line: 63, baseType: !61, size: 32)
!463 = !DIGlobalVariableExpression(var: !464, expr: !DIExpression())
!464 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !465, file: !466, line: 53, type: !547, isLocal: false, isDefinition: true)
!465 = distinct !DICompileUnit(language: DW_LANG_C99, file: !466, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !467, retainedTypes: !476, globals: !546, splitDebugInlining: false, nameTableKind: None)
!466 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!467 = !{!468, !91}
!468 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !469, line: 152, baseType: !7, size: 32, elements: !470)
!469 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!470 = !{!471, !472, !473, !474, !475}
!471 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!472 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!473 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!474 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!475 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!476 = !{!477, !51, !61, !478, !480, !511}
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !92, line: 97, baseType: !140)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !55, line: 44, baseType: !479)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !57, line: 77, baseType: !7)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 32)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !482, line: 378, baseType: !483)
!482 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 363, size: 28704, elements: !484)
!484 = !{!485, !487, !491, !492, !493, !494, !495, !496, !497, !498, !502, !506, !510}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !483, file: !482, line: 365, baseType: !486, size: 256)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !235)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !483, file: !482, line: 366, baseType: !488, size: 768, offset: 256)
!488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !489)
!489 = !{!490}
!490 = !DISubrange(count: 24)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !483, file: !482, line: 367, baseType: !486, size: 256, offset: 1024)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !483, file: !482, line: 368, baseType: !488, size: 768, offset: 1280)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !483, file: !482, line: 369, baseType: !486, size: 256, offset: 2048)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !483, file: !482, line: 370, baseType: !488, size: 768, offset: 2304)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !483, file: !482, line: 371, baseType: !486, size: 256, offset: 3072)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !483, file: !482, line: 372, baseType: !488, size: 768, offset: 3328)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !483, file: !482, line: 373, baseType: !486, size: 256, offset: 4096)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !483, file: !482, line: 374, baseType: !499, size: 1792, offset: 4352)
!499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !500)
!500 = !{!501}
!501 = !DISubrange(count: 56)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !483, file: !482, line: 375, baseType: !503, size: 1920, offset: 6144)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 1920, elements: !504)
!504 = !{!505}
!505 = !DISubrange(count: 240)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !483, file: !482, line: 376, baseType: !507, size: 20608, offset: 8064)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 644)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !483, file: !482, line: 377, baseType: !60, size: 32, offset: 28672)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !482, line: 418, baseType: !513)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 395, size: 1120, elements: !514)
!514 = !{!515, !517, !518, !519, !520, !521, !522, !524, !525, !526, !527, !528, !529, !530, !531, !535, !536, !537, !539, !543, !545}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !513, file: !482, line: 397, baseType: !516, size: 32)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !513, file: !482, line: 398, baseType: !60, size: 32, offset: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !513, file: !482, line: 399, baseType: !60, size: 32, offset: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !513, file: !482, line: 400, baseType: !60, size: 32, offset: 96)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !513, file: !482, line: 401, baseType: !60, size: 32, offset: 128)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !513, file: !482, line: 402, baseType: !60, size: 32, offset: 160)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !513, file: !482, line: 403, baseType: !523, size: 96, offset: 192)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 96, elements: !215)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !513, file: !482, line: 404, baseType: !60, size: 32, offset: 288)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !513, file: !482, line: 405, baseType: !60, size: 32, offset: 320)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !513, file: !482, line: 406, baseType: !60, size: 32, offset: 352)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !513, file: !482, line: 407, baseType: !60, size: 32, offset: 384)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !513, file: !482, line: 408, baseType: !60, size: 32, offset: 416)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !513, file: !482, line: 409, baseType: !60, size: 32, offset: 448)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !513, file: !482, line: 410, baseType: !60, size: 32, offset: 480)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !513, file: !482, line: 411, baseType: !532, size: 64, offset: 512)
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 64, elements: !533)
!533 = !{!534}
!534 = !DISubrange(count: 2)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !513, file: !482, line: 412, baseType: !516, size: 32, offset: 576)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !513, file: !482, line: 413, baseType: !516, size: 32, offset: 608)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !513, file: !482, line: 414, baseType: !538, size: 128, offset: 640)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 128, elements: !220)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !513, file: !482, line: 415, baseType: !540, size: 160, offset: 768)
!540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 160, elements: !541)
!541 = !{!542}
!542 = !DISubrange(count: 5)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !513, file: !482, line: 416, baseType: !544, size: 160, offset: 928)
!544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !541)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !513, file: !482, line: 417, baseType: !60, size: 32, offset: 1088)
!546 = !{!463}
!547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 6144, elements: !556)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !466, line: 50, baseType: !549)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !466, line: 47, size: 64, elements: !550)
!550 = !{!551, !555}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !549, file: !466, line: 48, baseType: !552, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 32)
!553 = !DISubroutineType(types: !554)
!554 = !{null, !477}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !549, file: !466, line: 49, baseType: !61, size: 32, offset: 32)
!556 = !{!557}
!557 = !DISubrange(count: 96)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !560, file: !561, line: 61, type: !580, isLocal: true, isDefinition: true)
!560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !561, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !562, retainedTypes: !578, globals: !579, splitDebugInlining: false, nameTableKind: None)
!561 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!562 = !{!20, !563, !570, !28, !574}
!563 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 657, baseType: !30, size: 32, elements: !564)
!564 = !{!565, !566, !567, !568, !569}
!565 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!566 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!567 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!568 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!569 = !DIEnumerator(name: "HAL_GPT_MAX", value: 5)
!570 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 397, baseType: !30, size: 32, elements: !571)
!571 = !{!572, !573}
!572 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!573 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!574 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 380, baseType: !30, size: 32, elements: !575)
!575 = !{!576, !577}
!576 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!577 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!578 = !{!51, !61}
!579 = !{!558}
!580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 640, elements: !541)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_context_t", file: !561, line: 55, baseType: !582)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !561, line: 51, size: 128, elements: !583)
!583 = !{!584, !586, !596}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !582, file: !561, line: 52, baseType: !585, size: 32)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !21, line: 400, baseType: !570)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !582, file: !561, line: 53, baseType: !587, size: 64, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_context", file: !561, line: 49, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !561, line: 46, size: 64, elements: !589)
!589 = !{!590, !595}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !588, file: !561, line: 47, baseType: !591, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !21, line: 371, baseType: !592)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 32)
!593 = !DISubroutineType(types: !594)
!594 = !{null, !51}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !588, file: !561, line: 48, baseType: !51, size: 32, offset: 32)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "has_initlized", scope: !582, file: !561, line: 54, baseType: !69, size: 8, offset: 96)
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(name: "g_uart_context_table", scope: !599, file: !600, line: 77, type: !664, isLocal: true, isDefinition: true)
!599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !600, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !601, retainedTypes: !651, globals: !652, splitDebugInlining: false, nameTableKind: None)
!600 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!601 = !{!602, !610, !615, !631, !637, !641, !295, !301, !646}
!602 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !603, line: 345, baseType: !7, size: 32, elements: !604)
!603 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!604 = !{!605, !606, !607, !608, !609}
!605 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!606 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!607 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!608 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!609 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!610 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 109, baseType: !30, size: 32, elements: !611)
!611 = !{!612, !613, !614}
!612 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!613 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!614 = !DIEnumerator(name: "HAL_UART_MAX", value: 2)
!615 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !603, line: 302, baseType: !30, size: 32, elements: !616)
!616 = !{!617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630}
!617 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!618 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!619 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!620 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!621 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!622 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!623 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!624 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!625 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!626 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!627 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!628 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!629 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!630 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!631 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !603, line: 321, baseType: !30, size: 32, elements: !632)
!632 = !{!633, !634, !635, !636}
!633 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!634 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!635 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!636 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!637 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !603, line: 330, baseType: !30, size: 32, elements: !638)
!638 = !{!639, !640}
!639 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!640 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!641 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !603, line: 337, baseType: !30, size: 32, elements: !642)
!642 = !{!643, !644, !645}
!643 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!644 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!645 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!646 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !603, line: 355, baseType: !7, size: 32, elements: !647)
!647 = !{!648, !649, !650}
!648 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!649 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!650 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!651 = !{!30, !51, !58, !202, !54}
!652 = !{!597, !653}
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "func_tbl", scope: !655, file: !600, line: 536, type: !662, isLocal: true, isDefinition: true)
!655 = distinct !DISubprogram(name: "hal_uart_map_receive_callback", scope: !600, file: !600, line: 534, type: !656, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !660)
!656 = !DISubroutineType(types: !657)
!657 = !{!658, !659}
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "VOID_FUNC", file: !302, line: 197, baseType: !153)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !29, line: 113, baseType: !610)
!660 = !{!661}
!661 = !DILocalVariable(name: "uart_port", arg: 1, scope: !655, file: !600, line: 534, type: !659)
!662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !663, size: 64, elements: !533)
!663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !658)
!664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 1024, elements: !533)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_context_t", file: !600, line: 75, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !600, line: 68, size: 512, elements: !667)
!667 = !{!668, !669, !681, !682, !693, !694}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config_present", scope: !666, file: !600, line: 69, baseType: !69, size: 8)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config", scope: !666, file: !600, line: 70, baseType: !670, size: 128, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !603, line: 378, baseType: !671)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !603, line: 373, size: 128, elements: !672)
!672 = !{!673, !675, !677, !679}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !671, file: !603, line: 374, baseType: !674, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !603, line: 317, baseType: !615)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !671, file: !603, line: 375, baseType: !676, size: 32, offset: 32)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !603, line: 326, baseType: !631)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !671, file: !603, line: 376, baseType: !678, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !603, line: 333, baseType: !637)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !671, file: !603, line: 377, baseType: !680, size: 32, offset: 96)
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !603, line: 341, baseType: !641)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "callback_present", scope: !666, file: !600, line: 71, baseType: !69, size: 8, offset: 160)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "callback_config", scope: !666, file: !600, line: 72, baseType: !683, size: 64, offset: 192)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_config_t", file: !600, line: 66, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !600, line: 63, size: 64, elements: !685)
!685 = !{!686, !692}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !684, file: !600, line: 64, baseType: !687, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !603, line: 410, baseType: !688)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 32)
!689 = !DISubroutineType(types: !690)
!690 = !{null, !691, !51}
!691 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !603, line: 359, baseType: !646)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !684, file: !600, line: 65, baseType: !51, size: 32, offset: 32)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config_present", scope: !666, file: !600, line: 73, baseType: !69, size: 8, offset: 256)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config", scope: !666, file: !600, line: 74, baseType: !695, size: 224, offset: 288)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !603, line: 390, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !603, line: 382, size: 224, elements: !697)
!697 = !{!698, !699, !700, !701, !702, !703, !704}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !696, file: !603, line: 383, baseType: !210, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !696, file: !603, line: 384, baseType: !61, size: 32, offset: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !696, file: !603, line: 385, baseType: !61, size: 32, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !696, file: !603, line: 386, baseType: !210, size: 32, offset: 96)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !696, file: !603, line: 387, baseType: !61, size: 32, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !696, file: !603, line: 388, baseType: !61, size: 32, offset: 160)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !696, file: !603, line: 389, baseType: !61, size: 32, offset: 192)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_default", scope: !707, file: !708, line: 164, type: !214, isLocal: false, isDefinition: true)
!707 = distinct !DICompileUnit(language: DW_LANG_C99, file: !708, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !709, globals: !724, splitDebugInlining: false, nameTableKind: None)
!708 = !DIFile(filename: "../../../../../driver/board/mt76x7_hdk/external_flash/src/bsp_flash_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!709 = !{!710, !51}
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !712)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "flash_info_t", file: !713, line: 48, baseType: !714)
!713 = !DIFile(filename: "../../../../../driver/board/mt76x7_hdk/external_flash/inc/bsp_flash_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !713, line: 38, size: 192, elements: !715)
!715 = !{!716, !717, !718, !719, !720, !721, !722, !723}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !714, file: !713, line: 39, baseType: !201, size: 32)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !714, file: !713, line: 40, baseType: !58, size: 8, offset: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !714, file: !713, line: 41, baseType: !195, size: 32, offset: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !714, file: !713, line: 42, baseType: !195, size: 32, offset: 96)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !714, file: !713, line: 43, baseType: !30, size: 32, offset: 128)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !714, file: !713, line: 45, baseType: !58, size: 8, offset: 160)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !714, file: !713, line: 46, baseType: !58, size: 8, offset: 168)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !714, file: !713, line: 47, baseType: !58, size: 8, offset: 176)
!724 = !{!705, !725, !727, !729}
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_default", scope: !707, file: !708, line: 167, type: !219, isLocal: false, isDefinition: true)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_default", scope: !707, file: !708, line: 170, type: !224, isLocal: false, isDefinition: true)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "customer_flash_info", scope: !707, file: !708, line: 174, type: !711, isLocal: false, isDefinition: true)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !733, file: !734, line: 59, type: !61, isLocal: false, isDefinition: true)
!733 = distinct !DICompileUnit(language: DW_LANG_C99, file: !734, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !735, globals: !788, splitDebugInlining: false, nameTableKind: None)
!734 = !DIFile(filename: "../../../../../project/mt7687_hdk/hal_examples/flash_read_write_data/src/system_mt7687.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!735 = !{!736, !744, !769}
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !482, line: 656, baseType: !738)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 650, size: 128, elements: !739)
!739 = !{!740, !741, !742, !743}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !738, file: !482, line: 652, baseType: !60, size: 32)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !738, file: !482, line: 653, baseType: !60, size: 32, offset: 32)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !738, file: !482, line: 654, baseType: !60, size: 32, offset: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !738, file: !482, line: 655, baseType: !516, size: 32, offset: 96)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !482, line: 418, baseType: !746)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 395, size: 1120, elements: !747)
!747 = !{!748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !746, file: !482, line: 397, baseType: !516, size: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !746, file: !482, line: 398, baseType: !60, size: 32, offset: 32)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !746, file: !482, line: 399, baseType: !60, size: 32, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !746, file: !482, line: 400, baseType: !60, size: 32, offset: 96)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !746, file: !482, line: 401, baseType: !60, size: 32, offset: 128)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !746, file: !482, line: 402, baseType: !60, size: 32, offset: 160)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !746, file: !482, line: 403, baseType: !523, size: 96, offset: 192)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !746, file: !482, line: 404, baseType: !60, size: 32, offset: 288)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !746, file: !482, line: 405, baseType: !60, size: 32, offset: 320)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !746, file: !482, line: 406, baseType: !60, size: 32, offset: 352)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !746, file: !482, line: 407, baseType: !60, size: 32, offset: 384)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !746, file: !482, line: 408, baseType: !60, size: 32, offset: 416)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !746, file: !482, line: 409, baseType: !60, size: 32, offset: 448)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !746, file: !482, line: 410, baseType: !60, size: 32, offset: 480)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !746, file: !482, line: 411, baseType: !532, size: 64, offset: 512)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !746, file: !482, line: 412, baseType: !516, size: 32, offset: 576)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !746, file: !482, line: 413, baseType: !516, size: 32, offset: 608)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !746, file: !482, line: 414, baseType: !538, size: 128, offset: 640)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !746, file: !482, line: 415, baseType: !540, size: 160, offset: 768)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !746, file: !482, line: 416, baseType: !544, size: 160, offset: 928)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !746, file: !482, line: 417, baseType: !60, size: 32, offset: 1088)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 32)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !381, line: 72, baseType: !771)
!771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !381, line: 56, size: 525312, elements: !772)
!772 = !{!773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787}
!773 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !771, file: !381, line: 57, baseType: !60, size: 32)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !771, file: !381, line: 58, baseType: !60, size: 32, offset: 32)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !771, file: !381, line: 59, baseType: !60, size: 32, offset: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !771, file: !381, line: 60, baseType: !60, size: 32, offset: 96)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !771, file: !381, line: 61, baseType: !60, size: 32, offset: 128)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !771, file: !381, line: 62, baseType: !60, size: 32, offset: 160)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !771, file: !381, line: 63, baseType: !60, size: 32, offset: 192)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !771, file: !381, line: 64, baseType: !60, size: 32, offset: 224)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !771, file: !381, line: 65, baseType: !60, size: 32, offset: 256)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !771, file: !381, line: 66, baseType: !60, size: 32, offset: 288)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !771, file: !381, line: 67, baseType: !395, size: 32, offset: 320)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !771, file: !381, line: 68, baseType: !60, size: 32, offset: 352)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !771, file: !381, line: 69, baseType: !400, size: 523904, offset: 384)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !771, file: !381, line: 70, baseType: !404, size: 512, offset: 524288)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !771, file: !381, line: 71, baseType: !404, size: 512, offset: 524800)
!788 = !{!731, !789}
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !733, file: !734, line: 61, type: !60, isLocal: true, isDefinition: true)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "heap_end", scope: !793, file: !794, line: 66, type: !201, isLocal: true, isDefinition: true)
!793 = distinct !DISubprogram(name: "_sbrk_r", scope: !794, file: !794, line: 63, type: !795, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !990)
!794 = !DIFile(filename: "../../../../../project/mt7687_hdk/hal_examples/flash_read_write_data/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!795 = !DISubroutineType(types: !796)
!796 = !{!797, !799, !985}
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !798, line: 123, baseType: !201)
!798 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !801, line: 377, size: 1920, elements: !802)
!801 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!802 = !{!803, !804, !875, !876, !877, !878, !879, !880, !881, !884, !904, !908, !909, !910, !911, !921, !934, !935, !940, !959, !960, !967, !968, !984}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !800, file: !801, line: 381, baseType: !7, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !800, file: !801, line: 386, baseType: !805, size: 32, offset: 32)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !801, line: 292, baseType: !807)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !801, line: 186, size: 832, elements: !808)
!808 = !{!809, !810, !811, !812, !814, !815, !820, !821, !822, !823, !827, !833, !839, !843, !844, !845, !846, !850, !852, !853, !854, !856, !862, !874}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !807, file: !801, line: 187, baseType: !177, size: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !807, file: !801, line: 188, baseType: !7, size: 32, offset: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !807, file: !801, line: 189, baseType: !7, size: 32, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !807, file: !801, line: 190, baseType: !813, size: 16, offset: 96)
!813 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !807, file: !801, line: 191, baseType: !813, size: 16, offset: 112)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !807, file: !801, line: 192, baseType: !816, size: 64, offset: 128)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !801, line: 122, size: 64, elements: !817)
!817 = !{!818, !819}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !816, file: !801, line: 123, baseType: !177, size: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !816, file: !801, line: 124, baseType: !7, size: 32, offset: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !807, file: !801, line: 193, baseType: !7, size: 32, offset: 192)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !807, file: !801, line: 196, baseType: !799, size: 32, offset: 224)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !807, file: !801, line: 200, baseType: !51, size: 32, offset: 256)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !807, file: !801, line: 202, baseType: !824, size: 32, offset: 288)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 32)
!825 = !DISubroutineType(types: !826)
!826 = !{!7, !799, !51, !201, !7}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !807, file: !801, line: 204, baseType: !828, size: 32, offset: 320)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = !DISubroutineType(types: !830)
!830 = !{!7, !799, !51, !831, !7}
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 32)
!832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !807, file: !801, line: 207, baseType: !834, size: 32, offset: 352)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 32)
!835 = !DISubroutineType(types: !836)
!836 = !{!837, !799, !51, !837, !7}
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !838, line: 116, baseType: !174)
!838 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!839 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !807, file: !801, line: 208, baseType: !840, size: 32, offset: 384)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = !DISubroutineType(types: !842)
!842 = !{!7, !799, !51}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !807, file: !801, line: 211, baseType: !816, size: 64, offset: 416)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !807, file: !801, line: 212, baseType: !177, size: 32, offset: 480)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !807, file: !801, line: 213, baseType: !7, size: 32, offset: 512)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !807, file: !801, line: 216, baseType: !847, size: 24, offset: 544)
!847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 24, elements: !848)
!848 = !{!849}
!849 = !DISubrange(count: 3)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !807, file: !801, line: 217, baseType: !851, size: 8, offset: 568)
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 8, elements: !396)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !807, file: !801, line: 220, baseType: !816, size: 64, offset: 576)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !807, file: !801, line: 223, baseType: !7, size: 32, offset: 640)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !807, file: !801, line: 224, baseType: !855, size: 32, offset: 672)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !838, line: 46, baseType: !174)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !807, file: !801, line: 231, baseType: !857, size: 32, offset: 704)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !801, line: 35, baseType: !858)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !859, line: 34, baseType: !860)
!859 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !859, line: 33, flags: DIFlagFwdDecl)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !807, file: !801, line: 233, baseType: !863, size: 64, offset: 736)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !838, line: 170, baseType: !864)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !838, line: 162, size: 64, elements: !865)
!865 = !{!866, !867}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !864, file: !838, line: 164, baseType: !7, size: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !864, file: !838, line: 169, baseType: !868, size: 32, offset: 32)
!868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !864, file: !838, line: 165, size: 32, elements: !869)
!869 = !{!870, !873}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !868, file: !838, line: 167, baseType: !871, size: 32)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !872, line: 116, baseType: !7)
!872 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!873 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !868, file: !838, line: 168, baseType: !229, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !807, file: !801, line: 234, baseType: !7, size: 32, offset: 800)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !800, file: !801, line: 386, baseType: !805, size: 32, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !800, file: !801, line: 386, baseType: !805, size: 32, offset: 96)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !800, file: !801, line: 388, baseType: !7, size: 32, offset: 128)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !800, file: !801, line: 390, baseType: !201, size: 32, offset: 160)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !800, file: !801, line: 392, baseType: !7, size: 32, offset: 192)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !800, file: !801, line: 394, baseType: !7, size: 32, offset: 224)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !800, file: !801, line: 395, baseType: !882, size: 32, offset: 256)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 32)
!883 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !801, line: 45, flags: DIFlagFwdDecl)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !800, file: !801, line: 397, baseType: !885, size: 32, offset: 288)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !801, line: 349, size: 128, elements: !887)
!887 = !{!888, !900, !901, !902}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !886, file: !801, line: 352, baseType: !889, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 32)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !801, line: 52, size: 192, elements: !891)
!891 = !{!892, !893, !894, !895, !896, !897}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !890, file: !801, line: 54, baseType: !889, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !890, file: !801, line: 55, baseType: !7, size: 32, offset: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !890, file: !801, line: 55, baseType: !7, size: 32, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !890, file: !801, line: 55, baseType: !7, size: 32, offset: 96)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !890, file: !801, line: 55, baseType: !7, size: 32, offset: 128)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !890, file: !801, line: 56, baseType: !898, size: 32, offset: 160)
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 32, elements: !396)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !801, line: 22, baseType: !195)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !886, file: !801, line: 353, baseType: !7, size: 32, offset: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !886, file: !801, line: 354, baseType: !889, size: 32, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !886, file: !801, line: 355, baseType: !903, size: 32, offset: 96)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !800, file: !801, line: 399, baseType: !905, size: 32, offset: 320)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{null, !799}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !800, file: !801, line: 401, baseType: !7, size: 32, offset: 352)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !800, file: !801, line: 404, baseType: !7, size: 32, offset: 384)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !800, file: !801, line: 405, baseType: !201, size: 32, offset: 416)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !800, file: !801, line: 407, baseType: !912, size: 32, offset: 448)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !801, line: 324, size: 192, elements: !914)
!914 = !{!915, !917, !918, !919}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !913, file: !801, line: 325, baseType: !916, size: 48)
!916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 48, elements: !848)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !913, file: !801, line: 326, baseType: !916, size: 48, offset: 48)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !913, file: !801, line: 327, baseType: !322, size: 16, offset: 96)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !913, file: !801, line: 330, baseType: !920, size: 64, offset: 128)
!920 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !800, file: !801, line: 408, baseType: !922, size: 32, offset: 480)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 32)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !801, line: 60, size: 288, elements: !924)
!924 = !{!925, !926, !927, !928, !929, !930, !931, !932, !933}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !923, file: !801, line: 62, baseType: !7, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !923, file: !801, line: 63, baseType: !7, size: 32, offset: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !923, file: !801, line: 64, baseType: !7, size: 32, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !923, file: !801, line: 65, baseType: !7, size: 32, offset: 96)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !923, file: !801, line: 66, baseType: !7, size: 32, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !923, file: !801, line: 67, baseType: !7, size: 32, offset: 160)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !923, file: !801, line: 68, baseType: !7, size: 32, offset: 192)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !923, file: !801, line: 69, baseType: !7, size: 32, offset: 224)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !923, file: !801, line: 70, baseType: !7, size: 32, offset: 256)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !800, file: !801, line: 409, baseType: !201, size: 32, offset: 512)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !800, file: !801, line: 412, baseType: !936, size: 32, offset: 544)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{null, !7}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !800, file: !801, line: 416, baseType: !941, size: 32, offset: 576)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !801, line: 90, size: 1120, elements: !943)
!943 = !{!944, !945, !946, !950}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !942, file: !801, line: 91, baseType: !941, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !942, file: !801, line: 92, baseType: !7, size: 32, offset: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !942, file: !801, line: 93, baseType: !947, size: 1024, offset: 64)
!947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 1024, elements: !948)
!948 = !{!949}
!949 = !DISubrange(count: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !942, file: !801, line: 94, baseType: !951, size: 32, offset: 1088)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !801, line: 79, size: 2112, elements: !953)
!953 = !{!954, !956, !957, !958}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !952, file: !801, line: 80, baseType: !955, size: 1024)
!955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !51, size: 1024, elements: !948)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !952, file: !801, line: 81, baseType: !955, size: 1024, offset: 1024)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !952, file: !801, line: 83, baseType: !899, size: 32, offset: 2048)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !952, file: !801, line: 86, baseType: !899, size: 32, offset: 2080)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !800, file: !801, line: 417, baseType: !942, size: 1120, offset: 608)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !800, file: !801, line: 420, baseType: !961, size: 96, offset: 1728)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !801, line: 296, size: 96, elements: !962)
!962 = !{!963, !965, !966}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !961, file: !801, line: 298, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !961, file: !801, line: 299, baseType: !7, size: 32, offset: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !961, file: !801, line: 300, baseType: !805, size: 32, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !800, file: !801, line: 421, baseType: !805, size: 32, offset: 1824)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !800, file: !801, line: 422, baseType: !969, size: 32, offset: 1856)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !801, line: 359, size: 640, elements: !971)
!971 = !{!972, !973, !974, !975, !976, !978, !979, !980, !981, !982, !983}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !970, file: !801, line: 362, baseType: !201, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !970, file: !801, line: 363, baseType: !863, size: 64, offset: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !970, file: !801, line: 364, baseType: !863, size: 64, offset: 96)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !970, file: !801, line: 365, baseType: !863, size: 64, offset: 160)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !970, file: !801, line: 366, baseType: !977, size: 64, offset: 224)
!977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 64, elements: !235)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !970, file: !801, line: 367, baseType: !7, size: 32, offset: 288)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !970, file: !801, line: 368, baseType: !863, size: 64, offset: 320)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !970, file: !801, line: 369, baseType: !863, size: 64, offset: 384)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !970, file: !801, line: 370, baseType: !863, size: 64, offset: 448)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !970, file: !801, line: 371, baseType: !863, size: 64, offset: 512)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !970, file: !801, line: 372, baseType: !863, size: 64, offset: 576)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !800, file: !801, line: 423, baseType: !201, size: 32, offset: 1888)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !872, line: 46, baseType: !30)
!986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !988, globals: !989, splitDebugInlining: false, nameTableKind: None)
!987 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!988 = !{!201, !797}
!989 = !{!791}
!990 = !{!991, !992, !993, !994}
!991 = !DILocalVariable(name: "r", arg: 1, scope: !793, file: !794, line: 63, type: !799)
!992 = !DILocalVariable(name: "nbytes", arg: 2, scope: !793, file: !794, line: 63, type: !985)
!993 = !DILocalVariable(name: "prev_heap_end", scope: !793, file: !794, line: 67, type: !201)
!994 = !DILocalVariable(name: "stack", scope: !793, file: !794, line: 68, type: !201)
!995 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression())
!996 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !997, file: !1002, line: 4, type: !1008, isLocal: false, isDefinition: true)
!997 = distinct !DICompileUnit(language: DW_LANG_C99, file: !998, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !999, splitDebugInlining: false, nameTableKind: None)
!998 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!999 = !{!995, !1000, !1006}
!1000 = !DIGlobalVariableExpression(var: !1001, expr: !DIExpression())
!1001 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !997, file: !1002, line: 5, type: !1003, isLocal: false, isDefinition: true)
!1002 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 88, elements: !1004)
!1004 = !{!1005}
!1005 = !DISubrange(count: 11)
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !997, file: !1002, line: 6, type: !1003, isLocal: false, isDefinition: true)
!1008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 248, elements: !1009)
!1009 = !{!1010}
!1010 = !DISubrange(count: 31)
!1011 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1012, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1013, retainedTypes: !1019, splitDebugInlining: false, nameTableKind: None)
!1012 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/hal_gpio_7687.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1013 = !{!1014}
!1014 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1015, line: 1209, baseType: !30, size: 32, elements: !1016)
!1015 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/hal_gpio_7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1016 = !{!1017, !1018}
!1017 = !DIEnumerator(name: "ePAD_CONTROL_BY_N9", value: 0)
!1018 = !DIEnumerator(name: "ePAD_CONTROL_BY_CM4", value: 1)
!1019 = !{!137, !139}
!1020 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1021, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1022, retainedTypes: !1100, splitDebugInlining: false, nameTableKind: None)
!1021 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/hal_pinmux.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1022 = !{!1023}
!1023 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1024, line: 150, baseType: !30, size: 32, elements: !1025)
!1024 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/hal_pinmux.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1025 = !{!1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099}
!1026 = !DIEnumerator(name: "ePAD_ANTSEL0", value: 0)
!1027 = !DIEnumerator(name: "ePAD_ANTSEL1", value: 1)
!1028 = !DIEnumerator(name: "ePAD_ANTSEL2", value: 2)
!1029 = !DIEnumerator(name: "ePAD_ANTSEL3", value: 3)
!1030 = !DIEnumerator(name: "ePAD_ANTSEL4", value: 4)
!1031 = !DIEnumerator(name: "ePAD_ANTSEL5", value: 5)
!1032 = !DIEnumerator(name: "ePAD_ANTSEL6", value: 6)
!1033 = !DIEnumerator(name: "ePAD_ANTSEL7", value: 7)
!1034 = !DIEnumerator(name: "ePAD_IN_GPIO8", value: 8)
!1035 = !DIEnumerator(name: "ePAD_IN_GPIO9", value: 9)
!1036 = !DIEnumerator(name: "ePAD_IN_GPIO10", value: 10)
!1037 = !DIEnumerator(name: "ePAD_IN_GPIO11", value: 11)
!1038 = !DIEnumerator(name: "ePAD_IN_GPIO12", value: 12)
!1039 = !DIEnumerator(name: "ePAD_IN_GPIO13", value: 13)
!1040 = !DIEnumerator(name: "ePAD_IN_GPIO14", value: 14)
!1041 = !DIEnumerator(name: "ePAD_IN_GPIO15", value: 15)
!1042 = !DIEnumerator(name: "ePAD_IN_GPIO16", value: 16)
!1043 = !DIEnumerator(name: "ePAD_IN_GPIO17", value: 17)
!1044 = !DIEnumerator(name: "ePAD_IN_GPIO18", value: 18)
!1045 = !DIEnumerator(name: "ePAD_IN_GPIO19", value: 19)
!1046 = !DIEnumerator(name: "ePAD_IN_GPIO20", value: 20)
!1047 = !DIEnumerator(name: "ePAD_IN_GPIO21", value: 21)
!1048 = !DIEnumerator(name: "ePAD_IN_GPIO22", value: 22)
!1049 = !DIEnumerator(name: "ePAD_IN_UART0_TXD", value: 23)
!1050 = !DIEnumerator(name: "ePAD_PERST_N", value: 24)
!1051 = !DIEnumerator(name: "ePAD_WAKE_N", value: 25)
!1052 = !DIEnumerator(name: "ePAD_CLK_REQ_N", value: 26)
!1053 = !DIEnumerator(name: "ePAD_SDIO_CLK", value: 27)
!1054 = !DIEnumerator(name: "ePAD_SDIO_CMD", value: 28)
!1055 = !DIEnumerator(name: "ePAD_SDIO_DAT3", value: 29)
!1056 = !DIEnumerator(name: "ePAD_SDIO_DAT2", value: 30)
!1057 = !DIEnumerator(name: "ePAD_SDIO_DAT1", value: 31)
!1058 = !DIEnumerator(name: "ePAD_SDIO_DAT0", value: 32)
!1059 = !DIEnumerator(name: "ePAD_GPIO0", value: 33)
!1060 = !DIEnumerator(name: "ePAD_GPIO1", value: 34)
!1061 = !DIEnumerator(name: "ePAD_UART_DBG", value: 35)
!1062 = !DIEnumerator(name: "ePAD_UART_RX", value: 36)
!1063 = !DIEnumerator(name: "ePAD_UART_TX", value: 37)
!1064 = !DIEnumerator(name: "ePAD_UART_RTS", value: 38)
!1065 = !DIEnumerator(name: "ePAD_UART_CTS", value: 39)
!1066 = !DIEnumerator(name: "ePAD_IN_GPIO44", value: 40)
!1067 = !DIEnumerator(name: "ePAD_IN_GPIO45", value: 41)
!1068 = !DIEnumerator(name: "ePAD_IN_GPIO46", value: 42)
!1069 = !DIEnumerator(name: "ePAD_IN_GPIO47", value: 43)
!1070 = !DIEnumerator(name: "ePAD_IN_GPIO48", value: 44)
!1071 = !DIEnumerator(name: "ePAD_IN_GPIO49", value: 45)
!1072 = !DIEnumerator(name: "ePAD_IN_GPIO50", value: 46)
!1073 = !DIEnumerator(name: "ePAD_IN_GPIO51", value: 47)
!1074 = !DIEnumerator(name: "ePAD_IN_GPIO52", value: 48)
!1075 = !DIEnumerator(name: "ePAD_IN_GPIO53", value: 49)
!1076 = !DIEnumerator(name: "ePAD_IN_GPIO54", value: 50)
!1077 = !DIEnumerator(name: "ePAD_IN_PWM2", value: 51)
!1078 = !DIEnumerator(name: "ePAD_IN_PWM3", value: 52)
!1079 = !DIEnumerator(name: "ePAD_IN_PWM4", value: 53)
!1080 = !DIEnumerator(name: "ePAD_IN_PWM5", value: 54)
!1081 = !DIEnumerator(name: "ePAD_IN_PWM6", value: 55)
!1082 = !DIEnumerator(name: "ePAD_IN_PWM7", value: 56)
!1083 = !DIEnumerator(name: "ePAD_WF_RF_DIS_B", value: 57)
!1084 = !DIEnumerator(name: "ePAD_BT_RF_DIS_B", value: 58)
!1085 = !DIEnumerator(name: "ePAD_WF_LED_B", value: 59)
!1086 = !DIEnumerator(name: "ePAD_BT_LED_B", value: 60)
!1087 = !DIEnumerator(name: "ePAD_IN_ADC4", value: 61)
!1088 = !DIEnumerator(name: "ePAD_IN_ADC5", value: 62)
!1089 = !DIEnumerator(name: "ePAD_IN_ADC6", value: 63)
!1090 = !DIEnumerator(name: "ePAD_IN_ADC7", value: 64)
!1091 = !DIEnumerator(name: "ePAD_IN_ADC8", value: 65)
!1092 = !DIEnumerator(name: "ePAD_IN_ADC9", value: 66)
!1093 = !DIEnumerator(name: "ePAD_IN_ADC10", value: 67)
!1094 = !DIEnumerator(name: "ePAD_IN_ADC11", value: 68)
!1095 = !DIEnumerator(name: "ePAD_IN_ADC12", value: 69)
!1096 = !DIEnumerator(name: "ePAD_IN_ADC13", value: 70)
!1097 = !DIEnumerator(name: "ePAD_IN_ADC14", value: 71)
!1098 = !DIEnumerator(name: "ePAD_IN_ADC15", value: 72)
!1099 = !DIEnumerator(name: "ePAD_NUM", value: 73)
!1100 = !{!137, !159}
!1101 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1102, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1103, splitDebugInlining: false, nameTableKind: None)
!1102 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1103 = !{!1104, !1129}
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !482, line: 418, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 395, size: 1120, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1106, file: !482, line: 397, baseType: !516, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1106, file: !482, line: 398, baseType: !60, size: 32, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1106, file: !482, line: 399, baseType: !60, size: 32, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1106, file: !482, line: 400, baseType: !60, size: 32, offset: 96)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1106, file: !482, line: 401, baseType: !60, size: 32, offset: 128)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1106, file: !482, line: 402, baseType: !60, size: 32, offset: 160)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1106, file: !482, line: 403, baseType: !523, size: 96, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1106, file: !482, line: 404, baseType: !60, size: 32, offset: 288)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1106, file: !482, line: 405, baseType: !60, size: 32, offset: 320)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1106, file: !482, line: 406, baseType: !60, size: 32, offset: 352)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1106, file: !482, line: 407, baseType: !60, size: 32, offset: 384)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1106, file: !482, line: 408, baseType: !60, size: 32, offset: 416)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1106, file: !482, line: 409, baseType: !60, size: 32, offset: 448)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1106, file: !482, line: 410, baseType: !60, size: 32, offset: 480)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1106, file: !482, line: 411, baseType: !532, size: 64, offset: 512)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1106, file: !482, line: 412, baseType: !516, size: 32, offset: 576)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1106, file: !482, line: 413, baseType: !516, size: 32, offset: 608)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1106, file: !482, line: 414, baseType: !538, size: 128, offset: 640)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1106, file: !482, line: 415, baseType: !540, size: 160, offset: 768)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1106, file: !482, line: 416, baseType: !544, size: 160, offset: 928)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1106, file: !482, line: 417, baseType: !60, size: 32, offset: 1088)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !482, line: 378, baseType: !1131)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 363, size: 28704, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1131, file: !482, line: 365, baseType: !486, size: 256)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1131, file: !482, line: 366, baseType: !488, size: 768, offset: 256)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1131, file: !482, line: 367, baseType: !486, size: 256, offset: 1024)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1131, file: !482, line: 368, baseType: !488, size: 768, offset: 1280)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1131, file: !482, line: 369, baseType: !486, size: 256, offset: 2048)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1131, file: !482, line: 370, baseType: !488, size: 768, offset: 2304)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1131, file: !482, line: 371, baseType: !486, size: 256, offset: 3072)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1131, file: !482, line: 372, baseType: !488, size: 768, offset: 3328)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1131, file: !482, line: 373, baseType: !486, size: 256, offset: 4096)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1131, file: !482, line: 374, baseType: !499, size: 1792, offset: 4352)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1131, file: !482, line: 375, baseType: !503, size: 1920, offset: 6144)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1131, file: !482, line: 376, baseType: !507, size: 20608, offset: 8064)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1131, file: !482, line: 377, baseType: !60, size: 32, offset: 28672)
!1146 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1147, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1148, splitDebugInlining: false, nameTableKind: None)
!1147 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/pinmux.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1148 = !{!1149, !1023}
!1149 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1150, line: 55, baseType: !30, size: 32, elements: !1151)
!1150 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/pinmux.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1151 = !{!1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179}
!1152 = !DIEnumerator(name: "eIOT_GPIO_IDX_0", value: 0)
!1153 = !DIEnumerator(name: "eIOT_GPIO_IDX_1", value: 1)
!1154 = !DIEnumerator(name: "eIOT_GPIO_IDX_2", value: 2)
!1155 = !DIEnumerator(name: "eIOT_GPIO_IDX_3", value: 3)
!1156 = !DIEnumerator(name: "eIOT_GPIO_IDX_4", value: 4)
!1157 = !DIEnumerator(name: "eIOT_GPIO_IDX_5", value: 5)
!1158 = !DIEnumerator(name: "eIOT_GPIO_IDX_6", value: 6)
!1159 = !DIEnumerator(name: "eIOT_GPIO_IDX_7", value: 7)
!1160 = !DIEnumerator(name: "eIOT_GPIO_IDX_24", value: 24)
!1161 = !DIEnumerator(name: "eIOT_GPIO_IDX_25", value: 25)
!1162 = !DIEnumerator(name: "eIOT_GPIO_IDX_26", value: 26)
!1163 = !DIEnumerator(name: "eIOT_GPIO_IDX_27", value: 27)
!1164 = !DIEnumerator(name: "eIOT_GPIO_IDX_28", value: 28)
!1165 = !DIEnumerator(name: "eIOT_GPIO_IDX_29", value: 29)
!1166 = !DIEnumerator(name: "eIOT_GPIO_IDX_30", value: 30)
!1167 = !DIEnumerator(name: "eIOT_GPIO_IDX_31", value: 31)
!1168 = !DIEnumerator(name: "eIOT_GPIO_IDX_32", value: 32)
!1169 = !DIEnumerator(name: "eIOT_GPIO_IDX_33", value: 33)
!1170 = !DIEnumerator(name: "eIOT_GPIO_IDX_34", value: 34)
!1171 = !DIEnumerator(name: "eIOT_GPIO_IDX_35", value: 35)
!1172 = !DIEnumerator(name: "eIOT_GPIO_IDX_36", value: 36)
!1173 = !DIEnumerator(name: "eIOT_GPIO_IDX_37", value: 37)
!1174 = !DIEnumerator(name: "eIOT_GPIO_IDX_38", value: 38)
!1175 = !DIEnumerator(name: "eIOT_GPIO_IDX_39", value: 39)
!1176 = !DIEnumerator(name: "eIOT_GPIO_IDX_57", value: 57)
!1177 = !DIEnumerator(name: "eIOT_GPIO_IDX_58", value: 58)
!1178 = !DIEnumerator(name: "eIOT_GPIO_IDX_59", value: 59)
!1179 = !DIEnumerator(name: "eIOT_GPIO_IDX_60", value: 60)
!1180 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1181, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1182, splitDebugInlining: false, nameTableKind: None)
!1181 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/timer.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1182 = !{!174, !137}
!1183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1184 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1186, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1187, retainedTypes: !1198, splitDebugInlining: false, nameTableKind: None)
!1186 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1187 = !{!1188, !44}
!1188 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 110, baseType: !7, size: 32, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197}
!1190 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1191 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1192 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1193 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1194 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1195 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1196 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1197 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1198 = !{!51}
!1199 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1200, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1201, retainedTypes: !1265, splitDebugInlining: false, nameTableKind: None)
!1200 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1201 = !{!1202, !1209, !1149, !1240, !1246, !1250, !1254, !1260}
!1202 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1203, line: 233, baseType: !7, size: 32, elements: !1204)
!1203 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1204 = !{!1205, !1206, !1207, !1208}
!1205 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!1206 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!1207 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!1208 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!1209 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 249, baseType: !30, size: 32, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239}
!1211 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!1212 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!1213 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!1214 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!1215 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!1216 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!1217 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!1218 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!1219 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!1220 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!1221 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!1222 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!1223 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!1224 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!1225 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!1226 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!1227 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!1228 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!1229 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!1230 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!1231 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!1232 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!1233 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!1234 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!1235 = !DIEnumerator(name: "HAL_GPIO_57", value: 57)
!1236 = !DIEnumerator(name: "HAL_GPIO_58", value: 58)
!1237 = !DIEnumerator(name: "HAL_GPIO_59", value: 59)
!1238 = !DIEnumerator(name: "HAL_GPIO_60", value: 60)
!1239 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 61)
!1240 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1203, line: 224, baseType: !7, size: 32, elements: !1241)
!1241 = !{!1242, !1243, !1244, !1245}
!1242 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!1243 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!1244 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!1245 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!1246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1203, line: 217, baseType: !30, size: 32, elements: !1247)
!1247 = !{!1248, !1249}
!1248 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!1249 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!1250 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1203, line: 210, baseType: !30, size: 32, elements: !1251)
!1251 = !{!1252, !1253}
!1252 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!1253 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!1254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1203, line: 242, baseType: !30, size: 32, elements: !1255)
!1255 = !{!1256, !1257, !1258, !1259}
!1256 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!1257 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!1258 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!1259 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!1260 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1261, line: 57, baseType: !30, size: 32, elements: !1262)
!1261 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/low_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1262 = !{!1263, !1264}
!1263 = !DIEnumerator(name: "eDirection_IN", value: 0)
!1264 = !DIEnumerator(name: "eDirection_OUT", value: 1)
!1265 = !{!1266, !51, !1267, !54, !1268, !1269}
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_IOT_GPIO_NAME_T", file: !1150, line: 87, baseType: !1149)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !1203, line: 220, baseType: !1246)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !1203, line: 247, baseType: !1254)
!1269 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_DIR_T", file: !1261, line: 60, baseType: !1260)
!1270 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1271, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1272, retainedTypes: !1273, splitDebugInlining: false, nameTableKind: None)
!1271 = !DIFile(filename: "../../../../../project/mt7687_hdk/hal_examples/flash_read_write_data/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!1272 = !{!610, !615, !631, !637, !641, !1209, !1188, !44}
!1273 = !{!1274, !210}
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !45, line: 127, baseType: !44)
!1275 = !{!"Ubuntu clang version 14.0.6"}
!1276 = !{i32 7, !"Dwarf Version", i32 2}
!1277 = !{i32 2, !"Debug Info Version", i32 3}
!1278 = !{i32 1, !"wchar_size", i32 4}
!1279 = !{i32 1, !"min_enum_size", i32 4}
!1280 = !{i32 1, !"branch-target-enforcement", i32 0}
!1281 = !{i32 1, !"sign-return-address", i32 0}
!1282 = !{i32 1, !"sign-return-address-all", i32 0}
!1283 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!1284 = !{i32 7, !"frame-pointer", i32 2}
!1285 = distinct !DISubprogram(name: "gpt_get_current_time", scope: !3, file: !3, line: 86, type: !1286, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1288)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!61}
!1288 = !{!1289, !1290}
!1289 = !DILocalVariable(name: "counter", scope: !1285, file: !3, line: 88, type: !61)
!1290 = !DILocalVariable(name: "ret", scope: !1285, file: !3, line: 89, type: !1291)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !21, line: 393, baseType: !20)
!1292 = !DILocation(line: 88, column: 5, scope: !1285)
!1293 = !DILocation(line: 0, scope: !1285)
!1294 = !DILocation(line: 88, column: 14, scope: !1285)
!1295 = !DILocation(line: 90, column: 11, scope: !1285)
!1296 = !DILocation(line: 91, column: 13, scope: !1297)
!1297 = distinct !DILexicalBlock(scope: !1285, file: !3, line: 91, column: 9)
!1298 = !DILocation(line: 91, column: 9, scope: !1285)
!1299 = !DILocation(line: 92, column: 9, scope: !1300)
!1300 = distinct !DILexicalBlock(scope: !1297, file: !3, line: 91, column: 35)
!1301 = !DILocation(line: 94, column: 12, scope: !1285)
!1302 = !DILocation(line: 95, column: 1, scope: !1285)
!1303 = !DILocation(line: 94, column: 5, scope: !1285)
!1304 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !3, file: !3, line: 97, type: !154, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1305)
!1305 = !{}
!1306 = !DILocation(line: 99, column: 20, scope: !1304)
!1307 = !DILocation(line: 100, column: 1, scope: !1304)
!1308 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !3, file: !3, line: 101, type: !154, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1305)
!1309 = !DILocation(line: 103, column: 20, scope: !1308)
!1310 = !DILocation(line: 104, column: 1, scope: !1308)
!1311 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !3, file: !3, line: 105, type: !154, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1305)
!1312 = !DILocation(line: 107, column: 25, scope: !1311)
!1313 = !DILocation(line: 108, column: 1, scope: !1311)
!1314 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !3, file: !3, line: 109, type: !154, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1305)
!1315 = !DILocation(line: 111, column: 25, scope: !1314)
!1316 = !DILocation(line: 112, column: 1, scope: !1314)
!1317 = distinct !DISubprogram(name: "get_sf_lock", scope: !3, file: !3, line: 114, type: !1318, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1320)
!1318 = !DISubroutineType(types: !1319)
!1319 = !{!478}
!1320 = !{!1321}
!1321 = !DILocalVariable(name: "savedMask", scope: !1317, file: !3, line: 116, type: !61)
!1322 = !DILocation(line: 117, column: 17, scope: !1317)
!1323 = !DILocation(line: 0, scope: !1317)
!1324 = !DILocation(line: 118, column: 9, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1317, file: !3, line: 118, column: 9)
!1326 = !DILocation(line: 118, column: 9, scope: !1317)
!1327 = !DILocation(line: 119, column: 17, scope: !1328)
!1328 = distinct !DILexicalBlock(scope: !1325, file: !3, line: 118, column: 24)
!1329 = !DILocation(line: 121, column: 9, scope: !1328)
!1330 = !DILocation(line: 0, scope: !1325)
!1331 = !DILocation(line: 130, column: 1, scope: !1317)
!1332 = distinct !DISubprogram(name: "free_sf_lock", scope: !3, file: !3, line: 132, type: !154, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1333)
!1333 = !{!1334}
!1334 = !DILocalVariable(name: "savedMask", scope: !1332, file: !3, line: 134, type: !61)
!1335 = !DILocation(line: 135, column: 17, scope: !1332)
!1336 = !DILocation(line: 0, scope: !1332)
!1337 = !DILocation(line: 136, column: 9, scope: !1338)
!1338 = distinct !DILexicalBlock(scope: !1332, file: !3, line: 136, column: 9)
!1339 = !DILocation(line: 136, column: 9, scope: !1332)
!1340 = !DILocation(line: 137, column: 17, scope: !1341)
!1341 = distinct !DILexicalBlock(scope: !1338, file: !3, line: 136, column: 24)
!1342 = !DILocation(line: 138, column: 9, scope: !1341)
!1343 = !DILocation(line: 143, column: 1, scope: !1332)
!1344 = !DILocation(line: 140, column: 9, scope: !1345)
!1345 = distinct !DILexicalBlock(scope: !1338, file: !3, line: 139, column: 12)
!1346 = !DILocation(line: 141, column: 9, scope: !1345)
!1347 = distinct !DISubprogram(name: "retrieve_sf_lock", scope: !3, file: !3, line: 145, type: !154, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1348)
!1348 = !{!1349}
!1349 = !DILocalVariable(name: "Result", scope: !1347, file: !3, line: 147, type: !478)
!1350 = !DILocation(line: 148, column: 5, scope: !1347)
!1351 = !DILocation(line: 149, column: 18, scope: !1352)
!1352 = distinct !DILexicalBlock(scope: !1347, file: !3, line: 148, column: 8)
!1353 = !DILocation(line: 0, scope: !1347)
!1354 = !DILocation(line: 150, column: 21, scope: !1347)
!1355 = !DILocation(line: 150, column: 5, scope: !1352)
!1356 = distinct !{!1356, !1350, !1357}
!1357 = !DILocation(line: 150, column: 25, scope: !1347)
!1358 = !DILocation(line: 151, column: 1, scope: !1347)
!1359 = distinct !DISubprogram(name: "release_sf_lock", scope: !3, file: !3, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1305)
!1360 = !DILocation(line: 160, column: 5, scope: !1359)
!1361 = !DILocation(line: 161, column: 1, scope: !1359)
!1362 = distinct !DISubprogram(name: "flash_sfc_config", scope: !3, file: !3, line: 186, type: !1363, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1365)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!478, !54}
!1365 = !{!1366, !1367}
!1366 = !DILocalVariable(name: "mode", arg: 1, scope: !1362, file: !3, line: 186, type: !54)
!1367 = !DILocalVariable(name: "ret", scope: !1362, file: !3, line: 188, type: !1368)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT32", file: !87, line: 56, baseType: !7)
!1369 = !DILocation(line: 0, scope: !1362)
!1370 = !DILocation(line: 189, column: 5, scope: !1362)
!1371 = !DILocation(line: 190, column: 5, scope: !1362)
!1372 = !DILocation(line: 191, column: 9, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1362, file: !3, line: 191, column: 9)
!1374 = !DILocation(line: 191, column: 35, scope: !1373)
!1375 = !DILocation(line: 191, column: 9, scope: !1362)
!1376 = !DILocation(line: 193, column: 26, scope: !1377)
!1377 = distinct !DILexicalBlock(scope: !1373, file: !3, line: 191, column: 44)
!1378 = !DILocation(line: 194, column: 5, scope: !1377)
!1379 = !DILocation(line: 195, column: 5, scope: !1362)
!1380 = !DILocation(line: 197, column: 5, scope: !1362)
!1381 = distinct !DISubprogram(name: "sfc_pad_config", scope: !3, file: !3, line: 163, type: !154, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1382)
!1382 = !{!1383}
!1383 = !DILocalVariable(name: "pad_io_setting", scope: !1381, file: !3, line: 166, type: !61)
!1384 = !DILocation(line: 0, scope: !1381)
!1385 = !DILocation(line: 168, column: 22, scope: !1381)
!1386 = !DILocation(line: 169, column: 20, scope: !1381)
!1387 = !DILocation(line: 170, column: 39, scope: !1381)
!1388 = !DILocation(line: 185, column: 1, scope: !1381)
!1389 = distinct !DISubprogram(name: "hal_flash_direct_read", scope: !3, file: !3, line: 200, type: !1390, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1392)
!1390 = !DISubroutineType(types: !1391)
!1391 = !{null, !51, !210, !61}
!1392 = !{!1393, !1394, !1395}
!1393 = !DILocalVariable(name: "absolute_address", arg: 1, scope: !1389, file: !3, line: 200, type: !51)
!1394 = !DILocalVariable(name: "buffer", arg: 2, scope: !1389, file: !3, line: 200, type: !210)
!1395 = !DILocalVariable(name: "length", arg: 3, scope: !1389, file: !3, line: 200, type: !61)
!1396 = !DILocation(line: 0, scope: !1389)
!1397 = !DILocation(line: 202, column: 5, scope: !1389)
!1398 = !DILocation(line: 203, column: 5, scope: !1389)
!1399 = !DILocation(line: 204, column: 5, scope: !1389)
!1400 = !DILocation(line: 205, column: 1, scope: !1389)
!1401 = distinct !DISubprogram(name: "flash_sfc_read", scope: !3, file: !3, line: 207, type: !1402, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1404)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{!478, !61, !61, !210}
!1404 = !{!1405, !1406, !1407, !1408, !1409, !1410}
!1405 = !DILocalVariable(name: "address", arg: 1, scope: !1401, file: !3, line: 207, type: !61)
!1406 = !DILocalVariable(name: "length", arg: 2, scope: !1401, file: !3, line: 207, type: !61)
!1407 = !DILocalVariable(name: "buffer", arg: 3, scope: !1401, file: !3, line: 207, type: !210)
!1408 = !DILocalVariable(name: "ret", scope: !1401, file: !3, line: 209, type: !1368)
!1409 = !DILocalVariable(name: "u4Redidual", scope: !1401, file: !3, line: 210, type: !159)
!1410 = !DILocalVariable(name: "u4ReadLen", scope: !1401, file: !3, line: 211, type: !159)
!1411 = !DILocation(line: 0, scope: !1401)
!1412 = !DILocation(line: 213, column: 5, scope: !1401)
!1413 = !DILocation(line: 214, column: 31, scope: !1401)
!1414 = !DILocation(line: 214, column: 5, scope: !1401)
!1415 = !DILocation(line: 216, column: 31, scope: !1416)
!1416 = distinct !DILexicalBlock(scope: !1417, file: !3, line: 216, column: 13)
!1417 = distinct !DILexicalBlock(scope: !1401, file: !3, line: 214, column: 46)
!1418 = !DILocation(line: 216, column: 13, scope: !1417)
!1419 = !DILocation(line: 217, column: 13, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1416, file: !3, line: 216, column: 48)
!1421 = !DILocation(line: 218, column: 9, scope: !1420)
!1422 = !DILocation(line: 219, column: 13, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1424, file: !3, line: 218, column: 55)
!1424 = distinct !DILexicalBlock(scope: !1416, file: !3, line: 218, column: 20)
!1425 = !DILocation(line: 220, column: 9, scope: !1423)
!1426 = !DILocation(line: 222, column: 25, scope: !1417)
!1427 = !DILocation(line: 223, column: 27, scope: !1417)
!1428 = !DILocation(line: 224, column: 33, scope: !1417)
!1429 = distinct !{!1429, !1414, !1430}
!1430 = !DILocation(line: 225, column: 5, scope: !1401)
!1431 = !DILocation(line: 227, column: 27, scope: !1432)
!1432 = distinct !DILexicalBlock(scope: !1401, file: !3, line: 227, column: 9)
!1433 = !DILocation(line: 227, column: 9, scope: !1401)
!1434 = !DILocation(line: 228, column: 9, scope: !1435)
!1435 = distinct !DILexicalBlock(scope: !1432, file: !3, line: 227, column: 44)
!1436 = !DILocation(line: 229, column: 5, scope: !1435)
!1437 = !DILocation(line: 230, column: 9, scope: !1438)
!1438 = distinct !DILexicalBlock(scope: !1439, file: !3, line: 229, column: 51)
!1439 = distinct !DILexicalBlock(scope: !1432, file: !3, line: 229, column: 16)
!1440 = !DILocation(line: 231, column: 5, scope: !1438)
!1441 = !DILocation(line: 232, column: 22, scope: !1401)
!1442 = !DILocation(line: 233, column: 5, scope: !1401)
!1443 = !DILocation(line: 234, column: 5, scope: !1401)
!1444 = distinct !DISubprogram(name: "flash_sfc_write", scope: !3, file: !3, line: 238, type: !1445, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1449)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!478, !61, !61, !1447}
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 32)
!1448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !54)
!1449 = !{!1450, !1451, !1452, !1453}
!1450 = !DILocalVariable(name: "address", arg: 1, scope: !1444, file: !3, line: 238, type: !61)
!1451 = !DILocalVariable(name: "length", arg: 2, scope: !1444, file: !3, line: 238, type: !61)
!1452 = !DILocalVariable(name: "buffer", arg: 3, scope: !1444, file: !3, line: 238, type: !1447)
!1453 = !DILocalVariable(name: "ret", scope: !1444, file: !3, line: 240, type: !1368)
!1454 = !DILocation(line: 0, scope: !1444)
!1455 = !DILocation(line: 242, column: 5, scope: !1444)
!1456 = !DILocation(line: 244, column: 5, scope: !1444)
!1457 = !DILocation(line: 245, column: 5, scope: !1444)
!1458 = !DILocation(line: 247, column: 11, scope: !1444)
!1459 = !DILocation(line: 248, column: 22, scope: !1444)
!1460 = !DILocation(line: 250, column: 5, scope: !1444)
!1461 = !DILocation(line: 252, column: 5, scope: !1444)
!1462 = !DILocation(line: 253, column: 5, scope: !1444)
!1463 = distinct !DISubprogram(name: "flash_sfc_erase", scope: !3, file: !3, line: 256, type: !1464, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1466)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!478, !61, !61}
!1466 = !{!1467, !1468, !1469}
!1467 = !DILocalVariable(name: "address", arg: 1, scope: !1463, file: !3, line: 256, type: !61)
!1468 = !DILocalVariable(name: "type", arg: 2, scope: !1463, file: !3, line: 256, type: !61)
!1469 = !DILocalVariable(name: "ret", scope: !1463, file: !3, line: 258, type: !1368)
!1470 = !DILocation(line: 0, scope: !1463)
!1471 = !DILocation(line: 259, column: 5, scope: !1463)
!1472 = !DILocation(line: 261, column: 5, scope: !1463)
!1473 = !DILocation(line: 262, column: 5, scope: !1463)
!1474 = !DILocation(line: 264, column: 5, scope: !1463)
!1475 = !DILocation(line: 265, column: 5, scope: !1463)
!1476 = !DILocation(line: 267, column: 9, scope: !1463)
!1477 = !DILocation(line: 268, column: 22, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1479, file: !3, line: 268, column: 13)
!1479 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 267, column: 37)
!1480 = distinct !DILexicalBlock(scope: !1463, file: !3, line: 267, column: 9)
!1481 = !DILocation(line: 268, column: 31, scope: !1478)
!1482 = !DILocation(line: 268, column: 13, scope: !1479)
!1483 = !DILocation(line: 275, column: 15, scope: !1479)
!1484 = !DILocation(line: 276, column: 5, scope: !1479)
!1485 = !DILocation(line: 277, column: 22, scope: !1486)
!1486 = distinct !DILexicalBlock(scope: !1487, file: !3, line: 277, column: 13)
!1487 = distinct !DILexicalBlock(scope: !1488, file: !3, line: 276, column: 45)
!1488 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 276, column: 16)
!1489 = !DILocation(line: 277, column: 32, scope: !1486)
!1490 = !DILocation(line: 277, column: 13, scope: !1487)
!1491 = !DILocation(line: 284, column: 15, scope: !1487)
!1492 = !DILocation(line: 285, column: 5, scope: !1487)
!1493 = !DILocation(line: 286, column: 22, scope: !1494)
!1494 = distinct !DILexicalBlock(scope: !1495, file: !3, line: 286, column: 13)
!1495 = distinct !DILexicalBlock(scope: !1496, file: !3, line: 285, column: 45)
!1496 = distinct !DILexicalBlock(scope: !1488, file: !3, line: 285, column: 16)
!1497 = !DILocation(line: 286, column: 32, scope: !1494)
!1498 = !DILocation(line: 286, column: 13, scope: !1495)
!1499 = !DILocation(line: 293, column: 15, scope: !1495)
!1500 = !DILocation(line: 294, column: 5, scope: !1495)
!1501 = !DILocation(line: 301, column: 1, scope: !1463)
!1502 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !3, file: !3, line: 304, type: !154, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1503)
!1503 = !{!1504, !1505}
!1504 = !DILocalVariable(name: "sr", scope: !1502, file: !3, line: 306, type: !54)
!1505 = !DILocalVariable(name: "savedMask", scope: !1502, file: !3, line: 307, type: !61)
!1506 = !DILocation(line: 306, column: 5, scope: !1502)
!1507 = !DILocation(line: 0, scope: !1502)
!1508 = !DILocation(line: 306, column: 13, scope: !1502)
!1509 = !DILocation(line: 329, column: 17, scope: !1502)
!1510 = !DILocation(line: 330, column: 11, scope: !1511)
!1511 = distinct !DILexicalBlock(scope: !1502, file: !3, line: 330, column: 9)
!1512 = !{i8 0, i8 2}
!1513 = !DILocation(line: 330, column: 30, scope: !1511)
!1514 = !DILocation(line: 331, column: 13, scope: !1515)
!1515 = distinct !DILexicalBlock(scope: !1516, file: !3, line: 331, column: 13)
!1516 = distinct !DILexicalBlock(scope: !1511, file: !3, line: 330, column: 53)
!1517 = !DILocation(line: 331, column: 32, scope: !1515)
!1518 = !DILocation(line: 331, column: 13, scope: !1516)
!1519 = !DILocation(line: 333, column: 13, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1515, file: !3, line: 331, column: 37)
!1521 = !DILocation(line: 337, column: 19, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1516, file: !3, line: 337, column: 13)
!1523 = !DILocation(line: 337, column: 22, scope: !1522)
!1524 = !DILocation(line: 337, column: 15, scope: !1522)
!1525 = !DILocation(line: 337, column: 13, scope: !1516)
!1526 = !DILocation(line: 339, column: 13, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1522, file: !3, line: 337, column: 44)
!1528 = !DILocation(line: 341, column: 13, scope: !1527)
!1529 = !DILocation(line: 342, column: 21, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1531, file: !3, line: 342, column: 21)
!1531 = distinct !DILexicalBlock(scope: !1527, file: !3, line: 341, column: 23)
!1532 = !DILocation(line: 342, column: 40, scope: !1530)
!1533 = !DILocation(line: 342, column: 21, scope: !1531)
!1534 = !DILocation(line: 344, column: 21, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1530, file: !3, line: 342, column: 45)
!1536 = !DILocation(line: 346, column: 27, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !1531, file: !3, line: 346, column: 21)
!1538 = !DILocation(line: 346, column: 30, scope: !1537)
!1539 = !DILocation(line: 346, column: 23, scope: !1537)
!1540 = !DILocation(line: 346, column: 21, scope: !1531)
!1541 = distinct !{!1541, !1528, !1542}
!1542 = !DILocation(line: 349, column: 13, scope: !1527)
!1543 = !DILocation(line: 350, column: 13, scope: !1527)
!1544 = !DILocation(line: 352, column: 9, scope: !1527)
!1545 = !DILocation(line: 353, column: 13, scope: !1546)
!1546 = distinct !DILexicalBlock(scope: !1522, file: !3, line: 352, column: 16)
!1547 = !DILocation(line: 356, column: 5, scope: !1502)
!1548 = !DILocation(line: 357, column: 1, scope: !1502)
!1549 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !3, file: !3, line: 359, type: !1550, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1552)
!1550 = !DISubroutineType(types: !1551)
!1551 = !{!478, !51, !61}
!1552 = !{!1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561}
!1553 = !DILocalVariable(name: "MTDData", arg: 1, scope: !1549, file: !3, line: 359, type: !51)
!1554 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !1549, file: !3, line: 359, type: !61)
!1555 = !DILocalVariable(name: "result", scope: !1549, file: !3, line: 361, type: !478)
!1556 = !DILocalVariable(name: "savedMask", scope: !1549, file: !3, line: 362, type: !61)
!1557 = !DILocalVariable(name: "status_busy", scope: !1549, file: !3, line: 363, type: !54)
!1558 = !DILocalVariable(name: "status_suspend", scope: !1549, file: !3, line: 363, type: !54)
!1559 = !DILocalVariable(name: "sr", scope: !1549, file: !3, line: 364, type: !54)
!1560 = !DILocalVariable(name: "sr1", scope: !1549, file: !3, line: 365, type: !54)
!1561 = !DILocalVariable(name: "check_status", scope: !1562, file: !3, line: 383, type: !54)
!1562 = distinct !DILexicalBlock(scope: !1563, file: !3, line: 382, column: 49)
!1563 = distinct !DILexicalBlock(scope: !1549, file: !3, line: 382, column: 9)
!1564 = !DILocation(line: 0, scope: !1549)
!1565 = !DILocation(line: 364, column: 5, scope: !1549)
!1566 = !DILocation(line: 364, column: 13, scope: !1549)
!1567 = !DILocation(line: 365, column: 5, scope: !1549)
!1568 = !DILocation(line: 365, column: 13, scope: !1549)
!1569 = !DILocation(line: 367, column: 9, scope: !1570)
!1570 = distinct !DILexicalBlock(scope: !1549, file: !3, line: 367, column: 9)
!1571 = !DILocation(line: 367, column: 28, scope: !1570)
!1572 = !DILocation(line: 367, column: 9, scope: !1549)
!1573 = !DILocation(line: 368, column: 9, scope: !1574)
!1574 = distinct !DILexicalBlock(scope: !1570, file: !3, line: 367, column: 33)
!1575 = !DILocation(line: 370, column: 23, scope: !1576)
!1576 = distinct !DILexicalBlock(scope: !1570, file: !3, line: 369, column: 12)
!1577 = !DILocation(line: 373, column: 9, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !1549, file: !3, line: 373, column: 9)
!1579 = !DILocation(line: 373, column: 30, scope: !1578)
!1580 = !DILocation(line: 373, column: 9, scope: !1549)
!1581 = !DILocation(line: 374, column: 9, scope: !1582)
!1582 = distinct !DILexicalBlock(scope: !1578, file: !3, line: 373, column: 35)
!1583 = !DILocation(line: 376, column: 26, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1578, file: !3, line: 375, column: 12)
!1585 = !DILocation(line: 380, column: 17, scope: !1549)
!1586 = !DILocation(line: 382, column: 27, scope: !1563)
!1587 = !DILocation(line: 382, column: 11, scope: !1563)
!1588 = !DILocation(line: 382, column: 9, scope: !1549)
!1589 = !DILocation(line: 0, scope: !1562)
!1590 = !DILocation(line: 385, column: 13, scope: !1591)
!1591 = distinct !DILexicalBlock(scope: !1562, file: !3, line: 385, column: 13)
!1592 = !DILocation(line: 385, column: 49, scope: !1591)
!1593 = !DILocation(line: 388, column: 17, scope: !1594)
!1594 = distinct !DILexicalBlock(scope: !1595, file: !3, line: 388, column: 17)
!1595 = distinct !DILexicalBlock(scope: !1591, file: !3, line: 385, column: 84)
!1596 = !DILocation(line: 388, column: 32, scope: !1594)
!1597 = !DILocation(line: 388, column: 17, scope: !1595)
!1598 = !DILocation(line: 399, column: 9, scope: !1599)
!1599 = distinct !DILexicalBlock(scope: !1600, file: !3, line: 396, column: 56)
!1600 = distinct !DILexicalBlock(scope: !1601, file: !3, line: 396, column: 20)
!1601 = distinct !DILexicalBlock(scope: !1591, file: !3, line: 393, column: 20)
!1602 = !DILocation(line: 401, column: 28, scope: !1603)
!1603 = distinct !DILexicalBlock(scope: !1604, file: !3, line: 399, column: 58)
!1604 = distinct !DILexicalBlock(scope: !1600, file: !3, line: 399, column: 20)
!1605 = !DILocation(line: 402, column: 9, scope: !1603)
!1606 = !DILocation(line: 405, column: 20, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !1562, file: !3, line: 405, column: 13)
!1608 = !DILocation(line: 405, column: 35, scope: !1607)
!1609 = !DILocation(line: 405, column: 16, scope: !1607)
!1610 = !DILocation(line: 405, column: 52, scope: !1607)
!1611 = !DILocation(line: 406, column: 21, scope: !1607)
!1612 = !DILocation(line: 406, column: 38, scope: !1607)
!1613 = !DILocation(line: 407, column: 13, scope: !1614)
!1614 = distinct !DILexicalBlock(scope: !1607, file: !3, line: 406, column: 61)
!1615 = !DILocation(line: 410, column: 13, scope: !1614)
!1616 = !DILocation(line: 413, column: 9, scope: !1614)
!1617 = !DILocation(line: 414, column: 13, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1607, file: !3, line: 413, column: 16)
!1619 = !DILocation(line: 0, scope: !1607)
!1620 = !DILocation(line: 434, column: 5, scope: !1549)
!1621 = !DILocation(line: 0, scope: !1563)
!1622 = !DILocation(line: 436, column: 1, scope: !1549)
!1623 = !DILocation(line: 435, column: 5, scope: !1549)
!1624 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !3, file: !3, line: 439, type: !1625, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1627)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!478, !51, !61, !54}
!1627 = !{!1628, !1629, !1630, !1631, !1632, !1633, !1634, !1637}
!1628 = !DILocalVariable(name: "MTDData", arg: 1, scope: !1624, file: !3, line: 439, type: !51)
!1629 = !DILocalVariable(name: "addr", arg: 2, scope: !1624, file: !3, line: 439, type: !61)
!1630 = !DILocalVariable(name: "data", arg: 3, scope: !1624, file: !3, line: 439, type: !54)
!1631 = !DILocalVariable(name: "savedMask", scope: !1624, file: !3, line: 441, type: !61)
!1632 = !DILocalVariable(name: "result", scope: !1624, file: !3, line: 442, type: !478)
!1633 = !DILocalVariable(name: "check_data", scope: !1624, file: !3, line: 443, type: !54)
!1634 = !DILocalVariable(name: "status_busy", scope: !1624, file: !3, line: 444, type: !1635)
!1635 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !55, line: 36, baseType: !1636)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !57, line: 57, baseType: !322)
!1637 = !DILocalVariable(name: "sr", scope: !1624, file: !3, line: 445, type: !54)
!1638 = !DILocation(line: 0, scope: !1624)
!1639 = !DILocation(line: 445, column: 5, scope: !1624)
!1640 = !DILocation(line: 445, column: 23, scope: !1624)
!1641 = !DILocation(line: 448, column: 9, scope: !1642)
!1642 = distinct !DILexicalBlock(scope: !1624, file: !3, line: 448, column: 9)
!1643 = !DILocation(line: 448, column: 28, scope: !1642)
!1644 = !DILocation(line: 448, column: 9, scope: !1624)
!1645 = !DILocation(line: 449, column: 9, scope: !1646)
!1646 = distinct !DILexicalBlock(scope: !1642, file: !3, line: 448, column: 33)
!1647 = !DILocation(line: 451, column: 23, scope: !1648)
!1648 = distinct !DILexicalBlock(scope: !1642, file: !3, line: 450, column: 12)
!1649 = !DILocation(line: 454, column: 17, scope: !1624)
!1650 = !DILocation(line: 457, column: 9, scope: !1651)
!1651 = distinct !DILexicalBlock(scope: !1624, file: !3, line: 457, column: 9)
!1652 = !DILocation(line: 457, column: 9, scope: !1624)
!1653 = !DILocation(line: 458, column: 9, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !1651, file: !3, line: 457, column: 28)
!1655 = !DILocation(line: 459, column: 9, scope: !1654)
!1656 = !DILocation(line: 460, column: 9, scope: !1654)
!1657 = !DILocation(line: 461, column: 9, scope: !1654)
!1658 = !DILocation(line: 462, column: 5, scope: !1654)
!1659 = !DILocation(line: 464, column: 33, scope: !1660)
!1660 = distinct !DILexicalBlock(scope: !1651, file: !3, line: 464, column: 15)
!1661 = !DILocation(line: 464, column: 17, scope: !1660)
!1662 = !DILocation(line: 464, column: 15, scope: !1651)
!1663 = !DILocation(line: 465, column: 9, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1660, file: !3, line: 464, column: 55)
!1665 = !DILocation(line: 467, column: 23, scope: !1664)
!1666 = !DILocation(line: 467, column: 22, scope: !1664)
!1667 = !DILocation(line: 468, column: 24, scope: !1668)
!1668 = distinct !DILexicalBlock(scope: !1664, file: !3, line: 468, column: 13)
!1669 = !DILocation(line: 474, column: 5, scope: !1624)
!1670 = !DILocation(line: 477, column: 1, scope: !1624)
!1671 = !DILocation(line: 476, column: 5, scope: !1624)
!1672 = distinct !DISubprogram(name: "GPT_ResetTimer", scope: !84, file: !84, line: 73, type: !1673, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1675)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{null, !139, !139, !69}
!1675 = !{!1676, !1677, !1678}
!1676 = !DILocalVariable(name: "timerNum", arg: 1, scope: !1672, file: !84, line: 73, type: !139)
!1677 = !DILocalVariable(name: "countValue", arg: 2, scope: !1672, file: !84, line: 73, type: !139)
!1678 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !1672, file: !84, line: 73, type: !69)
!1679 = !DILocation(line: 0, scope: !1672)
!1680 = !DILocation(line: 75, column: 5, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1672, file: !84, line: 75, column: 5)
!1682 = !DILocation(line: 75, column: 5, scope: !1672)
!1683 = !DILocation(line: 75, column: 5, scope: !1684)
!1684 = distinct !DILexicalBlock(scope: !1681, file: !84, line: 75, column: 5)
!1685 = distinct !{!1685, !1683, !1683}
!1686 = !DILocation(line: 77, column: 9, scope: !1672)
!1687 = !DILocation(line: 78, column: 30, scope: !1688)
!1688 = distinct !DILexicalBlock(scope: !1689, file: !84, line: 77, column: 24)
!1689 = distinct !DILexicalBlock(scope: !1672, file: !84, line: 77, column: 9)
!1690 = !DILocation(line: 0, scope: !1691)
!1691 = distinct !DILexicalBlock(scope: !1688, file: !84, line: 79, column: 13)
!1692 = !DILocation(line: 79, column: 13, scope: !1688)
!1693 = !DILocation(line: 80, column: 34, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1691, file: !84, line: 79, column: 37)
!1695 = !DILocation(line: 81, column: 9, scope: !1694)
!1696 = !DILocation(line: 82, column: 34, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1691, file: !84, line: 81, column: 16)
!1698 = !DILocation(line: 85, column: 30, scope: !1699)
!1699 = distinct !DILexicalBlock(scope: !1700, file: !84, line: 84, column: 31)
!1700 = distinct !DILexicalBlock(scope: !1689, file: !84, line: 84, column: 16)
!1701 = !DILocation(line: 0, scope: !1702)
!1702 = distinct !DILexicalBlock(scope: !1699, file: !84, line: 86, column: 13)
!1703 = !DILocation(line: 86, column: 13, scope: !1699)
!1704 = !DILocation(line: 87, column: 34, scope: !1705)
!1705 = distinct !DILexicalBlock(scope: !1702, file: !84, line: 86, column: 37)
!1706 = !DILocation(line: 88, column: 9, scope: !1705)
!1707 = !DILocation(line: 89, column: 34, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1702, file: !84, line: 88, column: 16)
!1709 = !DILocation(line: 92, column: 1, scope: !1672)
!1710 = distinct !DISubprogram(name: "GPT_Start", scope: !84, file: !84, line: 94, type: !1711, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1713)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{null, !139}
!1713 = !{!1714}
!1714 = !DILocalVariable(name: "timerNum", arg: 1, scope: !1710, file: !84, line: 94, type: !139)
!1715 = !DILocation(line: 0, scope: !1710)
!1716 = !DILocation(line: 96, column: 5, scope: !1710)
!1717 = !DILocation(line: 96, column: 5, scope: !1718)
!1718 = distinct !DILexicalBlock(scope: !1719, file: !84, line: 96, column: 5)
!1719 = distinct !DILexicalBlock(scope: !1710, file: !84, line: 96, column: 5)
!1720 = distinct !{!1720, !1717, !1717}
!1721 = !DILocation(line: 99, column: 30, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !1723, file: !84, line: 98, column: 24)
!1723 = distinct !DILexicalBlock(scope: !1710, file: !84, line: 98, column: 9)
!1724 = !DILocation(line: 100, column: 9, scope: !1722)
!1725 = !DILocation(line: 101, column: 5, scope: !1722)
!1726 = !DILocation(line: 102, column: 30, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !1728, file: !84, line: 101, column: 31)
!1728 = distinct !DILexicalBlock(scope: !1723, file: !84, line: 101, column: 16)
!1729 = !DILocation(line: 103, column: 9, scope: !1727)
!1730 = !DILocation(line: 104, column: 5, scope: !1727)
!1731 = !DILocation(line: 105, column: 30, scope: !1732)
!1732 = distinct !DILexicalBlock(scope: !1733, file: !84, line: 104, column: 31)
!1733 = distinct !DILexicalBlock(scope: !1728, file: !84, line: 104, column: 16)
!1734 = !DILocation(line: 106, column: 5, scope: !1732)
!1735 = !DILocation(line: 108, column: 1, scope: !1710)
!1736 = distinct !DISubprogram(name: "GPT_Stop", scope: !84, file: !84, line: 110, type: !1711, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1737)
!1737 = !{!1738}
!1738 = !DILocalVariable(name: "timerNum", arg: 1, scope: !1736, file: !84, line: 110, type: !139)
!1739 = !DILocation(line: 0, scope: !1736)
!1740 = !DILocation(line: 112, column: 9, scope: !1736)
!1741 = !DILocation(line: 113, column: 30, scope: !1742)
!1742 = distinct !DILexicalBlock(scope: !1743, file: !84, line: 112, column: 24)
!1743 = distinct !DILexicalBlock(scope: !1736, file: !84, line: 112, column: 9)
!1744 = !DILocation(line: 114, column: 30, scope: !1742)
!1745 = !DILocation(line: 115, column: 31, scope: !1742)
!1746 = !DILocation(line: 117, column: 5, scope: !1742)
!1747 = !DILocation(line: 118, column: 30, scope: !1748)
!1748 = distinct !DILexicalBlock(scope: !1749, file: !84, line: 117, column: 31)
!1749 = distinct !DILexicalBlock(scope: !1743, file: !84, line: 117, column: 16)
!1750 = !DILocation(line: 119, column: 30, scope: !1748)
!1751 = !DILocation(line: 120, column: 31, scope: !1748)
!1752 = !DILocation(line: 121, column: 5, scope: !1748)
!1753 = !DILocation(line: 122, column: 30, scope: !1754)
!1754 = distinct !DILexicalBlock(scope: !1755, file: !84, line: 121, column: 31)
!1755 = distinct !DILexicalBlock(scope: !1749, file: !84, line: 121, column: 16)
!1756 = !DILocation(line: 123, column: 5, scope: !1754)
!1757 = !DILocation(line: 124, column: 30, scope: !1758)
!1758 = distinct !DILexicalBlock(scope: !1759, file: !84, line: 123, column: 31)
!1759 = distinct !DILexicalBlock(scope: !1755, file: !84, line: 123, column: 16)
!1760 = !DILocation(line: 125, column: 5, scope: !1758)
!1761 = !DILocation(line: 128, column: 1, scope: !1736)
!1762 = distinct !DISubprogram(name: "GPT_INT_Handler", scope: !84, file: !84, line: 130, type: !553, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1763)
!1763 = !{!1764, !1765}
!1764 = !DILocalVariable(name: "irq_number", arg: 1, scope: !1762, file: !84, line: 130, type: !477)
!1765 = !DILocalVariable(name: "GPT_Status", scope: !1762, file: !84, line: 132, type: !321)
!1766 = !DILocation(line: 0, scope: !1762)
!1767 = !DILocation(line: 135, column: 18, scope: !1762)
!1768 = !DILocation(line: 136, column: 26, scope: !1762)
!1769 = !DILocation(line: 136, column: 24, scope: !1762)
!1770 = !DILocation(line: 138, column: 20, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1762, file: !84, line: 138, column: 9)
!1772 = !DILocation(line: 138, column: 9, scope: !1762)
!1773 = !DILocation(line: 141, column: 27, scope: !1774)
!1774 = distinct !DILexicalBlock(scope: !1771, file: !84, line: 141, column: 16)
!1775 = !DILocation(line: 141, column: 16, scope: !1771)
!1776 = !DILocation(line: 0, scope: !1771)
!1777 = !DILocation(line: 145, column: 1, scope: !1762)
!1778 = distinct !DISubprogram(name: "GPT_init", scope: !84, file: !84, line: 147, type: !1779, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1781)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{null, !139, !139, !153}
!1781 = !{!1782, !1783, !1784}
!1782 = !DILocalVariable(name: "timerNum", arg: 1, scope: !1778, file: !84, line: 147, type: !139)
!1783 = !DILocalVariable(name: "speed_32us", arg: 2, scope: !1778, file: !84, line: 147, type: !139)
!1784 = !DILocalVariable(name: "GPT_Callback", arg: 3, scope: !1778, file: !84, line: 147, type: !153)
!1785 = !DILocation(line: 0, scope: !1778)
!1786 = !DILocation(line: 149, column: 5, scope: !1778)
!1787 = !DILocation(line: 149, column: 5, scope: !1788)
!1788 = distinct !DILexicalBlock(scope: !1789, file: !84, line: 149, column: 5)
!1789 = distinct !DILexicalBlock(scope: !1778, file: !84, line: 149, column: 5)
!1790 = distinct !{!1790, !1787, !1787}
!1791 = !DILocation(line: 149, column: 5, scope: !1789)
!1792 = !DILocation(line: 151, column: 23, scope: !1793)
!1793 = distinct !DILexicalBlock(scope: !1778, file: !84, line: 151, column: 9)
!1794 = !DILocation(line: 152, column: 9, scope: !1795)
!1795 = distinct !DILexicalBlock(scope: !1793, file: !84, line: 151, column: 41)
!1796 = !DILocation(line: 153, column: 9, scope: !1795)
!1797 = !DILocation(line: 154, column: 9, scope: !1795)
!1798 = !DILocation(line: 155, column: 5, scope: !1795)
!1799 = !DILocation(line: 157, column: 9, scope: !1778)
!1800 = !DILocation(line: 158, column: 37, scope: !1801)
!1801 = distinct !DILexicalBlock(scope: !1802, file: !84, line: 157, column: 24)
!1802 = distinct !DILexicalBlock(scope: !1778, file: !84, line: 157, column: 9)
!1803 = !DILocation(line: 159, column: 30, scope: !1801)
!1804 = !DILocation(line: 160, column: 45, scope: !1801)
!1805 = !DILocation(line: 160, column: 30, scope: !1801)
!1806 = !DILocation(line: 161, column: 5, scope: !1801)
!1807 = !DILocation(line: 162, column: 37, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1809, file: !84, line: 161, column: 31)
!1809 = distinct !DILexicalBlock(scope: !1802, file: !84, line: 161, column: 16)
!1810 = !DILocation(line: 163, column: 30, scope: !1808)
!1811 = !DILocation(line: 164, column: 45, scope: !1808)
!1812 = !DILocation(line: 164, column: 30, scope: !1808)
!1813 = !DILocation(line: 165, column: 5, scope: !1808)
!1814 = !DILocation(line: 166, column: 59, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1816, file: !84, line: 165, column: 31)
!1816 = distinct !DILexicalBlock(scope: !1809, file: !84, line: 165, column: 16)
!1817 = !DILocation(line: 166, column: 45, scope: !1815)
!1818 = !DILocation(line: 166, column: 30, scope: !1815)
!1819 = !DILocation(line: 167, column: 5, scope: !1815)
!1820 = !DILocation(line: 168, column: 59, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1822, file: !84, line: 167, column: 31)
!1822 = distinct !DILexicalBlock(scope: !1816, file: !84, line: 167, column: 16)
!1823 = !DILocation(line: 168, column: 45, scope: !1821)
!1824 = !DILocation(line: 168, column: 30, scope: !1821)
!1825 = !DILocation(line: 169, column: 30, scope: !1821)
!1826 = !DILocation(line: 170, column: 5, scope: !1821)
!1827 = !DILocation(line: 171, column: 1, scope: !1778)
!1828 = distinct !DISubprogram(name: "GPT_return_current_count", scope: !84, file: !84, line: 173, type: !1829, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1831)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!139, !139}
!1831 = !{!1832, !1833}
!1832 = !DILocalVariable(name: "timerNum", arg: 1, scope: !1828, file: !84, line: 173, type: !139)
!1833 = !DILocalVariable(name: "current_count", scope: !1828, file: !84, line: 175, type: !139)
!1834 = !DILocation(line: 0, scope: !1828)
!1835 = !DILocation(line: 177, column: 5, scope: !1828)
!1836 = !DILocation(line: 177, column: 5, scope: !1837)
!1837 = distinct !DILexicalBlock(scope: !1838, file: !84, line: 177, column: 5)
!1838 = distinct !DILexicalBlock(scope: !1828, file: !84, line: 177, column: 5)
!1839 = distinct !{!1839, !1836, !1836}
!1840 = !DILocation(line: 183, column: 5, scope: !1841)
!1841 = distinct !DILexicalBlock(scope: !1842, file: !84, line: 181, column: 31)
!1842 = distinct !DILexicalBlock(scope: !1843, file: !84, line: 181, column: 16)
!1843 = distinct !DILexicalBlock(scope: !1828, file: !84, line: 179, column: 9)
!1844 = !DILocation(line: 185, column: 5, scope: !1845)
!1845 = distinct !DILexicalBlock(scope: !1846, file: !84, line: 183, column: 31)
!1846 = distinct !DILexicalBlock(scope: !1842, file: !84, line: 183, column: 16)
!1847 = !DILocation(line: 187, column: 5, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1849, file: !84, line: 185, column: 31)
!1849 = distinct !DILexicalBlock(scope: !1846, file: !84, line: 185, column: 16)
!1850 = !DILocation(line: 0, scope: !1843)
!1851 = !DILocation(line: 189, column: 5, scope: !1828)
!1852 = distinct !DISubprogram(name: "CM4_GPT2Init", scope: !84, file: !84, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1305)
!1853 = !DILocation(line: 195, column: 5, scope: !1852)
!1854 = !DILocation(line: 196, column: 1, scope: !1852)
!1855 = distinct !DISubprogram(name: "CM4_GPT4Init", scope: !84, file: !84, line: 198, type: !154, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1305)
!1856 = !DILocation(line: 200, column: 5, scope: !1855)
!1857 = !DILocation(line: 201, column: 1, scope: !1855)
!1858 = distinct !DISubprogram(name: "halGPIO_ConfDirection", scope: !1012, file: !1012, line: 54, type: !1859, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !1861)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!1368, !159, !323}
!1861 = !{!1862, !1863, !1864, !1866}
!1862 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !1858, file: !1012, line: 54, type: !159)
!1863 = !DILocalVariable(name: "outEnable", arg: 2, scope: !1858, file: !1012, line: 54, type: !323)
!1864 = !DILocalVariable(name: "no", scope: !1858, file: !1012, line: 57, type: !1865)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT16", file: !87, line: 60, baseType: !322)
!1866 = !DILocalVariable(name: "remainder", scope: !1858, file: !1012, line: 58, type: !1865)
!1867 = !DILocation(line: 0, scope: !1858)
!1868 = !DILocation(line: 59, column: 19, scope: !1858)
!1869 = !DILocation(line: 60, column: 17, scope: !1858)
!1870 = !DILocation(line: 61, column: 5, scope: !1858)
!1871 = !DILocation(line: 65, column: 27, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !1873, file: !1012, line: 65, column: 17)
!1873 = distinct !DILexicalBlock(scope: !1858, file: !1012, line: 61, column: 17)
!1874 = !DILocation(line: 0, scope: !1872)
!1875 = !DILocation(line: 65, column: 17, scope: !1873)
!1876 = !DILocation(line: 66, column: 21, scope: !1877)
!1877 = distinct !DILexicalBlock(scope: !1872, file: !1012, line: 65, column: 33)
!1878 = !DILocation(line: 67, column: 73, scope: !1879)
!1879 = distinct !DILexicalBlock(scope: !1880, file: !1012, line: 66, column: 38)
!1880 = distinct !DILexicalBlock(scope: !1877, file: !1012, line: 66, column: 21)
!1881 = !DILocation(line: 67, column: 69, scope: !1879)
!1882 = !DILocation(line: 67, column: 66, scope: !1879)
!1883 = !DILocation(line: 68, column: 17, scope: !1879)
!1884 = !DILocation(line: 68, column: 28, scope: !1880)
!1885 = !DILocation(line: 69, column: 77, scope: !1886)
!1886 = distinct !DILexicalBlock(scope: !1887, file: !1012, line: 68, column: 45)
!1887 = distinct !DILexicalBlock(scope: !1880, file: !1012, line: 68, column: 28)
!1888 = !DILocation(line: 70, column: 77, scope: !1886)
!1889 = !DILocation(line: 71, column: 17, scope: !1886)
!1890 = !DILocation(line: 72, column: 77, scope: !1891)
!1891 = distinct !DILexicalBlock(scope: !1892, file: !1012, line: 71, column: 45)
!1892 = distinct !DILexicalBlock(scope: !1887, file: !1012, line: 71, column: 28)
!1893 = !DILocation(line: 73, column: 77, scope: !1891)
!1894 = !DILocation(line: 74, column: 17, scope: !1891)
!1895 = !DILocation(line: 75, column: 79, scope: !1896)
!1896 = distinct !DILexicalBlock(scope: !1897, file: !1012, line: 74, column: 45)
!1897 = distinct !DILexicalBlock(scope: !1892, file: !1012, line: 74, column: 28)
!1898 = !DILocation(line: 76, column: 79, scope: !1896)
!1899 = !DILocation(line: 77, column: 17, scope: !1896)
!1900 = !DILocation(line: 78, column: 79, scope: !1901)
!1901 = distinct !DILexicalBlock(scope: !1902, file: !1012, line: 77, column: 45)
!1902 = distinct !DILexicalBlock(scope: !1897, file: !1012, line: 77, column: 28)
!1903 = !DILocation(line: 79, column: 79, scope: !1901)
!1904 = !DILocation(line: 80, column: 17, scope: !1901)
!1905 = !DILocation(line: 81, column: 79, scope: !1906)
!1906 = distinct !DILexicalBlock(scope: !1907, file: !1012, line: 80, column: 45)
!1907 = distinct !DILexicalBlock(scope: !1902, file: !1012, line: 80, column: 28)
!1908 = !DILocation(line: 82, column: 79, scope: !1906)
!1909 = !DILocation(line: 83, column: 17, scope: !1906)
!1910 = !DILocation(line: 85, column: 17, scope: !1877)
!1911 = !DILocation(line: 86, column: 13, scope: !1877)
!1912 = !DILocation(line: 88, column: 21, scope: !1913)
!1913 = distinct !DILexicalBlock(scope: !1872, file: !1012, line: 86, column: 20)
!1914 = !DILocation(line: 89, column: 72, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1916, file: !1012, line: 88, column: 38)
!1916 = distinct !DILexicalBlock(scope: !1913, file: !1012, line: 88, column: 21)
!1917 = !DILocation(line: 89, column: 66, scope: !1915)
!1918 = !DILocation(line: 90, column: 17, scope: !1915)
!1919 = !DILocation(line: 90, column: 28, scope: !1916)
!1920 = !DILocation(line: 91, column: 77, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1922, file: !1012, line: 90, column: 45)
!1922 = distinct !DILexicalBlock(scope: !1916, file: !1012, line: 90, column: 28)
!1923 = !DILocation(line: 92, column: 17, scope: !1921)
!1924 = !DILocation(line: 93, column: 77, scope: !1925)
!1925 = distinct !DILexicalBlock(scope: !1926, file: !1012, line: 92, column: 45)
!1926 = distinct !DILexicalBlock(scope: !1922, file: !1012, line: 92, column: 28)
!1927 = !DILocation(line: 94, column: 17, scope: !1925)
!1928 = !DILocation(line: 95, column: 79, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1930, file: !1012, line: 94, column: 45)
!1930 = distinct !DILexicalBlock(scope: !1926, file: !1012, line: 94, column: 28)
!1931 = !DILocation(line: 96, column: 17, scope: !1929)
!1932 = !DILocation(line: 97, column: 79, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1934, file: !1012, line: 96, column: 45)
!1934 = distinct !DILexicalBlock(scope: !1930, file: !1012, line: 96, column: 28)
!1935 = !DILocation(line: 98, column: 17, scope: !1933)
!1936 = !DILocation(line: 99, column: 79, scope: !1937)
!1937 = distinct !DILexicalBlock(scope: !1938, file: !1012, line: 98, column: 45)
!1938 = distinct !DILexicalBlock(scope: !1934, file: !1012, line: 98, column: 28)
!1939 = !DILocation(line: 100, column: 17, scope: !1937)
!1940 = !DILocation(line: 103, column: 17, scope: !1913)
!1941 = !DILocation(line: 109, column: 27, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !1873, file: !1012, line: 109, column: 17)
!1943 = !DILocation(line: 0, scope: !1942)
!1944 = !DILocation(line: 109, column: 17, scope: !1873)
!1945 = !DILocation(line: 110, column: 21, scope: !1946)
!1946 = distinct !DILexicalBlock(scope: !1942, file: !1012, line: 109, column: 33)
!1947 = !DILocation(line: 111, column: 73, scope: !1948)
!1948 = distinct !DILexicalBlock(scope: !1949, file: !1012, line: 110, column: 36)
!1949 = distinct !DILexicalBlock(scope: !1946, file: !1012, line: 110, column: 21)
!1950 = !DILocation(line: 111, column: 69, scope: !1948)
!1951 = !DILocation(line: 111, column: 66, scope: !1948)
!1952 = !DILocation(line: 112, column: 17, scope: !1948)
!1953 = !DILocation(line: 113, column: 79, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1949, file: !1012, line: 112, column: 24)
!1955 = !DILocation(line: 114, column: 79, scope: !1954)
!1956 = !DILocation(line: 117, column: 17, scope: !1946)
!1957 = !DILocation(line: 118, column: 13, scope: !1946)
!1958 = !DILocation(line: 120, column: 21, scope: !1959)
!1959 = distinct !DILexicalBlock(scope: !1942, file: !1012, line: 118, column: 20)
!1960 = !DILocation(line: 121, column: 72, scope: !1961)
!1961 = distinct !DILexicalBlock(scope: !1962, file: !1012, line: 120, column: 36)
!1962 = distinct !DILexicalBlock(scope: !1959, file: !1012, line: 120, column: 21)
!1963 = !DILocation(line: 121, column: 66, scope: !1961)
!1964 = !DILocation(line: 122, column: 17, scope: !1961)
!1965 = !DILocation(line: 123, column: 79, scope: !1966)
!1966 = distinct !DILexicalBlock(scope: !1962, file: !1012, line: 122, column: 24)
!1967 = !DILocation(line: 126, column: 17, scope: !1959)
!1968 = !DILocation(line: 133, column: 1, scope: !1858)
!1969 = distinct !DISubprogram(name: "halGPO_Write", scope: !1012, file: !1012, line: 136, type: !1859, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !1970)
!1970 = !{!1971, !1972, !1973, !1974}
!1971 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !1969, file: !1012, line: 136, type: !159)
!1972 = !DILocalVariable(name: "writeValue", arg: 2, scope: !1969, file: !1012, line: 136, type: !323)
!1973 = !DILocalVariable(name: "no", scope: !1969, file: !1012, line: 138, type: !1865)
!1974 = !DILocalVariable(name: "remainder", scope: !1969, file: !1012, line: 139, type: !1865)
!1975 = !DILocation(line: 0, scope: !1969)
!1976 = !DILocation(line: 140, column: 19, scope: !1969)
!1977 = !DILocation(line: 141, column: 17, scope: !1969)
!1978 = !DILocation(line: 142, column: 5, scope: !1969)
!1979 = !DILocation(line: 145, column: 17, scope: !1980)
!1980 = distinct !DILexicalBlock(scope: !1981, file: !1012, line: 145, column: 17)
!1981 = distinct !DILexicalBlock(scope: !1969, file: !1012, line: 142, column: 17)
!1982 = !DILocation(line: 0, scope: !1980)
!1983 = !DILocation(line: 145, column: 17, scope: !1981)
!1984 = !DILocation(line: 146, column: 17, scope: !1985)
!1985 = distinct !DILexicalBlock(scope: !1980, file: !1012, line: 145, column: 29)
!1986 = !DILocation(line: 147, column: 13, scope: !1985)
!1987 = !DILocation(line: 148, column: 17, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1980, file: !1012, line: 147, column: 20)
!1989 = !DILocation(line: 153, column: 17, scope: !1990)
!1990 = distinct !DILexicalBlock(scope: !1981, file: !1012, line: 153, column: 17)
!1991 = !DILocation(line: 0, scope: !1990)
!1992 = !DILocation(line: 153, column: 17, scope: !1981)
!1993 = !DILocation(line: 154, column: 17, scope: !1994)
!1994 = distinct !DILexicalBlock(scope: !1990, file: !1012, line: 153, column: 29)
!1995 = !DILocation(line: 155, column: 13, scope: !1994)
!1996 = !DILocation(line: 156, column: 17, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1990, file: !1012, line: 155, column: 20)
!1998 = !DILocation(line: 163, column: 1, scope: !1969)
!1999 = distinct !DISubprogram(name: "halgetGPIO_DOUT", scope: !1012, file: !1012, line: 169, type: !2000, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !2002)
!2000 = !DISubroutineType(types: !2001)
!2001 = !{!323, !159}
!2002 = !{!2003, !2004, !2005, !2006}
!2003 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !1999, file: !1012, line: 169, type: !159)
!2004 = !DILocalVariable(name: "no", scope: !1999, file: !1012, line: 171, type: !1865)
!2005 = !DILocalVariable(name: "remainder", scope: !1999, file: !1012, line: 172, type: !1865)
!2006 = !DILocalVariable(name: "dout", scope: !1999, file: !1012, line: 175, type: !323)
!2007 = !DILocation(line: 0, scope: !1999)
!2008 = !DILocation(line: 173, column: 19, scope: !1999)
!2009 = !DILocation(line: 174, column: 17, scope: !1999)
!2010 = !DILocation(line: 177, column: 5, scope: !1999)
!2011 = !DILocation(line: 183, column: 13, scope: !2012)
!2012 = distinct !DILexicalBlock(scope: !1999, file: !1012, line: 177, column: 17)
!2013 = !DILocation(line: 0, scope: !2012)
!2014 = !DILocation(line: 187, column: 5, scope: !1999)
!2015 = !DILocation(line: 188, column: 1, scope: !1999)
!2016 = distinct !DISubprogram(name: "halgetGPIO_DIN", scope: !1012, file: !1012, line: 189, type: !2000, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !2017)
!2017 = !{!2018, !2019, !2020, !2021}
!2018 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2016, file: !1012, line: 189, type: !159)
!2019 = !DILocalVariable(name: "no", scope: !2016, file: !1012, line: 191, type: !1865)
!2020 = !DILocalVariable(name: "remainder", scope: !2016, file: !1012, line: 192, type: !1865)
!2021 = !DILocalVariable(name: "din", scope: !2016, file: !1012, line: 195, type: !323)
!2022 = !DILocation(line: 0, scope: !2016)
!2023 = !DILocation(line: 193, column: 19, scope: !2016)
!2024 = !DILocation(line: 194, column: 17, scope: !2016)
!2025 = !DILocation(line: 196, column: 5, scope: !2016)
!2026 = !DILocation(line: 203, column: 13, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !2016, file: !1012, line: 196, column: 17)
!2028 = !DILocation(line: 0, scope: !2027)
!2029 = !DILocation(line: 208, column: 5, scope: !2016)
!2030 = !DILocation(line: 209, column: 1, scope: !2016)
!2031 = distinct !DISubprogram(name: "halgetGPIO_OutEnable", scope: !1012, file: !1012, line: 210, type: !2000, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !2032)
!2032 = !{!2033, !2034, !2035, !2036}
!2033 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2031, file: !1012, line: 210, type: !159)
!2034 = !DILocalVariable(name: "no", scope: !2031, file: !1012, line: 212, type: !1865)
!2035 = !DILocalVariable(name: "remainder", scope: !2031, file: !1012, line: 213, type: !1865)
!2036 = !DILocalVariable(name: "outEnable", scope: !2031, file: !1012, line: 216, type: !323)
!2037 = !DILocation(line: 0, scope: !2031)
!2038 = !DILocation(line: 214, column: 19, scope: !2031)
!2039 = !DILocation(line: 215, column: 17, scope: !2031)
!2040 = !DILocation(line: 218, column: 5, scope: !2031)
!2041 = !DILocation(line: 224, column: 13, scope: !2042)
!2042 = distinct !DILexicalBlock(scope: !2031, file: !1012, line: 218, column: 17)
!2043 = !DILocation(line: 0, scope: !2042)
!2044 = !DILocation(line: 228, column: 5, scope: !2031)
!2045 = !DILocation(line: 229, column: 1, scope: !2031)
!2046 = distinct !DISubprogram(name: "halGPIO_PullUp_SET", scope: !1012, file: !1012, line: 232, type: !2047, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !2049)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{!1368, !159}
!2049 = !{!2050, !2051, !2052}
!2050 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2046, file: !1012, line: 232, type: !159)
!2051 = !DILocalVariable(name: "no", scope: !2046, file: !1012, line: 234, type: !1865)
!2052 = !DILocalVariable(name: "remainder", scope: !2046, file: !1012, line: 235, type: !1865)
!2053 = !DILocation(line: 0, scope: !2046)
!2054 = !DILocation(line: 236, column: 19, scope: !2046)
!2055 = !DILocation(line: 237, column: 17, scope: !2046)
!2056 = !DILocation(line: 238, column: 5, scope: !2046)
!2057 = !DILocation(line: 239, column: 5, scope: !2046)
!2058 = !DILocation(line: 241, column: 27, scope: !2059)
!2059 = distinct !DILexicalBlock(scope: !2060, file: !1012, line: 241, column: 17)
!2060 = distinct !DILexicalBlock(scope: !2046, file: !1012, line: 239, column: 17)
!2061 = !DILocation(line: 241, column: 17, scope: !2060)
!2062 = !DILocation(line: 241, column: 17, scope: !2059)
!2063 = !DILocation(line: 242, column: 17, scope: !2064)
!2064 = distinct !DILexicalBlock(scope: !2059, file: !1012, line: 241, column: 34)
!2065 = !DILocation(line: 243, column: 13, scope: !2064)
!2066 = !DILocation(line: 243, column: 24, scope: !2059)
!2067 = !DILocation(line: 244, column: 73, scope: !2068)
!2068 = distinct !DILexicalBlock(scope: !2069, file: !1012, line: 243, column: 41)
!2069 = distinct !DILexicalBlock(scope: !2059, file: !1012, line: 243, column: 24)
!2070 = !DILocation(line: 245, column: 73, scope: !2068)
!2071 = !DILocation(line: 246, column: 13, scope: !2068)
!2072 = !DILocation(line: 247, column: 73, scope: !2073)
!2073 = distinct !DILexicalBlock(scope: !2074, file: !1012, line: 246, column: 41)
!2074 = distinct !DILexicalBlock(scope: !2069, file: !1012, line: 246, column: 24)
!2075 = !DILocation(line: 248, column: 73, scope: !2073)
!2076 = !DILocation(line: 249, column: 13, scope: !2073)
!2077 = !DILocation(line: 250, column: 75, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2079, file: !1012, line: 249, column: 41)
!2079 = distinct !DILexicalBlock(scope: !2074, file: !1012, line: 249, column: 24)
!2080 = !DILocation(line: 251, column: 75, scope: !2078)
!2081 = !DILocation(line: 252, column: 13, scope: !2078)
!2082 = !DILocation(line: 253, column: 75, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !2084, file: !1012, line: 252, column: 41)
!2084 = distinct !DILexicalBlock(scope: !2079, file: !1012, line: 252, column: 24)
!2085 = !DILocation(line: 254, column: 75, scope: !2083)
!2086 = !DILocation(line: 255, column: 13, scope: !2083)
!2087 = !DILocation(line: 256, column: 75, scope: !2088)
!2088 = distinct !DILexicalBlock(scope: !2089, file: !1012, line: 255, column: 41)
!2089 = distinct !DILexicalBlock(scope: !2084, file: !1012, line: 255, column: 24)
!2090 = !DILocation(line: 257, column: 75, scope: !2088)
!2091 = !DILocation(line: 258, column: 13, scope: !2088)
!2092 = !DILocation(line: 261, column: 18, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2060, file: !1012, line: 261, column: 17)
!2094 = !DILocation(line: 261, column: 17, scope: !2060)
!2095 = !DILocation(line: 262, column: 75, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2093, file: !1012, line: 261, column: 29)
!2097 = !DILocation(line: 263, column: 75, scope: !2096)
!2098 = !DILocation(line: 264, column: 13, scope: !2096)
!2099 = !DILocation(line: 265, column: 17, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2093, file: !1012, line: 264, column: 20)
!2101 = !DILocation(line: 272, column: 1, scope: !2046)
!2102 = distinct !DISubprogram(name: "halGPIO_PullDown_RESET", scope: !1012, file: !1012, line: 359, type: !2047, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !2103)
!2103 = !{!2104, !2105, !2106}
!2104 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2102, file: !1012, line: 359, type: !159)
!2105 = !DILocalVariable(name: "no", scope: !2102, file: !1012, line: 362, type: !1865)
!2106 = !DILocalVariable(name: "remainder", scope: !2102, file: !1012, line: 363, type: !1865)
!2107 = !DILocation(line: 0, scope: !2102)
!2108 = !DILocation(line: 364, column: 19, scope: !2102)
!2109 = !DILocation(line: 365, column: 17, scope: !2102)
!2110 = !DILocation(line: 367, column: 5, scope: !2102)
!2111 = !DILocation(line: 369, column: 27, scope: !2112)
!2112 = distinct !DILexicalBlock(scope: !2113, file: !1012, line: 369, column: 17)
!2113 = distinct !DILexicalBlock(scope: !2102, file: !1012, line: 367, column: 17)
!2114 = !DILocation(line: 369, column: 17, scope: !2113)
!2115 = !DILocation(line: 369, column: 17, scope: !2112)
!2116 = !DILocation(line: 370, column: 17, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2112, file: !1012, line: 369, column: 34)
!2118 = !DILocation(line: 371, column: 13, scope: !2117)
!2119 = !DILocation(line: 371, column: 24, scope: !2112)
!2120 = !DILocation(line: 372, column: 73, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !2122, file: !1012, line: 371, column: 41)
!2122 = distinct !DILexicalBlock(scope: !2112, file: !1012, line: 371, column: 24)
!2123 = !DILocation(line: 373, column: 73, scope: !2121)
!2124 = !DILocation(line: 374, column: 13, scope: !2121)
!2125 = !DILocation(line: 375, column: 73, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !2127, file: !1012, line: 374, column: 41)
!2127 = distinct !DILexicalBlock(scope: !2122, file: !1012, line: 374, column: 24)
!2128 = !DILocation(line: 376, column: 73, scope: !2126)
!2129 = !DILocation(line: 377, column: 13, scope: !2126)
!2130 = !DILocation(line: 378, column: 75, scope: !2131)
!2131 = distinct !DILexicalBlock(scope: !2132, file: !1012, line: 377, column: 41)
!2132 = distinct !DILexicalBlock(scope: !2127, file: !1012, line: 377, column: 24)
!2133 = !DILocation(line: 379, column: 75, scope: !2131)
!2134 = !DILocation(line: 380, column: 13, scope: !2131)
!2135 = !DILocation(line: 381, column: 75, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2137, file: !1012, line: 380, column: 41)
!2137 = distinct !DILexicalBlock(scope: !2132, file: !1012, line: 380, column: 24)
!2138 = !DILocation(line: 382, column: 75, scope: !2136)
!2139 = !DILocation(line: 383, column: 13, scope: !2136)
!2140 = !DILocation(line: 384, column: 75, scope: !2141)
!2141 = distinct !DILexicalBlock(scope: !2142, file: !1012, line: 383, column: 41)
!2142 = distinct !DILexicalBlock(scope: !2137, file: !1012, line: 383, column: 24)
!2143 = !DILocation(line: 385, column: 75, scope: !2141)
!2144 = !DILocation(line: 386, column: 13, scope: !2141)
!2145 = !DILocation(line: 389, column: 18, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !2113, file: !1012, line: 389, column: 17)
!2147 = !DILocation(line: 389, column: 17, scope: !2113)
!2148 = !DILocation(line: 390, column: 75, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !2146, file: !1012, line: 389, column: 29)
!2150 = !DILocation(line: 391, column: 75, scope: !2149)
!2151 = !DILocation(line: 392, column: 13, scope: !2149)
!2152 = !DILocation(line: 393, column: 17, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2146, file: !1012, line: 392, column: 20)
!2154 = !DILocation(line: 401, column: 1, scope: !2102)
!2155 = distinct !DISubprogram(name: "halGPIO_PullUp_RESET", scope: !1012, file: !1012, line: 274, type: !2047, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !2156)
!2156 = !{!2157, !2158, !2159}
!2157 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2155, file: !1012, line: 274, type: !159)
!2158 = !DILocalVariable(name: "no", scope: !2155, file: !1012, line: 276, type: !1865)
!2159 = !DILocalVariable(name: "remainder", scope: !2155, file: !1012, line: 277, type: !1865)
!2160 = !DILocation(line: 0, scope: !2155)
!2161 = !DILocation(line: 278, column: 19, scope: !2155)
!2162 = !DILocation(line: 279, column: 17, scope: !2155)
!2163 = !DILocation(line: 281, column: 5, scope: !2155)
!2164 = !DILocation(line: 283, column: 27, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2166, file: !1012, line: 283, column: 17)
!2166 = distinct !DILexicalBlock(scope: !2155, file: !1012, line: 281, column: 17)
!2167 = !DILocation(line: 283, column: 17, scope: !2166)
!2168 = !DILocation(line: 283, column: 17, scope: !2165)
!2169 = !DILocation(line: 284, column: 17, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2165, file: !1012, line: 283, column: 34)
!2171 = !DILocation(line: 285, column: 13, scope: !2170)
!2172 = !DILocation(line: 285, column: 24, scope: !2165)
!2173 = !DILocation(line: 286, column: 73, scope: !2174)
!2174 = distinct !DILexicalBlock(scope: !2175, file: !1012, line: 285, column: 41)
!2175 = distinct !DILexicalBlock(scope: !2165, file: !1012, line: 285, column: 24)
!2176 = !DILocation(line: 287, column: 73, scope: !2174)
!2177 = !DILocation(line: 288, column: 13, scope: !2174)
!2178 = !DILocation(line: 289, column: 73, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2180, file: !1012, line: 288, column: 41)
!2180 = distinct !DILexicalBlock(scope: !2175, file: !1012, line: 288, column: 24)
!2181 = !DILocation(line: 290, column: 73, scope: !2179)
!2182 = !DILocation(line: 291, column: 13, scope: !2179)
!2183 = !DILocation(line: 292, column: 75, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2185, file: !1012, line: 291, column: 41)
!2185 = distinct !DILexicalBlock(scope: !2180, file: !1012, line: 291, column: 24)
!2186 = !DILocation(line: 293, column: 75, scope: !2184)
!2187 = !DILocation(line: 294, column: 13, scope: !2184)
!2188 = !DILocation(line: 295, column: 75, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2190, file: !1012, line: 294, column: 41)
!2190 = distinct !DILexicalBlock(scope: !2185, file: !1012, line: 294, column: 24)
!2191 = !DILocation(line: 296, column: 75, scope: !2189)
!2192 = !DILocation(line: 297, column: 13, scope: !2189)
!2193 = !DILocation(line: 298, column: 75, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2195, file: !1012, line: 297, column: 41)
!2195 = distinct !DILexicalBlock(scope: !2190, file: !1012, line: 297, column: 24)
!2196 = !DILocation(line: 299, column: 75, scope: !2194)
!2197 = !DILocation(line: 300, column: 13, scope: !2194)
!2198 = !DILocation(line: 303, column: 18, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2166, file: !1012, line: 303, column: 17)
!2200 = !DILocation(line: 303, column: 17, scope: !2166)
!2201 = !DILocation(line: 304, column: 75, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2199, file: !1012, line: 303, column: 29)
!2203 = !DILocation(line: 305, column: 75, scope: !2202)
!2204 = !DILocation(line: 306, column: 13, scope: !2202)
!2205 = !DILocation(line: 307, column: 17, scope: !2206)
!2206 = distinct !DILexicalBlock(scope: !2199, file: !1012, line: 306, column: 20)
!2207 = !DILocation(line: 314, column: 1, scope: !2155)
!2208 = distinct !DISubprogram(name: "halGPIO_PullDown_SET", scope: !1012, file: !1012, line: 316, type: !2047, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !2209)
!2209 = !{!2210, !2211, !2212}
!2210 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2208, file: !1012, line: 316, type: !159)
!2211 = !DILocalVariable(name: "no", scope: !2208, file: !1012, line: 318, type: !1865)
!2212 = !DILocalVariable(name: "remainder", scope: !2208, file: !1012, line: 319, type: !1865)
!2213 = !DILocation(line: 0, scope: !2208)
!2214 = !DILocation(line: 320, column: 19, scope: !2208)
!2215 = !DILocation(line: 321, column: 17, scope: !2208)
!2216 = !DILocation(line: 322, column: 5, scope: !2208)
!2217 = !DILocation(line: 323, column: 5, scope: !2208)
!2218 = !DILocation(line: 325, column: 27, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2220, file: !1012, line: 325, column: 17)
!2220 = distinct !DILexicalBlock(scope: !2208, file: !1012, line: 323, column: 17)
!2221 = !DILocation(line: 325, column: 17, scope: !2220)
!2222 = !DILocation(line: 325, column: 17, scope: !2219)
!2223 = !DILocation(line: 326, column: 17, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2219, file: !1012, line: 325, column: 34)
!2225 = !DILocation(line: 327, column: 13, scope: !2224)
!2226 = !DILocation(line: 327, column: 24, scope: !2219)
!2227 = !DILocation(line: 328, column: 73, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2229, file: !1012, line: 327, column: 41)
!2229 = distinct !DILexicalBlock(scope: !2219, file: !1012, line: 327, column: 24)
!2230 = !DILocation(line: 329, column: 73, scope: !2228)
!2231 = !DILocation(line: 330, column: 13, scope: !2228)
!2232 = !DILocation(line: 331, column: 73, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2234, file: !1012, line: 330, column: 41)
!2234 = distinct !DILexicalBlock(scope: !2229, file: !1012, line: 330, column: 24)
!2235 = !DILocation(line: 332, column: 73, scope: !2233)
!2236 = !DILocation(line: 333, column: 13, scope: !2233)
!2237 = !DILocation(line: 334, column: 75, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !2239, file: !1012, line: 333, column: 41)
!2239 = distinct !DILexicalBlock(scope: !2234, file: !1012, line: 333, column: 24)
!2240 = !DILocation(line: 335, column: 75, scope: !2238)
!2241 = !DILocation(line: 336, column: 13, scope: !2238)
!2242 = !DILocation(line: 337, column: 75, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2244, file: !1012, line: 336, column: 41)
!2244 = distinct !DILexicalBlock(scope: !2239, file: !1012, line: 336, column: 24)
!2245 = !DILocation(line: 338, column: 75, scope: !2243)
!2246 = !DILocation(line: 339, column: 13, scope: !2243)
!2247 = !DILocation(line: 340, column: 75, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2249, file: !1012, line: 339, column: 41)
!2249 = distinct !DILexicalBlock(scope: !2244, file: !1012, line: 339, column: 24)
!2250 = !DILocation(line: 341, column: 75, scope: !2248)
!2251 = !DILocation(line: 342, column: 13, scope: !2248)
!2252 = !DILocation(line: 345, column: 18, scope: !2253)
!2253 = distinct !DILexicalBlock(scope: !2220, file: !1012, line: 345, column: 17)
!2254 = !DILocation(line: 345, column: 17, scope: !2220)
!2255 = !DILocation(line: 346, column: 75, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2253, file: !1012, line: 345, column: 29)
!2257 = !DILocation(line: 347, column: 75, scope: !2256)
!2258 = !DILocation(line: 348, column: 13, scope: !2256)
!2259 = !DILocation(line: 349, column: 17, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2253, file: !1012, line: 348, column: 20)
!2261 = !DILocation(line: 357, column: 1, scope: !2208)
!2262 = distinct !DISubprogram(name: "halGPIO_SetDriving", scope: !1012, file: !1012, line: 404, type: !1859, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !2263)
!2263 = !{!2264, !2265, !2266, !2267}
!2264 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2262, file: !1012, line: 404, type: !159)
!2265 = !DILocalVariable(name: "GPIO_driving", arg: 2, scope: !2262, file: !1012, line: 404, type: !323)
!2266 = !DILocalVariable(name: "no", scope: !2262, file: !1012, line: 406, type: !1865)
!2267 = !DILocalVariable(name: "remainder", scope: !2262, file: !1012, line: 407, type: !1865)
!2268 = !DILocation(line: 0, scope: !2262)
!2269 = !DILocation(line: 408, column: 19, scope: !2262)
!2270 = !DILocation(line: 409, column: 17, scope: !2262)
!2271 = !DILocation(line: 411, column: 5, scope: !2262)
!2272 = !DILocation(line: 413, column: 84, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2262, file: !1012, line: 411, column: 17)
!2274 = !DILocation(line: 413, column: 70, scope: !2273)
!2275 = !DILocation(line: 413, column: 64, scope: !2273)
!2276 = !DILocation(line: 413, column: 61, scope: !2273)
!2277 = !DILocation(line: 414, column: 79, scope: !2273)
!2278 = !DILocation(line: 414, column: 83, scope: !2273)
!2279 = !DILocation(line: 414, column: 88, scope: !2273)
!2280 = !DILocation(line: 414, column: 61, scope: !2273)
!2281 = !DILocation(line: 415, column: 13, scope: !2273)
!2282 = !DILocation(line: 417, column: 27, scope: !2283)
!2283 = distinct !DILexicalBlock(scope: !2273, file: !1012, line: 417, column: 17)
!2284 = !DILocation(line: 417, column: 17, scope: !2273)
!2285 = !DILocation(line: 418, column: 88, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2283, file: !1012, line: 417, column: 33)
!2287 = !DILocation(line: 418, column: 74, scope: !2286)
!2288 = !DILocation(line: 418, column: 68, scope: !2286)
!2289 = !DILocation(line: 418, column: 65, scope: !2286)
!2290 = !DILocation(line: 419, column: 83, scope: !2286)
!2291 = !DILocation(line: 419, column: 87, scope: !2286)
!2292 = !DILocation(line: 419, column: 92, scope: !2286)
!2293 = !DILocation(line: 419, column: 65, scope: !2286)
!2294 = !DILocation(line: 420, column: 13, scope: !2286)
!2295 = !DILocation(line: 420, column: 24, scope: !2283)
!2296 = !DILocation(line: 421, column: 73, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2298, file: !1012, line: 420, column: 41)
!2298 = distinct !DILexicalBlock(scope: !2283, file: !1012, line: 420, column: 24)
!2299 = !DILocation(line: 422, column: 91, scope: !2297)
!2300 = !DILocation(line: 422, column: 100, scope: !2297)
!2301 = !DILocation(line: 422, column: 73, scope: !2297)
!2302 = !DILocation(line: 423, column: 73, scope: !2297)
!2303 = !DILocation(line: 424, column: 13, scope: !2297)
!2304 = !DILocation(line: 425, column: 73, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2306, file: !1012, line: 424, column: 41)
!2306 = distinct !DILexicalBlock(scope: !2298, file: !1012, line: 424, column: 24)
!2307 = !DILocation(line: 426, column: 91, scope: !2305)
!2308 = !DILocation(line: 426, column: 100, scope: !2305)
!2309 = !DILocation(line: 426, column: 73, scope: !2305)
!2310 = !DILocation(line: 427, column: 73, scope: !2305)
!2311 = !DILocation(line: 428, column: 13, scope: !2305)
!2312 = !DILocation(line: 429, column: 75, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2314, file: !1012, line: 428, column: 41)
!2314 = distinct !DILexicalBlock(scope: !2306, file: !1012, line: 428, column: 24)
!2315 = !DILocation(line: 430, column: 93, scope: !2313)
!2316 = !DILocation(line: 430, column: 102, scope: !2313)
!2317 = !DILocation(line: 430, column: 75, scope: !2313)
!2318 = !DILocation(line: 431, column: 75, scope: !2313)
!2319 = !DILocation(line: 432, column: 13, scope: !2313)
!2320 = !DILocation(line: 433, column: 75, scope: !2321)
!2321 = distinct !DILexicalBlock(scope: !2322, file: !1012, line: 432, column: 41)
!2322 = distinct !DILexicalBlock(scope: !2314, file: !1012, line: 432, column: 24)
!2323 = !DILocation(line: 434, column: 93, scope: !2321)
!2324 = !DILocation(line: 434, column: 102, scope: !2321)
!2325 = !DILocation(line: 434, column: 75, scope: !2321)
!2326 = !DILocation(line: 435, column: 75, scope: !2321)
!2327 = !DILocation(line: 436, column: 13, scope: !2321)
!2328 = !DILocation(line: 437, column: 75, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !2330, file: !1012, line: 436, column: 41)
!2330 = distinct !DILexicalBlock(scope: !2322, file: !1012, line: 436, column: 24)
!2331 = !DILocation(line: 438, column: 93, scope: !2329)
!2332 = !DILocation(line: 438, column: 102, scope: !2329)
!2333 = !DILocation(line: 438, column: 75, scope: !2329)
!2334 = !DILocation(line: 439, column: 75, scope: !2329)
!2335 = !DILocation(line: 440, column: 13, scope: !2329)
!2336 = !DILocation(line: 443, column: 18, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2273, file: !1012, line: 443, column: 17)
!2338 = !DILocation(line: 443, column: 17, scope: !2273)
!2339 = !DILocation(line: 444, column: 75, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2337, file: !1012, line: 443, column: 29)
!2341 = !DILocation(line: 445, column: 93, scope: !2340)
!2342 = !DILocation(line: 445, column: 102, scope: !2340)
!2343 = !DILocation(line: 445, column: 75, scope: !2340)
!2344 = !DILocation(line: 446, column: 75, scope: !2340)
!2345 = !DILocation(line: 447, column: 13, scope: !2340)
!2346 = !DILocation(line: 448, column: 88, scope: !2347)
!2347 = distinct !DILexicalBlock(scope: !2337, file: !1012, line: 447, column: 20)
!2348 = !DILocation(line: 448, column: 74, scope: !2347)
!2349 = !DILocation(line: 448, column: 68, scope: !2347)
!2350 = !DILocation(line: 448, column: 65, scope: !2347)
!2351 = !DILocation(line: 449, column: 83, scope: !2347)
!2352 = !DILocation(line: 449, column: 87, scope: !2347)
!2353 = !DILocation(line: 449, column: 92, scope: !2347)
!2354 = !DILocation(line: 449, column: 65, scope: !2347)
!2355 = !DILocation(line: 453, column: 84, scope: !2273)
!2356 = !DILocation(line: 453, column: 70, scope: !2273)
!2357 = !DILocation(line: 453, column: 64, scope: !2273)
!2358 = !DILocation(line: 453, column: 61, scope: !2273)
!2359 = !DILocation(line: 454, column: 79, scope: !2273)
!2360 = !DILocation(line: 454, column: 83, scope: !2273)
!2361 = !DILocation(line: 454, column: 88, scope: !2273)
!2362 = !DILocation(line: 454, column: 61, scope: !2273)
!2363 = !DILocation(line: 455, column: 13, scope: !2273)
!2364 = !DILocation(line: 460, column: 1, scope: !2262)
!2365 = distinct !DISubprogram(name: "halGPIO_GetDriving", scope: !1012, file: !1012, line: 463, type: !2366, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !2369)
!2366 = !DISubroutineType(types: !2367)
!2367 = !{!1368, !159, !2368}
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!2369 = !{!2370, !2371, !2372, !2373, !2374}
!2370 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2365, file: !1012, line: 463, type: !159)
!2371 = !DILocalVariable(name: "GPIO_driving", arg: 2, scope: !2365, file: !1012, line: 463, type: !2368)
!2372 = !DILocalVariable(name: "no", scope: !2365, file: !1012, line: 465, type: !1865)
!2373 = !DILocalVariable(name: "remainder", scope: !2365, file: !1012, line: 466, type: !1865)
!2374 = !DILocalVariable(name: "temp", scope: !2365, file: !1012, line: 467, type: !159)
!2375 = !DILocation(line: 0, scope: !2365)
!2376 = !DILocation(line: 468, column: 19, scope: !2365)
!2377 = !DILocation(line: 469, column: 17, scope: !2365)
!2378 = !DILocation(line: 471, column: 5, scope: !2365)
!2379 = !DILocation(line: 473, column: 20, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2365, file: !1012, line: 471, column: 17)
!2381 = !DILocation(line: 474, column: 40, scope: !2380)
!2382 = !DILocation(line: 474, column: 26, scope: !2380)
!2383 = !DILocation(line: 474, column: 18, scope: !2380)
!2384 = !DILocation(line: 475, column: 40, scope: !2380)
!2385 = !DILocation(line: 475, column: 29, scope: !2380)
!2386 = !DILocation(line: 476, column: 13, scope: !2380)
!2387 = !DILocation(line: 478, column: 27, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2380, file: !1012, line: 478, column: 17)
!2389 = !DILocation(line: 478, column: 17, scope: !2380)
!2390 = !DILocation(line: 479, column: 24, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2388, file: !1012, line: 478, column: 33)
!2392 = !DILocation(line: 480, column: 44, scope: !2391)
!2393 = !DILocation(line: 480, column: 30, scope: !2391)
!2394 = !DILocation(line: 480, column: 22, scope: !2391)
!2395 = !DILocation(line: 481, column: 44, scope: !2391)
!2396 = !DILocation(line: 481, column: 33, scope: !2391)
!2397 = !DILocation(line: 482, column: 13, scope: !2391)
!2398 = !DILocation(line: 482, column: 24, scope: !2388)
!2399 = !DILocation(line: 483, column: 24, scope: !2400)
!2400 = distinct !DILexicalBlock(scope: !2401, file: !1012, line: 482, column: 41)
!2401 = distinct !DILexicalBlock(scope: !2388, file: !1012, line: 482, column: 24)
!2402 = !DILocation(line: 485, column: 53, scope: !2400)
!2403 = !DILocation(line: 485, column: 33, scope: !2400)
!2404 = !DILocation(line: 486, column: 13, scope: !2400)
!2405 = !DILocation(line: 487, column: 24, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2407, file: !1012, line: 486, column: 41)
!2407 = distinct !DILexicalBlock(scope: !2401, file: !1012, line: 486, column: 24)
!2408 = !DILocation(line: 489, column: 53, scope: !2406)
!2409 = !DILocation(line: 489, column: 33, scope: !2406)
!2410 = !DILocation(line: 490, column: 13, scope: !2406)
!2411 = !DILocation(line: 491, column: 24, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2413, file: !1012, line: 490, column: 41)
!2413 = distinct !DILexicalBlock(scope: !2407, file: !1012, line: 490, column: 24)
!2414 = !DILocation(line: 493, column: 53, scope: !2412)
!2415 = !DILocation(line: 493, column: 33, scope: !2412)
!2416 = !DILocation(line: 494, column: 13, scope: !2412)
!2417 = !DILocation(line: 495, column: 24, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2419, file: !1012, line: 494, column: 41)
!2419 = distinct !DILexicalBlock(scope: !2413, file: !1012, line: 494, column: 24)
!2420 = !DILocation(line: 497, column: 53, scope: !2418)
!2421 = !DILocation(line: 497, column: 33, scope: !2418)
!2422 = !DILocation(line: 498, column: 13, scope: !2418)
!2423 = !DILocation(line: 499, column: 24, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2425, file: !1012, line: 498, column: 41)
!2425 = distinct !DILexicalBlock(scope: !2419, file: !1012, line: 498, column: 24)
!2426 = !DILocation(line: 501, column: 53, scope: !2424)
!2427 = !DILocation(line: 501, column: 33, scope: !2424)
!2428 = !DILocation(line: 502, column: 13, scope: !2424)
!2429 = !DILocation(line: 505, column: 18, scope: !2430)
!2430 = distinct !DILexicalBlock(scope: !2380, file: !1012, line: 505, column: 17)
!2431 = !DILocation(line: 505, column: 17, scope: !2380)
!2432 = !DILocation(line: 506, column: 24, scope: !2433)
!2433 = distinct !DILexicalBlock(scope: !2430, file: !1012, line: 505, column: 29)
!2434 = !DILocation(line: 508, column: 53, scope: !2433)
!2435 = !DILocation(line: 508, column: 33, scope: !2433)
!2436 = !DILocation(line: 509, column: 13, scope: !2433)
!2437 = !DILocation(line: 510, column: 24, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2430, file: !1012, line: 509, column: 20)
!2439 = !DILocation(line: 511, column: 44, scope: !2438)
!2440 = !DILocation(line: 511, column: 30, scope: !2438)
!2441 = !DILocation(line: 511, column: 22, scope: !2438)
!2442 = !DILocation(line: 512, column: 44, scope: !2438)
!2443 = !DILocation(line: 512, column: 33, scope: !2438)
!2444 = !DILocation(line: 516, column: 20, scope: !2380)
!2445 = !DILocation(line: 517, column: 40, scope: !2380)
!2446 = !DILocation(line: 517, column: 26, scope: !2380)
!2447 = !DILocation(line: 517, column: 18, scope: !2380)
!2448 = !DILocation(line: 518, column: 40, scope: !2380)
!2449 = !DILocation(line: 518, column: 29, scope: !2380)
!2450 = !DILocation(line: 519, column: 13, scope: !2380)
!2451 = !DILocation(line: 0, scope: !2380)
!2452 = !DILocation(line: 524, column: 1, scope: !2365)
!2453 = distinct !DISubprogram(name: "topPAD_Control_GPIO", scope: !1012, file: !1012, line: 526, type: !2454, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1011, retainedNodes: !2457)
!2454 = !DISubroutineType(types: !2455)
!2455 = !{null, !159, !2456}
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_TOP_PAD_CONTROL_T", file: !1015, line: 1212, baseType: !1014)
!2457 = !{!2458, !2459, !2460, !2461}
!2458 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2453, file: !1012, line: 526, type: !159)
!2459 = !DILocalVariable(name: "ePadControl", arg: 2, scope: !2453, file: !1012, line: 526, type: !2456)
!2460 = !DILocalVariable(name: "no", scope: !2453, file: !1012, line: 529, type: !1865)
!2461 = !DILocalVariable(name: "remainder", scope: !2453, file: !1012, line: 530, type: !1865)
!2462 = !DILocation(line: 0, scope: !2453)
!2463 = !DILocation(line: 531, column: 19, scope: !2453)
!2464 = !DILocation(line: 532, column: 17, scope: !2453)
!2465 = !DILocation(line: 534, column: 9, scope: !2453)
!2466 = !DILocation(line: 536, column: 9, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2468, file: !1012, line: 534, column: 45)
!2468 = distinct !DILexicalBlock(scope: !2453, file: !1012, line: 534, column: 9)
!2469 = !DILocation(line: 538, column: 56, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2467, file: !1012, line: 536, column: 21)
!2471 = !DILocation(line: 538, column: 53, scope: !2470)
!2472 = !DILocation(line: 538, column: 47, scope: !2470)
!2473 = !DILocation(line: 539, column: 17, scope: !2470)
!2474 = !DILocation(line: 541, column: 56, scope: !2470)
!2475 = !DILocation(line: 541, column: 53, scope: !2470)
!2476 = !DILocation(line: 541, column: 47, scope: !2470)
!2477 = !DILocation(line: 542, column: 17, scope: !2470)
!2478 = !DILocation(line: 548, column: 9, scope: !2479)
!2479 = distinct !DILexicalBlock(scope: !2480, file: !1012, line: 547, column: 51)
!2480 = distinct !DILexicalBlock(scope: !2468, file: !1012, line: 547, column: 16)
!2481 = !DILocation(line: 550, column: 57, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2479, file: !1012, line: 548, column: 21)
!2483 = !DILocation(line: 550, column: 54, scope: !2482)
!2484 = !DILocation(line: 550, column: 50, scope: !2482)
!2485 = !DILocation(line: 550, column: 47, scope: !2482)
!2486 = !DILocation(line: 551, column: 17, scope: !2482)
!2487 = !DILocation(line: 553, column: 57, scope: !2482)
!2488 = !DILocation(line: 553, column: 54, scope: !2482)
!2489 = !DILocation(line: 553, column: 50, scope: !2482)
!2490 = !DILocation(line: 553, column: 47, scope: !2482)
!2491 = !DILocation(line: 554, column: 17, scope: !2482)
!2492 = !DILocation(line: 560, column: 1, scope: !2453)
!2493 = distinct !DISubprogram(name: "halPinmuxTopOnPadFunc", scope: !1021, file: !1021, line: 85, type: !2494, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1020, retainedNodes: !2498)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{!2496, !2497, !323}
!2496 = !DIDerivedType(tag: DW_TAG_typedef, name: "VOID", file: !87, line: 79, baseType: null)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_PAD_NAME_T", file: !1024, line: 225, baseType: !1023)
!2498 = !{!2499, !2500, !2501}
!2499 = !DILocalVariable(name: "ePadIndex", arg: 1, scope: !2493, file: !1021, line: 85, type: !2497)
!2500 = !DILocalVariable(name: "ucFunc", arg: 2, scope: !2493, file: !1021, line: 85, type: !323)
!2501 = !DILocalVariable(name: "temp", scope: !2493, file: !1021, line: 87, type: !61)
!2502 = !DILocation(line: 0, scope: !2493)
!2503 = !DILocation(line: 88, column: 5, scope: !2493)
!2504 = !DILocation(line: 91, column: 20, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2493, file: !1021, line: 88, column: 24)
!2506 = !DILocation(line: 92, column: 18, scope: !2505)
!2507 = !DILocation(line: 93, column: 66, scope: !2505)
!2508 = !DILocation(line: 93, column: 63, scope: !2505)
!2509 = !DILocation(line: 93, column: 56, scope: !2505)
!2510 = !DILocation(line: 94, column: 13, scope: !2505)
!2511 = !DILocation(line: 97, column: 20, scope: !2505)
!2512 = !DILocation(line: 98, column: 18, scope: !2505)
!2513 = !DILocation(line: 99, column: 67, scope: !2505)
!2514 = !DILocation(line: 99, column: 74, scope: !2505)
!2515 = !DILocation(line: 99, column: 64, scope: !2505)
!2516 = !DILocation(line: 99, column: 56, scope: !2505)
!2517 = !DILocation(line: 100, column: 13, scope: !2505)
!2518 = !DILocation(line: 103, column: 20, scope: !2505)
!2519 = !DILocation(line: 104, column: 18, scope: !2505)
!2520 = !DILocation(line: 105, column: 67, scope: !2505)
!2521 = !DILocation(line: 105, column: 74, scope: !2505)
!2522 = !DILocation(line: 105, column: 64, scope: !2505)
!2523 = !DILocation(line: 105, column: 56, scope: !2505)
!2524 = !DILocation(line: 106, column: 13, scope: !2505)
!2525 = !DILocation(line: 109, column: 20, scope: !2505)
!2526 = !DILocation(line: 110, column: 18, scope: !2505)
!2527 = !DILocation(line: 111, column: 67, scope: !2505)
!2528 = !DILocation(line: 111, column: 74, scope: !2505)
!2529 = !DILocation(line: 111, column: 64, scope: !2505)
!2530 = !DILocation(line: 111, column: 56, scope: !2505)
!2531 = !DILocation(line: 112, column: 13, scope: !2505)
!2532 = !DILocation(line: 115, column: 20, scope: !2505)
!2533 = !DILocation(line: 116, column: 18, scope: !2505)
!2534 = !DILocation(line: 117, column: 67, scope: !2505)
!2535 = !DILocation(line: 117, column: 74, scope: !2505)
!2536 = !DILocation(line: 117, column: 64, scope: !2505)
!2537 = !DILocation(line: 117, column: 56, scope: !2505)
!2538 = !DILocation(line: 118, column: 13, scope: !2505)
!2539 = !DILocation(line: 121, column: 20, scope: !2505)
!2540 = !DILocation(line: 122, column: 18, scope: !2505)
!2541 = !DILocation(line: 123, column: 67, scope: !2505)
!2542 = !DILocation(line: 123, column: 74, scope: !2505)
!2543 = !DILocation(line: 123, column: 64, scope: !2505)
!2544 = !DILocation(line: 123, column: 56, scope: !2505)
!2545 = !DILocation(line: 124, column: 13, scope: !2505)
!2546 = !DILocation(line: 127, column: 20, scope: !2505)
!2547 = !DILocation(line: 128, column: 18, scope: !2505)
!2548 = !DILocation(line: 129, column: 67, scope: !2505)
!2549 = !DILocation(line: 129, column: 74, scope: !2505)
!2550 = !DILocation(line: 129, column: 64, scope: !2505)
!2551 = !DILocation(line: 129, column: 56, scope: !2505)
!2552 = !DILocation(line: 130, column: 13, scope: !2505)
!2553 = !DILocation(line: 133, column: 20, scope: !2505)
!2554 = !DILocation(line: 134, column: 18, scope: !2505)
!2555 = !DILocation(line: 135, column: 67, scope: !2505)
!2556 = !DILocation(line: 135, column: 74, scope: !2505)
!2557 = !DILocation(line: 135, column: 64, scope: !2505)
!2558 = !DILocation(line: 135, column: 56, scope: !2505)
!2559 = !DILocation(line: 136, column: 13, scope: !2505)
!2560 = !DILocation(line: 139, column: 20, scope: !2505)
!2561 = !DILocation(line: 140, column: 18, scope: !2505)
!2562 = !DILocation(line: 141, column: 67, scope: !2505)
!2563 = !DILocation(line: 141, column: 64, scope: !2505)
!2564 = !DILocation(line: 141, column: 56, scope: !2505)
!2565 = !DILocation(line: 142, column: 13, scope: !2505)
!2566 = !DILocation(line: 145, column: 20, scope: !2505)
!2567 = !DILocation(line: 146, column: 18, scope: !2505)
!2568 = !DILocation(line: 147, column: 67, scope: !2505)
!2569 = !DILocation(line: 147, column: 74, scope: !2505)
!2570 = !DILocation(line: 147, column: 64, scope: !2505)
!2571 = !DILocation(line: 147, column: 56, scope: !2505)
!2572 = !DILocation(line: 148, column: 13, scope: !2505)
!2573 = !DILocation(line: 151, column: 20, scope: !2505)
!2574 = !DILocation(line: 152, column: 18, scope: !2505)
!2575 = !DILocation(line: 153, column: 67, scope: !2505)
!2576 = !DILocation(line: 153, column: 74, scope: !2505)
!2577 = !DILocation(line: 153, column: 64, scope: !2505)
!2578 = !DILocation(line: 153, column: 56, scope: !2505)
!2579 = !DILocation(line: 154, column: 13, scope: !2505)
!2580 = !DILocation(line: 157, column: 20, scope: !2505)
!2581 = !DILocation(line: 158, column: 18, scope: !2505)
!2582 = !DILocation(line: 159, column: 67, scope: !2505)
!2583 = !DILocation(line: 159, column: 74, scope: !2505)
!2584 = !DILocation(line: 159, column: 64, scope: !2505)
!2585 = !DILocation(line: 159, column: 56, scope: !2505)
!2586 = !DILocation(line: 160, column: 29, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2505, file: !1021, line: 160, column: 17)
!2588 = !DILocation(line: 161, column: 17, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2587, file: !1021, line: 160, column: 60)
!2590 = !DILocation(line: 162, column: 13, scope: !2589)
!2591 = !DILocation(line: 166, column: 20, scope: !2505)
!2592 = !DILocation(line: 167, column: 18, scope: !2505)
!2593 = !DILocation(line: 168, column: 67, scope: !2505)
!2594 = !DILocation(line: 168, column: 74, scope: !2505)
!2595 = !DILocation(line: 168, column: 64, scope: !2505)
!2596 = !DILocation(line: 168, column: 56, scope: !2505)
!2597 = !DILocation(line: 169, column: 29, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2505, file: !1021, line: 169, column: 17)
!2599 = !DILocation(line: 170, column: 17, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2598, file: !1021, line: 169, column: 45)
!2601 = !DILocation(line: 171, column: 13, scope: !2600)
!2602 = !DILocation(line: 175, column: 20, scope: !2505)
!2603 = !DILocation(line: 176, column: 18, scope: !2505)
!2604 = !DILocation(line: 177, column: 67, scope: !2505)
!2605 = !DILocation(line: 177, column: 74, scope: !2505)
!2606 = !DILocation(line: 177, column: 64, scope: !2505)
!2607 = !DILocation(line: 177, column: 56, scope: !2505)
!2608 = !DILocation(line: 178, column: 19, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2505, file: !1021, line: 178, column: 17)
!2610 = !DILocation(line: 178, column: 17, scope: !2505)
!2611 = !DILocation(line: 179, column: 17, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2609, file: !1021, line: 178, column: 30)
!2613 = !DILocation(line: 180, column: 13, scope: !2612)
!2614 = !DILocation(line: 184, column: 20, scope: !2505)
!2615 = !DILocation(line: 185, column: 18, scope: !2505)
!2616 = !DILocation(line: 186, column: 67, scope: !2505)
!2617 = !DILocation(line: 186, column: 74, scope: !2505)
!2618 = !DILocation(line: 186, column: 64, scope: !2505)
!2619 = !DILocation(line: 186, column: 56, scope: !2505)
!2620 = !DILocation(line: 187, column: 29, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !2505, file: !1021, line: 187, column: 17)
!2622 = !DILocation(line: 188, column: 17, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2621, file: !1021, line: 187, column: 45)
!2624 = !DILocation(line: 189, column: 13, scope: !2623)
!2625 = !DILocation(line: 193, column: 20, scope: !2505)
!2626 = !DILocation(line: 194, column: 18, scope: !2505)
!2627 = !DILocation(line: 195, column: 67, scope: !2505)
!2628 = !DILocation(line: 195, column: 74, scope: !2505)
!2629 = !DILocation(line: 195, column: 64, scope: !2505)
!2630 = !DILocation(line: 195, column: 56, scope: !2505)
!2631 = !DILocation(line: 196, column: 29, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2505, file: !1021, line: 196, column: 17)
!2633 = !DILocation(line: 197, column: 17, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2632, file: !1021, line: 196, column: 45)
!2635 = !DILocation(line: 198, column: 13, scope: !2634)
!2636 = !DILocation(line: 202, column: 20, scope: !2505)
!2637 = !DILocation(line: 203, column: 18, scope: !2505)
!2638 = !DILocation(line: 204, column: 67, scope: !2505)
!2639 = !DILocation(line: 204, column: 64, scope: !2505)
!2640 = !DILocation(line: 204, column: 56, scope: !2505)
!2641 = !DILocation(line: 205, column: 29, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !2505, file: !1021, line: 205, column: 17)
!2643 = !DILocation(line: 206, column: 17, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2642, file: !1021, line: 205, column: 45)
!2645 = !DILocation(line: 207, column: 13, scope: !2644)
!2646 = !DILocation(line: 211, column: 20, scope: !2505)
!2647 = !DILocation(line: 212, column: 18, scope: !2505)
!2648 = !DILocation(line: 213, column: 67, scope: !2505)
!2649 = !DILocation(line: 213, column: 74, scope: !2505)
!2650 = !DILocation(line: 213, column: 64, scope: !2505)
!2651 = !DILocation(line: 213, column: 56, scope: !2505)
!2652 = !DILocation(line: 214, column: 13, scope: !2505)
!2653 = !DILocation(line: 217, column: 20, scope: !2505)
!2654 = !DILocation(line: 218, column: 18, scope: !2505)
!2655 = !DILocation(line: 219, column: 67, scope: !2505)
!2656 = !DILocation(line: 219, column: 74, scope: !2505)
!2657 = !DILocation(line: 219, column: 64, scope: !2505)
!2658 = !DILocation(line: 219, column: 56, scope: !2505)
!2659 = !DILocation(line: 220, column: 13, scope: !2505)
!2660 = !DILocation(line: 223, column: 20, scope: !2505)
!2661 = !DILocation(line: 224, column: 18, scope: !2505)
!2662 = !DILocation(line: 225, column: 67, scope: !2505)
!2663 = !DILocation(line: 225, column: 74, scope: !2505)
!2664 = !DILocation(line: 225, column: 64, scope: !2505)
!2665 = !DILocation(line: 225, column: 56, scope: !2505)
!2666 = !DILocation(line: 226, column: 13, scope: !2505)
!2667 = !DILocation(line: 229, column: 20, scope: !2505)
!2668 = !DILocation(line: 230, column: 18, scope: !2505)
!2669 = !DILocation(line: 231, column: 67, scope: !2505)
!2670 = !DILocation(line: 231, column: 74, scope: !2505)
!2671 = !DILocation(line: 231, column: 64, scope: !2505)
!2672 = !DILocation(line: 231, column: 56, scope: !2505)
!2673 = !DILocation(line: 232, column: 13, scope: !2505)
!2674 = !DILocation(line: 235, column: 20, scope: !2505)
!2675 = !DILocation(line: 236, column: 18, scope: !2505)
!2676 = !DILocation(line: 237, column: 66, scope: !2505)
!2677 = !DILocation(line: 237, column: 73, scope: !2505)
!2678 = !DILocation(line: 237, column: 63, scope: !2505)
!2679 = !DILocation(line: 237, column: 56, scope: !2505)
!2680 = !DILocation(line: 238, column: 13, scope: !2505)
!2681 = !DILocation(line: 241, column: 20, scope: !2505)
!2682 = !DILocation(line: 242, column: 18, scope: !2505)
!2683 = !DILocation(line: 243, column: 67, scope: !2505)
!2684 = !DILocation(line: 243, column: 74, scope: !2505)
!2685 = !DILocation(line: 243, column: 64, scope: !2505)
!2686 = !DILocation(line: 243, column: 56, scope: !2505)
!2687 = !DILocation(line: 244, column: 13, scope: !2505)
!2688 = !DILocation(line: 247, column: 20, scope: !2505)
!2689 = !DILocation(line: 248, column: 18, scope: !2505)
!2690 = !DILocation(line: 249, column: 67, scope: !2505)
!2691 = !DILocation(line: 249, column: 74, scope: !2505)
!2692 = !DILocation(line: 249, column: 64, scope: !2505)
!2693 = !DILocation(line: 249, column: 56, scope: !2505)
!2694 = !DILocation(line: 250, column: 13, scope: !2505)
!2695 = !DILocation(line: 253, column: 20, scope: !2505)
!2696 = !DILocation(line: 254, column: 18, scope: !2505)
!2697 = !DILocation(line: 255, column: 67, scope: !2505)
!2698 = !DILocation(line: 255, column: 74, scope: !2505)
!2699 = !DILocation(line: 255, column: 64, scope: !2505)
!2700 = !DILocation(line: 255, column: 56, scope: !2505)
!2701 = !DILocation(line: 256, column: 13, scope: !2505)
!2702 = !DILocation(line: 259, column: 20, scope: !2505)
!2703 = !DILocation(line: 260, column: 18, scope: !2505)
!2704 = !DILocation(line: 261, column: 67, scope: !2505)
!2705 = !DILocation(line: 261, column: 74, scope: !2505)
!2706 = !DILocation(line: 261, column: 64, scope: !2505)
!2707 = !DILocation(line: 261, column: 56, scope: !2505)
!2708 = !DILocation(line: 262, column: 13, scope: !2505)
!2709 = !DILocation(line: 265, column: 20, scope: !2505)
!2710 = !DILocation(line: 266, column: 18, scope: !2505)
!2711 = !DILocation(line: 267, column: 67, scope: !2505)
!2712 = !DILocation(line: 267, column: 74, scope: !2505)
!2713 = !DILocation(line: 267, column: 64, scope: !2505)
!2714 = !DILocation(line: 267, column: 56, scope: !2505)
!2715 = !DILocation(line: 268, column: 13, scope: !2505)
!2716 = !DILocation(line: 271, column: 20, scope: !2505)
!2717 = !DILocation(line: 272, column: 18, scope: !2505)
!2718 = !DILocation(line: 273, column: 67, scope: !2505)
!2719 = !DILocation(line: 273, column: 74, scope: !2505)
!2720 = !DILocation(line: 273, column: 64, scope: !2505)
!2721 = !DILocation(line: 273, column: 56, scope: !2505)
!2722 = !DILocation(line: 274, column: 13, scope: !2505)
!2723 = !DILocation(line: 278, column: 1, scope: !2493)
!2724 = distinct !DISubprogram(name: "NVIC_SetupVectorTable", scope: !1102, file: !1102, line: 47, type: !2725, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !2727)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{null, !61}
!2727 = !{!2728}
!2728 = !DILocalVariable(name: "addr", arg: 1, scope: !2724, file: !1102, line: 47, type: !61)
!2729 = !DILocation(line: 0, scope: !2724)
!2730 = !DILocation(line: 49, column: 15, scope: !2724)
!2731 = !DILocation(line: 51, column: 5, scope: !2724)
!2732 = !{i64 2624}
!2733 = !DILocation(line: 52, column: 5, scope: !2724)
!2734 = !{i64 2651}
!2735 = !DILocation(line: 53, column: 1, scope: !2724)
!2736 = distinct !DISubprogram(name: "NVIC_SWInt", scope: !1102, file: !1102, line: 56, type: !2737, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !2739)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{null, !30}
!2739 = !{!2740}
!2740 = !DILocalVariable(name: "source", arg: 1, scope: !2736, file: !1102, line: 56, type: !30)
!2741 = !DILocation(line: 0, scope: !2736)
!2742 = !DILocation(line: 58, column: 16, scope: !2736)
!2743 = !DILocation(line: 59, column: 1, scope: !2736)
!2744 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !1102, file: !1102, line: 61, type: !1286, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !2745)
!2745 = !{!2746}
!2746 = !DILocalVariable(name: "mask", scope: !2744, file: !1102, line: 63, type: !61)
!2747 = !DILocation(line: 470, column: 3, scope: !2748, inlinedAt: !2752)
!2748 = distinct !DISubprogram(name: "__get_PRIMASK", scope: !2749, file: !2749, line: 466, type: !1286, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !2750)
!2749 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!2750 = !{!2751}
!2751 = !DILocalVariable(name: "result", scope: !2748, file: !2749, line: 468, type: !61)
!2752 = distinct !DILocation(line: 64, column: 5, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2744, file: !1102, line: 64, column: 5)
!2754 = !{i64 302171}
!2755 = !DILocation(line: 0, scope: !2748, inlinedAt: !2752)
!2756 = !DILocation(line: 0, scope: !2744)
!2757 = !DILocation(line: 330, column: 3, scope: !2758, inlinedAt: !2759)
!2758 = distinct !DISubprogram(name: "__disable_irq", scope: !2749, file: !2749, line: 328, type: !154, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !1305)
!2759 = distinct !DILocation(line: 64, column: 5, scope: !2753)
!2760 = !{i64 298835}
!2761 = !DILocation(line: 65, column: 5, scope: !2744)
!2762 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !1102, file: !1102, line: 68, type: !2725, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !2763)
!2763 = !{!2764}
!2764 = !DILocalVariable(name: "mask", arg: 1, scope: !2762, file: !1102, line: 68, type: !61)
!2765 = !DILocation(line: 0, scope: !2762)
!2766 = !DILocalVariable(name: "priMask", arg: 1, scope: !2767, file: !2749, line: 481, type: !61)
!2767 = distinct !DISubprogram(name: "__set_PRIMASK", scope: !2749, file: !2749, line: 481, type: !2725, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1101, retainedNodes: !2768)
!2768 = !{!2766}
!2769 = !DILocation(line: 0, scope: !2767, inlinedAt: !2770)
!2770 = distinct !DILocation(line: 70, column: 5, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2762, file: !1102, line: 70, column: 5)
!2772 = !DILocation(line: 483, column: 3, scope: !2767, inlinedAt: !2770)
!2773 = !{i64 302489}
!2774 = !DILocation(line: 71, column: 1, scope: !2762)
!2775 = distinct !DISubprogram(name: "pinmux_config", scope: !1147, file: !1147, line: 54, type: !2776, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1146, retainedNodes: !2778)
!2776 = !DISubroutineType(types: !2777)
!2777 = !{!478, !1266, !61}
!2778 = !{!2779, !2780, !2781}
!2779 = !DILocalVariable(name: "gpio_index", arg: 1, scope: !2775, file: !1147, line: 54, type: !1266)
!2780 = !DILocalVariable(name: "function", arg: 2, scope: !2775, file: !1147, line: 54, type: !61)
!2781 = !DILocalVariable(name: "ePadIndex", scope: !2775, file: !1147, line: 56, type: !2497)
!2782 = !DILocation(line: 0, scope: !2775)
!2783 = !DILocation(line: 60, column: 5, scope: !2775)
!2784 = !DILocation(line: 205, column: 38, scope: !2775)
!2785 = !DILocation(line: 205, column: 5, scope: !2775)
!2786 = !DILocation(line: 207, column: 5, scope: !2775)
!2787 = !DILocation(line: 208, column: 1, scope: !2775)
!2788 = distinct !DISubprogram(name: "sfc_GPT_return_current_count", scope: !165, file: !165, line: 60, type: !2789, scopeLine: 61, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2791)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!139}
!2791 = !{!2792}
!2792 = !DILocalVariable(name: "current_count", scope: !2788, file: !165, line: 62, type: !139)
!2793 = !DILocation(line: 64, column: 21, scope: !2788)
!2794 = !DILocation(line: 0, scope: !2788)
!2795 = !DILocation(line: 66, column: 5, scope: !2788)
!2796 = distinct !DISubprogram(name: "sfc_get_systime", scope: !165, file: !165, line: 69, type: !2789, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1305)
!2797 = !DILocation(line: 71, column: 12, scope: !2796)
!2798 = !DILocation(line: 71, column: 5, scope: !2796)
!2799 = distinct !DISubprogram(name: "sfc_delay_time", scope: !165, file: !165, line: 74, type: !1711, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2800)
!2800 = !{!2801, !2802, !2803}
!2801 = !DILocalVariable(name: "count", arg: 1, scope: !2799, file: !165, line: 74, type: !139)
!2802 = !DILocalVariable(name: "end_count", scope: !2799, file: !165, line: 76, type: !139)
!2803 = !DILocalVariable(name: "current", scope: !2799, file: !165, line: 76, type: !139)
!2804 = !DILocation(line: 0, scope: !2799)
!2805 = !DILocation(line: 78, column: 17, scope: !2799)
!2806 = !DILocation(line: 78, column: 35, scope: !2799)
!2807 = !DILocation(line: 78, column: 43, scope: !2799)
!2808 = !DILocation(line: 79, column: 15, scope: !2799)
!2809 = !DILocation(line: 80, column: 12, scope: !2799)
!2810 = !DILocation(line: 80, column: 5, scope: !2799)
!2811 = !DILocation(line: 81, column: 19, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2799, file: !165, line: 80, column: 49)
!2813 = distinct !{!2813, !2810, !2814}
!2814 = !DILocation(line: 82, column: 5, scope: !2799)
!2815 = !DILocation(line: 83, column: 1, scope: !2799)
!2816 = distinct !DISubprogram(name: "sfc_delay_ms", scope: !165, file: !165, line: 85, type: !2737, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2817)
!2817 = !{!2818}
!2818 = !DILocalVariable(name: "ms", arg: 1, scope: !2816, file: !165, line: 85, type: !30)
!2819 = !DILocation(line: 0, scope: !2816)
!2820 = !DILocation(line: 87, column: 23, scope: !2816)
!2821 = !DILocation(line: 87, column: 5, scope: !2816)
!2822 = !DILocation(line: 88, column: 1, scope: !2816)
!2823 = distinct !DISubprogram(name: "sfc_getMaxGPRamSize", scope: !165, file: !165, line: 90, type: !2824, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1305)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!7}
!2826 = !DILocation(line: 92, column: 5, scope: !2823)
!2827 = distinct !DISubprogram(name: "sfc_Init", scope: !165, file: !165, line: 121, type: !938, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2828)
!2828 = !{!2829, !2830}
!2829 = !DILocalVariable(name: "security_enable", arg: 1, scope: !2827, file: !165, line: 121, type: !7)
!2830 = !DILocalVariable(name: "reg", scope: !2827, file: !165, line: 123, type: !30)
!2831 = !DILocation(line: 0, scope: !2827)
!2832 = !DILocation(line: 125, column: 27, scope: !2827)
!2833 = !DILocation(line: 141, column: 5, scope: !2827)
!2834 = !DILocation(line: 142, column: 5, scope: !2827)
!2835 = !DILocation(line: 143, column: 5, scope: !2827)
!2836 = !DILocation(line: 144, column: 5, scope: !2827)
!2837 = !DILocation(line: 145, column: 5, scope: !2827)
!2838 = !DILocation(line: 147, column: 5, scope: !2827)
!2839 = !DILocation(line: 150, column: 11, scope: !2827)
!2840 = !DILocation(line: 151, column: 9, scope: !2827)
!2841 = !DILocation(line: 152, column: 5, scope: !2827)
!2842 = !DILocation(line: 153, column: 5, scope: !2827)
!2843 = !DILocation(line: 155, column: 11, scope: !2827)
!2844 = !DILocation(line: 156, column: 9, scope: !2827)
!2845 = !DILocation(line: 157, column: 5, scope: !2827)
!2846 = !DILocation(line: 158, column: 5, scope: !2827)
!2847 = !DILocation(line: 160, column: 11, scope: !2827)
!2848 = !DILocation(line: 161, column: 9, scope: !2827)
!2849 = !DILocation(line: 162, column: 5, scope: !2827)
!2850 = !DILocation(line: 163, column: 5, scope: !2827)
!2851 = !DILocation(line: 165, column: 11, scope: !2827)
!2852 = !DILocation(line: 166, column: 9, scope: !2827)
!2853 = !DILocation(line: 167, column: 5, scope: !2827)
!2854 = !DILocation(line: 168, column: 5, scope: !2827)
!2855 = !DILocation(line: 173, column: 9, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2827, file: !165, line: 173, column: 9)
!2857 = !DILocation(line: 173, column: 9, scope: !2827)
!2858 = !DILocation(line: 174, column: 31, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2856, file: !165, line: 173, column: 26)
!2860 = !DILocation(line: 184, column: 9, scope: !2859)
!2861 = !DILocation(line: 185, column: 9, scope: !2859)
!2862 = !DILocation(line: 187, column: 9, scope: !2859)
!2863 = !DILocation(line: 188, column: 9, scope: !2859)
!2864 = !DILocation(line: 189, column: 9, scope: !2859)
!2865 = !DILocation(line: 190, column: 9, scope: !2859)
!2866 = !DILocation(line: 192, column: 9, scope: !2859)
!2867 = !DILocation(line: 193, column: 5, scope: !2859)
!2868 = !DILocation(line: 194, column: 1, scope: !2827)
!2869 = distinct !DISubprogram(name: "sfc_GetDirectMode", scope: !165, file: !165, line: 196, type: !2824, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2870)
!2870 = !{!2871, !2872}
!2871 = !DILocalVariable(name: "qpi_en", scope: !2869, file: !165, line: 198, type: !195)
!2872 = !DILocalVariable(name: "sfc_read_mode", scope: !2869, file: !165, line: 199, type: !195)
!2873 = !DILocation(line: 198, column: 29, scope: !2869)
!2874 = !DILocation(line: 0, scope: !2869)
!2875 = !DILocation(line: 199, column: 36, scope: !2869)
!2876 = !DILocation(line: 199, column: 89, scope: !2869)
!2877 = !DILocation(line: 204, column: 23, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2869, file: !165, line: 204, column: 9)
!2879 = !DILocation(line: 204, column: 9, scope: !2869)
!2880 = !DILocation(line: 218, column: 1, scope: !2869)
!2881 = distinct !DISubprogram(name: "sfc_direct_read_setup", scope: !165, file: !165, line: 221, type: !2882, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2884)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{null, !195, !7}
!2884 = !{!2885, !2886, !2887}
!2885 = !DILocalVariable(name: "reg", arg: 1, scope: !2881, file: !165, line: 221, type: !195)
!2886 = !DILocalVariable(name: "mode", arg: 2, scope: !2881, file: !165, line: 221, type: !7)
!2887 = !DILocalVariable(name: "tmp", scope: !2881, file: !165, line: 223, type: !195)
!2888 = !DILocation(line: 0, scope: !2881)
!2889 = !DILocation(line: 224, column: 5, scope: !2881)
!2890 = !DILocation(line: 236, column: 9, scope: !2881)
!2891 = !DILocation(line: 237, column: 5, scope: !2881)
!2892 = !DILocation(line: 238, column: 1, scope: !2881)
!2893 = distinct !DISubprogram(name: "sfc_Command_List", scope: !165, file: !165, line: 296, type: !2894, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2896)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{null, !193}
!2896 = !{!2897, !2898, !2899, !2900}
!2897 = !DILocalVariable(name: "cmdlist", arg: 1, scope: !2893, file: !165, line: 296, type: !193)
!2898 = !DILocalVariable(name: "i", scope: !2893, file: !165, line: 298, type: !30)
!2899 = !DILocalVariable(name: "val", scope: !2893, file: !165, line: 299, type: !30)
!2900 = !DILocalVariable(name: "force_qpi", scope: !2893, file: !165, line: 299, type: !30)
!2901 = !DILocation(line: 0, scope: !2893)
!2902 = !DILocation(line: 301, column: 10, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2893, file: !165, line: 301, column: 9)
!2904 = !DILocation(line: 301, column: 9, scope: !2893)
!2905 = !DILocation(line: 305, column: 11, scope: !2893)
!2906 = !DILocation(line: 310, column: 5, scope: !2893)
!2907 = !DILocation(line: 311, column: 17, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2893, file: !165, line: 310, column: 17)
!2909 = !DILocation(line: 311, column: 9, scope: !2908)
!2910 = !DILocation(line: 319, column: 17, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2908, file: !165, line: 311, column: 29)
!2912 = !DILocation(line: 321, column: 17, scope: !2911)
!2913 = !DILocation(line: 322, column: 17, scope: !2911)
!2914 = !DILocation(line: 325, column: 33, scope: !2908)
!2915 = !DILocation(line: 325, column: 23, scope: !2908)
!2916 = !DILocation(line: 325, column: 49, scope: !2908)
!2917 = !DILocation(line: 325, column: 39, scope: !2908)
!2918 = !DILocation(line: 325, column: 9, scope: !2908)
!2919 = !DILocation(line: 327, column: 15, scope: !2908)
!2920 = !DILocation(line: 327, column: 11, scope: !2908)
!2921 = !DILocation(line: 329, column: 9, scope: !2908)
!2922 = distinct !{!2922, !2906, !2923}
!2923 = !DILocation(line: 330, column: 5, scope: !2893)
!2924 = !DILocation(line: 331, column: 1, scope: !2893)
!2925 = distinct !DISubprogram(name: "sfc_transfer", scope: !165, file: !165, line: 417, type: !2926, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2929)
!2926 = !DISubroutineType(types: !2927)
!2927 = !{!7, !193, !2928, !177, !2928, !30}
!2928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!2929 = !{!2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940}
!2930 = !DILocalVariable(name: "cmd", arg: 1, scope: !2925, file: !165, line: 417, type: !193)
!2931 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !2925, file: !165, line: 417, type: !2928)
!2932 = !DILocalVariable(name: "data", arg: 3, scope: !2925, file: !165, line: 417, type: !177)
!2933 = !DILocalVariable(name: "data_len", arg: 4, scope: !2925, file: !165, line: 417, type: !2928)
!2934 = !DILocalVariable(name: "force_qpi", arg: 5, scope: !2925, file: !165, line: 417, type: !30)
!2935 = !DILocalVariable(name: "tmp", scope: !2925, file: !165, line: 419, type: !30)
!2936 = !DILocalVariable(name: "i", scope: !2925, file: !165, line: 419, type: !30)
!2937 = !DILocalVariable(name: "j", scope: !2925, file: !165, line: 419, type: !30)
!2938 = !DILocalVariable(name: "p_data", scope: !2925, file: !165, line: 420, type: !177)
!2939 = !DILocalVariable(name: "p_tmp", scope: !2925, file: !165, line: 420, type: !177)
!2940 = !DILocalVariable(name: "savedMask", scope: !2925, file: !165, line: 421, type: !30)
!2941 = !DILocation(line: 0, scope: !2925)
!2942 = !DILocation(line: 419, column: 5, scope: !2925)
!2943 = !DILocation(line: 423, column: 18, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2925, file: !165, line: 423, column: 9)
!2945 = !DILocation(line: 423, column: 30, scope: !2944)
!2946 = !DILocation(line: 423, column: 9, scope: !2925)
!2947 = !DILocation(line: 430, column: 19, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2949, file: !165, line: 430, column: 5)
!2949 = distinct !DILexicalBlock(scope: !2925, file: !165, line: 430, column: 5)
!2950 = !DILocation(line: 430, column: 5, scope: !2949)
!2951 = !DILocation(line: 431, column: 25, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2953, file: !165, line: 431, column: 9)
!2953 = distinct !DILexicalBlock(scope: !2948, file: !165, line: 430, column: 43)
!2954 = !DILocation(line: 431, column: 32, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2952, file: !165, line: 431, column: 9)
!2956 = !DILocation(line: 431, column: 9, scope: !2952)
!2957 = !DILocation(line: 432, column: 24, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2955, file: !165, line: 431, column: 62)
!2959 = !DILocation(line: 432, column: 13, scope: !2958)
!2960 = !DILocation(line: 432, column: 22, scope: !2958)
!2961 = !DILocation(line: 431, column: 53, scope: !2955)
!2962 = !DILocation(line: 431, column: 58, scope: !2955)
!2963 = !DILocation(line: 431, column: 42, scope: !2955)
!2964 = distinct !{!2964, !2956, !2965}
!2965 = !DILocation(line: 433, column: 9, scope: !2952)
!2966 = !DILocation(line: 434, column: 9, scope: !2953)
!2967 = !DILocation(line: 0, scope: !2949)
!2968 = !DILocation(line: 436, column: 15, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2953, file: !165, line: 436, column: 13)
!2970 = !DILocation(line: 436, column: 20, scope: !2969)
!2971 = !DILocation(line: 437, column: 13, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2969, file: !165, line: 436, column: 46)
!2973 = !DILocation(line: 438, column: 13, scope: !2972)
!2974 = !DILocation(line: 440, column: 9, scope: !2972)
!2975 = !DILocation(line: 430, column: 37, scope: !2948)
!2976 = distinct !{!2976, !2950, !2977}
!2977 = !DILocation(line: 441, column: 5, scope: !2949)
!2978 = !DILocation(line: 443, column: 17, scope: !2925)
!2979 = !DILocation(line: 444, column: 9, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2925, file: !165, line: 444, column: 9)
!2981 = !DILocation(line: 444, column: 9, scope: !2925)
!2982 = !DILocation(line: 445, column: 9, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2980, file: !165, line: 444, column: 32)
!2984 = !DILocation(line: 446, column: 9, scope: !2983)
!2985 = !DILocation(line: 447, column: 5, scope: !2983)
!2986 = !DILocation(line: 449, column: 5, scope: !2925)
!2987 = !DILocation(line: 450, column: 5, scope: !2925)
!2988 = !DILocation(line: 452, column: 5, scope: !2925)
!2989 = !DILocation(line: 453, column: 5, scope: !2925)
!2990 = !DILocation(line: 454, column: 5, scope: !2925)
!2991 = !DILocation(line: 456, column: 76, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2993, file: !165, line: 456, column: 5)
!2993 = distinct !DILexicalBlock(scope: !2925, file: !165, line: 456, column: 5)
!2994 = !DILocation(line: 456, column: 5, scope: !2993)
!2995 = !DILocation(line: 456, column: 62, scope: !2993)
!2996 = !DILocation(line: 457, column: 17, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2992, file: !165, line: 456, column: 111)
!2998 = !DILocation(line: 457, column: 15, scope: !2997)
!2999 = !DILocation(line: 456, column: 88, scope: !2992)
!3000 = !DILocation(line: 456, column: 93, scope: !2992)
!3001 = !DILocation(line: 456, column: 101, scope: !2992)
!3002 = distinct !{!3002, !2994, !3003}
!3003 = !DILocation(line: 458, column: 5, scope: !2993)
!3004 = !DILocation(line: 461, column: 1, scope: !2925)
!3005 = distinct !DISubprogram(name: "sfc_MacEnable", scope: !165, file: !165, line: 402, type: !938, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3006)
!3006 = !{!3007, !3008}
!3007 = !DILocalVariable(name: "force_qpi", arg: 1, scope: !3005, file: !165, line: 402, type: !7)
!3008 = !DILocalVariable(name: "val", scope: !3005, file: !165, line: 404, type: !195)
!3009 = !DILocation(line: 0, scope: !3005)
!3010 = !DILocation(line: 406, column: 11, scope: !3005)
!3011 = !DILocation(line: 408, column: 9, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3005, file: !165, line: 408, column: 9)
!3013 = !DILocation(line: 408, column: 25, scope: !3012)
!3014 = !DILocation(line: 412, column: 9, scope: !3005)
!3015 = !DILocation(line: 414, column: 5, scope: !3005)
!3016 = !DILocation(line: 415, column: 1, scope: !3005)
!3017 = distinct !DISubprogram(name: "sfc_MacWaitReady", scope: !165, file: !165, line: 384, type: !154, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1305)
!3018 = !DILocation(line: 396, column: 5, scope: !3017)
!3019 = !DILocation(line: 397, column: 5, scope: !3017)
!3020 = !DILocation(line: 399, column: 1, scope: !3017)
!3021 = distinct !DISubprogram(name: "sfc_MacTrigger", scope: !165, file: !165, line: 339, type: !3022, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3024)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!195}
!3024 = !{!3025, !3026}
!3025 = !DILocalVariable(name: "val", scope: !3021, file: !165, line: 341, type: !195)
!3026 = !DILocalVariable(name: "misc_ctl", scope: !3021, file: !165, line: 342, type: !195)
!3027 = !DILocation(line: 0, scope: !3021)
!3028 = !DILocation(line: 344, column: 11, scope: !3021)
!3029 = !DILocation(line: 347, column: 9, scope: !3021)
!3030 = !DILocation(line: 349, column: 5, scope: !3021)
!3031 = !DILocation(line: 352, column: 5, scope: !3021)
!3032 = !DILocation(line: 352, column: 14, scope: !3021)
!3033 = !DILocation(line: 352, column: 44, scope: !3021)
!3034 = !DILocation(line: 352, column: 12, scope: !3021)
!3035 = distinct !{!3035, !3031, !3036}
!3036 = !DILocation(line: 353, column: 9, scope: !3021)
!3037 = !DILocation(line: 354, column: 13, scope: !3021)
!3038 = !DILocation(line: 354, column: 43, scope: !3021)
!3039 = !DILocation(line: 354, column: 5, scope: !3021)
!3040 = distinct !{!3040, !3039, !3041}
!3041 = !DILocation(line: 355, column: 9, scope: !3021)
!3042 = !DILocation(line: 357, column: 5, scope: !3021)
!3043 = distinct !DISubprogram(name: "sfc_MacLeave", scope: !165, file: !165, line: 366, type: !154, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3044)
!3044 = !{!3045}
!3045 = !DILocalVariable(name: "val", scope: !3043, file: !165, line: 368, type: !195)
!3046 = !DILocation(line: 371, column: 11, scope: !3043)
!3047 = !DILocation(line: 0, scope: !3043)
!3048 = !DILocation(line: 372, column: 9, scope: !3043)
!3049 = !DILocation(line: 373, column: 5, scope: !3043)
!3050 = !DILocation(line: 378, column: 11, scope: !3043)
!3051 = !DILocation(line: 379, column: 9, scope: !3043)
!3052 = !DILocation(line: 380, column: 5, scope: !3043)
!3053 = !DILocation(line: 381, column: 1, scope: !3043)
!3054 = distinct !DISubprogram(name: "sfc_clear_gpram", scope: !165, file: !165, line: 463, type: !154, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3055)
!3055 = !{!3056, !3057}
!3056 = !DILocalVariable(name: "i", scope: !3054, file: !165, line: 465, type: !30)
!3057 = !DILocalVariable(name: "p_data", scope: !3054, file: !165, line: 466, type: !177)
!3058 = !DILocation(line: 0, scope: !3054)
!3059 = !DILocation(line: 470, column: 5, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3054, file: !165, line: 470, column: 5)
!3061 = !DILocation(line: 471, column: 9, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3063, file: !165, line: 470, column: 63)
!3063 = distinct !DILexicalBlock(scope: !3060, file: !165, line: 470, column: 5)
!3064 = !DILocation(line: 470, column: 52, scope: !3063)
!3065 = !DILocation(line: 470, column: 59, scope: !3063)
!3066 = !DILocation(line: 470, column: 19, scope: !3063)
!3067 = distinct !{!3067, !3059, !3068}
!3068 = !DILocation(line: 472, column: 5, scope: !3060)
!3069 = !DILocation(line: 475, column: 1, scope: !3054)
!3070 = distinct !DISubprogram(name: "sfc_read", scope: !165, file: !165, line: 478, type: !3071, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3073)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!7, !193, !2928, !177, !2928}
!3073 = !{!3074, !3075, !3076, !3077}
!3074 = !DILocalVariable(name: "cmd", arg: 1, scope: !3070, file: !165, line: 478, type: !193)
!3075 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3070, file: !165, line: 478, type: !2928)
!3076 = !DILocalVariable(name: "data", arg: 3, scope: !3070, file: !165, line: 478, type: !177)
!3077 = !DILocalVariable(name: "data_len", arg: 4, scope: !3070, file: !165, line: 478, type: !2928)
!3078 = !DILocation(line: 0, scope: !3070)
!3079 = !DILocation(line: 480, column: 12, scope: !3070)
!3080 = !DILocation(line: 480, column: 5, scope: !3070)
!3081 = distinct !DISubprogram(name: "sfc_write", scope: !165, file: !165, line: 490, type: !3082, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3084)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{!7, !193, !2928, !193, !2928}
!3084 = !{!3085, !3086, !3087, !3088, !3089, !3093}
!3085 = !DILocalVariable(name: "cmd", arg: 1, scope: !3081, file: !165, line: 490, type: !193)
!3086 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3081, file: !165, line: 490, type: !2928)
!3087 = !DILocalVariable(name: "data", arg: 3, scope: !3081, file: !165, line: 490, type: !193)
!3088 = !DILocalVariable(name: "data_len", arg: 4, scope: !3081, file: !165, line: 490, type: !2928)
!3089 = !DILocalVariable(name: "tmp", scope: !3081, file: !165, line: 492, type: !3090)
!3090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 1280, elements: !3091)
!3091 = !{!3092}
!3092 = !DISubrange(count: 160)
!3093 = !DILocalVariable(name: "total", scope: !3081, file: !165, line: 493, type: !7)
!3094 = !DILocation(line: 0, scope: !3081)
!3095 = !DILocation(line: 492, column: 5, scope: !3081)
!3096 = !DILocation(line: 492, column: 19, scope: !3081)
!3097 = !DILocation(line: 493, column: 25, scope: !3081)
!3098 = !DILocation(line: 495, column: 15, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3081, file: !165, line: 495, column: 9)
!3100 = !DILocation(line: 495, column: 9, scope: !3081)
!3101 = !DILocation(line: 496, column: 9, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3103, file: !165, line: 496, column: 9)
!3103 = distinct !DILexicalBlock(scope: !3104, file: !165, line: 496, column: 9)
!3104 = distinct !DILexicalBlock(scope: !3099, file: !165, line: 495, column: 31)
!3105 = distinct !{!3105, !3101, !3101}
!3106 = !DILocation(line: 498, column: 5, scope: !3081)
!3107 = !DILocation(line: 500, column: 9, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3081, file: !165, line: 500, column: 9)
!3109 = !DILocation(line: 500, column: 14, scope: !3108)
!3110 = !DILocation(line: 501, column: 17, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3108, file: !165, line: 500, column: 27)
!3112 = !DILocation(line: 501, column: 9, scope: !3111)
!3113 = !DILocation(line: 502, column: 5, scope: !3111)
!3114 = !DILocation(line: 503, column: 12, scope: !3081)
!3115 = !DILocation(line: 504, column: 1, scope: !3081)
!3116 = !DILocation(line: 503, column: 5, scope: !3081)
!3117 = distinct !DISubprogram(name: "sfc_security_write_crc", scope: !165, file: !165, line: 506, type: !3118, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3120)
!3118 = !DISubroutineType(types: !3119)
!3119 = !{!7, !193, !2928}
!3120 = !{!3121, !3122, !3123, !3124, !3125}
!3121 = !DILocalVariable(name: "cmd", arg: 1, scope: !3117, file: !165, line: 506, type: !193)
!3122 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3117, file: !165, line: 506, type: !2928)
!3123 = !DILocalVariable(name: "tmp", scope: !3117, file: !165, line: 508, type: !3090)
!3124 = !DILocalVariable(name: "crc", scope: !3117, file: !165, line: 509, type: !195)
!3125 = !DILocalVariable(name: "total", scope: !3117, file: !165, line: 510, type: !7)
!3126 = !DILocation(line: 0, scope: !3117)
!3127 = !DILocation(line: 508, column: 5, scope: !3117)
!3128 = !DILocation(line: 508, column: 19, scope: !3117)
!3129 = !DILocation(line: 509, column: 5, scope: !3117)
!3130 = !DILocation(line: 509, column: 25, scope: !3117)
!3131 = !DILocation(line: 509, column: 19, scope: !3117)
!3132 = !DILocation(line: 510, column: 25, scope: !3117)
!3133 = !DILocation(line: 514, column: 5, scope: !3117)
!3134 = !DILocation(line: 515, column: 13, scope: !3117)
!3135 = !DILocation(line: 515, column: 5, scope: !3117)
!3136 = !DILocation(line: 517, column: 12, scope: !3117)
!3137 = !DILocation(line: 518, column: 1, scope: !3117)
!3138 = !DILocation(line: 517, column: 5, scope: !3117)
!3139 = distinct !DISubprogram(name: "__sfc_write", scope: !165, file: !165, line: 538, type: !2926, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !3140)
!3140 = !{!3141, !3142, !3143, !3144, !3145, !3146, !3147}
!3141 = !DILocalVariable(name: "cmd", arg: 1, scope: !3139, file: !165, line: 538, type: !193)
!3142 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3139, file: !165, line: 538, type: !2928)
!3143 = !DILocalVariable(name: "data", arg: 3, scope: !3139, file: !165, line: 538, type: !177)
!3144 = !DILocalVariable(name: "data_len", arg: 4, scope: !3139, file: !165, line: 538, type: !2928)
!3145 = !DILocalVariable(name: "security_enable", arg: 5, scope: !3139, file: !165, line: 538, type: !30)
!3146 = !DILocalVariable(name: "tmp", scope: !3139, file: !165, line: 540, type: !3090)
!3147 = !DILocalVariable(name: "total", scope: !3139, file: !165, line: 541, type: !7)
!3148 = !DILocation(line: 0, scope: !3139)
!3149 = !DILocation(line: 540, column: 5, scope: !3139)
!3150 = !DILocation(line: 540, column: 19, scope: !3139)
!3151 = !DILocation(line: 541, column: 25, scope: !3139)
!3152 = !DILocation(line: 543, column: 15, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3139, file: !165, line: 543, column: 9)
!3154 = !DILocation(line: 543, column: 9, scope: !3139)
!3155 = !DILocation(line: 544, column: 9, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3157, file: !165, line: 544, column: 9)
!3157 = distinct !DILexicalBlock(scope: !3158, file: !165, line: 544, column: 9)
!3158 = distinct !DILexicalBlock(scope: !3153, file: !165, line: 543, column: 30)
!3159 = distinct !{!3159, !3155, !3155}
!3160 = !DILocation(line: 546, column: 5, scope: !3139)
!3161 = !DILocation(line: 548, column: 9, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3139, file: !165, line: 548, column: 9)
!3163 = !DILocation(line: 548, column: 14, scope: !3162)
!3164 = !DILocation(line: 549, column: 17, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3162, file: !165, line: 548, column: 27)
!3166 = !DILocation(line: 549, column: 9, scope: !3165)
!3167 = !DILocation(line: 550, column: 5, scope: !3165)
!3168 = !DILocation(line: 551, column: 12, scope: !3139)
!3169 = !DILocation(line: 552, column: 1, scope: !3139)
!3170 = !DILocation(line: 551, column: 5, scope: !3139)
!3171 = distinct !DISubprogram(name: "flash_suspend_Winbond", scope: !184, file: !184, line: 186, type: !154, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1305)
!3172 = !DILocation(line: 188, column: 5, scope: !3171)
!3173 = !DILocation(line: 189, column: 5, scope: !3171)
!3174 = distinct !DISubprogram(name: "flash_resume_Winbond", scope: !184, file: !184, line: 195, type: !154, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1305)
!3175 = !DILocation(line: 197, column: 5, scope: !3174)
!3176 = !DILocation(line: 198, column: 5, scope: !3174)
!3177 = distinct !DISubprogram(name: "flash_check_device", scope: !184, file: !184, line: 276, type: !2824, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3178)
!3178 = !{!3179, !3180, !3181, !3183}
!3179 = !DILocalVariable(name: "i", scope: !3177, file: !184, line: 278, type: !7)
!3180 = !DILocalVariable(name: "jedec", scope: !3177, file: !184, line: 279, type: !195)
!3181 = !DILocalVariable(name: "buf", scope: !3177, file: !184, line: 280, type: !3182)
!3182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 40, elements: !541)
!3183 = !DILocalVariable(name: "info", scope: !3177, file: !184, line: 281, type: !196)
!3184 = !DILocation(line: 280, column: 5, scope: !3177)
!3185 = !DILocation(line: 280, column: 19, scope: !3177)
!3186 = !DILocation(line: 283, column: 5, scope: !3177)
!3187 = !DILocation(line: 284, column: 45, scope: !3177)
!3188 = !DILocation(line: 284, column: 30, scope: !3177)
!3189 = !DILocation(line: 284, column: 52, scope: !3177)
!3190 = !DILocation(line: 284, column: 77, scope: !3177)
!3191 = !DILocation(line: 284, column: 62, scope: !3177)
!3192 = !DILocation(line: 284, column: 84, scope: !3177)
!3193 = !DILocation(line: 284, column: 59, scope: !3177)
!3194 = !DILocation(line: 0, scope: !3177)
!3195 = !DILocation(line: 286, column: 23, scope: !3177)
!3196 = !DILocation(line: 286, column: 21, scope: !3177)
!3197 = !DILocation(line: 288, column: 5, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3177, file: !184, line: 288, column: 5)
!3199 = !DILocation(line: 290, column: 19, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3201, file: !184, line: 290, column: 13)
!3201 = distinct !DILexicalBlock(scope: !3202, file: !184, line: 288, column: 70)
!3202 = distinct !DILexicalBlock(scope: !3198, file: !184, line: 288, column: 5)
!3203 = !DILocation(line: 290, column: 22, scope: !3200)
!3204 = !DILocation(line: 290, column: 32, scope: !3200)
!3205 = !DILocation(line: 290, column: 41, scope: !3200)
!3206 = !DILocation(line: 290, column: 50, scope: !3200)
!3207 = !DILocation(line: 290, column: 13, scope: !3201)
!3208 = !DILocation(line: 289, column: 17, scope: !3201)
!3209 = !DILocation(line: 291, column: 27, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3200, file: !184, line: 290, column: 60)
!3211 = !DILocation(line: 292, column: 26, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3210, file: !184, line: 292, column: 17)
!3213 = !DILocation(line: 292, column: 17, scope: !3210)
!3214 = !DILocation(line: 294, column: 33, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3212, file: !184, line: 294, column: 24)
!3216 = !DILocation(line: 294, column: 24, scope: !3212)
!3217 = !DILocation(line: 296, column: 33, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3215, file: !184, line: 296, column: 24)
!3219 = !DILocation(line: 296, column: 24, scope: !3215)
!3220 = !DILocation(line: 298, column: 31, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3222, file: !184, line: 298, column: 20)
!3222 = distinct !DILexicalBlock(scope: !3218, file: !184, line: 296, column: 48)
!3223 = !DILocation(line: 298, column: 49, scope: !3221)
!3224 = !DILocation(line: 0, scope: !3221)
!3225 = !DILocation(line: 303, column: 13, scope: !3222)
!3226 = !DILocation(line: 303, column: 33, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3218, file: !184, line: 303, column: 24)
!3228 = !DILocation(line: 303, column: 24, scope: !3218)
!3229 = !DILocation(line: 0, scope: !3212)
!3230 = !DILocation(line: 308, column: 30, scope: !3210)
!3231 = !DILocation(line: 288, column: 66, scope: !3202)
!3232 = !DILocation(line: 288, column: 19, scope: !3202)
!3233 = distinct !{!3233, !3197, !3234}
!3234 = !DILocation(line: 311, column: 5, scope: !3198)
!3235 = !DILocation(line: 313, column: 19, scope: !3177)
!3236 = !DILocation(line: 315, column: 9, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3177, file: !184, line: 315, column: 9)
!3238 = !DILocation(line: 315, column: 26, scope: !3237)
!3239 = !DILocation(line: 315, column: 9, scope: !3177)
!3240 = !DILocation(line: 316, column: 51, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3237, file: !184, line: 315, column: 47)
!3242 = !DILocation(line: 316, column: 23, scope: !3241)
!3243 = !DILocation(line: 318, column: 19, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3241, file: !184, line: 318, column: 13)
!3245 = !DILocation(line: 318, column: 25, scope: !3244)
!3246 = !DILocation(line: 318, column: 22, scope: !3244)
!3247 = !DILocation(line: 318, column: 32, scope: !3244)
!3248 = !DILocation(line: 318, column: 41, scope: !3244)
!3249 = !DILocation(line: 318, column: 50, scope: !3244)
!3250 = !DILocation(line: 318, column: 13, scope: !3241)
!3251 = !DILocation(line: 322, column: 13, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3244, file: !184, line: 321, column: 16)
!3253 = !DILocation(line: 323, column: 13, scope: !3252)
!3254 = !DILocation(line: 325, column: 5, scope: !3241)
!3255 = !DILocation(line: 329, column: 1, scope: !3177)
!3256 = distinct !DISubprogram(name: "flash_read_jedec_id", scope: !184, file: !184, line: 495, type: !3257, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3259)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{!7, !177, !7}
!3259 = !{!3260, !3261, !3262, !3263}
!3260 = !DILocalVariable(name: "buf", arg: 1, scope: !3256, file: !184, line: 495, type: !177)
!3261 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3256, file: !184, line: 495, type: !7)
!3262 = !DILocalVariable(name: "code", scope: !3256, file: !184, line: 497, type: !58)
!3263 = !DILocalVariable(name: "rc", scope: !3256, file: !184, line: 498, type: !7)
!3264 = !DILocation(line: 0, scope: !3256)
!3265 = !DILocation(line: 497, column: 5, scope: !3256)
!3266 = !DILocation(line: 499, column: 10, scope: !3256)
!3267 = !DILocation(line: 500, column: 10, scope: !3256)
!3268 = !DILocation(line: 503, column: 1, scope: !3256)
!3269 = !DILocation(line: 502, column: 5, scope: !3256)
!3270 = distinct !DISubprogram(name: "flash_switch_mode", scope: !184, file: !184, line: 331, type: !3271, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3273)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{null, !195}
!3273 = !{!3274}
!3274 = !DILocalVariable(name: "mode", arg: 1, scope: !3270, file: !184, line: 331, type: !195)
!3275 = !DILocation(line: 0, scope: !3270)
!3276 = !DILocation(line: 333, column: 9, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3270, file: !184, line: 333, column: 9)
!3278 = !DILocation(line: 333, column: 34, scope: !3277)
!3279 = !DILocation(line: 333, column: 9, scope: !3270)
!3280 = !DILocation(line: 335, column: 26, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3277, file: !184, line: 333, column: 43)
!3282 = !DILocation(line: 336, column: 5, scope: !3281)
!3283 = !DILocation(line: 338, column: 5, scope: !3270)
!3284 = !DILocation(line: 339, column: 5, scope: !3270)
!3285 = !DILocation(line: 341, column: 9, scope: !3270)
!3286 = !DILocation(line: 342, column: 9, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3288, file: !184, line: 341, column: 22)
!3288 = distinct !DILexicalBlock(scope: !3270, file: !184, line: 341, column: 9)
!3289 = !DILocation(line: 343, column: 5, scope: !3287)
!3290 = !DILocation(line: 344, column: 12, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3292, file: !184, line: 344, column: 12)
!3292 = distinct !DILexicalBlock(scope: !3293, file: !184, line: 343, column: 30)
!3293 = distinct !DILexicalBlock(scope: !3288, file: !184, line: 343, column: 16)
!3294 = !DILocation(line: 344, column: 29, scope: !3291)
!3295 = !DILocation(line: 344, column: 12, scope: !3292)
!3296 = !DILocation(line: 345, column: 13, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3291, file: !184, line: 344, column: 48)
!3298 = !DILocation(line: 346, column: 9, scope: !3297)
!3299 = !DILocation(line: 347, column: 13, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3291, file: !184, line: 346, column: 16)
!3301 = !DILocation(line: 350, column: 9, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3303, file: !184, line: 349, column: 29)
!3303 = distinct !DILexicalBlock(scope: !3293, file: !184, line: 349, column: 16)
!3304 = !DILocation(line: 352, column: 9, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !184, line: 352, column: 9)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !184, line: 352, column: 9)
!3307 = distinct !DILexicalBlock(scope: !3303, file: !184, line: 351, column: 12)
!3308 = distinct !{!3308, !3304, !3304}
!3309 = !DILocation(line: 354, column: 21, scope: !3270)
!3310 = !DILocation(line: 355, column: 1, scope: !3270)
!3311 = distinct !DISubprogram(name: "flash_Switch_Device_Mode", scope: !184, file: !184, line: 215, type: !2725, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3312)
!3312 = !{!3313, !3314}
!3313 = !DILocalVariable(name: "mode", arg: 1, scope: !3311, file: !184, line: 215, type: !61)
!3314 = !DILocalVariable(name: "ptr", scope: !3311, file: !184, line: 217, type: !193)
!3315 = !DILocation(line: 0, scope: !3311)
!3316 = !DILocation(line: 220, column: 5, scope: !3311)
!3317 = !DILocation(line: 223, column: 17, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3319, file: !184, line: 223, column: 17)
!3319 = distinct !DILexicalBlock(scope: !3311, file: !184, line: 220, column: 19)
!3320 = !DILocation(line: 223, column: 17, scope: !3319)
!3321 = !DILocation(line: 227, column: 22, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3323, file: !184, line: 227, column: 22)
!3323 = distinct !DILexicalBlock(scope: !3324, file: !184, line: 225, column: 55)
!3324 = distinct !DILexicalBlock(scope: !3318, file: !184, line: 225, column: 23)
!3325 = !DILocation(line: 227, column: 37, scope: !3322)
!3326 = !DILocation(line: 227, column: 22, scope: !3323)
!3327 = !DILocation(line: 230, column: 13, scope: !3323)
!3328 = !DILocation(line: 232, column: 13, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3330, file: !184, line: 230, column: 59)
!3330 = distinct !DILexicalBlock(scope: !3324, file: !184, line: 230, column: 24)
!3331 = !DILocation(line: 233, column: 23, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3333, file: !184, line: 232, column: 61)
!3333 = distinct !DILexicalBlock(scope: !3330, file: !184, line: 232, column: 24)
!3334 = !DILocation(line: 234, column: 13, scope: !3332)
!3335 = !DILocation(line: 239, column: 17, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3319, file: !184, line: 239, column: 17)
!3337 = !DILocation(line: 239, column: 17, scope: !3319)
!3338 = !DILocation(line: 243, column: 22, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3340, file: !184, line: 243, column: 22)
!3340 = distinct !DILexicalBlock(scope: !3341, file: !184, line: 241, column: 55)
!3341 = distinct !DILexicalBlock(scope: !3336, file: !184, line: 241, column: 23)
!3342 = !DILocation(line: 243, column: 37, scope: !3339)
!3343 = !DILocation(line: 243, column: 22, scope: !3340)
!3344 = !DILocation(line: 246, column: 13, scope: !3340)
!3345 = !DILocation(line: 248, column: 13, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3347, file: !184, line: 246, column: 59)
!3347 = distinct !DILexicalBlock(scope: !3341, file: !184, line: 246, column: 24)
!3348 = !DILocation(line: 249, column: 23, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3350, file: !184, line: 248, column: 61)
!3350 = distinct !DILexicalBlock(scope: !3347, file: !184, line: 248, column: 24)
!3351 = !DILocation(line: 250, column: 13, scope: !3349)
!3352 = !DILocation(line: 254, column: 17, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3319, file: !184, line: 254, column: 17)
!3354 = !DILocation(line: 254, column: 17, scope: !3319)
!3355 = !DILocation(line: 258, column: 22, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3357, file: !184, line: 258, column: 22)
!3357 = distinct !DILexicalBlock(scope: !3358, file: !184, line: 256, column: 55)
!3358 = distinct !DILexicalBlock(scope: !3353, file: !184, line: 256, column: 23)
!3359 = !DILocation(line: 258, column: 37, scope: !3356)
!3360 = !DILocation(line: 258, column: 22, scope: !3357)
!3361 = !DILocation(line: 261, column: 13, scope: !3357)
!3362 = !DILocation(line: 263, column: 13, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3364, file: !184, line: 261, column: 59)
!3364 = distinct !DILexicalBlock(scope: !3358, file: !184, line: 261, column: 24)
!3365 = !DILocation(line: 264, column: 23, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !184, line: 263, column: 61)
!3367 = distinct !DILexicalBlock(scope: !3364, file: !184, line: 263, column: 24)
!3368 = !DILocation(line: 265, column: 13, scope: !3366)
!3369 = !DILocation(line: 268, column: 13, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !184, line: 268, column: 13)
!3371 = distinct !DILexicalBlock(scope: !3319, file: !184, line: 268, column: 13)
!3372 = distinct !{!3372, !3369, !3369}
!3373 = !DILocation(line: 272, column: 5, scope: !3311)
!3374 = !DILocation(line: 0, scope: !3319)
!3375 = !DILocation(line: 273, column: 1, scope: !3311)
!3376 = distinct !DISubprogram(name: "flash_config", scope: !184, file: !184, line: 357, type: !154, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3377)
!3377 = !{!3378, !3379, !3380, !3381}
!3378 = !DILocalVariable(name: "i", scope: !3376, file: !184, line: 360, type: !7)
!3379 = !DILocalVariable(name: "jedec", scope: !3376, file: !184, line: 361, type: !195)
!3380 = !DILocalVariable(name: "buf", scope: !3376, file: !184, line: 362, type: !3182)
!3381 = !DILocalVariable(name: "info", scope: !3376, file: !184, line: 363, type: !196)
!3382 = !DILocation(line: 362, column: 5, scope: !3376)
!3383 = !DILocation(line: 362, column: 19, scope: !3376)
!3384 = !DILocation(line: 377, column: 26, scope: !3376)
!3385 = !DILocation(line: 377, column: 24, scope: !3376)
!3386 = !DILocation(line: 380, column: 19, scope: !3376)
!3387 = !DILocation(line: 382, column: 5, scope: !3376)
!3388 = !DILocation(line: 383, column: 45, scope: !3376)
!3389 = !DILocation(line: 383, column: 30, scope: !3376)
!3390 = !DILocation(line: 383, column: 52, scope: !3376)
!3391 = !DILocation(line: 383, column: 77, scope: !3376)
!3392 = !DILocation(line: 383, column: 62, scope: !3376)
!3393 = !DILocation(line: 383, column: 84, scope: !3376)
!3394 = !DILocation(line: 383, column: 59, scope: !3376)
!3395 = !DILocation(line: 0, scope: !3376)
!3396 = !DILocation(line: 385, column: 5, scope: !3376)
!3397 = !DILocation(line: 387, column: 5, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3376, file: !184, line: 387, column: 5)
!3399 = !DILocation(line: 388, column: 17, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !184, line: 387, column: 70)
!3401 = distinct !DILexicalBlock(scope: !3398, file: !184, line: 387, column: 5)
!3402 = !DILocation(line: 389, column: 19, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3400, file: !184, line: 389, column: 13)
!3404 = !DILocation(line: 389, column: 25, scope: !3403)
!3405 = !DILocation(line: 389, column: 22, scope: !3403)
!3406 = !DILocation(line: 389, column: 32, scope: !3403)
!3407 = !DILocation(line: 389, column: 41, scope: !3403)
!3408 = !DILocation(line: 389, column: 50, scope: !3403)
!3409 = !DILocation(line: 389, column: 13, scope: !3400)
!3410 = !DILocation(line: 390, column: 13, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3403, file: !184, line: 389, column: 60)
!3412 = !DILocation(line: 391, column: 27, scope: !3411)
!3413 = !DILocation(line: 392, column: 26, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3411, file: !184, line: 392, column: 17)
!3415 = !DILocation(line: 392, column: 17, scope: !3411)
!3416 = !DILocation(line: 394, column: 33, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3414, file: !184, line: 394, column: 24)
!3418 = !DILocation(line: 394, column: 24, scope: !3414)
!3419 = !DILocation(line: 396, column: 33, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3417, file: !184, line: 396, column: 24)
!3421 = !DILocation(line: 396, column: 24, scope: !3417)
!3422 = !DILocation(line: 398, column: 33, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3420, file: !184, line: 398, column: 24)
!3424 = !DILocation(line: 398, column: 24, scope: !3420)
!3425 = !DILocation(line: 399, column: 34, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3423, file: !184, line: 398, column: 52)
!3427 = !DILocation(line: 404, column: 9, scope: !3376)
!3428 = !DILocation(line: 0, scope: !3414)
!3429 = !DILocation(line: 387, column: 66, scope: !3401)
!3430 = !DILocation(line: 387, column: 19, scope: !3401)
!3431 = distinct !{!3431, !3397, !3432}
!3432 = !DILocation(line: 402, column: 5, scope: !3398)
!3433 = !DILocation(line: 404, column: 9, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3376, file: !184, line: 404, column: 9)
!3435 = !DILocation(line: 404, column: 26, scope: !3434)
!3436 = !DILocation(line: 405, column: 51, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3434, file: !184, line: 404, column: 47)
!3438 = !DILocation(line: 405, column: 23, scope: !3437)
!3439 = !DILocation(line: 407, column: 19, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3437, file: !184, line: 407, column: 13)
!3441 = !DILocation(line: 407, column: 25, scope: !3440)
!3442 = !DILocation(line: 407, column: 22, scope: !3440)
!3443 = !DILocation(line: 407, column: 32, scope: !3440)
!3444 = !DILocation(line: 407, column: 41, scope: !3440)
!3445 = !DILocation(line: 407, column: 50, scope: !3440)
!3446 = !DILocation(line: 407, column: 13, scope: !3437)
!3447 = !DILocation(line: 411, column: 13, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3440, file: !184, line: 410, column: 16)
!3449 = !DILocation(line: 412, column: 13, scope: !3448)
!3450 = !DILocation(line: 414, column: 5, scope: !3437)
!3451 = !DILocation(line: 416, column: 10, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3376, file: !184, line: 416, column: 9)
!3453 = !DILocation(line: 416, column: 9, scope: !3376)
!3454 = !DILocation(line: 417, column: 9, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3452, file: !184, line: 416, column: 25)
!3456 = !DILocation(line: 419, column: 23, scope: !3455)
!3457 = !DILocation(line: 420, column: 5, scope: !3455)
!3458 = !DILocation(line: 422, column: 1, scope: !3376)
!3459 = distinct !DISubprogram(name: "flash_init", scope: !184, file: !184, line: 425, type: !938, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3460)
!3460 = !{!3461, !3462, !3463, !3464, !3465}
!3461 = !DILocalVariable(name: "security_enable", arg: 1, scope: !3459, file: !184, line: 425, type: !7)
!3462 = !DILocalVariable(name: "i", scope: !3459, file: !184, line: 427, type: !7)
!3463 = !DILocalVariable(name: "jedec", scope: !3459, file: !184, line: 428, type: !195)
!3464 = !DILocalVariable(name: "buf", scope: !3459, file: !184, line: 429, type: !3182)
!3465 = !DILocalVariable(name: "info", scope: !3459, file: !184, line: 430, type: !196)
!3466 = !DILocation(line: 0, scope: !3459)
!3467 = !DILocation(line: 429, column: 5, scope: !3459)
!3468 = !DILocation(line: 429, column: 19, scope: !3459)
!3469 = !DILocation(line: 436, column: 5, scope: !3459)
!3470 = !DILocation(line: 438, column: 26, scope: !3459)
!3471 = !DILocation(line: 438, column: 24, scope: !3459)
!3472 = !DILocation(line: 440, column: 5, scope: !3459)
!3473 = !DILocation(line: 442, column: 19, scope: !3459)
!3474 = !DILocation(line: 444, column: 5, scope: !3459)
!3475 = !DILocation(line: 445, column: 45, scope: !3459)
!3476 = !DILocation(line: 445, column: 30, scope: !3459)
!3477 = !DILocation(line: 445, column: 52, scope: !3459)
!3478 = !DILocation(line: 445, column: 77, scope: !3459)
!3479 = !DILocation(line: 445, column: 62, scope: !3459)
!3480 = !DILocation(line: 445, column: 84, scope: !3459)
!3481 = !DILocation(line: 445, column: 59, scope: !3459)
!3482 = !DILocation(line: 447, column: 5, scope: !3459)
!3483 = !DILocation(line: 449, column: 5, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3459, file: !184, line: 449, column: 5)
!3485 = !DILocation(line: 450, column: 17, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3487, file: !184, line: 449, column: 70)
!3487 = distinct !DILexicalBlock(scope: !3484, file: !184, line: 449, column: 5)
!3488 = !DILocation(line: 451, column: 19, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3486, file: !184, line: 451, column: 13)
!3490 = !DILocation(line: 451, column: 25, scope: !3489)
!3491 = !DILocation(line: 451, column: 22, scope: !3489)
!3492 = !DILocation(line: 451, column: 32, scope: !3489)
!3493 = !DILocation(line: 451, column: 41, scope: !3489)
!3494 = !DILocation(line: 451, column: 50, scope: !3489)
!3495 = !DILocation(line: 451, column: 13, scope: !3486)
!3496 = !DILocation(line: 452, column: 13, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3489, file: !184, line: 451, column: 60)
!3498 = !DILocation(line: 453, column: 27, scope: !3497)
!3499 = !DILocation(line: 454, column: 9, scope: !3497)
!3500 = !DILocation(line: 449, column: 66, scope: !3487)
!3501 = !DILocation(line: 449, column: 19, scope: !3487)
!3502 = distinct !{!3502, !3483, !3503}
!3503 = !DILocation(line: 455, column: 5, scope: !3484)
!3504 = !DILocation(line: 457, column: 10, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3459, file: !184, line: 457, column: 9)
!3506 = !DILocation(line: 457, column: 9, scope: !3459)
!3507 = !DILocation(line: 458, column: 9, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3505, file: !184, line: 457, column: 25)
!3509 = !DILocation(line: 460, column: 23, scope: !3508)
!3510 = !DILocation(line: 461, column: 5, scope: !3508)
!3511 = !DILocation(line: 462, column: 1, scope: !3459)
!3512 = distinct !DISubprogram(name: "flash_reset", scope: !184, file: !184, line: 170, type: !154, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1305)
!3513 = !DILocation(line: 172, column: 5, scope: !3512)
!3514 = !DILocation(line: 173, column: 5, scope: !3512)
!3515 = !DILocation(line: 176, column: 5, scope: !3512)
!3516 = !DILocation(line: 177, column: 5, scope: !3512)
!3517 = !DILocation(line: 179, column: 5, scope: !3512)
!3518 = distinct !DISubprogram(name: "flash_wait_ready", scope: !184, file: !184, line: 469, type: !3519, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3521)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!7, !7}
!3521 = !{!3522, !3523, !3524}
!3522 = !DILocalVariable(name: "sleep_ms", arg: 1, scope: !3518, file: !184, line: 469, type: !7)
!3523 = !DILocalVariable(name: "count", scope: !3518, file: !184, line: 471, type: !7)
!3524 = !DILocalVariable(name: "sr", scope: !3518, file: !184, line: 472, type: !58)
!3525 = !DILocation(line: 0, scope: !3518)
!3526 = !DILocation(line: 472, column: 5, scope: !3518)
!3527 = !DILocation(line: 472, column: 19, scope: !3518)
!3528 = !DILocation(line: 479, column: 28, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !184, line: 479, column: 5)
!3530 = distinct !DILexicalBlock(scope: !3518, file: !184, line: 479, column: 5)
!3531 = !DILocation(line: 479, column: 5, scope: !3530)
!3532 = !DILocation(line: 480, column: 14, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !184, line: 480, column: 13)
!3534 = distinct !DILexicalBlock(scope: !3529, file: !184, line: 479, column: 64)
!3535 = !DILocation(line: 480, column: 34, scope: !3533)
!3536 = !DILocation(line: 480, column: 13, scope: !3534)
!3537 = !DILocation(line: 482, column: 22, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3533, file: !184, line: 482, column: 20)
!3539 = !DILocation(line: 482, column: 25, scope: !3538)
!3540 = !DILocation(line: 482, column: 20, scope: !3533)
!3541 = !DILocation(line: 493, column: 1, scope: !3518)
!3542 = !DILocation(line: 483, column: 13, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3538, file: !184, line: 482, column: 36)
!3544 = !DILocation(line: 486, column: 9, scope: !3534)
!3545 = !DILocation(line: 479, column: 60, scope: !3529)
!3546 = distinct !{!3546, !3531, !3547}
!3547 = !DILocation(line: 488, column: 5, scope: !3530)
!3548 = !DILocation(line: 491, column: 5, scope: !3518)
!3549 = distinct !DISubprogram(name: "flash_read_sr", scope: !184, file: !184, line: 623, type: !3550, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3552)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!7, !177}
!3552 = !{!3553, !3554, !3555}
!3553 = !DILocalVariable(name: "val", arg: 1, scope: !3549, file: !184, line: 623, type: !177)
!3554 = !DILocalVariable(name: "retval", scope: !3549, file: !184, line: 625, type: !7)
!3555 = !DILocalVariable(name: "code", scope: !3549, file: !184, line: 626, type: !58)
!3556 = !DILocation(line: 0, scope: !3549)
!3557 = !DILocation(line: 626, column: 5, scope: !3549)
!3558 = !DILocation(line: 626, column: 19, scope: !3549)
!3559 = !DILocation(line: 628, column: 14, scope: !3549)
!3560 = !DILocation(line: 629, column: 16, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3549, file: !184, line: 629, column: 9)
!3562 = !DILocation(line: 634, column: 1, scope: !3549)
!3563 = distinct !DISubprogram(name: "flash_read_manu_id", scope: !184, file: !184, line: 505, type: !3257, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3564)
!3564 = !{!3565, !3566, !3567, !3568}
!3565 = !DILocalVariable(name: "buf", arg: 1, scope: !3563, file: !184, line: 505, type: !177)
!3566 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3563, file: !184, line: 505, type: !7)
!3567 = !DILocalVariable(name: "code", scope: !3563, file: !184, line: 507, type: !229)
!3568 = !DILocalVariable(name: "rc", scope: !3563, file: !184, line: 508, type: !7)
!3569 = !DILocation(line: 0, scope: !3563)
!3570 = !DILocation(line: 507, column: 5, scope: !3563)
!3571 = !DILocation(line: 507, column: 19, scope: !3563)
!3572 = !DILocation(line: 510, column: 10, scope: !3563)
!3573 = !DILocation(line: 513, column: 1, scope: !3563)
!3574 = !DILocation(line: 512, column: 5, scope: !3563)
!3575 = distinct !DISubprogram(name: "flash_read_manu_id_quad", scope: !184, file: !184, line: 515, type: !3257, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3576)
!3576 = !{!3577, !3578, !3579, !3580}
!3577 = !DILocalVariable(name: "buf", arg: 1, scope: !3575, file: !184, line: 515, type: !177)
!3578 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3575, file: !184, line: 515, type: !7)
!3579 = !DILocalVariable(name: "code", scope: !3575, file: !184, line: 517, type: !229)
!3580 = !DILocalVariable(name: "rc", scope: !3575, file: !184, line: 518, type: !7)
!3581 = !DILocation(line: 0, scope: !3575)
!3582 = !DILocation(line: 517, column: 5, scope: !3575)
!3583 = !DILocation(line: 517, column: 19, scope: !3575)
!3584 = !DILocation(line: 520, column: 10, scope: !3575)
!3585 = !DILocation(line: 523, column: 1, scope: !3575)
!3586 = !DILocation(line: 522, column: 5, scope: !3575)
!3587 = distinct !DISubprogram(name: "flash_read", scope: !184, file: !184, line: 526, type: !3588, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3590)
!3588 = !DISubroutineType(types: !3589)
!3589 = !{!7, !177, !30, !7}
!3590 = !{!3591, !3592, !3593, !3594, !3595}
!3591 = !DILocalVariable(name: "buf", arg: 1, scope: !3587, file: !184, line: 526, type: !177)
!3592 = !DILocalVariable(name: "from", arg: 2, scope: !3587, file: !184, line: 526, type: !30)
!3593 = !DILocalVariable(name: "len", arg: 3, scope: !3587, file: !184, line: 526, type: !7)
!3594 = !DILocalVariable(name: "cmd", scope: !3587, file: !184, line: 528, type: !229)
!3595 = !DILocalVariable(name: "rdlen", scope: !3587, file: !184, line: 529, type: !7)
!3596 = !DILocation(line: 0, scope: !3587)
!3597 = !DILocation(line: 528, column: 5, scope: !3587)
!3598 = !DILocation(line: 528, column: 19, scope: !3587)
!3599 = !DILocation(line: 532, column: 13, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3587, file: !184, line: 532, column: 9)
!3601 = !DILocation(line: 532, column: 9, scope: !3587)
!3602 = !DILocation(line: 537, column: 9, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3587, file: !184, line: 537, column: 9)
!3604 = !DILocation(line: 542, column: 22, scope: !3587)
!3605 = !DILocation(line: 543, column: 12, scope: !3587)
!3606 = !DILocation(line: 544, column: 19, scope: !3587)
!3607 = !DILocation(line: 544, column: 14, scope: !3587)
!3608 = !DILocation(line: 544, column: 5, scope: !3587)
!3609 = !DILocation(line: 544, column: 12, scope: !3587)
!3610 = !DILocation(line: 545, column: 19, scope: !3587)
!3611 = !DILocation(line: 545, column: 14, scope: !3587)
!3612 = !DILocation(line: 545, column: 5, scope: !3587)
!3613 = !DILocation(line: 545, column: 12, scope: !3587)
!3614 = !DILocation(line: 546, column: 14, scope: !3587)
!3615 = !DILocation(line: 546, column: 5, scope: !3587)
!3616 = !DILocation(line: 546, column: 12, scope: !3587)
!3617 = !DILocation(line: 548, column: 13, scope: !3587)
!3618 = !DILocation(line: 553, column: 5, scope: !3587)
!3619 = !DILocation(line: 554, column: 1, scope: !3587)
!3620 = distinct !DISubprogram(name: "flash_fast_read", scope: !184, file: !184, line: 557, type: !3621, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3623)
!3621 = !DISubroutineType(types: !3622)
!3622 = !{!7, !177, !30, !7, !7}
!3623 = !{!3624, !3625, !3626, !3627, !3628, !3630, !3631, !3632}
!3624 = !DILocalVariable(name: "buf", arg: 1, scope: !3620, file: !184, line: 557, type: !177)
!3625 = !DILocalVariable(name: "from", arg: 2, scope: !3620, file: !184, line: 557, type: !30)
!3626 = !DILocalVariable(name: "len", arg: 3, scope: !3620, file: !184, line: 557, type: !7)
!3627 = !DILocalVariable(name: "dummy_cycle", arg: 4, scope: !3620, file: !184, line: 557, type: !7)
!3628 = !DILocalVariable(name: "cmd", scope: !3620, file: !184, line: 559, type: !3629)
!3629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 256, elements: !948)
!3630 = !DILocalVariable(name: "cmd_len", scope: !3620, file: !184, line: 560, type: !7)
!3631 = !DILocalVariable(name: "rdlen", scope: !3620, file: !184, line: 561, type: !7)
!3632 = !DILocalVariable(name: "i", scope: !3620, file: !184, line: 561, type: !7)
!3633 = !DILocation(line: 0, scope: !3620)
!3634 = !DILocation(line: 559, column: 5, scope: !3620)
!3635 = !DILocation(line: 559, column: 19, scope: !3620)
!3636 = !DILocation(line: 564, column: 13, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3620, file: !184, line: 564, column: 9)
!3638 = !DILocation(line: 564, column: 9, scope: !3620)
!3639 = !DILocation(line: 569, column: 9, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3620, file: !184, line: 569, column: 9)
!3641 = !DILocation(line: 574, column: 12, scope: !3620)
!3642 = !DILocation(line: 575, column: 19, scope: !3620)
!3643 = !DILocation(line: 575, column: 14, scope: !3620)
!3644 = !DILocation(line: 575, column: 5, scope: !3620)
!3645 = !DILocation(line: 575, column: 12, scope: !3620)
!3646 = !DILocation(line: 576, column: 19, scope: !3620)
!3647 = !DILocation(line: 576, column: 14, scope: !3620)
!3648 = !DILocation(line: 576, column: 5, scope: !3620)
!3649 = !DILocation(line: 576, column: 12, scope: !3620)
!3650 = !DILocation(line: 577, column: 14, scope: !3620)
!3651 = !DILocation(line: 577, column: 5, scope: !3620)
!3652 = !DILocation(line: 577, column: 12, scope: !3620)
!3653 = !DILocation(line: 580, column: 19, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !184, line: 580, column: 5)
!3655 = distinct !DILexicalBlock(scope: !3620, file: !184, line: 580, column: 5)
!3656 = !DILocation(line: 580, column: 5, scope: !3655)
!3657 = !DILocation(line: 581, column: 15, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3654, file: !184, line: 580, column: 62)
!3659 = !DILocation(line: 581, column: 9, scope: !3658)
!3660 = !DILocation(line: 581, column: 20, scope: !3658)
!3661 = !DILocation(line: 580, column: 58, scope: !3654)
!3662 = !DILocation(line: 580, column: 33, scope: !3654)
!3663 = distinct !{!3663, !3656, !3664}
!3664 = !DILocation(line: 583, column: 5, scope: !3655)
!3665 = !DILocation(line: 585, column: 13, scope: !3620)
!3666 = !DILocation(line: 590, column: 5, scope: !3620)
!3667 = !DILocation(line: 591, column: 1, scope: !3620)
!3668 = distinct !DISubprogram(name: "flash_read_sr2", scope: !184, file: !184, line: 636, type: !3550, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3669)
!3669 = !{!3670, !3671, !3672}
!3670 = !DILocalVariable(name: "val", arg: 1, scope: !3668, file: !184, line: 636, type: !177)
!3671 = !DILocalVariable(name: "retval", scope: !3668, file: !184, line: 638, type: !7)
!3672 = !DILocalVariable(name: "code", scope: !3668, file: !184, line: 639, type: !58)
!3673 = !DILocation(line: 0, scope: !3668)
!3674 = !DILocation(line: 639, column: 5, scope: !3668)
!3675 = !DILocation(line: 641, column: 9, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3668, file: !184, line: 641, column: 9)
!3677 = !DILocation(line: 641, column: 45, scope: !3676)
!3678 = !DILocation(line: 643, column: 14, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3676, file: !184, line: 641, column: 80)
!3680 = !DILocation(line: 644, column: 5, scope: !3679)
!3681 = !DILocation(line: 646, column: 14, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3683, file: !184, line: 644, column: 50)
!3683 = distinct !DILexicalBlock(scope: !3676, file: !184, line: 644, column: 16)
!3684 = !DILocation(line: 647, column: 5, scope: !3682)
!3685 = !DILocation(line: 649, column: 14, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !184, line: 647, column: 52)
!3687 = distinct !DILexicalBlock(scope: !3683, file: !184, line: 647, column: 16)
!3688 = !DILocation(line: 650, column: 5, scope: !3686)
!3689 = !DILocation(line: 652, column: 16, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !184, line: 650, column: 54)
!3691 = distinct !DILexicalBlock(scope: !3687, file: !184, line: 650, column: 16)
!3692 = !DILocation(line: 652, column: 14, scope: !3690)
!3693 = !DILocation(line: 653, column: 5, scope: !3690)
!3694 = !DILocation(line: 655, column: 9, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3691, file: !184, line: 654, column: 10)
!3696 = !DILocation(line: 656, column: 14, scope: !3695)
!3697 = !DILocation(line: 659, column: 14, scope: !3668)
!3698 = !DILocation(line: 660, column: 16, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3668, file: !184, line: 660, column: 9)
!3700 = !DILocation(line: 665, column: 1, scope: !3668)
!3701 = distinct !DISubprogram(name: "flash_unprotect", scope: !184, file: !184, line: 667, type: !2824, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3702)
!3702 = !{!3703}
!3703 = !DILocalVariable(name: "sr", scope: !3701, file: !184, line: 669, type: !58)
!3704 = !DILocation(line: 669, column: 5, scope: !3701)
!3705 = !DILocation(line: 0, scope: !3701)
!3706 = !DILocation(line: 669, column: 19, scope: !3701)
!3707 = !DILocation(line: 671, column: 9, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3701, file: !184, line: 671, column: 9)
!3709 = !DILocation(line: 671, column: 28, scope: !3708)
!3710 = !DILocation(line: 671, column: 9, scope: !3701)
!3711 = !DILocation(line: 676, column: 10, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3701, file: !184, line: 676, column: 9)
!3713 = !DILocation(line: 676, column: 13, scope: !3712)
!3714 = !DILocation(line: 676, column: 43, scope: !3712)
!3715 = !DILocation(line: 676, column: 9, scope: !3701)
!3716 = !DILocation(line: 677, column: 12, scope: !3717)
!3717 = distinct !DILexicalBlock(scope: !3712, file: !184, line: 676, column: 49)
!3718 = !DILocation(line: 678, column: 9, scope: !3717)
!3719 = !DILocation(line: 679, column: 5, scope: !3717)
!3720 = !DILocation(line: 681, column: 1, scope: !3701)
!3721 = distinct !DISubprogram(name: "flash_write_sr", scope: !184, file: !184, line: 609, type: !3550, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3722)
!3722 = !{!3723, !3724, !3725}
!3723 = !DILocalVariable(name: "val", arg: 1, scope: !3721, file: !184, line: 609, type: !177)
!3724 = !DILocalVariable(name: "retval", scope: !3721, file: !184, line: 611, type: !7)
!3725 = !DILocalVariable(name: "code", scope: !3721, file: !184, line: 612, type: !58)
!3726 = !DILocation(line: 0, scope: !3721)
!3727 = !DILocation(line: 612, column: 5, scope: !3721)
!3728 = !DILocation(line: 612, column: 20, scope: !3721)
!3729 = !DILocation(line: 614, column: 14, scope: !3721)
!3730 = !DILocation(line: 621, column: 1, scope: !3721)
!3731 = distinct !DISubprogram(name: "flash_protect", scope: !184, file: !184, line: 686, type: !2824, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3732)
!3732 = !{!3733}
!3733 = !DILocalVariable(name: "sr", scope: !3731, file: !184, line: 688, type: !58)
!3734 = !DILocation(line: 688, column: 5, scope: !3731)
!3735 = !DILocation(line: 0, scope: !3731)
!3736 = !DILocation(line: 688, column: 19, scope: !3731)
!3737 = !DILocation(line: 690, column: 9, scope: !3738)
!3738 = distinct !DILexicalBlock(scope: !3731, file: !184, line: 690, column: 9)
!3739 = !DILocation(line: 690, column: 28, scope: !3738)
!3740 = !DILocation(line: 690, column: 9, scope: !3731)
!3741 = !DILocation(line: 695, column: 8, scope: !3731)
!3742 = !DILocation(line: 696, column: 5, scope: !3731)
!3743 = !DILocation(line: 697, column: 5, scope: !3731)
!3744 = !DILocation(line: 698, column: 1, scope: !3731)
!3745 = distinct !DISubprogram(name: "flash_write_enable", scope: !184, file: !184, line: 701, type: !2824, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3746)
!3746 = !{!3747}
!3747 = !DILocalVariable(name: "code", scope: !3745, file: !184, line: 703, type: !58)
!3748 = !DILocation(line: 703, column: 5, scope: !3745)
!3749 = !DILocation(line: 0, scope: !3745)
!3750 = !DILocation(line: 703, column: 19, scope: !3745)
!3751 = !DILocation(line: 704, column: 12, scope: !3745)
!3752 = !DILocation(line: 705, column: 1, scope: !3745)
!3753 = !DILocation(line: 704, column: 5, scope: !3745)
!3754 = distinct !DISubprogram(name: "flash_write_disable", scope: !184, file: !184, line: 707, type: !2824, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3755)
!3755 = !{!3756}
!3756 = !DILocalVariable(name: "code", scope: !3754, file: !184, line: 709, type: !58)
!3757 = !DILocation(line: 709, column: 5, scope: !3754)
!3758 = !DILocation(line: 0, scope: !3754)
!3759 = !DILocation(line: 709, column: 19, scope: !3754)
!3760 = !DILocation(line: 710, column: 12, scope: !3754)
!3761 = !DILocation(line: 711, column: 1, scope: !3754)
!3762 = !DILocation(line: 710, column: 5, scope: !3754)
!3763 = distinct !DISubprogram(name: "flash_erase_sector", scope: !184, file: !184, line: 713, type: !3764, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3766)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{!7, !30}
!3766 = !{!3767, !3768, !3769, !3770}
!3767 = !DILocalVariable(name: "offset", arg: 1, scope: !3763, file: !184, line: 713, type: !30)
!3768 = !DILocalVariable(name: "buf", scope: !3763, file: !184, line: 715, type: !3182)
!3769 = !DILocalVariable(name: "savedMask", scope: !3763, file: !184, line: 716, type: !61)
!3770 = !DILocalVariable(name: "result", scope: !3763, file: !184, line: 717, type: !478)
!3771 = !DILocation(line: 0, scope: !3763)
!3772 = !DILocation(line: 715, column: 5, scope: !3763)
!3773 = !DILocation(line: 715, column: 19, scope: !3763)
!3774 = !DILocation(line: 720, column: 9, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3763, file: !184, line: 720, column: 9)
!3776 = !DILocation(line: 724, column: 22, scope: !3763)
!3777 = !DILocation(line: 725, column: 5, scope: !3763)
!3778 = !DILocation(line: 726, column: 18, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3763, file: !184, line: 725, column: 8)
!3780 = !DILocation(line: 727, column: 19, scope: !3763)
!3781 = !DILocation(line: 727, column: 5, scope: !3779)
!3782 = distinct !{!3782, !3777, !3783}
!3783 = !DILocation(line: 727, column: 28, scope: !3763)
!3784 = !DILocation(line: 729, column: 17, scope: !3763)
!3785 = !DILocation(line: 732, column: 12, scope: !3763)
!3786 = !DILocation(line: 733, column: 21, scope: !3763)
!3787 = !DILocation(line: 733, column: 14, scope: !3763)
!3788 = !DILocation(line: 733, column: 5, scope: !3763)
!3789 = !DILocation(line: 733, column: 12, scope: !3763)
!3790 = !DILocation(line: 734, column: 21, scope: !3763)
!3791 = !DILocation(line: 734, column: 14, scope: !3763)
!3792 = !DILocation(line: 734, column: 5, scope: !3763)
!3793 = !DILocation(line: 734, column: 12, scope: !3763)
!3794 = !DILocation(line: 735, column: 14, scope: !3763)
!3795 = !DILocation(line: 735, column: 5, scope: !3763)
!3796 = !DILocation(line: 735, column: 12, scope: !3763)
!3797 = !DILocation(line: 736, column: 5, scope: !3763)
!3798 = !DILocation(line: 737, column: 5, scope: !3763)
!3799 = !DILocation(line: 738, column: 5, scope: !3763)
!3800 = !DILocation(line: 740, column: 5, scope: !3763)
!3801 = !DILocation(line: 741, column: 18, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3763, file: !184, line: 740, column: 8)
!3803 = !DILocation(line: 742, column: 19, scope: !3763)
!3804 = !DILocation(line: 742, column: 5, scope: !3802)
!3805 = distinct !{!3805, !3800, !3806}
!3806 = !DILocation(line: 742, column: 28, scope: !3763)
!3807 = !DILocation(line: 744, column: 5, scope: !3763)
!3808 = !DILocation(line: 746, column: 1, scope: !3763)
!3809 = distinct !DISubprogram(name: "flash_erase_sector_32k", scope: !184, file: !184, line: 748, type: !3764, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3810)
!3810 = !{!3811, !3812, !3813, !3814}
!3811 = !DILocalVariable(name: "offset", arg: 1, scope: !3809, file: !184, line: 748, type: !30)
!3812 = !DILocalVariable(name: "buf", scope: !3809, file: !184, line: 750, type: !3182)
!3813 = !DILocalVariable(name: "savedMask", scope: !3809, file: !184, line: 751, type: !61)
!3814 = !DILocalVariable(name: "result", scope: !3809, file: !184, line: 752, type: !478)
!3815 = !DILocation(line: 0, scope: !3809)
!3816 = !DILocation(line: 750, column: 5, scope: !3809)
!3817 = !DILocation(line: 750, column: 19, scope: !3809)
!3818 = !DILocation(line: 755, column: 9, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3809, file: !184, line: 755, column: 9)
!3820 = !DILocation(line: 759, column: 22, scope: !3809)
!3821 = !DILocation(line: 760, column: 5, scope: !3809)
!3822 = !DILocation(line: 761, column: 18, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3809, file: !184, line: 760, column: 8)
!3824 = !DILocation(line: 762, column: 19, scope: !3809)
!3825 = !DILocation(line: 762, column: 5, scope: !3823)
!3826 = distinct !{!3826, !3821, !3827}
!3827 = !DILocation(line: 762, column: 28, scope: !3809)
!3828 = !DILocation(line: 764, column: 17, scope: !3809)
!3829 = !DILocation(line: 765, column: 12, scope: !3809)
!3830 = !DILocation(line: 766, column: 21, scope: !3809)
!3831 = !DILocation(line: 766, column: 14, scope: !3809)
!3832 = !DILocation(line: 766, column: 5, scope: !3809)
!3833 = !DILocation(line: 766, column: 12, scope: !3809)
!3834 = !DILocation(line: 767, column: 21, scope: !3809)
!3835 = !DILocation(line: 767, column: 14, scope: !3809)
!3836 = !DILocation(line: 767, column: 5, scope: !3809)
!3837 = !DILocation(line: 767, column: 12, scope: !3809)
!3838 = !DILocation(line: 768, column: 14, scope: !3809)
!3839 = !DILocation(line: 768, column: 5, scope: !3809)
!3840 = !DILocation(line: 768, column: 12, scope: !3809)
!3841 = !DILocation(line: 769, column: 5, scope: !3809)
!3842 = !DILocation(line: 770, column: 5, scope: !3809)
!3843 = !DILocation(line: 771, column: 5, scope: !3809)
!3844 = !DILocation(line: 772, column: 18, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3809, file: !184, line: 771, column: 8)
!3846 = !DILocation(line: 773, column: 19, scope: !3809)
!3847 = !DILocation(line: 773, column: 5, scope: !3845)
!3848 = distinct !{!3848, !3843, !3849}
!3849 = !DILocation(line: 773, column: 28, scope: !3809)
!3850 = !DILocation(line: 775, column: 5, scope: !3809)
!3851 = !DILocation(line: 777, column: 5, scope: !3809)
!3852 = !DILocation(line: 779, column: 1, scope: !3809)
!3853 = distinct !DISubprogram(name: "flash_erase_page", scope: !184, file: !184, line: 781, type: !3764, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3854)
!3854 = !{!3855, !3856, !3857, !3858}
!3855 = !DILocalVariable(name: "offset", arg: 1, scope: !3853, file: !184, line: 781, type: !30)
!3856 = !DILocalVariable(name: "buf", scope: !3853, file: !184, line: 783, type: !3182)
!3857 = !DILocalVariable(name: "savedMask", scope: !3853, file: !184, line: 784, type: !61)
!3858 = !DILocalVariable(name: "result", scope: !3853, file: !184, line: 785, type: !478)
!3859 = !DILocation(line: 0, scope: !3853)
!3860 = !DILocation(line: 783, column: 5, scope: !3853)
!3861 = !DILocation(line: 783, column: 19, scope: !3853)
!3862 = !DILocation(line: 788, column: 9, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3853, file: !184, line: 788, column: 9)
!3864 = !DILocation(line: 792, column: 22, scope: !3853)
!3865 = !DILocation(line: 793, column: 5, scope: !3853)
!3866 = !DILocation(line: 794, column: 18, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3853, file: !184, line: 793, column: 8)
!3868 = !DILocation(line: 795, column: 19, scope: !3853)
!3869 = !DILocation(line: 795, column: 5, scope: !3867)
!3870 = distinct !{!3870, !3865, !3871}
!3871 = !DILocation(line: 795, column: 28, scope: !3853)
!3872 = !DILocation(line: 798, column: 17, scope: !3853)
!3873 = !DILocation(line: 799, column: 12, scope: !3853)
!3874 = !DILocation(line: 800, column: 21, scope: !3853)
!3875 = !DILocation(line: 800, column: 14, scope: !3853)
!3876 = !DILocation(line: 800, column: 5, scope: !3853)
!3877 = !DILocation(line: 800, column: 12, scope: !3853)
!3878 = !DILocation(line: 801, column: 21, scope: !3853)
!3879 = !DILocation(line: 801, column: 14, scope: !3853)
!3880 = !DILocation(line: 801, column: 5, scope: !3853)
!3881 = !DILocation(line: 801, column: 12, scope: !3853)
!3882 = !DILocation(line: 802, column: 14, scope: !3853)
!3883 = !DILocation(line: 802, column: 5, scope: !3853)
!3884 = !DILocation(line: 802, column: 12, scope: !3853)
!3885 = !DILocation(line: 803, column: 5, scope: !3853)
!3886 = !DILocation(line: 805, column: 5, scope: !3853)
!3887 = !DILocation(line: 806, column: 5, scope: !3853)
!3888 = !DILocation(line: 808, column: 5, scope: !3853)
!3889 = !DILocation(line: 809, column: 18, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3853, file: !184, line: 808, column: 8)
!3891 = !DILocation(line: 810, column: 19, scope: !3853)
!3892 = !DILocation(line: 810, column: 5, scope: !3890)
!3893 = distinct !{!3893, !3888, !3894}
!3894 = !DILocation(line: 810, column: 28, scope: !3853)
!3895 = !DILocation(line: 812, column: 5, scope: !3853)
!3896 = !DILocation(line: 814, column: 1, scope: !3853)
!3897 = distinct !DISubprogram(name: "flash_erase_chip", scope: !184, file: !184, line: 816, type: !2824, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3898)
!3898 = !{!3899}
!3899 = !DILocalVariable(name: "buf", scope: !3897, file: !184, line: 818, type: !3182)
!3900 = !DILocation(line: 818, column: 5, scope: !3897)
!3901 = !DILocation(line: 818, column: 19, scope: !3897)
!3902 = !DILocation(line: 821, column: 9, scope: !3903)
!3903 = distinct !DILexicalBlock(scope: !3897, file: !184, line: 821, column: 9)
!3904 = !DILocation(line: 825, column: 22, scope: !3897)
!3905 = !DILocation(line: 827, column: 5, scope: !3897)
!3906 = !DILocation(line: 828, column: 5, scope: !3897)
!3907 = !DILocation(line: 830, column: 12, scope: !3897)
!3908 = !DILocation(line: 832, column: 5, scope: !3897)
!3909 = !DILocation(line: 834, column: 9, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3897, file: !184, line: 834, column: 9)
!3911 = !DILocation(line: 838, column: 5, scope: !3897)
!3912 = !DILocation(line: 839, column: 22, scope: !3897)
!3913 = !DILocation(line: 841, column: 1, scope: !3897)
!3914 = distinct !DISubprogram(name: "flash_erase", scope: !184, file: !184, line: 844, type: !3915, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3917)
!3915 = !DISubroutineType(types: !3916)
!3916 = !{!7, !30, !7}
!3917 = !{!3918, !3919}
!3918 = !DILocalVariable(name: "offs", arg: 1, scope: !3914, file: !184, line: 844, type: !30)
!3919 = !DILocalVariable(name: "len", arg: 2, scope: !3914, file: !184, line: 844, type: !7)
!3920 = !DILocation(line: 0, scope: !3914)
!3921 = !DILocation(line: 849, column: 9, scope: !3914)
!3922 = !DILocation(line: 855, column: 13, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3924, file: !184, line: 855, column: 13)
!3924 = distinct !DILexicalBlock(scope: !3914, file: !184, line: 854, column: 21)
!3925 = !DILocation(line: 859, column: 17, scope: !3924)
!3926 = !DILocation(line: 859, column: 32, scope: !3924)
!3927 = !DILocation(line: 859, column: 14, scope: !3924)
!3928 = !DILocation(line: 860, column: 13, scope: !3924)
!3929 = !DILocation(line: 854, column: 16, scope: !3914)
!3930 = !DILocation(line: 854, column: 5, scope: !3914)
!3931 = distinct !{!3931, !3930, !3932}
!3932 = !DILocation(line: 861, column: 5, scope: !3914)
!3933 = !DILocation(line: 864, column: 1, scope: !3914)
!3934 = distinct !DISubprogram(name: "flash_write", scope: !184, file: !184, line: 868, type: !3935, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !3937)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!7, !193, !30, !7}
!3937 = !{!3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951}
!3938 = !DILocalVariable(name: "buf", arg: 1, scope: !3934, file: !184, line: 868, type: !193)
!3939 = !DILocalVariable(name: "to", arg: 2, scope: !3934, file: !184, line: 868, type: !30)
!3940 = !DILocalVariable(name: "len", arg: 3, scope: !3934, file: !184, line: 868, type: !7)
!3941 = !DILocalVariable(name: "page_offset", scope: !3934, file: !184, line: 870, type: !195)
!3942 = !DILocalVariable(name: "page_size", scope: !3934, file: !184, line: 870, type: !195)
!3943 = !DILocalVariable(name: "rc", scope: !3934, file: !184, line: 871, type: !7)
!3944 = !DILocalVariable(name: "retlen", scope: !3934, file: !184, line: 871, type: !7)
!3945 = !DILocalVariable(name: "mode", scope: !3934, file: !184, line: 872, type: !7)
!3946 = !DILocalVariable(name: "cmd", scope: !3934, file: !184, line: 873, type: !3182)
!3947 = !DILocalVariable(name: "result", scope: !3934, file: !184, line: 874, type: !478)
!3948 = !DILocalVariable(name: "savedMask", scope: !3934, file: !184, line: 875, type: !61)
!3949 = !DILocalVariable(name: "To", scope: !3934, file: !184, line: 877, type: !61)
!3950 = !DILocalVariable(name: "Buf", scope: !3934, file: !184, line: 878, type: !1447)
!3951 = !DILocalVariable(name: "p_data_first", scope: !3934, file: !184, line: 879, type: !1447)
!3952 = !DILocation(line: 0, scope: !3934)
!3953 = !DILocation(line: 873, column: 5, scope: !3934)
!3954 = !DILocation(line: 873, column: 19, scope: !3934)
!3955 = !DILocation(line: 882, column: 13, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3934, file: !184, line: 882, column: 9)
!3957 = !DILocation(line: 882, column: 9, scope: !3934)
!3958 = !DILocation(line: 886, column: 12, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3934, file: !184, line: 886, column: 9)
!3960 = !DILocation(line: 886, column: 20, scope: !3959)
!3961 = !DILocation(line: 886, column: 35, scope: !3959)
!3962 = !DILocation(line: 886, column: 62, scope: !3959)
!3963 = !DILocation(line: 886, column: 45, scope: !3959)
!3964 = !DILocation(line: 886, column: 18, scope: !3959)
!3965 = !DILocation(line: 886, column: 9, scope: !3934)
!3966 = !DILocation(line: 891, column: 9, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3934, file: !184, line: 891, column: 9)
!3968 = !DILocation(line: 896, column: 18, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3934, file: !184, line: 895, column: 8)
!3970 = !DILocation(line: 897, column: 19, scope: !3934)
!3971 = !DILocation(line: 897, column: 5, scope: !3969)
!3972 = distinct !{!3972, !3973, !3974}
!3973 = !DILocation(line: 895, column: 5, scope: !3934)
!3974 = !DILocation(line: 897, column: 28, scope: !3934)
!3975 = !DILocation(line: 899, column: 22, scope: !3934)
!3976 = !DILocation(line: 901, column: 12, scope: !3934)
!3977 = !DILocation(line: 903, column: 15, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3934, file: !184, line: 903, column: 9)
!3979 = !DILocation(line: 903, column: 24, scope: !3978)
!3980 = !DILocation(line: 903, column: 27, scope: !3978)
!3981 = !DILocation(line: 903, column: 43, scope: !3978)
!3982 = !DILocation(line: 903, column: 9, scope: !3934)
!3983 = !DILocation(line: 0, scope: !3978)
!3984 = !DILocation(line: 913, column: 16, scope: !3934)
!3985 = !DILocation(line: 913, column: 5, scope: !3934)
!3986 = !DILocation(line: 910, column: 24, scope: !3934)
!3987 = !DILocation(line: 910, column: 22, scope: !3934)
!3988 = !DILocation(line: 952, column: 5, scope: !3934)
!3989 = !DILocation(line: 914, column: 21, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3934, file: !184, line: 913, column: 21)
!3991 = !DILocation(line: 919, column: 21, scope: !3990)
!3992 = !DILocation(line: 919, column: 18, scope: !3990)
!3993 = !DILocation(line: 919, column: 16, scope: !3990)
!3994 = !DILocation(line: 920, column: 21, scope: !3990)
!3995 = !DILocation(line: 920, column: 18, scope: !3990)
!3996 = !DILocation(line: 920, column: 16, scope: !3990)
!3997 = !DILocation(line: 921, column: 18, scope: !3990)
!3998 = !DILocation(line: 921, column: 16, scope: !3990)
!3999 = !DILocation(line: 923, column: 13, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3990, file: !184, line: 923, column: 13)
!4001 = !DILocation(line: 927, column: 9, scope: !3990)
!4002 = !DILocation(line: 928, column: 21, scope: !3990)
!4003 = !DILocation(line: 929, column: 9, scope: !3990)
!4004 = !DILocation(line: 930, column: 14, scope: !3990)
!4005 = !DILocation(line: 931, column: 9, scope: !3990)
!4006 = !DILocation(line: 933, column: 9, scope: !3990)
!4007 = !DILocation(line: 934, column: 86, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3990, file: !184, line: 933, column: 12)
!4009 = !DILocation(line: 934, column: 22, scope: !4008)
!4010 = !DILocation(line: 935, column: 20, scope: !3990)
!4011 = !DILocation(line: 935, column: 9, scope: !4008)
!4012 = distinct !{!4012, !4006, !4013}
!4013 = !DILocation(line: 935, column: 29, scope: !3990)
!4014 = !DILocation(line: 937, column: 16, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !3990, file: !184, line: 937, column: 13)
!4016 = !DILocation(line: 937, column: 13, scope: !3990)
!4017 = !DILocation(line: 938, column: 20, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4015, file: !184, line: 937, column: 21)
!4019 = !DILocation(line: 939, column: 20, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4018, file: !184, line: 939, column: 17)
!4021 = !DILocation(line: 939, column: 17, scope: !4018)
!4022 = !DILocation(line: 941, column: 17, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4020, file: !184, line: 939, column: 33)
!4024 = !DILocation(line: 942, column: 17, scope: !4023)
!4025 = !DILocation(line: 947, column: 13, scope: !3990)
!4026 = distinct !{!4026, !3985, !4027}
!4027 = !DILocation(line: 950, column: 5, scope: !3934)
!4028 = !DILocation(line: 949, column: 13, scope: !3990)
!4029 = !DILocation(line: 948, column: 12, scope: !3990)
!4030 = !DILocation(line: 953, column: 18, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !3934, file: !184, line: 952, column: 8)
!4032 = !DILocation(line: 954, column: 19, scope: !3934)
!4033 = !DILocation(line: 954, column: 5, scope: !4031)
!4034 = distinct !{!4034, !3988, !4035}
!4035 = !DILocation(line: 954, column: 28, scope: !3934)
!4036 = !DILocation(line: 956, column: 5, scope: !3934)
!4037 = !DILocation(line: 957, column: 5, scope: !3934)
!4038 = !DILocation(line: 958, column: 1, scope: !3934)
!4039 = distinct !DISubprogram(name: "flash_erase_write_security_crc", scope: !184, file: !184, line: 963, type: !3764, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !4040)
!4040 = !{!4041, !4042, !4043, !4044}
!4041 = !DILocalVariable(name: "to", arg: 1, scope: !4039, file: !184, line: 963, type: !30)
!4042 = !DILocalVariable(name: "len", scope: !4039, file: !184, line: 965, type: !7)
!4043 = !DILocalVariable(name: "rc", scope: !4039, file: !184, line: 965, type: !7)
!4044 = !DILocalVariable(name: "cmd", scope: !4039, file: !184, line: 966, type: !3182)
!4045 = !DILocation(line: 0, scope: !4039)
!4046 = !DILocation(line: 966, column: 5, scope: !4039)
!4047 = !DILocation(line: 966, column: 19, scope: !4039)
!4048 = !DILocation(line: 968, column: 12, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4039, file: !184, line: 968, column: 9)
!4050 = !DILocation(line: 968, column: 9, scope: !4039)
!4051 = !DILocation(line: 972, column: 12, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4039, file: !184, line: 972, column: 9)
!4053 = !DILocation(line: 972, column: 20, scope: !4052)
!4054 = !DILocation(line: 972, column: 35, scope: !4052)
!4055 = !DILocation(line: 972, column: 62, scope: !4052)
!4056 = !DILocation(line: 972, column: 45, scope: !4052)
!4057 = !DILocation(line: 972, column: 18, scope: !4052)
!4058 = !DILocation(line: 972, column: 9, scope: !4039)
!4059 = !DILocation(line: 976, column: 22, scope: !4039)
!4060 = !DILocation(line: 979, column: 9, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4039, file: !184, line: 979, column: 9)
!4062 = !DILocation(line: 983, column: 5, scope: !4039)
!4063 = !DILocation(line: 985, column: 12, scope: !4039)
!4064 = !DILocation(line: 986, column: 17, scope: !4039)
!4065 = !DILocation(line: 986, column: 14, scope: !4039)
!4066 = !DILocation(line: 986, column: 5, scope: !4039)
!4067 = !DILocation(line: 986, column: 12, scope: !4039)
!4068 = !DILocation(line: 987, column: 17, scope: !4039)
!4069 = !DILocation(line: 987, column: 14, scope: !4039)
!4070 = !DILocation(line: 987, column: 5, scope: !4039)
!4071 = !DILocation(line: 987, column: 12, scope: !4039)
!4072 = !DILocation(line: 988, column: 14, scope: !4039)
!4073 = !DILocation(line: 988, column: 5, scope: !4039)
!4074 = !DILocation(line: 988, column: 12, scope: !4039)
!4075 = !DILocation(line: 990, column: 5, scope: !4039)
!4076 = !DILocation(line: 991, column: 5, scope: !4039)
!4077 = !DILocation(line: 993, column: 10, scope: !4039)
!4078 = !DILocation(line: 994, column: 22, scope: !4039)
!4079 = !DILocation(line: 995, column: 5, scope: !4039)
!4080 = !DILocation(line: 996, column: 1, scope: !4039)
!4081 = distinct !DISubprogram(name: "flash_erase_write", scope: !184, file: !184, line: 998, type: !3935, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !4082)
!4082 = !{!4083, !4084, !4085, !4086, !4090, !4091, !4092, !4096, !4097, !4098}
!4083 = !DILocalVariable(name: "buf", arg: 1, scope: !4081, file: !184, line: 998, type: !193)
!4084 = !DILocalVariable(name: "offs", arg: 2, scope: !4081, file: !184, line: 998, type: !30)
!4085 = !DILocalVariable(name: "count", arg: 3, scope: !4081, file: !184, line: 998, type: !7)
!4086 = !DILocalVariable(name: "block", scope: !4081, file: !184, line: 1000, type: !4087)
!4087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32768, elements: !4088)
!4088 = !{!4089}
!4089 = !DISubrange(count: 4096)
!4090 = !DILocalVariable(name: "blocksize", scope: !4081, file: !184, line: 1002, type: !7)
!4091 = !DILocalVariable(name: "blockmask", scope: !4081, file: !184, line: 1003, type: !7)
!4092 = !DILocalVariable(name: "piece", scope: !4093, file: !184, line: 1008, type: !30)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !184, line: 1007, column: 56)
!4094 = distinct !DILexicalBlock(scope: !4095, file: !184, line: 1007, column: 13)
!4095 = distinct !DILexicalBlock(scope: !4081, file: !184, line: 1005, column: 23)
!4096 = !DILocalVariable(name: "blockaddr", scope: !4093, file: !184, line: 1008, type: !30)
!4097 = !DILocalVariable(name: "piece_size", scope: !4093, file: !184, line: 1009, type: !7)
!4098 = !DILocalVariable(name: "aligned_size", scope: !4099, file: !184, line: 1034, type: !30)
!4099 = distinct !DILexicalBlock(scope: !4094, file: !184, line: 1033, column: 16)
!4100 = !DILocation(line: 0, scope: !4081)
!4101 = !DILocation(line: 1000, column: 5, scope: !4081)
!4102 = !DILocation(line: 1000, column: 19, scope: !4081)
!4103 = !DILocation(line: 1005, column: 18, scope: !4081)
!4104 = !DILocation(line: 1005, column: 5, scope: !4081)
!4105 = !DILocation(line: 1007, column: 13, scope: !4094)
!4106 = !DILocation(line: 1007, column: 32, scope: !4094)
!4107 = !DILocation(line: 1011, column: 30, scope: !4093)
!4108 = !DILocation(line: 0, scope: !4093)
!4109 = !DILocation(line: 1013, column: 17, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4093, file: !184, line: 1013, column: 17)
!4111 = !DILocation(line: 1013, column: 72, scope: !4110)
!4112 = !DILocation(line: 1013, column: 17, scope: !4093)
!4113 = !DILocation(line: 1017, column: 30, scope: !4093)
!4114 = !DILocation(line: 1019, column: 26, scope: !4093)
!4115 = !DILocation(line: 1020, column: 26, scope: !4093)
!4116 = !DILocation(line: 1020, column: 13, scope: !4093)
!4117 = !DILocation(line: 1022, column: 17, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4093, file: !184, line: 1022, column: 17)
!4119 = !DILocation(line: 1026, column: 17, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4093, file: !184, line: 1026, column: 17)
!4121 = !DILocation(line: 1026, column: 58, scope: !4120)
!4122 = !DILocation(line: 1026, column: 17, scope: !4093)
!4123 = !DILocation(line: 1032, column: 19, scope: !4093)
!4124 = !DILocation(line: 1034, column: 47, scope: !4099)
!4125 = !DILocation(line: 0, scope: !4099)
!4126 = !DILocation(line: 1036, column: 17, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4099, file: !184, line: 1036, column: 17)
!4128 = !DILocation(line: 1040, column: 17, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4099, file: !184, line: 1040, column: 17)
!4130 = !DILocation(line: 1040, column: 54, scope: !4129)
!4131 = !DILocation(line: 1040, column: 17, scope: !4099)
!4132 = !DILocation(line: 1047, column: 19, scope: !4099)
!4133 = !DILocation(line: 0, scope: !4094)
!4134 = distinct !{!4134, !4104, !4135}
!4135 = !DILocation(line: 1049, column: 5, scope: !4081)
!4136 = !DILocation(line: 1052, column: 1, scope: !4081)
!4137 = distinct !DISubprogram(name: "query_spi_flash_status", scope: !184, file: !184, line: 1055, type: !4138, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !183, retainedNodes: !1305)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!4140}
!4140 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_DRV_STATE", file: !6, line: 71, baseType: !186)
!4141 = !DILocation(line: 1057, column: 9, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4137, file: !184, line: 1057, column: 9)
!4143 = !DILocation(line: 1057, column: 9, scope: !4137)
!4144 = !DILocation(line: 1062, column: 9, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !184, line: 1061, column: 43)
!4146 = distinct !DILexicalBlock(scope: !4137, file: !184, line: 1061, column: 9)
!4147 = !DILocation(line: 1065, column: 48, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4137, file: !184, line: 1065, column: 9)
!4149 = !DILocation(line: 0, scope: !4148)
!4150 = !DILocation(line: 0, scope: !4137)
!4151 = !DILocation(line: 1072, column: 1, scope: !4137)
!4152 = distinct !DISubprogram(name: "get_current_count", scope: !1181, file: !1181, line: 56, type: !1286, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !1305)
!4153 = !DILocation(line: 58, column: 12, scope: !4152)
!4154 = !DILocation(line: 58, column: 5, scope: !4152)
!4155 = distinct !DISubprogram(name: "delay_time", scope: !1181, file: !1181, line: 62, type: !1711, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !4156)
!4156 = !{!4157, !4158, !4159}
!4157 = !DILocalVariable(name: "count", arg: 1, scope: !4155, file: !1181, line: 62, type: !139)
!4158 = !DILocalVariable(name: "end_count", scope: !4155, file: !1181, line: 64, type: !139)
!4159 = !DILocalVariable(name: "current", scope: !4155, file: !1181, line: 64, type: !139)
!4160 = !DILocation(line: 0, scope: !4155)
!4161 = !DILocation(line: 66, column: 17, scope: !4155)
!4162 = !DILocation(line: 66, column: 37, scope: !4155)
!4163 = !DILocation(line: 66, column: 45, scope: !4155)
!4164 = !DILocation(line: 67, column: 15, scope: !4155)
!4165 = !DILocation(line: 68, column: 12, scope: !4155)
!4166 = !DILocation(line: 68, column: 5, scope: !4155)
!4167 = !DILocation(line: 69, column: 19, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4155, file: !1181, line: 68, column: 45)
!4169 = distinct !{!4169, !4166, !4170}
!4170 = !DILocation(line: 70, column: 5, scope: !4155)
!4171 = !DILocation(line: 72, column: 1, scope: !4155)
!4172 = distinct !DISubprogram(name: "delay_time_for_gpt4", scope: !1181, file: !1181, line: 75, type: !1711, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !4173)
!4173 = !{!4174, !4175, !4176}
!4174 = !DILocalVariable(name: "count", arg: 1, scope: !4172, file: !1181, line: 75, type: !139)
!4175 = !DILocalVariable(name: "end_count", scope: !4172, file: !1181, line: 77, type: !139)
!4176 = !DILocalVariable(name: "current", scope: !4172, file: !1181, line: 77, type: !139)
!4177 = !DILocation(line: 0, scope: !4172)
!4178 = !DILocation(line: 79, column: 17, scope: !4172)
!4179 = !DILocation(line: 79, column: 42, scope: !4172)
!4180 = !DILocation(line: 79, column: 50, scope: !4172)
!4181 = !DILocation(line: 80, column: 15, scope: !4172)
!4182 = !DILocation(line: 81, column: 12, scope: !4172)
!4183 = !DILocation(line: 81, column: 5, scope: !4172)
!4184 = !DILocation(line: 82, column: 19, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4172, file: !1181, line: 81, column: 45)
!4186 = distinct !{!4186, !4183, !4187}
!4187 = !DILocation(line: 83, column: 5, scope: !4172)
!4188 = !DILocation(line: 85, column: 1, scope: !4172)
!4189 = distinct !DISubprogram(name: "get_current_gpt4_count", scope: !1181, file: !1181, line: 95, type: !1286, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !1305)
!4190 = !DILocation(line: 97, column: 13, scope: !4189)
!4191 = !DILocation(line: 97, column: 5, scope: !4189)
!4192 = distinct !DISubprogram(name: "delay_ms", scope: !1181, file: !1181, line: 107, type: !2725, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !4193)
!4193 = !{!4194, !4195}
!4194 = !DILocalVariable(name: "ms", arg: 1, scope: !4192, file: !1181, line: 107, type: !61)
!4195 = !DILocalVariable(name: "count", scope: !4192, file: !1181, line: 109, type: !61)
!4196 = !DILocation(line: 0, scope: !4192)
!4197 = !DILocation(line: 111, column: 17, scope: !4192)
!4198 = !DILocation(line: 112, column: 17, scope: !4192)
!4199 = !DILocation(line: 112, column: 23, scope: !4192)
!4200 = !DILocation(line: 112, column: 11, scope: !4192)
!4201 = !DILocation(line: 113, column: 17, scope: !4192)
!4202 = !DILocation(line: 113, column: 23, scope: !4192)
!4203 = !DILocation(line: 113, column: 11, scope: !4192)
!4204 = !DILocation(line: 114, column: 17, scope: !4192)
!4205 = !DILocation(line: 114, column: 23, scope: !4192)
!4206 = !DILocation(line: 114, column: 11, scope: !4192)
!4207 = !DILocation(line: 115, column: 5, scope: !4192)
!4208 = !DILocation(line: 116, column: 1, scope: !4192)
!4209 = distinct !DISubprogram(name: "delay_us", scope: !1181, file: !1181, line: 120, type: !2725, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !4210)
!4210 = !{!4211, !4212, !4213}
!4211 = !DILocalVariable(name: "us", arg: 1, scope: !4209, file: !1181, line: 120, type: !61)
!4212 = !DILocalVariable(name: "count", scope: !4209, file: !1181, line: 122, type: !61)
!4213 = !DILocalVariable(name: "ticks_per_us", scope: !4209, file: !1181, line: 123, type: !61)
!4214 = !DILocation(line: 0, scope: !4209)
!4215 = !DILocation(line: 125, column: 20, scope: !4209)
!4216 = !DILocation(line: 125, column: 39, scope: !4209)
!4217 = !DILocation(line: 126, column: 26, scope: !4209)
!4218 = !DILocation(line: 128, column: 5, scope: !4209)
!4219 = !DILocation(line: 129, column: 1, scope: !4209)
!4220 = distinct !DISubprogram(name: "drvTMR_init", scope: !1181, file: !1181, line: 133, type: !4221, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !4223)
!4221 = !DISubroutineType(types: !4222)
!4222 = !{null, !61, !61, !69, !153}
!4223 = !{!4224, !4225, !4226, !4227}
!4224 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4220, file: !1181, line: 133, type: !61)
!4225 = !DILocalVariable(name: "countValue", arg: 2, scope: !4220, file: !1181, line: 133, type: !61)
!4226 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !4220, file: !1181, line: 133, type: !69)
!4227 = !DILocalVariable(name: "TMR_Callback", arg: 4, scope: !4220, file: !1181, line: 133, type: !153)
!4228 = !DILocation(line: 0, scope: !4220)
!4229 = !DILocation(line: 136, column: 5, scope: !4220)
!4230 = !DILocation(line: 138, column: 18, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4220, file: !1181, line: 138, column: 9)
!4232 = !DILocation(line: 138, column: 9, scope: !4220)
!4233 = !DILocation(line: 139, column: 30, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4231, file: !1181, line: 138, column: 27)
!4235 = !DILocation(line: 141, column: 5, scope: !4234)
!4236 = !DILocation(line: 142, column: 30, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4231, file: !1181, line: 141, column: 12)
!4238 = !DILocation(line: 0, scope: !4231)
!4239 = !DILocation(line: 146, column: 5, scope: !4220)
!4240 = !DILocation(line: 147, column: 1, scope: !4220)
!4241 = distinct !DISubprogram(name: "TMR_Start", scope: !1181, file: !1181, line: 149, type: !2725, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !4242)
!4242 = !{!4243}
!4243 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4241, file: !1181, line: 149, type: !61)
!4244 = !DILocation(line: 0, scope: !4241)
!4245 = !DILocation(line: 151, column: 5, scope: !4241)
!4246 = !DILocation(line: 152, column: 1, scope: !4241)
!4247 = distinct !DISubprogram(name: "TMR_Stop", scope: !1181, file: !1181, line: 154, type: !2725, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !4248)
!4248 = !{!4249}
!4249 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4247, file: !1181, line: 154, type: !61)
!4250 = !DILocation(line: 0, scope: !4247)
!4251 = !DILocation(line: 156, column: 5, scope: !4247)
!4252 = !DILocation(line: 157, column: 1, scope: !4247)
!4253 = distinct !DISubprogram(name: "drvGPT2Init", scope: !1181, file: !1181, line: 160, type: !154, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !1305)
!4254 = !DILocation(line: 162, column: 5, scope: !4253)
!4255 = !DILocation(line: 163, column: 1, scope: !4253)
!4256 = distinct !DISubprogram(name: "drvGPT4Init", scope: !1181, file: !1181, line: 165, type: !154, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !1305)
!4257 = !DILocation(line: 167, column: 5, scope: !4256)
!4258 = !DILocation(line: 168, column: 1, scope: !4256)
!4259 = distinct !DISubprogram(name: "clear_TMR_INT_status_bit", scope: !1181, file: !1181, line: 170, type: !2725, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !4260)
!4260 = !{!4261}
!4261 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4259, file: !1181, line: 170, type: !61)
!4262 = !DILocation(line: 0, scope: !4259)
!4263 = !DILocation(line: 172, column: 9, scope: !4259)
!4264 = !DILocation(line: 177, column: 5, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4266, file: !1181, line: 175, column: 27)
!4266 = distinct !DILexicalBlock(scope: !4259, file: !1181, line: 175, column: 9)
!4267 = !DILocation(line: 178, column: 1, scope: !4259)
!4268 = distinct !DISubprogram(name: "top_xtal_init", scope: !281, file: !281, line: 52, type: !154, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4269)
!4269 = !{!4270, !4271}
!4270 = !DILocalVariable(name: "u4RegVal", scope: !4268, file: !281, line: 54, type: !61)
!4271 = !DILocalVariable(name: "reg", scope: !4268, file: !281, line: 55, type: !195)
!4272 = !DILocation(line: 0, scope: !4268)
!4273 = !DILocation(line: 55, column: 25, scope: !4268)
!4274 = !DILocation(line: 56, column: 16, scope: !4268)
!4275 = !DILocation(line: 56, column: 23, scope: !4268)
!4276 = !DILocation(line: 58, column: 16, scope: !4268)
!4277 = !DILocation(line: 61, column: 5, scope: !4268)
!4278 = !DILocation(line: 59, column: 14, scope: !4268)
!4279 = !DILocation(line: 0, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4268, file: !281, line: 61, column: 18)
!4281 = !DILocation(line: 87, column: 38, scope: !4268)
!4282 = !DILocation(line: 88, column: 21, scope: !4268)
!4283 = !DILocation(line: 88, column: 19, scope: !4268)
!4284 = !DILocation(line: 89, column: 5, scope: !4268)
!4285 = !DILocation(line: 90, column: 17, scope: !4268)
!4286 = !DILocation(line: 90, column: 33, scope: !4268)
!4287 = !DILocation(line: 90, column: 5, scope: !4268)
!4288 = !DILocation(line: 91, column: 1, scope: !4268)
!4289 = distinct !DISubprogram(name: "top_xtal_freq_get", scope: !281, file: !281, line: 98, type: !1286, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !1305)
!4290 = !DILocation(line: 100, column: 12, scope: !4289)
!4291 = !DILocation(line: 100, column: 5, scope: !4289)
!4292 = distinct !DISubprogram(name: "top_mcu_freq_get", scope: !281, file: !281, line: 108, type: !1286, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !1305)
!4293 = !DILocation(line: 110, column: 12, scope: !4292)
!4294 = !DILocation(line: 110, column: 5, scope: !4292)
!4295 = distinct !DISubprogram(name: "cmnPLL1ON", scope: !281, file: !281, line: 118, type: !154, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4296)
!4296 = !{!4297, !4298}
!4297 = !DILocalVariable(name: "reg", scope: !4295, file: !281, line: 120, type: !60)
!4298 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4295, file: !281, line: 121, type: !59)
!4299 = !DILocation(line: 120, column: 5, scope: !4295)
!4300 = !DILocation(line: 120, column: 23, scope: !4295)
!4301 = !DILocation(line: 0, scope: !4295)
!4302 = !DILocation(line: 123, column: 11, scope: !4295)
!4303 = !DILocation(line: 123, column: 9, scope: !4295)
!4304 = !DILocation(line: 124, column: 12, scope: !4295)
!4305 = !DILocation(line: 124, column: 16, scope: !4295)
!4306 = !DILocation(line: 124, column: 39, scope: !4295)
!4307 = !DILocation(line: 124, column: 9, scope: !4295)
!4308 = !DILocation(line: 126, column: 9, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4295, file: !281, line: 126, column: 9)
!4310 = !DILocation(line: 126, column: 13, scope: !4309)
!4311 = !DILocation(line: 126, column: 9, scope: !4295)
!4312 = !DILocation(line: 127, column: 15, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4309, file: !281, line: 126, column: 47)
!4314 = !DILocation(line: 127, column: 13, scope: !4313)
!4315 = !DILocation(line: 128, column: 15, scope: !4313)
!4316 = !DILocation(line: 128, column: 19, scope: !4313)
!4317 = !DILocation(line: 128, column: 13, scope: !4313)
!4318 = !DILocation(line: 129, column: 15, scope: !4313)
!4319 = !DILocation(line: 129, column: 19, scope: !4313)
!4320 = !DILocation(line: 129, column: 13, scope: !4313)
!4321 = !DILocation(line: 130, column: 46, scope: !4313)
!4322 = !DILocation(line: 130, column: 9, scope: !4313)
!4323 = !DILocation(line: 132, column: 9, scope: !4313)
!4324 = !DILocation(line: 133, column: 19, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4313, file: !281, line: 132, column: 12)
!4326 = !DILocation(line: 133, column: 17, scope: !4325)
!4327 = !DILocation(line: 134, column: 19, scope: !4325)
!4328 = !DILocation(line: 134, column: 23, scope: !4325)
!4329 = !DILocation(line: 134, column: 17, scope: !4325)
!4330 = !DILocation(line: 135, column: 19, scope: !4313)
!4331 = !DILocation(line: 135, column: 18, scope: !4313)
!4332 = !DILocation(line: 135, column: 9, scope: !4325)
!4333 = distinct !{!4333, !4323, !4334}
!4334 = !DILocation(line: 135, column: 22, scope: !4313)
!4335 = !DILocation(line: 138, column: 1, scope: !4295)
!4336 = distinct !DISubprogram(name: "cmnReadRegister32", scope: !4337, file: !4337, line: 176, type: !4338, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4342)
!4337 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/system_mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!4338 = !DISubroutineType(types: !4339)
!4339 = !{!61, !4340}
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 32)
!4341 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4342 = !{!4343}
!4343 = !DILocalVariable(name: "Register", arg: 1, scope: !4336, file: !4337, line: 176, type: !4340)
!4344 = !DILocation(line: 0, scope: !4336)
!4345 = !DILocation(line: 178, column: 13, scope: !4336)
!4346 = !DILocation(line: 178, column: 12, scope: !4336)
!4347 = !DILocation(line: 178, column: 5, scope: !4336)
!4348 = distinct !DISubprogram(name: "cmnWriteRegister32", scope: !4337, file: !4337, line: 171, type: !4349, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4351)
!4349 = !DISubroutineType(types: !4350)
!4350 = !{null, !4340, !61}
!4351 = !{!4352, !4353}
!4352 = !DILocalVariable(name: "Register", arg: 1, scope: !4348, file: !4337, line: 171, type: !4340)
!4353 = !DILocalVariable(name: "Value", arg: 2, scope: !4348, file: !4337, line: 171, type: !61)
!4354 = !DILocation(line: 0, scope: !4348)
!4355 = !DILocation(line: 173, column: 6, scope: !4348)
!4356 = !DILocation(line: 173, column: 36, scope: !4348)
!4357 = !DILocation(line: 174, column: 1, scope: !4348)
!4358 = distinct !DISubprogram(name: "cmnPLL1ON_PLL2ON", scope: !281, file: !281, line: 145, type: !4359, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4361)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{null, !54}
!4361 = !{!4362, !4363, !4364}
!4362 = !DILocalVariable(name: "fg960M", arg: 1, scope: !4358, file: !281, line: 145, type: !54)
!4363 = !DILocalVariable(name: "reg", scope: !4358, file: !281, line: 147, type: !60)
!4364 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4358, file: !281, line: 148, type: !59)
!4365 = !DILocation(line: 0, scope: !4358)
!4366 = !DILocation(line: 147, column: 5, scope: !4358)
!4367 = !DILocation(line: 147, column: 23, scope: !4358)
!4368 = !DILocation(line: 150, column: 11, scope: !4358)
!4369 = !DILocation(line: 150, column: 9, scope: !4358)
!4370 = !DILocation(line: 151, column: 12, scope: !4358)
!4371 = !DILocation(line: 151, column: 16, scope: !4358)
!4372 = !DILocation(line: 151, column: 39, scope: !4358)
!4373 = !DILocation(line: 151, column: 9, scope: !4358)
!4374 = !DILocation(line: 153, column: 9, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4358, file: !281, line: 153, column: 9)
!4376 = !DILocation(line: 153, column: 13, scope: !4375)
!4377 = !DILocation(line: 153, column: 9, scope: !4358)
!4378 = !DILocation(line: 154, column: 15, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4375, file: !281, line: 153, column: 45)
!4380 = !DILocation(line: 154, column: 13, scope: !4379)
!4381 = !DILocation(line: 155, column: 15, scope: !4379)
!4382 = !DILocation(line: 155, column: 19, scope: !4379)
!4383 = !DILocation(line: 155, column: 13, scope: !4379)
!4384 = !DILocation(line: 156, column: 15, scope: !4379)
!4385 = !DILocation(line: 156, column: 19, scope: !4379)
!4386 = !DILocation(line: 156, column: 13, scope: !4379)
!4387 = !DILocation(line: 157, column: 15, scope: !4379)
!4388 = !DILocation(line: 157, column: 13, scope: !4379)
!4389 = !DILocation(line: 158, column: 46, scope: !4379)
!4390 = !DILocation(line: 158, column: 9, scope: !4379)
!4391 = !DILocation(line: 160, column: 15, scope: !4379)
!4392 = !DILocation(line: 160, column: 13, scope: !4379)
!4393 = !DILocation(line: 161, column: 15, scope: !4379)
!4394 = !DILocation(line: 161, column: 19, scope: !4379)
!4395 = !DILocation(line: 161, column: 13, scope: !4379)
!4396 = !DILocation(line: 162, column: 15, scope: !4379)
!4397 = !DILocation(line: 162, column: 19, scope: !4379)
!4398 = !DILocation(line: 162, column: 13, scope: !4379)
!4399 = !DILocation(line: 163, column: 15, scope: !4379)
!4400 = !DILocation(line: 163, column: 19, scope: !4379)
!4401 = !DILocation(line: 163, column: 13, scope: !4379)
!4402 = !DILocation(line: 164, column: 46, scope: !4379)
!4403 = !DILocation(line: 164, column: 9, scope: !4379)
!4404 = !DILocation(line: 166, column: 9, scope: !4379)
!4405 = !DILocation(line: 167, column: 19, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4379, file: !281, line: 166, column: 12)
!4407 = !DILocation(line: 167, column: 17, scope: !4406)
!4408 = !DILocation(line: 168, column: 19, scope: !4406)
!4409 = !DILocation(line: 168, column: 23, scope: !4406)
!4410 = !DILocation(line: 168, column: 17, scope: !4406)
!4411 = !DILocation(line: 169, column: 19, scope: !4379)
!4412 = !DILocation(line: 169, column: 18, scope: !4379)
!4413 = !DILocation(line: 169, column: 9, scope: !4406)
!4414 = distinct !{!4414, !4404, !4415}
!4415 = !DILocation(line: 169, column: 22, scope: !4379)
!4416 = !DILocation(line: 171, column: 15, scope: !4379)
!4417 = !DILocation(line: 171, column: 13, scope: !4379)
!4418 = !DILocation(line: 172, column: 15, scope: !4379)
!4419 = !DILocation(line: 172, column: 19, scope: !4379)
!4420 = !DILocation(line: 172, column: 13, scope: !4379)
!4421 = !DILocation(line: 173, column: 15, scope: !4379)
!4422 = !DILocation(line: 173, column: 19, scope: !4379)
!4423 = !DILocation(line: 173, column: 13, scope: !4379)
!4424 = !DILocation(line: 174, column: 5, scope: !4379)
!4425 = !DILocation(line: 176, column: 11, scope: !4358)
!4426 = !DILocation(line: 176, column: 9, scope: !4358)
!4427 = !DILocation(line: 177, column: 9, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4358, file: !281, line: 177, column: 9)
!4429 = !DILocation(line: 0, scope: !4428)
!4430 = !DILocation(line: 177, column: 9, scope: !4358)
!4431 = !DILocation(line: 178, column: 19, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4428, file: !281, line: 177, column: 17)
!4433 = !DILocation(line: 178, column: 13, scope: !4432)
!4434 = !DILocation(line: 179, column: 5, scope: !4432)
!4435 = !DILocation(line: 180, column: 13, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4428, file: !281, line: 179, column: 12)
!4437 = !DILocation(line: 182, column: 42, scope: !4358)
!4438 = !DILocation(line: 182, column: 5, scope: !4358)
!4439 = !DILocation(line: 184, column: 1, scope: !4358)
!4440 = distinct !DISubprogram(name: "cmnPLL1OFF_PLL2OFF", scope: !281, file: !281, line: 191, type: !154, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4441)
!4441 = !{!4442, !4443}
!4442 = !DILocalVariable(name: "reg", scope: !4440, file: !281, line: 193, type: !60)
!4443 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4440, file: !281, line: 194, type: !59)
!4444 = !DILocation(line: 193, column: 5, scope: !4440)
!4445 = !DILocation(line: 193, column: 23, scope: !4440)
!4446 = !DILocation(line: 0, scope: !4440)
!4447 = !DILocation(line: 196, column: 11, scope: !4440)
!4448 = !DILocation(line: 196, column: 9, scope: !4440)
!4449 = !DILocation(line: 197, column: 11, scope: !4440)
!4450 = !DILocation(line: 197, column: 15, scope: !4440)
!4451 = !DILocation(line: 197, column: 9, scope: !4440)
!4452 = !DILocation(line: 198, column: 11, scope: !4440)
!4453 = !DILocation(line: 198, column: 15, scope: !4440)
!4454 = !DILocation(line: 198, column: 9, scope: !4440)
!4455 = !DILocation(line: 199, column: 11, scope: !4440)
!4456 = !DILocation(line: 199, column: 9, scope: !4440)
!4457 = !DILocation(line: 200, column: 42, scope: !4440)
!4458 = !DILocation(line: 200, column: 5, scope: !4440)
!4459 = !DILocation(line: 202, column: 11, scope: !4440)
!4460 = !DILocation(line: 202, column: 9, scope: !4440)
!4461 = !DILocation(line: 203, column: 11, scope: !4440)
!4462 = !DILocation(line: 203, column: 15, scope: !4440)
!4463 = !DILocation(line: 203, column: 9, scope: !4440)
!4464 = !DILocation(line: 204, column: 11, scope: !4440)
!4465 = !DILocation(line: 204, column: 15, scope: !4440)
!4466 = !DILocation(line: 204, column: 9, scope: !4440)
!4467 = !DILocation(line: 205, column: 11, scope: !4440)
!4468 = !DILocation(line: 205, column: 9, scope: !4440)
!4469 = !DILocation(line: 206, column: 42, scope: !4440)
!4470 = !DILocation(line: 206, column: 5, scope: !4440)
!4471 = !DILocation(line: 209, column: 1, scope: !4440)
!4472 = distinct !DISubprogram(name: "cmnCpuClkConfigureToXtal", scope: !281, file: !281, line: 216, type: !154, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4473)
!4473 = !{!4474, !4475}
!4474 = !DILocalVariable(name: "reg", scope: !4472, file: !281, line: 218, type: !60)
!4475 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4472, file: !281, line: 219, type: !59)
!4476 = !DILocation(line: 218, column: 5, scope: !4472)
!4477 = !DILocation(line: 218, column: 23, scope: !4472)
!4478 = !DILocation(line: 0, scope: !4472)
!4479 = !DILocation(line: 222, column: 11, scope: !4472)
!4480 = !DILocation(line: 222, column: 9, scope: !4472)
!4481 = !DILocation(line: 223, column: 11, scope: !4472)
!4482 = !DILocation(line: 223, column: 15, scope: !4472)
!4483 = !DILocation(line: 223, column: 9, scope: !4472)
!4484 = !DILocation(line: 224, column: 11, scope: !4472)
!4485 = !DILocation(line: 224, column: 9, scope: !4472)
!4486 = !DILocation(line: 225, column: 39, scope: !4472)
!4487 = !DILocation(line: 225, column: 5, scope: !4472)
!4488 = !DILocation(line: 228, column: 11, scope: !4472)
!4489 = !DILocation(line: 228, column: 9, scope: !4472)
!4490 = !DILocation(line: 229, column: 11, scope: !4472)
!4491 = !DILocation(line: 229, column: 15, scope: !4472)
!4492 = !DILocation(line: 229, column: 9, scope: !4472)
!4493 = !DILocation(line: 230, column: 11, scope: !4472)
!4494 = !DILocation(line: 230, column: 9, scope: !4472)
!4495 = !DILocation(line: 231, column: 39, scope: !4472)
!4496 = !DILocation(line: 231, column: 5, scope: !4472)
!4497 = !DILocation(line: 233, column: 5, scope: !4472)
!4498 = !DILocation(line: 233, column: 12, scope: !4472)
!4499 = !DILocation(line: 233, column: 19, scope: !4472)
!4500 = !DILocation(line: 233, column: 16, scope: !4472)
!4501 = distinct !{!4501, !4497, !4502}
!4502 = !DILocation(line: 233, column: 52, scope: !4472)
!4503 = !DILocation(line: 235, column: 21, scope: !4472)
!4504 = !DILocation(line: 235, column: 19, scope: !4472)
!4505 = !DILocation(line: 236, column: 5, scope: !4472)
!4506 = !DILocation(line: 237, column: 17, scope: !4472)
!4507 = !DILocation(line: 237, column: 33, scope: !4472)
!4508 = !DILocation(line: 237, column: 5, scope: !4472)
!4509 = !DILocation(line: 239, column: 1, scope: !4472)
!4510 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo192M", scope: !281, file: !281, line: 246, type: !154, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4511)
!4511 = !{!4512, !4513}
!4512 = !DILocalVariable(name: "reg", scope: !4510, file: !281, line: 248, type: !60)
!4513 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4510, file: !281, line: 249, type: !59)
!4514 = !DILocation(line: 248, column: 5, scope: !4510)
!4515 = !DILocation(line: 248, column: 23, scope: !4510)
!4516 = !DILocation(line: 0, scope: !4510)
!4517 = !DILocation(line: 252, column: 5, scope: !4510)
!4518 = !DILocation(line: 255, column: 11, scope: !4510)
!4519 = !DILocation(line: 255, column: 9, scope: !4510)
!4520 = !DILocation(line: 256, column: 11, scope: !4510)
!4521 = !DILocation(line: 256, column: 15, scope: !4510)
!4522 = !DILocation(line: 256, column: 9, scope: !4510)
!4523 = !DILocation(line: 257, column: 11, scope: !4510)
!4524 = !DILocation(line: 257, column: 15, scope: !4510)
!4525 = !DILocation(line: 257, column: 9, scope: !4510)
!4526 = !DILocation(line: 258, column: 39, scope: !4510)
!4527 = !DILocation(line: 258, column: 5, scope: !4510)
!4528 = !DILocation(line: 260, column: 5, scope: !4510)
!4529 = !DILocation(line: 260, column: 12, scope: !4510)
!4530 = !DILocation(line: 260, column: 19, scope: !4510)
!4531 = !DILocation(line: 260, column: 16, scope: !4510)
!4532 = distinct !{!4532, !4528, !4533}
!4533 = !DILocation(line: 260, column: 52, scope: !4510)
!4534 = !DILocation(line: 263, column: 11, scope: !4510)
!4535 = !DILocation(line: 263, column: 9, scope: !4510)
!4536 = !DILocation(line: 264, column: 11, scope: !4510)
!4537 = !DILocation(line: 264, column: 15, scope: !4510)
!4538 = !DILocation(line: 264, column: 9, scope: !4510)
!4539 = !DILocation(line: 265, column: 11, scope: !4510)
!4540 = !DILocation(line: 265, column: 15, scope: !4510)
!4541 = !DILocation(line: 265, column: 9, scope: !4510)
!4542 = !DILocation(line: 266, column: 39, scope: !4510)
!4543 = !DILocation(line: 266, column: 5, scope: !4510)
!4544 = !DILocation(line: 269, column: 11, scope: !4510)
!4545 = !DILocation(line: 269, column: 9, scope: !4510)
!4546 = !DILocation(line: 270, column: 11, scope: !4510)
!4547 = !DILocation(line: 270, column: 15, scope: !4510)
!4548 = !DILocation(line: 270, column: 9, scope: !4510)
!4549 = !DILocation(line: 271, column: 11, scope: !4510)
!4550 = !DILocation(line: 271, column: 15, scope: !4510)
!4551 = !DILocation(line: 271, column: 9, scope: !4510)
!4552 = !DILocation(line: 272, column: 39, scope: !4510)
!4553 = !DILocation(line: 272, column: 5, scope: !4510)
!4554 = !DILocation(line: 273, column: 19, scope: !4510)
!4555 = !DILocation(line: 274, column: 5, scope: !4510)
!4556 = !DILocation(line: 275, column: 17, scope: !4510)
!4557 = !DILocation(line: 275, column: 33, scope: !4510)
!4558 = !DILocation(line: 275, column: 5, scope: !4510)
!4559 = !DILocation(line: 277, column: 1, scope: !4510)
!4560 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo160M", scope: !281, file: !281, line: 284, type: !154, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4561)
!4561 = !{!4562, !4563}
!4562 = !DILocalVariable(name: "reg", scope: !4560, file: !281, line: 286, type: !60)
!4563 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4560, file: !281, line: 287, type: !59)
!4564 = !DILocation(line: 286, column: 5, scope: !4560)
!4565 = !DILocation(line: 286, column: 23, scope: !4560)
!4566 = !DILocation(line: 0, scope: !4560)
!4567 = !DILocation(line: 290, column: 5, scope: !4560)
!4568 = !DILocation(line: 293, column: 11, scope: !4560)
!4569 = !DILocation(line: 293, column: 9, scope: !4560)
!4570 = !DILocation(line: 294, column: 11, scope: !4560)
!4571 = !DILocation(line: 294, column: 15, scope: !4560)
!4572 = !DILocation(line: 294, column: 9, scope: !4560)
!4573 = !DILocation(line: 295, column: 11, scope: !4560)
!4574 = !DILocation(line: 295, column: 15, scope: !4560)
!4575 = !DILocation(line: 295, column: 9, scope: !4560)
!4576 = !DILocation(line: 296, column: 39, scope: !4560)
!4577 = !DILocation(line: 296, column: 5, scope: !4560)
!4578 = !DILocation(line: 298, column: 5, scope: !4560)
!4579 = !DILocation(line: 298, column: 12, scope: !4560)
!4580 = !DILocation(line: 298, column: 19, scope: !4560)
!4581 = !DILocation(line: 298, column: 16, scope: !4560)
!4582 = distinct !{!4582, !4578, !4583}
!4583 = !DILocation(line: 298, column: 52, scope: !4560)
!4584 = !DILocation(line: 301, column: 11, scope: !4560)
!4585 = !DILocation(line: 301, column: 9, scope: !4560)
!4586 = !DILocation(line: 302, column: 11, scope: !4560)
!4587 = !DILocation(line: 302, column: 15, scope: !4560)
!4588 = !DILocation(line: 302, column: 9, scope: !4560)
!4589 = !DILocation(line: 303, column: 11, scope: !4560)
!4590 = !DILocation(line: 303, column: 15, scope: !4560)
!4591 = !DILocation(line: 303, column: 9, scope: !4560)
!4592 = !DILocation(line: 304, column: 39, scope: !4560)
!4593 = !DILocation(line: 304, column: 5, scope: !4560)
!4594 = !DILocation(line: 307, column: 11, scope: !4560)
!4595 = !DILocation(line: 307, column: 9, scope: !4560)
!4596 = !DILocation(line: 308, column: 11, scope: !4560)
!4597 = !DILocation(line: 308, column: 15, scope: !4560)
!4598 = !DILocation(line: 308, column: 9, scope: !4560)
!4599 = !DILocation(line: 309, column: 11, scope: !4560)
!4600 = !DILocation(line: 309, column: 15, scope: !4560)
!4601 = !DILocation(line: 309, column: 9, scope: !4560)
!4602 = !DILocation(line: 310, column: 39, scope: !4560)
!4603 = !DILocation(line: 310, column: 5, scope: !4560)
!4604 = !DILocation(line: 311, column: 19, scope: !4560)
!4605 = !DILocation(line: 312, column: 5, scope: !4560)
!4606 = !DILocation(line: 313, column: 17, scope: !4560)
!4607 = !DILocation(line: 313, column: 33, scope: !4560)
!4608 = !DILocation(line: 313, column: 5, scope: !4560)
!4609 = !DILocation(line: 315, column: 1, scope: !4560)
!4610 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo64M", scope: !281, file: !281, line: 323, type: !154, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4611)
!4611 = !{!4612, !4613}
!4612 = !DILocalVariable(name: "reg", scope: !4610, file: !281, line: 325, type: !60)
!4613 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4610, file: !281, line: 326, type: !59)
!4614 = !DILocation(line: 325, column: 5, scope: !4610)
!4615 = !DILocation(line: 325, column: 23, scope: !4610)
!4616 = !DILocation(line: 0, scope: !4610)
!4617 = !DILocation(line: 329, column: 5, scope: !4610)
!4618 = !DILocation(line: 332, column: 11, scope: !4610)
!4619 = !DILocation(line: 332, column: 9, scope: !4610)
!4620 = !DILocation(line: 333, column: 11, scope: !4610)
!4621 = !DILocation(line: 333, column: 15, scope: !4610)
!4622 = !DILocation(line: 333, column: 9, scope: !4610)
!4623 = !DILocation(line: 334, column: 11, scope: !4610)
!4624 = !DILocation(line: 334, column: 9, scope: !4610)
!4625 = !DILocation(line: 335, column: 39, scope: !4610)
!4626 = !DILocation(line: 335, column: 5, scope: !4610)
!4627 = !DILocation(line: 337, column: 5, scope: !4610)
!4628 = !DILocation(line: 337, column: 12, scope: !4610)
!4629 = !DILocation(line: 337, column: 19, scope: !4610)
!4630 = !DILocation(line: 337, column: 16, scope: !4610)
!4631 = distinct !{!4631, !4627, !4632}
!4632 = !DILocation(line: 337, column: 52, scope: !4610)
!4633 = !DILocation(line: 340, column: 11, scope: !4610)
!4634 = !DILocation(line: 340, column: 9, scope: !4610)
!4635 = !DILocation(line: 341, column: 11, scope: !4610)
!4636 = !DILocation(line: 341, column: 15, scope: !4610)
!4637 = !DILocation(line: 341, column: 9, scope: !4610)
!4638 = !DILocation(line: 342, column: 11, scope: !4610)
!4639 = !DILocation(line: 342, column: 15, scope: !4610)
!4640 = !DILocation(line: 342, column: 9, scope: !4610)
!4641 = !DILocation(line: 343, column: 39, scope: !4610)
!4642 = !DILocation(line: 343, column: 5, scope: !4610)
!4643 = !DILocation(line: 344, column: 19, scope: !4610)
!4644 = !DILocation(line: 345, column: 5, scope: !4610)
!4645 = !DILocation(line: 346, column: 17, scope: !4610)
!4646 = !DILocation(line: 346, column: 33, scope: !4610)
!4647 = !DILocation(line: 346, column: 5, scope: !4610)
!4648 = !DILocation(line: 348, column: 1, scope: !4610)
!4649 = distinct !DISubprogram(name: "cmnSerialFlashClkConfToXtal", scope: !281, file: !281, line: 353, type: !154, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4650)
!4650 = !{!4651, !4652}
!4651 = !DILocalVariable(name: "reg", scope: !4649, file: !281, line: 355, type: !158)
!4652 = !DILocalVariable(name: "pTopCfgHclk", scope: !4649, file: !281, line: 356, type: !283)
!4653 = !DILocation(line: 355, column: 5, scope: !4649)
!4654 = !DILocation(line: 355, column: 21, scope: !4649)
!4655 = !DILocation(line: 0, scope: !4649)
!4656 = !DILocation(line: 358, column: 11, scope: !4649)
!4657 = !DILocation(line: 358, column: 9, scope: !4649)
!4658 = !DILocation(line: 359, column: 11, scope: !4649)
!4659 = !DILocation(line: 359, column: 15, scope: !4649)
!4660 = !DILocation(line: 359, column: 9, scope: !4649)
!4661 = !DILocation(line: 360, column: 11, scope: !4649)
!4662 = !DILocation(line: 360, column: 9, scope: !4649)
!4663 = !DILocation(line: 361, column: 37, scope: !4649)
!4664 = !DILocation(line: 361, column: 5, scope: !4649)
!4665 = !DILocation(line: 362, column: 1, scope: !4649)
!4666 = distinct !DISubprogram(name: "cmnSerialFlashClkConfTo64M", scope: !281, file: !281, line: 368, type: !154, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !280, retainedNodes: !4667)
!4667 = !{!4668, !4669, !4670, !4672, !4674}
!4668 = !DILocalVariable(name: "reg", scope: !4666, file: !281, line: 370, type: !158)
!4669 = !DILocalVariable(name: "pTopCfgHclk", scope: !4666, file: !281, line: 371, type: !283)
!4670 = !DILocalVariable(name: "addr", scope: !4671, file: !281, line: 383, type: !284)
!4671 = distinct !DILexicalBlock(scope: !4666, file: !281, line: 383, column: 5)
!4672 = !DILocalVariable(name: "addr", scope: !4673, file: !281, line: 384, type: !284)
!4673 = distinct !DILexicalBlock(scope: !4666, file: !281, line: 384, column: 5)
!4674 = !DILocalVariable(name: "addr", scope: !4675, file: !281, line: 385, type: !284)
!4675 = distinct !DILexicalBlock(scope: !4666, file: !281, line: 385, column: 5)
!4676 = !DILocation(line: 370, column: 5, scope: !4666)
!4677 = !DILocation(line: 370, column: 21, scope: !4666)
!4678 = !DILocation(line: 0, scope: !4666)
!4679 = !DILocation(line: 374, column: 5, scope: !4666)
!4680 = !DILocation(line: 377, column: 11, scope: !4666)
!4681 = !DILocation(line: 377, column: 9, scope: !4666)
!4682 = !DILocation(line: 378, column: 11, scope: !4666)
!4683 = !DILocation(line: 378, column: 15, scope: !4666)
!4684 = !DILocation(line: 378, column: 9, scope: !4666)
!4685 = !DILocation(line: 379, column: 11, scope: !4666)
!4686 = !DILocation(line: 379, column: 15, scope: !4666)
!4687 = !DILocation(line: 379, column: 9, scope: !4666)
!4688 = !DILocation(line: 380, column: 37, scope: !4666)
!4689 = !DILocation(line: 380, column: 5, scope: !4666)
!4690 = !DILocation(line: 0, scope: !4671)
!4691 = !DILocation(line: 383, column: 5, scope: !4671)
!4692 = !DILocation(line: 0, scope: !4673)
!4693 = !DILocation(line: 384, column: 5, scope: !4673)
!4694 = !DILocation(line: 0, scope: !4675)
!4695 = !DILocation(line: 385, column: 5, scope: !4675)
!4696 = !DILocation(line: 388, column: 1, scope: !4666)
!4697 = distinct !DISubprogram(name: "getc", scope: !293, file: !293, line: 68, type: !2824, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4698)
!4698 = !{!4699}
!4699 = !DILocalVariable(name: "rc", scope: !4697, file: !293, line: 71, type: !7)
!4700 = !DILocation(line: 71, column: 14, scope: !4697)
!4701 = !DILocation(line: 0, scope: !4697)
!4702 = !DILocation(line: 72, column: 5, scope: !4697)
!4703 = distinct !DISubprogram(name: "getc_nowait", scope: !293, file: !293, line: 80, type: !2824, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4704)
!4704 = !{!4705}
!4705 = !DILocalVariable(name: "c", scope: !4703, file: !293, line: 82, type: !202)
!4706 = !DILocation(line: 84, column: 9, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4703, file: !293, line: 84, column: 9)
!4708 = !DILocation(line: 84, column: 40, scope: !4707)
!4709 = !DILocation(line: 84, column: 9, scope: !4703)
!4710 = !DILocation(line: 85, column: 13, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4707, file: !293, line: 84, column: 47)
!4712 = !DILocation(line: 86, column: 16, scope: !4711)
!4713 = !DILocation(line: 0, scope: !4703)
!4714 = !DILocation(line: 86, column: 9, scope: !4711)
!4715 = !DILocation(line: 0, scope: !4707)
!4716 = !DILocation(line: 90, column: 1, scope: !4703)
!4717 = distinct !DISubprogram(name: "uart_output_char", scope: !293, file: !293, line: 93, type: !4718, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4721)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{null, !4720, !58}
!4720 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_PORT", file: !296, line: 75, baseType: !295)
!4721 = !{!4722, !4723, !4724}
!4722 = !DILocalVariable(name: "port_no", arg: 1, scope: !4717, file: !293, line: 93, type: !4720)
!4723 = !DILocalVariable(name: "c", arg: 2, scope: !4717, file: !293, line: 93, type: !58)
!4724 = !DILocalVariable(name: "base", scope: !4717, file: !293, line: 95, type: !30)
!4725 = !DILocation(line: 0, scope: !4717)
!4726 = !DILocation(line: 95, column: 25, scope: !4717)
!4727 = !DILocation(line: 97, column: 5, scope: !4717)
!4728 = !DILocation(line: 97, column: 14, scope: !4717)
!4729 = !DILocation(line: 97, column: 42, scope: !4717)
!4730 = !DILocation(line: 97, column: 12, scope: !4717)
!4731 = distinct !{!4731, !4727, !4732}
!4732 = !DILocation(line: 98, column: 9, scope: !4717)
!4733 = !DILocation(line: 99, column: 35, scope: !4717)
!4734 = !DILocation(line: 99, column: 5, scope: !4717)
!4735 = !DILocation(line: 99, column: 33, scope: !4717)
!4736 = !DILocation(line: 102, column: 1, scope: !4717)
!4737 = distinct !DISubprogram(name: "uart_input_char", scope: !293, file: !293, line: 106, type: !4738, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4740)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!54, !4720}
!4740 = !{!4741, !4742, !4743}
!4741 = !DILocalVariable(name: "port_no", arg: 1, scope: !4737, file: !293, line: 106, type: !4720)
!4742 = !DILocalVariable(name: "base", scope: !4737, file: !293, line: 108, type: !30)
!4743 = !DILocalVariable(name: "c", scope: !4737, file: !293, line: 109, type: !202)
!4744 = !DILocation(line: 0, scope: !4737)
!4745 = !DILocation(line: 108, column: 25, scope: !4737)
!4746 = !DILocation(line: 111, column: 5, scope: !4737)
!4747 = !DILocation(line: 111, column: 14, scope: !4737)
!4748 = !DILocation(line: 111, column: 42, scope: !4737)
!4749 = !DILocation(line: 111, column: 12, scope: !4737)
!4750 = distinct !{!4750, !4746, !4751}
!4751 = !DILocation(line: 112, column: 9, scope: !4737)
!4752 = !DILocation(line: 114, column: 9, scope: !4737)
!4753 = !DILocation(line: 116, column: 5, scope: !4737)
!4754 = distinct !DISubprogram(name: "uart_input_char_unblocking", scope: !293, file: !293, line: 120, type: !4755, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4757)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!61, !4720}
!4757 = !{!4758, !4759, !4760}
!4758 = !DILocalVariable(name: "port_no", arg: 1, scope: !4754, file: !293, line: 120, type: !4720)
!4759 = !DILocalVariable(name: "base", scope: !4754, file: !293, line: 122, type: !30)
!4760 = !DILocalVariable(name: "c", scope: !4754, file: !293, line: 123, type: !202)
!4761 = !DILocation(line: 0, scope: !4754)
!4762 = !DILocation(line: 122, column: 25, scope: !4754)
!4763 = !DILocation(line: 125, column: 9, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4754, file: !293, line: 125, column: 9)
!4765 = !DILocation(line: 125, column: 37, scope: !4764)
!4766 = !DILocation(line: 125, column: 9, scope: !4754)
!4767 = !DILocation(line: 126, column: 13, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4764, file: !293, line: 125, column: 44)
!4769 = !DILocation(line: 127, column: 16, scope: !4768)
!4770 = !DILocation(line: 127, column: 9, scope: !4768)
!4771 = !DILocation(line: 0, scope: !4764)
!4772 = !DILocation(line: 131, column: 1, scope: !4754)
!4773 = distinct !DISubprogram(name: "halUART_HWInit", scope: !293, file: !293, line: 136, type: !4774, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4776)
!4774 = !DISubroutineType(types: !4775)
!4775 = !{null, !4720}
!4776 = !{!4777}
!4777 = !DILocalVariable(name: "u_port", arg: 1, scope: !4773, file: !293, line: 136, type: !4720)
!4778 = !DILocation(line: 0, scope: !4773)
!4779 = !DILocation(line: 139, column: 5, scope: !4773)
!4780 = !DILocation(line: 140, column: 9, scope: !4773)
!4781 = !DILocation(line: 153, column: 5, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4783, file: !293, line: 147, column: 38)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !293, line: 147, column: 16)
!4784 = distinct !DILexicalBlock(scope: !4773, file: !293, line: 140, column: 9)
!4785 = !DILocation(line: 0, scope: !4784)
!4786 = !DILocation(line: 155, column: 1, scope: !4773)
!4787 = distinct !DISubprogram(name: "halUART_SetFormat", scope: !293, file: !293, line: 158, type: !4788, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4790)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{null, !4720, !61, !1635, !1635, !1635}
!4790 = !{!4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4806, !4807}
!4791 = !DILocalVariable(name: "u_port", arg: 1, scope: !4787, file: !293, line: 158, type: !4720)
!4792 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4787, file: !293, line: 158, type: !61)
!4793 = !DILocalVariable(name: "databit", arg: 3, scope: !4787, file: !293, line: 158, type: !1635)
!4794 = !DILocalVariable(name: "parity", arg: 4, scope: !4787, file: !293, line: 158, type: !1635)
!4795 = !DILocalVariable(name: "stopbit", arg: 5, scope: !4787, file: !293, line: 158, type: !1635)
!4796 = !DILocalVariable(name: "control_word", scope: !4787, file: !293, line: 160, type: !1635)
!4797 = !DILocalVariable(name: "UART_BASE", scope: !4787, file: !293, line: 161, type: !61)
!4798 = !DILocalVariable(name: "data", scope: !4787, file: !293, line: 162, type: !61)
!4799 = !DILocalVariable(name: "uart_lcr", scope: !4787, file: !293, line: 162, type: !61)
!4800 = !DILocalVariable(name: "high_speed_div", scope: !4787, file: !293, line: 162, type: !61)
!4801 = !DILocalVariable(name: "sample_count", scope: !4787, file: !293, line: 162, type: !61)
!4802 = !DILocalVariable(name: "sample_point", scope: !4787, file: !293, line: 162, type: !61)
!4803 = !DILocalVariable(name: "fraction", scope: !4787, file: !293, line: 162, type: !61)
!4804 = !DILocalVariable(name: "fraction_L_mapping", scope: !4787, file: !293, line: 163, type: !4805)
!4805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1635, size: 176, elements: !1004)
!4806 = !DILocalVariable(name: "fraction_M_mapping", scope: !4787, file: !293, line: 164, type: !4805)
!4807 = !DILocalVariable(name: "status", scope: !4787, file: !293, line: 165, type: !478)
!4808 = !DILocation(line: 0, scope: !4787)
!4809 = !DILocation(line: 163, column: 15, scope: !4787)
!4810 = !DILocation(line: 164, column: 15, scope: !4787)
!4811 = !DILocation(line: 166, column: 20, scope: !4787)
!4812 = !DILocation(line: 166, column: 18, scope: !4787)
!4813 = !DILocation(line: 168, column: 9, scope: !4787)
!4814 = !DILocation(line: 176, column: 5, scope: !4787)
!4815 = !DILocation(line: 176, column: 44, scope: !4787)
!4816 = !DILocation(line: 177, column: 16, scope: !4787)
!4817 = !DILocation(line: 178, column: 50, scope: !4787)
!4818 = !DILocation(line: 178, column: 38, scope: !4787)
!4819 = !DILocation(line: 179, column: 12, scope: !4787)
!4820 = !DILocation(line: 179, column: 25, scope: !4787)
!4821 = !DILocation(line: 180, column: 28, scope: !4787)
!4822 = !DILocation(line: 180, column: 34, scope: !4787)
!4823 = !DILocation(line: 182, column: 29, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4787, file: !293, line: 181, column: 5)
!4825 = !DILocation(line: 182, column: 46, scope: !4824)
!4826 = !DILocation(line: 183, column: 26, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4824, file: !293, line: 183, column: 13)
!4828 = !DILocation(line: 183, column: 13, scope: !4824)
!4829 = !DILocation(line: 192, column: 30, scope: !4787)
!4830 = !DILocation(line: 192, column: 35, scope: !4787)
!4831 = !DILocation(line: 192, column: 46, scope: !4787)
!4832 = !DILocation(line: 192, column: 74, scope: !4787)
!4833 = !DILocation(line: 192, column: 53, scope: !4787)
!4834 = !DILocation(line: 192, column: 80, scope: !4787)
!4835 = !DILocation(line: 193, column: 56, scope: !4787)
!4836 = !DILocation(line: 193, column: 5, scope: !4787)
!4837 = !DILocation(line: 193, column: 38, scope: !4787)
!4838 = !DILocation(line: 194, column: 57, scope: !4787)
!4839 = !DILocation(line: 194, column: 63, scope: !4787)
!4840 = !DILocation(line: 194, column: 5, scope: !4787)
!4841 = !DILocation(line: 194, column: 38, scope: !4787)
!4842 = !DILocation(line: 195, column: 5, scope: !4787)
!4843 = !DILocation(line: 195, column: 45, scope: !4787)
!4844 = !DILocation(line: 196, column: 5, scope: !4787)
!4845 = !DILocation(line: 196, column: 47, scope: !4787)
!4846 = !DILocation(line: 197, column: 46, scope: !4787)
!4847 = !DILocation(line: 197, column: 5, scope: !4787)
!4848 = !DILocation(line: 197, column: 44, scope: !4787)
!4849 = !DILocation(line: 198, column: 46, scope: !4787)
!4850 = !DILocation(line: 198, column: 5, scope: !4787)
!4851 = !DILocation(line: 198, column: 44, scope: !4787)
!4852 = !DILocation(line: 199, column: 38, scope: !4787)
!4853 = !DILocation(line: 200, column: 5, scope: !4787)
!4854 = !DILocation(line: 200, column: 38, scope: !4787)
!4855 = !DILocation(line: 202, column: 20, scope: !4787)
!4856 = !DILocation(line: 203, column: 18, scope: !4787)
!4857 = !DILocation(line: 205, column: 18, scope: !4787)
!4858 = !DILocation(line: 207, column: 18, scope: !4787)
!4859 = !DILocation(line: 208, column: 18, scope: !4787)
!4860 = !DILocation(line: 209, column: 5, scope: !4787)
!4861 = !DILocation(line: 213, column: 1, scope: !4787)
!4862 = distinct !DISubprogram(name: "halUART_Get_VFIFO_Length", scope: !293, file: !293, line: 215, type: !4863, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4866)
!4863 = !DISubroutineType(types: !4864)
!4864 = !{null, !4720, !478, !4865}
!4865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!4866 = !{!4867, !4868, !4869}
!4867 = !DILocalVariable(name: "u_port", arg: 1, scope: !4862, file: !293, line: 215, type: !4720)
!4868 = !DILocalVariable(name: "is_rx", arg: 2, scope: !4862, file: !293, line: 215, type: !478)
!4869 = !DILocalVariable(name: "length", arg: 3, scope: !4862, file: !293, line: 215, type: !4865)
!4870 = !DILocation(line: 0, scope: !4862)
!4871 = !DILocation(line: 217, column: 16, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4862, file: !293, line: 217, column: 9)
!4873 = !DILocation(line: 0, scope: !4872)
!4874 = !DILocation(line: 217, column: 9, scope: !4862)
!4875 = !DILocation(line: 218, column: 13, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4872, file: !293, line: 217, column: 31)
!4877 = !DILocation(line: 219, column: 23, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !293, line: 218, column: 20)
!4879 = distinct !DILexicalBlock(scope: !4876, file: !293, line: 218, column: 13)
!4880 = !DILocation(line: 220, column: 9, scope: !4878)
!4881 = !DILocation(line: 221, column: 23, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4879, file: !293, line: 220, column: 16)
!4883 = !DILocation(line: 221, column: 21, scope: !4882)
!4884 = !DILocation(line: 222, column: 24, scope: !4882)
!4885 = !DILocation(line: 222, column: 21, scope: !4882)
!4886 = !DILocation(line: 225, column: 13, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4872, file: !293, line: 224, column: 12)
!4888 = !DILocation(line: 226, column: 23, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4890, file: !293, line: 225, column: 20)
!4890 = distinct !DILexicalBlock(scope: !4887, file: !293, line: 225, column: 13)
!4891 = !DILocation(line: 227, column: 9, scope: !4889)
!4892 = !DILocation(line: 228, column: 23, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4890, file: !293, line: 227, column: 16)
!4894 = !DILocation(line: 228, column: 21, scope: !4893)
!4895 = !DILocation(line: 229, column: 24, scope: !4893)
!4896 = !DILocation(line: 229, column: 21, scope: !4893)
!4897 = !DILocation(line: 233, column: 5, scope: !4862)
!4898 = distinct !DISubprogram(name: "halUART_Read_VFIFO_Data", scope: !293, file: !293, line: 236, type: !4899, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4901)
!4899 = !DISubroutineType(types: !4900)
!4900 = !{null, !4720, !210, !61}
!4901 = !{!4902, !4903, !4904, !4905}
!4902 = !DILocalVariable(name: "u_port", arg: 1, scope: !4898, file: !293, line: 236, type: !4720)
!4903 = !DILocalVariable(name: "data", arg: 2, scope: !4898, file: !293, line: 236, type: !210)
!4904 = !DILocalVariable(name: "length", arg: 3, scope: !4898, file: !293, line: 236, type: !61)
!4905 = !DILocalVariable(name: "idx", scope: !4898, file: !293, line: 238, type: !159)
!4906 = !DILocation(line: 0, scope: !4898)
!4907 = !DILocation(line: 239, column: 23, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !293, line: 239, column: 5)
!4909 = distinct !DILexicalBlock(scope: !4898, file: !293, line: 239, column: 5)
!4910 = !DILocation(line: 239, column: 5, scope: !4909)
!4911 = !DILocation(line: 240, column: 13, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4908, file: !293, line: 239, column: 40)
!4913 = !DILocation(line: 244, column: 9, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !293, line: 242, column: 42)
!4915 = distinct !DILexicalBlock(scope: !4916, file: !293, line: 242, column: 20)
!4916 = distinct !DILexicalBlock(scope: !4912, file: !293, line: 240, column: 13)
!4917 = !DILocation(line: 0, scope: !4916)
!4918 = !DILocation(line: 239, column: 36, scope: !4908)
!4919 = distinct !{!4919, !4910, !4920}
!4920 = !DILocation(line: 246, column: 5, scope: !4909)
!4921 = !DILocation(line: 249, column: 1, scope: !4898)
!4922 = distinct !DISubprogram(name: "halUART_Write_VFIFO_Data", scope: !293, file: !293, line: 251, type: !4923, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4925)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{null, !4720, !1447, !61}
!4925 = !{!4926, !4927, !4928, !4929}
!4926 = !DILocalVariable(name: "u_port", arg: 1, scope: !4922, file: !293, line: 251, type: !4720)
!4927 = !DILocalVariable(name: "data", arg: 2, scope: !4922, file: !293, line: 251, type: !1447)
!4928 = !DILocalVariable(name: "length", arg: 3, scope: !4922, file: !293, line: 251, type: !61)
!4929 = !DILocalVariable(name: "idx", scope: !4922, file: !293, line: 253, type: !159)
!4930 = !DILocation(line: 0, scope: !4922)
!4931 = !DILocation(line: 254, column: 23, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !293, line: 254, column: 5)
!4933 = distinct !DILexicalBlock(scope: !4922, file: !293, line: 254, column: 5)
!4934 = !DILocation(line: 254, column: 5, scope: !4933)
!4935 = !DILocation(line: 255, column: 13, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4932, file: !293, line: 254, column: 40)
!4937 = !DILocation(line: 256, column: 61, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4939, file: !293, line: 255, column: 35)
!4939 = distinct !DILexicalBlock(scope: !4936, file: !293, line: 255, column: 13)
!4940 = !DILocation(line: 256, column: 59, scope: !4938)
!4941 = !DILocation(line: 257, column: 9, scope: !4938)
!4942 = !DILocation(line: 258, column: 61, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4944, file: !293, line: 257, column: 42)
!4944 = distinct !DILexicalBlock(scope: !4939, file: !293, line: 257, column: 20)
!4945 = !DILocation(line: 258, column: 59, scope: !4943)
!4946 = !DILocation(line: 259, column: 9, scope: !4943)
!4947 = !DILocation(line: 254, column: 36, scope: !4932)
!4948 = distinct !{!4948, !4934, !4949}
!4949 = !DILocation(line: 261, column: 5, scope: !4933)
!4950 = !DILocation(line: 264, column: 1, scope: !4922)
!4951 = distinct !DISubprogram(name: "halUART_Tx_VFIFO_Initialize", scope: !293, file: !293, line: 266, type: !4952, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4954)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{null, !4720, !210, !61, !61}
!4954 = !{!4955, !4956, !4957, !4958}
!4955 = !DILocalVariable(name: "u_port", arg: 1, scope: !4951, file: !293, line: 266, type: !4720)
!4956 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !4951, file: !293, line: 266, type: !210)
!4957 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !4951, file: !293, line: 266, type: !61)
!4958 = !DILocalVariable(name: "threshold", arg: 4, scope: !4951, file: !293, line: 266, type: !61)
!4959 = !DILocation(line: 0, scope: !4951)
!4960 = !DILocation(line: 268, column: 9, scope: !4951)
!4961 = !DILocation(line: 274, column: 5, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4963, file: !293, line: 271, column: 38)
!4963 = distinct !DILexicalBlock(scope: !4964, file: !293, line: 271, column: 16)
!4964 = distinct !DILexicalBlock(scope: !4951, file: !293, line: 268, column: 9)
!4965 = !DILocation(line: 0, scope: !4964)
!4966 = !DILocation(line: 276, column: 1, scope: !4951)
!4967 = distinct !DISubprogram(name: "halUART_Rx_VFIFO_Initialize", scope: !293, file: !293, line: 278, type: !4968, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4970)
!4968 = !DISubroutineType(types: !4969)
!4969 = !{null, !4720, !210, !61, !61, !61, !61}
!4970 = !{!4971, !4972, !4973, !4974, !4975, !4976}
!4971 = !DILocalVariable(name: "u_port", arg: 1, scope: !4967, file: !293, line: 278, type: !4720)
!4972 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !4967, file: !293, line: 278, type: !210)
!4973 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !4967, file: !293, line: 278, type: !61)
!4974 = !DILocalVariable(name: "alert_length", arg: 4, scope: !4967, file: !293, line: 278, type: !61)
!4975 = !DILocalVariable(name: "threshold", arg: 5, scope: !4967, file: !293, line: 278, type: !61)
!4976 = !DILocalVariable(name: "timeout", arg: 6, scope: !4967, file: !293, line: 278, type: !61)
!4977 = !DILocation(line: 0, scope: !4967)
!4978 = !DILocation(line: 280, column: 9, scope: !4967)
!4979 = !DILocation(line: 286, column: 5, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4981, file: !293, line: 283, column: 38)
!4981 = distinct !DILexicalBlock(scope: !4982, file: !293, line: 283, column: 16)
!4982 = distinct !DILexicalBlock(scope: !4967, file: !293, line: 280, column: 9)
!4983 = !DILocation(line: 0, scope: !4982)
!4984 = !DILocation(line: 288, column: 1, scope: !4967)
!4985 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_Callback", scope: !293, file: !293, line: 290, type: !4986, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !4988)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{null, !4720, !658}
!4988 = !{!4989, !4990}
!4989 = !DILocalVariable(name: "u_port", arg: 1, scope: !4985, file: !293, line: 290, type: !4720)
!4990 = !DILocalVariable(name: "func", arg: 2, scope: !4985, file: !293, line: 290, type: !658)
!4991 = !DILocation(line: 0, scope: !4985)
!4992 = !DILocation(line: 292, column: 9, scope: !4985)
!4993 = !DILocation(line: 296, column: 5, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4995, file: !293, line: 294, column: 38)
!4995 = distinct !DILexicalBlock(scope: !4996, file: !293, line: 294, column: 16)
!4996 = distinct !DILexicalBlock(scope: !4985, file: !293, line: 292, column: 9)
!4997 = !DILocation(line: 0, scope: !4996)
!4998 = !DILocation(line: 298, column: 1, scope: !4985)
!4999 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_TO_Callback", scope: !293, file: !293, line: 300, type: !4986, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5000)
!5000 = !{!5001, !5002}
!5001 = !DILocalVariable(name: "u_port", arg: 1, scope: !4999, file: !293, line: 300, type: !4720)
!5002 = !DILocalVariable(name: "func", arg: 2, scope: !4999, file: !293, line: 300, type: !658)
!5003 = !DILocation(line: 0, scope: !4999)
!5004 = !DILocation(line: 302, column: 9, scope: !4999)
!5005 = !DILocation(line: 306, column: 5, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5007, file: !293, line: 304, column: 38)
!5007 = distinct !DILexicalBlock(scope: !5008, file: !293, line: 304, column: 16)
!5008 = distinct !DILexicalBlock(scope: !4999, file: !293, line: 302, column: 9)
!5009 = !DILocation(line: 0, scope: !5008)
!5010 = !DILocation(line: 308, column: 1, scope: !4999)
!5011 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !293, file: !293, line: 310, type: !4774, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5012)
!5012 = !{!5013, !5014, !5015, !5016}
!5013 = !DILocalVariable(name: "u_port", arg: 1, scope: !5011, file: !293, line: 310, type: !4720)
!5014 = !DILocalVariable(name: "base", scope: !5011, file: !293, line: 312, type: !30)
!5015 = !DILocalVariable(name: "EFR", scope: !5011, file: !293, line: 313, type: !1635)
!5016 = !DILocalVariable(name: "LCR", scope: !5011, file: !293, line: 313, type: !1635)
!5017 = !DILocation(line: 0, scope: !5011)
!5018 = !DILocation(line: 312, column: 25, scope: !5011)
!5019 = !DILocation(line: 315, column: 11, scope: !5011)
!5020 = !DILocation(line: 317, column: 33, scope: !5011)
!5021 = !DILocation(line: 318, column: 11, scope: !5011)
!5022 = !DILocation(line: 320, column: 35, scope: !5011)
!5023 = !DILocation(line: 320, column: 33, scope: !5011)
!5024 = !DILocation(line: 322, column: 5, scope: !5011)
!5025 = !DILocation(line: 322, column: 39, scope: !5011)
!5026 = !DILocation(line: 324, column: 33, scope: !5011)
!5027 = !DILocation(line: 325, column: 5, scope: !5011)
!5028 = !DILocation(line: 325, column: 33, scope: !5011)
!5029 = !DILocation(line: 327, column: 35, scope: !5011)
!5030 = !DILocation(line: 327, column: 33, scope: !5011)
!5031 = !DILocation(line: 328, column: 1, scope: !5011)
!5032 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !293, file: !293, line: 330, type: !5033, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5035)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{null, !4720, !54, !54, !54}
!5035 = !{!5036, !5037, !5038, !5039, !5040, !5041, !5042}
!5036 = !DILocalVariable(name: "u_port", arg: 1, scope: !5032, file: !293, line: 330, type: !4720)
!5037 = !DILocalVariable(name: "xon", arg: 2, scope: !5032, file: !293, line: 330, type: !54)
!5038 = !DILocalVariable(name: "xoff", arg: 3, scope: !5032, file: !293, line: 330, type: !54)
!5039 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5032, file: !293, line: 330, type: !54)
!5040 = !DILocalVariable(name: "base", scope: !5032, file: !293, line: 332, type: !30)
!5041 = !DILocalVariable(name: "EFR", scope: !5032, file: !293, line: 333, type: !1635)
!5042 = !DILocalVariable(name: "LCR", scope: !5032, file: !293, line: 333, type: !1635)
!5043 = !DILocation(line: 0, scope: !5032)
!5044 = !DILocation(line: 332, column: 25, scope: !5032)
!5045 = !DILocation(line: 335, column: 11, scope: !5032)
!5046 = !DILocation(line: 337, column: 33, scope: !5032)
!5047 = !DILocation(line: 338, column: 36, scope: !5032)
!5048 = !DILocation(line: 338, column: 5, scope: !5032)
!5049 = !DILocation(line: 338, column: 34, scope: !5032)
!5050 = !DILocation(line: 339, column: 5, scope: !5032)
!5051 = !DILocation(line: 339, column: 34, scope: !5032)
!5052 = !DILocation(line: 340, column: 37, scope: !5032)
!5053 = !DILocation(line: 340, column: 5, scope: !5032)
!5054 = !DILocation(line: 340, column: 35, scope: !5032)
!5055 = !DILocation(line: 341, column: 5, scope: !5032)
!5056 = !DILocation(line: 341, column: 35, scope: !5032)
!5057 = !DILocation(line: 343, column: 11, scope: !5032)
!5058 = !DILocation(line: 345, column: 35, scope: !5032)
!5059 = !DILocation(line: 345, column: 33, scope: !5032)
!5060 = !DILocation(line: 347, column: 35, scope: !5032)
!5061 = !DILocation(line: 347, column: 33, scope: !5032)
!5062 = !DILocation(line: 349, column: 43, scope: !5032)
!5063 = !DILocation(line: 349, column: 5, scope: !5032)
!5064 = !DILocation(line: 349, column: 41, scope: !5032)
!5065 = !DILocation(line: 350, column: 5, scope: !5032)
!5066 = !DILocation(line: 350, column: 39, scope: !5032)
!5067 = !DILocation(line: 351, column: 1, scope: !5032)
!5068 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !293, file: !293, line: 353, type: !4774, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5069)
!5069 = !{!5070, !5071, !5072}
!5070 = !DILocalVariable(name: "u_port", arg: 1, scope: !5068, file: !293, line: 353, type: !4720)
!5071 = !DILocalVariable(name: "base", scope: !5068, file: !293, line: 355, type: !30)
!5072 = !DILocalVariable(name: "LCR", scope: !5068, file: !293, line: 356, type: !1635)
!5073 = !DILocation(line: 0, scope: !5068)
!5074 = !DILocation(line: 355, column: 25, scope: !5068)
!5075 = !DILocation(line: 358, column: 11, scope: !5068)
!5076 = !DILocation(line: 360, column: 33, scope: !5068)
!5077 = !DILocation(line: 362, column: 5, scope: !5068)
!5078 = !DILocation(line: 362, column: 33, scope: !5068)
!5079 = !DILocation(line: 364, column: 33, scope: !5068)
!5080 = !DILocation(line: 366, column: 35, scope: !5068)
!5081 = !DILocation(line: 366, column: 33, scope: !5068)
!5082 = !DILocation(line: 367, column: 1, scope: !5068)
!5083 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !293, file: !293, line: 436, type: !4774, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5084)
!5084 = !{!5085, !5086}
!5085 = !DILocalVariable(name: "u_port", arg: 1, scope: !5083, file: !293, line: 436, type: !4720)
!5086 = !DILocalVariable(name: "base", scope: !5083, file: !293, line: 438, type: !30)
!5087 = !DILocation(line: 0, scope: !5083)
!5088 = !DILocation(line: 438, column: 25, scope: !5083)
!5089 = !DILocation(line: 440, column: 5, scope: !5083)
!5090 = !DILocation(line: 440, column: 33, scope: !5083)
!5091 = !DILocation(line: 441, column: 5, scope: !5083)
!5092 = !DILocation(line: 441, column: 33, scope: !5083)
!5093 = !DILocation(line: 442, column: 5, scope: !5083)
!5094 = !DILocation(line: 442, column: 34, scope: !5083)
!5095 = !DILocation(line: 443, column: 5, scope: !5083)
!5096 = !DILocation(line: 443, column: 35, scope: !5083)
!5097 = !DILocation(line: 445, column: 33, scope: !5083)
!5098 = !DILocation(line: 446, column: 5, scope: !5083)
!5099 = !DILocation(line: 446, column: 33, scope: !5083)
!5100 = !DILocation(line: 447, column: 5, scope: !5083)
!5101 = !DILocation(line: 447, column: 33, scope: !5083)
!5102 = !DILocation(line: 449, column: 33, scope: !5083)
!5103 = !DILocation(line: 450, column: 33, scope: !5083)
!5104 = !DILocation(line: 451, column: 33, scope: !5083)
!5105 = !DILocation(line: 453, column: 33, scope: !5083)
!5106 = !DILocation(line: 454, column: 33, scope: !5083)
!5107 = !DILocation(line: 455, column: 33, scope: !5083)
!5108 = !DILocation(line: 457, column: 33, scope: !5083)
!5109 = !DILocation(line: 458, column: 5, scope: !5083)
!5110 = !DILocation(line: 458, column: 33, scope: !5083)
!5111 = !DILocation(line: 459, column: 5, scope: !5083)
!5112 = !DILocation(line: 459, column: 39, scope: !5083)
!5113 = !DILocation(line: 460, column: 5, scope: !5083)
!5114 = !DILocation(line: 460, column: 40, scope: !5083)
!5115 = !DILocation(line: 461, column: 5, scope: !5083)
!5116 = !DILocation(line: 461, column: 42, scope: !5083)
!5117 = !DILocation(line: 462, column: 5, scope: !5083)
!5118 = !DILocation(line: 462, column: 42, scope: !5083)
!5119 = !DILocation(line: 463, column: 5, scope: !5083)
!5120 = !DILocation(line: 463, column: 35, scope: !5083)
!5121 = !DILocation(line: 464, column: 5, scope: !5083)
!5122 = !DILocation(line: 464, column: 41, scope: !5083)
!5123 = !DILocation(line: 465, column: 5, scope: !5083)
!5124 = !DILocation(line: 465, column: 39, scope: !5083)
!5125 = !DILocation(line: 466, column: 5, scope: !5083)
!5126 = !DILocation(line: 466, column: 38, scope: !5083)
!5127 = !DILocation(line: 467, column: 5, scope: !5083)
!5128 = !DILocation(line: 467, column: 42, scope: !5083)
!5129 = !DILocation(line: 468, column: 5, scope: !5083)
!5130 = !DILocation(line: 468, column: 45, scope: !5083)
!5131 = !DILocation(line: 469, column: 5, scope: !5083)
!5132 = !DILocation(line: 469, column: 39, scope: !5083)
!5133 = !DILocation(line: 470, column: 5, scope: !5083)
!5134 = !DILocation(line: 470, column: 39, scope: !5083)
!5135 = !DILocation(line: 471, column: 5, scope: !5083)
!5136 = !DILocation(line: 471, column: 42, scope: !5083)
!5137 = !DILocation(line: 472, column: 1, scope: !5083)
!5138 = distinct !DISubprogram(name: "uart_query_empty", scope: !293, file: !293, line: 474, type: !4774, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !5139)
!5139 = !{!5140, !5141}
!5140 = !DILocalVariable(name: "u_port", arg: 1, scope: !5138, file: !293, line: 474, type: !4720)
!5141 = !DILocalVariable(name: "base", scope: !5138, file: !293, line: 476, type: !30)
!5142 = !DILocation(line: 0, scope: !5138)
!5143 = !DILocation(line: 476, column: 25, scope: !5138)
!5144 = !DILocation(line: 478, column: 5, scope: !5138)
!5145 = !DILocation(line: 478, column: 14, scope: !5138)
!5146 = !DILocation(line: 478, column: 42, scope: !5138)
!5147 = !DILocation(line: 478, column: 12, scope: !5138)
!5148 = distinct !{!5148, !5144, !5149}
!5149 = !DILocation(line: 478, column: 50, scope: !5138)
!5150 = !DILocation(line: 479, column: 1, scope: !5138)
!5151 = distinct !DISubprogram(name: "log_hal_fatal_internal", scope: !1184, file: !1184, line: 64, type: !5152, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !5154)
!5152 = !DISubroutineType(types: !5153)
!5153 = !{null, !831, !7, !831, null}
!5154 = !{!5155, !5156, !5157, !5158, !5167}
!5155 = !DILocalVariable(name: "func", arg: 1, scope: !5151, file: !1184, line: 64, type: !831)
!5156 = !DILocalVariable(name: "line", arg: 2, scope: !5151, file: !1184, line: 64, type: !7)
!5157 = !DILocalVariable(name: "message", arg: 3, scope: !5151, file: !1184, line: 64, type: !831)
!5158 = !DILocalVariable(name: "ap", scope: !5151, file: !1184, line: 66, type: !5159)
!5159 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5160, line: 46, baseType: !5161)
!5160 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!5161 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5162, line: 32, baseType: !5163)
!5162 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!5163 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1184, baseType: !5164)
!5164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5165)
!5165 = !{!5166}
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5164, file: !1184, line: 66, baseType: !51, size: 32)
!5167 = !DILocalVariable(name: "mask", scope: !5151, file: !1184, line: 68, type: !61)
!5168 = !DILocation(line: 0, scope: !5151)
!5169 = !DILocation(line: 66, column: 5, scope: !5151)
!5170 = !DILocation(line: 66, column: 13, scope: !5151)
!5171 = !DILocation(line: 68, column: 5, scope: !5151)
!5172 = !DILocation(line: 69, column: 5, scope: !5151)
!5173 = !DILocation(line: 71, column: 5, scope: !5151)
!5174 = !DILocation(line: 72, column: 5, scope: !5151)
!5175 = !DILocation(line: 73, column: 5, scope: !5151)
!5176 = !DILocation(line: 75, column: 37, scope: !5151)
!5177 = !DILocation(line: 75, column: 5, scope: !5151)
!5178 = !DILocation(line: 77, column: 1, scope: !5151)
!5179 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !1184, file: !1184, line: 78, type: !5152, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !5180)
!5180 = !{!5181, !5182, !5183, !5184, !5185}
!5181 = !DILocalVariable(name: "func", arg: 1, scope: !5179, file: !1184, line: 78, type: !831)
!5182 = !DILocalVariable(name: "line", arg: 2, scope: !5179, file: !1184, line: 78, type: !7)
!5183 = !DILocalVariable(name: "message", arg: 3, scope: !5179, file: !1184, line: 78, type: !831)
!5184 = !DILocalVariable(name: "ap", scope: !5179, file: !1184, line: 80, type: !5159)
!5185 = !DILocalVariable(name: "mask", scope: !5179, file: !1184, line: 82, type: !61)
!5186 = !DILocation(line: 0, scope: !5179)
!5187 = !DILocation(line: 80, column: 5, scope: !5179)
!5188 = !DILocation(line: 80, column: 13, scope: !5179)
!5189 = !DILocation(line: 82, column: 5, scope: !5179)
!5190 = !DILocation(line: 83, column: 5, scope: !5179)
!5191 = !DILocation(line: 85, column: 5, scope: !5179)
!5192 = !DILocation(line: 86, column: 5, scope: !5179)
!5193 = !DILocation(line: 87, column: 5, scope: !5179)
!5194 = !DILocation(line: 89, column: 37, scope: !5179)
!5195 = !DILocation(line: 89, column: 5, scope: !5179)
!5196 = !DILocation(line: 91, column: 1, scope: !5179)
!5197 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !1184, file: !1184, line: 92, type: !5152, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !5198)
!5198 = !{!5199, !5200, !5201, !5202, !5203}
!5199 = !DILocalVariable(name: "func", arg: 1, scope: !5197, file: !1184, line: 92, type: !831)
!5200 = !DILocalVariable(name: "line", arg: 2, scope: !5197, file: !1184, line: 92, type: !7)
!5201 = !DILocalVariable(name: "message", arg: 3, scope: !5197, file: !1184, line: 92, type: !831)
!5202 = !DILocalVariable(name: "ap", scope: !5197, file: !1184, line: 94, type: !5159)
!5203 = !DILocalVariable(name: "mask", scope: !5197, file: !1184, line: 96, type: !61)
!5204 = !DILocation(line: 0, scope: !5197)
!5205 = !DILocation(line: 94, column: 5, scope: !5197)
!5206 = !DILocation(line: 94, column: 13, scope: !5197)
!5207 = !DILocation(line: 96, column: 5, scope: !5197)
!5208 = !DILocation(line: 97, column: 5, scope: !5197)
!5209 = !DILocation(line: 99, column: 5, scope: !5197)
!5210 = !DILocation(line: 100, column: 5, scope: !5197)
!5211 = !DILocation(line: 101, column: 5, scope: !5197)
!5212 = !DILocation(line: 103, column: 37, scope: !5197)
!5213 = !DILocation(line: 103, column: 5, scope: !5197)
!5214 = !DILocation(line: 105, column: 1, scope: !5197)
!5215 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !1184, file: !1184, line: 106, type: !5152, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !5216)
!5216 = !{!5217, !5218, !5219, !5220, !5221}
!5217 = !DILocalVariable(name: "func", arg: 1, scope: !5215, file: !1184, line: 106, type: !831)
!5218 = !DILocalVariable(name: "line", arg: 2, scope: !5215, file: !1184, line: 106, type: !7)
!5219 = !DILocalVariable(name: "message", arg: 3, scope: !5215, file: !1184, line: 106, type: !831)
!5220 = !DILocalVariable(name: "ap", scope: !5215, file: !1184, line: 108, type: !5159)
!5221 = !DILocalVariable(name: "mask", scope: !5215, file: !1184, line: 110, type: !61)
!5222 = !DILocation(line: 0, scope: !5215)
!5223 = !DILocation(line: 108, column: 5, scope: !5215)
!5224 = !DILocation(line: 108, column: 13, scope: !5215)
!5225 = !DILocation(line: 110, column: 5, scope: !5215)
!5226 = !DILocation(line: 111, column: 5, scope: !5215)
!5227 = !DILocation(line: 113, column: 5, scope: !5215)
!5228 = !DILocation(line: 114, column: 5, scope: !5215)
!5229 = !DILocation(line: 115, column: 5, scope: !5215)
!5230 = !DILocation(line: 117, column: 37, scope: !5215)
!5231 = !DILocation(line: 117, column: 5, scope: !5215)
!5232 = !DILocation(line: 119, column: 1, scope: !5215)
!5233 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !1184, file: !1184, line: 121, type: !5234, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !5238)
!5234 = !DISubroutineType(types: !5235)
!5235 = !{null, !831, !7, !831, !5236, !7, null}
!5236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5237, size: 32)
!5237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!5238 = !{!5239, !5240, !5241, !5242, !5243}
!5239 = !DILocalVariable(name: "func", arg: 1, scope: !5233, file: !1184, line: 121, type: !831)
!5240 = !DILocalVariable(name: "line", arg: 2, scope: !5233, file: !1184, line: 121, type: !7)
!5241 = !DILocalVariable(name: "message", arg: 3, scope: !5233, file: !1184, line: 121, type: !831)
!5242 = !DILocalVariable(name: "data", arg: 4, scope: !5233, file: !1184, line: 121, type: !5236)
!5243 = !DILocalVariable(name: "length", arg: 5, scope: !5233, file: !1184, line: 121, type: !7)
!5244 = !DILocation(line: 0, scope: !5233)
!5245 = !DILocation(line: 123, column: 1, scope: !5233)
!5246 = distinct !DISubprogram(name: "hal_cache_init", scope: !330, file: !330, line: 53, type: !5247, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5250)
!5247 = !DISubroutineType(types: !5248)
!5248 = !{!5249}
!5249 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !333, line: 172, baseType: !332)
!5250 = !{!5251, !5253}
!5251 = !DILocalVariable(name: "region", scope: !5246, file: !330, line: 55, type: !5252)
!5252 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !333, line: 204, baseType: !343)
!5253 = !DILocalVariable(name: "irq_flag", scope: !5246, file: !330, line: 56, type: !61)
!5254 = !DILocation(line: 59, column: 16, scope: !5246)
!5255 = !DILocation(line: 0, scope: !5246)
!5256 = !DILocation(line: 62, column: 9, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5246, file: !330, line: 62, column: 9)
!5258 = !DILocation(line: 62, column: 9, scope: !5246)
!5259 = !DILocation(line: 64, column: 9, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5257, file: !330, line: 62, column: 39)
!5261 = !DILocation(line: 66, column: 9, scope: !5260)
!5262 = !DILocation(line: 69, column: 24, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5257, file: !330, line: 67, column: 12)
!5264 = !DILocation(line: 72, column: 9, scope: !5263)
!5265 = !DILocation(line: 77, column: 5, scope: !5246)
!5266 = !DILocation(line: 80, column: 22, scope: !5246)
!5267 = !DILocation(line: 81, column: 28, scope: !5246)
!5268 = !DILocation(line: 84, column: 19, scope: !5246)
!5269 = !DILocation(line: 85, column: 23, scope: !5246)
!5270 = !DILocation(line: 88, column: 5, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5246, file: !330, line: 88, column: 5)
!5272 = !DILocation(line: 90, column: 9, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5274, file: !330, line: 88, column: 81)
!5274 = distinct !DILexicalBlock(scope: !5271, file: !330, line: 88, column: 5)
!5275 = !DILocation(line: 90, column: 38, scope: !5273)
!5276 = !DILocation(line: 91, column: 9, scope: !5273)
!5277 = !DILocation(line: 91, column: 42, scope: !5273)
!5278 = !DILocation(line: 94, column: 45, scope: !5273)
!5279 = !DILocation(line: 94, column: 47, scope: !5273)
!5280 = !DILocation(line: 95, column: 49, scope: !5273)
!5281 = !DILocation(line: 95, column: 51, scope: !5273)
!5282 = !DILocation(line: 88, column: 77, scope: !5274)
!5283 = !DILocation(line: 88, column: 46, scope: !5274)
!5284 = distinct !{!5284, !5270, !5285}
!5285 = !DILocation(line: 96, column: 5, scope: !5271)
!5286 = !DILocation(line: 99, column: 1, scope: !5246)
!5287 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !330, file: !330, line: 327, type: !5247, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5288)
!5288 = !{!5289}
!5289 = !DILocalVariable(name: "irq_flag", scope: !5287, file: !330, line: 329, type: !61)
!5290 = !DILocation(line: 332, column: 16, scope: !5287)
!5291 = !DILocation(line: 0, scope: !5287)
!5292 = !DILocation(line: 335, column: 21, scope: !5287)
!5293 = !DILocation(line: 336, column: 21, scope: !5287)
!5294 = !DILocation(line: 339, column: 21, scope: !5287)
!5295 = !DILocation(line: 340, column: 21, scope: !5287)
!5296 = !DILocation(line: 434, column: 3, scope: !5297, inlinedAt: !5299)
!5297 = distinct !DISubprogram(name: "__ISB", scope: !5298, file: !5298, line: 432, type: !154, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !1305)
!5298 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt7687_hdk/hal_examples/flash_read_write_data/GCC")
!5299 = distinct !DILocation(line: 343, column: 5, scope: !5287)
!5300 = !{i64 296584}
!5301 = !DILocation(line: 346, column: 5, scope: !5287)
!5302 = !DILocation(line: 348, column: 5, scope: !5287)
!5303 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !330, file: !330, line: 101, type: !5247, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5304)
!5304 = !{!5305}
!5305 = !DILocalVariable(name: "region", scope: !5303, file: !330, line: 103, type: !5252)
!5306 = !DILocation(line: 107, column: 5, scope: !5303)
!5307 = !DILocation(line: 110, column: 22, scope: !5303)
!5308 = !DILocation(line: 111, column: 28, scope: !5303)
!5309 = !DILocation(line: 114, column: 19, scope: !5303)
!5310 = !DILocation(line: 115, column: 23, scope: !5303)
!5311 = !DILocation(line: 0, scope: !5303)
!5312 = !DILocation(line: 118, column: 5, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5303, file: !330, line: 118, column: 5)
!5314 = !DILocation(line: 120, column: 9, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !330, line: 118, column: 81)
!5316 = distinct !DILexicalBlock(scope: !5313, file: !330, line: 118, column: 5)
!5317 = !DILocation(line: 120, column: 38, scope: !5315)
!5318 = !DILocation(line: 121, column: 9, scope: !5315)
!5319 = !DILocation(line: 121, column: 42, scope: !5315)
!5320 = !DILocation(line: 124, column: 45, scope: !5315)
!5321 = !DILocation(line: 124, column: 47, scope: !5315)
!5322 = !DILocation(line: 125, column: 49, scope: !5315)
!5323 = !DILocation(line: 125, column: 51, scope: !5315)
!5324 = !DILocation(line: 118, column: 77, scope: !5316)
!5325 = !DILocation(line: 118, column: 46, scope: !5316)
!5326 = distinct !{!5326, !5312, !5327}
!5327 = !DILocation(line: 126, column: 5, scope: !5313)
!5328 = !DILocation(line: 129, column: 20, scope: !5303)
!5329 = !DILocation(line: 131, column: 5, scope: !5303)
!5330 = distinct !DISubprogram(name: "hal_cache_enable", scope: !330, file: !330, line: 134, type: !5247, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !1305)
!5331 = !DILocation(line: 137, column: 45, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5330, file: !330, line: 137, column: 9)
!5333 = !DILocation(line: 137, column: 28, scope: !5332)
!5334 = !DILocation(line: 137, column: 9, scope: !5330)
!5335 = !DILocation(line: 142, column: 22, scope: !5330)
!5336 = !DILocation(line: 145, column: 28, scope: !5330)
!5337 = !DILocation(line: 145, column: 19, scope: !5330)
!5338 = !DILocation(line: 147, column: 5, scope: !5330)
!5339 = !DILocation(line: 0, scope: !5330)
!5340 = !DILocation(line: 148, column: 1, scope: !5330)
!5341 = distinct !DISubprogram(name: "hal_cache_disable", scope: !330, file: !330, line: 150, type: !5247, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5342)
!5342 = !{!5343}
!5343 = !DILocalVariable(name: "irq_flag", scope: !5341, file: !330, line: 152, type: !61)
!5344 = !DILocation(line: 155, column: 16, scope: !5341)
!5345 = !DILocation(line: 0, scope: !5341)
!5346 = !DILocation(line: 158, column: 16, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5341, file: !330, line: 158, column: 9)
!5348 = !DILocation(line: 158, column: 26, scope: !5347)
!5349 = !DILocation(line: 158, column: 9, scope: !5341)
!5350 = !DILocation(line: 160, column: 9, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5347, file: !330, line: 158, column: 49)
!5352 = !DILocation(line: 161, column: 5, scope: !5351)
!5353 = !DILocation(line: 164, column: 22, scope: !5341)
!5354 = !DILocation(line: 167, column: 28, scope: !5341)
!5355 = !DILocation(line: 167, column: 19, scope: !5341)
!5356 = !DILocation(line: 170, column: 5, scope: !5341)
!5357 = !DILocation(line: 172, column: 5, scope: !5341)
!5358 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !330, file: !330, line: 175, type: !5359, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5361)
!5359 = !DISubroutineType(types: !5360)
!5360 = !{!5249, !5252}
!5361 = !{!5362}
!5362 = !DILocalVariable(name: "region", arg: 1, scope: !5358, file: !330, line: 175, type: !5252)
!5363 = !DILocation(line: 0, scope: !5358)
!5364 = !DILocation(line: 178, column: 16, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5358, file: !330, line: 178, column: 9)
!5366 = !DILocation(line: 178, column: 9, scope: !5358)
!5367 = !DILocation(line: 183, column: 9, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5358, file: !330, line: 183, column: 9)
!5369 = !DILocation(line: 183, column: 38, scope: !5368)
!5370 = !DILocation(line: 183, column: 9, scope: !5358)
!5371 = !DILocation(line: 184, column: 38, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5368, file: !330, line: 183, column: 62)
!5373 = !DILocation(line: 184, column: 32, scope: !5372)
!5374 = !DILocation(line: 190, column: 32, scope: !5358)
!5375 = !DILocation(line: 190, column: 23, scope: !5358)
!5376 = !DILocation(line: 192, column: 5, scope: !5358)
!5377 = !DILocation(line: 193, column: 1, scope: !5358)
!5378 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !330, file: !330, line: 195, type: !5359, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5379)
!5379 = !{!5380}
!5380 = !DILocalVariable(name: "region", arg: 1, scope: !5378, file: !330, line: 195, type: !5252)
!5381 = !DILocation(line: 0, scope: !5378)
!5382 = !DILocation(line: 198, column: 16, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5378, file: !330, line: 198, column: 9)
!5384 = !DILocation(line: 198, column: 9, scope: !5378)
!5385 = !DILocation(line: 203, column: 35, scope: !5378)
!5386 = !DILocation(line: 203, column: 31, scope: !5378)
!5387 = !DILocation(line: 203, column: 28, scope: !5378)
!5388 = !DILocation(line: 206, column: 32, scope: !5378)
!5389 = !DILocation(line: 206, column: 23, scope: !5378)
!5390 = !DILocation(line: 209, column: 41, scope: !5378)
!5391 = !DILocation(line: 209, column: 43, scope: !5378)
!5392 = !DILocation(line: 210, column: 45, scope: !5378)
!5393 = !DILocation(line: 210, column: 47, scope: !5378)
!5394 = !DILocation(line: 212, column: 5, scope: !5378)
!5395 = !DILocation(line: 213, column: 1, scope: !5378)
!5396 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !330, file: !330, line: 215, type: !5397, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5400)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{!5249, !5399}
!5399 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !333, line: 182, baseType: !362)
!5400 = !{!5401}
!5401 = !DILocalVariable(name: "cache_size", arg: 1, scope: !5396, file: !330, line: 215, type: !5399)
!5402 = !DILocation(line: 0, scope: !5396)
!5403 = !DILocation(line: 218, column: 20, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5396, file: !330, line: 218, column: 9)
!5405 = !DILocation(line: 218, column: 9, scope: !5396)
!5406 = !DILocation(line: 223, column: 22, scope: !5396)
!5407 = !DILocation(line: 224, column: 37, scope: !5396)
!5408 = !DILocation(line: 224, column: 22, scope: !5396)
!5409 = !DILocation(line: 227, column: 20, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5396, file: !330, line: 227, column: 9)
!5411 = !DILocation(line: 227, column: 9, scope: !5396)
!5412 = !DILocation(line: 228, column: 26, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5410, file: !330, line: 227, column: 43)
!5414 = !DILocation(line: 229, column: 5, scope: !5413)
!5415 = !DILocation(line: 232, column: 28, scope: !5396)
!5416 = !DILocation(line: 232, column: 19, scope: !5396)
!5417 = !DILocation(line: 234, column: 5, scope: !5396)
!5418 = !DILocation(line: 235, column: 1, scope: !5396)
!5419 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !330, file: !330, line: 237, type: !5420, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5429)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{!5249, !5252, !5422}
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 32)
!5423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5424)
!5424 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !333, line: 222, baseType: !5425)
!5425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 219, size: 64, elements: !5426)
!5426 = !{!5427, !5428}
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !5425, file: !333, line: 220, baseType: !61, size: 32)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !5425, file: !333, line: 221, baseType: !61, size: 32, offset: 32)
!5429 = !{!5430, !5431}
!5430 = !DILocalVariable(name: "region", arg: 1, scope: !5419, file: !330, line: 237, type: !5252)
!5431 = !DILocalVariable(name: "region_config", arg: 2, scope: !5419, file: !330, line: 237, type: !5422)
!5432 = !DILocation(line: 0, scope: !5419)
!5433 = !DILocation(line: 240, column: 16, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5419, file: !330, line: 240, column: 9)
!5435 = !DILocation(line: 240, column: 9, scope: !5419)
!5436 = !DILocation(line: 245, column: 23, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5419, file: !330, line: 245, column: 9)
!5438 = !DILocation(line: 245, column: 9, scope: !5419)
!5439 = !DILocation(line: 250, column: 24, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5419, file: !330, line: 250, column: 9)
!5441 = !DILocation(line: 250, column: 45, scope: !5440)
!5442 = !DILocation(line: 250, column: 9, scope: !5419)
!5443 = !DILocation(line: 251, column: 9, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5440, file: !330, line: 250, column: 81)
!5445 = !DILocation(line: 256, column: 24, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5419, file: !330, line: 256, column: 9)
!5447 = !DILocation(line: 256, column: 42, scope: !5446)
!5448 = !DILocation(line: 256, column: 9, scope: !5419)
!5449 = !DILocation(line: 257, column: 9, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5446, file: !330, line: 256, column: 78)
!5451 = !DILocation(line: 262, column: 5, scope: !5419)
!5452 = !DILocation(line: 262, column: 34, scope: !5419)
!5453 = !DILocation(line: 263, column: 55, scope: !5419)
!5454 = !DILocation(line: 263, column: 93, scope: !5419)
!5455 = !DILocation(line: 263, column: 76, scope: !5419)
!5456 = !DILocation(line: 263, column: 5, scope: !5419)
!5457 = !DILocation(line: 263, column: 38, scope: !5419)
!5458 = !DILocation(line: 266, column: 34, scope: !5419)
!5459 = !DILocation(line: 269, column: 45, scope: !5419)
!5460 = !DILocation(line: 269, column: 41, scope: !5419)
!5461 = !DILocation(line: 269, column: 43, scope: !5419)
!5462 = !DILocation(line: 270, column: 49, scope: !5419)
!5463 = !DILocation(line: 270, column: 45, scope: !5419)
!5464 = !DILocation(line: 270, column: 47, scope: !5419)
!5465 = !DILocation(line: 272, column: 5, scope: !5419)
!5466 = !DILocation(line: 273, column: 1, scope: !5419)
!5467 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !330, file: !330, line: 275, type: !5468, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5470)
!5468 = !DISubroutineType(types: !5469)
!5469 = !{!5249, !61}
!5470 = !{!5471, !5472}
!5471 = !DILocalVariable(name: "address", arg: 1, scope: !5467, file: !330, line: 275, type: !61)
!5472 = !DILocalVariable(name: "irq_flag", scope: !5467, file: !330, line: 277, type: !61)
!5473 = !DILocation(line: 0, scope: !5467)
!5474 = !DILocation(line: 280, column: 17, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5467, file: !330, line: 280, column: 9)
!5476 = !DILocation(line: 280, column: 9, scope: !5467)
!5477 = !DILocation(line: 284, column: 16, scope: !5467)
!5478 = !DILocation(line: 287, column: 32, scope: !5467)
!5479 = !DILocation(line: 287, column: 21, scope: !5467)
!5480 = !DILocation(line: 288, column: 21, scope: !5467)
!5481 = !DILocation(line: 434, column: 3, scope: !5297, inlinedAt: !5482)
!5482 = distinct !DILocation(line: 291, column: 5, scope: !5467)
!5483 = !DILocation(line: 294, column: 5, scope: !5467)
!5484 = !DILocation(line: 296, column: 5, scope: !5467)
!5485 = !DILocation(line: 297, column: 1, scope: !5467)
!5486 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !330, file: !330, line: 299, type: !5487, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5489)
!5487 = !DISubroutineType(types: !5488)
!5488 = !{!5249, !61, !61}
!5489 = !{!5490, !5491, !5492, !5493}
!5490 = !DILocalVariable(name: "address", arg: 1, scope: !5486, file: !330, line: 299, type: !61)
!5491 = !DILocalVariable(name: "length", arg: 2, scope: !5486, file: !330, line: 299, type: !61)
!5492 = !DILocalVariable(name: "irq_flag", scope: !5486, file: !330, line: 301, type: !61)
!5493 = !DILocalVariable(name: "end_address", scope: !5486, file: !330, line: 302, type: !61)
!5494 = !DILocation(line: 0, scope: !5486)
!5495 = !DILocation(line: 302, column: 36, scope: !5486)
!5496 = !DILocation(line: 305, column: 47, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5486, file: !330, line: 305, column: 9)
!5498 = !DILocation(line: 310, column: 16, scope: !5486)
!5499 = !DILocation(line: 313, column: 20, scope: !5486)
!5500 = !DILocation(line: 313, column: 5, scope: !5486)
!5501 = !DILocation(line: 314, column: 9, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5486, file: !330, line: 313, column: 35)
!5503 = !DILocation(line: 315, column: 17, scope: !5502)
!5504 = distinct !{!5504, !5500, !5505}
!5505 = !DILocation(line: 316, column: 5, scope: !5486)
!5506 = !DILocation(line: 434, column: 3, scope: !5297, inlinedAt: !5507)
!5507 = distinct !DILocation(line: 319, column: 5, scope: !5486)
!5508 = !DILocation(line: 322, column: 5, scope: !5486)
!5509 = !DILocation(line: 324, column: 5, scope: !5486)
!5510 = !DILocation(line: 325, column: 1, scope: !5486)
!5511 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !330, file: !330, line: 351, type: !5468, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5512)
!5512 = !{!5513, !5514}
!5513 = !DILocalVariable(name: "address", arg: 1, scope: !5511, file: !330, line: 351, type: !61)
!5514 = !DILocalVariable(name: "irq_flag", scope: !5511, file: !330, line: 353, type: !61)
!5515 = !DILocation(line: 0, scope: !5511)
!5516 = !DILocation(line: 356, column: 17, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5511, file: !330, line: 356, column: 9)
!5518 = !DILocation(line: 356, column: 9, scope: !5511)
!5519 = !DILocation(line: 361, column: 16, scope: !5511)
!5520 = !DILocation(line: 364, column: 32, scope: !5511)
!5521 = !DILocation(line: 364, column: 21, scope: !5511)
!5522 = !DILocation(line: 365, column: 21, scope: !5511)
!5523 = !DILocation(line: 434, column: 3, scope: !5297, inlinedAt: !5524)
!5524 = distinct !DILocation(line: 368, column: 5, scope: !5511)
!5525 = !DILocation(line: 371, column: 5, scope: !5511)
!5526 = !DILocation(line: 373, column: 5, scope: !5511)
!5527 = !DILocation(line: 374, column: 1, scope: !5511)
!5528 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !330, file: !330, line: 376, type: !5487, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5529)
!5529 = !{!5530, !5531, !5532, !5533}
!5530 = !DILocalVariable(name: "address", arg: 1, scope: !5528, file: !330, line: 376, type: !61)
!5531 = !DILocalVariable(name: "length", arg: 2, scope: !5528, file: !330, line: 376, type: !61)
!5532 = !DILocalVariable(name: "irq_flag", scope: !5528, file: !330, line: 378, type: !61)
!5533 = !DILocalVariable(name: "end_address", scope: !5528, file: !330, line: 379, type: !61)
!5534 = !DILocation(line: 0, scope: !5528)
!5535 = !DILocation(line: 379, column: 36, scope: !5528)
!5536 = !DILocation(line: 382, column: 47, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5528, file: !330, line: 382, column: 9)
!5538 = !DILocation(line: 387, column: 16, scope: !5528)
!5539 = !DILocation(line: 390, column: 20, scope: !5528)
!5540 = !DILocation(line: 390, column: 5, scope: !5528)
!5541 = !DILocation(line: 391, column: 9, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5528, file: !330, line: 390, column: 35)
!5543 = !DILocation(line: 392, column: 17, scope: !5542)
!5544 = distinct !{!5544, !5540, !5545}
!5545 = !DILocation(line: 393, column: 5, scope: !5528)
!5546 = !DILocation(line: 434, column: 3, scope: !5297, inlinedAt: !5547)
!5547 = distinct !DILocation(line: 396, column: 5, scope: !5528)
!5548 = !DILocation(line: 399, column: 5, scope: !5528)
!5549 = !DILocation(line: 401, column: 5, scope: !5528)
!5550 = !DILocation(line: 402, column: 1, scope: !5528)
!5551 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !330, file: !330, line: 404, type: !5247, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5552)
!5552 = !{!5553}
!5553 = !DILocalVariable(name: "irq_flag", scope: !5551, file: !330, line: 406, type: !61)
!5554 = !DILocation(line: 409, column: 16, scope: !5551)
!5555 = !DILocation(line: 0, scope: !5551)
!5556 = !DILocation(line: 412, column: 21, scope: !5551)
!5557 = !DILocation(line: 413, column: 21, scope: !5551)
!5558 = !DILocation(line: 434, column: 3, scope: !5297, inlinedAt: !5559)
!5559 = distinct !DILocation(line: 416, column: 5, scope: !5551)
!5560 = !DILocation(line: 419, column: 5, scope: !5551)
!5561 = !DILocation(line: 421, column: 5, scope: !5551)
!5562 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !330, file: !330, line: 424, type: !5563, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !329, retainedNodes: !5565)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{!69, !61}
!5565 = !{!5566, !5567}
!5566 = !DILocalVariable(name: "address", arg: 1, scope: !5562, file: !330, line: 424, type: !61)
!5567 = !DILocalVariable(name: "region", scope: !5562, file: !330, line: 426, type: !5252)
!5568 = !DILocation(line: 0, scope: !5562)
!5569 = !DILocation(line: 429, column: 18, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5562, file: !330, line: 429, column: 9)
!5571 = !DILocation(line: 429, column: 28, scope: !5570)
!5572 = !DILocation(line: 429, column: 9, scope: !5562)
!5573 = !DILocation(line: 435, column: 20, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5575, file: !330, line: 435, column: 13)
!5575 = distinct !DILexicalBlock(scope: !5576, file: !330, line: 433, column: 81)
!5576 = distinct !DILexicalBlock(scope: !5577, file: !330, line: 433, column: 5)
!5577 = distinct !DILexicalBlock(scope: !5562, file: !330, line: 433, column: 5)
!5578 = !DILocation(line: 435, column: 41, scope: !5574)
!5579 = !DILocation(line: 435, column: 36, scope: !5574)
!5580 = !DILocation(line: 435, column: 13, scope: !5575)
!5581 = !DILocation(line: 436, column: 30, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5583, file: !330, line: 436, column: 17)
!5583 = distinct !DILexicalBlock(scope: !5574, file: !330, line: 435, column: 53)
!5584 = !DILocation(line: 436, column: 59, scope: !5582)
!5585 = !DILocation(line: 436, column: 26, scope: !5582)
!5586 = !DILocation(line: 436, column: 85, scope: !5582)
!5587 = !DILocation(line: 436, column: 99, scope: !5582)
!5588 = !DILocation(line: 436, column: 97, scope: !5582)
!5589 = !DILocation(line: 436, column: 17, scope: !5583)
!5590 = !DILocation(line: 433, column: 77, scope: !5576)
!5591 = !DILocation(line: 433, column: 46, scope: !5576)
!5592 = !DILocation(line: 433, column: 5, scope: !5577)
!5593 = distinct !{!5593, !5592, !5594}
!5594 = !DILocation(line: 440, column: 5, scope: !5577)
!5595 = !DILocation(line: 442, column: 1, scope: !5562)
!5596 = distinct !DISubprogram(name: "hal_nvic_init", scope: !466, file: !466, line: 60, type: !5597, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !1305)
!5597 = !DISubroutineType(types: !5598)
!5598 = !{!5599}
!5599 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !469, line: 158, baseType: !468)
!5600 = !DILocation(line: 62, column: 5, scope: !5596)
!5601 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !466, file: !466, line: 65, type: !5602, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5604)
!5602 = !DISubroutineType(types: !5603)
!5603 = !{!5599, !477}
!5604 = !{!5605, !5606}
!5605 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5601, file: !466, line: 65, type: !477)
!5606 = !DILocalVariable(name: "status", scope: !5601, file: !466, line: 67, type: !5599)
!5607 = !DILocation(line: 0, scope: !5601)
!5608 = !DILocation(line: 69, column: 40, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5601, file: !466, line: 69, column: 9)
!5610 = !DILocation(line: 73, column: 9, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5609, file: !466, line: 72, column: 12)
!5612 = !DILocation(line: 77, column: 5, scope: !5601)
!5613 = !DILocation(line: 78, column: 1, scope: !5601)
!5614 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !482, file: !482, line: 1494, type: !5615, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5617)
!5615 = !DISubroutineType(types: !5616)
!5616 = !{null, !140}
!5617 = !{!5618}
!5618 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5614, file: !482, line: 1494, type: !140)
!5619 = !DILocation(line: 0, scope: !5614)
!5620 = !DILocation(line: 1497, column: 91, scope: !5614)
!5621 = !DILocation(line: 1497, column: 61, scope: !5614)
!5622 = !DILocation(line: 1497, column: 40, scope: !5614)
!5623 = !DILocation(line: 1497, column: 3, scope: !5614)
!5624 = !DILocation(line: 1497, column: 46, scope: !5614)
!5625 = !DILocation(line: 1498, column: 1, scope: !5614)
!5626 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !466, file: !466, line: 80, type: !5602, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5627)
!5627 = !{!5628, !5629}
!5628 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5626, file: !466, line: 80, type: !477)
!5629 = !DILocalVariable(name: "status", scope: !5626, file: !466, line: 82, type: !5599)
!5630 = !DILocation(line: 0, scope: !5626)
!5631 = !DILocation(line: 84, column: 40, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5626, file: !466, line: 84, column: 9)
!5633 = !DILocation(line: 88, column: 9, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5632, file: !466, line: 87, column: 12)
!5635 = !DILocation(line: 92, column: 5, scope: !5626)
!5636 = !DILocation(line: 93, column: 1, scope: !5626)
!5637 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !482, file: !482, line: 1507, type: !5615, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5638)
!5638 = !{!5639}
!5639 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5637, file: !482, line: 1507, type: !140)
!5640 = !DILocation(line: 0, scope: !5637)
!5641 = !DILocation(line: 1509, column: 65, scope: !5637)
!5642 = !DILocation(line: 1509, column: 44, scope: !5637)
!5643 = !DILocation(line: 1509, column: 32, scope: !5637)
!5644 = !DILocation(line: 1509, column: 3, scope: !5637)
!5645 = !DILocation(line: 1509, column: 39, scope: !5637)
!5646 = !DILocation(line: 1510, column: 1, scope: !5637)
!5647 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !466, file: !466, line: 95, type: !5648, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5650)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{!61, !477}
!5650 = !{!5651, !5652}
!5651 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5647, file: !466, line: 95, type: !477)
!5652 = !DILocalVariable(name: "ret", scope: !5647, file: !466, line: 97, type: !61)
!5653 = !DILocation(line: 0, scope: !5647)
!5654 = !DILocation(line: 99, column: 40, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5647, file: !466, line: 99, column: 9)
!5656 = !DILocation(line: 102, column: 15, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5655, file: !466, line: 101, column: 12)
!5658 = !DILocation(line: 105, column: 5, scope: !5647)
!5659 = !DILocation(line: 106, column: 1, scope: !5647)
!5660 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !482, file: !482, line: 1523, type: !5661, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5663)
!5661 = !DISubroutineType(types: !5662)
!5662 = !{!61, !140}
!5663 = !{!5664}
!5664 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5660, file: !482, line: 1523, type: !140)
!5665 = !DILocation(line: 0, scope: !5660)
!5666 = !DILocation(line: 1525, column: 51, scope: !5660)
!5667 = !DILocation(line: 1525, column: 23, scope: !5660)
!5668 = !DILocation(line: 1525, column: 83, scope: !5660)
!5669 = !DILocation(line: 1525, column: 22, scope: !5660)
!5670 = !DILocation(line: 1525, column: 3, scope: !5660)
!5671 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !466, file: !466, line: 108, type: !5602, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5672)
!5672 = !{!5673, !5674}
!5673 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5671, file: !466, line: 108, type: !477)
!5674 = !DILocalVariable(name: "status", scope: !5671, file: !466, line: 110, type: !5599)
!5675 = !DILocation(line: 0, scope: !5671)
!5676 = !DILocation(line: 112, column: 40, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5671, file: !466, line: 112, column: 9)
!5678 = !DILocation(line: 116, column: 9, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5677, file: !466, line: 115, column: 12)
!5680 = !DILocation(line: 120, column: 5, scope: !5671)
!5681 = !DILocation(line: 121, column: 1, scope: !5671)
!5682 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !482, file: !482, line: 1535, type: !5615, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5683)
!5683 = !{!5684}
!5684 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5682, file: !482, line: 1535, type: !140)
!5685 = !DILocation(line: 0, scope: !5682)
!5686 = !DILocation(line: 1537, column: 65, scope: !5682)
!5687 = !DILocation(line: 1537, column: 44, scope: !5682)
!5688 = !DILocation(line: 1537, column: 32, scope: !5682)
!5689 = !DILocation(line: 1537, column: 3, scope: !5682)
!5690 = !DILocation(line: 1537, column: 39, scope: !5682)
!5691 = !DILocation(line: 1538, column: 1, scope: !5682)
!5692 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !466, file: !466, line: 123, type: !5602, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5693)
!5693 = !{!5694, !5695}
!5694 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5692, file: !466, line: 123, type: !477)
!5695 = !DILocalVariable(name: "status", scope: !5692, file: !466, line: 125, type: !5599)
!5696 = !DILocation(line: 0, scope: !5692)
!5697 = !DILocation(line: 127, column: 40, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5692, file: !466, line: 127, column: 9)
!5699 = !DILocation(line: 131, column: 9, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5698, file: !466, line: 130, column: 12)
!5701 = !DILocation(line: 135, column: 5, scope: !5692)
!5702 = !DILocation(line: 136, column: 1, scope: !5692)
!5703 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !482, file: !482, line: 1547, type: !5615, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5704)
!5704 = !{!5705}
!5705 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5703, file: !482, line: 1547, type: !140)
!5706 = !DILocation(line: 0, scope: !5703)
!5707 = !DILocation(line: 1549, column: 65, scope: !5703)
!5708 = !DILocation(line: 1549, column: 44, scope: !5703)
!5709 = !DILocation(line: 1549, column: 32, scope: !5703)
!5710 = !DILocation(line: 1549, column: 3, scope: !5703)
!5711 = !DILocation(line: 1549, column: 39, scope: !5703)
!5712 = !DILocation(line: 1550, column: 1, scope: !5703)
!5713 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !466, file: !466, line: 138, type: !5714, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5716)
!5714 = !DISubroutineType(types: !5715)
!5715 = !{!5599, !477, !61}
!5716 = !{!5717, !5718, !5719}
!5717 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5713, file: !466, line: 138, type: !477)
!5718 = !DILocalVariable(name: "priority", arg: 2, scope: !5713, file: !466, line: 138, type: !61)
!5719 = !DILocalVariable(name: "status", scope: !5713, file: !466, line: 140, type: !5599)
!5720 = !DILocation(line: 0, scope: !5713)
!5721 = !DILocation(line: 142, column: 40, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5713, file: !466, line: 142, column: 9)
!5723 = !DILocation(line: 146, column: 9, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5722, file: !466, line: 145, column: 12)
!5725 = !DILocation(line: 150, column: 5, scope: !5713)
!5726 = !DILocation(line: 151, column: 1, scope: !5713)
!5727 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !482, file: !482, line: 1577, type: !5728, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5730)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{null, !140, !61}
!5730 = !{!5731, !5732}
!5731 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5727, file: !482, line: 1577, type: !140)
!5732 = !DILocalVariable(name: "priority", arg: 2, scope: !5727, file: !482, line: 1577, type: !61)
!5733 = !DILocation(line: 0, scope: !5727)
!5734 = !DILocation(line: 1582, column: 34, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !482, line: 1581, column: 8)
!5736 = distinct !DILexicalBlock(scope: !5727, file: !482, line: 1579, column: 6)
!5737 = !DILocation(line: 1582, column: 5, scope: !5735)
!5738 = !DILocation(line: 1582, column: 32, scope: !5735)
!5739 = !DILocation(line: 1583, column: 1, scope: !5727)
!5740 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !466, file: !466, line: 153, type: !5648, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5741)
!5741 = !{!5742, !5743}
!5742 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5740, file: !466, line: 153, type: !477)
!5743 = !DILocalVariable(name: "ret", scope: !5740, file: !466, line: 155, type: !61)
!5744 = !DILocation(line: 0, scope: !5740)
!5745 = !DILocation(line: 157, column: 40, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5740, file: !466, line: 157, column: 9)
!5747 = !DILocation(line: 160, column: 15, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5746, file: !466, line: 159, column: 12)
!5749 = !DILocation(line: 163, column: 5, scope: !5740)
!5750 = !DILocation(line: 164, column: 1, scope: !5740)
!5751 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !482, file: !482, line: 1597, type: !5661, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5752)
!5752 = !{!5753}
!5753 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5751, file: !482, line: 1597, type: !140)
!5754 = !DILocation(line: 0, scope: !5751)
!5755 = !DILocation(line: 1603, column: 23, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5757, file: !482, line: 1602, column: 8)
!5757 = distinct !DILexicalBlock(scope: !5751, file: !482, line: 1600, column: 6)
!5758 = !DILocation(line: 1603, column: 60, scope: !5756)
!5759 = !DILocation(line: 1604, column: 1, scope: !5751)
!5760 = distinct !DISubprogram(name: "isrC_main", scope: !466, file: !466, line: 178, type: !5597, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5761)
!5761 = !{!5762, !5763}
!5762 = !DILocalVariable(name: "status", scope: !5760, file: !466, line: 180, type: !5599)
!5763 = !DILocalVariable(name: "irq_number", scope: !5760, file: !466, line: 181, type: !477)
!5764 = !DILocation(line: 0, scope: !5760)
!5765 = !DILocation(line: 185, column: 5, scope: !5760)
!5766 = !DILocation(line: 188, column: 34, scope: !5760)
!5767 = !DILocation(line: 189, column: 24, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5760, file: !466, line: 189, column: 9)
!5769 = !DILocation(line: 192, column: 48, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5768, file: !466, line: 192, column: 16)
!5771 = !DILocation(line: 192, column: 62, scope: !5770)
!5772 = !DILocation(line: 192, column: 16, scope: !5768)
!5773 = !DILocation(line: 194, column: 9, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5770, file: !466, line: 192, column: 71)
!5775 = !DILocation(line: 195, column: 9, scope: !5774)
!5776 = !DILocation(line: 197, column: 55, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5770, file: !466, line: 196, column: 12)
!5778 = !DILocation(line: 197, column: 41, scope: !5777)
!5779 = !DILocation(line: 197, column: 53, scope: !5777)
!5780 = !DILocation(line: 198, column: 41, scope: !5777)
!5781 = !DILocation(line: 198, column: 9, scope: !5777)
!5782 = !DILocation(line: 202, column: 5, scope: !5760)
!5783 = !DILocation(line: 203, column: 1, scope: !5760)
!5784 = distinct !DISubprogram(name: "get_current_irq", scope: !466, file: !466, line: 166, type: !1286, scopeLine: 167, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5785)
!5785 = !{!5786}
!5786 = !DILocalVariable(name: "irq_num", scope: !5784, file: !466, line: 168, type: !61)
!5787 = !DILocation(line: 168, column: 31, scope: !5784)
!5788 = !DILocation(line: 168, column: 36, scope: !5784)
!5789 = !DILocation(line: 0, scope: !5784)
!5790 = !DILocation(line: 169, column: 21, scope: !5784)
!5791 = !DILocation(line: 169, column: 5, scope: !5784)
!5792 = distinct !DISubprogram(name: "get_pending_irq", scope: !466, file: !466, line: 55, type: !1286, scopeLine: 56, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !1305)
!5793 = !DILocation(line: 57, column: 19, scope: !5792)
!5794 = !DILocation(line: 57, column: 51, scope: !5792)
!5795 = !DILocation(line: 57, column: 5, scope: !5792)
!5796 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !466, file: !466, line: 205, type: !5797, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5800)
!5797 = !DISubroutineType(types: !5798)
!5798 = !{!5599, !477, !5799}
!5799 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !469, line: 175, baseType: !552)
!5800 = !{!5801, !5802, !5803}
!5801 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5796, file: !466, line: 205, type: !477)
!5802 = !DILocalVariable(name: "callback", arg: 2, scope: !5796, file: !466, line: 205, type: !5799)
!5803 = !DILocalVariable(name: "mask", scope: !5796, file: !466, line: 207, type: !61)
!5804 = !DILocation(line: 0, scope: !5796)
!5805 = !DILocation(line: 209, column: 24, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5796, file: !466, line: 209, column: 9)
!5807 = !DILocation(line: 213, column: 12, scope: !5796)
!5808 = !DILocation(line: 214, column: 5, scope: !5796)
!5809 = !DILocation(line: 215, column: 37, scope: !5796)
!5810 = !DILocation(line: 215, column: 51, scope: !5796)
!5811 = !DILocation(line: 216, column: 37, scope: !5796)
!5812 = !DILocation(line: 216, column: 49, scope: !5796)
!5813 = !DILocation(line: 217, column: 5, scope: !5796)
!5814 = !DILocation(line: 219, column: 5, scope: !5796)
!5815 = !DILocation(line: 220, column: 1, scope: !5796)
!5816 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !466, file: !466, line: 222, type: !5817, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5819)
!5817 = !DISubroutineType(types: !5818)
!5818 = !{!5599, !4865}
!5819 = !{!5820}
!5820 = !DILocalVariable(name: "mask", arg: 1, scope: !5816, file: !466, line: 222, type: !4865)
!5821 = !DILocation(line: 0, scope: !5816)
!5822 = !DILocation(line: 224, column: 13, scope: !5816)
!5823 = !DILocation(line: 224, column: 11, scope: !5816)
!5824 = !DILocation(line: 225, column: 5, scope: !5816)
!5825 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !466, file: !466, line: 228, type: !5826, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !465, retainedNodes: !5828)
!5826 = !DISubroutineType(types: !5827)
!5827 = !{!5599, !61}
!5828 = !{!5829}
!5829 = !DILocalVariable(name: "mask", arg: 1, scope: !5825, file: !466, line: 228, type: !61)
!5830 = !DILocation(line: 0, scope: !5825)
!5831 = !DILocation(line: 230, column: 5, scope: !5825)
!5832 = !DILocation(line: 231, column: 5, scope: !5825)
!5833 = distinct !DISubprogram(name: "hal_flash_init", scope: !1186, file: !1186, line: 42, type: !5834, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !5837)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{!5836}
!5836 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !45, line: 119, baseType: !1188)
!5837 = !{!5838}
!5838 = !DILocalVariable(name: "ret_value", scope: !5833, file: !1186, line: 44, type: !478)
!5839 = !DILocation(line: 0, scope: !5833)
!5840 = !DILocation(line: 45, column: 17, scope: !5833)
!5841 = !DILocation(line: 46, column: 12, scope: !5833)
!5842 = !DILocation(line: 46, column: 5, scope: !5833)
!5843 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1186, file: !1186, line: 49, type: !5834, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !1305)
!5844 = !DILocation(line: 51, column: 5, scope: !5843)
!5845 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1186, file: !1186, line: 54, type: !5846, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !5848)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!5836, !61, !1274}
!5848 = !{!5849, !5850, !5851}
!5849 = !DILocalVariable(name: "start_address", arg: 1, scope: !5845, file: !1186, line: 54, type: !61)
!5850 = !DILocalVariable(name: "block", arg: 2, scope: !5845, file: !1186, line: 54, type: !1274)
!5851 = !DILocalVariable(name: "ret_value", scope: !5845, file: !1186, line: 56, type: !478)
!5852 = !DILocation(line: 0, scope: !5845)
!5853 = !DILocation(line: 57, column: 17, scope: !5845)
!5854 = !DILocation(line: 58, column: 12, scope: !5845)
!5855 = !DILocation(line: 58, column: 5, scope: !5845)
!5856 = distinct !DISubprogram(name: "hal_flash_read", scope: !1186, file: !1186, line: 62, type: !5857, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !5859)
!5857 = !DISubroutineType(types: !5858)
!5858 = !{!5836, !61, !210, !61}
!5859 = !{!5860, !5861, !5862}
!5860 = !DILocalVariable(name: "start_address", arg: 1, scope: !5856, file: !1186, line: 62, type: !61)
!5861 = !DILocalVariable(name: "buffer", arg: 2, scope: !5856, file: !1186, line: 62, type: !210)
!5862 = !DILocalVariable(name: "length", arg: 3, scope: !5856, file: !1186, line: 62, type: !61)
!5863 = !DILocation(line: 0, scope: !5856)
!5864 = !DILocation(line: 64, column: 50, scope: !5856)
!5865 = !DILocation(line: 64, column: 27, scope: !5856)
!5866 = !DILocation(line: 64, column: 5, scope: !5856)
!5867 = !DILocation(line: 65, column: 5, scope: !5856)
!5868 = distinct !DISubprogram(name: "hal_flash_write", scope: !1186, file: !1186, line: 68, type: !5869, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !5871)
!5869 = !DISubroutineType(types: !5870)
!5870 = !{!5836, !61, !1447, !61}
!5871 = !{!5872, !5873, !5874, !5875}
!5872 = !DILocalVariable(name: "address", arg: 1, scope: !5868, file: !1186, line: 68, type: !61)
!5873 = !DILocalVariable(name: "data", arg: 2, scope: !5868, file: !1186, line: 68, type: !1447)
!5874 = !DILocalVariable(name: "length", arg: 3, scope: !5868, file: !1186, line: 68, type: !61)
!5875 = !DILocalVariable(name: "ret_value", scope: !5868, file: !1186, line: 70, type: !478)
!5876 = !DILocation(line: 0, scope: !5868)
!5877 = !DILocation(line: 70, column: 25, scope: !5868)
!5878 = !DILocation(line: 71, column: 12, scope: !5868)
!5879 = !DILocation(line: 71, column: 5, scope: !5868)
!5880 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !1200, file: !1200, line: 50, type: !5881, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !5885)
!5881 = !DISubroutineType(types: !5882)
!5882 = !{!5883, !5884, !54}
!5883 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !1203, line: 238, baseType: !1202)
!5884 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !29, line: 281, baseType: !1209)
!5885 = !{!5886, !5887, !5888}
!5886 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5880, file: !1200, line: 50, type: !5884)
!5887 = !DILocalVariable(name: "function_index", arg: 2, scope: !5880, file: !1200, line: 50, type: !54)
!5888 = !DILocalVariable(name: "ret_value", scope: !5880, file: !1200, line: 52, type: !478)
!5889 = !DILocation(line: 0, scope: !5880)
!5890 = !DILocation(line: 53, column: 18, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5880, file: !1200, line: 53, column: 9)
!5892 = !DILocation(line: 53, column: 9, scope: !5880)
!5893 = !DILocation(line: 57, column: 24, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5880, file: !1200, line: 57, column: 9)
!5895 = !DILocation(line: 57, column: 9, scope: !5880)
!5896 = !DILocation(line: 57, column: 9, scope: !5894)
!5897 = !DILocation(line: 60, column: 17, scope: !5880)
!5898 = !DILocation(line: 61, column: 12, scope: !5880)
!5899 = !DILocation(line: 61, column: 5, scope: !5880)
!5900 = !DILocation(line: 62, column: 1, scope: !5880)
!5901 = distinct !DISubprogram(name: "hal_gpio_init", scope: !1200, file: !1200, line: 64, type: !5902, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !5905)
!5902 = !DISubroutineType(types: !5903)
!5903 = !{!5904, !5884}
!5904 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !1203, line: 229, baseType: !1240)
!5905 = !{!5906}
!5906 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5901, file: !1200, line: 64, type: !5884)
!5907 = !DILocation(line: 0, scope: !5901)
!5908 = !DILocation(line: 66, column: 5, scope: !5901)
!5909 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !1200, file: !1200, line: 69, type: !5902, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !5910)
!5910 = !{!5911}
!5911 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5909, file: !1200, line: 69, type: !5884)
!5912 = !DILocation(line: 0, scope: !5909)
!5913 = !DILocation(line: 71, column: 5, scope: !5909)
!5914 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !1200, file: !1200, line: 74, type: !5915, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !5918)
!5915 = !DISubroutineType(types: !5916)
!5916 = !{!5904, !5884, !5917}
!5917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 32)
!5918 = !{!5919, !5920, !5921}
!5919 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5914, file: !1200, line: 74, type: !5884)
!5920 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5914, file: !1200, line: 74, type: !5917)
!5921 = !DILocalVariable(name: "status", scope: !5914, file: !1200, line: 76, type: !5922)
!5922 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_status", file: !1261, line: 67, baseType: !5923)
!5923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1261, line: 62, size: 64, elements: !5924)
!5924 = !{!5925, !5926, !5927, !5928}
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PIN", scope: !5923, file: !1261, line: 63, baseType: !61, size: 32)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OUTEN", scope: !5923, file: !1261, line: 64, baseType: !54, size: 8, offset: 32)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "GPI_DIN", scope: !5923, file: !1261, line: 65, baseType: !54, size: 8, offset: 40)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "GPO_DOUT", scope: !5923, file: !1261, line: 66, baseType: !54, size: 8, offset: 48)
!5929 = !DILocation(line: 0, scope: !5914)
!5930 = !DILocation(line: 77, column: 14, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5914, file: !1200, line: 77, column: 9)
!5932 = !DILocation(line: 77, column: 9, scope: !5914)
!5933 = !DILocation(line: 81, column: 18, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5914, file: !1200, line: 81, column: 9)
!5935 = !DILocation(line: 81, column: 9, scope: !5914)
!5936 = !DILocation(line: 85, column: 14, scope: !5914)
!5937 = !DILocation(line: 86, column: 18, scope: !5914)
!5938 = !DILocation(line: 86, column: 16, scope: !5914)
!5939 = !DILocation(line: 87, column: 5, scope: !5914)
!5940 = !DILocation(line: 88, column: 1, scope: !5914)
!5941 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !1200, file: !1200, line: 90, type: !5942, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !5944)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!5904, !5884, !1267}
!5944 = !{!5945, !5946, !5947}
!5945 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5941, file: !1200, line: 90, type: !5884)
!5946 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5941, file: !1200, line: 90, type: !1267)
!5947 = !DILocalVariable(name: "ret_value", scope: !5941, file: !1200, line: 92, type: !478)
!5948 = !DILocation(line: 0, scope: !5941)
!5949 = !DILocation(line: 93, column: 18, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5941, file: !1200, line: 93, column: 9)
!5951 = !DILocation(line: 93, column: 9, scope: !5941)
!5952 = !DILocation(line: 97, column: 60, scope: !5941)
!5953 = !DILocation(line: 97, column: 17, scope: !5941)
!5954 = !DILocation(line: 98, column: 12, scope: !5941)
!5955 = !DILocation(line: 98, column: 5, scope: !5941)
!5956 = !DILocation(line: 99, column: 1, scope: !5941)
!5957 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !1200, file: !1200, line: 101, type: !5915, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !5958)
!5958 = !{!5959, !5960, !5961}
!5959 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5957, file: !1200, line: 101, type: !5884)
!5960 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5957, file: !1200, line: 101, type: !5917)
!5961 = !DILocalVariable(name: "status", scope: !5957, file: !1200, line: 103, type: !5922)
!5962 = !DILocation(line: 0, scope: !5957)
!5963 = !DILocation(line: 104, column: 18, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5957, file: !1200, line: 104, column: 9)
!5965 = !DILocation(line: 104, column: 9, scope: !5957)
!5966 = !DILocation(line: 108, column: 14, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5957, file: !1200, line: 108, column: 9)
!5968 = !DILocation(line: 108, column: 9, scope: !5957)
!5969 = !DILocation(line: 112, column: 14, scope: !5957)
!5970 = !DILocation(line: 113, column: 18, scope: !5957)
!5971 = !DILocation(line: 113, column: 16, scope: !5957)
!5972 = !DILocation(line: 114, column: 5, scope: !5957)
!5973 = !DILocation(line: 115, column: 1, scope: !5957)
!5974 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !1200, file: !1200, line: 117, type: !5975, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !5978)
!5975 = !DISubroutineType(types: !5976)
!5976 = !{!5904, !5884, !5977}
!5977 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !1203, line: 213, baseType: !1250)
!5978 = !{!5979, !5980, !5981}
!5979 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5974, file: !1200, line: 117, type: !5884)
!5980 = !DILocalVariable(name: "direction", arg: 2, scope: !5974, file: !1200, line: 117, type: !5977)
!5981 = !DILocalVariable(name: "ret_value", scope: !5974, file: !1200, line: 119, type: !478)
!5982 = !DILocation(line: 0, scope: !5974)
!5983 = !DILocation(line: 120, column: 18, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5974, file: !1200, line: 120, column: 9)
!5985 = !DILocation(line: 120, column: 9, scope: !5974)
!5986 = !DILocation(line: 123, column: 17, scope: !5974)
!5987 = !DILocation(line: 125, column: 12, scope: !5974)
!5988 = !DILocation(line: 125, column: 5, scope: !5974)
!5989 = !DILocation(line: 126, column: 1, scope: !5974)
!5990 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !1200, file: !1200, line: 128, type: !5991, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !5994)
!5991 = !DISubroutineType(types: !5992)
!5992 = !{!5904, !5884, !5993}
!5993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5977, size: 32)
!5994 = !{!5995, !5996, !5997}
!5995 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5990, file: !1200, line: 128, type: !5884)
!5996 = !DILocalVariable(name: "direction", arg: 2, scope: !5990, file: !1200, line: 128, type: !5993)
!5997 = !DILocalVariable(name: "status", scope: !5990, file: !1200, line: 131, type: !5922)
!5998 = !DILocation(line: 0, scope: !5990)
!5999 = !DILocation(line: 132, column: 18, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5990, file: !1200, line: 132, column: 9)
!6001 = !DILocation(line: 132, column: 9, scope: !5990)
!6002 = !DILocation(line: 136, column: 14, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5990, file: !1200, line: 136, column: 9)
!6004 = !DILocation(line: 136, column: 9, scope: !5990)
!6005 = !DILocation(line: 140, column: 14, scope: !5990)
!6006 = !DILocation(line: 141, column: 18, scope: !5990)
!6007 = !DILocation(line: 141, column: 16, scope: !5990)
!6008 = !DILocation(line: 142, column: 5, scope: !5990)
!6009 = !DILocation(line: 143, column: 1, scope: !5990)
!6010 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !1200, file: !1200, line: 146, type: !5902, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !6011)
!6011 = !{!6012, !6013}
!6012 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6010, file: !1200, line: 146, type: !5884)
!6013 = !DILocalVariable(name: "status", scope: !6010, file: !1200, line: 148, type: !5922)
!6014 = !DILocation(line: 0, scope: !6010)
!6015 = !DILocation(line: 149, column: 18, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6010, file: !1200, line: 149, column: 9)
!6017 = !DILocation(line: 149, column: 9, scope: !6010)
!6018 = !DILocation(line: 153, column: 14, scope: !6010)
!6019 = !DILocation(line: 154, column: 76, scope: !6010)
!6020 = !DILocation(line: 154, column: 12, scope: !6010)
!6021 = !DILocation(line: 154, column: 5, scope: !6010)
!6022 = !DILocation(line: 155, column: 1, scope: !6010)
!6023 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !1200, file: !1200, line: 157, type: !5902, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !6024)
!6024 = !{!6025, !6026}
!6025 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6023, file: !1200, line: 157, type: !5884)
!6026 = !DILocalVariable(name: "ret_value", scope: !6023, file: !1200, line: 159, type: !478)
!6027 = !DILocation(line: 0, scope: !6023)
!6028 = !DILocation(line: 160, column: 18, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6023, file: !1200, line: 160, column: 9)
!6030 = !DILocation(line: 160, column: 9, scope: !6023)
!6031 = !DILocation(line: 164, column: 17, scope: !6023)
!6032 = !DILocation(line: 165, column: 19, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6023, file: !1200, line: 165, column: 9)
!6034 = !DILocation(line: 165, column: 9, scope: !6023)
!6035 = !DILocation(line: 168, column: 17, scope: !6023)
!6036 = !DILocation(line: 169, column: 12, scope: !6023)
!6037 = !DILocation(line: 169, column: 5, scope: !6023)
!6038 = !DILocation(line: 170, column: 1, scope: !6023)
!6039 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !1200, file: !1200, line: 172, type: !5902, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !6040)
!6040 = !{!6041, !6042}
!6041 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6039, file: !1200, line: 172, type: !5884)
!6042 = !DILocalVariable(name: "ret_value", scope: !6039, file: !1200, line: 174, type: !478)
!6043 = !DILocation(line: 0, scope: !6039)
!6044 = !DILocation(line: 175, column: 18, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6039, file: !1200, line: 175, column: 9)
!6046 = !DILocation(line: 175, column: 9, scope: !6039)
!6047 = !DILocation(line: 179, column: 17, scope: !6039)
!6048 = !DILocation(line: 180, column: 19, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6039, file: !1200, line: 180, column: 9)
!6050 = !DILocation(line: 180, column: 9, scope: !6039)
!6051 = !DILocation(line: 183, column: 17, scope: !6039)
!6052 = !DILocation(line: 184, column: 12, scope: !6039)
!6053 = !DILocation(line: 184, column: 5, scope: !6039)
!6054 = !DILocation(line: 185, column: 1, scope: !6039)
!6055 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !1200, file: !1200, line: 187, type: !5902, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !6056)
!6056 = !{!6057, !6058}
!6057 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6055, file: !1200, line: 187, type: !5884)
!6058 = !DILocalVariable(name: "ret_value", scope: !6055, file: !1200, line: 189, type: !478)
!6059 = !DILocation(line: 0, scope: !6055)
!6060 = !DILocation(line: 191, column: 18, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6055, file: !1200, line: 191, column: 9)
!6062 = !DILocation(line: 191, column: 9, scope: !6055)
!6063 = !DILocation(line: 195, column: 17, scope: !6055)
!6064 = !DILocation(line: 196, column: 12, scope: !6055)
!6065 = !DILocation(line: 196, column: 5, scope: !6055)
!6066 = !DILocation(line: 197, column: 1, scope: !6055)
!6067 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !1200, file: !1200, line: 200, type: !6068, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !6070)
!6068 = !DISubroutineType(types: !6069)
!6069 = !{!5904, !5884, !1268}
!6070 = !{!6071, !6072, !6073}
!6071 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6067, file: !1200, line: 200, type: !5884)
!6072 = !DILocalVariable(name: "driving", arg: 2, scope: !6067, file: !1200, line: 200, type: !1268)
!6073 = !DILocalVariable(name: "ret_value", scope: !6067, file: !1200, line: 202, type: !478)
!6074 = !DILocation(line: 0, scope: !6067)
!6075 = !DILocation(line: 204, column: 18, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6067, file: !1200, line: 204, column: 9)
!6077 = !DILocation(line: 204, column: 9, scope: !6067)
!6078 = !DILocation(line: 208, column: 64, scope: !6067)
!6079 = !DILocation(line: 208, column: 17, scope: !6067)
!6080 = !DILocation(line: 210, column: 12, scope: !6067)
!6081 = !DILocation(line: 210, column: 5, scope: !6067)
!6082 = !DILocation(line: 211, column: 1, scope: !6067)
!6083 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !1200, file: !1200, line: 214, type: !6084, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1199, retainedNodes: !6087)
!6084 = !DISubroutineType(types: !6085)
!6085 = !{!5904, !5884, !6086}
!6086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 32)
!6087 = !{!6088, !6089, !6090, !6091}
!6088 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6083, file: !1200, line: 214, type: !5884)
!6089 = !DILocalVariable(name: "driving", arg: 2, scope: !6083, file: !1200, line: 214, type: !6086)
!6090 = !DILocalVariable(name: "ret_value", scope: !6083, file: !1200, line: 216, type: !478)
!6091 = !DILocalVariable(name: "value", scope: !6083, file: !1200, line: 217, type: !54)
!6092 = !DILocation(line: 0, scope: !6083)
!6093 = !DILocation(line: 217, column: 5, scope: !6083)
!6094 = !DILocation(line: 219, column: 18, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6083, file: !1200, line: 219, column: 9)
!6096 = !DILocation(line: 219, column: 9, scope: !6083)
!6097 = !DILocation(line: 223, column: 17, scope: !6083)
!6098 = !DILocation(line: 225, column: 44, scope: !6083)
!6099 = !DILocation(line: 225, column: 16, scope: !6083)
!6100 = !DILocation(line: 225, column: 14, scope: !6083)
!6101 = !DILocation(line: 227, column: 12, scope: !6083)
!6102 = !DILocation(line: 227, column: 5, scope: !6083)
!6103 = !DILocation(line: 228, column: 1, scope: !6083)
!6104 = distinct !DISubprogram(name: "hal_gpt_init", scope: !561, file: !561, line: 82, type: !6105, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6108)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!1291, !6107}
!6107 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !29, line: 663, baseType: !563)
!6108 = !{!6109}
!6109 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6104, file: !561, line: 82, type: !6107)
!6110 = !DILocation(line: 0, scope: !6104)
!6111 = !DILocation(line: 84, column: 9, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6104, file: !561, line: 84, column: 9)
!6113 = !DILocation(line: 84, column: 33, scope: !6112)
!6114 = !DILocation(line: 84, column: 9, scope: !6104)
!6115 = !DILocation(line: 88, column: 9, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6104, file: !561, line: 88, column: 9)
!6117 = !DILocation(line: 88, column: 9, scope: !6104)
!6118 = !DILocation(line: 89, column: 9, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6116, file: !561, line: 88, column: 50)
!6120 = !DILocation(line: 90, column: 9, scope: !6119)
!6121 = !DILocation(line: 92, column: 12, scope: !6104)
!6122 = !DILocation(line: 92, column: 5, scope: !6104)
!6123 = !DILocation(line: 96, column: 43, scope: !6104)
!6124 = !DILocation(line: 98, column: 5, scope: !6104)
!6125 = !DILocation(line: 99, column: 1, scope: !6104)
!6126 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !561, file: !561, line: 63, type: !6127, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6129)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{!69, !6107}
!6129 = !{!6130}
!6130 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6126, file: !561, line: 63, type: !6107)
!6131 = !DILocation(line: 0, scope: !6126)
!6132 = !DILocation(line: 65, column: 19, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6126, file: !561, line: 65, column: 9)
!6134 = !DILocation(line: 65, column: 34, scope: !6133)
!6135 = !DILocation(line: 70, column: 1, scope: !6126)
!6136 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !561, file: !561, line: 101, type: !6105, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6137)
!6137 = !{!6138}
!6138 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6136, file: !561, line: 101, type: !6107)
!6139 = !DILocation(line: 0, scope: !6136)
!6140 = !DILocation(line: 103, column: 9, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6136, file: !561, line: 103, column: 9)
!6142 = !DILocation(line: 103, column: 9, scope: !6136)
!6143 = !DILocation(line: 104, column: 9, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6141, file: !561, line: 103, column: 50)
!6145 = !DILocation(line: 105, column: 9, scope: !6144)
!6146 = !DILocation(line: 108, column: 9, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6136, file: !561, line: 108, column: 9)
!6148 = !DILocation(line: 108, column: 33, scope: !6147)
!6149 = !DILocation(line: 108, column: 48, scope: !6147)
!6150 = !DILocation(line: 108, column: 9, scope: !6136)
!6151 = !DILocation(line: 109, column: 9, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6147, file: !561, line: 108, column: 68)
!6153 = !DILocation(line: 110, column: 9, scope: !6152)
!6154 = !DILocation(line: 113, column: 12, scope: !6136)
!6155 = !DILocation(line: 113, column: 5, scope: !6136)
!6156 = !DILocation(line: 116, column: 29, scope: !6136)
!6157 = !DILocation(line: 116, column: 43, scope: !6136)
!6158 = !DILocation(line: 117, column: 5, scope: !6136)
!6159 = !DILocation(line: 118, column: 1, scope: !6136)
!6160 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !561, file: !561, line: 120, type: !6161, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6164)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{!1291, !6163, !4865}
!6163 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !29, line: 674, baseType: !28)
!6164 = !{!6165, !6166}
!6165 = !DILocalVariable(name: "clock_source", arg: 1, scope: !6160, file: !561, line: 120, type: !6163)
!6166 = !DILocalVariable(name: "count", arg: 2, scope: !6160, file: !561, line: 120, type: !4865)
!6167 = !DILocation(line: 0, scope: !6160)
!6168 = !DILocation(line: 122, column: 9, scope: !6160)
!6169 = !DILocation(line: 123, column: 50, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !561, line: 123, column: 13)
!6171 = distinct !DILexicalBlock(scope: !6172, file: !561, line: 122, column: 51)
!6172 = distinct !DILexicalBlock(scope: !6160, file: !561, line: 122, column: 9)
!6173 = !DILocation(line: 123, column: 65, scope: !6170)
!6174 = !DILocation(line: 123, column: 13, scope: !6171)
!6175 = !DILocation(line: 124, column: 13, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6170, file: !561, line: 123, column: 86)
!6177 = !DILocation(line: 125, column: 9, scope: !6176)
!6178 = !DILocation(line: 126, column: 18, scope: !6171)
!6179 = !DILocation(line: 126, column: 16, scope: !6171)
!6180 = !DILocation(line: 127, column: 49, scope: !6171)
!6181 = !DILocation(line: 128, column: 5, scope: !6171)
!6182 = !DILocation(line: 129, column: 50, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6184, file: !561, line: 129, column: 13)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !561, line: 128, column: 57)
!6185 = distinct !DILexicalBlock(scope: !6172, file: !561, line: 128, column: 16)
!6186 = !DILocation(line: 129, column: 65, scope: !6183)
!6187 = !DILocation(line: 129, column: 13, scope: !6184)
!6188 = !DILocation(line: 130, column: 13, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6183, file: !561, line: 129, column: 86)
!6190 = !DILocation(line: 131, column: 9, scope: !6189)
!6191 = !DILocation(line: 132, column: 18, scope: !6184)
!6192 = !DILocation(line: 132, column: 46, scope: !6184)
!6193 = !DILocation(line: 132, column: 65, scope: !6184)
!6194 = !DILocation(line: 132, column: 43, scope: !6184)
!6195 = !DILocation(line: 132, column: 16, scope: !6184)
!6196 = !DILocation(line: 133, column: 49, scope: !6184)
!6197 = !DILocation(line: 134, column: 5, scope: !6184)
!6198 = !DILocation(line: 135, column: 50, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !561, line: 135, column: 13)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !561, line: 134, column: 58)
!6201 = distinct !DILexicalBlock(scope: !6185, file: !561, line: 134, column: 16)
!6202 = !DILocation(line: 135, column: 65, scope: !6199)
!6203 = !DILocation(line: 135, column: 13, scope: !6200)
!6204 = !DILocation(line: 136, column: 13, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6199, file: !561, line: 135, column: 86)
!6206 = !DILocation(line: 137, column: 9, scope: !6205)
!6207 = !DILocation(line: 138, column: 18, scope: !6200)
!6208 = !DILocation(line: 138, column: 16, scope: !6200)
!6209 = !DILocation(line: 139, column: 49, scope: !6200)
!6210 = !DILocation(line: 141, column: 9, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6201, file: !561, line: 140, column: 11)
!6212 = !DILocation(line: 142, column: 9, scope: !6211)
!6213 = !DILocation(line: 146, column: 1, scope: !6160)
!6214 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !561, file: !561, line: 148, type: !6215, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6217)
!6215 = !DISubroutineType(types: !6216)
!6216 = !{!1291, !61, !61, !4865}
!6217 = !{!6218, !6219, !6220}
!6218 = !DILocalVariable(name: "start_count", arg: 1, scope: !6214, file: !561, line: 148, type: !61)
!6219 = !DILocalVariable(name: "end_count", arg: 2, scope: !6214, file: !561, line: 148, type: !61)
!6220 = !DILocalVariable(name: "duration_count", arg: 3, scope: !6214, file: !561, line: 148, type: !4865)
!6221 = !DILocation(line: 0, scope: !6214)
!6222 = !DILocation(line: 150, column: 24, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6214, file: !561, line: 150, column: 9)
!6224 = !DILocation(line: 150, column: 9, scope: !6214)
!6225 = !DILocation(line: 0, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6214, file: !561, line: 154, column: 9)
!6227 = !DILocation(line: 160, column: 5, scope: !6214)
!6228 = !DILocation(line: 161, column: 1, scope: !6214)
!6229 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !561, file: !561, line: 163, type: !6230, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6233)
!6230 = !DISubroutineType(types: !6231)
!6231 = !{!1291, !6107, !6232}
!6232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 32)
!6233 = !{!6234, !6235}
!6234 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6229, file: !561, line: 163, type: !6107)
!6235 = !DILocalVariable(name: "running_status", arg: 2, scope: !6229, file: !561, line: 164, type: !6232)
!6236 = !DILocation(line: 0, scope: !6229)
!6237 = !DILocation(line: 166, column: 18, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6229, file: !561, line: 166, column: 9)
!6239 = !DILocation(line: 166, column: 9, scope: !6229)
!6240 = !DILocation(line: 167, column: 9, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6238, file: !561, line: 166, column: 34)
!6242 = !DILocation(line: 168, column: 9, scope: !6241)
!6243 = !DILocation(line: 170, column: 47, scope: !6229)
!6244 = !DILocation(line: 170, column: 21, scope: !6229)
!6245 = !DILocation(line: 171, column: 5, scope: !6229)
!6246 = !DILocation(line: 172, column: 1, scope: !6229)
!6247 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !561, file: !561, line: 174, type: !6248, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6250)
!6248 = !DISubroutineType(types: !6249)
!6249 = !{!1291, !6107, !591, !51}
!6250 = !{!6251, !6252, !6253}
!6251 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6247, file: !561, line: 174, type: !6107)
!6252 = !DILocalVariable(name: "callback", arg: 2, scope: !6247, file: !561, line: 175, type: !591)
!6253 = !DILocalVariable(name: "user_data", arg: 3, scope: !6247, file: !561, line: 176, type: !51)
!6254 = !DILocation(line: 0, scope: !6247)
!6255 = !DILocation(line: 178, column: 9, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6247, file: !561, line: 178, column: 9)
!6257 = !DILocation(line: 178, column: 9, scope: !6247)
!6258 = !DILocation(line: 179, column: 9, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6256, file: !561, line: 178, column: 50)
!6260 = !DILocation(line: 180, column: 9, scope: !6259)
!6261 = !DILocation(line: 182, column: 33, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6247, file: !561, line: 182, column: 9)
!6263 = !DILocation(line: 182, column: 47, scope: !6262)
!6264 = !DILocation(line: 182, column: 9, scope: !6247)
!6265 = !DILocation(line: 185, column: 18, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6247, file: !561, line: 185, column: 9)
!6267 = !DILocation(line: 185, column: 9, scope: !6247)
!6268 = !DILocation(line: 188, column: 46, scope: !6247)
!6269 = !DILocation(line: 188, column: 56, scope: !6247)
!6270 = !DILocation(line: 189, column: 46, scope: !6247)
!6271 = !DILocation(line: 189, column: 56, scope: !6247)
!6272 = !DILocation(line: 190, column: 5, scope: !6247)
!6273 = !DILocation(line: 191, column: 1, scope: !6247)
!6274 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !561, file: !561, line: 218, type: !6275, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6278)
!6275 = !DISubroutineType(types: !6276)
!6276 = !{!1291, !6107, !61, !6277}
!6277 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !21, line: 383, baseType: !574)
!6278 = !{!6279, !6280, !6281}
!6279 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6274, file: !561, line: 218, type: !6107)
!6280 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !6274, file: !561, line: 218, type: !61)
!6281 = !DILocalVariable(name: "timer_type", arg: 3, scope: !6274, file: !561, line: 218, type: !6277)
!6282 = !DILocation(line: 0, scope: !6274)
!6283 = !DILocation(line: 220, column: 9, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6274, file: !561, line: 220, column: 9)
!6285 = !DILocation(line: 220, column: 9, scope: !6274)
!6286 = !DILocation(line: 221, column: 9, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6284, file: !561, line: 220, column: 50)
!6288 = !DILocation(line: 222, column: 9, scope: !6287)
!6289 = !DILocation(line: 225, column: 33, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6274, file: !561, line: 225, column: 9)
!6291 = !DILocation(line: 225, column: 47, scope: !6290)
!6292 = !DILocation(line: 225, column: 9, scope: !6274)
!6293 = !DILocation(line: 229, column: 25, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6274, file: !561, line: 229, column: 9)
!6295 = !DILocation(line: 229, column: 9, scope: !6274)
!6296 = !DILocation(line: 234, column: 17, scope: !6274)
!6297 = !DILocation(line: 235, column: 17, scope: !6274)
!6298 = !DILocation(line: 236, column: 17, scope: !6274)
!6299 = !DILocation(line: 233, column: 5, scope: !6274)
!6300 = !DILocation(line: 237, column: 5, scope: !6274)
!6301 = !DILocation(line: 238, column: 29, scope: !6274)
!6302 = !DILocation(line: 238, column: 44, scope: !6274)
!6303 = !DILocation(line: 239, column: 5, scope: !6274)
!6304 = !DILocation(line: 240, column: 1, scope: !6274)
!6305 = distinct !DISubprogram(name: "hal_gpt_translate_timeout_time", scope: !561, file: !561, line: 72, type: !6306, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6308)
!6306 = !DISubroutineType(types: !6307)
!6307 = !{!61, !61}
!6308 = !{!6309}
!6309 = !DILocalVariable(name: "mili_seconds", arg: 1, scope: !6305, file: !561, line: 72, type: !61)
!6310 = !DILocation(line: 0, scope: !6305)
!6311 = !DILocation(line: 74, column: 37, scope: !6305)
!6312 = !DILocation(line: 74, column: 47, scope: !6305)
!6313 = !DILocation(line: 74, column: 63, scope: !6305)
!6314 = !DILocation(line: 74, column: 42, scope: !6305)
!6315 = !DILocation(line: 74, column: 73, scope: !6305)
!6316 = !DILocation(line: 74, column: 89, scope: !6305)
!6317 = !DILocation(line: 74, column: 68, scope: !6305)
!6318 = !DILocation(line: 74, column: 100, scope: !6305)
!6319 = !DILocation(line: 74, column: 116, scope: !6305)
!6320 = !DILocation(line: 74, column: 95, scope: !6305)
!6321 = !DILocation(line: 74, column: 5, scope: !6305)
!6322 = distinct !DISubprogram(name: "hal_gpt_translate_type", scope: !561, file: !561, line: 77, type: !6323, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6325)
!6323 = !DISubroutineType(types: !6324)
!6324 = !{!69, !6277}
!6325 = !{!6326}
!6326 = !DILocalVariable(name: "type", arg: 1, scope: !6322, file: !561, line: 77, type: !6277)
!6327 = !DILocation(line: 0, scope: !6322)
!6328 = !DILocation(line: 79, column: 38, scope: !6322)
!6329 = !DILocation(line: 79, column: 5, scope: !6322)
!6330 = distinct !DISubprogram(name: "hal_gpt_map_callback", scope: !561, file: !561, line: 213, type: !6331, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6334)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!6333, !6107}
!6333 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_internal_callback_t", file: !561, line: 211, baseType: !153)
!6334 = !{!6335}
!6335 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6330, file: !561, line: 213, type: !6107)
!6336 = !DILocation(line: 0, scope: !6330)
!6337 = !DILocation(line: 215, column: 23, scope: !6330)
!6338 = !DILocation(line: 215, column: 12, scope: !6330)
!6339 = !DILocation(line: 215, column: 5, scope: !6330)
!6340 = distinct !DISubprogram(name: "hal_gpt_callback0", scope: !561, file: !561, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6341)
!6341 = !{!6342}
!6342 = !DILocalVariable(name: "context", scope: !6340, file: !561, line: 195, type: !6343)
!6343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!6344 = !DILocation(line: 196, column: 26, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6340, file: !561, line: 196, column: 9)
!6346 = !DILocation(line: 196, column: 14, scope: !6345)
!6347 = !DILocation(line: 196, column: 9, scope: !6340)
!6348 = !DILocation(line: 197, column: 36, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6345, file: !561, line: 196, column: 36)
!6350 = !DILocation(line: 197, column: 9, scope: !6349)
!6351 = !DILocation(line: 198, column: 5, scope: !6349)
!6352 = !DILocation(line: 199, column: 45, scope: !6340)
!6353 = !DILocation(line: 200, column: 1, scope: !6340)
!6354 = distinct !DISubprogram(name: "hal_gpt_callback1", scope: !561, file: !561, line: 202, type: !154, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6355)
!6355 = !{!6356}
!6356 = !DILocalVariable(name: "context", scope: !6354, file: !561, line: 204, type: !6343)
!6357 = !DILocation(line: 205, column: 26, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6354, file: !561, line: 205, column: 9)
!6359 = !DILocation(line: 205, column: 14, scope: !6358)
!6360 = !DILocation(line: 205, column: 9, scope: !6354)
!6361 = !DILocation(line: 206, column: 36, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6358, file: !561, line: 205, column: 36)
!6363 = !DILocation(line: 206, column: 9, scope: !6362)
!6364 = !DILocation(line: 207, column: 5, scope: !6362)
!6365 = !DILocation(line: 208, column: 45, scope: !6354)
!6366 = !DILocation(line: 209, column: 1, scope: !6354)
!6367 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !561, file: !561, line: 242, type: !6105, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6368)
!6368 = !{!6369}
!6369 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6367, file: !561, line: 242, type: !6107)
!6370 = !DILocation(line: 0, scope: !6367)
!6371 = !DILocation(line: 244, column: 9, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6367, file: !561, line: 244, column: 9)
!6373 = !DILocation(line: 244, column: 9, scope: !6367)
!6374 = !DILocation(line: 245, column: 9, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6372, file: !561, line: 244, column: 50)
!6376 = !DILocation(line: 246, column: 9, scope: !6375)
!6377 = !DILocation(line: 248, column: 5, scope: !6367)
!6378 = !DILocation(line: 249, column: 29, scope: !6367)
!6379 = !DILocation(line: 249, column: 44, scope: !6367)
!6380 = !DILocation(line: 250, column: 5, scope: !6367)
!6381 = !DILocation(line: 251, column: 1, scope: !6367)
!6382 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !561, file: !561, line: 253, type: !6383, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6385)
!6383 = !DISubroutineType(types: !6384)
!6384 = !{!1291, !61}
!6385 = !{!6386}
!6386 = !DILocalVariable(name: "ms", arg: 1, scope: !6382, file: !561, line: 253, type: !61)
!6387 = !DILocation(line: 0, scope: !6382)
!6388 = !DILocation(line: 255, column: 46, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6382, file: !561, line: 255, column: 9)
!6390 = !DILocation(line: 255, column: 61, scope: !6389)
!6391 = !DILocation(line: 255, column: 9, scope: !6382)
!6392 = !DILocation(line: 256, column: 9, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6389, file: !561, line: 255, column: 82)
!6394 = !DILocation(line: 257, column: 5, scope: !6393)
!6395 = !DILocation(line: 258, column: 5, scope: !6382)
!6396 = !DILocation(line: 259, column: 57, scope: !6382)
!6397 = !DILocation(line: 260, column: 5, scope: !6382)
!6398 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !561, file: !561, line: 264, type: !6383, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !560, retainedNodes: !6399)
!6399 = !{!6400}
!6400 = !DILocalVariable(name: "us", arg: 1, scope: !6398, file: !561, line: 264, type: !61)
!6401 = !DILocation(line: 0, scope: !6398)
!6402 = !DILocation(line: 266, column: 46, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6398, file: !561, line: 266, column: 9)
!6404 = !DILocation(line: 266, column: 61, scope: !6403)
!6405 = !DILocation(line: 266, column: 9, scope: !6398)
!6406 = !DILocation(line: 267, column: 9, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6403, file: !561, line: 266, column: 82)
!6408 = !DILocation(line: 268, column: 5, scope: !6407)
!6409 = !DILocation(line: 269, column: 5, scope: !6398)
!6410 = !DILocation(line: 270, column: 57, scope: !6398)
!6411 = !DILocation(line: 271, column: 5, scope: !6398)
!6412 = distinct !DISubprogram(name: "hal_uart_init", scope: !600, file: !600, line: 234, type: !6413, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6417)
!6413 = !DISubroutineType(types: !6414)
!6414 = !{!6415, !659, !6416}
!6415 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !603, line: 351, baseType: !602)
!6416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 32)
!6417 = !{!6418, !6419}
!6418 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6412, file: !600, line: 234, type: !659)
!6419 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6412, file: !600, line: 234, type: !6416)
!6420 = !DILocation(line: 0, scope: !6412)
!6421 = !DILocation(line: 236, column: 10, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6412, file: !600, line: 236, column: 9)
!6423 = !DILocation(line: 236, column: 9, scope: !6412)
!6424 = !DILocation(line: 239, column: 41, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6412, file: !600, line: 239, column: 9)
!6426 = !DILocation(line: 239, column: 9, scope: !6412)
!6427 = !DILocation(line: 242, column: 5, scope: !6412)
!6428 = !DILocation(line: 243, column: 45, scope: !6412)
!6429 = !DILocation(line: 243, column: 12, scope: !6412)
!6430 = !DILocation(line: 244, column: 12, scope: !6412)
!6431 = !DILocation(line: 243, column: 5, scope: !6412)
!6432 = !DILocation(line: 245, column: 58, scope: !6412)
!6433 = !DILocation(line: 246, column: 30, scope: !6412)
!6434 = !{i32 0, i32 2}
!6435 = !DILocation(line: 246, column: 5, scope: !6412)
!6436 = !DILocation(line: 247, column: 5, scope: !6412)
!6437 = !DILocation(line: 249, column: 31, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6412, file: !600, line: 249, column: 9)
!6439 = !DILocation(line: 249, column: 28, scope: !6438)
!6440 = !DILocation(line: 261, column: 1, scope: !6412)
!6441 = distinct !DISubprogram(name: "hal_uart_is_config_valid", scope: !600, file: !600, line: 93, type: !6442, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6446)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{!69, !659, !6444}
!6444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6445, size: 32)
!6445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !670)
!6446 = !{!6447, !6448}
!6447 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6441, file: !600, line: 93, type: !659)
!6448 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6441, file: !600, line: 93, type: !6444)
!6449 = !DILocation(line: 0, scope: !6441)
!6450 = !DILocation(line: 95, column: 10, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6441, file: !600, line: 95, column: 9)
!6452 = !DILocation(line: 95, column: 9, scope: !6441)
!6453 = !DILocation(line: 101, column: 23, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6441, file: !600, line: 101, column: 9)
!6455 = !DILocation(line: 101, column: 32, scope: !6454)
!6456 = !DILocation(line: 101, column: 60, scope: !6454)
!6457 = !DILocation(line: 102, column: 27, scope: !6454)
!6458 = !DILocation(line: 102, column: 34, scope: !6454)
!6459 = !DILocation(line: 102, column: 58, scope: !6454)
!6460 = !DILocation(line: 103, column: 27, scope: !6454)
!6461 = !DILocation(line: 103, column: 36, scope: !6454)
!6462 = !DILocation(line: 103, column: 59, scope: !6454)
!6463 = !DILocation(line: 104, column: 27, scope: !6454)
!6464 = !DILocation(line: 104, column: 39, scope: !6454)
!6465 = !DILocation(line: 101, column: 9, scope: !6441)
!6466 = !DILocation(line: 109, column: 1, scope: !6441)
!6467 = distinct !DISubprogram(name: "hal_uart_translate_port", scope: !600, file: !600, line: 139, type: !6468, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6470)
!6468 = !DISubroutineType(types: !6469)
!6469 = !{!4720, !659}
!6470 = !{!6471}
!6471 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6467, file: !600, line: 139, type: !659)
!6472 = !DILocation(line: 0, scope: !6467)
!6473 = !DILocation(line: 141, column: 24, scope: !6467)
!6474 = !DILocation(line: 141, column: 12, scope: !6467)
!6475 = !DILocation(line: 141, column: 5, scope: !6467)
!6476 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !600, file: !600, line: 593, type: !6477, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6479)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{!6415, !659, !6444}
!6479 = !{!6480, !6481}
!6480 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6476, file: !600, line: 593, type: !659)
!6481 = !DILocalVariable(name: "config", arg: 2, scope: !6476, file: !600, line: 593, type: !6444)
!6482 = !DILocation(line: 0, scope: !6476)
!6483 = !DILocation(line: 595, column: 10, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6476, file: !600, line: 595, column: 9)
!6485 = !DILocation(line: 595, column: 9, scope: !6476)
!6486 = !DILocation(line: 598, column: 45, scope: !6476)
!6487 = !DILocation(line: 598, column: 12, scope: !6476)
!6488 = !DILocation(line: 598, column: 59, scope: !6476)
!6489 = !DILocation(line: 598, column: 5, scope: !6476)
!6490 = !DILocation(line: 599, column: 23, scope: !6476)
!6491 = !DILocation(line: 600, column: 59, scope: !6476)
!6492 = !DILocation(line: 600, column: 23, scope: !6476)
!6493 = !DILocation(line: 601, column: 62, scope: !6476)
!6494 = !DILocation(line: 601, column: 23, scope: !6476)
!6495 = !DILocation(line: 602, column: 57, scope: !6476)
!6496 = !DILocation(line: 602, column: 23, scope: !6476)
!6497 = !DILocation(line: 603, column: 58, scope: !6476)
!6498 = !DILocation(line: 603, column: 23, scope: !6476)
!6499 = !DILocation(line: 599, column: 5, scope: !6476)
!6500 = !DILocation(line: 604, column: 5, scope: !6476)
!6501 = !DILocation(line: 605, column: 1, scope: !6476)
!6502 = distinct !DISubprogram(name: "hal_uart_translate_baudrate", scope: !600, file: !600, line: 145, type: !6503, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6505)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!61, !674}
!6505 = !{!6506, !6507}
!6506 = !DILocalVariable(name: "bandrate", arg: 1, scope: !6502, file: !600, line: 145, type: !674)
!6507 = !DILocalVariable(name: "baudrate_tbl", scope: !6502, file: !600, line: 147, type: !6508)
!6508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 416, elements: !276)
!6509 = !DILocation(line: 0, scope: !6502)
!6510 = !DILocation(line: 147, column: 14, scope: !6502)
!6511 = !DILocation(line: 151, column: 12, scope: !6502)
!6512 = !DILocation(line: 151, column: 5, scope: !6502)
!6513 = distinct !DISubprogram(name: "hal_uart_translate_word_length", scope: !600, file: !600, line: 155, type: !6514, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6516)
!6514 = !DISubroutineType(types: !6515)
!6515 = !{!1635, !676}
!6516 = !{!6517, !6518}
!6517 = !DILocalVariable(name: "word_length", arg: 1, scope: !6513, file: !600, line: 155, type: !676)
!6518 = !DILocalVariable(name: "databit_tbl", scope: !6513, file: !600, line: 157, type: !6519)
!6519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1635, size: 64, elements: !220)
!6520 = !DILocation(line: 0, scope: !6513)
!6521 = !DILocation(line: 157, column: 14, scope: !6513)
!6522 = !DILocation(line: 160, column: 12, scope: !6513)
!6523 = !DILocation(line: 160, column: 5, scope: !6513)
!6524 = distinct !DISubprogram(name: "hal_uart_translate_parity", scope: !600, file: !600, line: 164, type: !6525, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6527)
!6525 = !DISubroutineType(types: !6526)
!6526 = !{!1635, !680}
!6527 = !{!6528, !6529}
!6528 = !DILocalVariable(name: "parity", arg: 1, scope: !6524, file: !600, line: 164, type: !680)
!6529 = !DILocalVariable(name: "parity_tbl", scope: !6524, file: !600, line: 166, type: !6530)
!6530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1635, size: 80, elements: !541)
!6531 = !DILocation(line: 0, scope: !6524)
!6532 = !DILocation(line: 166, column: 14, scope: !6524)
!6533 = !DILocation(line: 169, column: 12, scope: !6524)
!6534 = !DILocation(line: 169, column: 5, scope: !6524)
!6535 = distinct !DISubprogram(name: "hal_uart_translate_stopbit", scope: !600, file: !600, line: 173, type: !6536, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6538)
!6536 = !DISubroutineType(types: !6537)
!6537 = !{!1635, !678}
!6538 = !{!6539, !6540}
!6539 = !DILocalVariable(name: "stopbit", arg: 1, scope: !6535, file: !600, line: 173, type: !678)
!6540 = !DILocalVariable(name: "stopbit_tbl", scope: !6535, file: !600, line: 175, type: !6541)
!6541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1635, size: 48, elements: !848)
!6542 = !DILocation(line: 0, scope: !6535)
!6543 = !DILocation(line: 175, column: 14, scope: !6535)
!6544 = !DILocation(line: 178, column: 12, scope: !6535)
!6545 = !DILocation(line: 178, column: 5, scope: !6535)
!6546 = distinct !DISubprogram(name: "hal_uart_is_port_valid", scope: !600, file: !600, line: 87, type: !6547, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6549)
!6547 = !DISubroutineType(types: !6548)
!6548 = !{!69, !659}
!6549 = !{!6550}
!6550 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6546, file: !600, line: 87, type: !659)
!6551 = !DILocation(line: 0, scope: !6546)
!6552 = !DILocation(line: 89, column: 23, scope: !6546)
!6553 = !DILocation(line: 89, column: 5, scope: !6546)
!6554 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !600, file: !600, line: 264, type: !6555, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6557)
!6555 = !DISubroutineType(types: !6556)
!6556 = !{!6415, !659}
!6557 = !{!6558}
!6558 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6554, file: !600, line: 264, type: !659)
!6559 = !DILocation(line: 0, scope: !6554)
!6560 = !DILocation(line: 266, column: 10, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6554, file: !600, line: 266, column: 9)
!6562 = !DILocation(line: 266, column: 9, scope: !6554)
!6563 = !DILocation(line: 269, column: 41, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6554, file: !600, line: 269, column: 9)
!6565 = !DILocation(line: 269, column: 62, scope: !6564)
!6566 = !DILocation(line: 269, column: 9, scope: !6554)
!6567 = !DILocation(line: 272, column: 5, scope: !6554)
!6568 = !DILocation(line: 275, column: 22, scope: !6554)
!6569 = !DILocation(line: 275, column: 5, scope: !6554)
!6570 = !DILocation(line: 284, column: 5, scope: !6554)
!6571 = !DILocation(line: 286, column: 5, scope: !6554)
!6572 = !DILocation(line: 287, column: 1, scope: !6554)
!6573 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !600, file: !600, line: 290, type: !6574, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6576)
!6574 = !DISubroutineType(types: !6575)
!6575 = !{null, !659, !202}
!6576 = !{!6577, !6578, !6579}
!6577 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6573, file: !600, line: 290, type: !659)
!6578 = !DILocalVariable(name: "byte", arg: 2, scope: !6573, file: !600, line: 290, type: !202)
!6579 = !DILocalVariable(name: "int_no", scope: !6573, file: !600, line: 292, type: !4720)
!6580 = !DILocation(line: 0, scope: !6573)
!6581 = !DILocation(line: 292, column: 26, scope: !6573)
!6582 = !DILocation(line: 294, column: 16, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6573, file: !600, line: 294, column: 9)
!6584 = !DILocation(line: 294, column: 9, scope: !6573)
!6585 = !DILocation(line: 295, column: 9, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6583, file: !600, line: 294, column: 34)
!6587 = !DILocation(line: 296, column: 5, scope: !6586)
!6588 = !DILocation(line: 299, column: 1, scope: !6573)
!6589 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !600, file: !600, line: 302, type: !6590, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6592)
!6590 = !DISubroutineType(types: !6591)
!6591 = !{!61, !659, !1447, !61}
!6592 = !{!6593, !6594, !6595, !6596, !6597}
!6593 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6589, file: !600, line: 302, type: !659)
!6594 = !DILocalVariable(name: "data", arg: 2, scope: !6589, file: !600, line: 302, type: !1447)
!6595 = !DILocalVariable(name: "size", arg: 3, scope: !6589, file: !600, line: 302, type: !61)
!6596 = !DILocalVariable(name: "int_no", scope: !6589, file: !600, line: 304, type: !4720)
!6597 = !DILocalVariable(name: "index", scope: !6589, file: !600, line: 305, type: !61)
!6598 = !DILocation(line: 0, scope: !6589)
!6599 = !DILocation(line: 304, column: 26, scope: !6589)
!6600 = !DILocation(line: 307, column: 14, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6589, file: !600, line: 307, column: 9)
!6602 = !DILocation(line: 307, column: 9, scope: !6589)
!6603 = !DILocation(line: 313, column: 53, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6605, file: !600, line: 312, column: 48)
!6605 = distinct !DILexicalBlock(scope: !6606, file: !600, line: 312, column: 9)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !600, line: 312, column: 9)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !600, line: 311, column: 33)
!6608 = distinct !DILexicalBlock(scope: !6589, file: !600, line: 311, column: 9)
!6609 = !DILocation(line: 313, column: 13, scope: !6604)
!6610 = !DILocation(line: 312, column: 44, scope: !6605)
!6611 = !DILocation(line: 312, column: 31, scope: !6605)
!6612 = !DILocation(line: 312, column: 9, scope: !6606)
!6613 = distinct !{!6613, !6612, !6614}
!6614 = !DILocation(line: 314, column: 9, scope: !6606)
!6615 = !DILocation(line: 318, column: 1, scope: !6589)
!6616 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !600, file: !600, line: 320, type: !6590, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6617)
!6617 = !{!6618, !6619, !6620, !6621, !6622, !6623}
!6618 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6616, file: !600, line: 320, type: !659)
!6619 = !DILocalVariable(name: "data", arg: 2, scope: !6616, file: !600, line: 320, type: !1447)
!6620 = !DILocalVariable(name: "size", arg: 3, scope: !6616, file: !600, line: 320, type: !61)
!6621 = !DILocalVariable(name: "actual_space", scope: !6616, file: !600, line: 322, type: !61)
!6622 = !DILocalVariable(name: "send_size", scope: !6616, file: !600, line: 322, type: !61)
!6623 = !DILocalVariable(name: "ch", scope: !6616, file: !600, line: 323, type: !6624)
!6624 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_VFIFO_CHANNEL", file: !302, line: 144, baseType: !301)
!6625 = !DILocation(line: 0, scope: !6616)
!6626 = !DILocation(line: 322, column: 5, scope: !6616)
!6627 = !DILocation(line: 328, column: 10, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6616, file: !600, line: 328, column: 9)
!6629 = !DILocation(line: 328, column: 9, scope: !6616)
!6630 = !DILocation(line: 332, column: 15, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6616, file: !600, line: 332, column: 9)
!6632 = !DILocation(line: 332, column: 24, scope: !6631)
!6633 = !DILocation(line: 335, column: 42, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6616, file: !600, line: 335, column: 9)
!6635 = !DILocation(line: 335, column: 9, scope: !6616)
!6636 = !DILocation(line: 349, column: 30, scope: !6616)
!6637 = !DILocation(line: 349, column: 5, scope: !6616)
!6638 = !DILocation(line: 350, column: 9, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6616, file: !600, line: 350, column: 9)
!6640 = !DILocation(line: 350, column: 22, scope: !6639)
!6641 = !DILocation(line: 355, column: 5, scope: !6616)
!6642 = !DILocation(line: 357, column: 22, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6616, file: !600, line: 357, column: 9)
!6644 = !DILocation(line: 357, column: 19, scope: !6643)
!6645 = !DILocation(line: 357, column: 9, scope: !6616)
!6646 = !DILocation(line: 358, column: 14, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6643, file: !600, line: 357, column: 36)
!6648 = !{i32 14, i32 18}
!6649 = !DILocation(line: 359, column: 9, scope: !6647)
!6650 = !DILocation(line: 360, column: 5, scope: !6647)
!6651 = !DILocation(line: 362, column: 1, scope: !6616)
!6652 = distinct !DISubprogram(name: "uart_channel_to_dma_channel", scope: !600, file: !600, line: 191, type: !6653, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6655)
!6653 = !DISubroutineType(types: !6654)
!6654 = !{!6624, !4720, !69}
!6655 = !{!6656, !6657, !6658}
!6656 = !DILocalVariable(name: "port", arg: 1, scope: !6652, file: !600, line: 191, type: !4720)
!6657 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6652, file: !600, line: 191, type: !69)
!6658 = !DILocalVariable(name: "ch", scope: !6652, file: !600, line: 193, type: !6624)
!6659 = !DILocation(line: 0, scope: !6652)
!6660 = !DILocation(line: 195, column: 14, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6652, file: !600, line: 195, column: 9)
!6662 = !DILocation(line: 195, column: 9, scope: !6652)
!6663 = !DILocation(line: 209, column: 5, scope: !6652)
!6664 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !600, file: !600, line: 365, type: !6665, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6667)
!6665 = !DISubroutineType(types: !6666)
!6666 = !{!202, !659}
!6667 = !{!6668, !6669}
!6668 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6664, file: !600, line: 365, type: !659)
!6669 = !DILocalVariable(name: "int_no", scope: !6664, file: !600, line: 367, type: !4720)
!6670 = !DILocation(line: 0, scope: !6664)
!6671 = !DILocation(line: 367, column: 26, scope: !6664)
!6672 = !DILocation(line: 369, column: 16, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6664, file: !600, line: 369, column: 9)
!6674 = !DILocation(line: 369, column: 9, scope: !6664)
!6675 = !DILocation(line: 370, column: 22, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6673, file: !600, line: 369, column: 33)
!6677 = !DILocation(line: 370, column: 9, scope: !6676)
!6678 = !DILocation(line: 0, scope: !6673)
!6679 = !DILocation(line: 375, column: 1, scope: !6664)
!6680 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !600, file: !600, line: 377, type: !6681, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6683)
!6681 = !DISubroutineType(types: !6682)
!6682 = !{!61, !659}
!6683 = !{!6684, !6685}
!6684 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6680, file: !600, line: 377, type: !659)
!6685 = !DILocalVariable(name: "int_no", scope: !6680, file: !600, line: 379, type: !4720)
!6686 = !DILocation(line: 0, scope: !6680)
!6687 = !DILocation(line: 379, column: 26, scope: !6680)
!6688 = !DILocation(line: 381, column: 16, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6680, file: !600, line: 381, column: 9)
!6690 = !DILocation(line: 381, column: 9, scope: !6680)
!6691 = !DILocation(line: 382, column: 16, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6689, file: !600, line: 381, column: 33)
!6693 = !DILocation(line: 382, column: 9, scope: !6692)
!6694 = !DILocation(line: 0, scope: !6689)
!6695 = !DILocation(line: 387, column: 1, scope: !6680)
!6696 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !600, file: !600, line: 390, type: !6697, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6699)
!6697 = !DISubroutineType(types: !6698)
!6698 = !{!61, !659, !210, !61}
!6699 = !{!6700, !6701, !6702, !6703, !6704}
!6700 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6696, file: !600, line: 390, type: !659)
!6701 = !DILocalVariable(name: "buffer", arg: 2, scope: !6696, file: !600, line: 390, type: !210)
!6702 = !DILocalVariable(name: "size", arg: 3, scope: !6696, file: !600, line: 390, type: !61)
!6703 = !DILocalVariable(name: "int_no", scope: !6696, file: !600, line: 392, type: !4720)
!6704 = !DILocalVariable(name: "index", scope: !6696, file: !600, line: 393, type: !61)
!6705 = !DILocation(line: 0, scope: !6696)
!6706 = !DILocation(line: 392, column: 26, scope: !6696)
!6707 = !DILocation(line: 395, column: 16, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6696, file: !600, line: 395, column: 9)
!6709 = !DILocation(line: 395, column: 9, scope: !6696)
!6710 = !DILocation(line: 401, column: 38, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !600, line: 400, column: 48)
!6712 = distinct !DILexicalBlock(scope: !6713, file: !600, line: 400, column: 9)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !600, line: 400, column: 9)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !600, line: 399, column: 33)
!6715 = distinct !DILexicalBlock(scope: !6696, file: !600, line: 399, column: 9)
!6716 = !DILocation(line: 401, column: 13, scope: !6711)
!6717 = !DILocation(line: 401, column: 27, scope: !6711)
!6718 = !DILocation(line: 400, column: 44, scope: !6712)
!6719 = !DILocation(line: 400, column: 31, scope: !6712)
!6720 = !DILocation(line: 400, column: 9, scope: !6713)
!6721 = distinct !{!6721, !6720, !6722}
!6722 = !DILocation(line: 402, column: 9, scope: !6713)
!6723 = !DILocation(line: 406, column: 1, scope: !6696)
!6724 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !600, file: !600, line: 408, type: !6697, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6725)
!6725 = !{!6726, !6727, !6728, !6729, !6730, !6731}
!6726 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6724, file: !600, line: 408, type: !659)
!6727 = !DILocalVariable(name: "buffer", arg: 2, scope: !6724, file: !600, line: 408, type: !210)
!6728 = !DILocalVariable(name: "size", arg: 3, scope: !6724, file: !600, line: 408, type: !61)
!6729 = !DILocalVariable(name: "actual_size", scope: !6724, file: !600, line: 410, type: !61)
!6730 = !DILocalVariable(name: "receive_size", scope: !6724, file: !600, line: 410, type: !61)
!6731 = !DILocalVariable(name: "ch", scope: !6724, file: !600, line: 411, type: !6624)
!6732 = !DILocation(line: 0, scope: !6724)
!6733 = !DILocation(line: 410, column: 5, scope: !6724)
!6734 = !DILocation(line: 413, column: 10, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6724, file: !600, line: 413, column: 9)
!6736 = !DILocation(line: 413, column: 9, scope: !6724)
!6737 = !DILocation(line: 417, column: 17, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6724, file: !600, line: 417, column: 9)
!6739 = !DILocation(line: 417, column: 26, scope: !6738)
!6740 = !DILocation(line: 421, column: 30, scope: !6724)
!6741 = !DILocation(line: 421, column: 5, scope: !6724)
!6742 = !DILocation(line: 422, column: 9, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6724, file: !600, line: 422, column: 9)
!6744 = !DILocation(line: 422, column: 21, scope: !6743)
!6745 = !DILocation(line: 427, column: 5, scope: !6724)
!6746 = !DILocation(line: 429, column: 25, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6724, file: !600, line: 429, column: 9)
!6748 = !DILocation(line: 429, column: 22, scope: !6747)
!6749 = !DILocation(line: 429, column: 9, scope: !6724)
!6750 = !DILocation(line: 430, column: 14, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6747, file: !600, line: 429, column: 38)
!6752 = !DILocation(line: 431, column: 9, scope: !6751)
!6753 = !DILocation(line: 432, column: 5, scope: !6751)
!6754 = !DILocation(line: 435, column: 1, scope: !6724)
!6755 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !600, file: !600, line: 438, type: !6681, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6756)
!6756 = !{!6757, !6758}
!6757 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6755, file: !600, line: 438, type: !659)
!6758 = !DILocalVariable(name: "length", scope: !6755, file: !600, line: 440, type: !61)
!6759 = !DILocation(line: 0, scope: !6755)
!6760 = !DILocation(line: 440, column: 5, scope: !6755)
!6761 = !DILocation(line: 440, column: 14, scope: !6755)
!6762 = !DILocation(line: 442, column: 10, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6755, file: !600, line: 442, column: 9)
!6764 = !DILocation(line: 442, column: 9, scope: !6755)
!6765 = !DILocation(line: 446, column: 30, scope: !6755)
!6766 = !DILocation(line: 446, column: 5, scope: !6755)
!6767 = !DILocation(line: 447, column: 12, scope: !6755)
!6768 = !DILocation(line: 447, column: 5, scope: !6755)
!6769 = !DILocation(line: 448, column: 1, scope: !6755)
!6770 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !600, file: !600, line: 451, type: !6681, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6771)
!6771 = !{!6772, !6773}
!6772 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6770, file: !600, line: 451, type: !659)
!6773 = !DILocalVariable(name: "length", scope: !6770, file: !600, line: 453, type: !61)
!6774 = !DILocation(line: 0, scope: !6770)
!6775 = !DILocation(line: 453, column: 5, scope: !6770)
!6776 = !DILocation(line: 453, column: 14, scope: !6770)
!6777 = !DILocation(line: 455, column: 10, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6770, file: !600, line: 455, column: 9)
!6779 = !DILocation(line: 455, column: 9, scope: !6770)
!6780 = !DILocation(line: 459, column: 30, scope: !6770)
!6781 = !DILocation(line: 459, column: 5, scope: !6770)
!6782 = !DILocation(line: 461, column: 12, scope: !6770)
!6783 = !DILocation(line: 461, column: 5, scope: !6770)
!6784 = !DILocation(line: 462, column: 1, scope: !6770)
!6785 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !600, file: !600, line: 543, type: !6786, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6788)
!6786 = !DISubroutineType(types: !6787)
!6787 = !{!6415, !659, !687, !51}
!6788 = !{!6789, !6790, !6791, !6792}
!6789 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6785, file: !600, line: 543, type: !659)
!6790 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6785, file: !600, line: 544, type: !687)
!6791 = !DILocalVariable(name: "user_data", arg: 3, scope: !6785, file: !600, line: 545, type: !51)
!6792 = !DILocalVariable(name: "ch", scope: !6785, file: !600, line: 547, type: !6624)
!6793 = !DILocation(line: 0, scope: !6785)
!6794 = !DILocation(line: 549, column: 10, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6785, file: !600, line: 549, column: 9)
!6796 = !DILocation(line: 549, column: 9, scope: !6785)
!6797 = !DILocation(line: 556, column: 53, scope: !6785)
!6798 = !DILocation(line: 556, column: 62, scope: !6785)
!6799 = !DILocation(line: 557, column: 53, scope: !6785)
!6800 = !DILocation(line: 557, column: 63, scope: !6785)
!6801 = !DILocation(line: 558, column: 37, scope: !6785)
!6802 = !DILocation(line: 558, column: 54, scope: !6785)
!6803 = !DILocation(line: 560, column: 39, scope: !6785)
!6804 = !DILocation(line: 561, column: 39, scope: !6785)
!6805 = !DILocation(line: 560, column: 5, scope: !6785)
!6806 = !DILocation(line: 562, column: 5, scope: !6785)
!6807 = !DILocation(line: 564, column: 44, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6785, file: !600, line: 564, column: 9)
!6809 = !DILocation(line: 564, column: 9, scope: !6785)
!6810 = !DILocation(line: 565, column: 9, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6808, file: !600, line: 564, column: 59)
!6812 = !DILocation(line: 566, column: 5, scope: !6811)
!6813 = !DILocation(line: 567, column: 9, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6808, file: !600, line: 566, column: 12)
!6815 = !DILocation(line: 569, column: 10, scope: !6785)
!6816 = !DILocation(line: 570, column: 5, scope: !6785)
!6817 = !DILocation(line: 578, column: 5, scope: !6785)
!6818 = !DILocation(line: 579, column: 1, scope: !6785)
!6819 = !DILocation(line: 0, scope: !655)
!6820 = !DILocation(line: 539, column: 12, scope: !655)
!6821 = !DILocation(line: 539, column: 5, scope: !655)
!6822 = distinct !DISubprogram(name: "hal_uart_send_callback0", scope: !600, file: !600, line: 511, type: !154, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6823)
!6823 = !{!6824}
!6824 = !DILocalVariable(name: "callback_context", scope: !6825, file: !600, line: 514, type: !6827)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !600, line: 513, column: 60)
!6826 = distinct !DILexicalBlock(scope: !6822, file: !600, line: 513, column: 9)
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 32)
!6828 = !DILocation(line: 513, column: 42, scope: !6826)
!6829 = !DILocation(line: 513, column: 9, scope: !6822)
!6830 = !DILocation(line: 515, column: 39, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6825, file: !600, line: 515, column: 13)
!6832 = !DILocation(line: 515, column: 18, scope: !6831)
!6833 = !DILocation(line: 515, column: 13, scope: !6825)
!6834 = !DILocation(line: 516, column: 89, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6831, file: !600, line: 515, column: 49)
!6836 = !DILocation(line: 516, column: 13, scope: !6835)
!6837 = !DILocation(line: 517, column: 9, scope: !6835)
!6838 = !DILocation(line: 519, column: 32, scope: !6822)
!6839 = !DILocation(line: 519, column: 5, scope: !6822)
!6840 = !DILocation(line: 520, column: 1, scope: !6822)
!6841 = distinct !DISubprogram(name: "hal_uart_send_callback1", scope: !600, file: !600, line: 523, type: !154, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6842)
!6842 = !{!6843}
!6843 = !DILocalVariable(name: "callback_context", scope: !6844, file: !600, line: 526, type: !6827)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !600, line: 525, column: 60)
!6845 = distinct !DILexicalBlock(scope: !6841, file: !600, line: 525, column: 9)
!6846 = !DILocation(line: 525, column: 42, scope: !6845)
!6847 = !DILocation(line: 525, column: 9, scope: !6841)
!6848 = !DILocation(line: 527, column: 39, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6844, file: !600, line: 527, column: 13)
!6850 = !DILocation(line: 527, column: 18, scope: !6849)
!6851 = !DILocation(line: 527, column: 13, scope: !6844)
!6852 = !DILocation(line: 528, column: 89, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !600, line: 527, column: 49)
!6854 = !DILocation(line: 528, column: 13, scope: !6853)
!6855 = !DILocation(line: 529, column: 9, scope: !6853)
!6856 = !DILocation(line: 531, column: 32, scope: !6841)
!6857 = !DILocation(line: 531, column: 5, scope: !6841)
!6858 = !DILocation(line: 532, column: 1, scope: !6841)
!6859 = distinct !DISubprogram(name: "hal_uart_check_irq_disable", scope: !600, file: !600, line: 464, type: !6860, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6862)
!6860 = !DISubroutineType(types: !6861)
!6861 = !{null, !4720, !69}
!6862 = !{!6863, !6864, !6865, !6866, !6867, !6869}
!6863 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6859, file: !600, line: 464, type: !4720)
!6864 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6859, file: !600, line: 464, type: !69)
!6865 = !DILocalVariable(name: "avail_size", scope: !6859, file: !600, line: 466, type: !61)
!6866 = !DILocalVariable(name: "avail_space", scope: !6859, file: !600, line: 466, type: !61)
!6867 = !DILocalVariable(name: "dma_config", scope: !6859, file: !600, line: 467, type: !6868)
!6868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 32)
!6869 = !DILocalVariable(name: "ch", scope: !6859, file: !600, line: 468, type: !6624)
!6870 = !DILocation(line: 0, scope: !6859)
!6871 = !DILocation(line: 466, column: 5, scope: !6859)
!6872 = !DILocation(line: 471, column: 9, scope: !6859)
!6873 = !DILocation(line: 472, column: 9, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !600, line: 471, column: 16)
!6875 = distinct !DILexicalBlock(scope: !6859, file: !600, line: 471, column: 9)
!6876 = !DILocation(line: 473, column: 13, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6874, file: !600, line: 473, column: 13)
!6878 = !DILocation(line: 473, column: 39, scope: !6877)
!6879 = !DILocation(line: 473, column: 24, scope: !6877)
!6880 = !DILocation(line: 473, column: 13, scope: !6874)
!6881 = !DILocation(line: 478, column: 9, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6875, file: !600, line: 477, column: 12)
!6883 = !DILocation(line: 479, column: 13, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6882, file: !600, line: 479, column: 13)
!6885 = !DILocation(line: 479, column: 40, scope: !6884)
!6886 = !DILocation(line: 479, column: 77, scope: !6884)
!6887 = !DILocation(line: 479, column: 63, scope: !6884)
!6888 = !DILocation(line: 479, column: 25, scope: !6884)
!6889 = !DILocation(line: 479, column: 13, scope: !6882)
!6890 = !DILocation(line: 0, scope: !6875)
!6891 = !DILocation(line: 484, column: 1, scope: !6859)
!6892 = distinct !DISubprogram(name: "hal_uart_receive_callback0", scope: !600, file: !600, line: 486, type: !154, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6893)
!6893 = !{!6894}
!6894 = !DILocalVariable(name: "callback_context", scope: !6895, file: !600, line: 490, type: !6827)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !600, line: 489, column: 70)
!6896 = distinct !DILexicalBlock(scope: !6892, file: !600, line: 488, column: 9)
!6897 = !DILocation(line: 488, column: 43, scope: !6896)
!6898 = !DILocation(line: 488, column: 61, scope: !6896)
!6899 = !DILocation(line: 489, column: 14, scope: !6896)
!6900 = !DILocation(line: 489, column: 63, scope: !6896)
!6901 = !DILocation(line: 488, column: 9, scope: !6892)
!6902 = !DILocation(line: 491, column: 39, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6895, file: !600, line: 491, column: 13)
!6904 = !DILocation(line: 491, column: 18, scope: !6903)
!6905 = !DILocation(line: 491, column: 13, scope: !6895)
!6906 = !DILocation(line: 492, column: 88, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6903, file: !600, line: 491, column: 49)
!6908 = !DILocation(line: 492, column: 13, scope: !6907)
!6909 = !DILocation(line: 493, column: 9, scope: !6907)
!6910 = !DILocation(line: 495, column: 32, scope: !6892)
!6911 = !DILocation(line: 495, column: 5, scope: !6892)
!6912 = !DILocation(line: 496, column: 1, scope: !6892)
!6913 = distinct !DISubprogram(name: "hal_uart_receive_callback1", scope: !600, file: !600, line: 499, type: !154, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6914)
!6914 = !{!6915}
!6915 = !DILocalVariable(name: "callback_context", scope: !6916, file: !600, line: 503, type: !6827)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !600, line: 502, column: 70)
!6917 = distinct !DILexicalBlock(scope: !6913, file: !600, line: 501, column: 9)
!6918 = !DILocation(line: 501, column: 43, scope: !6917)
!6919 = !DILocation(line: 501, column: 61, scope: !6917)
!6920 = !DILocation(line: 502, column: 14, scope: !6917)
!6921 = !DILocation(line: 502, column: 63, scope: !6917)
!6922 = !DILocation(line: 501, column: 9, scope: !6913)
!6923 = !DILocation(line: 504, column: 39, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6916, file: !600, line: 504, column: 13)
!6925 = !DILocation(line: 504, column: 18, scope: !6924)
!6926 = !DILocation(line: 504, column: 13, scope: !6916)
!6927 = !DILocation(line: 505, column: 88, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6924, file: !600, line: 504, column: 49)
!6929 = !DILocation(line: 505, column: 13, scope: !6928)
!6930 = !DILocation(line: 506, column: 9, scope: !6928)
!6931 = !DILocation(line: 508, column: 32, scope: !6913)
!6932 = !DILocation(line: 508, column: 5, scope: !6913)
!6933 = !DILocation(line: 509, column: 1, scope: !6913)
!6934 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !600, file: !600, line: 582, type: !6935, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6937)
!6935 = !DISubroutineType(types: !6936)
!6936 = !{!6415, !659, !674}
!6937 = !{!6938, !6939}
!6938 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6934, file: !600, line: 582, type: !659)
!6939 = !DILocalVariable(name: "baudrate", arg: 2, scope: !6934, file: !600, line: 582, type: !674)
!6940 = !DILocation(line: 0, scope: !6934)
!6941 = !DILocation(line: 584, column: 11, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6934, file: !600, line: 584, column: 9)
!6943 = !DILocation(line: 584, column: 46, scope: !6942)
!6944 = !DILocation(line: 588, column: 37, scope: !6934)
!6945 = !DILocation(line: 588, column: 50, scope: !6934)
!6946 = !DILocation(line: 588, column: 59, scope: !6934)
!6947 = !DILocation(line: 589, column: 12, scope: !6934)
!6948 = !DILocation(line: 589, column: 5, scope: !6934)
!6949 = !DILocation(line: 590, column: 1, scope: !6934)
!6950 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !600, file: !600, line: 608, type: !6951, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6955)
!6951 = !DISubroutineType(types: !6952)
!6952 = !{!6415, !659, !6953}
!6953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6954, size: 32)
!6954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !695)
!6955 = !{!6956, !6957}
!6956 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6950, file: !600, line: 608, type: !659)
!6957 = !DILocalVariable(name: "uart_dma_config", arg: 2, scope: !6950, file: !600, line: 608, type: !6953)
!6958 = !DILocation(line: 0, scope: !6950)
!6959 = !DILocation(line: 610, column: 10, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6950, file: !600, line: 610, column: 9)
!6961 = !DILocation(line: 610, column: 9, scope: !6950)
!6962 = !DILocation(line: 614, column: 10, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6950, file: !600, line: 614, column: 9)
!6964 = !DILocation(line: 614, column: 9, scope: !6950)
!6965 = !DILocation(line: 618, column: 37, scope: !6950)
!6966 = !DILocation(line: 618, column: 56, scope: !6950)
!6967 = !DILocation(line: 619, column: 45, scope: !6950)
!6968 = !DILocation(line: 619, column: 12, scope: !6950)
!6969 = !DILocation(line: 620, column: 12, scope: !6950)
!6970 = !DILocation(line: 619, column: 5, scope: !6950)
!6971 = !DILocation(line: 621, column: 5, scope: !6950)
!6972 = !DILocation(line: 622, column: 5, scope: !6950)
!6973 = !DILocation(line: 623, column: 33, scope: !6950)
!6974 = !DILocation(line: 624, column: 50, scope: !6950)
!6975 = !DILocation(line: 625, column: 50, scope: !6950)
!6976 = !DILocation(line: 626, column: 50, scope: !6950)
!6977 = !DILocation(line: 627, column: 50, scope: !6950)
!6978 = !DILocation(line: 628, column: 33, scope: !6950)
!6979 = !DILocation(line: 623, column: 5, scope: !6950)
!6980 = !DILocation(line: 630, column: 50, scope: !6950)
!6981 = !DILocation(line: 631, column: 50, scope: !6950)
!6982 = !DILocation(line: 632, column: 50, scope: !6950)
!6983 = !DILocation(line: 629, column: 5, scope: !6950)
!6984 = !DILocation(line: 634, column: 5, scope: !6950)
!6985 = !DILocation(line: 635, column: 1, scope: !6950)
!6986 = distinct !DISubprogram(name: "hal_uart_is_dma_config_valid", scope: !600, file: !600, line: 112, type: !6987, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !6989)
!6987 = !DISubroutineType(types: !6988)
!6988 = !{!69, !6953}
!6989 = !{!6990}
!6990 = !DILocalVariable(name: "dma_config", arg: 1, scope: !6986, file: !600, line: 112, type: !6953)
!6991 = !DILocation(line: 0, scope: !6986)
!6992 = !DILocation(line: 114, column: 14, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6986, file: !600, line: 114, column: 9)
!6994 = !DILocation(line: 114, column: 9, scope: !6986)
!6995 = !DILocation(line: 117, column: 29, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6986, file: !600, line: 117, column: 9)
!6997 = !DILocation(line: 117, column: 14, scope: !6996)
!6998 = !DILocation(line: 117, column: 9, scope: !6986)
!6999 = !DILocation(line: 120, column: 21, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6986, file: !600, line: 120, column: 9)
!7001 = !DILocation(line: 120, column: 61, scope: !7000)
!7002 = !DILocation(line: 120, column: 47, scope: !7000)
!7003 = !DILocation(line: 120, column: 9, scope: !6986)
!7004 = !DILocation(line: 123, column: 61, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6986, file: !600, line: 123, column: 9)
!7006 = !DILocation(line: 123, column: 47, scope: !7005)
!7007 = !DILocation(line: 123, column: 9, scope: !6986)
!7008 = !DILocation(line: 126, column: 29, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6986, file: !600, line: 126, column: 9)
!7010 = !DILocation(line: 126, column: 14, scope: !7009)
!7011 = !DILocation(line: 126, column: 9, scope: !6986)
!7012 = !DILocation(line: 129, column: 21, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6986, file: !600, line: 129, column: 9)
!7014 = !DILocation(line: 129, column: 58, scope: !7013)
!7015 = !DILocation(line: 129, column: 44, scope: !7013)
!7016 = !DILocation(line: 129, column: 9, scope: !6986)
!7017 = !DILocation(line: 136, column: 1, scope: !6986)
!7018 = distinct !DISubprogram(name: "hal_uart_translate_timeout", scope: !600, file: !600, line: 182, type: !6306, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !7019)
!7019 = !{!7020, !7021}
!7020 = !DILocalVariable(name: "timeout_us", arg: 1, scope: !7018, file: !600, line: 182, type: !61)
!7021 = !DILocalVariable(name: "ticks_per_us", scope: !7018, file: !600, line: 184, type: !61)
!7022 = !DILocation(line: 0, scope: !7018)
!7023 = !DILocation(line: 186, column: 20, scope: !7018)
!7024 = !DILocation(line: 186, column: 39, scope: !7018)
!7025 = !DILocation(line: 188, column: 25, scope: !7018)
!7026 = !DILocation(line: 188, column: 5, scope: !7018)
!7027 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !600, file: !600, line: 637, type: !6555, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !7028)
!7028 = !{!7029, !7030}
!7029 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7027, file: !600, line: 637, type: !659)
!7030 = !DILocalVariable(name: "int_no", scope: !7027, file: !600, line: 639, type: !4720)
!7031 = !DILocation(line: 0, scope: !7027)
!7032 = !DILocation(line: 641, column: 10, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7027, file: !600, line: 641, column: 9)
!7034 = !DILocation(line: 641, column: 9, scope: !7027)
!7035 = !DILocation(line: 645, column: 14, scope: !7027)
!7036 = !DILocation(line: 646, column: 5, scope: !7027)
!7037 = !DILocation(line: 648, column: 5, scope: !7027)
!7038 = !DILocation(line: 649, column: 1, scope: !7027)
!7039 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !600, file: !600, line: 651, type: !7040, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !7042)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{!6415, !659, !54, !54, !54}
!7042 = !{!7043, !7044, !7045, !7046, !7047}
!7043 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7039, file: !600, line: 651, type: !659)
!7044 = !DILocalVariable(name: "xon", arg: 2, scope: !7039, file: !600, line: 652, type: !54)
!7045 = !DILocalVariable(name: "xoff", arg: 3, scope: !7039, file: !600, line: 653, type: !54)
!7046 = !DILocalVariable(name: "escape_character", arg: 4, scope: !7039, file: !600, line: 654, type: !54)
!7047 = !DILocalVariable(name: "int_no", scope: !7039, file: !600, line: 656, type: !4720)
!7048 = !DILocation(line: 0, scope: !7039)
!7049 = !DILocation(line: 658, column: 10, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7039, file: !600, line: 658, column: 9)
!7051 = !DILocation(line: 658, column: 9, scope: !7039)
!7052 = !DILocation(line: 662, column: 14, scope: !7039)
!7053 = !DILocation(line: 663, column: 5, scope: !7039)
!7054 = !DILocation(line: 665, column: 5, scope: !7039)
!7055 = !DILocation(line: 666, column: 1, scope: !7039)
!7056 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !600, file: !600, line: 668, type: !6555, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !7057)
!7057 = !{!7058, !7059}
!7058 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7056, file: !600, line: 668, type: !659)
!7059 = !DILocalVariable(name: "int_no", scope: !7056, file: !600, line: 670, type: !4720)
!7060 = !DILocation(line: 0, scope: !7056)
!7061 = !DILocation(line: 672, column: 10, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7056, file: !600, line: 672, column: 9)
!7063 = !DILocation(line: 672, column: 9, scope: !7056)
!7064 = !DILocation(line: 676, column: 14, scope: !7056)
!7065 = !DILocation(line: 677, column: 5, scope: !7056)
!7066 = !DILocation(line: 679, column: 5, scope: !7056)
!7067 = !DILocation(line: 680, column: 1, scope: !7056)
!7068 = distinct !DISubprogram(name: "hal_uart_set_dma_timeout", scope: !600, file: !600, line: 683, type: !7069, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !599, retainedNodes: !7071)
!7069 = !DISubroutineType(types: !7070)
!7070 = !{!6415, !659, !61}
!7071 = !{!7072, !7073}
!7072 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7068, file: !600, line: 683, type: !659)
!7073 = !DILocalVariable(name: "timeout", arg: 2, scope: !7068, file: !600, line: 683, type: !61)
!7074 = !DILocation(line: 0, scope: !7068)
!7075 = !DILocation(line: 685, column: 10, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7068, file: !600, line: 685, column: 9)
!7077 = !DILocation(line: 685, column: 9, scope: !7068)
!7078 = !DILocation(line: 689, column: 19, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7068, file: !600, line: 689, column: 9)
!7080 = !DILocation(line: 0, scope: !7079)
!7081 = !DILocation(line: 696, column: 1, scope: !7068)
!7082 = distinct !DISubprogram(name: "customer_flash_suspend_bit", scope: !708, file: !708, line: 178, type: !7083, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !707, retainedNodes: !7085)
!7083 = !DISubroutineType(types: !7084)
!7084 = !{!58}
!7085 = !{!7086}
!7086 = !DILocalVariable(name: "suspend_bit", scope: !7082, file: !708, line: 181, type: !58)
!7087 = !DILocation(line: 0, scope: !7082)
!7088 = !DILocation(line: 182, column: 5, scope: !7082)
!7089 = distinct !DISubprogram(name: "customer_switch_spi_mode_command", scope: !708, file: !708, line: 185, type: !7090, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !707, retainedNodes: !1305)
!7090 = !DISubroutineType(types: !7091)
!7091 = !{!193}
!7092 = !DILocation(line: 188, column: 4, scope: !7089)
!7093 = distinct !DISubprogram(name: "customer_switch_spiq_mode_command", scope: !708, file: !708, line: 191, type: !7090, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !707, retainedNodes: !1305)
!7094 = !DILocation(line: 194, column: 5, scope: !7093)
!7095 = distinct !DISubprogram(name: "customer_flash_read_SR2_comand", scope: !708, file: !708, line: 197, type: !7083, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !707, retainedNodes: !7096)
!7096 = !{!7097}
!7097 = !DILocalVariable(name: "cmd", scope: !7095, file: !708, line: 201, type: !58)
!7098 = !DILocation(line: 0, scope: !7095)
!7099 = !DILocation(line: 202, column: 5, scope: !7095)
!7100 = distinct !DISubprogram(name: "customer_flash_register", scope: !708, file: !708, line: 207, type: !7101, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !707, retainedNodes: !1305)
!7101 = !DISubroutineType(types: !7102)
!7102 = !{!710}
!7103 = !DILocation(line: 209, column: 5, scope: !7100)
!7104 = distinct !DISubprogram(name: "__io_putchar", scope: !1271, file: !1271, line: 55, type: !3519, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !7105)
!7105 = !{!7106}
!7106 = !DILocalVariable(name: "ch", arg: 1, scope: !7104, file: !1271, line: 55, type: !7)
!7107 = !DILocation(line: 0, scope: !7104)
!7108 = !DILocation(line: 62, column: 35, scope: !7104)
!7109 = !DILocation(line: 62, column: 5, scope: !7104)
!7110 = !DILocation(line: 63, column: 5, scope: !7104)
!7111 = distinct !DISubprogram(name: "main", scope: !1271, file: !1271, line: 171, type: !2824, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !1305)
!7112 = !DILocation(line: 174, column: 5, scope: !7111)
!7113 = !DILocation(line: 177, column: 5, scope: !7111)
!7114 = !DILocation(line: 319, column: 3, scope: !7115, inlinedAt: !7116)
!7115 = distinct !DISubprogram(name: "__enable_irq", scope: !2749, file: !2749, line: 317, type: !154, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !1305)
!7116 = distinct !DILocation(line: 180, column: 5, scope: !7111)
!7117 = !{i64 513772}
!7118 = !DILocation(line: 496, column: 3, scope: !7119, inlinedAt: !7120)
!7119 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !2749, file: !2749, line: 494, type: !154, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !1305)
!7120 = distinct !DILocation(line: 181, column: 5, scope: !7111)
!7121 = !{i64 518047}
!7122 = !DILocation(line: 184, column: 5, scope: !7111)
!7123 = !DILocation(line: 185, column: 5, scope: !7111)
!7124 = !DILocation(line: 186, column: 5, scope: !7111)
!7125 = !DILocation(line: 188, column: 5, scope: !7111)
!7126 = !DILocation(line: 190, column: 5, scope: !7111)
!7127 = !DILocation(line: 190, column: 5, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !1271, line: 190, column: 5)
!7129 = distinct !DILexicalBlock(scope: !7111, file: !1271, line: 190, column: 5)
!7130 = distinct !{!7130, !7131, !7132}
!7131 = !DILocation(line: 190, column: 5, scope: !7129)
!7132 = !DILocation(line: 190, column: 13, scope: !7129)
!7133 = distinct !DISubprogram(name: "SystemClock_Config", scope: !1271, file: !1271, line: 93, type: !154, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !1305)
!7134 = !DILocation(line: 95, column: 5, scope: !7133)
!7135 = !DILocation(line: 96, column: 1, scope: !7133)
!7136 = distinct !DISubprogram(name: "prvSetupHardware", scope: !1271, file: !1271, line: 103, type: !154, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !1305)
!7137 = !DILocation(line: 106, column: 5, scope: !7136)
!7138 = !DILocation(line: 107, column: 5, scope: !7136)
!7139 = !DILocation(line: 108, column: 1, scope: !7136)
!7140 = distinct !DISubprogram(name: "flash_sample", scope: !1271, file: !1271, line: 115, type: !154, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !7141)
!7141 = !{!7142, !7143, !7145, !7146, !7147}
!7142 = !DILocalVariable(name: "status", scope: !7140, file: !1271, line: 117, type: !5836)
!7143 = !DILocalVariable(name: "read_data", scope: !7140, file: !1271, line: 118, type: !7144)
!7144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 256, elements: !235)
!7145 = !DILocalVariable(name: "i", scope: !7140, file: !1271, line: 118, type: !30)
!7146 = !DILocalVariable(name: "flashTestAddress", scope: !7140, file: !1271, line: 119, type: !30)
!7147 = !DILocalVariable(name: "data", scope: !7140, file: !1271, line: 120, type: !7144)
!7148 = !DILocation(line: 118, column: 5, scope: !7140)
!7149 = !DILocation(line: 118, column: 18, scope: !7140)
!7150 = !DILocation(line: 0, scope: !7140)
!7151 = !DILocation(line: 120, column: 5, scope: !7140)
!7152 = !DILocation(line: 120, column: 18, scope: !7140)
!7153 = !DILocation(line: 122, column: 5, scope: !7140)
!7154 = !DILocation(line: 125, column: 14, scope: !7140)
!7155 = !DILocation(line: 127, column: 16, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7140, file: !1271, line: 127, column: 9)
!7157 = !DILocation(line: 127, column: 9, scope: !7140)
!7158 = !DILocation(line: 128, column: 9, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7156, file: !1271, line: 127, column: 40)
!7160 = !DILocation(line: 129, column: 9, scope: !7159)
!7161 = !DILocation(line: 136, column: 14, scope: !7140)
!7162 = !DILocation(line: 137, column: 16, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7140, file: !1271, line: 137, column: 9)
!7164 = !DILocation(line: 137, column: 9, scope: !7140)
!7165 = !DILocation(line: 138, column: 9, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7163, file: !1271, line: 137, column: 40)
!7167 = !DILocation(line: 139, column: 9, scope: !7166)
!7168 = !DILocation(line: 143, column: 5, scope: !7140)
!7169 = !DILocation(line: 146, column: 5, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7140, file: !1271, line: 146, column: 5)
!7171 = !DILocation(line: 146, column: 25, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7170, file: !1271, line: 146, column: 5)
!7173 = !DILocation(line: 146, column: 19, scope: !7172)
!7174 = distinct !{!7174, !7169, !7175}
!7175 = !DILocation(line: 152, column: 5, scope: !7170)
!7176 = !DILocation(line: 147, column: 13, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !1271, line: 147, column: 13)
!7178 = distinct !DILexicalBlock(scope: !7172, file: !1271, line: 146, column: 29)
!7179 = !DILocation(line: 147, column: 29, scope: !7177)
!7180 = !DILocation(line: 147, column: 26, scope: !7177)
!7181 = !DILocation(line: 147, column: 13, scope: !7178)
!7182 = !DILocation(line: 148, column: 13, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7177, file: !1271, line: 147, column: 38)
!7184 = !DILocation(line: 150, column: 13, scope: !7183)
!7185 = !DILocation(line: 158, column: 9, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7187, file: !1271, line: 157, column: 12)
!7187 = distinct !DILexicalBlock(scope: !7140, file: !1271, line: 154, column: 9)
!7188 = !DILocation(line: 161, column: 9, scope: !7186)
!7189 = !DILocation(line: 165, column: 5, scope: !7140)
!7190 = !DILocation(line: 167, column: 5, scope: !7140)
!7191 = !DILocation(line: 168, column: 1, scope: !7140)
!7192 = distinct !DISubprogram(name: "log_uart_init", scope: !1271, file: !1271, line: 71, type: !154, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1270, retainedNodes: !7193)
!7193 = !{!7194}
!7194 = !DILocalVariable(name: "uart_config", scope: !7192, file: !1271, line: 73, type: !7195)
!7195 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !603, line: 378, baseType: !7196)
!7196 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !603, line: 373, size: 128, elements: !7197)
!7197 = !{!7198, !7199, !7200, !7201}
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !7196, file: !603, line: 374, baseType: !674, size: 32)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !7196, file: !603, line: 375, baseType: !676, size: 32, offset: 32)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !7196, file: !603, line: 376, baseType: !678, size: 32, offset: 64)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7196, file: !603, line: 377, baseType: !680, size: 32, offset: 96)
!7202 = !DILocation(line: 73, column: 5, scope: !7192)
!7203 = !DILocation(line: 73, column: 23, scope: !7192)
!7204 = !DILocation(line: 75, column: 5, scope: !7192)
!7205 = !DILocation(line: 76, column: 5, scope: !7192)
!7206 = !DILocation(line: 77, column: 5, scope: !7192)
!7207 = !DILocation(line: 78, column: 5, scope: !7192)
!7208 = !DILocation(line: 80, column: 17, scope: !7192)
!7209 = !DILocation(line: 80, column: 26, scope: !7192)
!7210 = !DILocation(line: 81, column: 17, scope: !7192)
!7211 = !DILocation(line: 81, column: 29, scope: !7192)
!7212 = !DILocation(line: 82, column: 17, scope: !7192)
!7213 = !DILocation(line: 82, column: 26, scope: !7192)
!7214 = !DILocation(line: 83, column: 17, scope: !7192)
!7215 = !DILocation(line: 83, column: 24, scope: !7192)
!7216 = !DILocation(line: 84, column: 5, scope: !7192)
!7217 = !DILocation(line: 86, column: 1, scope: !7192)
!7218 = distinct !DISubprogram(name: "SysTick_Set", scope: !734, file: !734, line: 70, type: !6306, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !733, retainedNodes: !7219)
!7219 = !{!7220, !7221}
!7220 = !DILocalVariable(name: "ticks", arg: 1, scope: !7218, file: !734, line: 70, type: !61)
!7221 = !DILocalVariable(name: "val", scope: !7218, file: !734, line: 72, type: !61)
!7222 = !DILocation(line: 0, scope: !7218)
!7223 = !DILocation(line: 74, column: 16, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7218, file: !734, line: 74, column: 9)
!7225 = !DILocation(line: 74, column: 21, scope: !7224)
!7226 = !DILocation(line: 74, column: 9, scope: !7218)
!7227 = !DILocation(line: 78, column: 20, scope: !7218)
!7228 = !DILocation(line: 80, column: 19, scope: !7218)
!7229 = !DILocation(line: 83, column: 20, scope: !7218)
!7230 = !DILocation(line: 84, column: 20, scope: !7218)
!7231 = !DILocation(line: 86, column: 19, scope: !7218)
!7232 = !DILocation(line: 88, column: 5, scope: !7218)
!7233 = !DILocation(line: 89, column: 1, scope: !7218)
!7234 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !734, file: !734, line: 98, type: !154, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !733, retainedNodes: !1305)
!7235 = !DILocation(line: 100, column: 28, scope: !7234)
!7236 = !DILocation(line: 101, column: 1, scope: !7234)
!7237 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !734, file: !734, line: 110, type: !1286, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !733, retainedNodes: !1305)
!7238 = !DILocation(line: 112, column: 12, scope: !7237)
!7239 = !DILocation(line: 112, column: 5, scope: !7237)
!7240 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !734, file: !734, line: 122, type: !154, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !733, retainedNodes: !1305)
!7241 = !DILocation(line: 124, column: 23, scope: !7240)
!7242 = !DILocation(line: 124, column: 21, scope: !7240)
!7243 = !DILocation(line: 125, column: 1, scope: !7240)
!7244 = distinct !DISubprogram(name: "SystemInit", scope: !734, file: !734, line: 136, type: !154, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !733, retainedNodes: !1305)
!7245 = !DILocation(line: 140, column: 16, scope: !7244)
!7246 = !DILocation(line: 144, column: 16, scope: !7244)
!7247 = !DILocation(line: 147, column: 16, scope: !7244)
!7248 = !DILocation(line: 150, column: 1, scope: !7244)
!7249 = distinct !DISubprogram(name: "CachePreInit", scope: !734, file: !734, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !733, retainedNodes: !1305)
!7250 = !DILocation(line: 161, column: 22, scope: !7249)
!7251 = !DILocation(line: 164, column: 21, scope: !7249)
!7252 = !DILocation(line: 167, column: 21, scope: !7249)
!7253 = !DILocation(line: 170, column: 29, scope: !7249)
!7254 = !DILocation(line: 171, column: 33, scope: !7249)
!7255 = !DILocation(line: 173, column: 28, scope: !7249)
!7256 = !DILocation(line: 178, column: 30, scope: !7249)
!7257 = !DILocation(line: 192, column: 1, scope: !7249)
!7258 = distinct !DISubprogram(name: "_close", scope: !794, file: !794, line: 11, type: !3519, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7259)
!7259 = !{!7260}
!7260 = !DILocalVariable(name: "file", arg: 1, scope: !7258, file: !794, line: 11, type: !7)
!7261 = !DILocation(line: 0, scope: !7258)
!7262 = !DILocation(line: 13, column: 5, scope: !7258)
!7263 = distinct !DISubprogram(name: "_fstat", scope: !794, file: !794, line: 16, type: !7264, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7312)
!7264 = !DISubroutineType(types: !7265)
!7265 = !{!7, !7, !7266}
!7266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7267, size: 32)
!7267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !7268, line: 27, size: 704, elements: !7269)
!7268 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!7269 = !{!7270, !7273, !7276, !7279, !7282, !7285, !7288, !7289, !7292, !7302, !7303, !7304, !7307, !7310}
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !7267, file: !7268, line: 29, baseType: !7271, size: 16)
!7271 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !798, line: 161, baseType: !7272)
!7272 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !838, line: 56, baseType: !813)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !7267, file: !7268, line: 30, baseType: !7274, size: 16, offset: 16)
!7274 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !798, line: 139, baseType: !7275)
!7275 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !838, line: 75, baseType: !322)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !7267, file: !7268, line: 31, baseType: !7277, size: 32, offset: 32)
!7277 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !798, line: 189, baseType: !7278)
!7278 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !838, line: 90, baseType: !62)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !7267, file: !7268, line: 32, baseType: !7280, size: 16, offset: 64)
!7280 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !798, line: 194, baseType: !7281)
!7281 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !838, line: 209, baseType: !322)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !7267, file: !7268, line: 33, baseType: !7283, size: 16, offset: 80)
!7283 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !798, line: 165, baseType: !7284)
!7284 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !838, line: 60, baseType: !322)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !7267, file: !7268, line: 34, baseType: !7286, size: 16, offset: 96)
!7286 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !798, line: 169, baseType: !7287)
!7287 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !838, line: 63, baseType: !322)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !7267, file: !7268, line: 35, baseType: !7271, size: 16, offset: 112)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !7267, file: !7268, line: 36, baseType: !7290, size: 32, offset: 128)
!7290 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !798, line: 157, baseType: !7291)
!7291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !838, line: 102, baseType: !855)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !7267, file: !7268, line: 42, baseType: !7293, size: 128, offset: 192)
!7293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !7294, line: 47, size: 128, elements: !7295)
!7294 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!7295 = !{!7296, !7301}
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !7293, file: !7294, line: 48, baseType: !7297, size: 64)
!7297 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !7298, line: 42, baseType: !7299)
!7298 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!7299 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !57, line: 200, baseType: !7300)
!7300 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !7293, file: !7294, line: 49, baseType: !174, size: 32, offset: 64)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !7267, file: !7268, line: 43, baseType: !7293, size: 128, offset: 320)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !7267, file: !7268, line: 44, baseType: !7293, size: 128, offset: 448)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !7267, file: !7268, line: 45, baseType: !7305, size: 32, offset: 576)
!7305 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !798, line: 102, baseType: !7306)
!7306 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !838, line: 34, baseType: !174)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !7267, file: !7268, line: 46, baseType: !7308, size: 32, offset: 608)
!7308 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !798, line: 97, baseType: !7309)
!7309 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !838, line: 30, baseType: !174)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !7267, file: !7268, line: 48, baseType: !7311, size: 64, offset: 640)
!7311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !533)
!7312 = !{!7313, !7314}
!7313 = !DILocalVariable(name: "file", arg: 1, scope: !7263, file: !794, line: 16, type: !7)
!7314 = !DILocalVariable(name: "st", arg: 2, scope: !7263, file: !794, line: 16, type: !7266)
!7315 = !DILocation(line: 0, scope: !7263)
!7316 = !DILocation(line: 18, column: 5, scope: !7263)
!7317 = distinct !DISubprogram(name: "_isatty", scope: !794, file: !794, line: 22, type: !3519, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7318)
!7318 = !{!7319}
!7319 = !DILocalVariable(name: "file", arg: 1, scope: !7317, file: !794, line: 22, type: !7)
!7320 = !DILocation(line: 0, scope: !7317)
!7321 = !DILocation(line: 24, column: 5, scope: !7317)
!7322 = distinct !DISubprogram(name: "_lseek", scope: !794, file: !794, line: 27, type: !7323, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7325)
!7323 = !DISubroutineType(types: !7324)
!7324 = !{!7, !7, !7, !7}
!7325 = !{!7326, !7327, !7328}
!7326 = !DILocalVariable(name: "file", arg: 1, scope: !7322, file: !794, line: 27, type: !7)
!7327 = !DILocalVariable(name: "ptr", arg: 2, scope: !7322, file: !794, line: 27, type: !7)
!7328 = !DILocalVariable(name: "dir", arg: 3, scope: !7322, file: !794, line: 27, type: !7)
!7329 = !DILocation(line: 0, scope: !7322)
!7330 = !DILocation(line: 29, column: 5, scope: !7322)
!7331 = distinct !DISubprogram(name: "_open", scope: !794, file: !794, line: 32, type: !7332, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7334)
!7332 = !DISubroutineType(types: !7333)
!7333 = !{!7, !831, !7, !7}
!7334 = !{!7335, !7336, !7337}
!7335 = !DILocalVariable(name: "name", arg: 1, scope: !7331, file: !794, line: 32, type: !831)
!7336 = !DILocalVariable(name: "flags", arg: 2, scope: !7331, file: !794, line: 32, type: !7)
!7337 = !DILocalVariable(name: "mode", arg: 3, scope: !7331, file: !794, line: 32, type: !7)
!7338 = !DILocation(line: 0, scope: !7331)
!7339 = !DILocation(line: 34, column: 5, scope: !7331)
!7340 = distinct !DISubprogram(name: "_read", scope: !794, file: !794, line: 37, type: !7341, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7343)
!7341 = !DISubroutineType(types: !7342)
!7342 = !{!7, !7, !201, !7}
!7343 = !{!7344, !7345, !7346}
!7344 = !DILocalVariable(name: "file", arg: 1, scope: !7340, file: !794, line: 37, type: !7)
!7345 = !DILocalVariable(name: "ptr", arg: 2, scope: !7340, file: !794, line: 37, type: !201)
!7346 = !DILocalVariable(name: "len", arg: 3, scope: !7340, file: !794, line: 37, type: !7)
!7347 = !DILocation(line: 0, scope: !7340)
!7348 = !DILocation(line: 39, column: 5, scope: !7340)
!7349 = distinct !DISubprogram(name: "_write", scope: !794, file: !794, line: 52, type: !7341, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7350)
!7350 = !{!7351, !7352, !7353, !7354}
!7351 = !DILocalVariable(name: "file", arg: 1, scope: !7349, file: !794, line: 52, type: !7)
!7352 = !DILocalVariable(name: "ptr", arg: 2, scope: !7349, file: !794, line: 52, type: !201)
!7353 = !DILocalVariable(name: "len", arg: 3, scope: !7349, file: !794, line: 52, type: !7)
!7354 = !DILocalVariable(name: "i", scope: !7349, file: !794, line: 54, type: !7)
!7355 = !DILocation(line: 0, scope: !7349)
!7356 = !DILocation(line: 56, column: 19, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7358, file: !794, line: 56, column: 5)
!7358 = distinct !DILexicalBlock(scope: !7349, file: !794, line: 56, column: 5)
!7359 = !DILocation(line: 56, column: 5, scope: !7358)
!7360 = !DILocation(line: 57, column: 26, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7357, file: !794, line: 56, column: 31)
!7362 = !DILocation(line: 57, column: 22, scope: !7361)
!7363 = !DILocation(line: 57, column: 9, scope: !7361)
!7364 = !DILocation(line: 56, column: 27, scope: !7357)
!7365 = distinct !{!7365, !7359, !7366}
!7366 = !DILocation(line: 58, column: 5, scope: !7358)
!7367 = !DILocation(line: 60, column: 5, scope: !7349)
!7368 = !DILocation(line: 0, scope: !793)
!7369 = !DILocation(line: 70, column: 5, scope: !793)
!7370 = !{i64 1109}
!7371 = !DILocation(line: 72, column: 14, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !793, file: !794, line: 72, column: 9)
!7373 = !DILocation(line: 72, column: 11, scope: !7372)
!7374 = !DILocation(line: 72, column: 9, scope: !793)
!7375 = !DILocation(line: 78, column: 32, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !793, file: !794, line: 78, column: 9)
!7377 = !DILocation(line: 78, column: 15, scope: !7376)
!7378 = !DILocation(line: 89, column: 1, scope: !793)
!7379 = !DILocation(line: 78, column: 9, scope: !793)
!7380 = distinct !DISubprogram(name: "_exit", scope: !794, file: !794, line: 91, type: !938, scopeLine: 92, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7381)
!7381 = !{!7382}
!7382 = !DILocalVariable(name: "__status", arg: 1, scope: !7380, file: !794, line: 91, type: !7)
!7383 = !DILocation(line: 0, scope: !7380)
!7384 = !DILocation(line: 93, column: 5, scope: !7380)
!7385 = !DILocation(line: 94, column: 5, scope: !7380)
!7386 = distinct !{!7386, !7385, !7387}
!7387 = !DILocation(line: 96, column: 5, scope: !7380)
!7388 = distinct !DISubprogram(name: "_kill", scope: !794, file: !794, line: 100, type: !7389, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !7391)
!7389 = !DISubroutineType(types: !7390)
!7390 = !{!7, !7, !7}
!7391 = !{!7392, !7393}
!7392 = !DILocalVariable(name: "pid", arg: 1, scope: !7388, file: !794, line: 100, type: !7)
!7393 = !DILocalVariable(name: "sig", arg: 2, scope: !7388, file: !794, line: 100, type: !7)
!7394 = !DILocation(line: 0, scope: !7388)
!7395 = !DILocation(line: 102, column: 5, scope: !7388)
!7396 = !DILocation(line: 103, column: 5, scope: !7388)
!7397 = distinct !DISubprogram(name: "_getpid", scope: !794, file: !794, line: 107, type: !7398, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !986, retainedNodes: !1305)
!7398 = !DISubroutineType(types: !7399)
!7399 = !{!7400}
!7400 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !798, line: 174, baseType: !7401)
!7401 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !838, line: 52, baseType: !7)
!7402 = !DILocation(line: 109, column: 5, scope: !7397)
!7403 = !DILocation(line: 110, column: 5, scope: !7397)
