; ModuleID = './build/freertos_create_thread.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.tskTaskControlBlock = type { i32*, %struct.xLIST_ITEM, %struct.xLIST_ITEM, i32, i32*, [6 x i8], i32, i32, i32, i32, i32, i32 }
%struct.xLIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM*, i8*, i8* }
%struct.xLIST = type { i32, %struct.xLIST_ITEM*, %struct.xMINI_LIST_ITEM }
%struct.xMINI_LIST_ITEM = type { i32, %struct.xLIST_ITEM*, %struct.xLIST_ITEM* }
%struct.QUEUE_REGISTRY_ITEM = type { i8*, i8* }
%struct.A_BLOCK_LINK = type { %struct.A_BLOCK_LINK*, i32 }
%struct.exception_config_t = type { i32, [6 x %struct.exception_config_type] }
%struct.exception_config_type = type { void ()*, void ()* }
%struct.TaskContextType = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.syslog_buffer_t = type { i32, [292 x i8] }
%struct.syslog_config_s = type { {}*, %struct.log_control_block_t** }
%struct.log_control_block_t = type { i8*, i32, i32, void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* }
%struct.flash_info_t = type { i8*, i8, i32, i32, i32, i8, i8, i8 }
%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.hal_gpt_context_t = type { i32, %struct.hal_gpt_callback_context, i8 }
%struct.hal_gpt_callback_context = type { void (i8*)*, i8* }
%struct.uart_context_t = type { i8, %struct.hal_uart_config_t, i8, %struct.hal_uart_callback_config_t, i8, %struct.hal_uart_dma_config_t }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.hal_uart_callback_config_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.memory_region_type = type { i8*, i32*, i32*, i32 }
%struct.xMEMORY_REGION = type { i8*, i32, i32 }
%struct.xTASK_STATUS = type { i8*, i8*, i32, i32, i32, i32, i32, i16 }
%struct.xTIME_OUT = type { i32, i32 }
%struct.QueueDefinition = type { i8*, i8*, i8*, %union.anon, %struct.xLIST, %struct.xLIST, i32, i32, i32, i32, i32, i32, i8 }
%union.anon = type { i8* }
%struct.tmrTimerQueueMessage = type { i32, %union.anon.11 }
%union.anon.11 = type { %struct.tmrTimerParameters }
%struct.tmrTimerParameters = type { i32, %struct.tmrTimerControl* }
%struct.tmrTimerControl = type { i8*, %struct.xLIST_ITEM, i32, i32, i8*, void (i8*)*, i32 }
%struct.normal_log_message_t = type { i8*, i32, i8*, i32, i32, [257 x i8] }
%struct.hex_dump_message_t = type { i8*, i32, i8*, i32, i32, [129 x i8], i32, [128 x i8], i8* }
%struct.log_message_t = type { i32, %union.anon.12 }
%union.anon.12 = type { %struct.hex_dump_message_t }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.__tm*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct.__tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@__const.gpio_mode_init.mode_temp = private unnamed_addr constant [10 x i32] [i32 2021095287, i32 -2004318072, i32 -2004318072, i32 -2004596873, i32 -2005464952, i32 -2004318072, i32 -2004318072, i32 -2004457336, i32 -2004318072, i32 8], align 4
@pxCurrentTCB = dso_local global %struct.tskTaskControlBlock* null, align 4, !dbg !0
@.str = private unnamed_addr constant [11 x i8] c"pxTaskCode\00", align 1
@.str.1 = private unnamed_addr constant [51 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/tasks.c\00", align 1
@.str.2 = private unnamed_addr constant [67 x i8] c"( ( uxPriority & ( ~portPRIVILEGE_BIT ) ) < configMAX_PRIORITIES )\00", align 1
@uxCurrentNumberOfTasks = internal global i32 0, align 4, !dbg !138
@xSchedulerRunning = internal global i32 0, align 4, !dbg !141
@uxTaskNumber = internal unnamed_addr global i32 0, align 4, !dbg !144
@uxTopReadyPriority = internal global i32 0, align 4, !dbg !146
@pxReadyTasksLists = internal global [20 x %struct.xLIST] zeroinitializer, align 4, !dbg !124
@xTasksWaitingTermination = internal global %struct.xLIST zeroinitializer, align 4, !dbg !134
@uxTasksDeleted = internal global i32 0, align 4, !dbg !148
@uxSchedulerSuspended = internal global i32 0, align 4, !dbg !150
@.str.4 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended == 0\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"pxPreviousWakeTime\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"( xTimeIncrement > 0U )\00", align 1
@xTickCount = internal global i32 0, align 4, !dbg !152
@.str.7 = private unnamed_addr constant [41 x i8] c"( uxNewPriority < configMAX_PRIORITIES )\00", align 1
@xSuspendedTaskList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !136
@.str.8 = private unnamed_addr constant [14 x i8] c"xTaskToResume\00", align 1
@xPendingReadyList = internal global %struct.xLIST zeroinitializer, align 4, !dbg !132
@.str.9 = private unnamed_addr constant [5 x i8] c"IDLE\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"uxSchedulerSuspended\00", align 1
@xYieldPending = internal global i32 0, align 4, !dbg !155
@uxPendedTicks = internal global i32 0, align 4, !dbg !157
@.str.12 = private unnamed_addr constant [6 x i8] c"pxTCB\00", align 1
@pxDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !127
@pxOverflowDelayedTaskList = internal global %struct.xLIST* null, align 4, !dbg !130
@.str.13 = private unnamed_addr constant [43 x i8] c"( listLIST_IS_EMPTY( pxDelayedTaskList ) )\00", align 1
@xNumOfOverflows = internal global i32 0, align 4, !dbg !159
@xNextTaskUnblockTime = internal global i32 -1, align 4, !dbg !161
@vTaskSwitchContext.ucExpectedStackBytes = internal constant [20 x i8] c"\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5\A5", align 1, !dbg !107
@.str.14 = private unnamed_addr constant [71 x i8] c"listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"pxEventList\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"uxSchedulerSuspended != 0\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"pxUnblockedTCB\00", align 1
@.str.18 = private unnamed_addr constant [32 x i8] c"uxSchedulerSuspended != pdFALSE\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"pxTimeOut\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"pxTicksToWait\00", align 1
@.str.21 = private unnamed_addr constant [21 x i8] c"pxTCB->uxMutexesHeld\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"\09%c\09%u\09%u\09%u\0D\0A\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"xTaskToNotify\00", align 1
@.str.24 = private unnamed_addr constant [62 x i8] c"listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"xTask\00", align 1
@xDelayedTaskList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !163
@xDelayedTaskList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !165
@switch.table.vTaskList = private unnamed_addr constant [4 x i32] [i32 82, i32 66, i32 83, i32 68], align 4
@.str.26 = private unnamed_addr constant [8 x i8] c"pxQueue\00", align 1
@.str.1.27 = private unnamed_addr constant [51 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/queue.c\00", align 1
@.str.2.28 = private unnamed_addr constant [34 x i8] c"uxQueueLength > ( UBaseType_t ) 0\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.4.29 = private unnamed_addr constant [11 x i8] c"pxNewQueue\00", align 1
@.str.5.33 = private unnamed_addr constant [8 x i8] c"pxMutex\00", align 1
@.str.6.35 = private unnamed_addr constant [16 x i8] c"uxMaxCount != 0\00", align 1
@.str.7.36 = private unnamed_addr constant [29 x i8] c"uxInitialCount <= uxMaxCount\00", align 1
@.str.8.37 = private unnamed_addr constant [8 x i8] c"xHandle\00", align 1
@.str.9.30 = private unnamed_addr constant [80 x i8] c"!( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.10.31 = private unnamed_addr constant [71 x i8] c"!( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) )\00", align 1
@.str.11.32 = private unnamed_addr constant [86 x i8] c"!( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) )\00", align 1
@.str.12.38 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize == 0\00", align 1
@.str.13.34 = private unnamed_addr constant [75 x i8] c"!( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) )\00", align 1
@.str.14.39 = private unnamed_addr constant [25 x i8] c"pxQueue->uxItemSize != 0\00", align 1
@.str.15.40 = private unnamed_addr constant [7 x i8] c"xQueue\00", align 1
@xQueueRegistry = dso_local local_unnamed_addr global [8 x %struct.QUEUE_REGISTRY_ITEM] zeroinitializer, align 4, !dbg !168
@xTimerQueue = internal unnamed_addr global i8* null, align 4, !dbg !233
@.str.43 = private unnamed_addr constant [8 x i8] c"Tmr Svc\00", align 1
@.str.1.44 = private unnamed_addr constant [8 x i8] c"xReturn\00", align 1
@.str.2.45 = private unnamed_addr constant [52 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/timers.c\00", align 1
@.str.3.50 = private unnamed_addr constant [28 x i8] c"( xTimerPeriodInTicks > 0 )\00", align 1
@pxCurrentTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !266
@prvSampleTimeNow.xLastTime = internal unnamed_addr global i32 0, align 4, !dbg !282
@.str.4.46 = private unnamed_addr constant [8 x i8] c"xResult\00", align 1
@pxOverflowTimerList = internal unnamed_addr global %struct.xLIST* null, align 4, !dbg !292
@.str.5.47 = private unnamed_addr constant [37 x i8] c"( pxTimer->xTimerPeriodInTicks > 0 )\00", align 1
@xActiveTimerList1 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !294
@xActiveTimerList2 = internal global %struct.xLIST zeroinitializer, align 4, !dbg !296
@.str.6.48 = private unnamed_addr constant [12 x i8] c"xTimerQueue\00", align 1
@.str.7.49 = private unnamed_addr constant [5 x i8] c"TmrQ\00", align 1
@ucMaxSysCallPriority = internal unnamed_addr global i8 0, align 1, !dbg !298
@ulMaxPRIGROUPValue = internal unnamed_addr global i32 0, align 4, !dbg !327
@uxCriticalNesting = internal unnamed_addr global i32 -1431655766, align 4, !dbg !329
@.str.59 = private unnamed_addr constant [28 x i8] c"uxCriticalNesting == 1000UL\00", align 1
@.str.1.54 = private unnamed_addr constant [72 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c\00", align 1
@.str.2.62 = private unnamed_addr constant [53 x i8] c"( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0\00", align 1
@.str.3.65 = private unnamed_addr constant [18 x i8] c"uxCriticalNesting\00", align 1
@.str.4.68 = private unnamed_addr constant [42 x i8] c"ucCurrentPriority >= ucMaxSysCallPriority\00", align 1
@.str.5.69 = private unnamed_addr constant [66 x i8] c"( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue\00", align 1
@.str.6.53 = private unnamed_addr constant [26 x i8] c"uxCriticalNesting == ~0UL\00", align 1
@pxEnd = internal unnamed_addr global %struct.A_BLOCK_LINK* null, align 4, !dbg !331
@xBlockAllocatedBit = internal unnamed_addr global i1 false, align 4, !dbg !360
@.str.1.73 = private unnamed_addr constant [69 x i8] c"../../../../../kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c\00", align 1
@xFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !351
@xStart = internal global %struct.A_BLOCK_LINK zeroinitializer, align 4, !dbg !347
@.str.2.72 = private unnamed_addr constant [67 x i8] c"( ( ( uint32_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@xMinimumEverFreeBytesRemaining = internal unnamed_addr global i32 0, align 4, !dbg !353
@.str.3.74 = private unnamed_addr constant [61 x i8] c"( ( ( uint32_t ) pvReturn ) & portBYTE_ALIGNMENT_MASK ) == 0\00", align 1
@.str.4.77 = private unnamed_addr constant [49 x i8] c"( pxLink->xBlockSize & xBlockAllocatedBit ) != 0\00", align 1
@.str.5.78 = private unnamed_addr constant [32 x i8] c"pxLink->pxNextFreeBlock == NULL\00", align 1
@ucHeap = internal global [65536 x i8] zeroinitializer, align 1, !dbg !355
@xExceptionStack = internal global [192 x i32] zeroinitializer, align 4, !dbg !361
@pxExceptionStack = dso_local local_unnamed_addr global i32* getelementptr inbounds ([192 x i32], [192 x i32]* @xExceptionStack, i32 0, i32 191), align 4, !dbg !467
@assert_expr.0 = internal unnamed_addr global i1 false, align 4, !dbg !563
@assert_expr.1 = internal unnamed_addr global i8* null, align 4, !dbg !564
@assert_expr.2 = internal unnamed_addr global i8* null, align 4, !dbg !565
@assert_expr.3 = internal unnamed_addr global i32 0, align 4, !dbg !566
@reboot_flag = internal unnamed_addr global i32 0, align 4, !dbg !540
@exception_config = internal unnamed_addr global %struct.exception_config_t zeroinitializer, align 4, !dbg !542
@.str.83 = private unnamed_addr constant [40 x i8] c"assert failed: %s, file: %s, line: %d\0A\0D\00", align 1
@.str.1.84 = private unnamed_addr constant [14 x i8] c"Usage fault: \00", align 1
@.str.2.85 = private unnamed_addr constant [17 x i8] c"Divide by zero\0A\0D\00", align 1
@.str.3.86 = private unnamed_addr constant [19 x i8] c"Unaligned access\0A\0D\00", align 1
@.str.4.87 = private unnamed_addr constant [20 x i8] c"Coprocessor error\0A\0D\00", align 1
@.str.5.88 = private unnamed_addr constant [21 x i8] c"Invalid EXC_RETURN\0A\0D\00", align 1
@.str.6.89 = private unnamed_addr constant [16 x i8] c"Invalid state\0A\0D\00", align 1
@.str.7.90 = private unnamed_addr constant [24 x i8] c"Undefined instruction\0A\0D\00", align 1
@.str.8.91 = private unnamed_addr constant [26 x i8] c"Memory Management fault: \00", align 1
@.str.9.92 = private unnamed_addr constant [63 x i8] c"A MemManage fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.10.93 = private unnamed_addr constant [56 x i8] c"A derived MemManage fault occurred on exception entry\0A\0D\00", align 1
@.str.11.94 = private unnamed_addr constant [57 x i8] c"A derived MemManage fault occurred on exception return\0A\0D\00", align 1
@.str.12.95 = private unnamed_addr constant [32 x i8] c"Data access violation @0x%08x\0A\0D\00", align 1
@.str.13.96 = private unnamed_addr constant [64 x i8] c"MPU or Execute Never (XN) default memory map access violation\0A\0D\00", align 1
@.str.14.97 = private unnamed_addr constant [22 x i8] c"SCB->MMFAR = 0x%08x\0A\0D\00", align 1
@.str.15.98 = private unnamed_addr constant [12 x i8] c"Bus fault: \00", align 1
@.str.16.99 = private unnamed_addr constant [57 x i8] c"A bus fault occurred during FP lazy state preservation\0A\0D\00", align 1
@.str.17.100 = private unnamed_addr constant [54 x i8] c"A derived bus fault has occurred on exception entry\0A\0D\00", align 1
@.str.18.101 = private unnamed_addr constant [55 x i8] c"A derived bus fault has occurred on exception return\0A\0D\00", align 1
@.str.19.102 = private unnamed_addr constant [43 x i8] c"Imprecise data access error has occurred\0A\0D\00", align 1
@.str.20.103 = private unnamed_addr constant [50 x i8] c"A precise data access error has occurred @x%08x\0A\0D\00", align 1
@.str.21.104 = private unnamed_addr constant [54 x i8] c"A bus fault on an instruction prefetch has occurred\0A\0D\00", align 1
@.str.22.105 = private unnamed_addr constant [21 x i8] c"SCB->BFAR = 0x%08x\0A\0D\00", align 1
@taskContext = internal global %struct.TaskContextType zeroinitializer, align 4, !dbg !558
@pTaskContext = dso_local local_unnamed_addr global %struct.TaskContextType* @taskContext, align 4, !dbg !470
@.str.23.106 = private unnamed_addr constant [15 x i8] c"r0  = 0x%08x\0A\0D\00", align 1
@.str.24.107 = private unnamed_addr constant [15 x i8] c"r1  = 0x%08x\0A\0D\00", align 1
@.str.25.108 = private unnamed_addr constant [15 x i8] c"r2  = 0x%08x\0A\0D\00", align 1
@.str.26.109 = private unnamed_addr constant [15 x i8] c"r3  = 0x%08x\0A\0D\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"r4  = 0x%08x\0A\0D\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"r5  = 0x%08x\0A\0D\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"r6  = 0x%08x\0A\0D\00", align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"r7  = 0x%08x\0A\0D\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"r8  = 0x%08x\0A\0D\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"r9  = 0x%08x\0A\0D\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"r10 = 0x%08x\0A\0D\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"r11 = 0x%08x\0A\0D\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"r12 = 0x%08x\0A\0D\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"lr  = 0x%08x\0A\0D\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"pc  = 0x%08x\0A\0D\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"psr = 0x%08x\0A\0D\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"EXC_RET = 0x%08x\0A\0D\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"s0  = 0x%08x\0A\0D\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"s1  = 0x%08x\0A\0D\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"s2  = 0x%08x\0A\0D\00", align 1
@.str.43.110 = private unnamed_addr constant [15 x i8] c"s3  = 0x%08x\0A\0D\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"s4  = 0x%08x\0A\0D\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"s5  = 0x%08x\0A\0D\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"s6  = 0x%08x\0A\0D\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"s7  = 0x%08x\0A\0D\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"s8  = 0x%08x\0A\0D\00", align 1
@.str.49 = private unnamed_addr constant [15 x i8] c"s9  = 0x%08x\0A\0D\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"s10 = 0x%08x\0A\0D\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"s11 = 0x%08x\0A\0D\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"s12 = 0x%08x\0A\0D\00", align 1
@.str.53 = private unnamed_addr constant [15 x i8] c"s13 = 0x%08x\0A\0D\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"s14 = 0x%08x\0A\0D\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"s15 = 0x%08x\0A\0D\00", align 1
@.str.56 = private unnamed_addr constant [15 x i8] c"s16 = 0x%08x\0A\0D\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"s17 = 0x%08x\0A\0D\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"s18 = 0x%08x\0A\0D\00", align 1
@.str.59.111 = private unnamed_addr constant [15 x i8] c"s19 = 0x%08x\0A\0D\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"s20 = 0x%08x\0A\0D\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"s21 = 0x%08x\0A\0D\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"s22 = 0x%08x\0A\0D\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"s23 = 0x%08x\0A\0D\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"s24 = 0x%08x\0A\0D\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"s25 = 0x%08x\0A\0D\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"s26 = 0x%08x\0A\0D\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"s27 = 0x%08x\0A\0D\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"s28 = 0x%08x\0A\0D\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"s29 = 0x%08x\0A\0D\00", align 1
@.str.70 = private unnamed_addr constant [15 x i8] c"s30 = 0x%08x\0A\0D\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"s31 = 0x%08x\0A\0D\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"fpscr = 0x%08x\0A\0D\00", align 1
@.str.73 = private unnamed_addr constant [19 x i8] c"CONTROL = 0x%08x\0A\0D\00", align 1
@.str.74 = private unnamed_addr constant [19 x i8] c"MSP     = 0x%08x\0A\0D\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"PSP     = 0x%08x\0A\0D\00", align 1
@.str.76 = private unnamed_addr constant [19 x i8] c"sp      = 0x%08x\0A\0D\00", align 1
@.str.77 = private unnamed_addr constant [30 x i8] c"0x%08x: %08x %08x %08x %08x\0A\0D\00", align 1
@.str.78 = private unnamed_addr constant [27 x i8] c"\0A\0Dmemory dump completed.\0A\0D\00", align 1
@.str.79 = private unnamed_addr constant [26 x i8] c"\0A\0DIn Hard Fault Handler\0A\0D\00", align 1
@.str.80 = private unnamed_addr constant [21 x i8] c"SCB->HFSR = 0x%08x\0A\0D\00", align 1
@.str.81 = private unnamed_addr constant [20 x i8] c"Forced Hard Fault\0A\0D\00", align 1
@.str.82 = private unnamed_addr constant [21 x i8] c"SCB->CFSR = 0x%08x\0A\0D\00", align 1
@.str.83.112 = private unnamed_addr constant [31 x i8] c"\0A\0DIn MemManage Fault Handler\0A\0D\00", align 1
@.str.84 = private unnamed_addr constant [25 x i8] c"\0A\0DIn Bus Fault Handler\0A\0D\00", align 1
@.str.85 = private unnamed_addr constant [27 x i8] c"\0A\0DIn Usage Fault Handler\0A\0D\00", align 1
@.str.86 = private unnamed_addr constant [35 x i8] c"\0A\0DIn Debug Monitor Fault Handler\0D\0A\00", align 1
@.str.87 = private unnamed_addr constant [42 x i8] c"Task stack overflow:%c, stack end:0x%x \0D\0A\00", align 1
@.str.115 = private unnamed_addr constant [24 x i8] c"stack overflow: %x %s\0D\0A\00", align 1
@.str.1.116 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.117 = private unnamed_addr constant [53 x i8] c"../../../../../kernel/service/src/os_port_callback.c\00", align 1
@.str.118 = private unnamed_addr constant [7 x i8] c"common\00", align 1
@g_log_uart_port = internal unnamed_addr global i32 0, align 4, !dbg !567
@syslog_init_done = internal unnamed_addr global i32 0, align 4, !dbg !758
@syslog_buffer_pool = internal global [16 x %struct.syslog_buffer_t] zeroinitializer, align 4, !dbg !739
@syslog_drop_count = internal unnamed_addr global i32 0, align 4, !dbg !760
@g_log_queue = internal unnamed_addr global i8* null, align 4, !dbg !762
@.str.1.127 = private unnamed_addr constant [45 x i8] c"log_queue_create: create log queue failed.\0D\0A\00", align 1
@.str.2.120 = private unnamed_addr constant [34 x i8] c"[T: %u M: %s C: %s F: %s L: %d]: \00", align 1
@print_level_table = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.119, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19.124, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20.125, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21.126, i32 0, i32 0)], align 4, !dbg !764
@.str.3.119 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.4.128 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1
@.str.5.122 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.6.121 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.7.123 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8.129 = private unnamed_addr constant [29 x i8] c"\09\09>>> log drop count = %u\0D\0A\0A\00", align 1
@syslog_task_ready = internal unnamed_addr global i1 false, align 4, !dbg !775
@.str.9.130 = private unnamed_addr constant [7 x i8] c"SYSLOG\00", align 1
@syslog_task_handle = internal global i8* null, align 4, !dbg !737
@.str.10.131 = private unnamed_addr constant [39 x i8] c"log_init: create syslog task failed.\0D\0A\00", align 1
@syslog_config = internal global %struct.syslog_config_s zeroinitializer, align 8, !dbg !744
@__FUNCTION__.log_init = private unnamed_addr constant [9 x i8] c"log_init\00", align 1
@.str.11.132 = private unnamed_addr constant [27 x i8] c"load syslog config failed\0A\00", align 1
@.str.12.134 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.13.138 = private unnamed_addr constant [19 x i8] c"%s%s 0x%01x 0x%01x\00", align 1
@.str.14.137 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15.139 = private unnamed_addr constant [24 x i8] c"pos < SYSLOG_FILTER_LEN\00", align 1
@.str.16.140 = private unnamed_addr constant [43 x i8] c"../../../../../kernel/service/src/syslog.c\00", align 1
@.str.17.141 = private unnamed_addr constant [43 x i8] c"log_switch - DEBUG_LOG_ON <= DEBUG_LOG_OFF\00", align 1
@log_switch_table = internal unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.135, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24.136, i32 0, i32 0)], align 4, !dbg !771
@.str.18.142 = private unnamed_addr constant [53 x i8] c"print_level - PRINT_LEVEL_DEBUG <= PRINT_LEVEL_ERROR\00", align 1
@.str.19.124 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.20.125 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.21.126 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.22.133 = private unnamed_addr constant [29 x i8] c"\0A\0D>>> dump syslog buffer\0A\0D\0A\0D\00", align 1
@.str.23.135 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.24.136 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !776
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !823
@.str.143 = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/flash_sfc.c\00", align 1
@__func__.gpt_get_current_time = private unnamed_addr constant [21 x i8] c"gpt_get_current_time\00", align 1
@.str.1.144 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@sf_Mutex = internal unnamed_addr global i1 false, align 4, !dbg !835
@__func__.free_sf_lock = private unnamed_addr constant [13 x i8] c"free_sf_lock\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@.str.2.147 = private unnamed_addr constant [19 x i8] c"SF_DAL_FLAG_BUSY()\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@suspend_time = dso_local local_unnamed_addr global i32 0, align 4, !dbg !827
@resume_suspend_on_ready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !829
@resume_suspend_on_checkready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !831
@g_u4ClkCnt1ms = dso_local local_unnamed_addr global i32 0, align 4, !dbg !836
@.str.148 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.149 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/gpt.c\00", align 1
@GPTTimer.0 = internal unnamed_addr global void ()* null, align 4, !dbg !912
@GPTTimer.1 = internal unnamed_addr global void ()* null, align 4, !dbg !913
@g_sfc_security_enable = dso_local local_unnamed_addr global i32 0, align 4, !dbg !914
@.str.154 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.155 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/sfc.c\00", align 1
@switch.table.sfc_direct_read_setup = private unnamed_addr constant [3 x i32] [i32 16, i32 112, i32 113], align 4
@gSFC_max_data_size = dso_local local_unnamed_addr global i32 128, align 4, !dbg !930
@cmdlist_switchqpi_winbond = dso_local constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !957
@cmdlist_switchspi_winbond = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !960
@cmdlist_switchspiq_winbond = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !963
@cmdlist_suspend_winbond = dso_local global [4 x i8] c"\01\01u\00", align 1, !dbg !968
@cmdlist_resume_winbond = dso_local global [4 x i8] c"\01\01z\00", align 1, !dbg !971
@cmdlist_switchspiq_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !973
@cmdlist_switchqpi_mxic = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !976
@cmdlist_switchspi_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01\00\00", align 1, !dbg !978
@cmdlist_switchspiq_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !980
@cmdlist_switchqpi_gd = dso_local local_unnamed_addr constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !982
@cmdlist_switchspi_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\00\00", align 1, !dbg !984
@cmdlist_switchspi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\00\00", align 1, !dbg !986
@cmdlist_switchspiq_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !988
@cmdlist_switchqpi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !990
@cmdlist_switchspi_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\01\00", align 1, !dbg !992
@cmdlist_switchspiq_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !994
@cmdlist_switchqpi_micron = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !996
@cmdlist_flash_reset_spimode = dso_local constant [7 x i8] c"\01\01f\01\01\99\00", align 1, !dbg !998
@cmdlist_flash_reset_qpimode = dso_local constant [7 x i8] c"\03\01f\03\01\99\00", align 1, !dbg !1003
@spi_chip_info = dso_local local_unnamed_addr global %struct.flash_info_t* null, align 4, !dbg !1005
@gd_write_sr2_1 = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1007
@support_flash_id = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1009
@gucFlashSFCMode = dso_local local_unnamed_addr global i32 0, align 4, !dbg !825
@chips_data = internal constant [13 x %struct.flash_info_t] [%struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.168, i32 0, i32 0), i8 -1, i32 -1, i32 4096, i32 256, i8 0, i8 0, i8 0 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10.169, i32 0, i32 0), i8 -17, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.170, i32 0, i32 0), i8 -17, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12.171, i32 0, i32 0), i8 -17, i32 1075052544, i32 4096, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13.172, i32 0, i32 0), i8 -62, i32 538312704, i32 16384, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.173, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15.174, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16.175, i32 0, i32 0), i8 -62, i32 538181632, i32 4096, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17.176, i32 0, i32 0), i8 -62, i32 588578816, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18.177, i32 0, i32 0), i8 -56, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19.178, i32 0, i32 0), i8 -56, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20.179, i32 0, i32 0), i8 -56, i32 1108738048, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21.180, i32 0, i32 0), i8 32, i32 -1172832256, i32 65536, i32 256, i8 50, i8 107, i8 -21 }], align 4, !dbg !1012
@sf_drvier_status = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !820
@__FUNCTION__.flash_check_device = private unnamed_addr constant [19 x i8] c"flash_check_device\00", align 1
@.str.166 = private unnamed_addr constant [33 x i8] c" Check flash device Failed !! \0A\0D\00", align 1
@.str.1.167 = private unnamed_addr constant [31 x i8] c"spi device id: %x %x %x (%x)\0A\0D\00", align 1
@.str.2.181 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.3.182 = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/spi_flash.c\00", align 1
@__FUNCTION__.flash_config = private unnamed_addr constant [13 x i8] c"flash_config\00", align 1
@.str.4.183 = private unnamed_addr constant [30 x i8] c"spi device id: %x %x %x (%x)\0A\00", align 1
@.str.5.184 = private unnamed_addr constant [16 x i8] c"find flash: %s\0A\00", align 1
@.str.6.185 = private unnamed_addr constant [25 x i8] c"Don't support flash: %s\0A\00", align 1
@__FUNCTION__.flash_init = private unnamed_addr constant [11 x i8] c"flash_init\00", align 1
@__func__.flash_wait_ready = private unnamed_addr constant [17 x i8] c"flash_wait_ready\00", align 1
@.str.7.190 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__FUNCTION__.flash_read_sr2 = private unnamed_addr constant [15 x i8] c"flash_read_sr2\00", align 1
@.str.8.197 = private unnamed_addr constant [33 x i8] c"flash_read_sr2: no init flash !\0A\00", align 1
@__func__.flash_write = private unnamed_addr constant [12 x i8] c"flash_write\00", align 1
@.str.9.168 = private unnamed_addr constant [10 x i8] c"DEF_FLASH\00", align 1
@.str.10.169 = private unnamed_addr constant [9 x i8] c"W25Q32JV\00", align 1
@.str.11.170 = private unnamed_addr constant [9 x i8] c"W25Q16DV\00", align 1
@.str.12.171 = private unnamed_addr constant [9 x i8] c"W25Q80DV\00", align 1
@.str.13.172 = private unnamed_addr constant [11 x i8] c"MX25L3233F\00", align 1
@.str.14.173 = private unnamed_addr constant [11 x i8] c"MX25L1635F\00", align 1
@.str.15.174 = private unnamed_addr constant [11 x i8] c"MX25V1635F\00", align 1
@.str.16.175 = private unnamed_addr constant [11 x i8] c"MX25V8035F\00", align 1
@.str.17.176 = private unnamed_addr constant [11 x i8] c"KH25V1635F\00", align 1
@.str.18.177 = private unnamed_addr constant [12 x i8] c"GD25Q32CSIG\00", align 1
@.str.19.178 = private unnamed_addr constant [12 x i8] c"GD25Q16CSIG\00", align 1
@.str.20.179 = private unnamed_addr constant [10 x i8] c"GD25VE32C\00", align 1
@.str.21.180 = private unnamed_addr constant [9 x i8] c"N25Q128A\00", align 1
@gXtalFreq = internal unnamed_addr global i32 0, align 4, !dbg !1017
@gCpuFrequency = internal unnamed_addr global i32 0, align 4, !dbg !1027
@switch.table.top_xtal_init = private unnamed_addr constant [8 x i32] [i32 20000000, i32 40000000, i32 26000000, i32 52000000, i32 40000000, i32 40000000, i32 40000000, i32 40000000], align 4
@switch.table.top_xtal_init.1 = private unnamed_addr constant [8 x i32] [i32 16, i32 512, i32 64, i32 1024, i32 512, i32 512, i32 512, i32 512], align 4
@.str.216 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.217 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@__const.halUART_SetFormat.fraction_L_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 16, i16 68, i16 146, i16 41, i16 170, i16 182, i16 219, i16 173, i16 255, i16 255], align 2
@__const.halUART_SetFormat.fraction_M_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3], align 2
@gUartClkFreq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1029
@.str.218 = private unnamed_addr constant [4 x i8] c"hal\00", align 1
@log_control_block_hal = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.218, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !1074
@g_cache_status = dso_local global i8 0, align 1, !dbg !1088
@.str.227 = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt7687/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1.228 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_cache_con = dso_local local_unnamed_addr global %union.CACHE_CON_Type zeroinitializer, align 4, !dbg !1166
@g_cache_region_en = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1171
@g_cache_entry = dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type] zeroinitializer, align 4, !dbg !1174
@nvic_function_table = dso_local local_unnamed_addr global [96 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1219
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.239 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@g_gpt_context = internal global [5 x %struct.hal_gpt_context_t] zeroinitializer, align 4, !dbg !1302
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.242 = private unnamed_addr constant [18 x i8] c"Invalid port: %d.\00", align 1
@__FUNCTION__.hal_gpt_deinit = private unnamed_addr constant [15 x i8] c"hal_gpt_deinit\00", align 1
@.str.1.243 = private unnamed_addr constant [23 x i8] c"Should call  port: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_free_run_count = private unnamed_addr constant [27 x i8] c"hal_gpt_get_free_run_count\00", align 1
@.str.2.246 = private unnamed_addr constant [23 x i8] c"Invalid parameter: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_running_status = private unnamed_addr constant [27 x i8] c"hal_gpt_get_running_status\00", align 1
@.str.3.247 = private unnamed_addr constant [45 x i8] c"Invalid hal_gpt_stop_timer to stop port: %d.\00", align 1
@__FUNCTION__.hal_gpt_register_callback = private unnamed_addr constant [26 x i8] c"hal_gpt_register_callback\00", align 1
@.str.4.248 = private unnamed_addr constant [51 x i8] c"Invalid port: %d. Only port 0 or 1 works as timer.\00", align 1
@__FUNCTION__.hal_gpt_start_timer_ms = private unnamed_addr constant [23 x i8] c"hal_gpt_start_timer_ms\00", align 1
@__FUNCTION__.hal_gpt_stop_timer = private unnamed_addr constant [19 x i8] c"hal_gpt_stop_timer\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !1341
@g_uart_context_table = internal global [2 x %struct.uart_context_t] zeroinitializer, align 4, !dbg !1353
@g_uart_send_lock_status = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !1399
@g_uart_sleep_handler = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !1396
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.217, i32 0, i32 0)], align 4, !dbg !1065
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [2 x i32] [i32 0, i32 5], align 4, !dbg !1069
@hal_uart_map_receive_callback.func_tbl = internal unnamed_addr constant [2 x void ()*] [void ()* @hal_uart_receive_callback0, void ()* @hal_uart_receive_callback1], align 4, !dbg !1402
@__const.hal_uart_translate_baudrate.baudrate_tbl = private unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4
@__const.hal_uart_translate_word_length.databit_tbl = private unnamed_addr constant [4 x i16] [i16 0, i16 1, i16 2, i16 3], align 2
@__const.hal_uart_translate_parity.parity_tbl = private unnamed_addr constant [5 x i16] [i16 0, i16 8, i16 24, i16 0, i16 0], align 2
@__const.hal_uart_translate_stopbit.stopbit_tbl = private unnamed_addr constant [3 x i16] [i16 0, i16 4, i16 4], align 2
@DWT_NUMCOMP = internal unnamed_addr global i32 0, align 4, !dbg !1412
@cmdlist_switchqpi_default = dso_local local_unnamed_addr constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !1454
@cmdlist_switchspi_default = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !1474
@cmdlist_switchspiq_default = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !1476
@customer_flash_info = dso_local local_unnamed_addr constant %struct.flash_info_t zeroinitializer, align 4, !dbg !1478
@.str.267 = private unnamed_addr constant [9 x i8] c"freertos\00", align 1
@log_control_block_freertos = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.267, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !1480
@.str.1.268 = private unnamed_addr constant [17 x i8] c"freertos_example\00", align 1
@__FUNCTION__.vTestTask = private unnamed_addr constant [10 x i8] c"vTestTask\00", align 1
@.str.2.269 = private unnamed_addr constant [22 x i8] c"Hello World from %d\0A\0D\00", align 1
@SystemCoreClock = dso_local local_unnamed_addr global i32 40000000, align 4, !dbg !1495
@System_Initialize_Done = internal global i32 0, align 4, !dbg !1553
@log_control_block_common = dso_local global %struct.log_control_block_t { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i32 0, i32 0), i32 0, i32 1, void (i8*, i8*, i32, i32, i8*, ...)* @print_module_log, void (i8*, i8*, i32, i32, i8*, i32, i8*, ...)* @dump_module_buffer }, align 4, !dbg !735
@__FUNCTION__._main_sys_random_init = private unnamed_addr constant [22 x i8] c"_main_sys_random_init\00", align 1
@.str.1.280 = private unnamed_addr constant [18 x i8] c"trng init failed\0A\00", align 1
@.str.283 = private unnamed_addr constant [6 x i8] c"flash\00", align 1
@__FLASH_segment_start__ = external dso_local global [0 x i32], align 4
@__FLASH_segment_end__ = external dso_local global [0 x i32], align 4
@.str.1.284 = private unnamed_addr constant [5 x i8] c"sram\00", align 1
@__SRAM_segment_start__ = external dso_local global [0 x i32], align 4
@__SRAM_segment_end__ = external dso_local global [0 x i32], align 4
@.str.2.285 = private unnamed_addr constant [8 x i8] c"ramtext\00", align 1
@__ramtext_start__ = external dso_local global [0 x i32], align 4
@__ramtext_end__ = external dso_local global [0 x i32], align 4
@.str.3.286 = private unnamed_addr constant [7 x i8] c"tcmbss\00", align 1
@__tcmbss_start__ = external dso_local global [0 x i32], align 4
@__tcmbss_end__ = external dso_local global [0 x i32], align 4
@.str.4.287 = private unnamed_addr constant [4 x i8] c"scs\00", align 1
@memory_regions = dso_local local_unnamed_addr constant [6 x %struct.memory_region_type] [%struct.memory_region_type { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.283, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__FLASH_segment_end__, i32 0, i32 0), i32 0 }, %struct.memory_region_type { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.284, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__SRAM_segment_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2.285, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__ramtext_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3.286, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_start__, i32 0, i32 0), i32* getelementptr inbounds ([0 x i32], [0 x i32]* @__tcmbss_end__, i32 0, i32 0), i32 1 }, %struct.memory_region_type { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4.287, i32 0, i32 0), i32* inttoptr (i32 -536813568 to i32*), i32* inttoptr (i32 -536809472 to i32*), i32 1 }, %struct.memory_region_type zeroinitializer], align 4, !dbg !1555
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !1569
@end = external dso_local global i8, align 1
@.str.288 = private unnamed_addr constant [7 x i8] c"_exit\0A\00", align 1
@.str.1.289 = private unnamed_addr constant [10 x i8] c"_kill %d\0A\00", align 1
@.str.2.290 = private unnamed_addr constant [9 x i8] c"_getpid\0A\00", align 1
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:07:37 GMT +00:00\00", align 1, !dbg !1769
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !1774
@hw_verno_str = dso_local local_unnamed_addr global [15 x i8] c"linkit7697_hdk\00", align 1, !dbg !1780

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_mode_init() local_unnamed_addr #0 !dbg !1918 {
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.gpio_mode_init.mode_temp, metadata !1921, metadata !DIExpression()), !dbg !1925
  call void @llvm.dbg.value(metadata i32 0, metadata !1920, metadata !DIExpression()), !dbg !1926
  br label %1, !dbg !1927

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !1920, metadata !DIExpression()), !dbg !1926
  %3 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.gpio_mode_init.mode_temp, i32 0, i32 %2, !dbg !1929
  %4 = load i32, i32* %3, align 4, !dbg !1929
  %5 = shl nuw nsw i32 %2, 2, !dbg !1929
  %6 = add nuw nsw i32 %5, -2130563040, !dbg !1929
  %7 = inttoptr i32 %6 to i32*, !dbg !1929
  store volatile i32 %4, i32* %7, align 4, !dbg !1929
  %8 = add nuw nsw i32 %2, 1, !dbg !1932
  call void @llvm.dbg.value(metadata i32 %8, metadata !1920, metadata !DIExpression()), !dbg !1926
  %9 = icmp eq i32 %8, 10, !dbg !1933
  br i1 %9, label %10, label %1, !dbg !1927, !llvm.loop !1934

10:                                               ; preds = %1
  ret void, !dbg !1936
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_oe_init() local_unnamed_addr #0 !dbg !1937 {
  call void @llvm.dbg.value(metadata i32 0, metadata !1939, metadata !DIExpression()), !dbg !1942
  call void @llvm.dbg.value(metadata i32 0, metadata !1939, metadata !DIExpression()), !dbg !1942
  store volatile i32 -536870848, i32* inttoptr (i32 -2097106800 to i32*), align 16, !dbg !1943
  call void @llvm.dbg.value(metadata i32 1, metadata !1939, metadata !DIExpression()), !dbg !1942
  call void @llvm.dbg.value(metadata i32 1, metadata !1939, metadata !DIExpression()), !dbg !1942
  store volatile i32 100663495, i32* inttoptr (i32 -2097106784 to i32*), align 32, !dbg !1943
  call void @llvm.dbg.value(metadata i32 2, metadata !1939, metadata !DIExpression()), !dbg !1942
  call void @llvm.dbg.value(metadata i32 2, metadata !1939, metadata !DIExpression()), !dbg !1942
  store volatile i32 0, i32* inttoptr (i32 -2097106768 to i32*), align 16, !dbg !1943
  call void @llvm.dbg.value(metadata i32 3, metadata !1939, metadata !DIExpression()), !dbg !1942
  ret void, !dbg !1947
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_ies_init() local_unnamed_addr #0 !dbg !1948 {
  call void @llvm.dbg.value(metadata i32 0, metadata !1950, metadata !DIExpression()), !dbg !1952
  call void @llvm.dbg.value(metadata i32 0, metadata !1950, metadata !DIExpression()), !dbg !1952
  store volatile i32 536870847, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !1953
  call void @llvm.dbg.value(metadata i32 1, metadata !1950, metadata !DIExpression()), !dbg !1952
  call void @llvm.dbg.value(metadata i32 1, metadata !1950, metadata !DIExpression()), !dbg !1952
  store volatile i32 -100663496, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !1953
  call void @llvm.dbg.value(metadata i32 2, metadata !1950, metadata !DIExpression()), !dbg !1952
  call void @llvm.dbg.value(metadata i32 2, metadata !1950, metadata !DIExpression()), !dbg !1952
  store volatile i32 511, i32* inttoptr (i32 -2097106680 to i32*), align 8, !dbg !1953
  call void @llvm.dbg.value(metadata i32 3, metadata !1950, metadata !DIExpression()), !dbg !1952
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1957
  %2 = and i32 %1, -3, !dbg !1957
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1957
  %3 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1958
  %4 = or i32 %3, 2, !dbg !1958
  store volatile i32 %4, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1958
  %5 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1959
  %6 = or i32 %5, 2048, !dbg !1959
  store volatile i32 %6, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1959
  %7 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1960
  %8 = and i32 %7, -3, !dbg !1960
  store volatile i32 %8, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1960
  %9 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1961
  %10 = or i32 %9, 2, !dbg !1961
  store volatile i32 %10, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1961
  %11 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1962
  %12 = or i32 %11, 2048, !dbg !1962
  store volatile i32 %12, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1962
  %13 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1963
  %14 = and i32 %13, -3, !dbg !1963
  store volatile i32 %14, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1963
  %15 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1964
  store volatile i32 %15, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1964
  %16 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1965
  %17 = or i32 %16, 2048, !dbg !1965
  store volatile i32 %17, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1965
  %18 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1966
  %19 = and i32 %18, -3, !dbg !1966
  store volatile i32 %19, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1966
  %20 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1967
  store volatile i32 %20, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1967
  %21 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1968
  %22 = or i32 %21, 2048, !dbg !1968
  store volatile i32 %22, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1968
  %23 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1969
  %24 = and i32 %23, -3, !dbg !1969
  store volatile i32 %24, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1969
  %25 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1970
  store volatile i32 %25, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1970
  %26 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1971
  %27 = or i32 %26, 2048, !dbg !1971
  store volatile i32 %27, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1971
  %28 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1972
  %29 = and i32 %28, -3, !dbg !1972
  store volatile i32 %29, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1972
  %30 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1973
  store volatile i32 %30, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1973
  %31 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1974
  %32 = or i32 %31, 2048, !dbg !1974
  store volatile i32 %32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1974
  ret void, !dbg !1975
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_up_init() local_unnamed_addr #0 !dbg !1976 {
  call void @llvm.dbg.value(metadata i32 0, metadata !1978, metadata !DIExpression()), !dbg !1980
  call void @llvm.dbg.value(metadata i32 0, metadata !1978, metadata !DIExpression()), !dbg !1980
  store volatile i32 4, i32* inttoptr (i32 -2097106944 to i32*), align 4096, !dbg !1981
  call void @llvm.dbg.value(metadata i32 1, metadata !1978, metadata !DIExpression()), !dbg !1980
  call void @llvm.dbg.value(metadata i32 1, metadata !1978, metadata !DIExpression()), !dbg !1980
  store volatile i32 16, i32* inttoptr (i32 -2097106928 to i32*), align 16, !dbg !1981
  call void @llvm.dbg.value(metadata i32 2, metadata !1978, metadata !DIExpression()), !dbg !1980
  call void @llvm.dbg.value(metadata i32 2, metadata !1978, metadata !DIExpression()), !dbg !1980
  store volatile i32 0, i32* inttoptr (i32 -2097106912 to i32*), align 32, !dbg !1981
  call void @llvm.dbg.value(metadata i32 3, metadata !1978, metadata !DIExpression()), !dbg !1980
  %1 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1985
  %2 = and i32 %1, -29, !dbg !1985
  store volatile i32 %2, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1985
  %3 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1986
  %4 = and i32 %3, -29, !dbg !1986
  store volatile i32 %4, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1986
  %5 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1987
  %6 = and i32 %5, -29, !dbg !1987
  store volatile i32 %6, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1987
  %7 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1988
  %8 = and i32 %7, -29, !dbg !1988
  store volatile i32 %8, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1988
  %9 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1989
  %10 = and i32 %9, -29, !dbg !1989
  store volatile i32 %10, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1989
  %11 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1990
  %12 = and i32 %11, -29, !dbg !1990
  store volatile i32 %12, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !1990
  ret void, !dbg !1991
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_pull_down_init() local_unnamed_addr #0 !dbg !1992 {
  call void @llvm.dbg.value(metadata i32 0, metadata !1994, metadata !DIExpression()), !dbg !1996
  call void @llvm.dbg.value(metadata i32 0, metadata !1994, metadata !DIExpression()), !dbg !1996
  store volatile i32 16776960, i32* inttoptr (i32 -2097106896 to i32*), align 16, !dbg !1997
  call void @llvm.dbg.value(metadata i32 1, metadata !1994, metadata !DIExpression()), !dbg !1996
  call void @llvm.dbg.value(metadata i32 1, metadata !1994, metadata !DIExpression()), !dbg !1996
  store volatile i32 -100663544, i32* inttoptr (i32 -2097106880 to i32*), align 64, !dbg !1997
  call void @llvm.dbg.value(metadata i32 2, metadata !1994, metadata !DIExpression()), !dbg !1996
  call void @llvm.dbg.value(metadata i32 2, metadata !1994, metadata !DIExpression()), !dbg !1996
  store volatile i32 511, i32* inttoptr (i32 -2097106864 to i32*), align 16, !dbg !1997
  call void @llvm.dbg.value(metadata i32 3, metadata !1994, metadata !DIExpression()), !dbg !1996
  ret void, !dbg !2001
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpio_output_init() local_unnamed_addr #0 !dbg !2002 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2004, metadata !DIExpression()), !dbg !2006
  call void @llvm.dbg.value(metadata i32 0, metadata !2004, metadata !DIExpression()), !dbg !2006
  store volatile i32 64, i32* inttoptr (i32 -2097106848 to i32*), align 32, !dbg !2007
  call void @llvm.dbg.value(metadata i32 1, metadata !2004, metadata !DIExpression()), !dbg !2006
  call void @llvm.dbg.value(metadata i32 1, metadata !2004, metadata !DIExpression()), !dbg !2006
  store volatile i32 64, i32* inttoptr (i32 -2097106832 to i32*), align 16, !dbg !2007
  call void @llvm.dbg.value(metadata i32 2, metadata !2004, metadata !DIExpression()), !dbg !2006
  call void @llvm.dbg.value(metadata i32 2, metadata !2004, metadata !DIExpression()), !dbg !2006
  store volatile i32 0, i32* inttoptr (i32 -2097106816 to i32*), align 128, !dbg !2007
  call void @llvm.dbg.value(metadata i32 3, metadata !2004, metadata !DIExpression()), !dbg !2006
  ret void, !dbg !2011
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bsp_ept_gpio_setting_init() local_unnamed_addr #0 !dbg !2012 {
  tail call void @gpio_mode_init() #17, !dbg !2014
  tail call void @gpio_oe_init() #17, !dbg !2015
  tail call void @gpio_ies_init() #17, !dbg !2016
  tail call void @gpio_pull_up_init() #17, !dbg !2017
  tail call void @gpio_pull_down_init() #17, !dbg !2018
  tail call void @gpio_output_init() #17, !dbg !2019
  ret void, !dbg !2020
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGenericCreate(void (i8*)* noundef %0, i8* nocapture noundef readonly %1, i16 noundef zeroext %2, i8* noundef %3, i32 noundef %4, i8** noundef writeonly %5, i32* noundef %6, %struct.xMEMORY_REGION* nocapture readnone %7) local_unnamed_addr #2 !dbg !2021 {
  call void @llvm.dbg.value(metadata void (i8*)* %0, metadata !2041, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i8* %1, metadata !2042, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i16 %2, metadata !2043, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i8* %3, metadata !2044, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32 %4, metadata !2045, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i8** %5, metadata !2046, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata i32* %6, metadata !2047, metadata !DIExpression()), !dbg !2052
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !2048, metadata !DIExpression()), !dbg !2052
  %9 = icmp eq void (i8*)* %0, null, !dbg !2053
  br i1 %9, label %10, label %11, !dbg !2055

10:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 553) #18, !dbg !2056
  br label %11, !dbg !2056

11:                                               ; preds = %10, %8
  %12 = icmp ugt i32 %4, 19, !dbg !2058
  br i1 %12, label %13, label %14, !dbg !2060

13:                                               ; preds = %11
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 554) #18, !dbg !2061
  br label %14, !dbg !2061

14:                                               ; preds = %13, %11
  %15 = tail call fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %2, i32* noundef %6) #17, !dbg !2063
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %15, metadata !2050, metadata !DIExpression()), !dbg !2052
  %16 = icmp eq %struct.tskTaskControlBlock* %15, null, !dbg !2064
  br i1 %16, label %68, label %17, !dbg !2066

17:                                               ; preds = %14
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i16 %2), metadata !2051, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !2052
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 4, !dbg !2067
  %19 = load i32*, i32** %18, align 4, !dbg !2067
  call void @llvm.dbg.value(metadata !DIArgList(i32* %19, i16 %2), metadata !2051, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !2052
  %20 = zext i16 %2 to i32, !dbg !2070
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %20), metadata !2051, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !2052
  %21 = add nsw i32 %20, -1, !dbg !2071
  call void @llvm.dbg.value(metadata !DIArgList(i32* undef, i32 %21), metadata !2051, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !2052
  %22 = getelementptr inbounds i32, i32* %19, i32 %21, !dbg !2072
  call void @llvm.dbg.value(metadata i32* %22, metadata !2051, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !2052
  %23 = ptrtoint i32* %22 to i32, !dbg !2073
  call void @llvm.dbg.value(metadata i32 %23, metadata !2051, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !2052
  %24 = and i32 %23, -8, !dbg !2074
  call void @llvm.dbg.value(metadata i32 %24, metadata !2051, metadata !DIExpression()), !dbg !2052
  %25 = inttoptr i32 %24 to i32*, !dbg !2075
  call void @llvm.dbg.value(metadata i32* %25, metadata !2051, metadata !DIExpression()), !dbg !2052
  tail call fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef nonnull %15, i8* noundef %1, i32 noundef %4) #17, !dbg !2076
  %26 = tail call i32* @pxPortInitialiseStack(i32* noundef %25, void (i8*)* noundef %0, i8* noundef %3) #18, !dbg !2077
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 0, !dbg !2079
  store i32* %26, i32** %27, align 4, !dbg !2080
  %28 = icmp eq i8** %5, null, !dbg !2081
  br i1 %28, label %31, label %29, !dbg !2083

29:                                               ; preds = %17
  %30 = bitcast i8** %5 to %struct.tskTaskControlBlock**, !dbg !2084
  store %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** %30, align 4, !dbg !2084
  br label %31, !dbg !2086

31:                                               ; preds = %17, %29
  tail call void @vPortEnterCritical() #18, !dbg !2087
  %32 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2088
  %33 = add i32 %32, 1, !dbg !2088
  store volatile i32 %33, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2088
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2090
  %35 = icmp eq %struct.tskTaskControlBlock* %34, null, !dbg !2092
  br i1 %35, label %36, label %40, !dbg !2093

36:                                               ; preds = %31
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2094
  %37 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2096
  %38 = icmp eq i32 %37, 1, !dbg !2098
  br i1 %38, label %39, label %49, !dbg !2099

39:                                               ; preds = %36
  tail call fastcc void @prvInitialiseTaskLists() #17, !dbg !2100
  br label %49, !dbg !2102

40:                                               ; preds = %31
  %41 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !2103
  %42 = icmp eq i32 %41, 0, !dbg !2106
  br i1 %42, label %43, label %49, !dbg !2107

43:                                               ; preds = %40
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2108
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !2111
  %46 = load i32, i32* %45, align 4, !dbg !2111
  %47 = icmp ugt i32 %46, %4, !dbg !2112
  br i1 %47, label %49, label %48, !dbg !2113

48:                                               ; preds = %43
  store volatile %struct.tskTaskControlBlock* %15, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2114
  br label %49, !dbg !2116

49:                                               ; preds = %43, %48, %40, %39, %36
  %50 = load i32, i32* @uxTaskNumber, align 4, !dbg !2117
  %51 = add i32 %50, 1, !dbg !2117
  store i32 %51, i32* @uxTaskNumber, align 4, !dbg !2117
  %52 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 6, !dbg !2118
  store i32 %51, i32* %52, align 4, !dbg !2120
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !2121
  %54 = load i32, i32* %53, align 4, !dbg !2121
  %55 = shl nuw i32 1, %54, !dbg !2121
  %56 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2121
  %57 = or i32 %56, %55, !dbg !2121
  store volatile i32 %57, i32* @uxTopReadyPriority, align 4, !dbg !2121
  %58 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %54, !dbg !2121
  %59 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 1, !dbg !2121
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %58, %struct.xLIST_ITEM* noundef nonnull %59) #18, !dbg !2121
  call void @llvm.dbg.value(metadata i32 1, metadata !2049, metadata !DIExpression()), !dbg !2052
  tail call void @vPortExitCritical() #18, !dbg !2122
  %60 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !2123
  %61 = icmp eq i32 %60, 0, !dbg !2127
  br i1 %61, label %68, label %62, !dbg !2128

62:                                               ; preds = %49
  %63 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2129
  %64 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %63, i32 0, i32 3, !dbg !2132
  %65 = load i32, i32* %64, align 4, !dbg !2132
  %66 = icmp ult i32 %65, %4, !dbg !2133
  br i1 %66, label %67, label %68, !dbg !2134

67:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2135
  tail call void asm sideeffect "dsb", ""() #19, !dbg !2135, !srcloc !2138
  tail call void asm sideeffect "isb", ""() #19, !dbg !2135, !srcloc !2139
  br label %68, !dbg !2140

68:                                               ; preds = %14, %62, %67, %49
  %69 = phi i32 [ 1, %62 ], [ 1, %67 ], [ 1, %49 ], [ -1, %14 ]
  ret i32 %69, !dbg !2141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.tskTaskControlBlock* @prvAllocateTCBAndStack(i16 noundef zeroext %0, i32* noundef %1) unnamed_addr #2 !dbg !2142 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !2146, metadata !DIExpression()), !dbg !2151
  call void @llvm.dbg.value(metadata i32* %1, metadata !2147, metadata !DIExpression()), !dbg !2151
  %3 = icmp eq i32* %1, null, !dbg !2152
  br i1 %3, label %4, label %8, !dbg !2152

4:                                                ; preds = %2
  %5 = zext i16 %0 to i32, !dbg !2152
  %6 = shl nuw nsw i32 %5, 2, !dbg !2152
  %7 = tail call i8* @pvPortMalloc(i32 noundef %6) #18, !dbg !2152
  br label %10, !dbg !2152

8:                                                ; preds = %2
  %9 = bitcast i32* %1 to i8*, !dbg !2152
  br label %10, !dbg !2152

10:                                               ; preds = %8, %4
  %11 = phi i8* [ %7, %4 ], [ %9, %8 ], !dbg !2152
  call void @llvm.dbg.value(metadata i8* %11, metadata !2149, metadata !DIExpression()), !dbg !2153
  %12 = icmp eq i8* %11, null, !dbg !2154
  br i1 %12, label %24, label %13, !dbg !2156

13:                                               ; preds = %10
  %14 = tail call i8* @pvPortMalloc(i32 noundef 84) #18, !dbg !2157
  call void @llvm.dbg.value(metadata i8* %14, metadata !2148, metadata !DIExpression()), !dbg !2151
  %15 = icmp eq i8* %14, null, !dbg !2159
  br i1 %15, label %16, label %17, !dbg !2161

16:                                               ; preds = %13
  tail call void @vPortFree(i8* noundef nonnull %11) #18, !dbg !2162
  br label %24

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8* %14, metadata !2148, metadata !DIExpression()), !dbg !2151
  %18 = getelementptr inbounds i8, i8* %14, i32 48, !dbg !2164
  %19 = bitcast i8* %18 to i8**, !dbg !2166
  store i8* %11, i8** %19, align 4, !dbg !2166
  %20 = bitcast i8* %14 to %struct.tskTaskControlBlock*, !dbg !2167
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %20, metadata !2148, metadata !DIExpression()), !dbg !2151
  %21 = zext i16 %0 to i32, !dbg !2168
  %22 = shl nuw nsw i32 %21, 2, !dbg !2172
  %23 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 165, i32 noundef %22) #18, !dbg !2173
  br label %24, !dbg !2174

24:                                               ; preds = %10, %16, %17
  %25 = phi %struct.tskTaskControlBlock* [ %20, %17 ], [ null, %16 ], [ null, %10 ]
  ret %struct.tskTaskControlBlock* %25, !dbg !2175
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTCBVariables(%struct.tskTaskControlBlock* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #2 !dbg !2176 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !2181, metadata !DIExpression()), !dbg !2187
  call void @llvm.dbg.value(metadata i8* %1, metadata !2182, metadata !DIExpression()), !dbg !2187
  call void @llvm.dbg.value(metadata i32 %2, metadata !2183, metadata !DIExpression()), !dbg !2187
  call void @llvm.dbg.value(metadata %struct.xMEMORY_REGION* undef, metadata !2184, metadata !DIExpression()), !dbg !2187
  call void @llvm.dbg.value(metadata i16 undef, metadata !2185, metadata !DIExpression()), !dbg !2187
  call void @llvm.dbg.value(metadata i32 0, metadata !2186, metadata !DIExpression()), !dbg !2187
  br label %4, !dbg !2188

4:                                                ; preds = %4, %3
  %5 = phi i32 [ 0, %3 ], [ %11, %4 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !2186, metadata !DIExpression()), !dbg !2187
  %6 = getelementptr inbounds i8, i8* %1, i32 %5, !dbg !2190
  %7 = load i8, i8* %6, align 1, !dbg !2190
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 %5, !dbg !2193
  store i8 %7, i8* %8, align 1, !dbg !2194
  %9 = load i8, i8* %6, align 1, !dbg !2195
  %10 = icmp eq i8 %9, 0, !dbg !2197
  call void @llvm.dbg.value(metadata i32 %5, metadata !2186, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2187
  %11 = add nuw nsw i32 %5, 1
  %12 = icmp eq i32 %11, 6
  %13 = select i1 %10, i1 true, i1 %12, !dbg !2198
  call void @llvm.dbg.value(metadata i32 %11, metadata !2186, metadata !DIExpression()), !dbg !2187
  call void @llvm.dbg.value(metadata i32 %5, metadata !2186, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2187
  br i1 %13, label %14, label %4, !dbg !2198, !llvm.loop !2199

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 5, i32 5, !dbg !2201
  store i8 0, i8* %15, align 1, !dbg !2202
  %16 = icmp ult i32 %2, 19, !dbg !2203
  %17 = select i1 %16, i32 %2, i32 19, !dbg !2203
  call void @llvm.dbg.value(metadata i32 %17, metadata !2183, metadata !DIExpression()), !dbg !2187
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 3, !dbg !2204
  store i32 %17, i32* %18, align 4, !dbg !2205
  %19 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 8, !dbg !2206
  store i32 %17, i32* %19, align 4, !dbg !2208
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 9, !dbg !2209
  store i32 0, i32* %20, align 4, !dbg !2210
  %21 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, !dbg !2211
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !2212
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, !dbg !2213
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %22) #18, !dbg !2214
  %23 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 1, i32 3, !dbg !2215
  %24 = bitcast i8** %23 to %struct.tskTaskControlBlock**, !dbg !2215
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %24, align 4, !dbg !2215
  %25 = sub nuw nsw i32 20, %17, !dbg !2216
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 0, !dbg !2216
  store i32 %25, i32* %26, align 4, !dbg !2216
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 2, i32 3, !dbg !2217
  %28 = bitcast i8** %27 to %struct.tskTaskControlBlock**, !dbg !2217
  store %struct.tskTaskControlBlock* %0, %struct.tskTaskControlBlock** %28, align 4, !dbg !2217
  %29 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 10, !dbg !2218
  store volatile i32 0, i32* %29, align 4, !dbg !2220
  %30 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 11, !dbg !2221
  store volatile i32 0, i32* %30, align 4, !dbg !2222
  ret void, !dbg !2223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvInitialiseTaskLists() unnamed_addr #2 !dbg !2224 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2226, metadata !DIExpression()), !dbg !2227
  br label %1, !dbg !2228

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !2226, metadata !DIExpression()), !dbg !2227
  %3 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %2, !dbg !2230
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %3) #18, !dbg !2233
  %4 = add nuw nsw i32 %2, 1, !dbg !2234
  call void @llvm.dbg.value(metadata i32 %4, metadata !2226, metadata !DIExpression()), !dbg !2227
  %5 = icmp eq i32 %4, 20, !dbg !2235
  br i1 %5, label %6, label %1, !dbg !2228, !llvm.loop !2236

6:                                                ; preds = %1
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList1) #18, !dbg !2238
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xDelayedTaskList2) #18, !dbg !2239
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xPendingReadyList) #18, !dbg !2240
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xTasksWaitingTermination) #18, !dbg !2241
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xSuspendedTaskList) #18, !dbg !2243
  store volatile %struct.xLIST* @xDelayedTaskList1, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2245
  store volatile %struct.xLIST* @xDelayedTaskList2, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !2246
  ret void, !dbg !2247
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelete(i8* noundef %0) local_unnamed_addr #2 !dbg !2248 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2252, metadata !DIExpression()), !dbg !2254
  tail call void @vPortEnterCritical() #18, !dbg !2255
  %2 = icmp eq i8* %0, null, !dbg !2256
  br i1 %2, label %3, label %5, !dbg !2256

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2256
  br label %7, !dbg !2256

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !2256
  br label %7, !dbg !2256

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !2256
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !2253, metadata !DIExpression()), !dbg !2254
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !2258
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !2260
  %11 = icmp eq i32 %10, 0, !dbg !2261
  br i1 %11, label %12, label %23, !dbg !2262

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !2263
  %14 = load i32, i32* %13, align 4, !dbg !2263
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !2263
  %16 = load i32, i32* %15, align 4, !dbg !2263
  %17 = icmp eq i32 %16, 0, !dbg !2263
  br i1 %17, label %18, label %23, !dbg !2267

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !2268
  %20 = xor i32 %19, -1, !dbg !2268
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2268
  %22 = and i32 %21, %20, !dbg !2268
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !2268
  br label %23, !dbg !2268

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !2270
  %25 = load i8*, i8** %24, align 4, !dbg !2270
  %26 = icmp eq i8* %25, null, !dbg !2272
  br i1 %26, label %30, label %27, !dbg !2273

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !2270
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !2274
  br label %30, !dbg !2276

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xTasksWaitingTermination, %struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !2277
  %31 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !2278
  %32 = add i32 %31, 1, !dbg !2278
  store volatile i32 %32, i32* @uxTasksDeleted, align 4, !dbg !2278
  %33 = load i32, i32* @uxTaskNumber, align 4, !dbg !2279
  %34 = add i32 %33, 1, !dbg !2279
  store i32 %34, i32* @uxTaskNumber, align 4, !dbg !2279
  tail call void @vPortExitCritical() #18, !dbg !2280
  %35 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !2281
  %36 = icmp eq i32 %35, 0, !dbg !2283
  br i1 %36, label %46, label %37, !dbg !2284

37:                                               ; preds = %30
  %38 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2285
  %39 = icmp eq %struct.tskTaskControlBlock* %8, %38, !dbg !2288
  br i1 %39, label %40, label %45, !dbg !2289

40:                                               ; preds = %37
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2290
  %42 = icmp eq i32 %41, 0, !dbg !2290
  br i1 %42, label %44, label %43, !dbg !2293

43:                                               ; preds = %40
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 794) #18, !dbg !2294
  br label %44, !dbg !2294

44:                                               ; preds = %43, %40
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2296
  tail call void asm sideeffect "dsb", ""() #19, !dbg !2296, !srcloc !2298
  tail call void asm sideeffect "isb", ""() #19, !dbg !2296, !srcloc !2299
  br label %46, !dbg !2300

45:                                               ; preds = %37
  tail call void @vPortEnterCritical() #18, !dbg !2301
  tail call fastcc void @prvResetNextTaskUnblockTime() #17, !dbg !2303
  tail call void @vPortExitCritical() #18, !dbg !2305
  br label %46

46:                                               ; preds = %44, %45, %30
  ret void, !dbg !2306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @prvResetNextTaskUnblockTime() unnamed_addr #0 !dbg !2307 {
  %1 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2310
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !2310
  %3 = load i32, i32* %2, align 4, !dbg !2310
  %4 = icmp eq i32 %3, 0, !dbg !2310
  br i1 %4, label %14, label %5, !dbg !2312

5:                                                ; preds = %0
  %6 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2313
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !2313
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !2313
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !2313
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !2313
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !2313
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !2309, metadata !DIExpression()), !dbg !2315
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, i32 0, !dbg !2316
  %13 = load i32, i32* %12, align 4, !dbg !2316
  br label %14

14:                                               ; preds = %0, %5
  %15 = phi i32 [ %13, %5 ], [ -1, %0 ]
  store volatile i32 %15, i32* @xNextTaskUnblockTime, align 4, !dbg !2317
  ret void, !dbg !2318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelayUntil(i32* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !2319 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !2326, metadata !DIExpression()), !dbg !2333
  call void @llvm.dbg.value(metadata i32 %1, metadata !2327, metadata !DIExpression()), !dbg !2333
  call void @llvm.dbg.value(metadata i32 0, metadata !2330, metadata !DIExpression()), !dbg !2333
  %3 = icmp eq i32* %0, null, !dbg !2334
  br i1 %3, label %4, label %5, !dbg !2336

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 827) #18, !dbg !2337
  br label %5, !dbg !2337

5:                                                ; preds = %4, %2
  %6 = icmp eq i32 %1, 0, !dbg !2339
  br i1 %6, label %7, label %8, !dbg !2341

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 828) #18, !dbg !2342
  br label %8, !dbg !2342

8:                                                ; preds = %7, %5
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2344
  %10 = icmp eq i32 %9, 0, !dbg !2344
  br i1 %10, label %12, label %11, !dbg !2346

11:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 829) #18, !dbg !2347
  br label %12, !dbg !2347

12:                                               ; preds = %11, %8
  tail call void @vTaskSuspendAll() #17, !dbg !2349
  %13 = load volatile i32, i32* @xTickCount, align 4, !dbg !2350
  call void @llvm.dbg.value(metadata i32 %13, metadata !2331, metadata !DIExpression()), !dbg !2351
  %14 = load i32, i32* %0, align 4, !dbg !2352
  %15 = add i32 %14, %1, !dbg !2353
  call void @llvm.dbg.value(metadata i32 %15, metadata !2328, metadata !DIExpression()), !dbg !2333
  %16 = icmp ult i32 %13, %14, !dbg !2354
  %17 = icmp ult i32 %15, %14, !dbg !2356
  %18 = icmp ugt i32 %15, %13
  br i1 %16, label %19, label %21, !dbg !2357

19:                                               ; preds = %12
  %20 = select i1 %17, i1 %18, i1 false, !dbg !2358
  br i1 %20, label %24, label %23, !dbg !2358

21:                                               ; preds = %12
  %22 = select i1 %17, i1 true, i1 %18, !dbg !2361
  br i1 %22, label %24, label %23, !dbg !2361

23:                                               ; preds = %21, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !2330, metadata !DIExpression()), !dbg !2333
  store i32 %15, i32* %0, align 4, !dbg !2364
  br label %38, !dbg !2365

24:                                               ; preds = %19, %21
  store i32 %15, i32* %0, align 4, !dbg !2364
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2366
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 1, !dbg !2370
  %27 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %26) #18, !dbg !2371
  %28 = icmp eq i32 %27, 0, !dbg !2372
  br i1 %28, label %29, label %37, !dbg !2373

29:                                               ; preds = %24
  %30 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2374
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %30, i32 0, i32 3, !dbg !2374
  %32 = load i32, i32* %31, align 4, !dbg !2374
  %33 = shl nuw i32 1, %32, !dbg !2374
  %34 = xor i32 %33, -1, !dbg !2374
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2374
  %36 = and i32 %35, %34, !dbg !2374
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !2374
  br label %37, !dbg !2376

37:                                               ; preds = %24, %29
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %15) #17, !dbg !2377
  br label %38, !dbg !2378

38:                                               ; preds = %23, %37
  %39 = tail call i32 @xTaskResumeAll() #17, !dbg !2379
  call void @llvm.dbg.value(metadata i32 %39, metadata !2329, metadata !DIExpression()), !dbg !2333
  %40 = icmp eq i32 %39, 0, !dbg !2380
  br i1 %40, label %41, label %42, !dbg !2382

41:                                               ; preds = %38
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2383
  tail call void asm sideeffect "dsb", ""() #19, !dbg !2383, !srcloc !2386
  tail call void asm sideeffect "isb", ""() #19, !dbg !2383, !srcloc !2387
  br label %42, !dbg !2388

42:                                               ; preds = %38, %41
  ret void, !dbg !2389
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskSuspendAll() local_unnamed_addr #0 !dbg !2390 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2391
  %2 = add i32 %1, 1, !dbg !2391
  store volatile i32 %2, i32* @uxSchedulerSuspended, align 4, !dbg !2391
  ret void, !dbg !2392
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %0) unnamed_addr #2 !dbg !2393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2397, metadata !DIExpression()), !dbg !2398
  %2 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2399
  %3 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %2, i32 0, i32 1, i32 0, !dbg !2399
  store i32 %0, i32* %3, align 4, !dbg !2399
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !2400
  %5 = icmp ugt i32 %4, %0, !dbg !2402
  br i1 %5, label %6, label %10, !dbg !2403

6:                                                ; preds = %1
  %7 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !2404
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2406
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !2407
  tail call void @vListInsert(%struct.xLIST* noundef %7, %struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !2408
  br label %17, !dbg !2409

10:                                               ; preds = %1
  %11 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2410
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2412
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !2413
  tail call void @vListInsert(%struct.xLIST* noundef %11, %struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !2414
  %14 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !2415
  %15 = icmp ugt i32 %14, %0, !dbg !2417
  br i1 %15, label %16, label %17, !dbg !2418

16:                                               ; preds = %10
  store volatile i32 %0, i32* @xNextTaskUnblockTime, align 4, !dbg !2419
  br label %17, !dbg !2421

17:                                               ; preds = %16, %10, %6
  ret void, !dbg !2422
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeAll() local_unnamed_addr #2 !dbg !2423 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2428, metadata !DIExpression()), !dbg !2429
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2430
  %2 = icmp eq i32 %1, 0, !dbg !2430
  br i1 %2, label %3, label %4, !dbg !2432

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 1673) #18, !dbg !2433
  br label %4, !dbg !2433

4:                                                ; preds = %3, %0
  tail call void @vPortEnterCritical() #18, !dbg !2435
  %5 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2436
  %6 = add i32 %5, -1, !dbg !2436
  store volatile i32 %6, i32* @uxSchedulerSuspended, align 4, !dbg !2436
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2438
  %8 = icmp eq i32 %7, 0, !dbg !2440
  br i1 %8, label %9, label %58, !dbg !2441

9:                                                ; preds = %4
  %10 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2442
  %11 = icmp eq i32 %10, 0, !dbg !2445
  br i1 %11, label %58, label %12, !dbg !2446

12:                                               ; preds = %9
  %13 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !2447
  %14 = icmp eq i32 %13, 0, !dbg !2447
  br i1 %14, label %39, label %15, !dbg !2449

15:                                               ; preds = %12, %36
  %16 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 2, i32 1), align 4, !dbg !2450
  %17 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %16, i32 0, i32 3, !dbg !2450
  %18 = bitcast i8** %17 to %struct.tskTaskControlBlock**, !dbg !2450
  %19 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %18, align 4, !dbg !2450
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %19, metadata !2427, metadata !DIExpression()), !dbg !2429
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 2, !dbg !2452
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #18, !dbg !2453
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !2454
  %23 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %22) #18, !dbg !2455
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 3, !dbg !2456
  %25 = load i32, i32* %24, align 4, !dbg !2456
  %26 = shl nuw i32 1, %25, !dbg !2456
  %27 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2456
  %28 = or i32 %27, %26, !dbg !2456
  store volatile i32 %28, i32* @uxTopReadyPriority, align 4, !dbg !2456
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %25, !dbg !2456
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %29, %struct.xLIST_ITEM* noundef nonnull %22) #18, !dbg !2456
  %30 = load i32, i32* %24, align 4, !dbg !2457
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2459
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 3, !dbg !2460
  %33 = load i32, i32* %32, align 4, !dbg !2460
  %34 = icmp ult i32 %30, %33, !dbg !2461
  br i1 %34, label %36, label %35, !dbg !2462

35:                                               ; preds = %15
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !2463
  br label %36, !dbg !2465

36:                                               ; preds = %15, %35
  %37 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xPendingReadyList, i32 0, i32 0), align 4, !dbg !2447
  %38 = icmp eq i32 %37, 0, !dbg !2447
  br i1 %38, label %39, label %15, !dbg !2449, !llvm.loop !2466

39:                                               ; preds = %36, %12
  %40 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !2468
  %41 = icmp eq i32 %40, 0, !dbg !2470
  br i1 %41, label %54, label %42, !dbg !2471

42:                                               ; preds = %39
  %43 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !2472
  %44 = icmp eq i32 %43, 0, !dbg !2474
  br i1 %44, label %54, label %45, !dbg !2475

45:                                               ; preds = %42, %49
  %46 = tail call i32 @xTaskIncrementTick() #17, !dbg !2476
  %47 = icmp eq i32 %46, 0, !dbg !2479
  br i1 %47, label %49, label %48, !dbg !2480

48:                                               ; preds = %45
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !2481
  br label %49, !dbg !2483

49:                                               ; preds = %45, %48
  %50 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !2484
  %51 = add i32 %50, -1, !dbg !2484
  store volatile i32 %51, i32* @uxPendedTicks, align 4, !dbg !2484
  %52 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !2472
  %53 = icmp eq i32 %52, 0, !dbg !2474
  br i1 %53, label %54, label %45, !dbg !2475, !llvm.loop !2485

54:                                               ; preds = %49, %42, %39
  %55 = load volatile i32, i32* @xYieldPending, align 4, !dbg !2487
  %56 = icmp eq i32 %55, 1, !dbg !2489
  br i1 %56, label %57, label %58, !dbg !2490

57:                                               ; preds = %54
  call void @llvm.dbg.value(metadata i32 1, metadata !2428, metadata !DIExpression()), !dbg !2429
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2491
  tail call void asm sideeffect "dsb", ""() #19, !dbg !2491, !srcloc !2494
  tail call void asm sideeffect "isb", ""() #19, !dbg !2491, !srcloc !2495
  br label %58, !dbg !2496

58:                                               ; preds = %4, %9, %54, %57
  %59 = phi i32 [ 1, %57 ], [ 0, %54 ], [ 0, %9 ], [ 0, %4 ], !dbg !2429
  call void @llvm.dbg.value(metadata i32 %59, metadata !2428, metadata !DIExpression()), !dbg !2429
  tail call void @vPortExitCritical() #18, !dbg !2497
  ret i32 %59, !dbg !2498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskIncrementTick() local_unnamed_addr #2 !dbg !2499 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2503, metadata !DIExpression()), !dbg !2512
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2513
  %2 = icmp eq i32 %1, 0, !dbg !2514
  br i1 %2, label %3, label %76, !dbg !2515

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @xTickCount, align 4, !dbg !2516
  %5 = add i32 %4, 1, !dbg !2516
  store volatile i32 %5, i32* @xTickCount, align 4, !dbg !2516
  %6 = load volatile i32, i32* @xTickCount, align 4, !dbg !2517
  call void @llvm.dbg.value(metadata i32 %6, metadata !2504, metadata !DIExpression()), !dbg !2518
  %7 = icmp eq i32 %6, 0, !dbg !2519
  br i1 %7, label %8, label %19, !dbg !2520

8:                                                ; preds = %3
  %9 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2521
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %9, i32 0, i32 0, !dbg !2521
  %11 = load i32, i32* %10, align 4, !dbg !2521
  %12 = icmp eq i32 %11, 0, !dbg !2521
  br i1 %12, label %14, label %13, !dbg !2523

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 1957) #18, !dbg !2524
  br label %14, !dbg !2524

14:                                               ; preds = %13, %8
  %15 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2523
  call void @llvm.dbg.value(metadata %struct.xLIST* %15, metadata !2508, metadata !DIExpression()), !dbg !2526
  %16 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !2523
  store volatile %struct.xLIST* %16, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2523
  store volatile %struct.xLIST* %15, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !2523
  %17 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !2523
  %18 = add nsw i32 %17, 1, !dbg !2523
  store volatile i32 %18, i32* @xNumOfOverflows, align 4, !dbg !2523
  tail call fastcc void @prvResetNextTaskUnblockTime() #17, !dbg !2523
  br label %19, !dbg !2527

19:                                               ; preds = %3, %14
  %20 = load volatile i32, i32* @xNextTaskUnblockTime, align 4, !dbg !2528
  %21 = icmp ult i32 %6, %20, !dbg !2530
  br i1 %21, label %67, label %22, !dbg !2531

22:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 0, metadata !2503, metadata !DIExpression()), !dbg !2512
  %23 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2532
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %23, i32 0, i32 0, !dbg !2532
  %25 = load i32, i32* %24, align 4, !dbg !2532
  %26 = icmp eq i32 %25, 0, !dbg !2532
  br i1 %26, label %64, label %27, !dbg !2538

27:                                               ; preds = %22, %47
  %28 = phi i32 [ %59, %47 ], [ 0, %22 ]
  call void @llvm.dbg.value(metadata i32 %28, metadata !2503, metadata !DIExpression()), !dbg !2512
  %29 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2539
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %29, i32 0, i32 2, i32 1, !dbg !2539
  %31 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %30, align 4, !dbg !2539
  %32 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %31, i32 0, i32 3, !dbg !2539
  %33 = bitcast i8** %32 to %struct.tskTaskControlBlock**, !dbg !2539
  %34 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %33, align 4, !dbg !2539
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %34, metadata !2501, metadata !DIExpression()), !dbg !2512
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !2541
  %36 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %35, i32 0, i32 0, !dbg !2541
  %37 = load i32, i32* %36, align 4, !dbg !2541
  call void @llvm.dbg.value(metadata i32 %37, metadata !2502, metadata !DIExpression()), !dbg !2512
  %38 = icmp ult i32 %6, %37, !dbg !2542
  br i1 %38, label %64, label %39, !dbg !2544

39:                                               ; preds = %27
  %40 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %35) #18, !dbg !2545
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, i32 4, !dbg !2546
  %42 = load i8*, i8** %41, align 4, !dbg !2546
  %43 = icmp eq i8* %42, null, !dbg !2548
  br i1 %43, label %47, label %44, !dbg !2549

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 2, !dbg !2546
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #18, !dbg !2550
  br label %47, !dbg !2552

47:                                               ; preds = %39, %44
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 3, !dbg !2553
  %49 = load i32, i32* %48, align 4, !dbg !2553
  %50 = shl nuw i32 1, %49, !dbg !2553
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2553
  %52 = or i32 %51, %50, !dbg !2553
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !2553
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !2553
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %35) #18, !dbg !2553
  %54 = load i32, i32* %48, align 4, !dbg !2554
  %55 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2557
  %56 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %55, i32 0, i32 3, !dbg !2558
  %57 = load i32, i32* %56, align 4, !dbg !2558
  %58 = icmp ult i32 %54, %57, !dbg !2559
  %59 = select i1 %58, i32 %28, i32 1, !dbg !2560
  call void @llvm.dbg.value(metadata i32 %59, metadata !2503, metadata !DIExpression()), !dbg !2512
  %60 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !2532
  %61 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %60, i32 0, i32 0, !dbg !2532
  %62 = load i32, i32* %61, align 4, !dbg !2532
  %63 = icmp eq i32 %62, 0, !dbg !2532
  br i1 %63, label %64, label %27, !dbg !2538, !llvm.loop !2561

64:                                               ; preds = %27, %47, %22
  %65 = phi i32 [ -1, %22 ], [ -1, %47 ], [ %37, %27 ]
  %66 = phi i32 [ 0, %22 ], [ %59, %47 ], [ %28, %27 ]
  store volatile i32 %65, i32* @xNextTaskUnblockTime, align 4, !dbg !2564
  br label %67, !dbg !2565

67:                                               ; preds = %64, %19
  %68 = phi i32 [ 0, %19 ], [ %66, %64 ], !dbg !2568
  call void @llvm.dbg.value(metadata i32 %68, metadata !2503, metadata !DIExpression()), !dbg !2512
  %69 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2565
  %70 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %69, i32 0, i32 3, !dbg !2565
  %71 = load i32, i32* %70, align 4, !dbg !2565
  %72 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %71, i32 0, !dbg !2565
  %73 = load i32, i32* %72, align 4, !dbg !2565
  %74 = icmp ugt i32 %73, 1, !dbg !2569
  %75 = select i1 %74, i32 1, i32 %68, !dbg !2570
  br label %79, !dbg !2570

76:                                               ; preds = %0
  %77 = load volatile i32, i32* @uxPendedTicks, align 4, !dbg !2571
  %78 = add i32 %77, 1, !dbg !2571
  store volatile i32 %78, i32* @uxPendedTicks, align 4, !dbg !2571
  br label %79

79:                                               ; preds = %67, %76
  %80 = phi i32 [ 0, %76 ], [ %75, %67 ], !dbg !2512
  call void @llvm.dbg.value(metadata i32 %80, metadata !2503, metadata !DIExpression()), !dbg !2512
  %81 = load volatile i32, i32* @xYieldPending, align 4, !dbg !2573
  %82 = icmp eq i32 %81, 0, !dbg !2576
  %83 = select i1 %82, i32 %80, i32 1, !dbg !2577
  call void @llvm.dbg.value(metadata i32 %83, metadata !2503, metadata !DIExpression()), !dbg !2512
  ret i32 %83, !dbg !2578
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskDelay(i32 noundef %0) local_unnamed_addr #2 !dbg !2579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2581, metadata !DIExpression()), !dbg !2584
  call void @llvm.dbg.value(metadata i32 0, metadata !2583, metadata !DIExpression()), !dbg !2584
  %2 = icmp eq i32 %0, 0, !dbg !2585
  br i1 %2, label %25, label %3, !dbg !2587

3:                                                ; preds = %1
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2588
  %5 = icmp eq i32 %4, 0, !dbg !2588
  br i1 %5, label %7, label %6, !dbg !2591

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 927) #18, !dbg !2592
  br label %7, !dbg !2592

7:                                                ; preds = %6, %3
  tail call void @vTaskSuspendAll() #17, !dbg !2594
  %8 = load volatile i32, i32* @xTickCount, align 4, !dbg !2595
  %9 = add i32 %8, %0, !dbg !2597
  call void @llvm.dbg.value(metadata i32 %9, metadata !2582, metadata !DIExpression()), !dbg !2584
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2598
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %10, i32 0, i32 1, !dbg !2600
  %12 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %11) #18, !dbg !2601
  %13 = icmp eq i32 %12, 0, !dbg !2602
  br i1 %13, label %14, label %22, !dbg !2603

14:                                               ; preds = %7
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2604
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !2604
  %17 = load i32, i32* %16, align 4, !dbg !2604
  %18 = shl nuw i32 1, %17, !dbg !2604
  %19 = xor i32 %18, -1, !dbg !2604
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2604
  %21 = and i32 %20, %19, !dbg !2604
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !2604
  br label %22, !dbg !2606

22:                                               ; preds = %7, %14
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %9) #17, !dbg !2607
  %23 = tail call i32 @xTaskResumeAll() #17, !dbg !2608
  call void @llvm.dbg.value(metadata i32 %23, metadata !2583, metadata !DIExpression()), !dbg !2584
  %24 = icmp eq i32 %23, 0, !dbg !2609
  call void @llvm.dbg.value(metadata i32 undef, metadata !2583, metadata !DIExpression()), !dbg !2584
  br i1 %24, label %25, label %26, !dbg !2610

25:                                               ; preds = %1, %22
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2611
  tail call void asm sideeffect "dsb", ""() #19, !dbg !2611, !srcloc !2615
  tail call void asm sideeffect "isb", ""() #19, !dbg !2611, !srcloc !2616
  br label %26, !dbg !2617

26:                                               ; preds = %22, %25
  ret void, !dbg !2618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGet(i8* noundef readonly %0) local_unnamed_addr #2 !dbg !2619 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2623, metadata !DIExpression()), !dbg !2626
  tail call void @vPortEnterCritical() #18, !dbg !2627
  %2 = icmp eq i8* %0, null, !dbg !2628
  br i1 %2, label %3, label %5, !dbg !2628

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2628
  br label %7, !dbg !2628

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !2628
  br label %7, !dbg !2628

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !2628
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !2624, metadata !DIExpression()), !dbg !2626
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !2630
  %10 = load i32, i32* %9, align 4, !dbg !2630
  call void @llvm.dbg.value(metadata i32 %10, metadata !2625, metadata !DIExpression()), !dbg !2626
  tail call void @vPortExitCritical() #18, !dbg !2631
  ret i32 %10, !dbg !2632
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskPriorityGetFromISR(i8* noundef readonly %0) local_unnamed_addr #2 !dbg !2633 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2635, metadata !DIExpression()), !dbg !2639
  tail call void @vPortValidateInterruptPriority() #18, !dbg !2640
  %2 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !2641, !srcloc !2649
  call void @llvm.dbg.value(metadata i32 undef, metadata !2646, metadata !DIExpression()) #19, !dbg !2650
  call void @llvm.dbg.value(metadata i32 undef, metadata !2647, metadata !DIExpression()) #19, !dbg !2650
  call void @llvm.dbg.value(metadata i32 undef, metadata !2638, metadata !DIExpression()), !dbg !2639
  %3 = icmp eq i8* %0, null, !dbg !2651
  br i1 %3, label %4, label %6, !dbg !2651

4:                                                ; preds = %1
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2651
  br label %8, !dbg !2651

6:                                                ; preds = %1
  %7 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !2651
  br label %8, !dbg !2651

8:                                                ; preds = %6, %4
  %9 = phi %struct.tskTaskControlBlock* [ %5, %4 ], [ %7, %6 ], !dbg !2651
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !2641
  call void @llvm.dbg.value(metadata i32 %10, metadata !2646, metadata !DIExpression()) #19, !dbg !2650
  call void @llvm.dbg.value(metadata i32 %10, metadata !2638, metadata !DIExpression()), !dbg !2639
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %9, metadata !2636, metadata !DIExpression()), !dbg !2639
  %11 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 3, !dbg !2653
  %12 = load i32, i32* %11, align 4, !dbg !2653
  call void @llvm.dbg.value(metadata i32 %12, metadata !2637, metadata !DIExpression()), !dbg !2639
  call void @llvm.dbg.value(metadata i32 undef, metadata !2654, metadata !DIExpression()) #19, !dbg !2659
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %10) #19, !dbg !2661, !srcloc !2662
  ret i32 %12, !dbg !2663
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPrioritySet(i8* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !2664 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2668, metadata !DIExpression()), !dbg !2674
  call void @llvm.dbg.value(metadata i32 %1, metadata !2669, metadata !DIExpression()), !dbg !2674
  call void @llvm.dbg.value(metadata i32 0, metadata !2673, metadata !DIExpression()), !dbg !2674
  %3 = icmp ugt i32 %1, 19, !dbg !2675
  br i1 %3, label %4, label %5, !dbg !2677

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 1122) #18, !dbg !2678
  br label %5, !dbg !2678

5:                                                ; preds = %4, %2
  %6 = icmp ult i32 %1, 19, !dbg !2680
  %7 = select i1 %6, i32 %1, i32 19, !dbg !2680
  call void @llvm.dbg.value(metadata i32 %7, metadata !2669, metadata !DIExpression()), !dbg !2674
  tail call void @vPortEnterCritical() #18, !dbg !2681
  %8 = icmp eq i8* %0, null, !dbg !2682
  br i1 %8, label %9, label %11, !dbg !2682

9:                                                ; preds = %5
  %10 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2682
  br label %13, !dbg !2682

11:                                               ; preds = %5
  %12 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !2682
  br label %13, !dbg !2682

13:                                               ; preds = %11, %9
  %14 = phi %struct.tskTaskControlBlock* [ %10, %9 ], [ %12, %11 ], !dbg !2682
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %14, metadata !2670, metadata !DIExpression()), !dbg !2674
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 8, !dbg !2684
  %16 = load i32, i32* %15, align 4, !dbg !2684
  call void @llvm.dbg.value(metadata i32 %16, metadata !2671, metadata !DIExpression()), !dbg !2674
  %17 = icmp eq i32 %16, %7, !dbg !2686
  br i1 %17, label %64, label %18, !dbg !2688

18:                                               ; preds = %13
  %19 = icmp ule i32 %7, %16, !dbg !2689
  %20 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2692
  %21 = icmp eq %struct.tskTaskControlBlock* %14, %20, !dbg !2692
  %22 = select i1 %19, i1 true, i1 %21, !dbg !2693
  %23 = select i1 %19, i1 %21, i1 false, !dbg !2693
  br i1 %22, label %29, label %24, !dbg !2693

24:                                               ; preds = %18
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2694
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !2699
  %27 = load i32, i32* %26, align 4, !dbg !2699
  %28 = icmp uge i32 %7, %27, !dbg !2700
  br label %29, !dbg !2701

29:                                               ; preds = %18, %24
  %30 = phi i1 [ %28, %24 ], [ %23, %18 ], !dbg !2674
  call void @llvm.dbg.value(metadata i32 undef, metadata !2673, metadata !DIExpression()), !dbg !2674
  %31 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 3, !dbg !2702
  %32 = load i32, i32* %31, align 4, !dbg !2702
  call void @llvm.dbg.value(metadata i32 %32, metadata !2672, metadata !DIExpression()), !dbg !2674
  %33 = icmp eq i32 %16, %32, !dbg !2703
  br i1 %33, label %34, label %35, !dbg !2706

34:                                               ; preds = %29
  store i32 %7, i32* %31, align 4, !dbg !2707
  br label %35, !dbg !2709

35:                                               ; preds = %29, %34
  store i32 %7, i32* %15, align 4, !dbg !2710
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, i32 0, !dbg !2711
  %37 = load i32, i32* %36, align 4, !dbg !2711
  %38 = icmp sgt i32 %37, -1, !dbg !2713
  br i1 %38, label %39, label %41, !dbg !2714

39:                                               ; preds = %35
  %40 = sub nuw nsw i32 20, %7, !dbg !2715
  store i32 %40, i32* %36, align 4, !dbg !2715
  br label %41, !dbg !2717

41:                                               ; preds = %35, %39
  %42 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, !dbg !2718
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 1, i32 4, !dbg !2718
  %44 = load i8*, i8** %43, align 4, !dbg !2718
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !2718
  %46 = bitcast %struct.xLIST* %45 to i8*, !dbg !2718
  %47 = icmp eq i8* %44, %46, !dbg !2718
  br i1 %47, label %48, label %62, !dbg !2720

48:                                               ; preds = %41
  %49 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %42) #18, !dbg !2721
  %50 = icmp eq i32 %49, 0, !dbg !2724
  br i1 %50, label %51, label %56, !dbg !2725

51:                                               ; preds = %48
  %52 = shl nuw i32 1, %32, !dbg !2726
  %53 = xor i32 %52, -1, !dbg !2726
  %54 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2726
  %55 = and i32 %54, %53, !dbg !2726
  store volatile i32 %55, i32* @uxTopReadyPriority, align 4, !dbg !2726
  br label %56, !dbg !2728

56:                                               ; preds = %48, %51
  %57 = load i32, i32* %31, align 4, !dbg !2729
  %58 = shl nuw i32 1, %57, !dbg !2729
  %59 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2729
  %60 = or i32 %59, %58, !dbg !2729
  store volatile i32 %60, i32* @uxTopReadyPriority, align 4, !dbg !2729
  %61 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %57, !dbg !2729
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %61, %struct.xLIST_ITEM* noundef nonnull %42) #18, !dbg !2729
  br label %62, !dbg !2730

62:                                               ; preds = %41, %56
  br i1 %30, label %63, label %64, !dbg !2731

63:                                               ; preds = %62
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2732
  tail call void asm sideeffect "dsb", ""() #19, !dbg !2732, !srcloc !2736
  tail call void asm sideeffect "isb", ""() #19, !dbg !2732, !srcloc !2737
  br label %64, !dbg !2738

64:                                               ; preds = %63, %62, %13
  tail call void @vPortExitCritical() #18, !dbg !2739
  ret void, !dbg !2740
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSuspend(i8* noundef %0) local_unnamed_addr #2 !dbg !2741 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2743, metadata !DIExpression()), !dbg !2745
  tail call void @vPortEnterCritical() #18, !dbg !2746
  %2 = icmp eq i8* %0, null, !dbg !2747
  br i1 %2, label %3, label %5, !dbg !2747

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2747
  br label %7, !dbg !2747

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !2747
  br label %7, !dbg !2747

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !2747
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !2744, metadata !DIExpression()), !dbg !2745
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !2749
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !2751
  %11 = icmp eq i32 %10, 0, !dbg !2752
  br i1 %11, label %12, label %23, !dbg !2753

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 3, !dbg !2754
  %14 = load i32, i32* %13, align 4, !dbg !2754
  %15 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %14, i32 0, !dbg !2754
  %16 = load i32, i32* %15, align 4, !dbg !2754
  %17 = icmp eq i32 %16, 0, !dbg !2754
  br i1 %17, label %18, label %23, !dbg !2758

18:                                               ; preds = %12
  %19 = shl nuw i32 1, %14, !dbg !2759
  %20 = xor i32 %19, -1, !dbg !2759
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2759
  %22 = and i32 %21, %20, !dbg !2759
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !2759
  br label %23, !dbg !2759

23:                                               ; preds = %7, %12, %18
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 4, !dbg !2761
  %25 = load i8*, i8** %24, align 4, !dbg !2761
  %26 = icmp eq i8* %25, null, !dbg !2763
  br i1 %26, label %30, label %27, !dbg !2764

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, !dbg !2761
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !2765
  br label %30, !dbg !2767

30:                                               ; preds = %23, %27
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !2768
  tail call void @vPortExitCritical() #18, !dbg !2769
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2770
  %32 = icmp eq %struct.tskTaskControlBlock* %8, %31, !dbg !2772
  %33 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !2773
  %34 = icmp eq i32 %33, 0, !dbg !2773
  br i1 %32, label %35, label %47, !dbg !2774

35:                                               ; preds = %30
  br i1 %34, label %41, label %36, !dbg !2775

36:                                               ; preds = %35
  %37 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2777
  %38 = icmp eq i32 %37, 0, !dbg !2777
  br i1 %38, label %40, label %39, !dbg !2781

39:                                               ; preds = %36
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 1322) #18, !dbg !2782
  br label %40, !dbg !2782

40:                                               ; preds = %39, %36
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2784
  tail call void asm sideeffect "dsb", ""() #19, !dbg !2784, !srcloc !2786
  tail call void asm sideeffect "isb", ""() #19, !dbg !2784, !srcloc !2787
  br label %49, !dbg !2788

41:                                               ; preds = %35
  %42 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xSuspendedTaskList, i32 0, i32 0), align 4, !dbg !2789
  %43 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !2792
  %44 = icmp eq i32 %42, %43, !dbg !2793
  br i1 %44, label %45, label %46, !dbg !2794

45:                                               ; preds = %41
  store volatile %struct.tskTaskControlBlock* null, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2795
  br label %49, !dbg !2797

46:                                               ; preds = %41
  tail call void @vTaskSwitchContext() #17, !dbg !2798
  br label %49

47:                                               ; preds = %30
  br i1 %34, label %49, label %48, !dbg !2800

48:                                               ; preds = %47
  tail call void @vPortEnterCritical() #18, !dbg !2802
  tail call fastcc void @prvResetNextTaskUnblockTime() #17, !dbg !2805
  tail call void @vPortExitCritical() #18, !dbg !2807
  br label %49, !dbg !2808

49:                                               ; preds = %48, %47, %40, %46, %45
  ret void, !dbg !2809
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSwitchContext() local_unnamed_addr #2 !dbg !109 {
  %1 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2810
  %2 = icmp eq i32 %1, 0, !dbg !2811
  br i1 %2, label %4, label %3, !dbg !2812

3:                                                ; preds = %0
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !2813
  br label %62, !dbg !2815

4:                                                ; preds = %0
  store volatile i32 0, i32* @xYieldPending, align 4, !dbg !2816
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !2817
  %6 = and i32 %5, 1, !dbg !2817
  %7 = icmp eq i32 %6, 0, !dbg !2817
  br i1 %7, label %21, label %8, !dbg !2820

8:                                                ; preds = %4
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2821
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %9, i32 0, i32 0, !dbg !2821
  %11 = load i32*, i32** %10, align 4, !dbg !2821
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2821
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 4, !dbg !2821
  %14 = load i32*, i32** %13, align 4, !dbg !2821
  %15 = icmp ugt i32* %11, %14, !dbg !2821
  br i1 %15, label %21, label %16, !dbg !2824

16:                                               ; preds = %8
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2825
  %18 = bitcast %struct.tskTaskControlBlock* %17 to i8*, !dbg !2825
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2825
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 5, i32 0, !dbg !2825
  tail call void @vApplicationStackOverflowHook(i8* noundef %18, i8* noundef nonnull %20) #18, !dbg !2825
  br label %21, !dbg !2825

21:                                               ; preds = %8, %16, %4
  %22 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !2827
  %23 = and i32 %22, 1, !dbg !2827
  %24 = icmp eq i32 %23, 0, !dbg !2827
  br i1 %24, label %37, label %25, !dbg !2830

25:                                               ; preds = %21
  %26 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2831
  %27 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %26, i32 0, i32 4, !dbg !2831
  %28 = bitcast i32** %27 to i8**, !dbg !2831
  %29 = load i8*, i8** %28, align 4, !dbg !2831
  %30 = tail call i32 @memcmp(i8* noundef %29, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @vTaskSwitchContext.ucExpectedStackBytes, i32 0, i32 0), i32 noundef 20) #18, !dbg !2831
  %31 = icmp eq i32 %30, 0, !dbg !2831
  br i1 %31, label %37, label %32, !dbg !2834

32:                                               ; preds = %25
  %33 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2835
  %34 = bitcast %struct.tskTaskControlBlock* %33 to i8*, !dbg !2835
  %35 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2835
  %36 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %35, i32 0, i32 5, i32 0, !dbg !2835
  tail call void @vApplicationStackOverflowHook(i8* noundef %34, i8* noundef nonnull %36) #18, !dbg !2835
  br label %37, !dbg !2835

37:                                               ; preds = %25, %32, %21
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2837
  call void @llvm.dbg.value(metadata i32 %38, metadata !2838, metadata !DIExpression()) #19, !dbg !2844
  %39 = tail call i8 asm sideeffect "clz $0, $1", "=r,r"(i32 %38) #19, !dbg !2846, !srcloc !2847
  call void @llvm.dbg.value(metadata i8 %39, metadata !2843, metadata !DIExpression()) #19, !dbg !2844
  %40 = zext i8 %39 to i32, !dbg !2837
  %41 = sub nsw i32 31, %40, !dbg !2837
  call void @llvm.dbg.value(metadata i32 %41, metadata !113, metadata !DIExpression()), !dbg !2848
  %42 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 0, !dbg !2849
  %43 = load i32, i32* %42, align 4, !dbg !2849
  %44 = icmp eq i32 %43, 0, !dbg !2849
  br i1 %44, label %45, label %46, !dbg !2837

45:                                               ; preds = %37
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 2244) #18, !dbg !2851
  br label %46, !dbg !2851

46:                                               ; preds = %45, %37
  call void @llvm.dbg.value(metadata !DIArgList([20 x %struct.xLIST]* @pxReadyTasksLists, i32 %41), metadata !117, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 20, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2853
  %47 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 1, !dbg !2854
  %48 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %47, align 4, !dbg !2854
  %49 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %48, i32 0, i32 1, !dbg !2854
  %50 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %49, align 4, !dbg !2854
  store %struct.xLIST_ITEM* %50, %struct.xLIST_ITEM** %47, align 4, !dbg !2854
  %51 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %41, i32 2, !dbg !2855
  %52 = bitcast %struct.xMINI_LIST_ITEM* %51 to %struct.xLIST_ITEM*, !dbg !2855
  %53 = icmp eq %struct.xLIST_ITEM* %50, %52, !dbg !2855
  br i1 %53, label %54, label %57, !dbg !2854

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %50, i32 0, i32 1, !dbg !2857
  %56 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %55, align 4, !dbg !2857
  store %struct.xLIST_ITEM* %56, %struct.xLIST_ITEM** %47, align 4, !dbg !2857
  br label %57, !dbg !2857

57:                                               ; preds = %54, %46
  %58 = phi %struct.xLIST_ITEM* [ %56, %54 ], [ %50, %46 ], !dbg !2854
  %59 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %58, i32 0, i32 3, !dbg !2854
  %60 = bitcast i8** %59 to %struct.tskTaskControlBlock**, !dbg !2854
  %61 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %60, align 4, !dbg !2854
  store volatile %struct.tskTaskControlBlock* %61, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2854
  br label %62

62:                                               ; preds = %57, %3
  ret void, !dbg !2859
}

; Function Attrs: optsize
declare dso_local i32 @memcmp(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskResume(i8* noundef %0) local_unnamed_addr #2 !dbg !2860 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2862, metadata !DIExpression()), !dbg !2864
  call void @llvm.dbg.value(metadata i8* %0, metadata !2863, metadata !DIExpression()), !dbg !2864
  %2 = icmp eq i8* %0, null, !dbg !2865
  br i1 %2, label %3, label %4, !dbg !2865

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 1420) #18, !dbg !2866
  br label %29, !dbg !2869

4:                                                ; preds = %1
  %5 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !2871
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %5, metadata !2863, metadata !DIExpression()), !dbg !2864
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2872
  %7 = icmp eq %struct.tskTaskControlBlock* %6, %5, !dbg !2873
  br i1 %7, label %29, label %8, !dbg !2874

8:                                                ; preds = %4
  tail call void @vPortEnterCritical() #18, !dbg !2875
  %9 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef nonnull %0) #17, !dbg !2877
  %10 = icmp eq i32 %9, 1, !dbg !2880
  br i1 %10, label %11, label %28, !dbg !2881

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !2882
  %13 = bitcast i8* %12 to %struct.xLIST_ITEM*, !dbg !2882
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !2884
  %15 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !2885
  %16 = bitcast i8* %15 to i32*, !dbg !2885
  %17 = load i32, i32* %16, align 4, !dbg !2885
  %18 = shl nuw i32 1, %17, !dbg !2885
  %19 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2885
  %20 = or i32 %19, %18, !dbg !2885
  store volatile i32 %20, i32* @uxTopReadyPriority, align 4, !dbg !2885
  %21 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %17, !dbg !2885
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %21, %struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !2885
  %22 = load i32, i32* %16, align 4, !dbg !2886
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2888
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 3, !dbg !2889
  %25 = load i32, i32* %24, align 4, !dbg !2889
  %26 = icmp ult i32 %22, %25, !dbg !2890
  br i1 %26, label %28, label %27, !dbg !2891

27:                                               ; preds = %11
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !2892
  tail call void asm sideeffect "dsb", ""() #19, !dbg !2892, !srcloc !2895
  tail call void asm sideeffect "isb", ""() #19, !dbg !2892, !srcloc !2896
  br label %28, !dbg !2897

28:                                               ; preds = %8, %27, %11
  tail call void @vPortExitCritical() #18, !dbg !2898
  br label %29, !dbg !2899

29:                                               ; preds = %3, %4, %28
  ret void, !dbg !2900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvTaskIsTaskSuspended(i8* noundef readonly %0) unnamed_addr #2 !dbg !2901 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2906, metadata !DIExpression()), !dbg !2912
  call void @llvm.dbg.value(metadata i32 0, metadata !2907, metadata !DIExpression()), !dbg !2912
  call void @llvm.dbg.value(metadata i8* %0, metadata !2908, metadata !DIExpression()), !dbg !2912
  %2 = icmp eq i8* %0, null, !dbg !2913
  br i1 %2, label %3, label %4, !dbg !2915

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 1378) #18, !dbg !2916
  br label %4, !dbg !2916

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !2918
  %6 = bitcast i8* %5 to i8**, !dbg !2918
  %7 = load i8*, i8** %6, align 4, !dbg !2918
  %8 = icmp eq i8* %7, bitcast (%struct.xLIST* @xSuspendedTaskList to i8*), !dbg !2918
  br i1 %8, label %9, label %15, !dbg !2920

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !2921
  %11 = bitcast i8* %10 to i8**, !dbg !2921
  %12 = load i8*, i8** %11, align 4, !dbg !2921
  %13 = icmp eq i8* %12, null
  %14 = zext i1 %13 to i32, !dbg !2924
  br label %15, !dbg !2924

15:                                               ; preds = %9, %4
  %16 = phi i32 [ 0, %4 ], [ %14, %9 ], !dbg !2912
  call void @llvm.dbg.value(metadata i32 %16, metadata !2907, metadata !DIExpression()), !dbg !2912
  ret i32 %16, !dbg !2925
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskResumeFromISR(i8* noundef %0) local_unnamed_addr #2 !dbg !2926 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2930, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.value(metadata i32 0, metadata !2931, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.value(metadata i8* %0, metadata !2932, metadata !DIExpression()), !dbg !2934
  %2 = icmp eq i8* %0, null, !dbg !2935
  br i1 %2, label %3, label %4, !dbg !2937

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 1475) #18, !dbg !2938
  br label %4, !dbg !2938

4:                                                ; preds = %3, %1
  tail call void @vPortValidateInterruptPriority() #18, !dbg !2940
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !2941, !srcloc !2649
  call void @llvm.dbg.value(metadata i32 undef, metadata !2646, metadata !DIExpression()) #19, !dbg !2943
  call void @llvm.dbg.value(metadata i32 undef, metadata !2647, metadata !DIExpression()) #19, !dbg !2943
  call void @llvm.dbg.value(metadata i32 undef, metadata !2933, metadata !DIExpression()), !dbg !2934
  %6 = tail call fastcc i32 @prvTaskIsTaskSuspended(i8* noundef %0) #17, !dbg !2944
  %7 = icmp eq i32 %6, 1, !dbg !2947
  br i1 %7, label %8, label %31, !dbg !2948

8:                                                ; preds = %4
  %9 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !2949
  %10 = icmp eq i32 %9, 0, !dbg !2952
  br i1 %10, label %11, label %28, !dbg !2953

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !2954
  %13 = bitcast i8* %12 to i32*, !dbg !2954
  %14 = load i32, i32* %13, align 4, !dbg !2954
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !2957
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 3, !dbg !2958
  %17 = load i32, i32* %16, align 4, !dbg !2958
  %18 = icmp uge i32 %14, %17, !dbg !2959
  %19 = zext i1 %18 to i32, !dbg !2960
  call void @llvm.dbg.value(metadata i32 %19, metadata !2931, metadata !DIExpression()), !dbg !2934
  %20 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !2961
  %21 = bitcast i8* %20 to %struct.xLIST_ITEM*, !dbg !2961
  %22 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !2962
  %23 = load i32, i32* %13, align 4, !dbg !2963
  %24 = shl nuw i32 1, %23, !dbg !2963
  %25 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !2963
  %26 = or i32 %25, %24, !dbg !2963
  store volatile i32 %26, i32* @uxTopReadyPriority, align 4, !dbg !2963
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %23, !dbg !2963
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %27, %struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !2963
  br label %31, !dbg !2964

28:                                               ; preds = %8
  %29 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !2965
  %30 = bitcast i8* %29 to %struct.xLIST_ITEM*, !dbg !2965
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %30) #18, !dbg !2967
  br label %31

31:                                               ; preds = %4, %11, %28
  %32 = phi i32 [ %19, %11 ], [ 0, %28 ], [ 0, %4 ], !dbg !2934
  %33 = extractvalue { i32, i32 } %5, 0, !dbg !2941
  call void @llvm.dbg.value(metadata i32 %33, metadata !2646, metadata !DIExpression()) #19, !dbg !2943
  call void @llvm.dbg.value(metadata i32 %33, metadata !2933, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.value(metadata i32 %32, metadata !2931, metadata !DIExpression()), !dbg !2934
  call void @llvm.dbg.value(metadata i32 undef, metadata !2654, metadata !DIExpression()) #19, !dbg !2968
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #19, !dbg !2970, !srcloc !2662
  ret i32 %32, !dbg !2971
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskStartScheduler() local_unnamed_addr #2 !dbg !2972 {
  %1 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @prvIdleTask, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i16 noundef zeroext 256, i8* noundef null, i32 noundef 0, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* undef) #17, !dbg !2975
  call void @llvm.dbg.value(metadata i32 %1, metadata !2974, metadata !DIExpression()), !dbg !2977
  %2 = icmp eq i32 %1, 1, !dbg !2978
  br i1 %2, label %3, label %5, !dbg !2981

3:                                                ; preds = %0
  %4 = tail call i32 @xTimerCreateTimerTask() #18, !dbg !2982
  call void @llvm.dbg.value(metadata i32 %4, metadata !2974, metadata !DIExpression()), !dbg !2977
  br label %5, !dbg !2984

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !2977
  call void @llvm.dbg.value(metadata i32 %6, metadata !2974, metadata !DIExpression()), !dbg !2977
  switch i32 %6, label %11 [
    i32 1, label %7
    i32 0, label %10
  ], !dbg !2985

7:                                                ; preds = %5
  %8 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !2986, !srcloc !2993
  call void @llvm.dbg.value(metadata i32 %8, metadata !2989, metadata !DIExpression()) #19, !dbg !2994
  store volatile i32 1, i32* @xSchedulerRunning, align 4, !dbg !2995
  store volatile i32 0, i32* @xTickCount, align 4, !dbg !2996
  %9 = tail call i32 @xPortStartScheduler() #18, !dbg !2997
  br label %11, !dbg !2999

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 1612) #18, !dbg !3000
  br label %11, !dbg !3000

11:                                               ; preds = %5, %10, %7
  ret void, !dbg !3004
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvIdleTask(i8* nocapture noundef readnone %0) #4 !dbg !3005 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3007, metadata !DIExpression()), !dbg !3008
  br label %2, !dbg !3009

2:                                                ; preds = %5, %1
  tail call fastcc void @prvCheckTasksWaitingTermination() #17, !dbg !3010
  %3 = load i32, i32* getelementptr inbounds ([20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 0, i32 0), align 4, !dbg !3014
  %4 = icmp ugt i32 %3, 1, !dbg !3017
  br i1 %4, label %6, label %5, !dbg !3018

5:                                                ; preds = %2, %6
  br label %2, !dbg !3010, !llvm.loop !3019

6:                                                ; preds = %2
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3022
  tail call void asm sideeffect "dsb", ""() #19, !dbg !3022, !srcloc !3025
  tail call void asm sideeffect "isb", ""() #19, !dbg !3022, !srcloc !3026
  br label %5, !dbg !3027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckTasksWaitingTermination() unnamed_addr #2 !dbg !3028 {
  %1 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !3036
  %2 = icmp eq i32 %1, 0, !dbg !3037
  br i1 %2, label %21, label %3, !dbg !3038

3:                                                ; preds = %0, %18
  tail call void @vTaskSuspendAll() #17, !dbg !3039
  %4 = load i32, i32* getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 0), align 4, !dbg !3040
  %5 = icmp eq i32 %4, 0, !dbg !3040
  call void @llvm.dbg.value(metadata i1 %5, metadata !3030, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3042
  %6 = tail call i32 @xTaskResumeAll() #17, !dbg !3043
  br i1 %5, label %18, label %7, !dbg !3044

7:                                                ; preds = %3
  tail call void @vPortEnterCritical() #18, !dbg !3045
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** getelementptr inbounds (%struct.xLIST, %struct.xLIST* @xTasksWaitingTermination, i32 0, i32 2, i32 1), align 4, !dbg !3046
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !3046
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !3046
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !3046
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !3032, metadata !DIExpression()), !dbg !3048
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !3049
  %13 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %12) #18, !dbg !3050
  %14 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !3051
  %15 = add i32 %14, -1, !dbg !3051
  store volatile i32 %15, i32* @uxCurrentNumberOfTasks, align 4, !dbg !3051
  %16 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !3052
  %17 = add i32 %16, -1, !dbg !3052
  store volatile i32 %17, i32* @uxTasksDeleted, align 4, !dbg !3052
  tail call void @vPortExitCritical() #18, !dbg !3053
  tail call fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %11) #17, !dbg !3054
  br label %18, !dbg !3055

18:                                               ; preds = %3, %7
  %19 = load volatile i32, i32* @uxTasksDeleted, align 4, !dbg !3036
  %20 = icmp eq i32 %19, 0, !dbg !3037
  br i1 %20, label %21, label %3, !dbg !3038, !llvm.loop !3056

21:                                               ; preds = %18, %0
  ret void, !dbg !3058
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvDeleteTCB(%struct.tskTaskControlBlock* noundef %0) unnamed_addr #2 !dbg !3059 {
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %0, metadata !3063, metadata !DIExpression()), !dbg !3064
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %0, i32 0, i32 4, !dbg !3065
  %3 = bitcast i32** %2 to i8**, !dbg !3065
  %4 = load i8*, i8** %3, align 4, !dbg !3065
  tail call void @vPortFree(i8* noundef %4) #18, !dbg !3065
  %5 = bitcast %struct.tskTaskControlBlock* %0 to i8*, !dbg !3067
  tail call void @vPortFree(i8* noundef %5) #18, !dbg !3068
  ret void, !dbg !3069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskEndScheduler() local_unnamed_addr #2 !dbg !3070 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !3071, !srcloc !2993
  call void @llvm.dbg.value(metadata i32 %1, metadata !2989, metadata !DIExpression()) #19, !dbg !3073
  store volatile i32 0, i32* @xSchedulerRunning, align 4, !dbg !3074
  tail call void @vPortEndScheduler() #18, !dbg !3075
  ret void, !dbg !3076
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetTickCount() local_unnamed_addr #5 !dbg !3077 {
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !3082
  call void @llvm.dbg.value(metadata i32 %1, metadata !3081, metadata !DIExpression()), !dbg !3084
  ret i32 %1, !dbg !3085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskGetTickCountFromISR() local_unnamed_addr #2 !dbg !3086 {
  tail call void @vPortValidateInterruptPriority() #18, !dbg !3090
  call void @llvm.dbg.value(metadata i32 0, metadata !3089, metadata !DIExpression()), !dbg !3091
  %1 = load volatile i32, i32* @xTickCount, align 4, !dbg !3092
  call void @llvm.dbg.value(metadata i32 %1, metadata !3088, metadata !DIExpression()), !dbg !3091
  ret i32 %1, !dbg !3094
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetNumberOfTasks() local_unnamed_addr #5 !dbg !3095 {
  %1 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !3098
  ret i32 %1, !dbg !3099
}

; Function Attrs: noinline nounwind optsize
define dso_local nonnull i8* @pcTaskGetTaskName(i8* noundef readnone %0) local_unnamed_addr #2 !dbg !3100 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3104, metadata !DIExpression()), !dbg !3106
  %2 = icmp eq i8* %0, null, !dbg !3107
  br i1 %2, label %3, label %5, !dbg !3107

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3107
  br label %7, !dbg !3107

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !3107
  br label %7, !dbg !3107

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !3107
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !3105, metadata !DIExpression()), !dbg !3106
  %9 = icmp eq %struct.tskTaskControlBlock* %8, null, !dbg !3108
  br i1 %9, label %10, label %11, !dbg !3110

10:                                               ; preds = %7
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 1821) #18, !dbg !3111
  br label %11, !dbg !3111

11:                                               ; preds = %10, %7
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 5, i32 0, !dbg !3113
  ret i8* %12, !dbg !3114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* nocapture noundef writeonly %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #2 !dbg !3115 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !3136, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i32 %1, metadata !3137, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i32* %2, metadata !3138, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i32 0, metadata !3139, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i32 20, metadata !3140, metadata !DIExpression()), !dbg !3141
  tail call void @vTaskSuspendAll() #17, !dbg !3142
  %4 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !3143
  %5 = icmp ugt i32 %4, %1, !dbg !3146
  br i1 %5, label %32, label %6, !dbg !3147

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %3 ], !dbg !3141
  %8 = phi i32 [ %9, %6 ], [ 20, %3 ], !dbg !3141
  call void @llvm.dbg.value(metadata i32 %8, metadata !3140, metadata !DIExpression()), !dbg !3141
  call void @llvm.dbg.value(metadata i32 %7, metadata !3139, metadata !DIExpression()), !dbg !3141
  %9 = add nsw i32 %8, -1, !dbg !3148
  call void @llvm.dbg.value(metadata i32 %9, metadata !3140, metadata !DIExpression()), !dbg !3141
  %10 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %7, !dbg !3151
  %11 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %9, !dbg !3152
  %12 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %10, %struct.xLIST* noundef nonnull %11, i32 noundef 1) #17, !dbg !3153
  %13 = add i32 %12, %7, !dbg !3154
  call void @llvm.dbg.value(metadata i32 %13, metadata !3139, metadata !DIExpression()), !dbg !3141
  %14 = icmp eq i32 %9, 0, !dbg !3155
  br i1 %14, label %15, label %6, !dbg !3156, !llvm.loop !3157

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %13, !dbg !3160
  %17 = load volatile %struct.xLIST*, %struct.xLIST** @pxDelayedTaskList, align 4, !dbg !3161
  %18 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %16, %struct.xLIST* noundef %17, i32 noundef 2) #17, !dbg !3162
  %19 = add i32 %18, %13, !dbg !3163
  call void @llvm.dbg.value(metadata i32 %19, metadata !3139, metadata !DIExpression()), !dbg !3141
  %20 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %19, !dbg !3164
  %21 = load volatile %struct.xLIST*, %struct.xLIST** @pxOverflowDelayedTaskList, align 4, !dbg !3165
  %22 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %20, %struct.xLIST* noundef %21, i32 noundef 2) #17, !dbg !3166
  %23 = add i32 %22, %19, !dbg !3167
  call void @llvm.dbg.value(metadata i32 %23, metadata !3139, metadata !DIExpression()), !dbg !3141
  %24 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %23, !dbg !3168
  %25 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %24, %struct.xLIST* noundef nonnull @xTasksWaitingTermination, i32 noundef 4) #17, !dbg !3170
  %26 = add i32 %23, %25, !dbg !3171
  call void @llvm.dbg.value(metadata i32 %26, metadata !3139, metadata !DIExpression()), !dbg !3141
  %27 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %26, !dbg !3172
  %28 = tail call fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* noundef %27, %struct.xLIST* noundef nonnull @xSuspendedTaskList, i32 noundef 3) #17, !dbg !3174
  %29 = add i32 %26, %28, !dbg !3175
  call void @llvm.dbg.value(metadata i32 %29, metadata !3139, metadata !DIExpression()), !dbg !3141
  %30 = icmp eq i32* %2, null, !dbg !3176
  br i1 %30, label %32, label %31, !dbg !3179

31:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !3180
  br label %32, !dbg !3182

32:                                               ; preds = %3, %15, %31
  %33 = phi i32 [ %29, %31 ], [ %29, %15 ], [ 0, %3 ], !dbg !3141
  call void @llvm.dbg.value(metadata i32 %33, metadata !3139, metadata !DIExpression()), !dbg !3141
  %34 = tail call i32 @xTaskResumeAll() #17, !dbg !3183
  ret i32 %33, !dbg !3184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @prvListTaskWithinSingleList(%struct.xTASK_STATUS* nocapture noundef writeonly %0, %struct.xLIST* noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !3185 {
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %0, metadata !3189, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !3190, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.value(metadata i32 %2, metadata !3191, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.value(metadata i32 0, metadata !3196, metadata !DIExpression()), !dbg !3204
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !3205
  %5 = load i32, i32* %4, align 4, !dbg !3205
  %6 = icmp eq i32 %5, 0, !dbg !3206
  br i1 %6, label %72, label %7, !dbg !3207

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !3197, metadata !DIExpression()), !dbg !3208
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 1, !dbg !3209
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !3209
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !3209
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %10, align 4, !dbg !3209
  store %struct.xLIST_ITEM* %11, %struct.xLIST_ITEM** %8, align 4, !dbg !3209
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, !dbg !3210
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !3210
  %14 = icmp eq %struct.xLIST_ITEM* %11, %13, !dbg !3210
  br i1 %14, label %15, label %18, !dbg !3209

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !3212
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !3212
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %8, align 4, !dbg !3212
  br label %18, !dbg !3212

18:                                               ; preds = %15, %7
  %19 = phi %struct.xLIST_ITEM* [ %17, %15 ], [ %11, %7 ], !dbg !3209
  %20 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %19, i32 0, i32 3, !dbg !3209
  %21 = bitcast i8** %20 to %struct.tskTaskControlBlock**, !dbg !3209
  %22 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %21, align 4, !dbg !3209
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %22, metadata !3195, metadata !DIExpression()), !dbg !3204
  %23 = icmp eq i32 %2, 3
  %24 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 2, i32 1
  br label %25, !dbg !3214

25:                                               ; preds = %70, %18
  %26 = phi %struct.xLIST_ITEM* [ %19, %18 ], [ %71, %70 ], !dbg !3215
  %27 = phi i32 [ 0, %18 ], [ %68, %70 ], !dbg !3204
  call void @llvm.dbg.value(metadata i32 %27, metadata !3196, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.value(metadata %struct.xLIST* %1, metadata !3201, metadata !DIExpression()), !dbg !3216
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %26, i32 0, i32 1, !dbg !3215
  %29 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %28, align 4, !dbg !3215
  store %struct.xLIST_ITEM* %29, %struct.xLIST_ITEM** %8, align 4, !dbg !3215
  %30 = icmp eq %struct.xLIST_ITEM* %29, %13, !dbg !3217
  br i1 %30, label %31, label %33, !dbg !3215

31:                                               ; preds = %25
  %32 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %24, align 4, !dbg !3219
  store %struct.xLIST_ITEM* %32, %struct.xLIST_ITEM** %8, align 4, !dbg !3219
  br label %33, !dbg !3219

33:                                               ; preds = %31, %25
  %34 = phi %struct.xLIST_ITEM* [ %32, %31 ], [ %29, %25 ], !dbg !3215
  %35 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %34, i32 0, i32 3, !dbg !3215
  %36 = load i8*, i8** %35, align 4, !dbg !3215
  %37 = bitcast i8* %36 to %struct.tskTaskControlBlock*, !dbg !3215
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %37, metadata !3192, metadata !DIExpression()), !dbg !3204
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 0, !dbg !3221
  store i8* %36, i8** %38, align 4, !dbg !3222
  %39 = getelementptr inbounds i8, i8* %36, i32 52, !dbg !3223
  %40 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 1, !dbg !3224
  store i8* %39, i8** %40, align 4, !dbg !3225
  %41 = getelementptr inbounds i8, i8* %36, i32 60, !dbg !3226
  %42 = bitcast i8* %41 to i32*, !dbg !3226
  %43 = load volatile i32, i32* %42, align 4, !dbg !3226
  %44 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 2, !dbg !3227
  store i32 %43, i32* %44, align 4, !dbg !3228
  %45 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 3, !dbg !3229
  store i32 %2, i32* %45, align 4, !dbg !3230
  %46 = getelementptr inbounds i8, i8* %36, i32 44, !dbg !3231
  %47 = bitcast i8* %46 to i32*, !dbg !3231
  %48 = load volatile i32, i32* %47, align 4, !dbg !3231
  %49 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 4, !dbg !3232
  store i32 %48, i32* %49, align 4, !dbg !3233
  br i1 %23, label %50, label %56, !dbg !3234

50:                                               ; preds = %33
  %51 = getelementptr inbounds i8, i8* %36, i32 40, !dbg !3236
  %52 = bitcast i8* %51 to i8**, !dbg !3236
  %53 = load volatile i8*, i8** %52, align 4, !dbg !3236
  %54 = icmp eq i8* %53, null, !dbg !3240
  br i1 %54, label %56, label %55, !dbg !3241

55:                                               ; preds = %50
  store i32 2, i32* %45, align 4, !dbg !3242
  br label %56, !dbg !3244

56:                                               ; preds = %50, %55, %33
  %57 = getelementptr inbounds i8, i8* %36, i32 68, !dbg !3245
  %58 = bitcast i8* %57 to i32*, !dbg !3245
  %59 = load volatile i32, i32* %58, align 4, !dbg !3245
  %60 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 5, !dbg !3247
  store i32 %59, i32* %60, align 4, !dbg !3248
  %61 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 6, !dbg !3249
  store i32 0, i32* %61, align 4, !dbg !3251
  %62 = getelementptr inbounds i8, i8* %36, i32 48, !dbg !3252
  %63 = bitcast i8* %62 to i32**, !dbg !3252
  %64 = load volatile i32*, i32** %63, align 4, !dbg !3252
  %65 = bitcast i32* %64 to i8*, !dbg !3254
  %66 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %65) #17, !dbg !3255
  %67 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %0, i32 %27, i32 7, !dbg !3256
  store i16 %66, i16* %67, align 4, !dbg !3257
  %68 = add i32 %27, 1, !dbg !3258
  call void @llvm.dbg.value(metadata i32 %68, metadata !3196, metadata !DIExpression()), !dbg !3204
  %69 = icmp eq %struct.tskTaskControlBlock* %22, %37, !dbg !3259
  br i1 %69, label %72, label %70, !dbg !3260, !llvm.loop !3261

70:                                               ; preds = %56
  %71 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !3215
  br label %25, !dbg !3260

72:                                               ; preds = %56, %3
  %73 = phi i32 [ 0, %3 ], [ %68, %56 ], !dbg !3204
  call void @llvm.dbg.value(metadata i32 %73, metadata !3196, metadata !DIExpression()), !dbg !3204
  ret i32 %73, !dbg !3263
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* nocapture noundef readonly %0) unnamed_addr #6 !dbg !3264 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3269, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata i32 0, metadata !3270, metadata !DIExpression()), !dbg !3271
  %2 = load i8, i8* %0, align 1, !dbg !3272
  %3 = icmp eq i8 %2, -91, !dbg !3273
  br i1 %3, label %4, label %14, !dbg !3274

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3270, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.value(metadata i8* %6, metadata !3269, metadata !DIExpression()), !dbg !3271
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !3275
  call void @llvm.dbg.value(metadata i8* %7, metadata !3269, metadata !DIExpression()), !dbg !3271
  %8 = add i32 %5, 1, !dbg !3277
  call void @llvm.dbg.value(metadata i32 %8, metadata !3270, metadata !DIExpression()), !dbg !3271
  %9 = load i8, i8* %7, align 1, !dbg !3272
  %10 = icmp eq i8 %9, -91, !dbg !3273
  br i1 %10, label %4, label %11, !dbg !3274, !llvm.loop !3278

11:                                               ; preds = %4
  %12 = lshr i32 %8, 2, !dbg !3280
  %13 = trunc i32 %12 to i16, !dbg !3280
  br label %14, !dbg !3280

14:                                               ; preds = %11, %1
  %15 = phi i16 [ 0, %1 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3270, metadata !DIExpression()), !dbg !3271
  ret i16 %15, !dbg !3281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventList(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3282 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !3286, metadata !DIExpression()), !dbg !3289
  call void @llvm.dbg.value(metadata i32 %1, metadata !3287, metadata !DIExpression()), !dbg !3289
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !3290
  br i1 %3, label %4, label %5, !dbg !3292

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 2262) #18, !dbg !3293
  br label %5, !dbg !3293

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3295
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !3296
  tail call void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #18, !dbg !3297
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3298
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !3300
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !3301
  %11 = icmp eq i32 %10, 0, !dbg !3302
  br i1 %11, label %12, label %20, !dbg !3303

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3304
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !3304
  %15 = load i32, i32* %14, align 4, !dbg !3304
  %16 = shl nuw i32 1, %15, !dbg !3304
  %17 = xor i32 %16, -1, !dbg !3304
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3304
  %19 = and i32 %18, %17, !dbg !3304
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !3304
  br label %20, !dbg !3306

20:                                               ; preds = %5, %12
  %21 = icmp eq i32 %1, -1, !dbg !3307
  br i1 %21, label %22, label %25, !dbg !3310

22:                                               ; preds = %20
  %23 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3311
  %24 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %23, i32 0, i32 1, !dbg !3313
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %24) #18, !dbg !3314
  br label %28, !dbg !3315

25:                                               ; preds = %20
  %26 = load volatile i32, i32* @xTickCount, align 4, !dbg !3316
  %27 = add i32 %26, %1, !dbg !3318
  call void @llvm.dbg.value(metadata i32 %27, metadata !3288, metadata !DIExpression()), !dbg !3289
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %27) #17, !dbg !3319
  br label %28

28:                                               ; preds = %25, %22
  ret void, !dbg !3320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnUnorderedEventList(%struct.xLIST* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !3321 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !3325, metadata !DIExpression()), !dbg !3329
  call void @llvm.dbg.value(metadata i32 %1, metadata !3326, metadata !DIExpression()), !dbg !3329
  call void @llvm.dbg.value(metadata i32 %2, metadata !3327, metadata !DIExpression()), !dbg !3329
  %4 = icmp eq %struct.xLIST* %0, null, !dbg !3330
  br i1 %4, label %5, label %6, !dbg !3332

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 2321) #18, !dbg !3333
  br label %6, !dbg !3333

6:                                                ; preds = %5, %3
  %7 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3335
  %8 = icmp eq i32 %7, 0, !dbg !3335
  br i1 %8, label %9, label %10, !dbg !3337

9:                                                ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 2325) #18, !dbg !3338
  br label %10, !dbg !3338

10:                                               ; preds = %9, %6
  %11 = or i32 %1, -2147483648, !dbg !3340
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3340
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 2, i32 0, !dbg !3340
  store i32 %11, i32* %13, align 4, !dbg !3340
  %14 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3341
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %14, i32 0, i32 2, !dbg !3342
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %15) #18, !dbg !3343
  %16 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3344
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %16, i32 0, i32 1, !dbg !3346
  %18 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %17) #18, !dbg !3347
  %19 = icmp eq i32 %18, 0, !dbg !3348
  br i1 %19, label %20, label %28, !dbg !3349

20:                                               ; preds = %10
  %21 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3350
  %22 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %21, i32 0, i32 3, !dbg !3350
  %23 = load i32, i32* %22, align 4, !dbg !3350
  %24 = shl nuw i32 1, %23, !dbg !3350
  %25 = xor i32 %24, -1, !dbg !3350
  %26 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3350
  %27 = and i32 %26, %25, !dbg !3350
  store volatile i32 %27, i32* @uxTopReadyPriority, align 4, !dbg !3350
  br label %28, !dbg !3352

28:                                               ; preds = %10, %20
  %29 = icmp eq i32 %2, -1, !dbg !3353
  br i1 %29, label %30, label %33, !dbg !3356

30:                                               ; preds = %28
  %31 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3357
  %32 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %31, i32 0, i32 1, !dbg !3359
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %32) #18, !dbg !3360
  br label %36, !dbg !3361

33:                                               ; preds = %28
  %34 = load volatile i32, i32* @xTickCount, align 4, !dbg !3362
  %35 = add i32 %34, %2, !dbg !3364
  call void @llvm.dbg.value(metadata i32 %35, metadata !3328, metadata !DIExpression()), !dbg !3329
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %35) #17, !dbg !3365
  br label %36

36:                                               ; preds = %33, %30
  ret void, !dbg !3366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3367 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !3369, metadata !DIExpression()), !dbg !3372
  call void @llvm.dbg.value(metadata i32 %1, metadata !3370, metadata !DIExpression()), !dbg !3372
  %3 = icmp eq %struct.xLIST* %0, null, !dbg !3373
  br i1 %3, label %4, label %5, !dbg !3375

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 2389) #18, !dbg !3376
  br label %5, !dbg !3376

5:                                                ; preds = %4, %2
  %6 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3378
  %7 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !3379
  tail call void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef nonnull %7) #18, !dbg !3380
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3381
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 1, !dbg !3383
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !3384
  %11 = icmp eq i32 %10, 0, !dbg !3385
  br i1 %11, label %12, label %20, !dbg !3386

12:                                               ; preds = %5
  %13 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3387
  %14 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %13, i32 0, i32 3, !dbg !3387
  %15 = load i32, i32* %14, align 4, !dbg !3387
  %16 = shl nuw i32 1, %15, !dbg !3387
  %17 = xor i32 %16, -1, !dbg !3387
  %18 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3387
  %19 = and i32 %18, %17, !dbg !3387
  store volatile i32 %19, i32* @uxTopReadyPriority, align 4, !dbg !3387
  br label %20, !dbg !3389

20:                                               ; preds = %5, %12
  %21 = load volatile i32, i32* @xTickCount, align 4, !dbg !3390
  %22 = add i32 %21, %1, !dbg !3391
  call void @llvm.dbg.value(metadata i32 %22, metadata !3371, metadata !DIExpression()), !dbg !3372
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %22) #17, !dbg !3392
  ret void, !dbg !3393
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromEventList(%struct.xLIST* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !3394 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !3401, metadata !DIExpression()), !dbg !3404
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !3405
  %3 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %2, align 4, !dbg !3405
  %4 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %3, i32 0, i32 3, !dbg !3405
  %5 = bitcast i8** %4 to %struct.tskTaskControlBlock**, !dbg !3405
  %6 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %5, align 4, !dbg !3405
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %6, metadata !3402, metadata !DIExpression()), !dbg !3404
  %7 = icmp eq %struct.tskTaskControlBlock* %6, null, !dbg !3406
  br i1 %7, label %8, label %9, !dbg !3408

8:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 2447) #18, !dbg !3409
  br label %9, !dbg !3409

9:                                                ; preds = %8, %1
  %10 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 2, !dbg !3411
  %11 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %10) #18, !dbg !3412
  %12 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3413
  %13 = icmp eq i32 %12, 0, !dbg !3415
  br i1 %13, label %14, label %23, !dbg !3416

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 1, !dbg !3417
  %16 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %15) #18, !dbg !3419
  %17 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !3420
  %18 = load i32, i32* %17, align 4, !dbg !3420
  %19 = shl nuw i32 1, %18, !dbg !3420
  %20 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3420
  %21 = or i32 %20, %19, !dbg !3420
  store volatile i32 %21, i32* @uxTopReadyPriority, align 4, !dbg !3420
  %22 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %18, !dbg !3420
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %22, %struct.xLIST_ITEM* noundef nonnull %15) #18, !dbg !3420
  br label %24, !dbg !3421

23:                                               ; preds = %9
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %10) #18, !dbg !3422
  br label %24

24:                                               ; preds = %23, %14
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %6, i32 0, i32 3, !dbg !3424
  %26 = load i32, i32* %25, align 4, !dbg !3424
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3426
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 3, !dbg !3427
  %29 = load i32, i32* %28, align 4, !dbg !3427
  %30 = icmp ugt i32 %26, %29, !dbg !3428
  br i1 %30, label %31, label %32, !dbg !3429

31:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 1, metadata !3403, metadata !DIExpression()), !dbg !3404
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !3430
  br label %32, !dbg !3432

32:                                               ; preds = %24, %31
  %33 = phi i32 [ 1, %31 ], [ 0, %24 ], !dbg !3433
  call void @llvm.dbg.value(metadata i32 %33, metadata !3403, metadata !DIExpression()), !dbg !3404
  ret i32 %33, !dbg !3434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskRemoveFromUnorderedEventList(%struct.xLIST_ITEM* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3435 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !3439, metadata !DIExpression()), !dbg !3443
  call void @llvm.dbg.value(metadata i32 %1, metadata !3440, metadata !DIExpression()), !dbg !3443
  %3 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3444
  %4 = icmp eq i32 %3, 0, !dbg !3444
  br i1 %4, label %5, label %6, !dbg !3446

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 2503) #18, !dbg !3447
  br label %6, !dbg !3447

6:                                                ; preds = %5, %2
  %7 = or i32 %1, -2147483648, !dbg !3449
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 0, !dbg !3449
  store i32 %7, i32* %8, align 4, !dbg !3449
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 3, !dbg !3450
  %10 = bitcast i8** %9 to %struct.tskTaskControlBlock**, !dbg !3450
  %11 = load %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** %10, align 4, !dbg !3450
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %11, metadata !3441, metadata !DIExpression()), !dbg !3443
  %12 = icmp eq %struct.tskTaskControlBlock* %11, null, !dbg !3451
  br i1 %12, label %13, label %14, !dbg !3453

13:                                               ; preds = %6
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 2511) #18, !dbg !3454
  br label %14, !dbg !3454

14:                                               ; preds = %13, %6
  %15 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %0) #18, !dbg !3456
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 1, !dbg !3457
  %17 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %16) #18, !dbg !3458
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 3, !dbg !3459
  %19 = load i32, i32* %18, align 4, !dbg !3459
  %20 = shl nuw i32 1, %19, !dbg !3459
  %21 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3459
  %22 = or i32 %21, %20, !dbg !3459
  store volatile i32 %22, i32* @uxTopReadyPriority, align 4, !dbg !3459
  %23 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %19, !dbg !3459
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %23, %struct.xLIST_ITEM* noundef nonnull %16) #18, !dbg !3459
  %24 = load i32, i32* %18, align 4, !dbg !3460
  %25 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3462
  %26 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %25, i32 0, i32 3, !dbg !3463
  %27 = load i32, i32* %26, align 4, !dbg !3463
  %28 = icmp ugt i32 %24, %27, !dbg !3464
  br i1 %28, label %29, label %30, !dbg !3465

29:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 1, metadata !3442, metadata !DIExpression()), !dbg !3443
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !3466
  br label %30, !dbg !3468

30:                                               ; preds = %14, %29
  %31 = phi i32 [ 1, %29 ], [ 0, %14 ], !dbg !3469
  call void @llvm.dbg.value(metadata i32 %31, metadata !3442, metadata !DIExpression()), !dbg !3443
  ret i32 %31, !dbg !3470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskSetTimeOutState(%struct.xTIME_OUT* noundef writeonly %0) local_unnamed_addr #2 !dbg !3471 {
  call void @llvm.dbg.value(metadata %struct.xTIME_OUT* %0, metadata !3482, metadata !DIExpression()), !dbg !3483
  %2 = icmp eq %struct.xTIME_OUT* %0, null, !dbg !3484
  br i1 %2, label %3, label %4, !dbg !3486

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 2543) #18, !dbg !3487
  br label %4, !dbg !3487

4:                                                ; preds = %3, %1
  %5 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !3489
  %6 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %0, i32 0, i32 0, !dbg !3490
  store i32 %5, i32* %6, align 4, !dbg !3491
  %7 = load volatile i32, i32* @xTickCount, align 4, !dbg !3492
  %8 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %0, i32 0, i32 1, !dbg !3493
  store i32 %7, i32* %8, align 4, !dbg !3494
  ret void, !dbg !3495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* noundef %0, i32* noundef %1) local_unnamed_addr #2 !dbg !3496 {
  call void @llvm.dbg.value(metadata %struct.xTIME_OUT* %0, metadata !3500, metadata !DIExpression()), !dbg !3505
  call void @llvm.dbg.value(metadata i32* %1, metadata !3501, metadata !DIExpression()), !dbg !3505
  %3 = icmp eq %struct.xTIME_OUT* %0, null, !dbg !3506
  br i1 %3, label %4, label %5, !dbg !3508

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 2553) #18, !dbg !3509
  br label %5, !dbg !3509

5:                                                ; preds = %4, %2
  %6 = icmp eq i32* %1, null, !dbg !3511
  br i1 %6, label %7, label %8, !dbg !3513

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 2554) #18, !dbg !3514
  br label %8, !dbg !3514

8:                                                ; preds = %7, %5
  tail call void @vPortEnterCritical() #18, !dbg !3516
  %9 = load volatile i32, i32* @xTickCount, align 4, !dbg !3517
  call void @llvm.dbg.value(metadata i32 %9, metadata !3503, metadata !DIExpression()), !dbg !3518
  %10 = load i32, i32* %1, align 4, !dbg !3519
  %11 = icmp eq i32 %10, -1, !dbg !3521
  br i1 %11, label %26, label %12, !dbg !3522

12:                                               ; preds = %8
  %13 = load volatile i32, i32* @xNumOfOverflows, align 4, !dbg !3523
  %14 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %0, i32 0, i32 0, !dbg !3525
  %15 = load i32, i32* %14, align 4, !dbg !3525
  %16 = icmp eq i32 %13, %15, !dbg !3526
  %17 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4, !dbg !3527
  %19 = icmp ult i32 %9, %18
  %20 = select i1 %16, i1 true, i1 %19, !dbg !3528
  br i1 %20, label %21, label %26, !dbg !3528

21:                                               ; preds = %12
  %22 = sub i32 %9, %18, !dbg !3529
  %23 = icmp ugt i32 %10, %22, !dbg !3531
  br i1 %23, label %24, label %26, !dbg !3532

24:                                               ; preds = %21
  %25 = sub i32 %10, %22, !dbg !3533
  store i32 %25, i32* %1, align 4, !dbg !3533
  tail call void @vTaskSetTimeOutState(%struct.xTIME_OUT* noundef nonnull %0) #17, !dbg !3535
  call void @llvm.dbg.value(metadata i32 0, metadata !3502, metadata !DIExpression()), !dbg !3505
  br label %26, !dbg !3536

26:                                               ; preds = %12, %21, %8, %24
  %27 = phi i32 [ 0, %24 ], [ 0, %8 ], [ 1, %21 ], [ 1, %12 ], !dbg !3537
  call void @llvm.dbg.value(metadata i32 %27, metadata !3502, metadata !DIExpression()), !dbg !3505
  tail call void @vPortExitCritical() #18, !dbg !3538
  ret i32 %27, !dbg !3539
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vTaskMissedYield() local_unnamed_addr #0 !dbg !3540 {
  store volatile i32 1, i32* @xYieldPending, align 4, !dbg !3541
  ret void, !dbg !3542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxTaskGetTaskNumber(i8* noundef readonly %0) local_unnamed_addr #7 !dbg !3543 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3545, metadata !DIExpression()), !dbg !3548
  %2 = icmp eq i8* %0, null, !dbg !3549
  br i1 %2, label %7, label %3, !dbg !3551

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3547, metadata !DIExpression()), !dbg !3548
  %4 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !3552
  %5 = bitcast i8* %4 to i32*, !dbg !3552
  %6 = load i32, i32* %5, align 4, !dbg !3552
  call void @llvm.dbg.value(metadata i32 %6, metadata !3546, metadata !DIExpression()), !dbg !3548
  br label %7, !dbg !3554

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 0, %1 ], !dbg !3555
  call void @llvm.dbg.value(metadata i32 %8, metadata !3546, metadata !DIExpression()), !dbg !3548
  ret i32 %8, !dbg !3556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vTaskSetTaskNumber(i8* noundef writeonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !3557 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3561, metadata !DIExpression()), !dbg !3564
  call void @llvm.dbg.value(metadata i32 %1, metadata !3562, metadata !DIExpression()), !dbg !3564
  %3 = icmp eq i8* %0, null, !dbg !3565
  br i1 %3, label %7, label %4, !dbg !3567

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %0, metadata !3563, metadata !DIExpression()), !dbg !3564
  %5 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !3568
  %6 = bitcast i8* %5 to i32*, !dbg !3568
  store i32 %1, i32* %6, align 4, !dbg !3570
  br label %7, !dbg !3571

7:                                                ; preds = %4, %2
  ret void, !dbg !3572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @uxTaskGetStackHighWaterMark(i8* noundef readonly %0) local_unnamed_addr #0 !dbg !3573 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3575, metadata !DIExpression()), !dbg !3579
  %2 = icmp eq i8* %0, null, !dbg !3580
  br i1 %2, label %3, label %5, !dbg !3580

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3580
  br label %7, !dbg !3580

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !3580
  br label %7, !dbg !3580

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !3580
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !3576, metadata !DIExpression()), !dbg !3579
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !3581
  %10 = bitcast i32** %9 to i8**, !dbg !3581
  %11 = load i8*, i8** %10, align 4, !dbg !3581
  call void @llvm.dbg.value(metadata i8* %11, metadata !3577, metadata !DIExpression()), !dbg !3579
  %12 = tail call fastcc zeroext i16 @prvTaskCheckFreeStackSpace(i8* noundef %11) #17, !dbg !3583
  %13 = zext i16 %12 to i32, !dbg !3584
  call void @llvm.dbg.value(metadata i32 %13, metadata !3578, metadata !DIExpression()), !dbg !3579
  ret i32 %13, !dbg !3585
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @xTaskGetCurrentTaskHandle() local_unnamed_addr #5 !dbg !3586 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3591
  %2 = bitcast %struct.tskTaskControlBlock* %1 to i8*, !dbg !3591
  call void @llvm.dbg.value(metadata i8* %2, metadata !3590, metadata !DIExpression()), !dbg !3592
  ret i8* %2, !dbg !3593
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @xTaskGetSchedulerState() local_unnamed_addr #5 !dbg !3594 {
  %1 = load volatile i32, i32* @xSchedulerRunning, align 4, !dbg !3597
  %2 = icmp eq i32 %1, 0, !dbg !3599
  br i1 %2, label %7, label %3, !dbg !3600

3:                                                ; preds = %0
  %4 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !3601
  %5 = icmp eq i32 %4, 0, !dbg !3604
  %6 = select i1 %5, i32 2, i32 0
  br label %7

7:                                                ; preds = %3, %0
  %8 = phi i32 [ 1, %0 ], [ %6, %3 ], !dbg !3605
  call void @llvm.dbg.value(metadata i32 %8, metadata !3596, metadata !DIExpression()), !dbg !3606
  ret i32 %8, !dbg !3607
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskPriorityInherit(i8* noundef %0) local_unnamed_addr #2 !dbg !3608 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3612, metadata !DIExpression()), !dbg !3614
  call void @llvm.dbg.value(metadata i8* %0, metadata !3613, metadata !DIExpression()), !dbg !3614
  %2 = icmp eq i8* %0, null, !dbg !3615
  br i1 %2, label %55, label %3, !dbg !3617

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !3618
  %5 = bitcast i8* %4 to i32*, !dbg !3618
  %6 = load i32, i32* %5, align 4, !dbg !3618
  %7 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3621
  %8 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %7, i32 0, i32 3, !dbg !3622
  %9 = load i32, i32* %8, align 4, !dbg !3622
  %10 = icmp ult i32 %6, %9, !dbg !3623
  br i1 %10, label %11, label %55, !dbg !3624

11:                                               ; preds = %3
  %12 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !3625
  %13 = bitcast i8* %12 to i32*, !dbg !3625
  %14 = load i32, i32* %13, align 4, !dbg !3625
  %15 = icmp sgt i32 %14, -1, !dbg !3628
  br i1 %15, label %16, label %21, !dbg !3629

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3630
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !3630
  %19 = load i32, i32* %18, align 4, !dbg !3630
  %20 = sub i32 20, %19, !dbg !3630
  store i32 %20, i32* %13, align 4, !dbg !3630
  br label %21, !dbg !3632

21:                                               ; preds = %11, %16
  %22 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3633
  %23 = bitcast i8* %22 to %struct.xLIST_ITEM*, !dbg !3633
  %24 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !3633
  %25 = bitcast i8* %24 to i8**, !dbg !3633
  %26 = load i8*, i8** %25, align 4, !dbg !3633
  %27 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %6, !dbg !3633
  %28 = bitcast %struct.xLIST* %27 to i8*, !dbg !3633
  %29 = icmp eq i8* %26, %28, !dbg !3633
  br i1 %29, label %30, label %51, !dbg !3635

30:                                               ; preds = %21
  %31 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %23) #18, !dbg !3636
  %32 = icmp eq i32 %31, 0, !dbg !3639
  br i1 %32, label %33, label %43, !dbg !3640

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !3641
  %35 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %34, i32 0, !dbg !3641
  %36 = load i32, i32* %35, align 4, !dbg !3641
  %37 = icmp eq i32 %36, 0, !dbg !3641
  br i1 %37, label %38, label %43, !dbg !3645

38:                                               ; preds = %33
  %39 = shl nuw i32 1, %34, !dbg !3646
  %40 = xor i32 %39, -1, !dbg !3646
  %41 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3646
  %42 = and i32 %41, %40, !dbg !3646
  store volatile i32 %42, i32* @uxTopReadyPriority, align 4, !dbg !3646
  br label %43, !dbg !3646

43:                                               ; preds = %30, %33, %38
  %44 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3648
  %45 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %44, i32 0, i32 3, !dbg !3649
  %46 = load i32, i32* %45, align 4, !dbg !3649
  store i32 %46, i32* %5, align 4, !dbg !3650
  %47 = shl nuw i32 1, %46, !dbg !3651
  %48 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3651
  %49 = or i32 %48, %47, !dbg !3651
  store volatile i32 %49, i32* @uxTopReadyPriority, align 4, !dbg !3651
  %50 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %46, !dbg !3651
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %50, %struct.xLIST_ITEM* noundef nonnull %23) #18, !dbg !3651
  br label %55, !dbg !3652

51:                                               ; preds = %21
  %52 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3653
  %53 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %52, i32 0, i32 3, !dbg !3655
  %54 = load i32, i32* %53, align 4, !dbg !3655
  store i32 %54, i32* %5, align 4, !dbg !3656
  br label %55

55:                                               ; preds = %1, %51, %43, %3
  ret void, !dbg !3657
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskPriorityDisinherit(i8* noundef %0) local_unnamed_addr #2 !dbg !3658 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3660, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i8* %0, metadata !3661, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata i32 0, metadata !3662, metadata !DIExpression()), !dbg !3663
  %2 = icmp eq i8* %0, null, !dbg !3664
  br i1 %2, label %46, label %3, !dbg !3666

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !3667
  %5 = bitcast i8* %4 to i32*, !dbg !3667
  %6 = load i32, i32* %5, align 4, !dbg !3667
  %7 = icmp eq i32 %6, 0, !dbg !3667
  br i1 %7, label %8, label %10, !dbg !3670

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 3409) #18, !dbg !3671
  %9 = load i32, i32* %5, align 4, !dbg !3673
  br label %10, !dbg !3671

10:                                               ; preds = %8, %3
  %11 = phi i32 [ %9, %8 ], [ %6, %3 ], !dbg !3673
  %12 = add i32 %11, -1, !dbg !3673
  store i32 %12, i32* %5, align 4, !dbg !3673
  %13 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !3674
  %14 = bitcast i8* %13 to i32*, !dbg !3674
  %15 = load i32, i32* %14, align 4, !dbg !3674
  %16 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !3676
  %17 = bitcast i8* %16 to i32*, !dbg !3676
  %18 = load i32, i32* %17, align 4, !dbg !3676
  %19 = icmp ne i32 %15, %18, !dbg !3677
  %20 = icmp eq i32 %12, 0
  %21 = select i1 %19, i1 %20, i1 false, !dbg !3678
  br i1 %21, label %22, label %46, !dbg !3678

22:                                               ; preds = %10
  %23 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3679
  %24 = bitcast i8* %23 to %struct.xLIST_ITEM*, !dbg !3679
  %25 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %24) #18, !dbg !3684
  %26 = icmp eq i32 %25, 0, !dbg !3685
  br i1 %26, label %27, label %37, !dbg !3686

27:                                               ; preds = %22
  %28 = load i32, i32* %14, align 4, !dbg !3687
  %29 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %28, i32 0, !dbg !3687
  %30 = load i32, i32* %29, align 4, !dbg !3687
  %31 = icmp eq i32 %30, 0, !dbg !3687
  br i1 %31, label %32, label %37, !dbg !3691

32:                                               ; preds = %27
  %33 = shl nuw i32 1, %28, !dbg !3692
  %34 = xor i32 %33, -1, !dbg !3692
  %35 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3692
  %36 = and i32 %35, %34, !dbg !3692
  store volatile i32 %36, i32* @uxTopReadyPriority, align 4, !dbg !3692
  br label %37, !dbg !3692

37:                                               ; preds = %22, %27, %32
  %38 = load i32, i32* %17, align 4, !dbg !3694
  store i32 %38, i32* %14, align 4, !dbg !3695
  %39 = sub i32 20, %38, !dbg !3696
  %40 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !3696
  %41 = bitcast i8* %40 to i32*, !dbg !3696
  store i32 %39, i32* %41, align 4, !dbg !3696
  %42 = shl nuw i32 1, %38, !dbg !3697
  %43 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3697
  %44 = or i32 %43, %42, !dbg !3697
  store volatile i32 %44, i32* @uxTopReadyPriority, align 4, !dbg !3697
  %45 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %38, !dbg !3697
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %45, %struct.xLIST_ITEM* noundef nonnull %24) #18, !dbg !3697
  call void @llvm.dbg.value(metadata i32 1, metadata !3662, metadata !DIExpression()), !dbg !3663
  br label %46, !dbg !3698

46:                                               ; preds = %1, %37, %10
  %47 = phi i32 [ 1, %37 ], [ 0, %10 ], [ 0, %1 ], !dbg !3663
  call void @llvm.dbg.value(metadata i32 %47, metadata !3662, metadata !DIExpression()), !dbg !3663
  ret i32 %47, !dbg !3699
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskList(i8* noundef %0) local_unnamed_addr #2 !dbg !3700 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3704, metadata !DIExpression()), !dbg !3709
  %4 = bitcast i32* %2 to i8*, !dbg !3710
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !3710
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3706, metadata !DIExpression()), !dbg !3711
  %5 = bitcast i32* %3 to i8*, !dbg !3710
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3710
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3707, metadata !DIExpression()), !dbg !3712
  store i8 0, i8* %0, align 1, !dbg !3713
  %6 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !3714
  store volatile i32 %6, i32* %2, align 4, !dbg !3715
  %7 = load volatile i32, i32* @uxCurrentNumberOfTasks, align 4, !dbg !3716
  %8 = shl i32 %7, 5, !dbg !3717
  %9 = tail call i8* @pvPortMalloc(i32 noundef %8) #18, !dbg !3718
  %10 = bitcast i8* %9 to %struct.xTASK_STATUS*, !dbg !3718
  call void @llvm.dbg.value(metadata %struct.xTASK_STATUS* %10, metadata !3705, metadata !DIExpression()), !dbg !3709
  %11 = icmp eq i8* %9, null, !dbg !3719
  br i1 %11, label %53, label %12, !dbg !3721

12:                                               ; preds = %1
  %13 = load volatile i32, i32* %2, align 4, !dbg !3722
  %14 = tail call i32 @uxTaskGetSystemState(%struct.xTASK_STATUS* noundef nonnull %10, i32 noundef %13, i32* noundef null) #17, !dbg !3724
  store volatile i32 %14, i32* %2, align 4, !dbg !3725
  store volatile i32 0, i32* %3, align 4, !dbg !3726
  call void @llvm.dbg.value(metadata i8* %0, metadata !3704, metadata !DIExpression()), !dbg !3709
  %15 = load volatile i32, i32* %3, align 4, !dbg !3728
  %16 = load volatile i32, i32* %2, align 4, !dbg !3730
  %17 = icmp ult i32 %15, %16, !dbg !3731
  br i1 %17, label %18, label %52, !dbg !3732

18:                                               ; preds = %12, %28
  %19 = phi i8* [ %46, %28 ], [ %0, %12 ]
  call void @llvm.dbg.value(metadata i8* %19, metadata !3704, metadata !DIExpression()), !dbg !3709
  %20 = load volatile i32, i32* %3, align 4, !dbg !3733
  %21 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %20, i32 3, !dbg !3735
  %22 = load i32, i32* %21, align 4, !dbg !3735
  %23 = add i32 %22, -1, !dbg !3736
  %24 = icmp ult i32 %23, 4, !dbg !3736
  br i1 %24, label %25, label %28, !dbg !3736

25:                                               ; preds = %18
  %26 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.vTaskList, i32 0, i32 %23, !dbg !3736
  %27 = load i32, i32* %26, align 4, !dbg !3736
  br label %28, !dbg !3736

28:                                               ; preds = %18, %25
  %29 = phi i32 [ %27, %25 ], [ 0, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !3708, metadata !DIExpression()), !dbg !3709
  %30 = load volatile i32, i32* %3, align 4, !dbg !3737
  %31 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %30, i32 1, !dbg !3738
  %32 = load i8*, i8** %31, align 4, !dbg !3738
  %33 = tail call fastcc i8* @prvWriteNameToBuffer(i8* noundef %19, i8* noundef %32) #17, !dbg !3739
  call void @llvm.dbg.value(metadata i8* %33, metadata !3704, metadata !DIExpression()), !dbg !3709
  %34 = load volatile i32, i32* %3, align 4, !dbg !3740
  %35 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %34, i32 4, !dbg !3741
  %36 = load i32, i32* %35, align 4, !dbg !3741
  %37 = load volatile i32, i32* %3, align 4, !dbg !3742
  %38 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %37, i32 7, !dbg !3743
  %39 = load i16, i16* %38, align 4, !dbg !3743
  %40 = zext i16 %39 to i32, !dbg !3744
  %41 = load volatile i32, i32* %3, align 4, !dbg !3745
  %42 = getelementptr inbounds %struct.xTASK_STATUS, %struct.xTASK_STATUS* %10, i32 %41, i32 2, !dbg !3746
  %43 = load i32, i32* %42, align 4, !dbg !3746
  %44 = tail call i32 (i8*, i8*, ...) @sprintf(i8* noundef %33, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i32 noundef %29, i32 noundef %36, i32 noundef %40, i32 noundef %43) #18, !dbg !3747
  %45 = tail call i32 @strlen(i8* noundef %33) #18, !dbg !3748
  %46 = getelementptr inbounds i8, i8* %33, i32 %45, !dbg !3749
  call void @llvm.dbg.value(metadata i8* %46, metadata !3704, metadata !DIExpression()), !dbg !3709
  %47 = load volatile i32, i32* %3, align 4, !dbg !3750
  %48 = add i32 %47, 1, !dbg !3750
  store volatile i32 %48, i32* %3, align 4, !dbg !3750
  %49 = load volatile i32, i32* %3, align 4, !dbg !3728
  %50 = load volatile i32, i32* %2, align 4, !dbg !3730
  %51 = icmp ult i32 %49, %50, !dbg !3731
  br i1 %51, label %18, label %52, !dbg !3732, !llvm.loop !3751

52:                                               ; preds = %28, %12
  tail call void @vPortFree(i8* noundef nonnull %9) #18, !dbg !3753
  br label %53, !dbg !3754

53:                                               ; preds = %1, %52
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3755
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !3755
  ret void, !dbg !3755
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #9

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prvWriteNameToBuffer(i8* noundef %0, i8* noundef %1) unnamed_addr #2 !dbg !3756 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3760, metadata !DIExpression()), !dbg !3763
  call void @llvm.dbg.value(metadata i8* %1, metadata !3761, metadata !DIExpression()), !dbg !3763
  %3 = tail call i8* @strcpy(i8* noundef %0, i8* noundef %1) #18, !dbg !3764
  %4 = tail call i32 @strlen(i8* noundef %0) #18, !dbg !3765
  call void @llvm.dbg.value(metadata i32 %4, metadata !3762, metadata !DIExpression()), !dbg !3763
  %5 = icmp slt i32 %4, 5, !dbg !3767
  br i1 %5, label %6, label %11, !dbg !3769

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %9, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3762, metadata !DIExpression()), !dbg !3763
  %8 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !3770
  store i8 32, i8* %8, align 1, !dbg !3772
  %9 = add i32 %7, 1, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %9, metadata !3762, metadata !DIExpression()), !dbg !3763
  %10 = icmp eq i32 %9, 5, !dbg !3767
  br i1 %10, label %11, label %6, !dbg !3769, !llvm.loop !3774

11:                                               ; preds = %6, %2
  %12 = phi i32 [ %4, %2 ], [ 5, %6 ], !dbg !3776
  %13 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !3777
  store i8 0, i8* %13, align 1, !dbg !3778
  ret i8* %13, !dbg !3779
}

; Function Attrs: optsize
declare dso_local i32 @sprintf(i8* noundef, i8* noundef, ...) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @strlen(i8* noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #9

; Function Attrs: optsize
declare dso_local i8* @strcpy(i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskResetEventItemValue() local_unnamed_addr #5 !dbg !3780 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3783
  %2 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %1, i32 0, i32 2, i32 0, !dbg !3783
  %3 = load i32, i32* %2, align 4, !dbg !3783
  call void @llvm.dbg.value(metadata i32 %3, metadata !3782, metadata !DIExpression()), !dbg !3784
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3785
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 3, !dbg !3785
  %6 = load i32, i32* %5, align 4, !dbg !3785
  %7 = sub i32 20, %6, !dbg !3785
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3785
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 2, i32 0, !dbg !3785
  store i32 %7, i32* %9, align 4, !dbg !3785
  ret i32 %3, !dbg !3786
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i8* @pvTaskIncrementMutexHeldCount() local_unnamed_addr #5 !dbg !3787 {
  %1 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3789
  %2 = icmp eq %struct.tskTaskControlBlock* %1, null, !dbg !3791
  br i1 %2, label %8, label %3, !dbg !3792

3:                                                ; preds = %0
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3793
  %5 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %4, i32 0, i32 9, !dbg !3795
  %6 = load i32, i32* %5, align 4, !dbg !3796
  %7 = add i32 %6, 1, !dbg !3796
  store i32 %7, i32* %5, align 4, !dbg !3796
  br label %8, !dbg !3797

8:                                                ; preds = %3, %0
  %9 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3798
  %10 = bitcast %struct.tskTaskControlBlock* %9 to i8*, !dbg !3798
  ret i8* %10, !dbg !3799
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ulTaskNotifyTake(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3804, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.value(metadata i32 %1, metadata !3805, metadata !DIExpression()), !dbg !3808
  tail call void @vPortEnterCritical() #18, !dbg !3809
  %3 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3810
  %4 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %3, i32 0, i32 10, !dbg !3813
  %5 = load volatile i32, i32* %4, align 4, !dbg !3813
  %6 = icmp eq i32 %5, 0, !dbg !3814
  br i1 %6, label %7, label %33, !dbg !3815

7:                                                ; preds = %2
  %8 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3816
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 11, !dbg !3818
  store volatile i32 1, i32* %9, align 4, !dbg !3819
  %10 = icmp eq i32 %1, 0, !dbg !3820
  br i1 %10, label %33, label %11, !dbg !3822

11:                                               ; preds = %7
  %12 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3823
  %13 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %12, i32 0, i32 1, !dbg !3826
  %14 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %13) #18, !dbg !3827
  %15 = icmp eq i32 %14, 0, !dbg !3828
  br i1 %15, label %16, label %24, !dbg !3829

16:                                               ; preds = %11
  %17 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3830
  %18 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %17, i32 0, i32 3, !dbg !3830
  %19 = load i32, i32* %18, align 4, !dbg !3830
  %20 = shl nuw i32 1, %19, !dbg !3830
  %21 = xor i32 %20, -1, !dbg !3830
  %22 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3830
  %23 = and i32 %22, %21, !dbg !3830
  store volatile i32 %23, i32* @uxTopReadyPriority, align 4, !dbg !3830
  br label %24, !dbg !3832

24:                                               ; preds = %11, %16
  %25 = icmp eq i32 %1, -1, !dbg !3833
  br i1 %25, label %26, label %29, !dbg !3836

26:                                               ; preds = %24
  %27 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3837
  %28 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %27, i32 0, i32 1, !dbg !3839
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !3840
  br label %32, !dbg !3841

29:                                               ; preds = %24
  %30 = load volatile i32, i32* @xTickCount, align 4, !dbg !3842
  %31 = add i32 %30, %1, !dbg !3844
  call void @llvm.dbg.value(metadata i32 %31, metadata !3806, metadata !DIExpression()), !dbg !3808
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %31) #17, !dbg !3845
  br label %32

32:                                               ; preds = %29, %26
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3846
  tail call void asm sideeffect "dsb", ""() #19, !dbg !3846, !srcloc !3848
  tail call void asm sideeffect "isb", ""() #19, !dbg !3846, !srcloc !3849
  br label %33, !dbg !3850

33:                                               ; preds = %2, %32, %7
  tail call void @vPortExitCritical() #18, !dbg !3851
  tail call void @vPortEnterCritical() #18, !dbg !3852
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3853
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 10, !dbg !3855
  %36 = load volatile i32, i32* %35, align 4, !dbg !3855
  call void @llvm.dbg.value(metadata i32 %36, metadata !3807, metadata !DIExpression()), !dbg !3808
  %37 = icmp eq i32 %36, 0, !dbg !3856
  br i1 %37, label %47, label %38, !dbg !3858

38:                                               ; preds = %33
  %39 = icmp eq i32 %0, 0, !dbg !3859
  %40 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3862
  %41 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %40, i32 0, i32 10, !dbg !3862
  br i1 %39, label %42, label %45, !dbg !3863

42:                                               ; preds = %38
  %43 = load volatile i32, i32* %41, align 4, !dbg !3864
  %44 = add i32 %43, -1, !dbg !3864
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i32 [ %44, %42 ], [ 0, %38 ]
  store volatile i32 %46, i32* %41, align 4, !dbg !3862
  br label %47, !dbg !3866

47:                                               ; preds = %45, %33
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3866
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 11, !dbg !3867
  store volatile i32 0, i32* %49, align 4, !dbg !3868
  tail call void @vPortExitCritical() #18, !dbg !3869
  ret i32 %36, !dbg !3870
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyWait(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #2 !dbg !3871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3875, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %1, metadata !3876, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32* %2, metadata !3877, metadata !DIExpression()), !dbg !3881
  call void @llvm.dbg.value(metadata i32 %3, metadata !3878, metadata !DIExpression()), !dbg !3881
  tail call void @vPortEnterCritical() #18, !dbg !3882
  %5 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3883
  %6 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %5, i32 0, i32 11, !dbg !3886
  %7 = load volatile i32, i32* %6, align 4, !dbg !3886
  %8 = icmp eq i32 %7, 2, !dbg !3887
  br i1 %8, label %40, label %9, !dbg !3888

9:                                                ; preds = %4
  %10 = xor i32 %0, -1, !dbg !3889
  %11 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3891
  %12 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %11, i32 0, i32 10, !dbg !3892
  %13 = load volatile i32, i32* %12, align 4, !dbg !3893
  %14 = and i32 %13, %10, !dbg !3893
  store volatile i32 %14, i32* %12, align 4, !dbg !3893
  %15 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3894
  %16 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %15, i32 0, i32 11, !dbg !3895
  store volatile i32 1, i32* %16, align 4, !dbg !3896
  %17 = icmp eq i32 %3, 0, !dbg !3897
  br i1 %17, label %40, label %18, !dbg !3899

18:                                               ; preds = %9
  %19 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3900
  %20 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %19, i32 0, i32 1, !dbg !3903
  %21 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %20) #18, !dbg !3904
  %22 = icmp eq i32 %21, 0, !dbg !3905
  br i1 %22, label %23, label %31, !dbg !3906

23:                                               ; preds = %18
  %24 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3907
  %25 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %24, i32 0, i32 3, !dbg !3907
  %26 = load i32, i32* %25, align 4, !dbg !3907
  %27 = shl nuw i32 1, %26, !dbg !3907
  %28 = xor i32 %27, -1, !dbg !3907
  %29 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !3907
  %30 = and i32 %29, %28, !dbg !3907
  store volatile i32 %30, i32* @uxTopReadyPriority, align 4, !dbg !3907
  br label %31, !dbg !3909

31:                                               ; preds = %18, %23
  %32 = icmp eq i32 %3, -1, !dbg !3910
  br i1 %32, label %33, label %36, !dbg !3913

33:                                               ; preds = %31
  %34 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3914
  %35 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %34, i32 0, i32 1, !dbg !3916
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xSuspendedTaskList, %struct.xLIST_ITEM* noundef nonnull %35) #18, !dbg !3917
  br label %39, !dbg !3918

36:                                               ; preds = %31
  %37 = load volatile i32, i32* @xTickCount, align 4, !dbg !3919
  %38 = add i32 %37, %3, !dbg !3921
  call void @llvm.dbg.value(metadata i32 %38, metadata !3879, metadata !DIExpression()), !dbg !3881
  tail call fastcc void @prvAddCurrentTaskToDelayedList(i32 noundef %38) #17, !dbg !3922
  br label %39

39:                                               ; preds = %36, %33
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !3923
  tail call void asm sideeffect "dsb", ""() #19, !dbg !3923, !srcloc !3925
  tail call void asm sideeffect "isb", ""() #19, !dbg !3923, !srcloc !3926
  br label %40, !dbg !3927

40:                                               ; preds = %4, %39, %9
  tail call void @vPortExitCritical() #18, !dbg !3928
  tail call void @vPortEnterCritical() #18, !dbg !3929
  %41 = icmp eq i32* %2, null, !dbg !3930
  br i1 %41, label %46, label %42, !dbg !3933

42:                                               ; preds = %40
  %43 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3934
  %44 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %43, i32 0, i32 10, !dbg !3936
  %45 = load volatile i32, i32* %44, align 4, !dbg !3936
  store i32 %45, i32* %2, align 4, !dbg !3937
  br label %46, !dbg !3938

46:                                               ; preds = %42, %40
  %47 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3939
  %48 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %47, i32 0, i32 11, !dbg !3941
  %49 = load volatile i32, i32* %48, align 4, !dbg !3941
  %50 = icmp eq i32 %49, 1, !dbg !3942
  br i1 %50, label %57, label %51, !dbg !3943

51:                                               ; preds = %46
  %52 = xor i32 %1, -1, !dbg !3944
  %53 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3946
  %54 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %53, i32 0, i32 10, !dbg !3947
  %55 = load volatile i32, i32* %54, align 4, !dbg !3948
  %56 = and i32 %55, %52, !dbg !3948
  store volatile i32 %56, i32* %54, align 4, !dbg !3948
  call void @llvm.dbg.value(metadata i32 1, metadata !3880, metadata !DIExpression()), !dbg !3881
  br label %57

57:                                               ; preds = %46, %51
  %58 = phi i32 [ 1, %51 ], [ 0, %46 ], !dbg !3949
  call void @llvm.dbg.value(metadata i32 %58, metadata !3880, metadata !DIExpression()), !dbg !3881
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !3950
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 11, !dbg !3951
  store volatile i32 0, i32* %60, align 4, !dbg !3952
  tail call void @vPortExitCritical() #18, !dbg !3953
  ret i32 %58, !dbg !3954
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotify(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !3955 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3960, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %1, metadata !3961, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 %2, metadata !3962, metadata !DIExpression()), !dbg !3966
  call void @llvm.dbg.value(metadata i32 1, metadata !3965, metadata !DIExpression()), !dbg !3966
  %4 = icmp eq i8* %0, null, !dbg !3967
  br i1 %4, label %5, label %6, !dbg !3969

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 4049) #18, !dbg !3970
  br label %6, !dbg !3970

6:                                                ; preds = %5, %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !3963, metadata !DIExpression()), !dbg !3966
  tail call void @vPortEnterCritical() #18, !dbg !3972
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !3973
  %8 = bitcast i8* %7 to i32*, !dbg !3973
  %9 = load volatile i32, i32* %8, align 4, !dbg !3973
  call void @llvm.dbg.value(metadata i32 %9, metadata !3964, metadata !DIExpression()), !dbg !3966
  store volatile i32 2, i32* %8, align 4, !dbg !3975
  switch i32 %2, label %28 [
    i32 1, label %10
    i32 2, label %15
    i32 3, label %20
    i32 4, label %23
  ], !dbg !3976

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %0, metadata !3963, metadata !DIExpression()), !dbg !3966
  %11 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !3977
  %12 = bitcast i8* %11 to i32*, !dbg !3977
  %13 = load volatile i32, i32* %12, align 4, !dbg !3979
  %14 = or i32 %13, %1, !dbg !3979
  store volatile i32 %14, i32* %12, align 4, !dbg !3979
  br label %28, !dbg !3980

15:                                               ; preds = %6
  %16 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !3981
  %17 = bitcast i8* %16 to i32*, !dbg !3981
  %18 = load volatile i32, i32* %17, align 4, !dbg !3982
  %19 = add i32 %18, 1, !dbg !3982
  store volatile i32 %19, i32* %17, align 4, !dbg !3982
  br label %28, !dbg !3983

20:                                               ; preds = %6
  %21 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !3984
  %22 = bitcast i8* %21 to i32*, !dbg !3984
  store volatile i32 %1, i32* %22, align 4, !dbg !3985
  br label %28, !dbg !3986

23:                                               ; preds = %6
  %24 = icmp eq i32 %9, 2, !dbg !3987
  br i1 %24, label %53, label %25, !dbg !3989

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !3990
  %27 = bitcast i8* %26 to i32*, !dbg !3990
  store volatile i32 %1, i32* %27, align 4, !dbg !3992
  br label %28, !dbg !3993

28:                                               ; preds = %25, %6, %20, %15, %10
  call void @llvm.dbg.value(metadata i32 1, metadata !3965, metadata !DIExpression()), !dbg !3966
  %29 = icmp eq i32 %9, 1, !dbg !3994
  br i1 %29, label %30, label %53, !dbg !3996

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3997
  %32 = bitcast i8* %31 to %struct.xLIST_ITEM*, !dbg !3997
  %33 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %32) #18, !dbg !3999
  %34 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !4000
  %35 = bitcast i8* %34 to i32*, !dbg !4000
  %36 = load i32, i32* %35, align 4, !dbg !4000
  %37 = shl nuw i32 1, %36, !dbg !4000
  %38 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4000
  %39 = or i32 %38, %37, !dbg !4000
  store volatile i32 %39, i32* @uxTopReadyPriority, align 4, !dbg !4000
  %40 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %36, !dbg !4000
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %40, %struct.xLIST_ITEM* noundef nonnull %32) #18, !dbg !4000
  %41 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !4001
  %42 = bitcast i8* %41 to i8**, !dbg !4001
  %43 = load i8*, i8** %42, align 4, !dbg !4001
  %44 = icmp eq i8* %43, null, !dbg !4001
  br i1 %44, label %46, label %45, !dbg !4003

45:                                               ; preds = %30
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 4099) #18, !dbg !4004
  br label %46, !dbg !4004

46:                                               ; preds = %45, %30
  %47 = load i32, i32* %35, align 4, !dbg !4006
  %48 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4008
  %49 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %48, i32 0, i32 3, !dbg !4009
  %50 = load i32, i32* %49, align 4, !dbg !4009
  %51 = icmp ugt i32 %47, %50, !dbg !4010
  br i1 %51, label %52, label %53, !dbg !4011

52:                                               ; preds = %46
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4012
  tail call void asm sideeffect "dsb", ""() #19, !dbg !4012, !srcloc !4015
  tail call void asm sideeffect "isb", ""() #19, !dbg !4012, !srcloc !4016
  br label %53, !dbg !4017

53:                                               ; preds = %23, %28, %52, %46
  %54 = phi i32 [ 1, %28 ], [ 1, %52 ], [ 1, %46 ], [ 0, %23 ]
  tail call void @vPortExitCritical() #18, !dbg !4018
  ret i32 %54, !dbg !4019
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTaskNotifyFromISR(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef writeonly %3) local_unnamed_addr #2 !dbg !4020 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4024, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 %1, metadata !4025, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 %2, metadata !4026, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32* %3, metadata !4027, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 1, metadata !4030, metadata !DIExpression()), !dbg !4032
  %5 = icmp eq i8* %0, null, !dbg !4033
  br i1 %5, label %6, label %7, !dbg !4035

6:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 4134) #18, !dbg !4036
  br label %7, !dbg !4036

7:                                                ; preds = %6, %4
  tail call void @vPortValidateInterruptPriority() #18, !dbg !4038
  call void @llvm.dbg.value(metadata i8* %0, metadata !4028, metadata !DIExpression()), !dbg !4032
  %8 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !4039, !srcloc !2649
  call void @llvm.dbg.value(metadata i32 undef, metadata !2646, metadata !DIExpression()) #19, !dbg !4041
  call void @llvm.dbg.value(metadata i32 undef, metadata !2647, metadata !DIExpression()) #19, !dbg !4041
  call void @llvm.dbg.value(metadata i32 undef, metadata !4031, metadata !DIExpression()), !dbg !4032
  %9 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !4042
  %10 = bitcast i8* %9 to i32*, !dbg !4042
  %11 = load volatile i32, i32* %10, align 4, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %11, metadata !4029, metadata !DIExpression()), !dbg !4032
  store volatile i32 2, i32* %10, align 4, !dbg !4044
  switch i32 %2, label %30 [
    i32 1, label %12
    i32 2, label %17
    i32 3, label %22
    i32 4, label %25
  ], !dbg !4045

12:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4028, metadata !DIExpression()), !dbg !4032
  %13 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !4046
  %14 = bitcast i8* %13 to i32*, !dbg !4046
  %15 = load volatile i32, i32* %14, align 4, !dbg !4048
  %16 = or i32 %15, %1, !dbg !4048
  store volatile i32 %16, i32* %14, align 4, !dbg !4048
  br label %30, !dbg !4049

17:                                               ; preds = %7
  %18 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !4050
  %19 = bitcast i8* %18 to i32*, !dbg !4050
  %20 = load volatile i32, i32* %19, align 4, !dbg !4051
  %21 = add i32 %20, 1, !dbg !4051
  store volatile i32 %21, i32* %19, align 4, !dbg !4051
  br label %30, !dbg !4052

22:                                               ; preds = %7
  %23 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !4053
  %24 = bitcast i8* %23 to i32*, !dbg !4053
  store volatile i32 %1, i32* %24, align 4, !dbg !4054
  br label %30, !dbg !4055

25:                                               ; preds = %7
  %26 = icmp eq i32 %11, 2, !dbg !4056
  br i1 %26, label %66, label %27, !dbg !4058

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !4059
  %29 = bitcast i8* %28 to i32*, !dbg !4059
  store volatile i32 %1, i32* %29, align 4, !dbg !4061
  br label %30, !dbg !4062

30:                                               ; preds = %27, %7, %22, %17, %12
  call void @llvm.dbg.value(metadata i32 1, metadata !4030, metadata !DIExpression()), !dbg !4032
  %31 = icmp eq i32 %11, 1, !dbg !4063
  br i1 %31, label %32, label %66, !dbg !4065

32:                                               ; preds = %30
  %33 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !4066
  %34 = bitcast i8* %33 to %struct.xLIST_ITEM*, !dbg !4066
  %35 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !4066
  %36 = bitcast i8* %35 to i8**, !dbg !4066
  %37 = load i8*, i8** %36, align 4, !dbg !4066
  %38 = icmp eq i8* %37, null, !dbg !4066
  br i1 %38, label %40, label %39, !dbg !4069

39:                                               ; preds = %32
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 4200) #18, !dbg !4070
  br label %40, !dbg !4070

40:                                               ; preds = %39, %32
  %41 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4072
  %42 = icmp eq i32 %41, 0, !dbg !4074
  br i1 %42, label %43, label %54, !dbg !4075

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4076
  %45 = bitcast i8* %44 to %struct.xLIST_ITEM*, !dbg !4076
  %46 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %45) #18, !dbg !4078
  %47 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !4079
  %48 = bitcast i8* %47 to i32*, !dbg !4079
  %49 = load i32, i32* %48, align 4, !dbg !4079
  %50 = shl nuw i32 1, %49, !dbg !4079
  %51 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4079
  %52 = or i32 %51, %50, !dbg !4079
  store volatile i32 %52, i32* @uxTopReadyPriority, align 4, !dbg !4079
  %53 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %49, !dbg !4079
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %53, %struct.xLIST_ITEM* noundef nonnull %45) #18, !dbg !4079
  br label %55, !dbg !4080

54:                                               ; preds = %40
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %34) #18, !dbg !4081
  br label %55

55:                                               ; preds = %54, %43
  %56 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !4083
  %57 = bitcast i8* %56 to i32*, !dbg !4083
  %58 = load i32, i32* %57, align 4, !dbg !4083
  %59 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4085
  %60 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %59, i32 0, i32 3, !dbg !4086
  %61 = load i32, i32* %60, align 4, !dbg !4086
  %62 = icmp ugt i32 %58, %61, !dbg !4087
  %63 = icmp ne i32* %3, null
  %64 = and i1 %63, %62, !dbg !4088
  br i1 %64, label %65, label %66, !dbg !4088

65:                                               ; preds = %55
  store i32 1, i32* %3, align 4, !dbg !4089
  br label %66, !dbg !4093

66:                                               ; preds = %25, %65, %55, %30
  %67 = phi i32 [ 1, %65 ], [ 1, %55 ], [ 1, %30 ], [ 0, %25 ]
  %68 = extractvalue { i32, i32 } %8, 0, !dbg !4039
  call void @llvm.dbg.value(metadata i32 %68, metadata !2646, metadata !DIExpression()) #19, !dbg !4041
  call void @llvm.dbg.value(metadata i32 %68, metadata !4031, metadata !DIExpression()), !dbg !4032
  call void @llvm.dbg.value(metadata i32 undef, metadata !2654, metadata !DIExpression()) #19, !dbg !4094
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %68) #19, !dbg !4096, !srcloc !2662
  ret i32 %67, !dbg !4097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vTaskNotifyGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #2 !dbg !4098 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4102, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i32* %1, metadata !4103, metadata !DIExpression()), !dbg !4107
  %3 = icmp eq i8* %0, null, !dbg !4108
  br i1 %3, label %4, label %5, !dbg !4110

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 4245) #18, !dbg !4111
  br label %5, !dbg !4111

5:                                                ; preds = %4, %2
  tail call void @vPortValidateInterruptPriority() #18, !dbg !4113
  call void @llvm.dbg.value(metadata i8* %0, metadata !4104, metadata !DIExpression()), !dbg !4107
  %6 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !4114, !srcloc !2649
  call void @llvm.dbg.value(metadata i32 undef, metadata !2646, metadata !DIExpression()) #19, !dbg !4116
  call void @llvm.dbg.value(metadata i32 undef, metadata !2647, metadata !DIExpression()) #19, !dbg !4116
  call void @llvm.dbg.value(metadata i32 undef, metadata !4106, metadata !DIExpression()), !dbg !4107
  %7 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !4117
  %8 = bitcast i8* %7 to i32*, !dbg !4117
  %9 = load volatile i32, i32* %8, align 4, !dbg !4117
  call void @llvm.dbg.value(metadata i32 %9, metadata !4105, metadata !DIExpression()), !dbg !4107
  store volatile i32 2, i32* %8, align 4, !dbg !4119
  %10 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !4120
  %11 = bitcast i8* %10 to i32*, !dbg !4120
  %12 = load volatile i32, i32* %11, align 4, !dbg !4121
  %13 = add i32 %12, 1, !dbg !4121
  store volatile i32 %13, i32* %11, align 4, !dbg !4121
  %14 = icmp eq i32 %9, 1, !dbg !4122
  br i1 %14, label %15, label %49, !dbg !4124

15:                                               ; preds = %5
  %16 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !4125
  %17 = bitcast i8* %16 to %struct.xLIST_ITEM*, !dbg !4125
  %18 = getelementptr inbounds i8, i8* %0, i32 40, !dbg !4125
  %19 = bitcast i8* %18 to i8**, !dbg !4125
  %20 = load i8*, i8** %19, align 4, !dbg !4125
  %21 = icmp eq i8* %20, null, !dbg !4125
  br i1 %21, label %23, label %22, !dbg !4128

22:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i32 0, i32 0), i32 noundef 4281) #18, !dbg !4129
  br label %23, !dbg !4129

23:                                               ; preds = %22, %15
  %24 = load volatile i32, i32* @uxSchedulerSuspended, align 4, !dbg !4131
  %25 = icmp eq i32 %24, 0, !dbg !4133
  br i1 %25, label %26, label %37, !dbg !4134

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4135
  %28 = bitcast i8* %27 to %struct.xLIST_ITEM*, !dbg !4135
  %29 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !4137
  %30 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !4138
  %31 = bitcast i8* %30 to i32*, !dbg !4138
  %32 = load i32, i32* %31, align 4, !dbg !4138
  %33 = shl nuw i32 1, %32, !dbg !4138
  %34 = load volatile i32, i32* @uxTopReadyPriority, align 4, !dbg !4138
  %35 = or i32 %34, %33, !dbg !4138
  store volatile i32 %35, i32* @uxTopReadyPriority, align 4, !dbg !4138
  %36 = getelementptr inbounds [20 x %struct.xLIST], [20 x %struct.xLIST]* @pxReadyTasksLists, i32 0, i32 %32, !dbg !4138
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull %36, %struct.xLIST_ITEM* noundef nonnull %28) #18, !dbg !4138
  br label %38, !dbg !4139

37:                                               ; preds = %23
  tail call void @vListInsertEnd(%struct.xLIST* noundef nonnull @xPendingReadyList, %struct.xLIST_ITEM* noundef nonnull %17) #18, !dbg !4140
  br label %38

38:                                               ; preds = %37, %26
  %39 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !4142
  %40 = bitcast i8* %39 to i32*, !dbg !4142
  %41 = load i32, i32* %40, align 4, !dbg !4142
  %42 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4144
  %43 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %42, i32 0, i32 3, !dbg !4145
  %44 = load i32, i32* %43, align 4, !dbg !4145
  %45 = icmp ugt i32 %41, %44, !dbg !4146
  %46 = icmp ne i32* %1, null
  %47 = and i1 %46, %45, !dbg !4147
  br i1 %47, label %48, label %49, !dbg !4147

48:                                               ; preds = %38
  store i32 1, i32* %1, align 4, !dbg !4148
  br label %49, !dbg !4152

49:                                               ; preds = %48, %38, %5
  %50 = extractvalue { i32, i32 } %6, 0, !dbg !4114
  call void @llvm.dbg.value(metadata i32 %50, metadata !2646, metadata !DIExpression()) #19, !dbg !4116
  call void @llvm.dbg.value(metadata i32 %50, metadata !4106, metadata !DIExpression()), !dbg !4107
  call void @llvm.dbg.value(metadata i32 undef, metadata !2654, metadata !DIExpression()) #19, !dbg !4153
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %50) #19, !dbg !4155, !srcloc !2662
  ret void, !dbg !4156
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uxTaskGetBottomOfStack(i8* noundef readonly %0) local_unnamed_addr #5 !dbg !4157 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4159, metadata !DIExpression()), !dbg !4161
  %2 = icmp eq i8* %0, null, !dbg !4162
  br i1 %2, label %3, label %5, !dbg !4163

3:                                                ; preds = %1
  %4 = load volatile %struct.tskTaskControlBlock*, %struct.tskTaskControlBlock** @pxCurrentTCB, align 4, !dbg !4164
  br label %7, !dbg !4163

5:                                                ; preds = %1
  %6 = bitcast i8* %0 to %struct.tskTaskControlBlock*, !dbg !4165
  br label %7, !dbg !4163

7:                                                ; preds = %5, %3
  %8 = phi %struct.tskTaskControlBlock* [ %4, %3 ], [ %6, %5 ], !dbg !4163
  call void @llvm.dbg.value(metadata %struct.tskTaskControlBlock* %8, metadata !4160, metadata !DIExpression()), !dbg !4161
  %9 = getelementptr inbounds %struct.tskTaskControlBlock, %struct.tskTaskControlBlock* %8, i32 0, i32 4, !dbg !4166
  %10 = load i32*, i32** %9, align 4, !dbg !4166
  %11 = ptrtoint i32* %10 to i32, !dbg !4167
  ret i32 %11, !dbg !4168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialise(%struct.xLIST* noundef %0) local_unnamed_addr #8 !dbg !4169 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !4174, metadata !DIExpression()), !dbg !4175
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !4176
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !4177
  %4 = bitcast %struct.xLIST_ITEM** %3 to %struct.xMINI_LIST_ITEM**, !dbg !4178
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %4, align 4, !dbg !4178
  %5 = getelementptr inbounds %struct.xMINI_LIST_ITEM, %struct.xMINI_LIST_ITEM* %2, i32 0, i32 0, !dbg !4179
  store i32 -1, i32* %5, align 4, !dbg !4180
  %6 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 1, !dbg !4181
  %7 = bitcast %struct.xLIST_ITEM** %6 to %struct.xMINI_LIST_ITEM**, !dbg !4182
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %7, align 4, !dbg !4182
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !4183
  %9 = bitcast %struct.xLIST_ITEM** %8 to %struct.xMINI_LIST_ITEM**, !dbg !4184
  store %struct.xMINI_LIST_ITEM* %2, %struct.xMINI_LIST_ITEM** %9, align 4, !dbg !4184
  %10 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !4185
  store i32 0, i32* %10, align 4, !dbg !4186
  ret void, !dbg !4187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vListInitialiseItem(%struct.xLIST_ITEM* nocapture noundef writeonly %0) local_unnamed_addr #8 !dbg !4188 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !4193, metadata !DIExpression()), !dbg !4194
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !4195
  store i8* null, i8** %2, align 4, !dbg !4196
  ret void, !dbg !4197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @vListInsertEnd(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #10 !dbg !4198 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !4202, metadata !DIExpression()), !dbg !4205
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !4203, metadata !DIExpression()), !dbg !4205
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 1, !dbg !4206
  %4 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %3, align 4, !dbg !4206
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %4, metadata !4204, metadata !DIExpression()), !dbg !4205
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !4207
  store %struct.xLIST_ITEM* %4, %struct.xLIST_ITEM** %5, align 4, !dbg !4208
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %4, i32 0, i32 2, !dbg !4209
  %7 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !4209
  %8 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !4210
  store %struct.xLIST_ITEM* %7, %struct.xLIST_ITEM** %8, align 4, !dbg !4211
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %6, align 4, !dbg !4212
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 1, !dbg !4213
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %10, align 4, !dbg !4214
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %6, align 4, !dbg !4215
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !4216
  %12 = bitcast i8** %11 to %struct.xLIST**, !dbg !4217
  store %struct.xLIST* %0, %struct.xLIST** %12, align 4, !dbg !4217
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !4218
  %14 = load i32, i32* %13, align 4, !dbg !4219
  %15 = add i32 %14, 1, !dbg !4219
  store i32 %15, i32* %13, align 4, !dbg !4219
  ret void, !dbg !4220
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vListInsert(%struct.xLIST* noundef %0, %struct.xLIST_ITEM* noundef %1) local_unnamed_addr #11 !dbg !4221 {
  call void @llvm.dbg.value(metadata %struct.xLIST* %0, metadata !4223, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %1, metadata !4224, metadata !DIExpression()), !dbg !4227
  %3 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 0, !dbg !4228
  %4 = load i32, i32* %3, align 4, !dbg !4228
  call void @llvm.dbg.value(metadata i32 %4, metadata !4226, metadata !DIExpression()), !dbg !4227
  %5 = icmp eq i32 %4, -1, !dbg !4229
  br i1 %5, label %6, label %11, !dbg !4231

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, i32 2, !dbg !4232
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !4232
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %8, metadata !4225, metadata !DIExpression()), !dbg !4227
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 1
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %9, align 4, !dbg !4234
  br label %21, !dbg !4235

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 2, !dbg !4236
  %13 = bitcast %struct.xMINI_LIST_ITEM* %12 to %struct.xLIST_ITEM*, !dbg !4239
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %13, metadata !4225, metadata !DIExpression()), !dbg !4227
  br label %14, !dbg !4240

14:                                               ; preds = %14, %11
  %15 = phi %struct.xLIST_ITEM* [ %13, %11 ], [ %17, %14 ], !dbg !4241
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %15, metadata !4225, metadata !DIExpression()), !dbg !4227
  %16 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %15, i32 0, i32 1, !dbg !4242
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %16, align 4, !dbg !4242
  %18 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %17, i32 0, i32 0, !dbg !4244
  %19 = load i32, i32* %18, align 4, !dbg !4244
  %20 = icmp ugt i32 %19, %4, !dbg !4245
  br i1 %20, label %21, label %14, !dbg !4246, !llvm.loop !4247

21:                                               ; preds = %14, %6
  %22 = phi %struct.xLIST_ITEM* [ %10, %6 ], [ %17, %14 ], !dbg !4234
  %23 = phi %struct.xLIST_ITEM* [ %8, %6 ], [ %15, %14 ], !dbg !4249
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %23, metadata !4225, metadata !DIExpression()), !dbg !4227
  %24 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %23, i32 0, i32 1, !dbg !4234
  %25 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 1, !dbg !4250
  store %struct.xLIST_ITEM* %22, %struct.xLIST_ITEM** %25, align 4, !dbg !4251
  %26 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %22, i32 0, i32 2, !dbg !4252
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %26, align 4, !dbg !4253
  %27 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 2, !dbg !4254
  store %struct.xLIST_ITEM* %23, %struct.xLIST_ITEM** %27, align 4, !dbg !4255
  store %struct.xLIST_ITEM* %1, %struct.xLIST_ITEM** %24, align 4, !dbg !4256
  %28 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %1, i32 0, i32 4, !dbg !4257
  %29 = bitcast i8** %28 to %struct.xLIST**, !dbg !4258
  store %struct.xLIST* %0, %struct.xLIST** %29, align 4, !dbg !4258
  %30 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %0, i32 0, i32 0, !dbg !4259
  %31 = load i32, i32* %30, align 4, !dbg !4260
  %32 = add i32 %31, 1, !dbg !4260
  store i32 %32, i32* %30, align 4, !dbg !4260
  ret void, !dbg !4261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @uxListRemove(%struct.xLIST_ITEM* noundef %0) local_unnamed_addr #10 !dbg !4262 {
  call void @llvm.dbg.value(metadata %struct.xLIST_ITEM* %0, metadata !4266, metadata !DIExpression()), !dbg !4268
  %2 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 4, !dbg !4269
  %3 = bitcast i8** %2 to %struct.xLIST**, !dbg !4269
  %4 = load %struct.xLIST*, %struct.xLIST** %3, align 4, !dbg !4269
  call void @llvm.dbg.value(metadata %struct.xLIST* %4, metadata !4267, metadata !DIExpression()), !dbg !4268
  %5 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 2, !dbg !4270
  %6 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !4270
  %7 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %0, i32 0, i32 1, !dbg !4271
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !4271
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 2, !dbg !4272
  store %struct.xLIST_ITEM* %6, %struct.xLIST_ITEM** %9, align 4, !dbg !4273
  %10 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !4274
  %11 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !4275
  %12 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %11, i32 0, i32 1, !dbg !4276
  store %struct.xLIST_ITEM* %10, %struct.xLIST_ITEM** %12, align 4, !dbg !4277
  %13 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 1, !dbg !4278
  %14 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %13, align 4, !dbg !4278
  %15 = icmp eq %struct.xLIST_ITEM* %14, %0, !dbg !4280
  br i1 %15, label %16, label %18, !dbg !4281

16:                                               ; preds = %1
  %17 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %5, align 4, !dbg !4282
  store %struct.xLIST_ITEM* %17, %struct.xLIST_ITEM** %13, align 4, !dbg !4284
  br label %18, !dbg !4285

18:                                               ; preds = %1, %16
  store i8* null, i8** %2, align 4, !dbg !4286
  %19 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %4, i32 0, i32 0, !dbg !4287
  %20 = load i32, i32* %19, align 4, !dbg !4288
  %21 = add i32 %20, -1, !dbg !4288
  store i32 %21, i32* %19, align 4, !dbg !4288
  ret i32 %21, !dbg !4289
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReset(i8* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4290 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4294, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i32 %1, metadata !4295, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.value(metadata i8* %0, metadata !4296, metadata !DIExpression()), !dbg !4298
  %3 = icmp eq i8* %0, null, !dbg !4299
  br i1 %3, label %4, label %5, !dbg !4301

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 264) #18, !dbg !4302
  br label %5, !dbg !4302

5:                                                ; preds = %4, %2
  tail call void @vPortEnterCritical() #18, !dbg !4304
  %6 = bitcast i8* %0 to i8**, !dbg !4305
  %7 = load i8*, i8** %6, align 4, !dbg !4305
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !4307
  %9 = bitcast i8* %8 to i32*, !dbg !4307
  %10 = load i32, i32* %9, align 4, !dbg !4307
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !4308
  %12 = bitcast i8* %11 to i32*, !dbg !4308
  %13 = load i32, i32* %12, align 4, !dbg !4308
  %14 = mul i32 %13, %10, !dbg !4309
  %15 = getelementptr inbounds i8, i8* %7, i32 %14, !dbg !4310
  %16 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4311
  %17 = bitcast i8* %16 to i8**, !dbg !4311
  store i8* %15, i8** %17, align 4, !dbg !4312
  %18 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !4313
  %19 = bitcast i8* %18 to i32*, !dbg !4313
  store volatile i32 0, i32* %19, align 4, !dbg !4314
  %20 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !4315
  %21 = bitcast i8* %20 to i8**, !dbg !4315
  store i8* %7, i8** %21, align 4, !dbg !4316
  %22 = add i32 %10, -1, !dbg !4317
  %23 = mul i32 %22, %13, !dbg !4318
  %24 = getelementptr inbounds i8, i8* %7, i32 %23, !dbg !4319
  %25 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4320
  %26 = bitcast i8* %25 to i8**, !dbg !4321
  store i8* %24, i8** %26, align 4, !dbg !4322
  %27 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !4323
  %28 = bitcast i8* %27 to i32*, !dbg !4323
  store volatile i32 -1, i32* %28, align 4, !dbg !4324
  %29 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !4325
  %30 = bitcast i8* %29 to i32*, !dbg !4325
  store volatile i32 -1, i32* %30, align 4, !dbg !4326
  %31 = icmp eq i32 %1, 0, !dbg !4327
  %32 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !4329
  br i1 %31, label %33, label %42, !dbg !4330

33:                                               ; preds = %5
  %34 = bitcast i8* %32 to i32*, !dbg !4331
  %35 = load i32, i32* %34, align 4, !dbg !4331
  %36 = icmp eq i32 %35, 0, !dbg !4331
  br i1 %36, label %46, label %37, !dbg !4334

37:                                               ; preds = %33
  %38 = bitcast i8* %32 to %struct.xLIST*, !dbg !4331
  %39 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %38) #18, !dbg !4335
  %40 = icmp eq i32 %39, 1, !dbg !4338
  br i1 %40, label %41, label %46, !dbg !4339

41:                                               ; preds = %37
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4340
  tail call void asm sideeffect "dsb", ""() #19, !dbg !4340, !srcloc !4343
  tail call void asm sideeffect "isb", ""() #19, !dbg !4340, !srcloc !4344
  br label %46, !dbg !4345

42:                                               ; preds = %5
  %43 = bitcast i8* %32 to %struct.xLIST*, !dbg !4346
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %43) #18, !dbg !4348
  %44 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !4349
  %45 = bitcast i8* %44 to %struct.xLIST*, !dbg !4349
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %45) #18, !dbg !4350
  br label %46

46:                                               ; preds = %37, %41, %33, %42
  tail call void @vPortExitCritical() #18, !dbg !4351
  ret i32 1, !dbg !4352
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #2 !dbg !4353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4357, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i32 %1, metadata !4358, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i8 %2, metadata !4359, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i8* null, metadata !4362, metadata !DIExpression()), !dbg !4364
  %4 = icmp eq i32 %0, 0, !dbg !4365
  br i1 %4, label %5, label %6, !dbg !4367

5:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 324) #18, !dbg !4368
  br label %6, !dbg !4368

6:                                                ; preds = %5, %3
  %7 = icmp eq i32 %1, 0, !dbg !4370
  %8 = mul i32 %1, %0, !dbg !4372
  %9 = add i32 %8, 85, !dbg !4372
  %10 = select i1 %7, i32 84, i32 %9, !dbg !4372
  call void @llvm.dbg.value(metadata i32 undef, metadata !4361, metadata !DIExpression()), !dbg !4364
  %11 = tail call i8* @pvPortMalloc(i32 noundef %10) #18, !dbg !4373
  call void @llvm.dbg.value(metadata i8* %11, metadata !4363, metadata !DIExpression()), !dbg !4364
  %12 = icmp eq i8* %11, null, !dbg !4374
  br i1 %12, label %23, label %13, !dbg !4376

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !4360, metadata !DIExpression()), !dbg !4364
  %14 = select i1 %7, i32 0, i32 84, !dbg !4377
  %15 = getelementptr i8, i8* %11, i32 %14, !dbg !4377
  %16 = bitcast i8* %11 to i8**, !dbg !4379
  store i8* %15, i8** %16, align 4, !dbg !4379
  %17 = getelementptr inbounds i8, i8* %11, i32 60, !dbg !4381
  %18 = bitcast i8* %17 to i32*, !dbg !4381
  store i32 %0, i32* %18, align 4, !dbg !4382
  %19 = getelementptr inbounds i8, i8* %11, i32 64, !dbg !4383
  %20 = bitcast i8* %19 to i32*, !dbg !4383
  store i32 %1, i32* %20, align 4, !dbg !4384
  %21 = tail call i32 @xQueueGenericReset(i8* noundef nonnull %11, i32 noundef 1) #17, !dbg !4385
  %22 = getelementptr inbounds i8, i8* %11, i32 80, !dbg !4386
  store i8 %2, i8* %22, align 4, !dbg !4388
  call void @llvm.dbg.value(metadata i8* %11, metadata !4362, metadata !DIExpression()), !dbg !4364
  br label %24, !dbg !4389

23:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8* %11, metadata !4362, metadata !DIExpression()), !dbg !4364
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 386) #18, !dbg !4390
  br label %24, !dbg !4390

24:                                               ; preds = %13, %23
  ret i8* %11, !dbg !4393
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateMutex(i8 noundef zeroext %0) local_unnamed_addr #2 !dbg !4394 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4398, metadata !DIExpression()), !dbg !4400
  %2 = tail call i8* @pvPortMalloc(i32 noundef 84) #18, !dbg !4401
  call void @llvm.dbg.value(metadata i8* %2, metadata !4399, metadata !DIExpression()), !dbg !4400
  %3 = icmp eq i8* %2, null, !dbg !4402
  br i1 %3, label %28, label %4, !dbg !4402

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !4399, metadata !DIExpression()), !dbg !4400
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !4403
  %6 = bitcast i8* %5 to i8**, !dbg !4403
  store i8* null, i8** %6, align 4, !dbg !4406
  %7 = bitcast i8* %2 to i8**, !dbg !4407
  store i8* null, i8** %7, align 4, !dbg !4408
  %8 = getelementptr inbounds i8, i8* %2, i32 8, !dbg !4409
  %9 = bitcast i8* %8 to i8**, !dbg !4409
  store i8* null, i8** %9, align 4, !dbg !4410
  %10 = getelementptr inbounds i8, i8* %2, i32 12, !dbg !4411
  %11 = bitcast i8* %10 to i8**, !dbg !4412
  store i8* null, i8** %11, align 4, !dbg !4413
  %12 = getelementptr inbounds i8, i8* %2, i32 56, !dbg !4414
  %13 = bitcast i8* %12 to i32*, !dbg !4414
  store volatile i32 0, i32* %13, align 4, !dbg !4415
  %14 = getelementptr inbounds i8, i8* %2, i32 60, !dbg !4416
  %15 = bitcast i8* %14 to i32*, !dbg !4416
  store i32 1, i32* %15, align 4, !dbg !4417
  %16 = getelementptr inbounds i8, i8* %2, i32 64, !dbg !4418
  %17 = bitcast i8* %16 to i32*, !dbg !4418
  store i32 0, i32* %17, align 4, !dbg !4419
  %18 = getelementptr inbounds i8, i8* %2, i32 68, !dbg !4420
  %19 = bitcast i8* %18 to i32*, !dbg !4420
  store volatile i32 -1, i32* %19, align 4, !dbg !4421
  %20 = getelementptr inbounds i8, i8* %2, i32 72, !dbg !4422
  %21 = bitcast i8* %20 to i32*, !dbg !4422
  store volatile i32 -1, i32* %21, align 4, !dbg !4423
  %22 = getelementptr inbounds i8, i8* %2, i32 80, !dbg !4424
  store i8 %0, i8* %22, align 4, !dbg !4426
  %23 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !4427
  %24 = bitcast i8* %23 to %struct.xLIST*, !dbg !4427
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %24) #18, !dbg !4428
  %25 = getelementptr inbounds i8, i8* %2, i32 36, !dbg !4429
  %26 = bitcast i8* %25 to %struct.xLIST*, !dbg !4429
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull %26) #18, !dbg !4430
  %27 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %2, i8* noundef null, i32 noundef 0, i32 noundef 0) #17, !dbg !4431
  br label %29, !dbg !4432

28:                                               ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4.29, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 450) #18, !dbg !4433
  br label %29, !dbg !4433

29:                                               ; preds = %4, %28
  ret i8* %2, !dbg !4436
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSend(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !4437 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.xTIME_OUT, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4443, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i8* %1, metadata !4444, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i32 %2, metadata !4445, metadata !DIExpression()), !dbg !4456
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !4446, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i32 0, metadata !4447, metadata !DIExpression()), !dbg !4456
  %7 = bitcast %struct.xTIME_OUT* %6 to i8*, !dbg !4457
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19, !dbg !4457
  call void @llvm.dbg.declare(metadata %struct.xTIME_OUT* %6, metadata !4449, metadata !DIExpression()), !dbg !4458
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !4459
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !4455, metadata !DIExpression()), !dbg !4456
  %9 = icmp eq i8* %0, null, !dbg !4460
  br i1 %9, label %10, label %11, !dbg !4462

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 619) #18, !dbg !4463
  br label %11, !dbg !4463

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !4465
  br i1 %12, label %13, label %19, !dbg !4465

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !4465
  %15 = bitcast i8* %14 to i32*, !dbg !4465
  %16 = load i32, i32* %15, align 4, !dbg !4465
  %17 = icmp eq i32 %16, 0, !dbg !4465
  br i1 %17, label %19, label %18, !dbg !4467

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 620) #18, !dbg !4468
  br label %19, !dbg !4468

19:                                               ; preds = %11, %18, %13
  %20 = icmp eq i32 %3, 2, !dbg !4470
  br i1 %20, label %21, label %27, !dbg !4470

21:                                               ; preds = %19
  %22 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !4470
  %23 = bitcast i8* %22 to i32*, !dbg !4470
  %24 = load i32, i32* %23, align 4, !dbg !4470
  %25 = icmp eq i32 %24, 1, !dbg !4470
  br i1 %25, label %27, label %26, !dbg !4472

26:                                               ; preds = %21
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 621) #18, !dbg !4473
  br label %27, !dbg !4473

27:                                               ; preds = %19, %26, %21
  %28 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !4475
  %29 = icmp eq i32 %28, 0, !dbg !4475
  call void @llvm.dbg.value(metadata i32 %2, metadata !4445, metadata !DIExpression()), !dbg !4456
  %30 = icmp ne i32 %2, 0, !dbg !4475
  %31 = and i1 %29, %30, !dbg !4475
  br i1 %31, label %32, label %33, !dbg !4478

32:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.32, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 624) #18, !dbg !4479
  br label %33, !dbg !4479

33:                                               ; preds = %32, %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4456
  call void @vPortEnterCritical() #18, !dbg !4481
  %34 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !4485
  %35 = bitcast i8* %34 to i32*, !dbg !4485
  %36 = load volatile i32, i32* %35, align 4, !dbg !4485
  %37 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !4488
  %38 = bitcast i8* %37 to i32*, !dbg !4488
  %39 = load i32, i32* %38, align 4, !dbg !4488
  %40 = icmp ult i32 %36, %39, !dbg !4489
  %41 = or i1 %20, %40, !dbg !4490
  br i1 %41, label %50, label %42, !dbg !4490

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %0, i32 68
  %44 = bitcast i8* %43 to i32*
  %45 = getelementptr inbounds i8, i8* %0, i32 72
  %46 = bitcast i8* %45 to i32*
  %47 = getelementptr inbounds i8, i8* %0, i32 16
  %48 = bitcast i8* %47 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !4445, metadata !DIExpression()), !dbg !4456
  %49 = icmp eq i32 %2, 0, !dbg !4491
  br i1 %49, label %65, label %66, !dbg !4494

50:                                               ; preds = %90, %33
  %51 = call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1, i32 noundef %3) #17, !dbg !4495
  call void @llvm.dbg.value(metadata i32 %51, metadata !4448, metadata !DIExpression()), !dbg !4456
  %52 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !4497
  %53 = bitcast i8* %52 to i32*, !dbg !4497
  %54 = load i32, i32* %53, align 4, !dbg !4497
  %55 = icmp eq i32 %54, 0, !dbg !4497
  br i1 %55, label %61, label %56, !dbg !4500

56:                                               ; preds = %50
  %57 = bitcast i8* %52 to %struct.xLIST*, !dbg !4497
  %58 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %57) #18, !dbg !4501
  %59 = icmp eq i32 %58, 1, !dbg !4504
  br i1 %59, label %60, label %64, !dbg !4505

60:                                               ; preds = %56
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4506
  call void asm sideeffect "dsb", ""() #19, !dbg !4506, !srcloc !4509
  call void asm sideeffect "isb", ""() #19, !dbg !4506, !srcloc !4510
  br label %64, !dbg !4511

61:                                               ; preds = %50
  %62 = icmp eq i32 %51, 0, !dbg !4512
  br i1 %62, label %64, label %63, !dbg !4514

63:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4515
  call void asm sideeffect "dsb", ""() #19, !dbg !4515, !srcloc !4518
  call void asm sideeffect "isb", ""() #19, !dbg !4515, !srcloc !4519
  br label %64, !dbg !4520

64:                                               ; preds = %63, %61, %60, %56
  call void @vPortExitCritical() #18, !dbg !4521
  br label %97, !dbg !4522

65:                                               ; preds = %94, %42
  call void @vPortExitCritical() #18, !dbg !4523
  br label %97, !dbg !4525

66:                                               ; preds = %42
  call void @vTaskSetTimeOutState(%struct.xTIME_OUT* noundef nonnull %6) #18, !dbg !4526
  call void @llvm.dbg.value(metadata i32 1, metadata !4447, metadata !DIExpression()), !dbg !4456
  br label %67, !dbg !4529

67:                                               ; preds = %94, %66
  call void @llvm.dbg.value(metadata i32 1, metadata !4447, metadata !DIExpression()), !dbg !4456
  call void @vPortExitCritical() #18, !dbg !4530
  call void @vTaskSuspendAll() #18, !dbg !4531
  call void @vPortEnterCritical() #18, !dbg !4532
  %68 = load volatile i32, i32* %44, align 4, !dbg !4533
  %69 = icmp eq i32 %68, -1, !dbg !4533
  br i1 %69, label %70, label %71, !dbg !4536

70:                                               ; preds = %67
  store volatile i32 0, i32* %44, align 4, !dbg !4537
  br label %71, !dbg !4537

71:                                               ; preds = %70, %67
  %72 = load volatile i32, i32* %46, align 4, !dbg !4539
  %73 = icmp eq i32 %72, -1, !dbg !4539
  br i1 %73, label %74, label %75, !dbg !4536

74:                                               ; preds = %71
  store volatile i32 0, i32* %46, align 4, !dbg !4541
  br label %75, !dbg !4541

75:                                               ; preds = %74, %71
  call void @vPortExitCritical() #18, !dbg !4532
  call void @llvm.dbg.value(metadata i32* %5, metadata !4445, metadata !DIExpression(DW_OP_deref)), !dbg !4456
  %76 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* noundef nonnull %6, i32* noundef nonnull %5) #18, !dbg !4543
  %77 = icmp eq i32 %76, 0, !dbg !4545
  br i1 %77, label %78, label %88, !dbg !4546

78:                                               ; preds = %75
  %79 = call fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef nonnull %8) #17, !dbg !4547
  %80 = icmp eq i32 %79, 0, !dbg !4550
  br i1 %80, label %86, label %81, !dbg !4551

81:                                               ; preds = %78
  %82 = load i32, i32* %5, align 4, !dbg !4552
  call void @llvm.dbg.value(metadata i32 %82, metadata !4445, metadata !DIExpression()), !dbg !4456
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %48, i32 noundef %82) #18, !dbg !4554
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #17, !dbg !4555
  %83 = call i32 @xTaskResumeAll() #18, !dbg !4556
  %84 = icmp eq i32 %83, 0, !dbg !4558
  br i1 %84, label %85, label %90, !dbg !4559

85:                                               ; preds = %81
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4560
  call void asm sideeffect "dsb", ""() #19, !dbg !4560, !srcloc !4563
  call void asm sideeffect "isb", ""() #19, !dbg !4560, !srcloc !4564
  br label %90, !dbg !4565

86:                                               ; preds = %78
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #17, !dbg !4566
  %87 = call i32 @xTaskResumeAll() #18, !dbg !4568
  br label %90

88:                                               ; preds = %75
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #17, !dbg !4569
  %89 = call i32 @xTaskResumeAll() #18, !dbg !4571
  br label %97, !dbg !4572

90:                                               ; preds = %86, %85, %81
  call void @llvm.dbg.value(metadata i32 undef, metadata !4447, metadata !DIExpression()), !dbg !4456
  call void @vPortEnterCritical() #18, !dbg !4481
  %91 = load volatile i32, i32* %35, align 4, !dbg !4485
  %92 = load i32, i32* %38, align 4, !dbg !4488
  %93 = icmp ult i32 %91, %92, !dbg !4489
  br i1 %93, label %50, label %94, !dbg !4490, !llvm.loop !4573

94:                                               ; preds = %90
  %95 = load i32, i32* %5, align 4, !dbg !4576
  call void @llvm.dbg.value(metadata i32 %95, metadata !4445, metadata !DIExpression()), !dbg !4456
  %96 = icmp eq i32 %95, 0, !dbg !4491
  br i1 %96, label %65, label %67, !dbg !4494

97:                                               ; preds = %88, %65, %64
  %98 = phi i32 [ 1, %64 ], [ 0, %65 ], [ 0, %88 ], !dbg !4577
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19, !dbg !4578
  ret i32 %98, !dbg !4578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #2 !dbg !4579 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !4583, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i8* %1, metadata !4584, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i32 %2, metadata !4585, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.value(metadata i32 0, metadata !4586, metadata !DIExpression()), !dbg !4587
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !4588
  %5 = load i32, i32* %4, align 4, !dbg !4588
  %6 = icmp eq i32 %5, 0, !dbg !4590
  br i1 %6, label %7, label %15, !dbg !4591

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !4592
  %9 = load i8*, i8** %8, align 4, !dbg !4592
  %10 = icmp eq i8* %9, null, !dbg !4596
  br i1 %10, label %11, label %54, !dbg !4597

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !4598
  %13 = load i8*, i8** %12, align 4, !dbg !4598
  %14 = tail call i32 @xTaskPriorityDisinherit(i8* noundef %13) #18, !dbg !4600
  call void @llvm.dbg.value(metadata i32 %14, metadata !4586, metadata !DIExpression()), !dbg !4587
  store i8* null, i8** %12, align 4, !dbg !4601
  br label %54, !dbg !4602

15:                                               ; preds = %3
  %16 = icmp eq i32 %2, 0, !dbg !4603
  br i1 %16, label %17, label %30, !dbg !4605

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 2, !dbg !4606
  %19 = load i8*, i8** %18, align 4, !dbg !4606
  %20 = tail call i8* @memcpy(i8* noundef %19, i8* noundef %1, i32 noundef %5) #18, !dbg !4608
  %21 = load i32, i32* %4, align 4, !dbg !4609
  %22 = load i8*, i8** %18, align 4, !dbg !4610
  %23 = getelementptr inbounds i8, i8* %22, i32 %21, !dbg !4610
  store i8* %23, i8** %18, align 4, !dbg !4610
  %24 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !4611
  %25 = load i8*, i8** %24, align 4, !dbg !4611
  %26 = icmp ult i8* %23, %25, !dbg !4613
  br i1 %26, label %54, label %27, !dbg !4614

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !4615
  %29 = load i8*, i8** %28, align 4, !dbg !4615
  store i8* %29, i8** %18, align 4, !dbg !4617
  br label %54, !dbg !4618

30:                                               ; preds = %15
  %31 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !4619
  %32 = load i8*, i8** %31, align 4, !dbg !4619
  %33 = tail call i8* @memcpy(i8* noundef %32, i8* noundef %1, i32 noundef %5) #18, !dbg !4621
  %34 = load i32, i32* %4, align 4, !dbg !4622
  %35 = load i8*, i8** %31, align 4, !dbg !4623
  %36 = sub i32 0, %34, !dbg !4623
  %37 = getelementptr inbounds i8, i8* %35, i32 %36, !dbg !4623
  store i8* %37, i8** %31, align 4, !dbg !4623
  %38 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !4624
  %39 = load i8*, i8** %38, align 4, !dbg !4624
  %40 = icmp ult i8* %37, %39, !dbg !4626
  br i1 %40, label %41, label %45, !dbg !4627

41:                                               ; preds = %30
  %42 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !4628
  %43 = load i8*, i8** %42, align 4, !dbg !4628
  %44 = getelementptr inbounds i8, i8* %43, i32 %36, !dbg !4630
  store i8* %44, i8** %31, align 4, !dbg !4631
  br label %45, !dbg !4632

45:                                               ; preds = %30, %41
  %46 = icmp eq i32 %2, 2, !dbg !4633
  br i1 %46, label %47, label %54, !dbg !4635

47:                                               ; preds = %45
  %48 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !4636
  %49 = load volatile i32, i32* %48, align 4, !dbg !4636
  %50 = icmp eq i32 %49, 0, !dbg !4639
  br i1 %50, label %54, label %51, !dbg !4640

51:                                               ; preds = %47
  %52 = load volatile i32, i32* %48, align 4, !dbg !4641
  %53 = add i32 %52, -1, !dbg !4641
  store volatile i32 %53, i32* %48, align 4, !dbg !4641
  br label %54, !dbg !4643

54:                                               ; preds = %17, %27, %45, %51, %47, %11, %7
  %55 = phi i32 [ %14, %11 ], [ 0, %7 ], [ 0, %27 ], [ 0, %17 ], [ 0, %51 ], [ 0, %47 ], [ 0, %45 ], !dbg !4587
  call void @llvm.dbg.value(metadata i32 %55, metadata !4586, metadata !DIExpression()), !dbg !4587
  %56 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !4644
  %57 = load volatile i32, i32* %56, align 4, !dbg !4645
  %58 = add i32 %57, 1, !dbg !4645
  store volatile i32 %58, i32* %56, align 4, !dbg !4645
  ret i32 %55, !dbg !4646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueFull(%struct.QueueDefinition* noundef %0) unnamed_addr #2 !dbg !4647 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !4653, metadata !DIExpression()), !dbg !4655
  tail call void @vPortEnterCritical() #18, !dbg !4656
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !4657
  %3 = load volatile i32, i32* %2, align 4, !dbg !4657
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 7, !dbg !4660
  %5 = load i32, i32* %4, align 4, !dbg !4660
  %6 = icmp eq i32 %3, %5, !dbg !4661
  %7 = zext i1 %6 to i32
  call void @llvm.dbg.value(metadata i32 %7, metadata !4654, metadata !DIExpression()), !dbg !4655
  tail call void @vPortExitCritical() #18, !dbg !4662
  ret i32 %7, !dbg !4663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %0) unnamed_addr #2 !dbg !4664 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !4668, metadata !DIExpression()), !dbg !4669
  tail call void @vPortEnterCritical() #18, !dbg !4670
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 5, !dbg !4671
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !4671
  %4 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 10
  %5 = load volatile i32, i32* %4, align 4, !dbg !4676
  %6 = icmp sgt i32 %5, 0, !dbg !4677
  br i1 %6, label %7, label %19, !dbg !4678

7:                                                ; preds = %1, %14
  %8 = load i32, i32* %3, align 4, !dbg !4671
  %9 = icmp eq i32 %8, 0, !dbg !4671
  br i1 %9, label %19, label %10, !dbg !4679

10:                                               ; preds = %7
  %11 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %2) #18, !dbg !4680
  %12 = icmp eq i32 %11, 0, !dbg !4683
  br i1 %12, label %14, label %13, !dbg !4684

13:                                               ; preds = %10
  tail call void @vTaskMissedYield() #18, !dbg !4685
  br label %14, !dbg !4687

14:                                               ; preds = %13, %10
  %15 = load volatile i32, i32* %4, align 4, !dbg !4688
  %16 = add nsw i32 %15, -1, !dbg !4688
  store volatile i32 %16, i32* %4, align 4, !dbg !4688
  %17 = load volatile i32, i32* %4, align 4, !dbg !4676
  %18 = icmp sgt i32 %17, 0, !dbg !4677
  br i1 %18, label %7, label %19, !dbg !4678, !llvm.loop !4689

19:                                               ; preds = %14, %7, %1
  store volatile i32 -1, i32* %4, align 4, !dbg !4691
  tail call void @vPortExitCritical() #18, !dbg !4692
  tail call void @vPortEnterCritical() #18, !dbg !4693
  %20 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 4, !dbg !4694
  %21 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %20, i32 0, i32 0, !dbg !4694
  %22 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 9
  %23 = load volatile i32, i32* %22, align 4, !dbg !4698
  %24 = icmp sgt i32 %23, 0, !dbg !4699
  br i1 %24, label %25, label %37, !dbg !4700

25:                                               ; preds = %19, %32
  %26 = load i32, i32* %21, align 4, !dbg !4694
  %27 = icmp eq i32 %26, 0, !dbg !4694
  br i1 %27, label %37, label %28, !dbg !4701

28:                                               ; preds = %25
  %29 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %20) #18, !dbg !4702
  %30 = icmp eq i32 %29, 0, !dbg !4705
  br i1 %30, label %32, label %31, !dbg !4706

31:                                               ; preds = %28
  tail call void @vTaskMissedYield() #18, !dbg !4707
  br label %32, !dbg !4709

32:                                               ; preds = %28, %31
  %33 = load volatile i32, i32* %22, align 4, !dbg !4710
  %34 = add nsw i32 %33, -1, !dbg !4710
  store volatile i32 %34, i32* %22, align 4, !dbg !4710
  %35 = load volatile i32, i32* %22, align 4, !dbg !4698
  %36 = icmp sgt i32 %35, 0, !dbg !4699
  br i1 %36, label %25, label %37, !dbg !4700, !llvm.loop !4711

37:                                               ; preds = %32, %25, %19
  store volatile i32 -1, i32* %22, align 4, !dbg !4713
  tail call void @vPortExitCritical() #18, !dbg !4714
  ret void, !dbg !4715
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveMutexRecursive(i8* noundef %0) local_unnamed_addr #2 !dbg !4716 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4720, metadata !DIExpression()), !dbg !4723
  call void @llvm.dbg.value(metadata i8* %0, metadata !4722, metadata !DIExpression()), !dbg !4723
  %2 = icmp eq i8* %0, null, !dbg !4724
  br i1 %2, label %3, label %4, !dbg !4726

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 494) #18, !dbg !4727
  br label %4, !dbg !4727

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4729
  %6 = bitcast i8* %5 to i8**, !dbg !4729
  %7 = load i8*, i8** %6, align 4, !dbg !4729
  %8 = tail call i8* @xTaskGetCurrentTaskHandle() #18, !dbg !4731
  %9 = icmp eq i8* %7, %8, !dbg !4732
  br i1 %9, label %10, label %18, !dbg !4733

10:                                               ; preds = %4
  %11 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4734
  %12 = bitcast i8* %11 to i32*, !dbg !4736
  %13 = load i32, i32* %12, align 4, !dbg !4737
  %14 = add i32 %13, -1, !dbg !4737
  store i32 %14, i32* %12, align 4, !dbg !4737
  %15 = icmp eq i32 %14, 0, !dbg !4738
  br i1 %15, label %16, label %18, !dbg !4740

16:                                               ; preds = %10
  %17 = tail call i32 @xQueueGenericSend(i8* noundef nonnull %0, i8* noundef null, i32 noundef 0, i32 noundef 0) #17, !dbg !4741
  br label %18, !dbg !4743

18:                                               ; preds = %4, %16, %10
  %19 = phi i32 [ 1, %10 ], [ 1, %16 ], [ 0, %4 ], !dbg !4744
  call void @llvm.dbg.value(metadata i32 %19, metadata !4721, metadata !DIExpression()), !dbg !4723
  ret i32 %19, !dbg !4745
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueTakeMutexRecursive(i8* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4746 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4750, metadata !DIExpression()), !dbg !4754
  call void @llvm.dbg.value(metadata i32 %1, metadata !4751, metadata !DIExpression()), !dbg !4754
  call void @llvm.dbg.value(metadata i8* %0, metadata !4753, metadata !DIExpression()), !dbg !4754
  %3 = icmp eq i8* %0, null, !dbg !4755
  br i1 %3, label %4, label %5, !dbg !4757

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 549) #18, !dbg !4758
  br label %5, !dbg !4758

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4760
  %7 = bitcast i8* %6 to i8**, !dbg !4760
  %8 = load i8*, i8** %7, align 4, !dbg !4760
  %9 = tail call i8* @xTaskGetCurrentTaskHandle() #18, !dbg !4762
  %10 = icmp eq i8* %8, %9, !dbg !4763
  br i1 %10, label %14, label %11, !dbg !4764

11:                                               ; preds = %5
  %12 = tail call i32 @xQueueGenericReceive(i8* noundef nonnull %0, i8* noundef null, i32 noundef %1, i32 noundef 0) #17, !dbg !4765
  call void @llvm.dbg.value(metadata i32 %12, metadata !4752, metadata !DIExpression()), !dbg !4754
  %13 = icmp eq i32 %12, 1, !dbg !4767
  br i1 %13, label %14, label %19, !dbg !4769

14:                                               ; preds = %11, %5
  %15 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4770
  %16 = bitcast i8* %15 to i32*, !dbg !4770
  %17 = load i32, i32* %16, align 4, !dbg !4770
  %18 = add i32 %17, 1, !dbg !4770
  store i32 %18, i32* %16, align 4, !dbg !4770
  br label %19, !dbg !4771

19:                                               ; preds = %14, %11
  %20 = phi i32 [ %12, %11 ], [ 1, %14 ], !dbg !4770
  call void @llvm.dbg.value(metadata i32 %20, metadata !4752, metadata !DIExpression()), !dbg !4754
  ret i32 %20, !dbg !4771
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericReceive(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !4772 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.xTIME_OUT, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4776, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i8* %1, metadata !4777, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i32 %2, metadata !4778, metadata !DIExpression()), !dbg !4784
  store i32 %2, i32* %5, align 4
  call void @llvm.dbg.value(metadata i32 %3, metadata !4779, metadata !DIExpression()), !dbg !4784
  call void @llvm.dbg.value(metadata i32 0, metadata !4780, metadata !DIExpression()), !dbg !4784
  %7 = bitcast %struct.xTIME_OUT* %6 to i8*, !dbg !4785
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19, !dbg !4785
  call void @llvm.dbg.declare(metadata %struct.xTIME_OUT* %6, metadata !4781, metadata !DIExpression()), !dbg !4786
  %8 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !4787
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %8, metadata !4783, metadata !DIExpression()), !dbg !4784
  %9 = icmp eq i8* %0, null, !dbg !4788
  br i1 %9, label %10, label %11, !dbg !4790

10:                                               ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1368) #18, !dbg !4791
  br label %11, !dbg !4791

11:                                               ; preds = %10, %4
  %12 = icmp eq i8* %1, null, !dbg !4793
  br i1 %12, label %13, label %19, !dbg !4793

13:                                               ; preds = %11
  %14 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !4793
  %15 = bitcast i8* %14 to i32*, !dbg !4793
  %16 = load i32, i32* %15, align 4, !dbg !4793
  %17 = icmp eq i32 %16, 0, !dbg !4793
  br i1 %17, label %19, label %18, !dbg !4795

18:                                               ; preds = %13
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1369) #18, !dbg !4796
  br label %19, !dbg !4796

19:                                               ; preds = %11, %18, %13
  %20 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !4798
  %21 = icmp eq i32 %20, 0, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %2, metadata !4778, metadata !DIExpression()), !dbg !4784
  %22 = icmp ne i32 %2, 0, !dbg !4798
  %23 = and i1 %21, %22, !dbg !4798
  br i1 %23, label %24, label %25, !dbg !4801

24:                                               ; preds = %19
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.11.32, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1372) #18, !dbg !4802
  br label %25, !dbg !4802

25:                                               ; preds = %24, %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !4780, metadata !DIExpression()), !dbg !4784
  call void @vPortEnterCritical() #18, !dbg !4804
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !4808
  %27 = bitcast i8* %26 to i32*, !dbg !4808
  %28 = load volatile i32, i32* %27, align 4, !dbg !4808
  %29 = icmp eq i32 %28, 0, !dbg !4811
  br i1 %29, label %30, label %41, !dbg !4812

30:                                               ; preds = %25
  %31 = getelementptr inbounds i8, i8* %0, i32 68
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds i8, i8* %0, i32 72
  %34 = bitcast i8* %33 to i32*
  %35 = bitcast i8* %0 to i8**
  %36 = getelementptr inbounds i8, i8* %0, i32 4
  %37 = bitcast i8* %36 to i8**
  %38 = getelementptr inbounds i8, i8* %0, i32 36
  %39 = bitcast i8* %38 to %struct.xLIST*
  call void @llvm.dbg.value(metadata i32 %2, metadata !4778, metadata !DIExpression()), !dbg !4784
  %40 = icmp eq i32 %2, 0, !dbg !4813
  br i1 %40, label %77, label %78, !dbg !4816

41:                                               ; preds = %107, %25
  %42 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4817
  %43 = bitcast i8* %42 to i8**, !dbg !4819
  %44 = load i8*, i8** %43, align 4, !dbg !4819
  call void @llvm.dbg.value(metadata i8* %44, metadata !4782, metadata !DIExpression()), !dbg !4784
  call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %8, i8* noundef %1) #17, !dbg !4820
  %45 = icmp eq i32 %3, 0, !dbg !4821
  br i1 %45, label %46, label %66, !dbg !4823

46:                                               ; preds = %41
  %47 = load volatile i32, i32* %27, align 4, !dbg !4824
  %48 = add i32 %47, -1, !dbg !4824
  store volatile i32 %48, i32* %27, align 4, !dbg !4824
  %49 = bitcast i8* %0 to i8**, !dbg !4826
  %50 = load i8*, i8** %49, align 4, !dbg !4826
  %51 = icmp eq i8* %50, null, !dbg !4829
  br i1 %51, label %52, label %56, !dbg !4830

52:                                               ; preds = %46
  %53 = call i8* @pvTaskIncrementMutexHeldCount() #18, !dbg !4831
  %54 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4833
  %55 = bitcast i8* %54 to i8**, !dbg !4833
  store i8* %53, i8** %55, align 4, !dbg !4834
  br label %56, !dbg !4835

56:                                               ; preds = %46, %52
  %57 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !4836
  %58 = bitcast i8* %57 to i32*, !dbg !4836
  %59 = load i32, i32* %58, align 4, !dbg !4836
  %60 = icmp eq i32 %59, 0, !dbg !4836
  br i1 %60, label %76, label %61, !dbg !4838

61:                                               ; preds = %56
  %62 = bitcast i8* %57 to %struct.xLIST*, !dbg !4836
  %63 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %62) #18, !dbg !4839
  %64 = icmp eq i32 %63, 1, !dbg !4842
  br i1 %64, label %65, label %76, !dbg !4843

65:                                               ; preds = %61
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4844
  call void asm sideeffect "dsb", ""() #19, !dbg !4844, !srcloc !4847
  call void asm sideeffect "isb", ""() #19, !dbg !4844, !srcloc !4848
  br label %76, !dbg !4849

66:                                               ; preds = %41
  store i8* %44, i8** %43, align 4, !dbg !4850
  %67 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !4852
  %68 = bitcast i8* %67 to i32*, !dbg !4852
  %69 = load i32, i32* %68, align 4, !dbg !4852
  %70 = icmp eq i32 %69, 0, !dbg !4852
  br i1 %70, label %76, label %71, !dbg !4854

71:                                               ; preds = %66
  %72 = bitcast i8* %67 to %struct.xLIST*, !dbg !4852
  %73 = call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %72) #18, !dbg !4855
  %74 = icmp eq i32 %73, 0, !dbg !4858
  br i1 %74, label %76, label %75, !dbg !4859

75:                                               ; preds = %71
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4860
  call void asm sideeffect "dsb", ""() #19, !dbg !4860, !srcloc !4863
  call void asm sideeffect "isb", ""() #19, !dbg !4860, !srcloc !4864
  br label %76, !dbg !4865

76:                                               ; preds = %71, %75, %66, %61, %65, %56
  call void @vPortExitCritical() #18, !dbg !4866
  br label %113, !dbg !4867

77:                                               ; preds = %110, %30
  call void @vPortExitCritical() #18, !dbg !4868
  br label %113, !dbg !4870

78:                                               ; preds = %30
  call void @vTaskSetTimeOutState(%struct.xTIME_OUT* noundef nonnull %6) #18, !dbg !4871
  call void @llvm.dbg.value(metadata i32 1, metadata !4780, metadata !DIExpression()), !dbg !4784
  br label %79, !dbg !4874

79:                                               ; preds = %110, %78
  call void @llvm.dbg.value(metadata i32 1, metadata !4780, metadata !DIExpression()), !dbg !4784
  call void @vPortExitCritical() #18, !dbg !4875
  call void @vTaskSuspendAll() #18, !dbg !4876
  call void @vPortEnterCritical() #18, !dbg !4877
  %80 = load volatile i32, i32* %32, align 4, !dbg !4878
  %81 = icmp eq i32 %80, -1, !dbg !4878
  br i1 %81, label %82, label %83, !dbg !4881

82:                                               ; preds = %79
  store volatile i32 0, i32* %32, align 4, !dbg !4882
  br label %83, !dbg !4882

83:                                               ; preds = %82, %79
  %84 = load volatile i32, i32* %34, align 4, !dbg !4884
  %85 = icmp eq i32 %84, -1, !dbg !4884
  br i1 %85, label %86, label %87, !dbg !4881

86:                                               ; preds = %83
  store volatile i32 0, i32* %34, align 4, !dbg !4886
  br label %87, !dbg !4886

87:                                               ; preds = %86, %83
  call void @vPortExitCritical() #18, !dbg !4877
  call void @llvm.dbg.value(metadata i32* %5, metadata !4778, metadata !DIExpression(DW_OP_deref)), !dbg !4784
  %88 = call i32 @xTaskCheckForTimeOut(%struct.xTIME_OUT* noundef nonnull %6, i32* noundef nonnull %5) #18, !dbg !4888
  %89 = icmp eq i32 %88, 0, !dbg !4890
  br i1 %89, label %90, label %105, !dbg !4891

90:                                               ; preds = %87
  %91 = call fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef nonnull %8) #17, !dbg !4892
  %92 = icmp eq i32 %91, 0, !dbg !4895
  br i1 %92, label %103, label %93, !dbg !4896

93:                                               ; preds = %90
  %94 = load i8*, i8** %35, align 4, !dbg !4897
  %95 = icmp eq i8* %94, null, !dbg !4901
  br i1 %95, label %96, label %98, !dbg !4902

96:                                               ; preds = %93
  call void @vPortEnterCritical() #18, !dbg !4903
  %97 = load i8*, i8** %37, align 4, !dbg !4905
  call void @vTaskPriorityInherit(i8* noundef %97) #18, !dbg !4907
  call void @vPortExitCritical() #18, !dbg !4908
  br label %98, !dbg !4909

98:                                               ; preds = %93, %96
  %99 = load i32, i32* %5, align 4, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %99, metadata !4778, metadata !DIExpression()), !dbg !4784
  call void @vTaskPlaceOnEventList(%struct.xLIST* noundef nonnull %39, i32 noundef %99) #18, !dbg !4911
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #17, !dbg !4912
  %100 = call i32 @xTaskResumeAll() #18, !dbg !4913
  %101 = icmp eq i32 %100, 0, !dbg !4915
  br i1 %101, label %102, label %107, !dbg !4916

102:                                              ; preds = %98
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4917
  call void asm sideeffect "dsb", ""() #19, !dbg !4917, !srcloc !4920
  call void asm sideeffect "isb", ""() #19, !dbg !4917, !srcloc !4921
  br label %107, !dbg !4922

103:                                              ; preds = %90
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #17, !dbg !4923
  %104 = call i32 @xTaskResumeAll() #18, !dbg !4925
  br label %107

105:                                              ; preds = %87
  call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef nonnull %8) #17, !dbg !4926
  %106 = call i32 @xTaskResumeAll() #18, !dbg !4928
  br label %113, !dbg !4929

107:                                              ; preds = %103, %98, %102
  call void @llvm.dbg.value(metadata i32 undef, metadata !4780, metadata !DIExpression()), !dbg !4784
  call void @vPortEnterCritical() #18, !dbg !4804
  %108 = load volatile i32, i32* %27, align 4, !dbg !4808
  %109 = icmp eq i32 %108, 0, !dbg !4811
  br i1 %109, label %110, label %41, !dbg !4812, !llvm.loop !4930

110:                                              ; preds = %107
  %111 = load i32, i32* %5, align 4, !dbg !4933
  call void @llvm.dbg.value(metadata i32 %111, metadata !4778, metadata !DIExpression()), !dbg !4784
  %112 = icmp eq i32 %111, 0, !dbg !4813
  br i1 %112, label %77, label %79, !dbg !4816

113:                                              ; preds = %105, %77, %76
  %114 = phi i32 [ 1, %76 ], [ 0, %77 ], [ 0, %105 ], !dbg !4934
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19, !dbg !4935
  ret i32 %114, !dbg !4935
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* nocapture noundef %0, i8* noundef %1) unnamed_addr #2 !dbg !4936 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !4940, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata i8* %1, metadata !4941, metadata !DIExpression()), !dbg !4942
  %3 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 8, !dbg !4943
  %4 = load i32, i32* %3, align 4, !dbg !4943
  %5 = icmp eq i32 %4, 0, !dbg !4945
  br i1 %5, label %19, label %6, !dbg !4946

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 3, i32 0, !dbg !4947
  %8 = load i8*, i8** %7, align 4, !dbg !4949
  %9 = getelementptr inbounds i8, i8* %8, i32 %4, !dbg !4949
  store i8* %9, i8** %7, align 4, !dbg !4949
  %10 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 1, !dbg !4950
  %11 = load i8*, i8** %10, align 4, !dbg !4950
  %12 = icmp ult i8* %9, %11, !dbg !4952
  br i1 %12, label %16, label %13, !dbg !4953

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 0, !dbg !4954
  %15 = load i8*, i8** %14, align 4, !dbg !4954
  store i8* %15, i8** %7, align 4, !dbg !4956
  br label %16, !dbg !4957

16:                                               ; preds = %6, %13
  %17 = phi i8* [ %9, %6 ], [ %15, %13 ], !dbg !4958
  %18 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %17, i32 noundef %4) #18, !dbg !4959
  br label %19, !dbg !4960

19:                                               ; preds = %16, %2
  ret void, !dbg !4961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvIsQueueEmpty(%struct.QueueDefinition* noundef %0) unnamed_addr #2 !dbg !4962 {
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %0, metadata !4964, metadata !DIExpression()), !dbg !4966
  tail call void @vPortEnterCritical() #18, !dbg !4967
  %2 = getelementptr inbounds %struct.QueueDefinition, %struct.QueueDefinition* %0, i32 0, i32 6, !dbg !4968
  %3 = load volatile i32, i32* %2, align 4, !dbg !4968
  %4 = icmp eq i32 %3, 0, !dbg !4971
  %5 = zext i1 %4 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !4965, metadata !DIExpression()), !dbg !4966
  tail call void @vPortExitCritical() #18, !dbg !4972
  ret i32 %5, !dbg !4973
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xQueueCreateCountingSemaphore(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4978, metadata !DIExpression()), !dbg !4981
  call void @llvm.dbg.value(metadata i32 %1, metadata !4979, metadata !DIExpression()), !dbg !4981
  %3 = icmp eq i32 %0, 0, !dbg !4982
  br i1 %3, label %4, label %5, !dbg !4984

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.35, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 590) #18, !dbg !4985
  br label %5, !dbg !4985

5:                                                ; preds = %4, %2
  %6 = icmp ugt i32 %1, %0, !dbg !4987
  br i1 %6, label %7, label %8, !dbg !4989

7:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 591) #18, !dbg !4990
  br label %8, !dbg !4990

8:                                                ; preds = %7, %5
  %9 = tail call i8* @xQueueGenericCreate(i32 noundef %0, i32 noundef 0, i8 noundef zeroext 2) #17, !dbg !4992
  call void @llvm.dbg.value(metadata i8* %9, metadata !4980, metadata !DIExpression()), !dbg !4981
  %10 = icmp eq i8* %9, null, !dbg !4993
  br i1 %10, label %14, label %11, !dbg !4993

11:                                               ; preds = %8
  %12 = getelementptr inbounds i8, i8* %9, i32 56, !dbg !4994
  %13 = bitcast i8* %12 to i32*, !dbg !4994
  store volatile i32 %1, i32* %13, align 4, !dbg !4997
  br label %15, !dbg !4998

14:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 606) #18, !dbg !4999
  br label %15, !dbg !4999

15:                                               ; preds = %11, %14
  ret i8* %9, !dbg !5002
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGenericSendFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2, i32 noundef %3) local_unnamed_addr #2 !dbg !5003 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5007, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i8* %1, metadata !5008, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i32* %2, metadata !5009, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i32 %3, metadata !5010, metadata !DIExpression()), !dbg !5014
  %5 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !5015
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %5, metadata !5013, metadata !DIExpression()), !dbg !5014
  %6 = icmp eq i8* %0, null, !dbg !5016
  br i1 %6, label %7, label %8, !dbg !5018

7:                                                ; preds = %4
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1064) #18, !dbg !5019
  br label %8, !dbg !5019

8:                                                ; preds = %7, %4
  %9 = icmp eq i8* %1, null, !dbg !5021
  br i1 %9, label %10, label %16, !dbg !5021

10:                                               ; preds = %8
  %11 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !5021
  %12 = bitcast i8* %11 to i32*, !dbg !5021
  %13 = load i32, i32* %12, align 4, !dbg !5021
  %14 = icmp eq i32 %13, 0, !dbg !5021
  br i1 %14, label %16, label %15, !dbg !5023

15:                                               ; preds = %10
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.9.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1065) #18, !dbg !5024
  br label %16, !dbg !5024

16:                                               ; preds = %8, %15, %10
  %17 = icmp eq i32 %3, 2, !dbg !5026
  br i1 %17, label %18, label %24, !dbg !5026

18:                                               ; preds = %16
  %19 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !5026
  %20 = bitcast i8* %19 to i32*, !dbg !5026
  %21 = load i32, i32* %20, align 4, !dbg !5026
  %22 = icmp eq i32 %21, 1, !dbg !5026
  br i1 %22, label %24, label %23, !dbg !5028

23:                                               ; preds = %18
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.10.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1066) #18, !dbg !5029
  br label %24, !dbg !5029

24:                                               ; preds = %16, %23, %18
  tail call void @vPortValidateInterruptPriority() #18, !dbg !5031
  %25 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !5032, !srcloc !5038
  call void @llvm.dbg.value(metadata i32 undef, metadata !5035, metadata !DIExpression()) #19, !dbg !5039
  call void @llvm.dbg.value(metadata i32 undef, metadata !5036, metadata !DIExpression()) #19, !dbg !5039
  call void @llvm.dbg.value(metadata i32 undef, metadata !5012, metadata !DIExpression()), !dbg !5014
  %26 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !5040
  %27 = bitcast i8* %26 to i32*, !dbg !5040
  %28 = load volatile i32, i32* %27, align 4, !dbg !5040
  %29 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !5043
  %30 = bitcast i8* %29 to i32*, !dbg !5043
  %31 = load i32, i32* %30, align 4, !dbg !5043
  %32 = icmp ult i32 %28, %31, !dbg !5044
  %33 = or i1 %17, %32, !dbg !5045
  br i1 %33, label %34, label %55, !dbg !5045

34:                                               ; preds = %24
  %35 = tail call fastcc i32 @prvCopyDataToQueue(%struct.QueueDefinition* noundef nonnull %5, i8* noundef %1, i32 noundef %3) #17, !dbg !5046
  %36 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !5048
  %37 = bitcast i8* %36 to i32*, !dbg !5048
  %38 = load volatile i32, i32* %37, align 4, !dbg !5048
  %39 = icmp eq i32 %38, -1, !dbg !5050
  br i1 %39, label %40, label %52, !dbg !5051

40:                                               ; preds = %34
  %41 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !5052
  %42 = bitcast i8* %41 to i32*, !dbg !5052
  %43 = load i32, i32* %42, align 4, !dbg !5052
  %44 = icmp eq i32 %43, 0, !dbg !5052
  br i1 %44, label %55, label %45, !dbg !5056

45:                                               ; preds = %40
  %46 = bitcast i8* %41 to %struct.xLIST*, !dbg !5052
  %47 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %46) #18, !dbg !5057
  %48 = icmp ne i32 %47, 0, !dbg !5060
  %49 = icmp ne i32* %2, null
  %50 = and i1 %49, %48, !dbg !5061
  br i1 %50, label %51, label %55, !dbg !5061

51:                                               ; preds = %45
  store i32 1, i32* %2, align 4, !dbg !5062
  br label %55, !dbg !5066

52:                                               ; preds = %34
  %53 = load volatile i32, i32* %37, align 4, !dbg !5067
  %54 = add nsw i32 %53, 1, !dbg !5067
  store volatile i32 %54, i32* %37, align 4, !dbg !5067
  br label %55

55:                                               ; preds = %24, %52, %40, %51, %45
  %56 = phi i32 [ 1, %45 ], [ 1, %51 ], [ 1, %40 ], [ 1, %52 ], [ 0, %24 ], !dbg !5069
  %57 = extractvalue { i32, i32 } %25, 0, !dbg !5032
  call void @llvm.dbg.value(metadata i32 %57, metadata !5035, metadata !DIExpression()) #19, !dbg !5039
  call void @llvm.dbg.value(metadata i32 %57, metadata !5012, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i32 %56, metadata !5011, metadata !DIExpression()), !dbg !5014
  call void @llvm.dbg.value(metadata i32 undef, metadata !5070, metadata !DIExpression()) #19, !dbg !5073
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %57) #19, !dbg !5075, !srcloc !5076
  ret i32 %56, !dbg !5077
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueGiveFromISR(i8* noundef %0, i32* noundef writeonly %1) local_unnamed_addr #2 !dbg !5078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5082, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i32* %1, metadata !5083, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i8* %0, metadata !5086, metadata !DIExpression()), !dbg !5087
  %3 = icmp eq i8* %0, null, !dbg !5088
  br i1 %3, label %4, label %5, !dbg !5090

4:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1213) #18, !dbg !5091
  br label %5, !dbg !5091

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !5093
  %7 = bitcast i8* %6 to i32*, !dbg !5093
  %8 = load i32, i32* %7, align 4, !dbg !5093
  %9 = icmp eq i32 %8, 0, !dbg !5093
  br i1 %9, label %11, label %10, !dbg !5095

10:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1216) #18, !dbg !5096
  br label %11, !dbg !5096

11:                                               ; preds = %10, %5
  tail call void @vPortValidateInterruptPriority() #18, !dbg !5098
  %12 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !5099, !srcloc !5038
  call void @llvm.dbg.value(metadata i32 undef, metadata !5035, metadata !DIExpression()) #19, !dbg !5101
  call void @llvm.dbg.value(metadata i32 undef, metadata !5036, metadata !DIExpression()) #19, !dbg !5101
  call void @llvm.dbg.value(metadata i32 undef, metadata !5085, metadata !DIExpression()), !dbg !5087
  %13 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !5102
  %14 = bitcast i8* %13 to i32*, !dbg !5102
  %15 = load volatile i32, i32* %14, align 4, !dbg !5102
  %16 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !5105
  %17 = bitcast i8* %16 to i32*, !dbg !5105
  %18 = load i32, i32* %17, align 4, !dbg !5105
  %19 = icmp ult i32 %15, %18, !dbg !5106
  br i1 %19, label %20, label %42, !dbg !5107

20:                                               ; preds = %11
  %21 = load volatile i32, i32* %14, align 4, !dbg !5108
  %22 = add i32 %21, 1, !dbg !5108
  store volatile i32 %22, i32* %14, align 4, !dbg !5108
  %23 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !5110
  %24 = bitcast i8* %23 to i32*, !dbg !5110
  %25 = load volatile i32, i32* %24, align 4, !dbg !5110
  %26 = icmp eq i32 %25, -1, !dbg !5112
  br i1 %26, label %27, label %39, !dbg !5113

27:                                               ; preds = %20
  %28 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !5114
  %29 = bitcast i8* %28 to i32*, !dbg !5114
  %30 = load i32, i32* %29, align 4, !dbg !5114
  %31 = icmp eq i32 %30, 0, !dbg !5114
  br i1 %31, label %42, label %32, !dbg !5118

32:                                               ; preds = %27
  %33 = bitcast i8* %28 to %struct.xLIST*, !dbg !5114
  %34 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %33) #18, !dbg !5119
  %35 = icmp ne i32 %34, 0, !dbg !5122
  %36 = icmp ne i32* %1, null
  %37 = and i1 %36, %35, !dbg !5123
  br i1 %37, label %38, label %42, !dbg !5123

38:                                               ; preds = %32
  store i32 1, i32* %1, align 4, !dbg !5124
  br label %42, !dbg !5128

39:                                               ; preds = %20
  %40 = load volatile i32, i32* %24, align 4, !dbg !5129
  %41 = add nsw i32 %40, 1, !dbg !5129
  store volatile i32 %41, i32* %24, align 4, !dbg !5129
  br label %42

42:                                               ; preds = %11, %39, %27, %38, %32
  %43 = phi i32 [ 1, %32 ], [ 1, %38 ], [ 1, %27 ], [ 1, %39 ], [ 0, %11 ], !dbg !5131
  %44 = extractvalue { i32, i32 } %12, 0, !dbg !5099
  call void @llvm.dbg.value(metadata i32 %44, metadata !5035, metadata !DIExpression()) #19, !dbg !5101
  call void @llvm.dbg.value(metadata i32 %44, metadata !5085, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i32 %43, metadata !5084, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i32 undef, metadata !5070, metadata !DIExpression()) #19, !dbg !5132
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %44) #19, !dbg !5134, !srcloc !5076
  ret i32 %43, !dbg !5135
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueReceiveFromISR(i8* noundef %0, i8* noundef %1, i32* noundef writeonly %2) local_unnamed_addr #2 !dbg !5136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5140, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i8* %1, metadata !5141, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i32* %2, metadata !5142, metadata !DIExpression()), !dbg !5146
  %4 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !5147
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %4, metadata !5145, metadata !DIExpression()), !dbg !5146
  %5 = icmp eq i8* %0, null, !dbg !5148
  br i1 %5, label %6, label %7, !dbg !5150

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1556) #18, !dbg !5151
  br label %7, !dbg !5151

7:                                                ; preds = %6, %3
  %8 = icmp eq i8* %1, null, !dbg !5153
  br i1 %8, label %9, label %15, !dbg !5153

9:                                                ; preds = %7
  %10 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !5153
  %11 = bitcast i8* %10 to i32*, !dbg !5153
  %12 = load i32, i32* %11, align 4, !dbg !5153
  %13 = icmp eq i32 %12, 0, !dbg !5153
  br i1 %13, label %15, label %14, !dbg !5155

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1557) #18, !dbg !5156
  br label %15, !dbg !5156

15:                                               ; preds = %7, %14, %9
  tail call void @vPortValidateInterruptPriority() #18, !dbg !5158
  %16 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !5159, !srcloc !5038
  call void @llvm.dbg.value(metadata i32 undef, metadata !5035, metadata !DIExpression()) #19, !dbg !5161
  call void @llvm.dbg.value(metadata i32 undef, metadata !5036, metadata !DIExpression()) #19, !dbg !5161
  call void @llvm.dbg.value(metadata i32 undef, metadata !5144, metadata !DIExpression()), !dbg !5146
  %17 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !5162
  %18 = bitcast i8* %17 to i32*, !dbg !5162
  %19 = load volatile i32, i32* %18, align 4, !dbg !5162
  %20 = icmp eq i32 %19, 0, !dbg !5165
  br i1 %20, label %43, label %21, !dbg !5166

21:                                               ; preds = %15
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %4, i8* noundef %1) #17, !dbg !5167
  %22 = load volatile i32, i32* %18, align 4, !dbg !5169
  %23 = add i32 %22, -1, !dbg !5169
  store volatile i32 %23, i32* %18, align 4, !dbg !5169
  %24 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5170
  %25 = bitcast i8* %24 to i32*, !dbg !5170
  %26 = load volatile i32, i32* %25, align 4, !dbg !5170
  %27 = icmp eq i32 %26, -1, !dbg !5172
  br i1 %27, label %28, label %40, !dbg !5173

28:                                               ; preds = %21
  %29 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !5174
  %30 = bitcast i8* %29 to i32*, !dbg !5174
  %31 = load i32, i32* %30, align 4, !dbg !5174
  %32 = icmp eq i32 %31, 0, !dbg !5174
  br i1 %32, label %43, label %33, !dbg !5177

33:                                               ; preds = %28
  %34 = bitcast i8* %29 to %struct.xLIST*, !dbg !5174
  %35 = tail call i32 @xTaskRemoveFromEventList(%struct.xLIST* noundef nonnull %34) #18, !dbg !5178
  %36 = icmp ne i32 %35, 0, !dbg !5181
  %37 = icmp ne i32* %2, null
  %38 = and i1 %37, %36, !dbg !5182
  br i1 %38, label %39, label %43, !dbg !5182

39:                                               ; preds = %33
  store i32 1, i32* %2, align 4, !dbg !5183
  br label %43, !dbg !5187

40:                                               ; preds = %21
  %41 = load volatile i32, i32* %25, align 4, !dbg !5188
  %42 = add nsw i32 %41, 1, !dbg !5188
  store volatile i32 %42, i32* %25, align 4, !dbg !5188
  br label %43

43:                                               ; preds = %15, %40, %28, %39, %33
  %44 = phi i32 [ 1, %33 ], [ 1, %39 ], [ 1, %28 ], [ 1, %40 ], [ 0, %15 ], !dbg !5190
  %45 = extractvalue { i32, i32 } %16, 0, !dbg !5159
  call void @llvm.dbg.value(metadata i32 %45, metadata !5035, metadata !DIExpression()) #19, !dbg !5161
  call void @llvm.dbg.value(metadata i32 %45, metadata !5144, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i32 %44, metadata !5143, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.value(metadata i32 undef, metadata !5070, metadata !DIExpression()) #19, !dbg !5191
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %45) #19, !dbg !5193, !srcloc !5076
  ret i32 %44, !dbg !5194
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueuePeekFromISR(i8* noundef %0, i8* noundef %1) local_unnamed_addr #2 !dbg !5195 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5199, metadata !DIExpression()), !dbg !5205
  call void @llvm.dbg.value(metadata i8* %1, metadata !5200, metadata !DIExpression()), !dbg !5205
  %3 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !5206
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %3, metadata !5204, metadata !DIExpression()), !dbg !5205
  %4 = icmp eq i8* %0, null, !dbg !5207
  br i1 %4, label %5, label %6, !dbg !5209

5:                                                ; preds = %2
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1644) #18, !dbg !5210
  br label %6, !dbg !5210

6:                                                ; preds = %5, %2
  %7 = icmp eq i8* %1, null, !dbg !5212
  br i1 %7, label %8, label %14, !dbg !5212

8:                                                ; preds = %6
  %9 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !5212
  %10 = bitcast i8* %9 to i32*, !dbg !5212
  %11 = load i32, i32* %10, align 4, !dbg !5212
  %12 = icmp eq i32 %11, 0, !dbg !5212
  br i1 %12, label %14, label %13, !dbg !5214

13:                                               ; preds = %8
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1645) #18, !dbg !5215
  br label %14, !dbg !5215

14:                                               ; preds = %6, %13, %8
  %15 = getelementptr inbounds i8, i8* %0, i32 64, !dbg !5217
  %16 = bitcast i8* %15 to i32*, !dbg !5217
  %17 = load i32, i32* %16, align 4, !dbg !5217
  %18 = icmp eq i32 %17, 0, !dbg !5217
  br i1 %18, label %19, label %20, !dbg !5219

19:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1646) #18, !dbg !5220
  br label %20, !dbg !5220

20:                                               ; preds = %19, %14
  tail call void @vPortValidateInterruptPriority() #18, !dbg !5222
  %21 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !5223, !srcloc !5038
  call void @llvm.dbg.value(metadata i32 undef, metadata !5035, metadata !DIExpression()) #19, !dbg !5225
  call void @llvm.dbg.value(metadata i32 undef, metadata !5036, metadata !DIExpression()) #19, !dbg !5225
  call void @llvm.dbg.value(metadata i32 undef, metadata !5202, metadata !DIExpression()), !dbg !5205
  %22 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !5226
  %23 = bitcast i8* %22 to i32*, !dbg !5226
  %24 = load volatile i32, i32* %23, align 4, !dbg !5226
  %25 = icmp eq i32 %24, 0, !dbg !5229
  br i1 %25, label %30, label %26, !dbg !5230

26:                                               ; preds = %20
  %27 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5231
  %28 = bitcast i8* %27 to i8**, !dbg !5233
  %29 = load i8*, i8** %28, align 4, !dbg !5233
  call void @llvm.dbg.value(metadata i8* %29, metadata !5203, metadata !DIExpression()), !dbg !5205
  tail call fastcc void @prvCopyDataFromQueue(%struct.QueueDefinition* noundef nonnull %3, i8* noundef %1) #17, !dbg !5234
  store i8* %29, i8** %28, align 4, !dbg !5235
  call void @llvm.dbg.value(metadata i32 1, metadata !5201, metadata !DIExpression()), !dbg !5205
  br label %30, !dbg !5236

30:                                               ; preds = %20, %26
  %31 = phi i32 [ 1, %26 ], [ 0, %20 ], !dbg !5237
  %32 = extractvalue { i32, i32 } %21, 0, !dbg !5223
  call void @llvm.dbg.value(metadata i32 %32, metadata !5035, metadata !DIExpression()) #19, !dbg !5225
  call void @llvm.dbg.value(metadata i32 %32, metadata !5202, metadata !DIExpression()), !dbg !5205
  call void @llvm.dbg.value(metadata i32 %31, metadata !5201, metadata !DIExpression()), !dbg !5205
  call void @llvm.dbg.value(metadata i32 undef, metadata !5070, metadata !DIExpression()) #19, !dbg !5238
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %32) #19, !dbg !5240, !srcloc !5076
  ret i32 %31, !dbg !5241
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaiting(i8* noundef %0) local_unnamed_addr #2 !dbg !5242 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5247, metadata !DIExpression()), !dbg !5249
  %2 = icmp eq i8* %0, null, !dbg !5250
  br i1 %2, label %3, label %4, !dbg !5252

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1695) #18, !dbg !5253
  br label %4, !dbg !5253

4:                                                ; preds = %3, %1
  tail call void @vPortEnterCritical() #18, !dbg !5255
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !5256
  %6 = bitcast i8* %5 to i32*, !dbg !5256
  %7 = load volatile i32, i32* %6, align 4, !dbg !5256
  call void @llvm.dbg.value(metadata i32 %7, metadata !5248, metadata !DIExpression()), !dbg !5249
  tail call void @vPortExitCritical() #18, !dbg !5258
  ret i32 %7, !dbg !5259
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueSpacesAvailable(i8* noundef %0) local_unnamed_addr #2 !dbg !5260 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5262, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.value(metadata i8* %0, metadata !5264, metadata !DIExpression()), !dbg !5265
  %2 = icmp eq i8* %0, null, !dbg !5266
  br i1 %2, label %3, label %4, !dbg !5268

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1713) #18, !dbg !5269
  br label %4, !dbg !5269

4:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !5264, metadata !DIExpression()), !dbg !5265
  tail call void @vPortEnterCritical() #18, !dbg !5271
  %5 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !5272
  %6 = bitcast i8* %5 to i32*, !dbg !5272
  %7 = load i32, i32* %6, align 4, !dbg !5272
  %8 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !5274
  %9 = bitcast i8* %8 to i32*, !dbg !5274
  %10 = load volatile i32, i32* %9, align 4, !dbg !5274
  %11 = sub i32 %7, %10, !dbg !5275
  call void @llvm.dbg.value(metadata i32 %11, metadata !5263, metadata !DIExpression()), !dbg !5265
  tail call void @vPortExitCritical() #18, !dbg !5276
  ret i32 %11, !dbg !5277
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @uxQueueMessagesWaitingFromISR(i8* noundef %0) local_unnamed_addr #2 !dbg !5278 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5280, metadata !DIExpression()), !dbg !5282
  %2 = icmp eq i8* %0, null, !dbg !5283
  br i1 %2, label %3, label %4, !dbg !5285

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1729) #18, !dbg !5286
  br label %4, !dbg !5286

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !5288
  %6 = bitcast i8* %5 to i32*, !dbg !5288
  %7 = load volatile i32, i32* %6, align 4, !dbg !5288
  call void @llvm.dbg.value(metadata i32 %7, metadata !5281, metadata !DIExpression()), !dbg !5282
  ret i32 %7, !dbg !5289
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueDelete(i8* noundef %0) local_unnamed_addr #2 !dbg !5290 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5294, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.value(metadata i8* %0, metadata !5295, metadata !DIExpression()), !dbg !5296
  %2 = icmp eq i8* %0, null, !dbg !5297
  br i1 %2, label %3, label %4, !dbg !5299

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 1741) #18, !dbg !5300
  br label %4, !dbg !5300

4:                                                ; preds = %3, %1
  tail call void @vQueueUnregisterQueue(i8* noundef %0) #17, !dbg !5302
  tail call void @vPortFree(i8* noundef %0) #18, !dbg !5304
  ret void, !dbg !5305
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueUnregisterQueue(i8* noundef readnone %0) local_unnamed_addr #11 !dbg !5306 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5308, metadata !DIExpression()), !dbg !5310
  call void @llvm.dbg.value(metadata i32 0, metadata !5309, metadata !DIExpression()), !dbg !5310
  br label %2, !dbg !5311

2:                                                ; preds = %1, %9
  %3 = phi i32 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5309, metadata !DIExpression()), !dbg !5310
  %4 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 1, !dbg !5313
  %5 = load i8*, i8** %4, align 4, !dbg !5313
  %6 = icmp eq i8* %5, %0, !dbg !5317
  br i1 %6, label %7, label %9, !dbg !5318

7:                                                ; preds = %2
  %8 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %3, i32 0, !dbg !5319
  store i8* null, i8** %8, align 4, !dbg !5321
  br label %12, !dbg !5322

9:                                                ; preds = %2
  %10 = add nuw nsw i32 %3, 1, !dbg !5323
  call void @llvm.dbg.value(metadata i32 %10, metadata !5309, metadata !DIExpression()), !dbg !5310
  %11 = icmp eq i32 %10, 8, !dbg !5324
  br i1 %11, label %12, label %2, !dbg !5311, !llvm.loop !5325

12:                                               ; preds = %9, %7
  ret void, !dbg !5327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @uxQueueGetQueueNumber(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !5328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5332, metadata !DIExpression()), !dbg !5333
  %2 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !5334
  %3 = bitcast i8* %2 to i32*, !dbg !5334
  %4 = load i32, i32* %3, align 4, !dbg !5334
  ret i32 %4, !dbg !5335
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @vQueueSetQueueNumber(i8* nocapture noundef writeonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5336 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5340, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.value(metadata i32 %1, metadata !5341, metadata !DIExpression()), !dbg !5342
  %3 = getelementptr inbounds i8, i8* %0, i32 76, !dbg !5343
  %4 = bitcast i8* %3 to i32*, !dbg !5343
  store i32 %1, i32* %4, align 4, !dbg !5344
  ret void, !dbg !5345
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i8 @ucQueueGetQueueType(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !5346 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5350, metadata !DIExpression()), !dbg !5351
  %2 = getelementptr inbounds i8, i8* %0, i32 80, !dbg !5352
  %3 = load i8, i8* %2, align 4, !dbg !5352
  ret i8 %3, !dbg !5353
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueEmptyFromISR(i8* noundef %0) local_unnamed_addr #2 !dbg !5354 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5358, metadata !DIExpression()), !dbg !5360
  %2 = icmp eq i8* %0, null, !dbg !5361
  br i1 %2, label %3, label %4, !dbg !5363

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 2015) #18, !dbg !5364
  br label %4, !dbg !5364

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !5366
  %6 = bitcast i8* %5 to i32*, !dbg !5366
  %7 = load volatile i32, i32* %6, align 4, !dbg !5366
  %8 = icmp eq i32 %7, 0, !dbg !5368
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !5359, metadata !DIExpression()), !dbg !5360
  ret i32 %9, !dbg !5369
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xQueueIsQueueFullFromISR(i8* noundef %0) local_unnamed_addr #2 !dbg !5370 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5372, metadata !DIExpression()), !dbg !5374
  %2 = icmp eq i8* %0, null, !dbg !5375
  br i1 %2, label %3, label %4, !dbg !5377

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef 2054) #18, !dbg !5378
  br label %4, !dbg !5378

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !5380
  %6 = bitcast i8* %5 to i32*, !dbg !5380
  %7 = load volatile i32, i32* %6, align 4, !dbg !5380
  %8 = getelementptr inbounds i8, i8* %0, i32 60, !dbg !5382
  %9 = bitcast i8* %8 to i32*, !dbg !5382
  %10 = load i32, i32* %9, align 4, !dbg !5382
  %11 = icmp eq i32 %7, %10, !dbg !5383
  %12 = zext i1 %11 to i32
  call void @llvm.dbg.value(metadata i32 %12, metadata !5373, metadata !DIExpression()), !dbg !5374
  ret i32 %12, !dbg !5384
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @vQueueAddToRegistry(i8* noundef %0, i8* noundef %1) local_unnamed_addr #11 !dbg !5385 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5389, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i8* %1, metadata !5390, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i32 0, metadata !5391, metadata !DIExpression()), !dbg !5392
  br label %3, !dbg !5393

3:                                                ; preds = %2, %10
  %4 = phi i32 [ 0, %2 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !5391, metadata !DIExpression()), !dbg !5392
  %5 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 0, !dbg !5395
  %6 = load i8*, i8** %5, align 4, !dbg !5395
  %7 = icmp eq i8* %6, null, !dbg !5399
  br i1 %7, label %8, label %10, !dbg !5400

8:                                                ; preds = %3
  store i8* %1, i8** %5, align 4, !dbg !5401
  %9 = getelementptr inbounds [8 x %struct.QUEUE_REGISTRY_ITEM], [8 x %struct.QUEUE_REGISTRY_ITEM]* @xQueueRegistry, i32 0, i32 %4, i32 1, !dbg !5403
  store i8* %0, i8** %9, align 4, !dbg !5404
  br label %13, !dbg !5405

10:                                               ; preds = %3
  %11 = add nuw nsw i32 %4, 1, !dbg !5406
  call void @llvm.dbg.value(metadata i32 %11, metadata !5391, metadata !DIExpression()), !dbg !5392
  %12 = icmp eq i32 %11, 8, !dbg !5407
  br i1 %12, label %13, label %3, !dbg !5393, !llvm.loop !5408

13:                                               ; preds = %10, %8
  ret void, !dbg !5410
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vQueueWaitForMessageRestricted(i8* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5411 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5415, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.value(metadata i32 %1, metadata !5416, metadata !DIExpression()), !dbg !5418
  call void @llvm.dbg.value(metadata i8* %0, metadata !5417, metadata !DIExpression()), !dbg !5418
  tail call void @vPortEnterCritical() #18, !dbg !5419
  %3 = getelementptr inbounds i8, i8* %0, i32 68, !dbg !5420
  %4 = bitcast i8* %3 to i32*, !dbg !5420
  %5 = load volatile i32, i32* %4, align 4, !dbg !5420
  %6 = icmp eq i32 %5, -1, !dbg !5420
  br i1 %6, label %7, label %8, !dbg !5423

7:                                                ; preds = %2
  store volatile i32 0, i32* %4, align 4, !dbg !5424
  br label %8, !dbg !5424

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i32 72, !dbg !5426
  %10 = bitcast i8* %9 to i32*, !dbg !5426
  %11 = load volatile i32, i32* %10, align 4, !dbg !5426
  %12 = icmp eq i32 %11, -1, !dbg !5426
  br i1 %12, label %13, label %14, !dbg !5423

13:                                               ; preds = %8
  store volatile i32 0, i32* %10, align 4, !dbg !5428
  br label %14, !dbg !5428

14:                                               ; preds = %13, %8
  tail call void @vPortExitCritical() #18, !dbg !5419
  %15 = getelementptr inbounds i8, i8* %0, i32 56, !dbg !5430
  %16 = bitcast i8* %15 to i32*, !dbg !5430
  %17 = load volatile i32, i32* %16, align 4, !dbg !5430
  %18 = icmp eq i32 %17, 0, !dbg !5432
  br i1 %18, label %19, label %22, !dbg !5433

19:                                               ; preds = %14
  %20 = getelementptr inbounds i8, i8* %0, i32 36, !dbg !5434
  %21 = bitcast i8* %20 to %struct.xLIST*, !dbg !5434
  tail call void @vTaskPlaceOnEventListRestricted(%struct.xLIST* noundef nonnull %21, i32 noundef %1) #18, !dbg !5436
  br label %22, !dbg !5437

22:                                               ; preds = %14, %19
  %23 = bitcast i8* %0 to %struct.QueueDefinition*, !dbg !5438
  call void @llvm.dbg.value(metadata %struct.QueueDefinition* %23, metadata !5417, metadata !DIExpression()), !dbg !5418
  tail call fastcc void @prvUnlockQueue(%struct.QueueDefinition* noundef %23) #17, !dbg !5439
  ret void, !dbg !5440
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerCreateTimerTask() local_unnamed_addr #2 !dbg !5441 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5443, metadata !DIExpression()), !dbg !5444
  tail call fastcc void @prvCheckForValidListAndQueue() #17, !dbg !5445
  %1 = load i8*, i8** @xTimerQueue, align 4, !dbg !5446
  %2 = icmp eq i8* %1, null, !dbg !5448
  br i1 %2, label %6, label %3, !dbg !5449

3:                                                ; preds = %0
  %4 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @prvTimerTask, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i32 0, i32 0), i16 noundef zeroext 512, i8* noundef null, i32 noundef 19, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #18, !dbg !5450
  call void @llvm.dbg.value(metadata i32 %4, metadata !5443, metadata !DIExpression()), !dbg !5444
  %5 = icmp eq i32 %4, 0, !dbg !5453
  br i1 %5, label %6, label %7, !dbg !5455

6:                                                ; preds = %0, %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 270) #18, !dbg !5456
  br label %7, !dbg !5456

7:                                                ; preds = %6, %3
  %8 = phi i32 [ 0, %6 ], [ %4, %3 ]
  ret i32 %8, !dbg !5458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvCheckForValidListAndQueue() unnamed_addr #2 !dbg !5459 {
  tail call void @vPortEnterCritical() #18, !dbg !5460
  %1 = load i8*, i8** @xTimerQueue, align 4, !dbg !5461
  %2 = icmp eq i8* %1, null, !dbg !5464
  br i1 %2, label %3, label %11, !dbg !5465

3:                                                ; preds = %0
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList1) #18, !dbg !5466
  tail call void @vListInitialise(%struct.xLIST* noundef nonnull @xActiveTimerList2) #18, !dbg !5468
  store %struct.xLIST* @xActiveTimerList1, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !5469
  store %struct.xLIST* @xActiveTimerList2, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !5470
  %4 = tail call i8* @xQueueGenericCreate(i32 noundef 10, i32 noundef 12, i8 noundef zeroext 0) #18, !dbg !5471
  store i8* %4, i8** @xTimerQueue, align 4, !dbg !5472
  %5 = icmp eq i8* %4, null, !dbg !5473
  br i1 %5, label %6, label %9, !dbg !5475

6:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6.48, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 784) #18, !dbg !5476
  %7 = load i8*, i8** @xTimerQueue, align 4, !dbg !5478
  %8 = icmp eq i8* %7, null, !dbg !5481
  br i1 %8, label %11, label %9, !dbg !5482

9:                                                ; preds = %3, %6
  %10 = phi i8* [ %7, %6 ], [ %4, %3 ]
  tail call void @vQueueAddToRegistry(i8* noundef nonnull %10, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.49, i32 0, i32 0)) #18, !dbg !5483
  br label %11, !dbg !5485

11:                                               ; preds = %0, %9, %6
  tail call void @vPortExitCritical() #18, !dbg !5486
  ret void, !dbg !5487
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTimerTask(i8* nocapture noundef readnone %0) #4 !dbg !5488 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5490, metadata !DIExpression()), !dbg !5493
  %3 = bitcast i32* %2 to i8*, !dbg !5494
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !5494
  br label %4, !dbg !5495

4:                                                ; preds = %4, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !5492, metadata !DIExpression(DW_OP_deref)), !dbg !5493
  %5 = call fastcc i32 @prvGetNextExpireTime(i32* noundef nonnull %2) #17, !dbg !5496
  call void @llvm.dbg.value(metadata i32 %5, metadata !5491, metadata !DIExpression()), !dbg !5493
  %6 = load i32, i32* %2, align 4, !dbg !5500
  call void @llvm.dbg.value(metadata i32 %6, metadata !5492, metadata !DIExpression()), !dbg !5493
  tail call fastcc void @prvProcessTimerOrBlockTask(i32 noundef %5, i32 noundef %6) #17, !dbg !5501
  tail call fastcc void @prvProcessReceivedCommands() #17, !dbg !5502
  br label %4, !dbg !5503, !llvm.loop !5504
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @prvGetNextExpireTime(i32* nocapture noundef writeonly %0) unnamed_addr #10 !dbg !5507 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !5509, metadata !DIExpression()), !dbg !5511
  %2 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !5512
  %3 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 0, !dbg !5512
  %4 = load i32, i32* %3, align 4, !dbg !5512
  %5 = icmp eq i32 %4, 0, !dbg !5512
  %6 = zext i1 %5 to i32, !dbg !5512
  store i32 %6, i32* %0, align 4, !dbg !5513
  br i1 %5, label %12, label %7, !dbg !5514

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %2, i32 0, i32 2, i32 1, !dbg !5515
  %9 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %8, align 4, !dbg !5515
  %10 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %9, i32 0, i32 0, !dbg !5515
  %11 = load i32, i32* %10, align 4, !dbg !5515
  call void @llvm.dbg.value(metadata i32 %11, metadata !5510, metadata !DIExpression()), !dbg !5511
  br label %12, !dbg !5518

12:                                               ; preds = %1, %7
  %13 = phi i32 [ %11, %7 ], [ 0, %1 ], !dbg !5519
  call void @llvm.dbg.value(metadata i32 %13, metadata !5510, metadata !DIExpression()), !dbg !5511
  ret i32 %13, !dbg !5520
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessTimerOrBlockTask(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !5521 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5525, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i32 %1, metadata !5526, metadata !DIExpression()), !dbg !5529
  %4 = bitcast i32* %3 to i8*, !dbg !5530
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !5530
  tail call void @vTaskSuspendAll() #18, !dbg !5531
  call void @llvm.dbg.value(metadata i32* %3, metadata !5528, metadata !DIExpression(DW_OP_deref)), !dbg !5529
  %5 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %3) #17, !dbg !5532
  call void @llvm.dbg.value(metadata i32 %5, metadata !5527, metadata !DIExpression()), !dbg !5529
  %6 = load i32, i32* %3, align 4, !dbg !5534
  call void @llvm.dbg.value(metadata i32 %6, metadata !5528, metadata !DIExpression()), !dbg !5529
  %7 = icmp eq i32 %6, 0, !dbg !5536
  br i1 %7, label %8, label %20, !dbg !5537

8:                                                ; preds = %2
  %9 = icmp ne i32 %1, 0, !dbg !5538
  %10 = icmp ult i32 %5, %0
  %11 = select i1 %9, i1 true, i1 %10, !dbg !5541
  br i1 %11, label %14, label %12, !dbg !5541

12:                                               ; preds = %8
  %13 = tail call i32 @xTaskResumeAll() #18, !dbg !5542
  tail call fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %5) #17, !dbg !5544
  br label %22, !dbg !5545

14:                                               ; preds = %8
  %15 = load i8*, i8** @xTimerQueue, align 4, !dbg !5546
  %16 = sub i32 %0, %5, !dbg !5548
  tail call void @vQueueWaitForMessageRestricted(i8* noundef %15, i32 noundef %16) #18, !dbg !5549
  %17 = tail call i32 @xTaskResumeAll() #18, !dbg !5550
  %18 = icmp eq i32 %17, 0, !dbg !5552
  br i1 %18, label %19, label %22, !dbg !5553

19:                                               ; preds = %14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5554
  tail call void asm sideeffect "dsb", ""() #19, !dbg !5554, !srcloc !5557
  tail call void asm sideeffect "isb", ""() #19, !dbg !5554, !srcloc !5558
  br label %22, !dbg !5559

20:                                               ; preds = %2
  %21 = tail call i32 @xTaskResumeAll() #18, !dbg !5560
  br label %22

22:                                               ; preds = %12, %14, %19, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !5562
  ret void, !dbg !5562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessReceivedCommands() unnamed_addr #2 !dbg !5563 {
  %1 = alloca %struct.tmrTimerQueueMessage, align 4
  %2 = alloca i32, align 4
  %3 = bitcast %struct.tmrTimerQueueMessage* %1 to i8*, !dbg !5583
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %3) #19, !dbg !5583
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %1, metadata !5565, metadata !DIExpression()), !dbg !5584
  %4 = bitcast i32* %2 to i8*, !dbg !5585
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !5585
  %5 = load i8*, i8** @xTimerQueue, align 4, !dbg !5586
  %6 = call i32 @xQueueGenericReceive(i8* noundef %5, i8* noundef nonnull %3, i32 noundef 0, i32 noundef 0) #18, !dbg !5586
  %7 = icmp eq i32 %6, 0, !dbg !5587
  br i1 %7, label %63, label %8, !dbg !5588

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 0
  %10 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %1, i32 0, i32 1, i32 0, i32 0
  br label %12, !dbg !5588

12:                                               ; preds = %8, %59
  %13 = load i32, i32* %9, align 4, !dbg !5589
  %14 = icmp sgt i32 %13, -1, !dbg !5592
  br i1 %14, label %15, label %59, !dbg !5593

15:                                               ; preds = %12
  %16 = load %struct.tmrTimerControl*, %struct.tmrTimerControl** %10, align 4, !dbg !5594
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %16, metadata !5579, metadata !DIExpression()), !dbg !5596
  %17 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, i32 4, !dbg !5597
  %18 = load i8*, i8** %17, align 4, !dbg !5597
  %19 = icmp eq i8* %18, null, !dbg !5597
  br i1 %19, label %23, label %20, !dbg !5599

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 1, !dbg !5597
  %22 = call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !5600
  br label %23, !dbg !5602

23:                                               ; preds = %15, %20
  call void @llvm.dbg.value(metadata i32* %2, metadata !5580, metadata !DIExpression(DW_OP_deref)), !dbg !5596
  %24 = call fastcc i32 @prvSampleTimeNow(i32* noundef nonnull %2) #17, !dbg !5603
  call void @llvm.dbg.value(metadata i32 %24, metadata !5582, metadata !DIExpression()), !dbg !5596
  %25 = load i32, i32* %9, align 4, !dbg !5604
  switch i32 %25, label %59 [
    i32 1, label %26
    i32 6, label %26
    i32 2, label %26
    i32 7, label %26
    i32 0, label %26
    i32 5, label %57
    i32 9, label %47
    i32 4, label %47
  ], !dbg !5605

26:                                               ; preds = %23, %23, %23, %23, %23
  %27 = load i32, i32* %11, align 4, !dbg !5606
  %28 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !5609
  %29 = load i32, i32* %28, align 4, !dbg !5609
  %30 = add i32 %29, %27, !dbg !5610
  %31 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %30, i32 noundef %24, i32 noundef %27) #17, !dbg !5611
  %32 = icmp eq i32 %31, 1, !dbg !5612
  br i1 %32, label %33, label %59, !dbg !5613

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 5, !dbg !5614
  %35 = load void (i8*)*, void (i8*)** %34, align 4, !dbg !5614
  %36 = bitcast %struct.tmrTimerControl* %16 to i8*, !dbg !5616
  call void %35(i8* noundef %36) #18, !dbg !5617
  %37 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 3, !dbg !5618
  %38 = load i32, i32* %37, align 4, !dbg !5618
  %39 = icmp eq i32 %38, 1, !dbg !5620
  br i1 %39, label %40, label %59, !dbg !5621

40:                                               ; preds = %33
  %41 = load i32, i32* %11, align 4, !dbg !5622
  %42 = load i32, i32* %28, align 4, !dbg !5624
  %43 = add i32 %42, %41, !dbg !5625
  %44 = call i32 @xTimerGenericCommand(i8* noundef nonnull %36, i32 noundef 0, i32 noundef %43, i32* noundef null, i32 noundef 0) #17, !dbg !5626
  call void @llvm.dbg.value(metadata i32 %44, metadata !5581, metadata !DIExpression()), !dbg !5596
  %45 = icmp eq i32 %44, 0, !dbg !5627
  br i1 %45, label %46, label %59, !dbg !5629

46:                                               ; preds = %40
  call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.46, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 662) #18, !dbg !5630
  br label %59, !dbg !5630

47:                                               ; preds = %23, %23
  %48 = load i32, i32* %11, align 4, !dbg !5632
  %49 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %16, i32 0, i32 2, !dbg !5633
  store i32 %48, i32* %49, align 4, !dbg !5634
  %50 = icmp eq i32 %48, 0, !dbg !5635
  br i1 %50, label %51, label %53, !dbg !5637

51:                                               ; preds = %47
  call void @platform_assert(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.5.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 685) #18, !dbg !5638
  %52 = load i32, i32* %49, align 4, !dbg !5640
  br label %53, !dbg !5638

53:                                               ; preds = %51, %47
  %54 = phi i32 [ %52, %51 ], [ %48, %47 ], !dbg !5640
  %55 = add i32 %54, %24, !dbg !5641
  %56 = call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef nonnull %16, i32 noundef %55, i32 noundef %24, i32 noundef %24) #17, !dbg !5642
  br label %59, !dbg !5643

57:                                               ; preds = %23
  %58 = bitcast %struct.tmrTimerControl* %16 to i8*, !dbg !5644
  call void @vPortFree(i8* noundef %58) #18, !dbg !5645
  br label %59, !dbg !5646

59:                                               ; preds = %40, %46, %53, %57, %26, %33, %23, %12
  %60 = load i8*, i8** @xTimerQueue, align 4, !dbg !5586
  %61 = call i32 @xQueueGenericReceive(i8* noundef %60, i8* noundef nonnull %3, i32 noundef 0, i32 noundef 0) #18, !dbg !5586
  %62 = icmp eq i32 %61, 0, !dbg !5587
  br i1 %62, label %63, label %12, !dbg !5588, !llvm.loop !5647

63:                                               ; preds = %59, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !5649
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %3) #19, !dbg !5649
  ret void, !dbg !5649
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvSampleTimeNow(i32* nocapture noundef writeonly %0) unnamed_addr #2 !dbg !284 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !290, metadata !DIExpression()), !dbg !5650
  %2 = tail call i32 @xTaskGetTickCount() #18, !dbg !5651
  call void @llvm.dbg.value(metadata i32 %2, metadata !291, metadata !DIExpression()), !dbg !5650
  %3 = load i32, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !5652
  %4 = icmp ult i32 %2, %3, !dbg !5654
  br i1 %4, label %5, label %6, !dbg !5655

5:                                                ; preds = %1
  tail call fastcc void @prvSwitchTimerLists() #17, !dbg !5656
  br label %6, !dbg !5658

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 1, %5 ], [ 0, %1 ], !dbg !5659
  store i32 %7, i32* %0, align 4, !dbg !5659
  store i32 %2, i32* @prvSampleTimeNow.xLastTime, align 4, !dbg !5660
  ret i32 %2, !dbg !5661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #2 !dbg !5662 {
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %0, metadata !5667, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata i32 %1, metadata !5668, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata i32 %2, metadata !5669, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata i32 %3, metadata !5670, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata i32 0, metadata !5671, metadata !DIExpression()), !dbg !5672
  %5 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, !dbg !5673
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 0, !dbg !5673
  store i32 %1, i32* %6, align 4, !dbg !5673
  %7 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 1, i32 3, !dbg !5674
  %8 = bitcast i8** %7 to %struct.tmrTimerControl**, !dbg !5674
  store %struct.tmrTimerControl* %0, %struct.tmrTimerControl** %8, align 4, !dbg !5674
  %9 = icmp ugt i32 %1, %2, !dbg !5675
  br i1 %9, label %15, label %10, !dbg !5677

10:                                               ; preds = %4
  %11 = sub i32 %2, %3, !dbg !5678
  %12 = getelementptr inbounds %struct.tmrTimerControl, %struct.tmrTimerControl* %0, i32 0, i32 2, !dbg !5681
  %13 = load i32, i32* %12, align 4, !dbg !5681
  %14 = icmp ult i32 %11, %13, !dbg !5682
  br i1 %14, label %19, label %22, !dbg !5683

15:                                               ; preds = %4
  %16 = icmp uge i32 %2, %3, !dbg !5684
  %17 = icmp ult i32 %1, %3
  %18 = or i1 %16, %17, !dbg !5687
  br i1 %18, label %19, label %22, !dbg !5687

19:                                               ; preds = %15, %10
  %20 = phi %struct.xLIST** [ @pxOverflowTimerList, %10 ], [ @pxCurrentTimerList, %15 ]
  %21 = load %struct.xLIST*, %struct.xLIST** %20, align 4, !dbg !5688
  tail call void @vListInsert(%struct.xLIST* noundef %21, %struct.xLIST_ITEM* noundef nonnull %5) #18, !dbg !5688
  br label %22, !dbg !5689

22:                                               ; preds = %19, %15, %10
  %23 = phi i32 [ 1, %10 ], [ 1, %15 ], [ 0, %19 ], !dbg !5672
  call void @llvm.dbg.value(metadata i32 %23, metadata !5671, metadata !DIExpression()), !dbg !5672
  ret i32 %23, !dbg !5689
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerGenericCommand(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3, i32 noundef %4) local_unnamed_addr #2 !dbg !5690 {
  %6 = alloca %struct.tmrTimerQueueMessage, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5694, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 %1, metadata !5695, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 %2, metadata !5696, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32* %3, metadata !5697, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 %4, metadata !5698, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.value(metadata i32 0, metadata !5699, metadata !DIExpression()), !dbg !5701
  %7 = bitcast %struct.tmrTimerQueueMessage* %6 to i8*, !dbg !5702
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #19, !dbg !5702
  call void @llvm.dbg.declare(metadata %struct.tmrTimerQueueMessage* %6, metadata !5700, metadata !DIExpression()), !dbg !5703
  %8 = load i8*, i8** @xTimerQueue, align 4, !dbg !5704
  %9 = icmp eq i8* %8, null, !dbg !5706
  br i1 %9, label %26, label %10, !dbg !5707

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 0, !dbg !5708
  store i32 %1, i32* %11, align 4, !dbg !5710
  %12 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 0, !dbg !5711
  store i32 %2, i32* %12, align 4, !dbg !5712
  %13 = getelementptr inbounds %struct.tmrTimerQueueMessage, %struct.tmrTimerQueueMessage* %6, i32 0, i32 1, i32 0, i32 1, !dbg !5713
  %14 = bitcast %struct.tmrTimerControl** %13 to i8**, !dbg !5714
  store i8* %0, i8** %14, align 4, !dbg !5714
  %15 = icmp slt i32 %1, 6, !dbg !5715
  br i1 %15, label %16, label %24, !dbg !5717

16:                                               ; preds = %10
  %17 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !5718
  %18 = icmp eq i32 %17, 2, !dbg !5721
  %19 = load i8*, i8** @xTimerQueue, align 4, !dbg !5722
  br i1 %18, label %20, label %22, !dbg !5723

20:                                               ; preds = %16
  %21 = call i32 @xQueueGenericSend(i8* noundef %19, i8* noundef nonnull %7, i32 noundef %4, i32 noundef 0) #18, !dbg !5724
  call void @llvm.dbg.value(metadata i32 %21, metadata !5699, metadata !DIExpression()), !dbg !5701
  br label %26, !dbg !5726

22:                                               ; preds = %16
  %23 = call i32 @xQueueGenericSend(i8* noundef %19, i8* noundef nonnull %7, i32 noundef 0, i32 noundef 0) #18, !dbg !5727
  call void @llvm.dbg.value(metadata i32 %23, metadata !5699, metadata !DIExpression()), !dbg !5701
  br label %26

24:                                               ; preds = %10
  %25 = call i32 @xQueueGenericSendFromISR(i8* noundef nonnull %8, i8* noundef nonnull %7, i32* noundef %3, i32 noundef 0) #18, !dbg !5729
  call void @llvm.dbg.value(metadata i32 %25, metadata !5699, metadata !DIExpression()), !dbg !5701
  br label %26

26:                                               ; preds = %5, %24, %22, %20
  %27 = phi i32 [ %21, %20 ], [ %23, %22 ], [ %25, %24 ], [ 0, %5 ], !dbg !5701
  call void @llvm.dbg.value(metadata i32 %27, metadata !5699, metadata !DIExpression()), !dbg !5701
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #19, !dbg !5731
  ret i32 %27, !dbg !5732
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSwitchTimerLists() unnamed_addr #2 !dbg !5733 {
  %1 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !5740
  %2 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %1, i32 0, i32 0, !dbg !5740
  %3 = load i32, i32* %2, align 4, !dbg !5740
  %4 = icmp eq i32 %3, 0, !dbg !5740
  br i1 %4, label %43, label %5, !dbg !5741

5:                                                ; preds = %0, %38
  %6 = phi %struct.xLIST* [ %39, %38 ], [ %1, %0 ]
  %7 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %6, i32 0, i32 2, i32 1, !dbg !5742
  %8 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %7, align 4, !dbg !5742
  %9 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 0, !dbg !5742
  %10 = load i32, i32* %9, align 4, !dbg !5742
  call void @llvm.dbg.value(metadata i32 %10, metadata !5735, metadata !DIExpression()), !dbg !5744
  %11 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %8, i32 0, i32 3, !dbg !5745
  %12 = load i8*, i8** %11, align 4, !dbg !5745
  call void @llvm.dbg.value(metadata i8* %12, metadata !5738, metadata !DIExpression()), !dbg !5744
  %13 = getelementptr inbounds i8, i8* %12, i32 4, !dbg !5746
  %14 = bitcast i8* %13 to %struct.xLIST_ITEM*, !dbg !5746
  %15 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %14) #18, !dbg !5747
  %16 = getelementptr inbounds i8, i8* %12, i32 36, !dbg !5748
  %17 = bitcast i8* %16 to void (i8*)**, !dbg !5748
  %18 = load void (i8*)*, void (i8*)** %17, align 4, !dbg !5748
  tail call void %18(i8* noundef %12) #18, !dbg !5749
  %19 = getelementptr inbounds i8, i8* %12, i32 28, !dbg !5750
  %20 = bitcast i8* %19 to i32*, !dbg !5750
  %21 = load i32, i32* %20, align 4, !dbg !5750
  %22 = icmp eq i32 %21, 1, !dbg !5752
  br i1 %22, label %23, label %38, !dbg !5753

23:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* %12, metadata !5738, metadata !DIExpression()), !dbg !5744
  %24 = getelementptr inbounds i8, i8* %12, i32 24, !dbg !5754
  %25 = bitcast i8* %24 to i32*, !dbg !5754
  %26 = load i32, i32* %25, align 4, !dbg !5754
  %27 = add i32 %26, %10, !dbg !5756
  call void @llvm.dbg.value(metadata i32 %27, metadata !5736, metadata !DIExpression()), !dbg !5744
  %28 = icmp ugt i32 %27, %10, !dbg !5757
  br i1 %28, label %29, label %34, !dbg !5759

29:                                               ; preds = %23
  %30 = bitcast i8* %13 to i32*, !dbg !5760
  store i32 %27, i32* %30, align 4, !dbg !5760
  %31 = getelementptr inbounds i8, i8* %12, i32 16, !dbg !5762
  %32 = bitcast i8* %31 to i8**, !dbg !5762
  store i8* %12, i8** %32, align 4, !dbg !5762
  %33 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !5763
  tail call void @vListInsert(%struct.xLIST* noundef %33, %struct.xLIST_ITEM* noundef nonnull %14) #18, !dbg !5764
  br label %38, !dbg !5765

34:                                               ; preds = %23
  %35 = tail call i32 @xTimerGenericCommand(i8* noundef nonnull %12, i32 noundef 0, i32 noundef %10, i32* noundef null, i32 noundef 0) #17, !dbg !5766
  call void @llvm.dbg.value(metadata i32 %35, metadata !5739, metadata !DIExpression()), !dbg !5744
  %36 = icmp eq i32 %35, 0, !dbg !5768
  br i1 %36, label %37, label %38, !dbg !5770

37:                                               ; preds = %34
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.46, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 754) #18, !dbg !5771
  br label %38, !dbg !5771

38:                                               ; preds = %34, %37, %5, %29
  %39 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !5740
  %40 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %39, i32 0, i32 0, !dbg !5740
  %41 = load i32, i32* %40, align 4, !dbg !5740
  %42 = icmp eq i32 %41, 0, !dbg !5740
  br i1 %42, label %43, label %5, !dbg !5741, !llvm.loop !5773

43:                                               ; preds = %38, %0
  %44 = phi %struct.xLIST* [ %1, %0 ], [ %39, %38 ], !dbg !5740
  call void @llvm.dbg.value(metadata %struct.xLIST* %44, metadata !5737, metadata !DIExpression()), !dbg !5744
  %45 = load %struct.xLIST*, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !5775
  store %struct.xLIST* %45, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !5776
  store %struct.xLIST* %44, %struct.xLIST** @pxOverflowTimerList, align 4, !dbg !5777
  ret void, !dbg !5778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvProcessExpiredTimer(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !5779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5783, metadata !DIExpression()), !dbg !5787
  call void @llvm.dbg.value(metadata i32 %1, metadata !5784, metadata !DIExpression()), !dbg !5787
  %3 = load %struct.xLIST*, %struct.xLIST** @pxCurrentTimerList, align 4, !dbg !5788
  %4 = getelementptr inbounds %struct.xLIST, %struct.xLIST* %3, i32 0, i32 2, i32 1, !dbg !5788
  %5 = load %struct.xLIST_ITEM*, %struct.xLIST_ITEM** %4, align 4, !dbg !5788
  %6 = getelementptr inbounds %struct.xLIST_ITEM, %struct.xLIST_ITEM* %5, i32 0, i32 3, !dbg !5788
  %7 = load i8*, i8** %6, align 4, !dbg !5788
  call void @llvm.dbg.value(metadata i8* %7, metadata !5786, metadata !DIExpression()), !dbg !5787
  %8 = getelementptr inbounds i8, i8* %7, i32 4, !dbg !5789
  %9 = bitcast i8* %8 to %struct.xLIST_ITEM*, !dbg !5789
  %10 = tail call i32 @uxListRemove(%struct.xLIST_ITEM* noundef nonnull %9) #18, !dbg !5790
  %11 = getelementptr inbounds i8, i8* %7, i32 28, !dbg !5791
  %12 = bitcast i8* %11 to i32*, !dbg !5791
  %13 = load i32, i32* %12, align 4, !dbg !5791
  %14 = icmp eq i32 %13, 1, !dbg !5793
  br i1 %14, label %15, label %27, !dbg !5794

15:                                               ; preds = %2
  %16 = bitcast i8* %7 to %struct.tmrTimerControl*, !dbg !5795
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* %16, metadata !5786, metadata !DIExpression()), !dbg !5787
  %17 = getelementptr inbounds i8, i8* %7, i32 24, !dbg !5796
  %18 = bitcast i8* %17 to i32*, !dbg !5796
  %19 = load i32, i32* %18, align 4, !dbg !5796
  %20 = add i32 %19, %0, !dbg !5799
  %21 = tail call fastcc i32 @prvInsertTimerInActiveList(%struct.tmrTimerControl* noundef %16, i32 noundef %20, i32 noundef %1, i32 noundef %0) #17, !dbg !5800
  %22 = icmp eq i32 %21, 1, !dbg !5801
  br i1 %22, label %23, label %27, !dbg !5802

23:                                               ; preds = %15
  %24 = tail call i32 @xTimerGenericCommand(i8* noundef nonnull %7, i32 noundef 0, i32 noundef %0, i32* noundef null, i32 noundef 0) #17, !dbg !5803
  call void @llvm.dbg.value(metadata i32 %24, metadata !5785, metadata !DIExpression()), !dbg !5787
  %25 = icmp eq i32 %24, 0, !dbg !5805
  br i1 %25, label %26, label %27, !dbg !5807

26:                                               ; preds = %23
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4.46, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 400) #18, !dbg !5808
  br label %27, !dbg !5808

27:                                               ; preds = %23, %26, %2, %15
  %28 = getelementptr inbounds i8, i8* %7, i32 36, !dbg !5810
  %29 = bitcast i8* %28 to void (i8*)**, !dbg !5810
  %30 = load void (i8*)*, void (i8*)** %29, align 4, !dbg !5810
  tail call void %30(i8* noundef nonnull %7) #18, !dbg !5811
  ret void, !dbg !5812
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @xTimerCreate(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, void (i8*)* noundef %4) local_unnamed_addr #2 !dbg !5813 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5817, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.value(metadata i32 %1, metadata !5818, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.value(metadata i32 %2, metadata !5819, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.value(metadata i8* %3, metadata !5820, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.value(metadata void (i8*)* %4, metadata !5821, metadata !DIExpression()), !dbg !5823
  %6 = icmp eq i32 %1, 0, !dbg !5824
  br i1 %6, label %22, label %7, !dbg !5826

7:                                                ; preds = %5
  %8 = tail call i8* @pvPortMalloc(i32 noundef 44) #18, !dbg !5827
  call void @llvm.dbg.value(metadata i8* %8, metadata !5822, metadata !DIExpression()), !dbg !5823
  %9 = icmp eq i8* %8, null, !dbg !5829
  br i1 %9, label %23, label %10, !dbg !5831

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %8, metadata !5822, metadata !DIExpression()), !dbg !5823
  tail call fastcc void @prvCheckForValidListAndQueue() #17, !dbg !5832
  %11 = bitcast i8* %8 to i8**, !dbg !5834
  store i8* %0, i8** %11, align 4, !dbg !5835
  %12 = getelementptr inbounds i8, i8* %8, i32 24, !dbg !5836
  %13 = bitcast i8* %12 to i32*, !dbg !5836
  store i32 %1, i32* %13, align 4, !dbg !5837
  %14 = getelementptr inbounds i8, i8* %8, i32 28, !dbg !5838
  %15 = bitcast i8* %14 to i32*, !dbg !5838
  store i32 %2, i32* %15, align 4, !dbg !5839
  %16 = getelementptr inbounds i8, i8* %8, i32 32, !dbg !5840
  %17 = bitcast i8* %16 to i8**, !dbg !5840
  store i8* %3, i8** %17, align 4, !dbg !5841
  %18 = getelementptr inbounds i8, i8* %8, i32 36, !dbg !5842
  %19 = bitcast i8* %18 to void (i8*)**, !dbg !5842
  store void (i8*)* %4, void (i8*)** %19, align 4, !dbg !5843
  %20 = getelementptr inbounds i8, i8* %8, i32 4, !dbg !5844
  %21 = bitcast i8* %20 to %struct.xLIST_ITEM*, !dbg !5844
  tail call void @vListInitialiseItem(%struct.xLIST_ITEM* noundef nonnull %21) #18, !dbg !5845
  br label %23, !dbg !5846

22:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.tmrTimerControl* undef, metadata !5822, metadata !DIExpression()), !dbg !5823
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.50, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 310) #18, !dbg !5847
  br label %23, !dbg !5847

23:                                               ; preds = %7, %10, %22
  %24 = phi i8* [ null, %22 ], [ null, %7 ], [ %8, %10 ]
  ret i8* %24, !dbg !5850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @pcTimerGetTimerName(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !5851 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5855, metadata !DIExpression()), !dbg !5857
  call void @llvm.dbg.value(metadata i8* %0, metadata !5856, metadata !DIExpression()), !dbg !5857
  %2 = bitcast i8* %0 to i8**, !dbg !5858
  %3 = load i8*, i8** %2, align 4, !dbg !5858
  ret i8* %3, !dbg !5859
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @xTimerIsTimerActive(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !5860 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5864, metadata !DIExpression()), !dbg !5867
  call void @llvm.dbg.value(metadata i8* %0, metadata !5866, metadata !DIExpression()), !dbg !5867
  tail call void @vPortEnterCritical() #18, !dbg !5868
  %2 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !5869
  %3 = bitcast i8* %2 to i8**, !dbg !5869
  %4 = load i8*, i8** %3, align 4, !dbg !5869
  %5 = icmp ne i8* %4, null, !dbg !5869
  %6 = zext i1 %5 to i32, !dbg !5871
  call void @llvm.dbg.value(metadata i32 %6, metadata !5865, metadata !DIExpression()), !dbg !5867
  tail call void @vPortExitCritical() #18, !dbg !5872
  ret i32 %6, !dbg !5873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @pvTimerGetTimerID(i8* nocapture noundef readonly %0) local_unnamed_addr #7 !dbg !5874 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5879, metadata !DIExpression()), !dbg !5881
  call void @llvm.dbg.value(metadata i8* %0, metadata !5880, metadata !DIExpression()), !dbg !5881
  %2 = getelementptr inbounds i8, i8* %0, i32 32, !dbg !5882
  %3 = bitcast i8* %2 to i8**, !dbg !5882
  %4 = load i8*, i8** %3, align 4, !dbg !5882
  ret i8* %4, !dbg !5883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local nonnull i32* @pxPortInitialiseStack(i32* noundef writeonly %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #8 !dbg !5884 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !5888, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !5889, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata i8* %2, metadata !5890, metadata !DIExpression()), !dbg !5891
  %4 = getelementptr inbounds i32, i32* %0, i32 -1, !dbg !5892
  call void @llvm.dbg.value(metadata i32* %4, metadata !5888, metadata !DIExpression()), !dbg !5891
  store i32 16777216, i32* %4, align 4, !dbg !5893
  %5 = getelementptr inbounds i32, i32* %0, i32 -2, !dbg !5894
  call void @llvm.dbg.value(metadata i32* %5, metadata !5888, metadata !DIExpression()), !dbg !5891
  %6 = ptrtoint void (i8*)* %1 to i32, !dbg !5895
  store i32 %6, i32* %5, align 4, !dbg !5896
  %7 = getelementptr inbounds i32, i32* %0, i32 -3, !dbg !5897
  call void @llvm.dbg.value(metadata i32* %7, metadata !5888, metadata !DIExpression()), !dbg !5891
  store i32 ptrtoint (void ()* @prvTaskExitError to i32), i32* %7, align 4, !dbg !5898
  %8 = getelementptr inbounds i32, i32* %0, i32 -8, !dbg !5899
  call void @llvm.dbg.value(metadata i32* %8, metadata !5888, metadata !DIExpression()), !dbg !5891
  %9 = ptrtoint i8* %2 to i32, !dbg !5900
  store i32 %9, i32* %8, align 4, !dbg !5901
  %10 = getelementptr inbounds i32, i32* %0, i32 -9, !dbg !5902
  call void @llvm.dbg.value(metadata i32* %10, metadata !5888, metadata !DIExpression()), !dbg !5891
  store i32 -3, i32* %10, align 4, !dbg !5903
  %11 = getelementptr inbounds i32, i32* %0, i32 -17, !dbg !5904
  call void @llvm.dbg.value(metadata i32* %11, metadata !5888, metadata !DIExpression()), !dbg !5891
  ret i32* %11, !dbg !5905
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @prvTaskExitError() #4 !dbg !5906 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !5907
  %2 = icmp eq i32 %1, -1, !dbg !5907
  br i1 %2, label %4, label %3, !dbg !5909

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.54, i32 0, i32 0), i32 noundef 260) #18, !dbg !5910
  br label %4, !dbg !5910

4:                                                ; preds = %3, %0
  %5 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !5912, !srcloc !5917
  call void @llvm.dbg.value(metadata i32 %5, metadata !5915, metadata !DIExpression()) #19, !dbg !5918
  br label %6, !dbg !5919

6:                                                ; preds = %6, %4
  br label %6, !dbg !5920, !llvm.loop !5923
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortCurrentTaskStackOverflowCheck() local_unnamed_addr #2 !dbg !5926 {
  %1 = tail call i32 @uxTaskGetBottomOfStack(i8* noundef null) #18, !dbg !5930
  call void @llvm.dbg.value(metadata i32 %1, metadata !5928, metadata !DIExpression()), !dbg !5931
  %2 = tail call i32 @hal_dwt_request_watchpoint(i32 noundef 3, i32 noundef %1, i32 noundef 3, i32 noundef 6) #18, !dbg !5932
  call void @llvm.dbg.value(metadata i32 %2, metadata !5929, metadata !DIExpression()), !dbg !5931
  ret void, !dbg !5933
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @SVC_Handler() #12 section ".ramTEXT" !dbg !5934 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\0A\09cpsie i \09\09\09\09\09\09\0A\09bl hal_dwt_init                 \0A\09bl vPortCurrentTaskStackOverflowCheck \0A\09ldr\09r3, pxCurrentTCBConst2\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\0A\09msr psp, r0\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\0A\09mov r0, #0 \09\09\09\09\09\09\0A\09msr\09basepri, r0\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\0ApxCurrentTCBConst2: .word pxCurrentTCB\09\09\09\09\0A", ""() #19, !dbg !5935, !srcloc !5936
  unreachable, !dbg !5937
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @xPortStartScheduler() local_unnamed_addr #4 !dbg !5938 {
  %1 = alloca i32, align 4
  %2 = alloca i8, align 1
  %3 = bitcast i32* %1 to i8*, !dbg !5945
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5945
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5940, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -536812544 to i8*), metadata !5942, metadata !DIExpression()), !dbg !5947
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !5948
  call void @llvm.dbg.declare(metadata i8* %2, metadata !5944, metadata !DIExpression()), !dbg !5949
  %4 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !5950
  %5 = zext i8 %4 to i32, !dbg !5950
  store volatile i32 %5, i32* %1, align 4, !dbg !5951
  store volatile i8 -1, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !5952
  %6 = load volatile i8, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !5953
  store volatile i8 %6, i8* %2, align 1, !dbg !5954
  %7 = load volatile i8, i8* %2, align 1, !dbg !5955
  %8 = and i8 %7, -128, !dbg !5956
  store i8 %8, i8* @ucMaxSysCallPriority, align 1, !dbg !5957
  %9 = load volatile i8, i8* %2, align 1, !dbg !5958
  %10 = icmp slt i8 %9, 0, !dbg !5959
  br i1 %10, label %11, label %21, !dbg !5960

11:                                               ; preds = %0, %11
  %12 = phi i32 [ %13, %11 ], [ 7, %0 ], !dbg !5961
  %13 = add i32 %12, -1, !dbg !5961
  %14 = load volatile i8, i8* %2, align 1, !dbg !5963
  %15 = shl i8 %14, 1, !dbg !5963
  store volatile i8 %15, i8* %2, align 1, !dbg !5963
  %16 = load volatile i8, i8* %2, align 1, !dbg !5958
  %17 = icmp slt i8 %16, 0, !dbg !5959
  br i1 %17, label %11, label %18, !dbg !5960, !llvm.loop !5964

18:                                               ; preds = %11
  %19 = shl i32 %13, 8, !dbg !5966
  %20 = and i32 %19, 1792, !dbg !5966
  br label %21, !dbg !5966

21:                                               ; preds = %18, %0
  %22 = phi i32 [ %20, %18 ], [ 1792, %0 ]
  store i32 %22, i32* @ulMaxPRIGROUPValue, align 4, !dbg !5967
  %23 = load volatile i32, i32* %1, align 4, !dbg !5968
  %24 = trunc i32 %23 to i8, !dbg !5968
  store volatile i8 %24, i8* inttoptr (i32 -536812544 to i8*), align 1024, !dbg !5969
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !5970
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5970
  %25 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !5971
  %26 = or i32 %25, 14680064, !dbg !5971
  store volatile i32 %26, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !5971
  %27 = load volatile i32, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !5972
  %28 = or i32 %27, -2147483648, !dbg !5972
  store volatile i32 %28, i32* inttoptr (i32 -536810208 to i32*), align 32, !dbg !5972
  tail call void @vPortSetupTimerInterrupt() #17, !dbg !5973
  store i32 0, i32* @uxCriticalNesting, align 4, !dbg !5974
  tail call void @vPortEnableVFP() #17, !dbg !5975
  %29 = load volatile i32, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !5976
  %30 = or i32 %29, -1073741824, !dbg !5976
  store volatile i32 %30, i32* inttoptr (i32 -536809676 to i32*), align 4, !dbg !5976
  tail call void @prvPortStartFirstTask() #17, !dbg !5977
  tail call void @prvTaskExitError() #17, !dbg !5978
  unreachable, !dbg !5979
}

; Function Attrs: naked noinline nounwind optsize
define internal void @vPortEnableVFP() #12 !dbg !5980 {
  tail call void asm sideeffect "\09ldr.w r0, =0xE000ED88\09\09\0A\09ldr r1, [r0]\09\09\09\09\0A\09\09\09\09\09\09\09\09\0A\09orr r1, r1, #( 0xf << 20 )\09\0A\09str r1, [r0]\09\09\09\09\0A\09bx r14\09\09\09\09\09\09", ""() #19, !dbg !5981, !srcloc !5982
  unreachable, !dbg !5983
}

; Function Attrs: naked noinline nounwind optsize
define internal void @prvPortStartFirstTask() #12 !dbg !5984 {
  tail call void asm sideeffect " ldr r0, =0xE000ED08 \09\0A ldr r0, [r0] \09\09\09\0A ldr r0, [r0] \09\09\09\0A msr msp, r0\09\09\09\0A cpsie i\09\09\09\09\0A cpsie f\09\09\09\09\0A dsb\09\09\09\09\09\0A isb\09\09\09\09\09\0A svc 0\09\09\09\09\09\0A nop\09\09\09\09\09\0A", ""() #19, !dbg !5985, !srcloc !5986
  unreachable, !dbg !5987
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEndScheduler() local_unnamed_addr #2 !dbg !5988 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !5989
  %2 = icmp eq i32 %1, 1000, !dbg !5989
  br i1 %2, label %4, label %3, !dbg !5991

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.59, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.54, i32 0, i32 0), i32 noundef 421) #18, !dbg !5992
  br label %4, !dbg !5992

4:                                                ; preds = %3, %0
  ret void, !dbg !5994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortEnterCritical() local_unnamed_addr #2 !dbg !5995 {
  %1 = tail call i32 asm sideeffect "\09mov $0, $1\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $0\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,i"(i32 128) #19, !dbg !5996, !srcloc !5917
  call void @llvm.dbg.value(metadata i32 %1, metadata !5915, metadata !DIExpression()) #19, !dbg !5998
  %2 = load i32, i32* @uxCriticalNesting, align 4, !dbg !5999
  %3 = add i32 %2, 1, !dbg !5999
  store i32 %3, i32* @uxCriticalNesting, align 4, !dbg !5999
  %4 = icmp eq i32 %2, 0, !dbg !6000
  br i1 %4, label %5, label %10, !dbg !6002

5:                                                ; preds = %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6003
  %7 = and i32 %6, 255, !dbg !6003
  %8 = icmp eq i32 %7, 0, !dbg !6003
  br i1 %8, label %10, label %9, !dbg !6006

9:                                                ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.62, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.54, i32 0, i32 0), i32 noundef 437) #18, !dbg !6007
  br label %10, !dbg !6007

10:                                               ; preds = %5, %9, %0
  ret void, !dbg !6009
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortExitCritical() local_unnamed_addr #2 !dbg !6010 {
  %1 = load i32, i32* @uxCriticalNesting, align 4, !dbg !6011
  %2 = icmp eq i32 %1, 0, !dbg !6011
  br i1 %2, label %3, label %5, !dbg !6013

3:                                                ; preds = %0
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3.65, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.54, i32 0, i32 0), i32 noundef 444) #18, !dbg !6014
  %4 = load i32, i32* @uxCriticalNesting, align 4, !dbg !6016
  br label %5, !dbg !6014

5:                                                ; preds = %3, %0
  %6 = phi i32 [ %4, %3 ], [ %1, %0 ], !dbg !6016
  %7 = add i32 %6, -1, !dbg !6016
  store i32 %7, i32* @uxCriticalNesting, align 4, !dbg !6016
  %8 = icmp eq i32 %7, 0, !dbg !6017
  br i1 %8, label %9, label %10, !dbg !6019

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 0, metadata !6020, metadata !DIExpression()) #19, !dbg !6023
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 0) #19, !dbg !6026, !srcloc !6027
  br label %10, !dbg !6028

10:                                               ; preds = %9, %5
  ret void, !dbg !6029
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @PendSV_Handler() #12 section ".ramTEXT" !dbg !6030 {
  tail call void asm sideeffect "\09cpsid i\09\09\09\09\09\09\09\09\0A\09push {lr}\09\09\09\09\09\09\09\0A\09blx Flash_ReturnReady\09\09\09\09\0A\09pop  {lr}\09\09\09\09\09\09\09\0A\09cpsie i \09\09\09\09\09\09\09\0A\09mrs r0, psp\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr\09r3, pxCurrentTCBConst\09\09\09\0A\09ldr\09r2, [r3]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vstmdbeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09str r0, [r2]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09stmdb sp!, {r3}\09\09\09\09\09\09\0A\09mov r0, $0 \09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\0A   isb\09\09\09\09\09\09\09\09\09\0A\09bl vTaskSwitchContext\09\09\09\09\0A\09bl vPortCurrentTaskStackOverflowCheck\0A\09mov r0, #0\09\09\09\09\09\09\09\0A\09msr basepri, r0\09\09\09\09\09\09\0A\09ldmia sp!, {r3}\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldr r1, [r3]\09\09\09\09\09\09\0A\09ldr r0, [r1]\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09ldmia r0!, {r4-r11, r14}\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09tst r14, #0x10\09\09\09\09\09\09\0A\09it eq\09\09\09\09\09\09\09\09\0A\09vldmiaeq r0!, {s16-s31}\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09msr psp, r0\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09bx r14\09\09\09\09\09\09\09\09\0A\09\09\09\09\09\09\09\09\09\09\0A\09.align 2\09\09\09\09\09\09\09\0ApxCurrentTCBConst: .word pxCurrentTCB\09\0A", "i"(i32 128) #19, !dbg !6031, !srcloc !6032
  unreachable, !dbg !6033
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SysTick_Handler() local_unnamed_addr #2 section ".ramTEXT" !dbg !6034 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !6037, !srcloc !6043
  call void @llvm.dbg.value(metadata i32 undef, metadata !6040, metadata !DIExpression()) #19, !dbg !6044
  call void @llvm.dbg.value(metadata i32 undef, metadata !6041, metadata !DIExpression()) #19, !dbg !6044
  call void @llvm.dbg.value(metadata i32 undef, metadata !6036, metadata !DIExpression()), !dbg !6045
  tail call void @Flash_ReturnReady() #18, !dbg !6046
  %2 = tail call i32 @xTaskIncrementTick() #18, !dbg !6048
  %3 = icmp eq i32 %2, 0, !dbg !6050
  br i1 %3, label %5, label %4, !dbg !6051

4:                                                ; preds = %0
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6052
  br label %5, !dbg !6054

5:                                                ; preds = %4, %0
  %6 = extractvalue { i32, i32 } %1, 0, !dbg !6037
  call void @llvm.dbg.value(metadata i32 %6, metadata !6040, metadata !DIExpression()) #19, !dbg !6044
  call void @llvm.dbg.value(metadata i32 %6, metadata !6036, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.value(metadata i32 undef, metadata !6020, metadata !DIExpression()) #19, !dbg !6055
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #19, !dbg !6057, !srcloc !6027
  ret void, !dbg !6058
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortValidateInterruptPriority() local_unnamed_addr #2 !dbg !6059 {
  %1 = tail call i32 asm sideeffect "mrs $0, ipsr", "=r"() #19, !dbg !6063, !srcloc !6064
  call void @llvm.dbg.value(metadata i32 %1, metadata !6061, metadata !DIExpression()), !dbg !6065
  %2 = icmp ugt i32 %1, 15, !dbg !6066
  br i1 %2, label %3, label %9, !dbg !6068

3:                                                ; preds = %0
  %4 = getelementptr inbounds i8, i8* inttoptr (i32 -536812560 to i8*), i32 %1, !dbg !6069
  %5 = load volatile i8, i8* %4, align 1, !dbg !6069
  call void @llvm.dbg.value(metadata i8 %5, metadata !6062, metadata !DIExpression()), !dbg !6065
  %6 = load i8, i8* @ucMaxSysCallPriority, align 1, !dbg !6071
  %7 = icmp ult i8 %5, %6, !dbg !6071
  br i1 %7, label %8, label %9, !dbg !6073

8:                                                ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.54, i32 0, i32 0), i32 noundef 794) #18, !dbg !6074
  br label %9, !dbg !6074

9:                                                ; preds = %3, %8, %0
  %10 = load volatile i32, i32* inttoptr (i32 -536810228 to i32*), align 4, !dbg !6076
  %11 = and i32 %10, 1792, !dbg !6076
  %12 = load i32, i32* @ulMaxPRIGROUPValue, align 4, !dbg !6076
  %13 = icmp ugt i32 %11, %12, !dbg !6076
  br i1 %13, label %14, label %15, !dbg !6078

14:                                               ; preds = %9
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5.69, i32 0, i32 0), i8* noundef getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1.54, i32 0, i32 0), i32 noundef 810) #18, !dbg !6079
  br label %15, !dbg !6079

15:                                               ; preds = %14, %9
  ret void, !dbg !6081
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMalloc(i32 noundef %0) local_unnamed_addr #2 !dbg !6082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6086, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata i8* null, metadata !6090, metadata !DIExpression()), !dbg !6091
  tail call void @vTaskSuspendAll() #18, !dbg !6092
  %2 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !6093
  %3 = icmp eq %struct.A_BLOCK_LINK* %2, null, !dbg !6096
  br i1 %3, label %4, label %5, !dbg !6097

4:                                                ; preds = %1
  tail call fastcc void @prvHeapInit() #17, !dbg !6098
  br label %5, !dbg !6100

5:                                                ; preds = %1, %4
  %6 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !6101
  %7 = select i1 %6, i32 -2147483648, i32 0, !dbg !6101
  %8 = and i32 %7, %0, !dbg !6103
  %9 = icmp ne i32 %8, 0, !dbg !6104
  %10 = icmp eq i32 %0, 0
  %11 = or i1 %10, %9, !dbg !6105
  br i1 %11, label %84, label %12, !dbg !6105

12:                                               ; preds = %5
  %13 = add i32 %0, 8, !dbg !6106
  call void @llvm.dbg.value(metadata i32 %13, metadata !6086, metadata !DIExpression()), !dbg !6091
  %14 = and i32 %0, 7, !dbg !6110
  %15 = icmp eq i32 %14, 0, !dbg !6112
  %16 = add i32 %0, 16, !dbg !6113
  %17 = and i32 %16, -8, !dbg !6113
  %18 = select i1 %15, i32 %13, i32 %17, !dbg !6113
  call void @llvm.dbg.value(metadata i32 %18, metadata !6086, metadata !DIExpression()), !dbg !6091
  %19 = icmp eq i32 %18, 0, !dbg !6114
  %20 = load i32, i32* @xFreeBytesRemaining, align 4
  %21 = icmp ugt i32 %18, %20
  %22 = select i1 %19, i1 true, i1 %21, !dbg !6116
  br i1 %22, label %84, label %23, !dbg !6116

23:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !6088, metadata !DIExpression()), !dbg !6091
  %24 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !6117
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !6087, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !6088, metadata !DIExpression()), !dbg !6091
  %25 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 1, !dbg !6119
  %26 = load i32, i32* %25, align 4, !dbg !6119
  %27 = icmp ult i32 %26, %18, !dbg !6120
  br i1 %27, label %28, label %42, !dbg !6121

28:                                               ; preds = %23
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !6088, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %24, metadata !6087, metadata !DIExpression()), !dbg !6091
  %29 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %24, i32 0, i32 0, !dbg !6122
  %30 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %29, align 4, !dbg !6122
  %31 = icmp eq %struct.A_BLOCK_LINK* %30, null, !dbg !6123
  br i1 %31, label %42, label %32, !dbg !6124, !llvm.loop !6125

32:                                               ; preds = %28, %38
  %33 = phi %struct.A_BLOCK_LINK* [ %40, %38 ], [ %30, %28 ]
  %34 = phi %struct.A_BLOCK_LINK* [ %33, %38 ], [ %24, %28 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !6087, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !6088, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !6087, metadata !DIExpression()), !dbg !6091
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 1, !dbg !6119
  %36 = load i32, i32* %35, align 4, !dbg !6119
  %37 = icmp ult i32 %36, %18, !dbg !6120
  br i1 %37, label %38, label %42, !dbg !6121, !llvm.loop !6125

38:                                               ; preds = %32
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %34, metadata !6088, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %33, metadata !6087, metadata !DIExpression()), !dbg !6091
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %33, i32 0, i32 0, !dbg !6122
  %40 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %39, align 4, !dbg !6122
  %41 = icmp eq %struct.A_BLOCK_LINK* %40, null, !dbg !6123
  br i1 %41, label %42, label %32, !dbg !6124, !llvm.loop !6125

42:                                               ; preds = %32, %38, %28, %23
  %43 = phi %struct.A_BLOCK_LINK* [ %24, %23 ], [ %24, %28 ], [ %33, %38 ], [ %33, %32 ]
  %44 = phi %struct.A_BLOCK_LINK* [ @xStart, %23 ], [ @xStart, %28 ], [ %34, %38 ], [ %34, %32 ], !dbg !6127
  %45 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 1, !dbg !6119
  %46 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !6128
  %47 = icmp eq %struct.A_BLOCK_LINK* %43, %46, !dbg !6130
  br i1 %47, label %84, label %48, !dbg !6131

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %44, i32 0, i32 0, !dbg !6132
  %50 = bitcast %struct.A_BLOCK_LINK* %44 to i8**, !dbg !6132
  %51 = load i8*, i8** %50, align 4, !dbg !6132
  %52 = getelementptr inbounds i8, i8* %51, i32 8, !dbg !6134
  call void @llvm.dbg.value(metadata i8* %52, metadata !6090, metadata !DIExpression()), !dbg !6091
  %53 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %43, i32 0, i32 0, !dbg !6135
  %54 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %53, align 4, !dbg !6135
  store %struct.A_BLOCK_LINK* %54, %struct.A_BLOCK_LINK** %49, align 4, !dbg !6136
  %55 = load i32, i32* %45, align 4, !dbg !6137
  %56 = sub i32 %55, %18, !dbg !6139
  %57 = icmp ugt i32 %56, 16, !dbg !6140
  br i1 %57, label %58, label %73, !dbg !6141

58:                                               ; preds = %48
  %59 = bitcast %struct.A_BLOCK_LINK* %43 to i8*, !dbg !6142
  %60 = getelementptr inbounds i8, i8* %59, i32 %18, !dbg !6144
  %61 = bitcast i8* %60 to %struct.A_BLOCK_LINK*, !dbg !6145
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %61, metadata !6089, metadata !DIExpression()), !dbg !6091
  %62 = ptrtoint i8* %60 to i32, !dbg !6146
  %63 = and i32 %62, 7, !dbg !6146
  %64 = icmp eq i32 %63, 0, !dbg !6146
  br i1 %64, label %68, label %65, !dbg !6148

65:                                               ; preds = %58
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.2.72, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 257) #18, !dbg !6149
  %66 = load i32, i32* %45, align 4, !dbg !6151
  %67 = sub i32 %66, %18, !dbg !6152
  br label %68, !dbg !6149

68:                                               ; preds = %65, %58
  %69 = phi i32 [ %67, %65 ], [ %56, %58 ], !dbg !6152
  %70 = getelementptr inbounds i8, i8* %60, i32 4, !dbg !6153
  %71 = bitcast i8* %70 to i32*, !dbg !6153
  store i32 %69, i32* %71, align 4, !dbg !6154
  store i32 %18, i32* %45, align 4, !dbg !6155
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %61) #17, !dbg !6156
  %72 = load i32, i32* %45, align 4, !dbg !6157
  br label %73, !dbg !6158

73:                                               ; preds = %48, %68
  %74 = phi i32 [ %55, %48 ], [ %72, %68 ], !dbg !6157
  %75 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !6159
  %76 = sub i32 %75, %74, !dbg !6159
  store i32 %76, i32* @xFreeBytesRemaining, align 4, !dbg !6159
  %77 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !6160
  %78 = icmp ult i32 %76, %77, !dbg !6162
  br i1 %78, label %79, label %80, !dbg !6163

79:                                               ; preds = %73
  store i32 %76, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !6164
  br label %80, !dbg !6166

80:                                               ; preds = %73, %79
  %81 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !6167
  %82 = select i1 %81, i32 -2147483648, i32 0, !dbg !6167
  %83 = or i32 %74, %82, !dbg !6168
  store i32 %83, i32* %45, align 4, !dbg !6168
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** %53, align 4, !dbg !6169
  br label %84, !dbg !6170

84:                                               ; preds = %5, %42, %80, %12
  %85 = phi i8* [ %52, %80 ], [ null, %42 ], [ null, %12 ], [ null, %5 ], !dbg !6091
  call void @llvm.dbg.value(metadata i8* %85, metadata !6090, metadata !DIExpression()), !dbg !6091
  %86 = tail call i32 @xTaskResumeAll() #18, !dbg !6171
  %87 = ptrtoint i8* %85 to i32, !dbg !6172
  %88 = and i32 %87, 7, !dbg !6172
  %89 = icmp eq i32 %88, 0, !dbg !6172
  br i1 %89, label %91, label %90, !dbg !6174

90:                                               ; preds = %84
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3.74, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 321) #18, !dbg !6175
  br label %91, !dbg !6175

91:                                               ; preds = %90, %84
  ret i8* %85, !dbg !6177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @prvHeapInit() unnamed_addr #10 !dbg !6178 {
  call void @llvm.dbg.value(metadata i32 65536, metadata !6183, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.value(metadata i32 ptrtoint ([65536 x i8]* @ucHeap to i32), metadata !6182, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536), metadata !6183, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.value(metadata i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), metadata !6182, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !6181, metadata !DIExpression()), !dbg !6184
  store %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 0), align 4, !dbg !6185
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* @xStart, i32 0, i32 1), align 4, !dbg !6186
  call void @llvm.dbg.value(metadata i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), metadata !6182, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.value(metadata i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), metadata !6182, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.value(metadata i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), metadata !6182, metadata !DIExpression()), !dbg !6184
  store %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !6187
  store i32 0, i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !6188
  store %struct.A_BLOCK_LINK* null, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 8, !dbg !6189
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), metadata !6180, metadata !DIExpression()), !dbg !6184
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 1), align 4, !dbg !6190
  %1 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4, !dbg !6191
  store %struct.A_BLOCK_LINK* %1, %struct.A_BLOCK_LINK** getelementptr inbounds (%struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* inttoptr (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)) to %struct.A_BLOCK_LINK*), i32 0, i32 0), align 4, !dbg !6192
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !6193
  store i32 sub (i32 and (i32 add (i32 add (i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32)), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 sub (i32 65536, i32 sub (i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32 65536)), i32 -8), i32 -8), i32 select (i1 icmp ne (i32 and (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 0), i32 and (i32 add (i32 ptrtoint ([65536 x i8]* @ucHeap to i32), i32 7), i32 -8), i32 ptrtoint ([65536 x i8]* @ucHeap to i32))), i32* @xFreeBytesRemaining, align 4, !dbg !6194
  store i1 true, i1* @xBlockAllocatedBit, align 4, !dbg !6195
  ret void, !dbg !6196
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef %0) unnamed_addr #11 !dbg !6197 {
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %0, metadata !6201, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* @xStart, metadata !6202, metadata !DIExpression()), !dbg !6204
  br label %2, !dbg !6205

2:                                                ; preds = %2, %1
  %3 = phi %struct.A_BLOCK_LINK* [ @xStart, %1 ], [ %5, %2 ], !dbg !6207
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !6202, metadata !DIExpression()), !dbg !6204
  %4 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !6208
  %5 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %4, align 4, !dbg !6208
  %6 = icmp ult %struct.A_BLOCK_LINK* %5, %0, !dbg !6210
  br i1 %6, label %2, label %7, !dbg !6211, !llvm.loop !6212

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 0, !dbg !6208
  %9 = bitcast %struct.A_BLOCK_LINK* %3 to i8*, !dbg !6214
  call void @llvm.dbg.value(metadata i8* %9, metadata !6203, metadata !DIExpression()), !dbg !6204
  %10 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %3, i32 0, i32 1, !dbg !6215
  %11 = load i32, i32* %10, align 4, !dbg !6215
  %12 = getelementptr inbounds i8, i8* %9, i32 %11, !dbg !6217
  %13 = bitcast %struct.A_BLOCK_LINK* %0 to i8*, !dbg !6218
  %14 = icmp eq i8* %12, %13, !dbg !6219
  %15 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4, !dbg !6204
  br i1 %14, label %17, label %19, !dbg !6220

17:                                               ; preds = %7
  %18 = add i32 %16, %11, !dbg !6221
  store i32 %18, i32* %10, align 4, !dbg !6221
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %3, metadata !6201, metadata !DIExpression()), !dbg !6204
  br label %19, !dbg !6223

19:                                               ; preds = %7, %17
  %20 = phi i8* [ %9, %17 ], [ %13, %7 ], !dbg !6224
  %21 = phi i32 [ %18, %17 ], [ %16, %7 ], !dbg !6225
  %22 = phi %struct.A_BLOCK_LINK* [ %3, %17 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %22, metadata !6201, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.value(metadata i8* %20, metadata !6203, metadata !DIExpression()), !dbg !6204
  %23 = getelementptr inbounds i8, i8* %20, i32 %21, !dbg !6227
  %24 = bitcast %struct.A_BLOCK_LINK* %5 to i8*, !dbg !6228
  %25 = icmp ne i8* %23, %24, !dbg !6229
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** @pxEnd, align 4
  %27 = icmp eq %struct.A_BLOCK_LINK* %5, %26
  %28 = select i1 %25, i1 true, i1 %27, !dbg !6230
  br i1 %28, label %37, label %29, !dbg !6230

29:                                               ; preds = %19
  %30 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 1, !dbg !6225
  %31 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %5, i32 0, i32 1, !dbg !6231
  %32 = load i32, i32* %31, align 4, !dbg !6231
  %33 = add i32 %32, %21, !dbg !6235
  store i32 %33, i32* %30, align 4, !dbg !6235
  %34 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %8, align 4, !dbg !6236
  %35 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %34, i32 0, i32 0, !dbg !6237
  %36 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %35, align 4, !dbg !6237
  br label %37, !dbg !6238

37:                                               ; preds = %19, %29
  %38 = phi %struct.A_BLOCK_LINK* [ %36, %29 ], [ %5, %19 ]
  %39 = getelementptr inbounds %struct.A_BLOCK_LINK, %struct.A_BLOCK_LINK* %22, i32 0, i32 0, !dbg !6239
  store %struct.A_BLOCK_LINK* %38, %struct.A_BLOCK_LINK** %39, align 4, !dbg !6239
  %40 = icmp eq %struct.A_BLOCK_LINK* %3, %22, !dbg !6240
  br i1 %40, label %42, label %41, !dbg !6242

41:                                               ; preds = %37
  store %struct.A_BLOCK_LINK* %22, %struct.A_BLOCK_LINK** %8, align 4, !dbg !6243
  br label %42, !dbg !6245

42:                                               ; preds = %37, %41
  ret void, !dbg !6246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFree(i8* noundef %0) local_unnamed_addr #2 !dbg !6247 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6249, metadata !DIExpression()), !dbg !6252
  call void @llvm.dbg.value(metadata i8* %0, metadata !6250, metadata !DIExpression()), !dbg !6252
  %2 = icmp eq i8* %0, null, !dbg !6253
  br i1 %2, label %35, label %3, !dbg !6255

3:                                                ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !6256
  call void @llvm.dbg.value(metadata i8* %4, metadata !6250, metadata !DIExpression()), !dbg !6252
  %5 = bitcast i8* %4 to %struct.A_BLOCK_LINK*, !dbg !6258
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* %5, metadata !6251, metadata !DIExpression()), !dbg !6252
  %6 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !6259
  %7 = bitcast i8* %6 to i32*, !dbg !6259
  %8 = load i32, i32* %7, align 4, !dbg !6259
  %9 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !6259
  %10 = select i1 %9, i32 -2147483648, i32 0, !dbg !6259
  %11 = and i32 %10, %8, !dbg !6259
  %12 = icmp eq i32 %11, 0, !dbg !6259
  br i1 %12, label %13, label %14, !dbg !6261

13:                                               ; preds = %3
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 341) #18, !dbg !6262
  br label %14, !dbg !6262

14:                                               ; preds = %13, %3
  %15 = bitcast i8* %4 to %struct.A_BLOCK_LINK**, !dbg !6264
  %16 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !6264
  %17 = icmp eq %struct.A_BLOCK_LINK* %16, null, !dbg !6264
  br i1 %17, label %19, label %18, !dbg !6266

18:                                               ; preds = %14
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 342) #18, !dbg !6267
  br label %19, !dbg !6267

19:                                               ; preds = %18, %14
  %20 = load i32, i32* %7, align 4, !dbg !6269
  %21 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !6271
  %22 = select i1 %21, i32 -2147483648, i32 0, !dbg !6271
  %23 = and i32 %22, %20, !dbg !6272
  %24 = icmp eq i32 %23, 0, !dbg !6273
  br i1 %24, label %35, label %25, !dbg !6274

25:                                               ; preds = %19
  %26 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %15, align 4, !dbg !6275
  %27 = icmp eq %struct.A_BLOCK_LINK* %26, null, !dbg !6278
  br i1 %27, label %28, label %35, !dbg !6279

28:                                               ; preds = %25
  %29 = xor i32 %22, -1, !dbg !6280
  %30 = and i32 %20, %29, !dbg !6282
  store i32 %30, i32* %7, align 4, !dbg !6282
  tail call void @vTaskSuspendAll() #18, !dbg !6283
  %31 = load i32, i32* %7, align 4, !dbg !6284
  %32 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !6286
  %33 = add i32 %32, %31, !dbg !6286
  store i32 %33, i32* @xFreeBytesRemaining, align 4, !dbg !6286
  tail call fastcc void @prvInsertBlockIntoFreeList(%struct.A_BLOCK_LINK* noundef nonnull %5) #17, !dbg !6287
  %34 = tail call i32 @xTaskResumeAll() #18, !dbg !6288
  br label %35, !dbg !6289

35:                                               ; preds = %25, %28, %19, %1
  ret void, !dbg !6290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetFreeHeapSize() local_unnamed_addr #7 !dbg !6291 {
  %1 = load i32, i32* @xFreeBytesRemaining, align 4, !dbg !6294
  ret i32 %1, !dbg !6295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @xPortGetMinimumEverFreeHeapSize() local_unnamed_addr #7 !dbg !6296 {
  %1 = load i32, i32* @xMinimumEverFreeBytesRemaining, align 4, !dbg !6297
  ret i32 %1, !dbg !6298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @vPortInitialiseBlocks() local_unnamed_addr #13 !dbg !6299 {
  ret void, !dbg !6300
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6301 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6305, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata i32 %1, metadata !6306, metadata !DIExpression()), !dbg !6308
  %3 = mul i32 %1, %0, !dbg !6309
  %4 = tail call i8* @pvPortMalloc(i32 noundef %3) #17, !dbg !6310
  call void @llvm.dbg.value(metadata i8* %4, metadata !6307, metadata !DIExpression()), !dbg !6308
  %5 = icmp eq i8* %4, null, !dbg !6311
  br i1 %5, label %8, label %6, !dbg !6313

6:                                                ; preds = %2
  %7 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef %3) #18, !dbg !6314
  br label %8, !dbg !6316

8:                                                ; preds = %6, %2
  ret i8* %4, !dbg !6317
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6318 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6322, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata i32 %1, metadata !6323, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata i8* null, metadata !6324, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata i32 0, metadata !6325, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata i8* %0, metadata !6326, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata %struct.A_BLOCK_LINK* null, metadata !6327, metadata !DIExpression()), !dbg !6328
  %3 = tail call i8* @pvPortCalloc(i32 noundef %1, i32 noundef 1) #17, !dbg !6329
  call void @llvm.dbg.value(metadata i8* %3, metadata !6324, metadata !DIExpression()), !dbg !6328
  %4 = icmp eq i8* %0, null, !dbg !6330
  br i1 %4, label %29, label %5, !dbg !6332

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 -8, !dbg !6333
  call void @llvm.dbg.value(metadata i8* %6, metadata !6326, metadata !DIExpression()), !dbg !6328
  call void @llvm.dbg.value(metadata i8* %6, metadata !6327, metadata !DIExpression()), !dbg !6328
  %7 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !6335
  %8 = bitcast i8* %7 to i32*, !dbg !6335
  %9 = load i32, i32* %8, align 4, !dbg !6335
  %10 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !6335
  %11 = select i1 %10, i32 -2147483648, i32 0, !dbg !6335
  %12 = and i32 %11, %9, !dbg !6335
  %13 = icmp eq i32 %12, 0, !dbg !6335
  br i1 %13, label %14, label %15, !dbg !6337

14:                                               ; preds = %5
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 546) #18, !dbg !6338
  br label %15, !dbg !6338

15:                                               ; preds = %14, %5
  %16 = bitcast i8* %6 to %struct.A_BLOCK_LINK**, !dbg !6340
  %17 = load %struct.A_BLOCK_LINK*, %struct.A_BLOCK_LINK** %16, align 4, !dbg !6340
  %18 = icmp eq %struct.A_BLOCK_LINK* %17, null, !dbg !6340
  br i1 %18, label %20, label %19, !dbg !6342

19:                                               ; preds = %15
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 547) #18, !dbg !6343
  br label %20, !dbg !6343

20:                                               ; preds = %19, %15
  %21 = load i32, i32* %8, align 4, !dbg !6345
  %22 = load i1, i1* @xBlockAllocatedBit, align 4, !dbg !6346
  %23 = select i1 %22, i32 2147483647, i32 -1, !dbg !6347
  %24 = and i32 %23, %21, !dbg !6348
  call void @llvm.dbg.value(metadata i32 %24, metadata !6325, metadata !DIExpression()), !dbg !6328
  %25 = add i32 %24, -8, !dbg !6349
  call void @llvm.dbg.value(metadata i32 %25, metadata !6325, metadata !DIExpression()), !dbg !6328
  %26 = icmp ult i32 %25, %1, !dbg !6350
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = tail call i8* @memcpy(i8* noundef %3, i8* noundef nonnull %0, i32 noundef %27) #18, !dbg !6352
  tail call void @vPortFree(i8* noundef nonnull %0) #17, !dbg !6353
  br label %29, !dbg !6354

29:                                               ; preds = %20, %2
  ret i8* %3, !dbg !6355
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @pvPortMallocNC(i32 noundef %0) local_unnamed_addr #2 !dbg !6356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6358, metadata !DIExpression()), !dbg !6359
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #17, !dbg !6360
  ret i8* %2, !dbg !6361
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vPortFreeNC(i8* noundef %0) local_unnamed_addr #2 !dbg !6362 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6364, metadata !DIExpression()), !dbg !6365
  tail call void @vPortFree(i8* noundef %0) #17, !dbg !6366
  ret void, !dbg !6367
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_malloc(i32 noundef %0) local_unnamed_addr #2 !dbg !6368 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6370, metadata !DIExpression()), !dbg !6371
  %2 = tail call i8* @pvPortMalloc(i32 noundef %0) #17, !dbg !6372
  ret i8* %2, !dbg !6373
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6376, metadata !DIExpression()), !dbg !6378
  call void @llvm.dbg.value(metadata i32 %1, metadata !6377, metadata !DIExpression()), !dbg !6378
  %3 = tail call i8* @pvPortCalloc(i32 noundef %0, i32 noundef %1) #17, !dbg !6379
  ret i8* %3, !dbg !6380
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @__wrap_realloc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6381 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6383, metadata !DIExpression()), !dbg !6385
  call void @llvm.dbg.value(metadata i32 %1, metadata !6384, metadata !DIExpression()), !dbg !6385
  %3 = tail call i8* @pvPortRealloc(i8* noundef %0, i32 noundef %1) #17, !dbg !6386
  ret i8* %3, !dbg !6387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @__wrap_free(i8* noundef %0) local_unnamed_addr #2 !dbg !6388 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6390, metadata !DIExpression()), !dbg !6391
  tail call void @vPortFree(i8* noundef %0) #17, !dbg !6392
  ret void, !dbg !6393
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @vPortSetupTimerInterrupt() local_unnamed_addr #0 !dbg !6394 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !6395
  %2 = udiv i32 %1, 1000, !dbg !6396
  %3 = add nsw i32 %2, -1, !dbg !6397
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !6398
  store volatile i32 7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !6399
  ret void, !dbg !6400
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @abort() local_unnamed_addr #4 !dbg !6401 {
  tail call void asm sideeffect "cpsid i", ""() #19, !dbg !6402, !srcloc !6403
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6404
  %2 = or i32 %1, 8, !dbg !6404
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6404
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !6405
  br label %3, !dbg !6406

3:                                                ; preds = %3, %0
  br label %3, !dbg !6407, !llvm.loop !6410
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @platform_assert(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #4 !dbg !6413 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6417, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.value(metadata i8* %1, metadata !6418, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.value(metadata i32 %2, metadata !6419, metadata !DIExpression()), !dbg !6420
  tail call void asm sideeffect "cpsid i", ""() #19, !dbg !6421, !srcloc !6422
  %4 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6423
  %5 = or i32 %4, 8, !dbg !6423
  store volatile i32 %5, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6423
  store i1 true, i1* @assert_expr.0, align 4, !dbg !6424
  store i8* %0, i8** @assert_expr.1, align 4, !dbg !6425
  store i8* %1, i8** @assert_expr.2, align 4, !dbg !6426
  store i32 %2, i32* @assert_expr.3, align 4, !dbg !6427
  store volatile i32 1, i32* inttoptr (i32 -15 to i32*), align 4, !dbg !6428
  br label %6, !dbg !6429

6:                                                ; preds = %6, %3
  br label %6, !dbg !6430, !llvm.loop !6433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @exception_dump_config(i32 noundef %0) local_unnamed_addr #8 !dbg !6436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6438, metadata !DIExpression()), !dbg !6439
  store i32 %0, i32* @reboot_flag, align 4, !dbg !6440
  ret void, !dbg !6441
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local zeroext i1 @exception_register_callbacks(%struct.exception_config_type* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !6442 {
  call void @llvm.dbg.value(metadata %struct.exception_config_type* %0, metadata !6447, metadata !DIExpression()), !dbg !6449
  %2 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !6450
  %3 = icmp sgt i32 %2, 5, !dbg !6452
  br i1 %3, label %30, label %4, !dbg !6453

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !6448, metadata !DIExpression()), !dbg !6449
  %5 = icmp sgt i32 %2, 0, !dbg !6454
  %6 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 0
  %7 = load void ()*, void ()** %6, align 4
  br i1 %5, label %8, label %23, !dbg !6458

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1
  br label %10, !dbg !6458

10:                                               ; preds = %8, %20
  %11 = phi i32 [ 0, %8 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6448, metadata !DIExpression()), !dbg !6449
  %12 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 0, !dbg !6459
  %13 = load void ()*, void ()** %12, align 4, !dbg !6459
  %14 = icmp eq void ()* %13, %7, !dbg !6462
  br i1 %14, label %15, label %20, !dbg !6463

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %11, i32 1, !dbg !6464
  %17 = load void ()*, void ()** %16, align 4, !dbg !6464
  %18 = load void ()*, void ()** %9, align 4, !dbg !6465
  %19 = icmp eq void ()* %17, %18, !dbg !6466
  br i1 %19, label %30, label %20, !dbg !6467

20:                                               ; preds = %10, %15
  %21 = add nuw nsw i32 %11, 1, !dbg !6468
  call void @llvm.dbg.value(metadata i32 %21, metadata !6448, metadata !DIExpression()), !dbg !6449
  %22 = icmp eq i32 %21, %2, !dbg !6454
  br i1 %22, label %23, label %10, !dbg !6458, !llvm.loop !6469

23:                                               ; preds = %20, %4
  %24 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 0, !dbg !6471
  store void ()* %7, void ()** %24, align 4, !dbg !6472
  %25 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %0, i32 0, i32 1, !dbg !6473
  %26 = load void ()*, void ()** %25, align 4, !dbg !6473
  %27 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %2, i32 1, !dbg !6474
  store void ()* %26, void ()** %27, align 4, !dbg !6475
  %28 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !6476
  %29 = add nsw i32 %28, 1, !dbg !6476
  store i32 %29, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !6476
  br label %30, !dbg !6477

30:                                               ; preds = %15, %1, %23
  %31 = phi i1 [ true, %23 ], [ false, %1 ], [ false, %15 ], !dbg !6478
  ret i1 %31, !dbg !6479
}

; Function Attrs: noinline nounwind optsize
define dso_local void @exception_init() local_unnamed_addr #2 section ".ramTEXT" !dbg !6480 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6483
  %2 = and i32 %1, -9, !dbg !6483
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6483
  tail call void @Flash_ReturnReady() #18, !dbg !6484
  call void @llvm.dbg.value(metadata i32 0, metadata !6482, metadata !DIExpression()), !dbg !6485
  %3 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !6486
  %4 = icmp sgt i32 %3, 0, !dbg !6489
  br i1 %4, label %5, label %17, !dbg !6490

5:                                                ; preds = %0, %13
  %6 = phi i32 [ %14, %13 ], [ %3, %0 ]
  %7 = phi i32 [ %15, %13 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6482, metadata !DIExpression()), !dbg !6485
  %8 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %7, i32 0, !dbg !6491
  %9 = load void ()*, void ()** %8, align 4, !dbg !6491
  %10 = icmp eq void ()* %9, null, !dbg !6494
  br i1 %10, label %13, label %11, !dbg !6495

11:                                               ; preds = %5
  tail call void %9() #18, !dbg !6496
  %12 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !6486
  br label %13, !dbg !6498

13:                                               ; preds = %5, %11
  %14 = phi i32 [ %6, %5 ], [ %12, %11 ], !dbg !6486
  %15 = add nuw nsw i32 %7, 1, !dbg !6499
  call void @llvm.dbg.value(metadata i32 %15, metadata !6482, metadata !DIExpression()), !dbg !6485
  %16 = icmp slt i32 %15, %14, !dbg !6489
  br i1 %16, label %5, label %17, !dbg !6490, !llvm.loop !6500

17:                                               ; preds = %13, %0
  %18 = load i1, i1* @assert_expr.0, align 4, !dbg !6502
  br i1 %18, label %19, label %24, !dbg !6504

19:                                               ; preds = %17
  %20 = load i8*, i8** @assert_expr.1, align 4, !dbg !6505
  %21 = load i8*, i8** @assert_expr.2, align 4, !dbg !6507
  %22 = load i32, i32* @assert_expr.3, align 4, !dbg !6508
  %23 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.83, i32 0, i32 0), i8* noundef %20, i8* noundef %21, i32 noundef %22) #18, !dbg !6509
  br label %24, !dbg !6510

24:                                               ; preds = %19, %17
  ret void, !dbg !6511
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @NMI_Handler() local_unnamed_addr #13 !dbg !6512 {
  ret void, !dbg !6513
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printUsageErrorMsg(i32 noundef %0) local_unnamed_addr #2 !dbg !6514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6516, metadata !DIExpression()), !dbg !6517
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.84, i32 0, i32 0)) #18, !dbg !6518
  call void @llvm.dbg.value(metadata i32 %0, metadata !6516, metadata !DIExpression(DW_OP_constu, 16, DW_OP_shr, DW_OP_stack_value)), !dbg !6517
  %3 = and i32 %0, 33554432, !dbg !6519
  %4 = icmp eq i32 %3, 0, !dbg !6519
  br i1 %4, label %7, label %5, !dbg !6521

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.85, i32 0, i32 0)) #18, !dbg !6522
  br label %7, !dbg !6524

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16777216, !dbg !6525
  %9 = icmp eq i32 %8, 0, !dbg !6525
  br i1 %9, label %12, label %10, !dbg !6527

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.86, i32 0, i32 0)) #18, !dbg !6528
  br label %12, !dbg !6530

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 524288, !dbg !6531
  %14 = icmp eq i32 %13, 0, !dbg !6531
  br i1 %14, label %17, label %15, !dbg !6533

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.87, i32 0, i32 0)) #18, !dbg !6534
  br label %17, !dbg !6536

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 262144, !dbg !6537
  %19 = icmp eq i32 %18, 0, !dbg !6537
  br i1 %19, label %22, label %20, !dbg !6539

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.88, i32 0, i32 0)) #18, !dbg !6540
  br label %22, !dbg !6542

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 131072, !dbg !6543
  %24 = icmp eq i32 %23, 0, !dbg !6543
  br i1 %24, label %27, label %25, !dbg !6545

25:                                               ; preds = %22
  %26 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.89, i32 0, i32 0)) #18, !dbg !6546
  br label %27, !dbg !6548

27:                                               ; preds = %25, %22
  %28 = and i32 %0, 65536, !dbg !6549
  %29 = icmp eq i32 %28, 0, !dbg !6549
  br i1 %29, label %32, label %30, !dbg !6551

30:                                               ; preds = %27
  %31 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.90, i32 0, i32 0)) #18, !dbg !6552
  br label %32, !dbg !6554

32:                                               ; preds = %30, %27
  ret void, !dbg !6555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printMemoryManagementErrorMsg(i32 noundef %0) local_unnamed_addr #2 !dbg !6556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6558, metadata !DIExpression()), !dbg !6559
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8.91, i32 0, i32 0)) #18, !dbg !6560
  call void @llvm.dbg.value(metadata i32 %0, metadata !6558, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !6559
  %3 = and i32 %0, 32, !dbg !6561
  %4 = icmp eq i32 %3, 0, !dbg !6563
  br i1 %4, label %7, label %5, !dbg !6564

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.9.92, i32 0, i32 0)) #18, !dbg !6565
  br label %7, !dbg !6567

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 16, !dbg !6568
  %9 = icmp eq i32 %8, 0, !dbg !6570
  br i1 %9, label %12, label %10, !dbg !6571

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.10.93, i32 0, i32 0)) #18, !dbg !6572
  br label %12, !dbg !6574

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 8, !dbg !6575
  %14 = icmp eq i32 %13, 0, !dbg !6577
  br i1 %14, label %17, label %15, !dbg !6578

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.11.94, i32 0, i32 0)) #18, !dbg !6579
  br label %17, !dbg !6581

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 2, !dbg !6582
  %19 = icmp eq i32 %18, 0, !dbg !6584
  br i1 %19, label %23, label %20, !dbg !6585

20:                                               ; preds = %17
  %21 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6586
  %22 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.95, i32 0, i32 0), i32 noundef %21) #18, !dbg !6588
  br label %23, !dbg !6589

23:                                               ; preds = %20, %17
  %24 = and i32 %0, 1, !dbg !6590
  %25 = icmp eq i32 %24, 0, !dbg !6592
  br i1 %25, label %28, label %26, !dbg !6593

26:                                               ; preds = %23
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.13.96, i32 0, i32 0)) #18, !dbg !6594
  br label %28, !dbg !6596

28:                                               ; preds = %26, %23
  %29 = and i32 %0, 128, !dbg !6597
  %30 = icmp eq i32 %29, 0, !dbg !6599
  br i1 %30, label %34, label %31, !dbg !6600

31:                                               ; preds = %28
  %32 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6601
  %33 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.97, i32 0, i32 0), i32 noundef %32) #18, !dbg !6603
  br label %34, !dbg !6604

34:                                               ; preds = %31, %28
  ret void, !dbg !6605
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printBusFaultErrorMsg(i32 noundef %0) local_unnamed_addr #2 !dbg !6606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6608, metadata !DIExpression()), !dbg !6609
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.98, i32 0, i32 0)) #18, !dbg !6610
  call void @llvm.dbg.value(metadata i32 %0, metadata !6608, metadata !DIExpression(DW_OP_constu, 65280, DW_OP_and, DW_OP_stack_value)), !dbg !6609
  call void @llvm.dbg.value(metadata i32 %0, metadata !6608, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !6609
  %3 = and i32 %0, 8192, !dbg !6611
  %4 = icmp eq i32 %3, 0, !dbg !6611
  br i1 %4, label %7, label %5, !dbg !6613

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16.99, i32 0, i32 0)) #18, !dbg !6614
  br label %7, !dbg !6616

7:                                                ; preds = %5, %1
  %8 = and i32 %0, 4096, !dbg !6617
  %9 = icmp eq i32 %8, 0, !dbg !6617
  br i1 %9, label %12, label %10, !dbg !6619

10:                                               ; preds = %7
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.17.100, i32 0, i32 0)) #18, !dbg !6620
  br label %12, !dbg !6622

12:                                               ; preds = %10, %7
  %13 = and i32 %0, 2048, !dbg !6623
  %14 = icmp eq i32 %13, 0, !dbg !6623
  br i1 %14, label %17, label %15, !dbg !6625

15:                                               ; preds = %12
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18.101, i32 0, i32 0)) #18, !dbg !6626
  br label %17, !dbg !6628

17:                                               ; preds = %15, %12
  %18 = and i32 %0, 1024, !dbg !6629
  %19 = icmp eq i32 %18, 0, !dbg !6629
  br i1 %19, label %22, label %20, !dbg !6631

20:                                               ; preds = %17
  %21 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19.102, i32 0, i32 0)) #18, !dbg !6632
  br label %22, !dbg !6634

22:                                               ; preds = %20, %17
  %23 = and i32 %0, 512, !dbg !6635
  %24 = icmp eq i32 %23, 0, !dbg !6635
  br i1 %24, label %28, label %25, !dbg !6637

25:                                               ; preds = %22
  %26 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6638
  %27 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.20.103, i32 0, i32 0), i32 noundef %26) #18, !dbg !6640
  br label %28, !dbg !6641

28:                                               ; preds = %25, %22
  %29 = and i32 %0, 256, !dbg !6642
  %30 = icmp eq i32 %29, 0, !dbg !6642
  br i1 %30, label %33, label %31, !dbg !6644

31:                                               ; preds = %28
  %32 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.21.104, i32 0, i32 0)) #18, !dbg !6645
  br label %33, !dbg !6647

33:                                               ; preds = %31, %28
  %34 = and i32 %0, 32768, !dbg !6648
  %35 = icmp eq i32 %34, 0, !dbg !6648
  br i1 %35, label %39, label %36, !dbg !6650

36:                                               ; preds = %33
  %37 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6651
  %38 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22.105, i32 0, i32 0), i32 noundef %37) #18, !dbg !6653
  br label %39, !dbg !6654

39:                                               ; preds = %36, %33
  ret void, !dbg !6655
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @exception_reboot() local_unnamed_addr #2 !dbg !6656 {
  ret void, !dbg !6657
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stackDump(i32* noundef %0) local_unnamed_addr #2 !dbg !6658 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6662, metadata !DIExpression()), !dbg !6663
  %2 = load i32, i32* %0, align 4, !dbg !6664
  store i32 %2, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 0), align 4, !dbg !6665
  %3 = getelementptr inbounds i32, i32* %0, i32 1, !dbg !6666
  %4 = load i32, i32* %3, align 4, !dbg !6666
  store i32 %4, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !6667
  %5 = getelementptr inbounds i32, i32* %0, i32 2, !dbg !6668
  %6 = load i32, i32* %5, align 4, !dbg !6668
  store i32 %6, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !6669
  %7 = getelementptr inbounds i32, i32* %0, i32 3, !dbg !6670
  %8 = load i32, i32* %7, align 4, !dbg !6670
  store i32 %8, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !6671
  %9 = getelementptr inbounds i32, i32* %0, i32 4, !dbg !6672
  %10 = load i32, i32* %9, align 4, !dbg !6672
  store i32 %10, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !6673
  %11 = ptrtoint i32* %0 to i32, !dbg !6674
  %12 = add i32 %11, 32, !dbg !6675
  store i32 %12, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !6676
  %13 = getelementptr inbounds i32, i32* %0, i32 5, !dbg !6677
  %14 = load i32, i32* %13, align 4, !dbg !6677
  store i32 %14, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !6678
  %15 = getelementptr inbounds i32, i32* %0, i32 6, !dbg !6679
  %16 = load i32, i32* %15, align 4, !dbg !6679
  store i32 %16, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !6680
  %17 = getelementptr inbounds i32, i32* %0, i32 7, !dbg !6681
  %18 = load i32, i32* %17, align 4, !dbg !6681
  store i32 %18, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !6682
  %19 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !6683
  %20 = and i32 %19, 16, !dbg !6685
  %21 = icmp eq i32 %20, 0, !dbg !6686
  br i1 %21, label %22, label %58, !dbg !6687

22:                                               ; preds = %1
  %23 = getelementptr inbounds i32, i32* %0, i32 8, !dbg !6688
  %24 = load i32, i32* %23, align 4, !dbg !6688
  store i32 %24, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !6690
  %25 = getelementptr inbounds i32, i32* %0, i32 9, !dbg !6691
  %26 = load i32, i32* %25, align 4, !dbg !6691
  store i32 %26, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !6692
  %27 = getelementptr inbounds i32, i32* %0, i32 10, !dbg !6693
  %28 = load i32, i32* %27, align 4, !dbg !6693
  store i32 %28, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !6694
  %29 = getelementptr inbounds i32, i32* %0, i32 11, !dbg !6695
  %30 = load i32, i32* %29, align 4, !dbg !6695
  store i32 %30, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !6696
  %31 = getelementptr inbounds i32, i32* %0, i32 12, !dbg !6697
  %32 = load i32, i32* %31, align 4, !dbg !6697
  store i32 %32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !6698
  %33 = getelementptr inbounds i32, i32* %0, i32 13, !dbg !6699
  %34 = load i32, i32* %33, align 4, !dbg !6699
  store i32 %34, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !6700
  %35 = getelementptr inbounds i32, i32* %0, i32 14, !dbg !6701
  %36 = load i32, i32* %35, align 4, !dbg !6701
  store i32 %36, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !6702
  %37 = getelementptr inbounds i32, i32* %0, i32 15, !dbg !6703
  %38 = load i32, i32* %37, align 4, !dbg !6703
  store i32 %38, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !6704
  %39 = getelementptr inbounds i32, i32* %0, i32 16, !dbg !6705
  %40 = load i32, i32* %39, align 4, !dbg !6705
  store i32 %40, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !6706
  %41 = getelementptr inbounds i32, i32* %0, i32 17, !dbg !6707
  %42 = load i32, i32* %41, align 4, !dbg !6707
  store i32 %42, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !6708
  %43 = getelementptr inbounds i32, i32* %0, i32 18, !dbg !6709
  %44 = load i32, i32* %43, align 4, !dbg !6709
  store i32 %44, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !6710
  %45 = getelementptr inbounds i32, i32* %0, i32 19, !dbg !6711
  %46 = load i32, i32* %45, align 4, !dbg !6711
  store i32 %46, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !6712
  %47 = getelementptr inbounds i32, i32* %0, i32 20, !dbg !6713
  %48 = load i32, i32* %47, align 4, !dbg !6713
  store i32 %48, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !6714
  %49 = getelementptr inbounds i32, i32* %0, i32 21, !dbg !6715
  %50 = load i32, i32* %49, align 4, !dbg !6715
  store i32 %50, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !6716
  %51 = getelementptr inbounds i32, i32* %0, i32 22, !dbg !6717
  %52 = load i32, i32* %51, align 4, !dbg !6717
  store i32 %52, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !6718
  %53 = getelementptr inbounds i32, i32* %0, i32 23, !dbg !6719
  %54 = load i32, i32* %53, align 4, !dbg !6719
  store i32 %54, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !6720
  %55 = getelementptr inbounds i32, i32* %0, i32 24, !dbg !6721
  %56 = load i32, i32* %55, align 4, !dbg !6721
  store i32 %56, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !6722
  %57 = add i32 %11, 104, !dbg !6723
  store i32 %57, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !6723
  br label %58, !dbg !6724

58:                                               ; preds = %22, %1
  %59 = phi i32 [ %57, %22 ], [ %12, %1 ]
  %60 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6725
  %61 = and i32 %60, 512, !dbg !6727
  %62 = icmp eq i32 %61, 0, !dbg !6727
  %63 = and i32 %18, 512
  %64 = icmp eq i32 %63, 0
  %65 = select i1 %62, i1 true, i1 %64, !dbg !6728
  br i1 %65, label %68, label %66, !dbg !6728

66:                                               ; preds = %58
  %67 = add i32 %59, 4, !dbg !6729
  store i32 %67, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !6729
  br label %68, !dbg !6731

68:                                               ; preds = %66, %58
  %69 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23.106, i32 0, i32 0), i32 noundef %2) #18, !dbg !6732
  %70 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 1), align 4, !dbg !6733
  %71 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24.107, i32 0, i32 0), i32 noundef %70) #18, !dbg !6734
  %72 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 2), align 4, !dbg !6735
  %73 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25.108, i32 0, i32 0), i32 noundef %72) #18, !dbg !6736
  %74 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 3), align 4, !dbg !6737
  %75 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26.109, i32 0, i32 0), i32 noundef %74) #18, !dbg !6738
  %76 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 4), align 4, !dbg !6739
  %77 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i32 0, i32 0), i32 noundef %76) #18, !dbg !6740
  %78 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 5), align 4, !dbg !6741
  %79 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0), i32 noundef %78) #18, !dbg !6742
  %80 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 6), align 4, !dbg !6743
  %81 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i32 noundef %80) #18, !dbg !6744
  %82 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 7), align 4, !dbg !6745
  %83 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i32 0, i32 0), i32 noundef %82) #18, !dbg !6746
  %84 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 8), align 4, !dbg !6747
  %85 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0), i32 noundef %84) #18, !dbg !6748
  %86 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 9), align 4, !dbg !6749
  %87 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0), i32 noundef %86) #18, !dbg !6750
  %88 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 10), align 4, !dbg !6751
  %89 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 noundef %88) #18, !dbg !6752
  %90 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 11), align 4, !dbg !6753
  %91 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), i32 noundef %90) #18, !dbg !6754
  %92 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 12), align 4, !dbg !6755
  %93 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0), i32 noundef %92) #18, !dbg !6756
  %94 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 14), align 4, !dbg !6757
  %95 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i32 0, i32 0), i32 noundef %94) #18, !dbg !6758
  %96 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 15), align 4, !dbg !6759
  %97 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i32 noundef %96) #18, !dbg !6760
  %98 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 16), align 4, !dbg !6761
  %99 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0), i32 noundef %98) #18, !dbg !6762
  %100 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !6763
  %101 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.39, i32 0, i32 0), i32 noundef %100) #18, !dbg !6764
  %102 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 18), align 4, !dbg !6765
  %103 = and i32 %102, 4, !dbg !6767
  %104 = icmp eq i32 %103, 0, !dbg !6767
  br i1 %104, label %108, label %105, !dbg !6768

105:                                              ; preds = %68
  %106 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !6769
  %107 = or i32 %106, 2, !dbg !6769
  store i32 %107, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !6769
  br label %108, !dbg !6771

108:                                              ; preds = %68, %105
  %109 = phi i32* [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), %105 ], [ getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), %68 ]
  %110 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !6772
  store i32 %110, i32* %109, align 4, !dbg !6772
  %111 = and i32 %102, 16, !dbg !6773
  %112 = icmp eq i32 %111, 0, !dbg !6775
  br i1 %112, label %113, label %182, !dbg !6776

113:                                              ; preds = %108
  %114 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !6777
  %115 = or i32 %114, 4, !dbg !6777
  store i32 %115, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !6777
  %116 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 22), align 4, !dbg !6779
  %117 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i32 0, i32 0), i32 noundef %116) #18, !dbg !6780
  %118 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 23), align 4, !dbg !6781
  %119 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i32 0, i32 0), i32 noundef %118) #18, !dbg !6782
  %120 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 24), align 4, !dbg !6783
  %121 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0), i32 noundef %120) #18, !dbg !6784
  %122 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 25), align 4, !dbg !6785
  %123 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43.110, i32 0, i32 0), i32 noundef %122) #18, !dbg !6786
  %124 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 26), align 4, !dbg !6787
  %125 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0), i32 noundef %124) #18, !dbg !6788
  %126 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 27), align 4, !dbg !6789
  %127 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0), i32 noundef %126) #18, !dbg !6790
  %128 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 28), align 4, !dbg !6791
  %129 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i32 noundef %128) #18, !dbg !6792
  %130 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 29), align 4, !dbg !6793
  %131 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i32 0, i32 0), i32 noundef %130) #18, !dbg !6794
  %132 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 30), align 4, !dbg !6795
  %133 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i32 noundef %132) #18, !dbg !6796
  %134 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 31), align 4, !dbg !6797
  %135 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.49, i32 0, i32 0), i32 noundef %134) #18, !dbg !6798
  %136 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 32), align 4, !dbg !6799
  %137 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0), i32 noundef %136) #18, !dbg !6800
  %138 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 33), align 4, !dbg !6801
  %139 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i32 noundef %138) #18, !dbg !6802
  %140 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 34), align 4, !dbg !6803
  %141 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i32 0, i32 0), i32 noundef %140) #18, !dbg !6804
  %142 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 35), align 4, !dbg !6805
  %143 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.53, i32 0, i32 0), i32 noundef %142) #18, !dbg !6806
  %144 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 36), align 4, !dbg !6807
  %145 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i32 noundef %144) #18, !dbg !6808
  %146 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 37), align 4, !dbg !6809
  %147 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0), i32 noundef %146) #18, !dbg !6810
  %148 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 38), align 4, !dbg !6811
  %149 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i32 0, i32 0), i32 noundef %148) #18, !dbg !6812
  %150 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 39), align 4, !dbg !6813
  %151 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i32 0, i32 0), i32 noundef %150) #18, !dbg !6814
  %152 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 40), align 4, !dbg !6815
  %153 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0), i32 noundef %152) #18, !dbg !6816
  %154 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 41), align 4, !dbg !6817
  %155 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.59.111, i32 0, i32 0), i32 noundef %154) #18, !dbg !6818
  %156 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 42), align 4, !dbg !6819
  %157 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0), i32 noundef %156) #18, !dbg !6820
  %158 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 43), align 4, !dbg !6821
  %159 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i32 0, i32 0), i32 noundef %158) #18, !dbg !6822
  %160 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 44), align 4, !dbg !6823
  %161 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i32 noundef %160) #18, !dbg !6824
  %162 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 45), align 4, !dbg !6825
  %163 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), i32 noundef %162) #18, !dbg !6826
  %164 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 46), align 4, !dbg !6827
  %165 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i32 0, i32 0), i32 noundef %164) #18, !dbg !6828
  %166 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 47), align 4, !dbg !6829
  %167 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i32 noundef %166) #18, !dbg !6830
  %168 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 48), align 4, !dbg !6831
  %169 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i32 0, i32 0), i32 noundef %168) #18, !dbg !6832
  %170 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 49), align 4, !dbg !6833
  %171 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i32 0, i32 0), i32 noundef %170) #18, !dbg !6834
  %172 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 50), align 4, !dbg !6835
  %173 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i32 0, i32 0), i32 noundef %172) #18, !dbg !6836
  %174 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 51), align 4, !dbg !6837
  %175 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i32 0, i32 0), i32 noundef %174) #18, !dbg !6838
  %176 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 52), align 4, !dbg !6839
  %177 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.70, i32 0, i32 0), i32 noundef %176) #18, !dbg !6840
  %178 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 53), align 4, !dbg !6841
  %179 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i32 0, i32 0), i32 noundef %178) #18, !dbg !6842
  %180 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 21), align 4, !dbg !6843
  %181 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i32 0, i32 0), i32 noundef %180) #18, !dbg !6844
  br label %182, !dbg !6845

182:                                              ; preds = %113, %108
  %183 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 17), align 4, !dbg !6846
  %184 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.73, i32 0, i32 0), i32 noundef %183) #18, !dbg !6847
  %185 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 19), align 4, !dbg !6848
  %186 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.74, i32 0, i32 0), i32 noundef %185) #18, !dbg !6849
  %187 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 20), align 4, !dbg !6850
  %188 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75, i32 0, i32 0), i32 noundef %187) #18, !dbg !6851
  %189 = load i32, i32* getelementptr inbounds (%struct.TaskContextType, %struct.TaskContextType* @taskContext, i32 0, i32 13), align 4, !dbg !6852
  %190 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76, i32 0, i32 0), i32 noundef %189) #18, !dbg !6853
  %191 = tail call fastcc zeroext i1 @reboot_check() #17, !dbg !6854
  br i1 %191, label %192, label %193, !dbg !6856

192:                                              ; preds = %182
  tail call void @exception_reboot() #17, !dbg !6857
  br label %193, !dbg !6859

193:                                              ; preds = %192, %182
  ret void, !dbg !6860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @reboot_check() unnamed_addr #7 !dbg !6861 {
  %1 = load i32, i32* @reboot_flag, align 4, !dbg !6864
  %2 = icmp eq i32 %1, -559038737, !dbg !6865
  ret i1 %2, !dbg !6866
}

; Function Attrs: noinline nounwind optsize
define dso_local void @memoryDumpAll() local_unnamed_addr #2 !dbg !6867 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6871, metadata !DIExpression()), !dbg !6872
  %1 = load i8*, i8** getelementptr inbounds ([6 x %struct.memory_region_type], [6 x %struct.memory_region_type]* @memory_regions, i32 0, i32 0, i32 0), align 4, !dbg !6873
  %2 = icmp eq i8* %1, null, !dbg !6878
  br i1 %2, label %3, label %6, !dbg !6879

3:                                                ; preds = %44, %0
  call void @llvm.dbg.value(metadata i32 0, metadata !6871, metadata !DIExpression()), !dbg !6872
  %4 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !6880
  %5 = icmp eq i32 %4, 0, !dbg !6883
  br i1 %5, label %61, label %49, !dbg !6884

6:                                                ; preds = %0, %44
  %7 = phi i32 [ %45, %44 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6871, metadata !DIExpression()), !dbg !6872
  %8 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 3, !dbg !6885
  %9 = load i32, i32* %8, align 4, !dbg !6885
  %10 = icmp eq i32 %9, 0, !dbg !6887
  br i1 %10, label %44, label %11, !dbg !6888

11:                                               ; preds = %6
  %12 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 1, !dbg !6889
  %13 = load i32*, i32** %12, align 4, !dbg !6889
  call void @llvm.dbg.value(metadata i32* %13, metadata !6869, metadata !DIExpression()), !dbg !6872
  %14 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %7, i32 2, !dbg !6890
  %15 = load i32*, i32** %14, align 4, !dbg !6890
  call void @llvm.dbg.value(metadata i32* %15, metadata !6870, metadata !DIExpression()), !dbg !6872
  %16 = icmp ult i32* %13, %15, !dbg !6891
  br i1 %16, label %17, label %44, !dbg !6894

17:                                               ; preds = %11, %41
  %18 = phi i32* [ %42, %41 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i32* %18, metadata !6869, metadata !DIExpression()), !dbg !6872
  %19 = load i32, i32* %18, align 4, !dbg !6895
  %20 = icmp eq i32 %19, 0, !dbg !6898
  %21 = getelementptr inbounds i32, i32* %18, i32 1
  %22 = load i32, i32* %21, align 4, !dbg !6899
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %20, i1 %23, i1 false, !dbg !6900
  br i1 %24, label %25, label %33, !dbg !6900

25:                                               ; preds = %17
  %26 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !6901
  %27 = load i32, i32* %26, align 4, !dbg !6902
  %28 = icmp eq i32 %27, 0, !dbg !6903
  br i1 %28, label %29, label %33, !dbg !6904

29:                                               ; preds = %25
  %30 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !6905
  %31 = load i32, i32* %30, align 4, !dbg !6906
  %32 = icmp eq i32 %31, 0, !dbg !6907
  br i1 %32, label %41, label %33, !dbg !6908

33:                                               ; preds = %17, %29, %25
  %34 = phi i32 [ 0, %29 ], [ 0, %25 ], [ %22, %17 ], !dbg !6909
  %35 = ptrtoint i32* %18 to i32, !dbg !6910
  %36 = getelementptr inbounds i32, i32* %18, i32 2, !dbg !6911
  %37 = load i32, i32* %36, align 4, !dbg !6912
  %38 = getelementptr inbounds i32, i32* %18, i32 3, !dbg !6913
  %39 = load i32, i32* %38, align 4, !dbg !6914
  %40 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.77, i32 0, i32 0), i32 noundef %35, i32 noundef %19, i32 noundef %34, i32 noundef %37, i32 noundef %39) #18, !dbg !6915
  br label %41, !dbg !6916

41:                                               ; preds = %29, %33
  %42 = getelementptr inbounds i32, i32* %18, i32 4, !dbg !6917
  call void @llvm.dbg.value(metadata i32* %42, metadata !6869, metadata !DIExpression()), !dbg !6872
  %43 = icmp ult i32* %42, %15, !dbg !6891
  br i1 %43, label %17, label %44, !dbg !6894, !llvm.loop !6918

44:                                               ; preds = %41, %11, %6
  %45 = add i32 %7, 1, !dbg !6920
  call void @llvm.dbg.value(metadata i32 %45, metadata !6871, metadata !DIExpression()), !dbg !6872
  %46 = getelementptr inbounds [0 x %struct.memory_region_type], [0 x %struct.memory_region_type]* bitcast ([6 x %struct.memory_region_type]* @memory_regions to [0 x %struct.memory_region_type]*), i32 0, i32 %45, i32 0, !dbg !6873
  %47 = load i8*, i8** %46, align 4, !dbg !6873
  %48 = icmp eq i8* %47, null, !dbg !6878
  br i1 %48, label %3, label %6, !dbg !6879, !llvm.loop !6921

49:                                               ; preds = %3, %57
  %50 = phi i32 [ %58, %57 ], [ %4, %3 ]
  %51 = phi i32 [ %59, %57 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !6871, metadata !DIExpression()), !dbg !6872
  %52 = getelementptr inbounds %struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 1, i32 %51, i32 1, !dbg !6924
  %53 = load void ()*, void ()** %52, align 4, !dbg !6924
  %54 = icmp eq void ()* %53, null, !dbg !6927
  br i1 %54, label %57, label %55, !dbg !6928

55:                                               ; preds = %49
  tail call void %53() #18, !dbg !6929
  %56 = load i32, i32* getelementptr inbounds (%struct.exception_config_t, %struct.exception_config_t* @exception_config, i32 0, i32 0), align 4, !dbg !6880
  br label %57, !dbg !6931

57:                                               ; preds = %49, %55
  %58 = phi i32 [ %50, %49 ], [ %56, %55 ], !dbg !6880
  %59 = add nuw i32 %51, 1, !dbg !6932
  call void @llvm.dbg.value(metadata i32 %59, metadata !6871, metadata !DIExpression()), !dbg !6872
  %60 = icmp ult i32 %59, %58, !dbg !6883
  br i1 %60, label %49, label %61, !dbg !6884, !llvm.loop !6933

61:                                               ; preds = %57, %3
  %62 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i32 0, i32 0)) #18, !dbg !6935
  ret void, !dbg !6936
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Hard_Fault_Handler(i32* noundef %0) local_unnamed_addr #4 !dbg !6937 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6939, metadata !DIExpression()), !dbg !6940
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.79, i32 0, i32 0)) #18, !dbg !6941
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6942
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.80, i32 0, i32 0), i32 noundef %3) #18, !dbg !6943
  %5 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6944
  %6 = and i32 %5, 1073741824, !dbg !6946
  %7 = icmp eq i32 %6, 0, !dbg !6947
  br i1 %7, label %28, label %8, !dbg !6948

8:                                                ; preds = %1
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81, i32 0, i32 0)) #18, !dbg !6949
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6951
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %10) #18, !dbg !6952
  %12 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6953
  %13 = icmp ult i32 %12, 65536, !dbg !6955
  br i1 %13, label %16, label %14, !dbg !6956

14:                                               ; preds = %8
  %15 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6957
  tail call void @printUsageErrorMsg(i32 noundef %15) #17, !dbg !6959
  br label %16, !dbg !6960

16:                                               ; preds = %14, %8
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6961
  %18 = and i32 %17, 65280, !dbg !6963
  %19 = icmp eq i32 %18, 0, !dbg !6964
  br i1 %19, label %22, label %20, !dbg !6965

20:                                               ; preds = %16
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6966
  tail call void @printBusFaultErrorMsg(i32 noundef %21) #17, !dbg !6968
  br label %22, !dbg !6969

22:                                               ; preds = %20, %16
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6970
  %24 = and i32 %23, 255, !dbg !6972
  %25 = icmp eq i32 %24, 0, !dbg !6973
  br i1 %25, label %28, label %26, !dbg !6974

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6975
  tail call void @printMemoryManagementErrorMsg(i32 noundef %27) #17, !dbg !6977
  br label %28, !dbg !6978

28:                                               ; preds = %22, %26, %1
  tail call void @stackDump(i32* noundef %0) #17, !dbg !6979
  tail call void @memoryDumpAll() #17, !dbg !6980
  br label %29, !dbg !6981

29:                                               ; preds = %28, %29
  br label %29, !dbg !6981, !llvm.loop !6982
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @MemManage_Fault_Handler(i32* noundef %0) local_unnamed_addr #4 !dbg !6984 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6986, metadata !DIExpression()), !dbg !6987
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.83.112, i32 0, i32 0)) #18, !dbg !6988
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6989
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #18, !dbg !6990
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6991
  %6 = and i32 %5, 255, !dbg !6993
  %7 = icmp eq i32 %6, 0, !dbg !6994
  br i1 %7, label %10, label %8, !dbg !6995

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6996
  tail call void @printMemoryManagementErrorMsg(i32 noundef %9) #17, !dbg !6998
  br label %10, !dbg !6999

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #17, !dbg !7000
  tail call void @memoryDumpAll() #17, !dbg !7001
  br label %11, !dbg !7002

11:                                               ; preds = %10, %11
  br label %11, !dbg !7002, !llvm.loop !7003
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Bus_Fault_Handler(i32* noundef %0) local_unnamed_addr #4 !dbg !7005 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7007, metadata !DIExpression()), !dbg !7008
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.84, i32 0, i32 0)) #18, !dbg !7009
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7010
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #18, !dbg !7011
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7012
  %6 = and i32 %5, 65280, !dbg !7014
  %7 = icmp eq i32 %6, 0, !dbg !7015
  br i1 %7, label %10, label %8, !dbg !7016

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7017
  tail call void @printBusFaultErrorMsg(i32 noundef %9) #17, !dbg !7019
  br label %10, !dbg !7020

10:                                               ; preds = %8, %1
  tail call void @stackDump(i32* noundef %0) #17, !dbg !7021
  tail call void @memoryDumpAll() #17, !dbg !7022
  br label %11, !dbg !7023

11:                                               ; preds = %10, %11
  br label %11, !dbg !7023, !llvm.loop !7024
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Usage_Fault_Handler(i32* noundef %0) local_unnamed_addr #4 !dbg !7026 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7028, metadata !DIExpression()), !dbg !7029
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.85, i32 0, i32 0)) #18, !dbg !7030
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7031
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i32 0, i32 0), i32 noundef %3) #18, !dbg !7032
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7033
  %6 = icmp ult i32 %5, 65536, !dbg !7035
  br i1 %6, label %9, label %7, !dbg !7036

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7037
  tail call void @printUsageErrorMsg(i32 noundef %8) #17, !dbg !7039
  br label %9, !dbg !7040

9:                                                ; preds = %7, %1
  tail call void @stackDump(i32* noundef %0) #17, !dbg !7041
  tail call void @memoryDumpAll() #17, !dbg !7042
  br label %10, !dbg !7043

10:                                               ; preds = %9, %10
  br label %10, !dbg !7043, !llvm.loop !7044
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @Debug_Monitor_Handler(i32* noundef %0) local_unnamed_addr #4 !dbg !7046 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7048, metadata !DIExpression()), !dbg !7052
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.86, i32 0, i32 0)) #18, !dbg !7053
  call void @llvm.dbg.value(metadata i32 12, metadata !7049, metadata !DIExpression()), !dbg !7052
  %3 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !7054
  call void @llvm.dbg.value(metadata i32 %3, metadata !7051, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !7052
  %4 = load volatile i32, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !7056
  call void @llvm.dbg.value(metadata i32 %4, metadata !7050, metadata !DIExpression()), !dbg !7052
  %5 = and i32 %3, 16777216, !dbg !7057
  %6 = icmp eq i32 %5, 0, !dbg !7057
  %7 = select i1 %6, i32 78, i32 89, !dbg !7057
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.87, i32 0, i32 0), i32 noundef %7, i32 noundef %4) #18, !dbg !7058
  tail call void @stackDump(i32* noundef %0) #17, !dbg !7059
  tail call void @memoryDumpAll() #17, !dbg !7060
  br label %9, !dbg !7061

9:                                                ; preds = %9, %1
  br label %9, !dbg !7061, !llvm.loop !7062
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @CommonFault_Handler() #12 section ".ramTEXT" !dbg !7064 {
  tail call void asm sideeffect "cpsid i                       \0Aldr r3, =pxExceptionStack     \0Aldr r3, [r3]                  \0Aldr r0, =pTaskContext         \0Aldr r0, [r0]                  \0Aadd r0, r0, #16               \0Astmia r0!, {r4-r11}           \0Amov r5, r12                   \0Aadd r0, r0, #20               \0Amrs r1, control               \0Astr r1, [r0], #4              \0Astr r5, [r0], #4              \0Amrs r4, msp                   \0Astr r4, [r0], #4              \0Amrs r1, psp                   \0Astr r1, [r0]                  \0Atst r5, #0x10                 \0Aitt eq                        \0Aaddeq r0, r0, #68             \0Avstmeq r0, {s16-s31}          \0Acmp r3, #0                    \0Ait ne                         \0Amovne sp, r3                  \0Apush {lr}                     \0Abl exception_init             \0Apop {lr}                      \0Atst r5, #4                    \0Aite eq                        \0Amoveq r0, r4                  \0Amrsne r0, psp                 \0Abx lr                         \0A", ""() #19, !dbg !7065, !srcloc !7066
  unreachable, !dbg !7067
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @HardFault_Handler() #12 section ".ramTEXT" !dbg !7068 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Hard_Fault_Handler         \0A", ""() #19, !dbg !7069, !srcloc !7070
  unreachable, !dbg !7071
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @MemManage_Handler() #12 section ".ramTEXT" !dbg !7072 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl MemManage_Fault_Handler    \0A", ""() #19, !dbg !7073, !srcloc !7074
  unreachable, !dbg !7075
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @BusFault_Handler() #12 section ".ramTEXT" !dbg !7076 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Bus_Fault_Handler          \0A", ""() #19, !dbg !7077, !srcloc !7078
  unreachable, !dbg !7079
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @UsageFault_Handler() #12 section ".ramTEXT" !dbg !7080 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Usage_Fault_Handler        \0A", ""() #19, !dbg !7081, !srcloc !7082
  unreachable, !dbg !7083
}

; Function Attrs: naked noinline nounwind optsize
define dso_local void @DebugMon_Handler() #12 section ".ramTEXT" !dbg !7084 {
  tail call void asm sideeffect "mov r12, lr                   \0Abl CommonFault_Handler        \0Abl Debug_Monitor_Handler      \0A", ""() #19, !dbg !7085, !srcloc !7086
  unreachable, !dbg !7087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vApplicationStackOverflowHook(i8* noundef %0, i8* noundef %1) local_unnamed_addr #2 !dbg !7088 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7092, metadata !DIExpression()), !dbg !7094
  call void @llvm.dbg.value(metadata i8* %1, metadata !7093, metadata !DIExpression()), !dbg !7094
  %3 = ptrtoint i8* %0 to i32, !dbg !7095
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.115, i32 0, i32 0), i32 noundef %3, i8* noundef %1) #18, !dbg !7096
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.117, i32 0, i32 0), i32 noundef 103) #18, !dbg !7097
  ret void, !dbg !7100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, ...) #2 !dbg !7101 {
  %6 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7103, metadata !DIExpression()), !dbg !7117
  call void @llvm.dbg.value(metadata i8* %1, metadata !7104, metadata !DIExpression()), !dbg !7117
  call void @llvm.dbg.value(metadata i32 %2, metadata !7105, metadata !DIExpression()), !dbg !7117
  call void @llvm.dbg.value(metadata i32 %3, metadata !7106, metadata !DIExpression()), !dbg !7117
  call void @llvm.dbg.value(metadata i8* %4, metadata !7107, metadata !DIExpression()), !dbg !7117
  %7 = bitcast %union.anon* %6 to i8*, !dbg !7118
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !7118
  call void @llvm.dbg.declare(metadata %union.anon* %6, metadata !7108, metadata !DIExpression()), !dbg !7119
  call void @llvm.va_start(i8* nonnull %7), !dbg !7120
  %8 = bitcast %union.anon* %6 to i32*, !dbg !7121
  %9 = load i32, i32* %8, align 4, !dbg !7121
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !7121
  call void @vprint_module_log(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %10) #17, !dbg !7121
  call void @llvm.va_end(i8* nonnull %7), !dbg !7122
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !7123
  ret void, !dbg !7123
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, ...) #2 !dbg !7124 {
  %8 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7126, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata i8* %1, metadata !7127, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata i32 %2, metadata !7128, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata i32 %3, metadata !7129, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata i8* %4, metadata !7130, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata i32 %5, metadata !7131, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.value(metadata i8* %6, metadata !7132, metadata !DIExpression()), !dbg !7134
  %9 = bitcast %union.anon* %8 to i8*, !dbg !7135
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #19, !dbg !7135
  call void @llvm.dbg.declare(metadata %union.anon* %8, metadata !7133, metadata !DIExpression()), !dbg !7136
  call void @llvm.va_start(i8* nonnull %9), !dbg !7137
  %10 = bitcast %union.anon* %8 to i32*, !dbg !7138
  %11 = load i32, i32* %10, align 4, !dbg !7138
  %12 = insertvalue [1 x i32] poison, i32 %11, 0, !dbg !7138
  call void @vdump_module_buffer(i8* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %12) #17, !dbg !7138
  call void @llvm.va_end(i8* nonnull %9), !dbg !7139
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #19, !dbg !7140
  ret void, !dbg !7140
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #14

; Function Attrs: noinline nounwind optsize
define dso_local void @vdump_module_buffer(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, i8* noundef %6, [1 x i32] %7) local_unnamed_addr #2 !dbg !7141 {
  %9 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !7152, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i8* %0, metadata !7145, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i8* %1, metadata !7146, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 %2, metadata !7147, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 %3, metadata !7148, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i8* %4, metadata !7149, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 %5, metadata !7150, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i8* %6, metadata !7151, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i8* %0, metadata !7153, metadata !DIExpression()), !dbg !7167
  %10 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7168
  %11 = bitcast i8* %10 to i32*, !dbg !7168
  %12 = load i32, i32* %11, align 4, !dbg !7168
  %13 = icmp eq i32 %12, 0, !dbg !7169
  br i1 %13, label %14, label %101, !dbg !7170

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7171
  %16 = bitcast i8* %15 to i32*, !dbg !7171
  %17 = load i32, i32* %16, align 4, !dbg !7171
  %18 = icmp ugt i32 %17, %3, !dbg !7172
  br i1 %18, label %101, label %19, !dbg !7173

19:                                               ; preds = %14
  %20 = load i1, i1* @syslog_task_ready, align 4, !dbg !7174
  br i1 %20, label %21, label %28, !dbg !7175

21:                                               ; preds = %19
  %22 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !7176
  %23 = icmp eq i32 %22, 0, !dbg !7177
  br i1 %23, label %24, label %50, !dbg !7178

24:                                               ; preds = %21
  %25 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7179
  %26 = and i32 %25, 255, !dbg !7180
  %27 = icmp eq i32 %26, 0, !dbg !7181
  br i1 %27, label %28, label %50, !dbg !7182

28:                                               ; preds = %24, %19
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !7183
  %30 = icmp eq i32 %29, 0, !dbg !7184
  br i1 %30, label %101, label %31, !dbg !7185

31:                                               ; preds = %28
  %32 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !7186, !srcloc !7192
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !7186
  call void @llvm.dbg.value(metadata i32 %33, metadata !7189, metadata !DIExpression()) #19, !dbg !7193
  call void @llvm.dbg.value(metadata i32 undef, metadata !7190, metadata !DIExpression()) #19, !dbg !7193
  call void @llvm.dbg.value(metadata i32 %33, metadata !7155, metadata !DIExpression()), !dbg !7194
  %34 = load i32, i32* @syslog_init_done, align 4, !dbg !7195
  %35 = icmp ugt i32 %34, 1, !dbg !7197
  br i1 %35, label %36, label %47, !dbg !7198

36:                                               ; preds = %31
  %37 = tail call fastcc i32 @get_current_time_in_ms() #17, !dbg !7199
  %38 = bitcast i8* %0 to i8**, !dbg !7201
  %39 = load i8*, i8** %38, align 4, !dbg !7201
  %40 = icmp ult i32 %3, 4, !dbg !7202
  br i1 %40, label %41, label %44, !dbg !7202

41:                                               ; preds = %36
  %42 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !7202
  %43 = load i8*, i8** %42, align 4, !dbg !7202
  br label %44, !dbg !7202

44:                                               ; preds = %36, %41
  %45 = phi i8* [ %43, %41 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.119, i32 0, i32 0), %36 ], !dbg !7202
  %46 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef %37, i8* noundef %39, i8* noundef %45, i8* noundef %1, i32 noundef %2) #18, !dbg !7203
  br label %47, !dbg !7204

47:                                               ; preds = %44, %31
  %48 = tail call i32 @vprintf(i8* noundef %6, [1 x i32] %7) #18, !dbg !7205
  %49 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.121, i32 0, i32 0)) #18, !dbg !7206
  tail call void @hex_dump_data(i8* noundef %4, i32 noundef %5) #17, !dbg !7207
  call void @llvm.dbg.value(metadata i32 %33, metadata !7208, metadata !DIExpression()) #19, !dbg !7211
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %33) #19, !dbg !7213, !srcloc !7214
  br label %101, !dbg !7215

50:                                               ; preds = %24, %21
  %51 = bitcast %struct.syslog_buffer_t** %9 to i8*, !dbg !7216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51) #19, !dbg !7216
  %52 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #17, !dbg !7217
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %52, metadata !7162, metadata !DIExpression()), !dbg !7218
  store %struct.syslog_buffer_t* %52, %struct.syslog_buffer_t** %9, align 4, !dbg !7219
  %53 = icmp eq %struct.syslog_buffer_t* %52, null, !dbg !7220
  br i1 %53, label %100, label %54, !dbg !7222

54:                                               ; preds = %50
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 0, !dbg !7223
  call void @llvm.dbg.value(metadata i8* %55, metadata !7164, metadata !DIExpression()), !dbg !7218
  %56 = bitcast i8* %55 to i32*, !dbg !7224
  store i32 1, i32* %56, align 4, !dbg !7225
  %57 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 4, !dbg !7226
  call void @llvm.dbg.value(metadata i8* %57, metadata !7165, metadata !DIExpression()), !dbg !7218
  %58 = bitcast i8* %0 to i8**, !dbg !7227
  %59 = load i8*, i8** %58, align 4, !dbg !7227
  %60 = bitcast i8* %57 to i8**, !dbg !7228
  store i8* %59, i8** %60, align 4, !dbg !7229
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 8, !dbg !7230
  %62 = bitcast i8* %61 to i32*, !dbg !7230
  store i32 %3, i32* %62, align 4, !dbg !7231
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 12, !dbg !7232
  %64 = bitcast i8* %63 to i8**, !dbg !7232
  store i8* %1, i8** %64, align 4, !dbg !7233
  %65 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 16, !dbg !7234
  %66 = bitcast i8* %65 to i32*, !dbg !7234
  store i32 %2, i32* %66, align 4, !dbg !7235
  %67 = tail call fastcc i32 @get_current_time_in_ms() #17, !dbg !7236
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 20, !dbg !7237
  %69 = bitcast i8* %68 to i32*, !dbg !7237
  store i32 %67, i32* %69, align 4, !dbg !7238
  %70 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 24, !dbg !7239
  %71 = tail call i32 @vsnprintf(i8* noundef nonnull %70, i32 noundef 128, i8* noundef %6, [1 x i32] %7) #18, !dbg !7240
  %72 = icmp slt i32 %5, 2048, !dbg !7241
  %73 = select i1 %72, i32 %5, i32 2048, !dbg !7241
  call void @llvm.dbg.value(metadata i32 %73, metadata !7150, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 0, metadata !7154, metadata !DIExpression()), !dbg !7167
  %74 = icmp sgt i32 %73, 128, !dbg !7242
  br i1 %74, label %75, label %81, !dbg !7244

75:                                               ; preds = %54
  %76 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7245
  %77 = and i32 %76, 255, !dbg !7248
  %78 = icmp eq i32 %77, 0, !dbg !7249
  %79 = add nsw i32 %73, -128
  call void @llvm.dbg.value(metadata i32 undef, metadata !7154, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 128, metadata !7150, metadata !DIExpression()), !dbg !7167
  %80 = select i1 %78, i32 %79, i32 0, !dbg !7250
  br label %81, !dbg !7250

81:                                               ; preds = %75, %54
  %82 = phi i32 [ 0, %54 ], [ %80, %75 ], !dbg !7218
  %83 = phi i32 [ %5, %54 ], [ 128, %75 ], !dbg !7218
  call void @llvm.dbg.value(metadata i32 %83, metadata !7150, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.value(metadata i32 %82, metadata !7154, metadata !DIExpression()), !dbg !7167
  %84 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 160, !dbg !7251
  %85 = tail call i8* @memcpy(i8* noundef nonnull %84, i8* noundef %4, i32 noundef %83) #18, !dbg !7252
  %86 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 156, !dbg !7253
  %87 = bitcast i8* %86 to i32*, !dbg !7253
  store i32 %83, i32* %87, align 4, !dbg !7254
  %88 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %52, i32 0, i32 1, i32 288, !dbg !7255
  %89 = bitcast i8* %88 to i8**, !dbg !7255
  store i8* null, i8** %89, align 4, !dbg !7256
  %90 = icmp eq i32 %82, 0, !dbg !7257
  br i1 %90, label %99, label %91, !dbg !7259

91:                                               ; preds = %81
  %92 = tail call i8* @pvPortMalloc(i32 noundef %82) #18, !dbg !7260
  store i8* %92, i8** %89, align 4, !dbg !7263
  %93 = icmp eq i8* %92, null, !dbg !7264
  br i1 %93, label %99, label %94, !dbg !7265

94:                                               ; preds = %91
  %95 = getelementptr inbounds i8, i8* %4, i32 %83, !dbg !7266
  %96 = tail call i8* @memcpy(i8* noundef nonnull %92, i8* noundef %95, i32 noundef %82) #18, !dbg !7268
  %97 = load i32, i32* %87, align 4, !dbg !7269
  %98 = add i32 %97, %82, !dbg !7269
  store i32 %98, i32* %87, align 4, !dbg !7269
  br label %99, !dbg !7270

99:                                               ; preds = %91, %94, %81
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %9, metadata !7162, metadata !DIExpression(DW_OP_deref)), !dbg !7218
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %9) #17, !dbg !7271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #19, !dbg !7272
  br label %101

100:                                              ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %51) #19, !dbg !7272
  br label %101

101:                                              ; preds = %99, %8, %14, %28, %47, %100
  ret void, !dbg !7273
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #14

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_current_time_in_ms() unnamed_addr #2 !dbg !7274 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !7280
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19, !dbg !7280
  call void @llvm.dbg.value(metadata i32 0, metadata !7278, metadata !DIExpression()), !dbg !7281
  store i32 0, i32* %1, align 4, !dbg !7282
  call void @llvm.dbg.value(metadata i64 0, metadata !7279, metadata !DIExpression()), !dbg !7281
  call void @llvm.dbg.value(metadata i32* %1, metadata !7278, metadata !DIExpression(DW_OP_deref)), !dbg !7281
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #18, !dbg !7283
  %4 = load i32, i32* %1, align 4, !dbg !7284
  call void @llvm.dbg.value(metadata i32 %4, metadata !7278, metadata !DIExpression()), !dbg !7281
  %5 = zext i32 %4 to i64, !dbg !7285
  %6 = mul nuw nsw i64 %5, 1000, !dbg !7286
  %7 = lshr i64 %6, 15, !dbg !7287
  call void @llvm.dbg.value(metadata i64 %7, metadata !7279, metadata !DIExpression()), !dbg !7281
  %8 = trunc i64 %7 to i32, !dbg !7288
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19, !dbg !7289
  ret i32 %8, !dbg !7290
}

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @hex_dump_data(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7291 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7295, metadata !DIExpression()), !dbg !7298
  call void @llvm.dbg.value(metadata i32 %1, metadata !7296, metadata !DIExpression()), !dbg !7298
  call void @llvm.dbg.value(metadata i32 0, metadata !7297, metadata !DIExpression()), !dbg !7298
  call void @llvm.dbg.value(metadata i32 0, metadata !7297, metadata !DIExpression()), !dbg !7298
  %3 = icmp sgt i32 %1, 0, !dbg !7299
  br i1 %3, label %4, label %25, !dbg !7302

4:                                                ; preds = %2, %18
  %5 = phi i32 [ %10, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7297, metadata !DIExpression()), !dbg !7298
  %6 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7303
  %7 = load i8, i8* %6, align 1, !dbg !7303
  %8 = zext i8 %7 to i32, !dbg !7305
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.122, i32 0, i32 0), i32 noundef %8) #18, !dbg !7306
  %10 = add nuw nsw i32 %5, 1, !dbg !7307
  %11 = and i32 %10, 15, !dbg !7309
  %12 = icmp eq i32 %11, 0, !dbg !7310
  br i1 %12, label %15, label %13, !dbg !7311

13:                                               ; preds = %4
  %14 = icmp eq i32 %10, %1, !dbg !7312
  br i1 %14, label %18, label %15, !dbg !7314

15:                                               ; preds = %13, %4
  %16 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.121, i32 0, i32 0), %4 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.123, i32 0, i32 0), %13 ]
  %17 = tail call i32 (i8*, ...) @printf(i8* noundef %16) #18, !dbg !7315
  br label %18, !dbg !7299

18:                                               ; preds = %15, %13
  call void @llvm.dbg.value(metadata i32 %10, metadata !7297, metadata !DIExpression()), !dbg !7298
  %19 = icmp eq i32 %10, %1, !dbg !7299
  br i1 %19, label %20, label %4, !dbg !7302, !llvm.loop !7316

20:                                               ; preds = %18
  %21 = and i32 %1, 15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23, !dbg !7318

23:                                               ; preds = %20
  %24 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.121, i32 0, i32 0)) #18, !dbg !7320
  br label %25, !dbg !7322

25:                                               ; preds = %2, %23, %20
  ret void, !dbg !7323
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.syslog_buffer_t* @buffer_pool_alloc() local_unnamed_addr #2 !dbg !7324 {
  %1 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !7330, !srcloc !7192
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !7330
  call void @llvm.dbg.value(metadata i32 %2, metadata !7189, metadata !DIExpression()) #19, !dbg !7332
  call void @llvm.dbg.value(metadata i32 undef, metadata !7190, metadata !DIExpression()) #19, !dbg !7332
  call void @llvm.dbg.value(metadata i32 %2, metadata !7328, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 0, metadata !7329, metadata !DIExpression()), !dbg !7333
  br label %6, !dbg !7334

3:                                                ; preds = %6
  %4 = add nuw nsw i32 %7, 1, !dbg !7336
  call void @llvm.dbg.value(metadata i32 %4, metadata !7329, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.value(metadata i32 %7, metadata !7329, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7333
  %5 = icmp eq i32 %4, 16, !dbg !7338
  br i1 %5, label %14, label %6, !dbg !7334, !llvm.loop !7339

6:                                                ; preds = %0, %3
  %7 = phi i32 [ 0, %0 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7329, metadata !DIExpression()), !dbg !7333
  %8 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %7, !dbg !7341
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !7344
  %10 = load i32, i32* %9, align 4, !dbg !7344
  %11 = icmp eq i32 %10, 0, !dbg !7341
  call void @llvm.dbg.value(metadata i32 %7, metadata !7329, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7333
  br i1 %11, label %12, label %3, !dbg !7345

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 0, !dbg !7344
  store i32 1, i32* %13, align 4, !dbg !7346
  call void @llvm.dbg.value(metadata i32 %2, metadata !7208, metadata !DIExpression()) #19, !dbg !7348
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #19, !dbg !7350, !srcloc !7214
  br label %17, !dbg !7351

14:                                               ; preds = %3
  %15 = load i32, i32* @syslog_drop_count, align 4, !dbg !7352
  %16 = add i32 %15, 1, !dbg !7352
  store i32 %16, i32* @syslog_drop_count, align 4, !dbg !7352
  call void @llvm.dbg.value(metadata i32 %2, metadata !7208, metadata !DIExpression()) #19, !dbg !7353
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %2) #19, !dbg !7355, !srcloc !7214
  br label %17, !dbg !7356

17:                                               ; preds = %14, %12
  %18 = phi %struct.syslog_buffer_t* [ %8, %12 ], [ null, %14 ], !dbg !7333
  ret %struct.syslog_buffer_t* %18, !dbg !7357
}

; Function Attrs: optsize
declare dso_local i32 @vsnprintf(i8* noundef, i32 noundef, i8* noundef, [1 x i32]) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_send(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #2 !dbg !7358 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !7363, metadata !DIExpression()), !dbg !7367
  %3 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7368
  %4 = and i32 %3, 255, !dbg !7369
  %5 = icmp eq i32 %4, 0, !dbg !7369
  br i1 %5, label %19, label %6, !dbg !7370

6:                                                ; preds = %1
  %7 = bitcast i32* %2 to i8*, !dbg !7371
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !7371
  call void @llvm.dbg.value(metadata i32 0, metadata !7364, metadata !DIExpression()), !dbg !7372
  store i32 0, i32* %2, align 4, !dbg !7373
  %8 = load i8*, i8** @g_log_queue, align 4, !dbg !7374
  %9 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !7374
  call void @llvm.dbg.value(metadata i32* %2, metadata !7364, metadata !DIExpression(DW_OP_deref)), !dbg !7372
  %10 = call i32 @xQueueGenericSendFromISR(i8* noundef %8, i8* noundef %9, i32* noundef nonnull %2, i32 noundef 0) #18, !dbg !7374
  %11 = icmp eq i32 %10, 0, !dbg !7376
  br i1 %11, label %12, label %14, !dbg !7377

12:                                               ; preds = %6
  %13 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %0, align 4, !dbg !7378
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %13) #17, !dbg !7380
  br label %18, !dbg !7381

14:                                               ; preds = %6
  %15 = load i32, i32* %2, align 4, !dbg !7382
  call void @llvm.dbg.value(metadata i32 %15, metadata !7364, metadata !DIExpression()), !dbg !7372
  %16 = icmp eq i32 %15, 0, !dbg !7382
  br i1 %16, label %18, label %17, !dbg !7385

17:                                               ; preds = %14
  store volatile i32 268435456, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7386
  call void asm sideeffect "dsb", ""() #19, !dbg !7386, !srcloc !7388
  call void asm sideeffect "isb", ""() #19, !dbg !7386, !srcloc !7389
  br label %18, !dbg !7386

18:                                               ; preds = %14, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !7390
  br label %23, !dbg !7391

19:                                               ; preds = %1
  %20 = load i8*, i8** @g_log_queue, align 4, !dbg !7392
  %21 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !7392
  %22 = tail call i32 @xQueueGenericSend(i8* noundef %20, i8* noundef %21, i32 noundef -1, i32 noundef 0) #18, !dbg !7392
  br label %23

23:                                               ; preds = %19, %18
  ret void, !dbg !7394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_release(%struct.syslog_buffer_t* nocapture noundef %0) local_unnamed_addr #2 !dbg !7395 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !7399, metadata !DIExpression()), !dbg !7402
  %2 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 0, !dbg !7403
  call void @llvm.dbg.value(metadata i8* %2, metadata !7401, metadata !DIExpression()), !dbg !7402
  %3 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !7404, !srcloc !7192
  call void @llvm.dbg.value(metadata i32 undef, metadata !7189, metadata !DIExpression()) #19, !dbg !7406
  call void @llvm.dbg.value(metadata i32 undef, metadata !7190, metadata !DIExpression()) #19, !dbg !7406
  call void @llvm.dbg.value(metadata i32 undef, metadata !7400, metadata !DIExpression()), !dbg !7402
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !7407
  store i32 0, i32* %4, align 4, !dbg !7408
  %5 = bitcast i8* %2 to i32*, !dbg !7409
  %6 = load i32, i32* %5, align 4, !dbg !7409
  %7 = icmp eq i32 %6, 1, !dbg !7411
  br i1 %7, label %8, label %14, !dbg !7412

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %2, metadata !7401, metadata !DIExpression()), !dbg !7402
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 1, i32 288, !dbg !7413
  %10 = bitcast i8* %9 to i8**, !dbg !7413
  %11 = load i8*, i8** %10, align 4, !dbg !7413
  %12 = icmp eq i8* %11, null, !dbg !7414
  br i1 %12, label %14, label %13, !dbg !7415

13:                                               ; preds = %8
  tail call void @vPortFree(i8* noundef nonnull %11) #18, !dbg !7416
  br label %14, !dbg !7418

14:                                               ; preds = %13, %8, %1
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !7404
  call void @llvm.dbg.value(metadata i32 %15, metadata !7189, metadata !DIExpression()) #19, !dbg !7406
  call void @llvm.dbg.value(metadata i32 %15, metadata !7400, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.value(metadata i32 undef, metadata !7208, metadata !DIExpression()) #19, !dbg !7419
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %15) #19, !dbg !7421, !srcloc !7214
  ret void, !dbg !7422
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprint_module_log(i8* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i8* noundef %4, [1 x i32] %5) local_unnamed_addr #2 !dbg !7423 {
  %7 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !7432, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i8* %0, metadata !7427, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i8* %1, metadata !7428, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i32 %2, metadata !7429, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i32 %3, metadata !7430, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i8* %4, metadata !7431, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.value(metadata i8* %0, metadata !7433, metadata !DIExpression()), !dbg !7446
  %8 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7447
  %9 = bitcast i8* %8 to i32*, !dbg !7447
  %10 = load i32, i32* %9, align 4, !dbg !7447
  %11 = icmp eq i32 %10, 0, !dbg !7448
  br i1 %11, label %12, label %71, !dbg !7449

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7450
  %14 = bitcast i8* %13 to i32*, !dbg !7450
  %15 = load i32, i32* %14, align 4, !dbg !7450
  %16 = icmp ugt i32 %15, %3, !dbg !7451
  br i1 %16, label %71, label %17, !dbg !7452

17:                                               ; preds = %12
  %18 = load i1, i1* @syslog_task_ready, align 4, !dbg !7453
  br i1 %18, label %19, label %26, !dbg !7454

19:                                               ; preds = %17
  %20 = tail call i32 @xTaskGetSchedulerState() #18, !dbg !7455
  %21 = icmp eq i32 %20, 0, !dbg !7456
  br i1 %21, label %22, label %48, !dbg !7457

22:                                               ; preds = %19
  %23 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7458
  %24 = and i32 %23, 255, !dbg !7459
  %25 = icmp eq i32 %24, 0, !dbg !7460
  br i1 %25, label %26, label %48, !dbg !7461

26:                                               ; preds = %22, %17
  %27 = load i32, i32* @syslog_init_done, align 4, !dbg !7462
  %28 = icmp eq i32 %27, 0, !dbg !7463
  br i1 %28, label %71, label %29, !dbg !7464

29:                                               ; preds = %26
  %30 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !7465, !srcloc !7192
  %31 = extractvalue { i32, i32 } %30, 0, !dbg !7465
  call void @llvm.dbg.value(metadata i32 %31, metadata !7189, metadata !DIExpression()) #19, !dbg !7467
  call void @llvm.dbg.value(metadata i32 undef, metadata !7190, metadata !DIExpression()) #19, !dbg !7467
  call void @llvm.dbg.value(metadata i32 %31, metadata !7434, metadata !DIExpression()), !dbg !7468
  %32 = load i32, i32* @syslog_init_done, align 4, !dbg !7469
  %33 = icmp ugt i32 %32, 1, !dbg !7471
  br i1 %33, label %34, label %45, !dbg !7472

34:                                               ; preds = %29
  %35 = tail call fastcc i32 @get_current_time_in_ms() #17, !dbg !7473
  %36 = bitcast i8* %0 to i8**, !dbg !7475
  %37 = load i8*, i8** %36, align 4, !dbg !7475
  %38 = icmp ult i32 %3, 4, !dbg !7476
  br i1 %38, label %39, label %42, !dbg !7476

39:                                               ; preds = %34
  %40 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !7476
  %41 = load i8*, i8** %40, align 4, !dbg !7476
  br label %42, !dbg !7476

42:                                               ; preds = %34, %39
  %43 = phi i8* [ %41, %39 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.119, i32 0, i32 0), %34 ], !dbg !7476
  %44 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef %35, i8* noundef %37, i8* noundef %43, i8* noundef %1, i32 noundef %2) #18, !dbg !7477
  br label %45, !dbg !7478

45:                                               ; preds = %42, %29
  %46 = tail call i32 @vprintf(i8* noundef %4, [1 x i32] %5) #18, !dbg !7479
  %47 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6.121, i32 0, i32 0)) #18, !dbg !7480
  call void @llvm.dbg.value(metadata i32 %31, metadata !7208, metadata !DIExpression()) #19, !dbg !7481
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %31) #19, !dbg !7483, !srcloc !7214
  br label %71, !dbg !7484

48:                                               ; preds = %22, %19
  %49 = bitcast %struct.syslog_buffer_t** %7 to i8*, !dbg !7485
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #19, !dbg !7485
  %50 = tail call %struct.syslog_buffer_t* @buffer_pool_alloc() #17, !dbg !7486
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %50, metadata !7441, metadata !DIExpression()), !dbg !7487
  store %struct.syslog_buffer_t* %50, %struct.syslog_buffer_t** %7, align 4, !dbg !7488
  %51 = icmp eq %struct.syslog_buffer_t* %50, null, !dbg !7489
  br i1 %51, label %70, label %52, !dbg !7491

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 0, !dbg !7492
  call void @llvm.dbg.value(metadata i8* %53, metadata !7443, metadata !DIExpression()), !dbg !7487
  %54 = bitcast i8* %53 to i32*, !dbg !7493
  store i32 0, i32* %54, align 4, !dbg !7494
  %55 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 4, !dbg !7495
  call void @llvm.dbg.value(metadata i8* %55, metadata !7444, metadata !DIExpression()), !dbg !7487
  %56 = bitcast i8* %0 to i8**, !dbg !7496
  %57 = load i8*, i8** %56, align 4, !dbg !7496
  %58 = bitcast i8* %55 to i8**, !dbg !7497
  store i8* %57, i8** %58, align 4, !dbg !7498
  %59 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 8, !dbg !7499
  %60 = bitcast i8* %59 to i32*, !dbg !7499
  store i32 %3, i32* %60, align 4, !dbg !7500
  %61 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 12, !dbg !7501
  %62 = bitcast i8* %61 to i8**, !dbg !7501
  store i8* %1, i8** %62, align 4, !dbg !7502
  %63 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 16, !dbg !7503
  %64 = bitcast i8* %63 to i32*, !dbg !7503
  store i32 %2, i32* %64, align 4, !dbg !7504
  %65 = tail call fastcc i32 @get_current_time_in_ms() #17, !dbg !7505
  %66 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 20, !dbg !7506
  %67 = bitcast i8* %66 to i32*, !dbg !7506
  store i32 %65, i32* %67, align 4, !dbg !7507
  %68 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %50, i32 0, i32 1, i32 24, !dbg !7508
  %69 = tail call i32 @vsnprintf(i8* noundef nonnull %68, i32 noundef 256, i8* noundef %4, [1 x i32] %5) #18, !dbg !7509
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %7, metadata !7441, metadata !DIExpression(DW_OP_deref)), !dbg !7487
  call void @log_queue_send(%struct.syslog_buffer_t** noundef nonnull %7) #17, !dbg !7510
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #19, !dbg !7511
  br label %71

70:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #19, !dbg !7511
  br label %71

71:                                               ; preds = %52, %6, %12, %26, %45, %70
  ret void, !dbg !7512
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_uart_init(i32 noundef %0) local_unnamed_addr #2 !dbg !7513 {
  %2 = alloca %struct.hal_uart_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7518, metadata !DIExpression()), !dbg !7528
  %3 = bitcast %struct.hal_uart_config_t* %2 to i8*, !dbg !7529
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #19, !dbg !7529
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %2, metadata !7519, metadata !DIExpression()), !dbg !7530
  %4 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 0, !dbg !7531
  store i32 9, i32* %4, align 4, !dbg !7532
  %5 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 3, !dbg !7533
  store i32 0, i32* %5, align 4, !dbg !7534
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 2, !dbg !7535
  store i32 0, i32* %6, align 4, !dbg !7536
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %2, i32 0, i32 1, !dbg !7537
  store i32 3, i32* %7, align 4, !dbg !7538
  store i32 %0, i32* @g_log_uart_port, align 4, !dbg !7539
  %8 = call i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %2) #18, !dbg !7540
  call void @llvm.dbg.value(metadata i32 %8, metadata !7527, metadata !DIExpression()), !dbg !7528
  %9 = load i32, i32* @syslog_init_done, align 4, !dbg !7541
  %10 = or i32 %9, 1, !dbg !7541
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !7541
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #19, !dbg !7542
  ret i32 %8, !dbg !7543
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_putchar(i8 noundef zeroext %0) local_unnamed_addr #2 !dbg !7544 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7548, metadata !DIExpression()), !dbg !7549
  %2 = load i32, i32* @g_log_uart_port, align 4, !dbg !7550
  tail call void @hal_uart_put_char(i32 noundef %2, i8 noundef zeroext %0) #18, !dbg !7551
  ret void, !dbg !7552
}

; Function Attrs: noinline nounwind optsize
define dso_local void @buffer_pool_init() local_unnamed_addr #2 !dbg !7553 {
  %1 = tail call i8* @memset(i8* noundef bitcast ([16 x %struct.syslog_buffer_t]* @syslog_buffer_pool to i8*), i32 noundef 0, i32 noundef 4736) #18, !dbg !7554
  ret void, !dbg !7555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_queue_create() local_unnamed_addr #2 !dbg !7556 {
  %1 = tail call i8* @xQueueGenericCreate(i32 noundef 8, i32 noundef 4, i8 noundef zeroext 0) #18, !dbg !7557
  store i8* %1, i8** @g_log_queue, align 4, !dbg !7558
  %2 = icmp eq i8* %1, null, !dbg !7559
  br i1 %2, label %3, label %5, !dbg !7561

3:                                                ; preds = %0
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.127, i32 0, i32 0)) #18, !dbg !7562
  br label %5, !dbg !7564

5:                                                ; preds = %3, %0
  ret void, !dbg !7565
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @log_queue_receive(%struct.syslog_buffer_t** noundef %0) local_unnamed_addr #2 !dbg !7566 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %0, metadata !7570, metadata !DIExpression()), !dbg !7572
  %2 = load i8*, i8** @g_log_queue, align 4, !dbg !7573
  %3 = bitcast %struct.syslog_buffer_t** %0 to i8*, !dbg !7573
  %4 = tail call i32 @xQueueGenericReceive(i8* noundef %2, i8* noundef %3, i32 noundef -1, i32 noundef 0) #18, !dbg !7573
  call void @llvm.dbg.value(metadata i32 %4, metadata !7571, metadata !DIExpression()), !dbg !7572
  %5 = icmp ne i32 %4, 1, !dbg !7574
  %6 = sext i1 %5 to i32, !dbg !7575
  ret i32 %6, !dbg !7576
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_normal_log(%struct.normal_log_message_t* noundef %0) local_unnamed_addr #2 !dbg !7577 {
  call void @llvm.dbg.value(metadata %struct.normal_log_message_t* %0, metadata !7583, metadata !DIExpression()), !dbg !7584
  %2 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 4, !dbg !7585
  %3 = load i32, i32* %2, align 4, !dbg !7585
  %4 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 0, !dbg !7586
  %5 = load i8*, i8** %4, align 4, !dbg !7586
  %6 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 1, !dbg !7587
  %7 = load i32, i32* %6, align 4, !dbg !7587
  %8 = icmp ult i32 %7, 4, !dbg !7587
  br i1 %8, label %9, label %12, !dbg !7587

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !7587
  %11 = load i8*, i8** %10, align 4, !dbg !7587
  br label %12, !dbg !7587

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.119, i32 0, i32 0), %1 ], !dbg !7587
  %14 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 2, !dbg !7588
  %15 = load i8*, i8** %14, align 4, !dbg !7588
  %16 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 3, !dbg !7589
  %17 = load i32, i32* %16, align 4, !dbg !7589
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #18, !dbg !7590
  %19 = getelementptr inbounds %struct.normal_log_message_t, %struct.normal_log_message_t* %0, i32 0, i32 5, i32 0, !dbg !7591
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.128, i32 0, i32 0), i8* noundef nonnull %19) #18, !dbg !7592
  ret void, !dbg !7593
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_hex_dump(%struct.hex_dump_message_t* noundef %0) local_unnamed_addr #2 !dbg !7594 {
  call void @llvm.dbg.value(metadata %struct.hex_dump_message_t* %0, metadata !7600, metadata !DIExpression()), !dbg !7601
  %2 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 4, !dbg !7602
  %3 = load i32, i32* %2, align 4, !dbg !7602
  %4 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 0, !dbg !7603
  %5 = load i8*, i8** %4, align 4, !dbg !7603
  %6 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 1, !dbg !7604
  %7 = load i32, i32* %6, align 4, !dbg !7604
  %8 = icmp ult i32 %7, 4, !dbg !7604
  br i1 %8, label %9, label %12, !dbg !7604

9:                                                ; preds = %1
  %10 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %7, !dbg !7604
  %11 = load i8*, i8** %10, align 4, !dbg !7604
  br label %12, !dbg !7604

12:                                               ; preds = %1, %9
  %13 = phi i8* [ %11, %9 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.119, i32 0, i32 0), %1 ], !dbg !7604
  %14 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 2, !dbg !7605
  %15 = load i8*, i8** %14, align 4, !dbg !7605
  %16 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 3, !dbg !7606
  %17 = load i32, i32* %16, align 4, !dbg !7606
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef %3, i8* noundef %5, i8* noundef %13, i8* noundef %15, i32 noundef %17) #18, !dbg !7607
  %19 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 5, i32 0, !dbg !7608
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.128, i32 0, i32 0), i8* noundef nonnull %19) #18, !dbg !7609
  %21 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 6, !dbg !7610
  %22 = load i32, i32* %21, align 4, !dbg !7610
  %23 = icmp ugt i32 %22, 128, !dbg !7612
  %24 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 7, i32 0, !dbg !7613
  br i1 %23, label %25, label %30, !dbg !7614

25:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef 128) #17, !dbg !7615
  %26 = getelementptr inbounds %struct.hex_dump_message_t, %struct.hex_dump_message_t* %0, i32 0, i32 8, !dbg !7617
  %27 = load i8*, i8** %26, align 4, !dbg !7617
  %28 = load i32, i32* %21, align 4, !dbg !7618
  %29 = add i32 %28, -128, !dbg !7619
  tail call void @hex_dump_data(i8* noundef %27, i32 noundef %29) #17, !dbg !7620
  br label %31, !dbg !7621

30:                                               ; preds = %12
  tail call void @hex_dump_data(i8* noundef nonnull %24, i32 noundef %22) #17, !dbg !7622
  br label %31

31:                                               ; preds = %30, %25
  ret void, !dbg !7624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @process_log_message(%struct.log_message_t* noundef %0) local_unnamed_addr #2 !dbg !7625 {
  call void @llvm.dbg.value(metadata %struct.log_message_t* %0, metadata !7631, metadata !DIExpression()), !dbg !7635
  %2 = load i32, i32* @syslog_drop_count, align 4, !dbg !7636
  %3 = icmp eq i32 %2, 0, !dbg !7636
  br i1 %3, label %9, label %4, !dbg !7637

4:                                                ; preds = %1
  %5 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !7638, !srcloc !7192
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !7638
  call void @llvm.dbg.value(metadata i32 %6, metadata !7189, metadata !DIExpression()) #19, !dbg !7640
  call void @llvm.dbg.value(metadata i32 undef, metadata !7190, metadata !DIExpression()) #19, !dbg !7640
  call void @llvm.dbg.value(metadata i32 %6, metadata !7632, metadata !DIExpression()), !dbg !7641
  %7 = load i32, i32* @syslog_drop_count, align 4, !dbg !7642
  %8 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.129, i32 0, i32 0), i32 noundef %7) #18, !dbg !7643
  store i32 0, i32* @syslog_drop_count, align 4, !dbg !7644
  call void @llvm.dbg.value(metadata i32 %6, metadata !7208, metadata !DIExpression()) #19, !dbg !7645
  tail call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %6) #19, !dbg !7647, !srcloc !7214
  br label %9, !dbg !7648

9:                                                ; preds = %4, %1
  %10 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 0, !dbg !7649
  %11 = load i32, i32* %10, align 4, !dbg !7649
  %12 = icmp eq i32 %11, 0, !dbg !7651
  br i1 %12, label %13, label %16, !dbg !7652

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, !dbg !7653
  %15 = bitcast %union.anon.12* %14 to %struct.normal_log_message_t*, !dbg !7655
  tail call void @print_normal_log(%struct.normal_log_message_t* noundef nonnull %15) #17, !dbg !7656
  br label %18, !dbg !7657

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.log_message_t, %struct.log_message_t* %0, i32 0, i32 1, i32 0, !dbg !7658
  tail call void @print_hex_dump(%struct.hex_dump_message_t* noundef nonnull %17) #17, !dbg !7660
  br label %18

18:                                               ; preds = %16, %13
  ret void, !dbg !7661
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @syslog_task_entry(i8* nocapture readnone %0) #4 !dbg !7662 {
  %2 = alloca %struct.syslog_buffer_t*, align 4
  call void @llvm.dbg.value(metadata i8* undef, metadata !7664, metadata !DIExpression()), !dbg !7669
  store i1 true, i1* @syslog_task_ready, align 4, !dbg !7670
  tail call void @vTaskPrioritySet(i8* noundef null, i32 noundef 1) #18, !dbg !7671
  %3 = bitcast %struct.syslog_buffer_t** %2 to i8*
  br label %4, !dbg !7672

4:                                                ; preds = %12, %1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !7673
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !7665, metadata !DIExpression()), !dbg !7674
  store %struct.syslog_buffer_t* null, %struct.syslog_buffer_t** %2, align 4, !dbg !7675
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t** %2, metadata !7665, metadata !DIExpression(DW_OP_deref)), !dbg !7674
  %5 = call i32 @log_queue_receive(%struct.syslog_buffer_t** noundef nonnull %2) #17, !dbg !7676
  %6 = icmp eq i32 %5, 0, !dbg !7678
  br i1 %6, label %7, label %12, !dbg !7679

7:                                                ; preds = %4
  %8 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !7680
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %8, metadata !7665, metadata !DIExpression()), !dbg !7674
  %9 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %8, i32 0, i32 1, i32 0, !dbg !7682
  %10 = bitcast i8* %9 to %struct.log_message_t*, !dbg !7683
  call void @process_log_message(%struct.log_message_t* noundef nonnull %10) #17, !dbg !7684
  %11 = load %struct.syslog_buffer_t*, %struct.syslog_buffer_t** %2, align 4, !dbg !7685
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !7665, metadata !DIExpression()), !dbg !7674
  call void @buffer_pool_release(%struct.syslog_buffer_t* noundef %11) #17, !dbg !7686
  br label %12, !dbg !7687

12:                                               ; preds = %7, %4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !7688
  br label %4, !dbg !7689, !llvm.loop !7690
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_init(void (%struct.syslog_config_s*)* noundef %0, i32 (%struct.syslog_config_s*)* noundef readonly %1, %struct.log_control_block_t** noundef %2) local_unnamed_addr #2 !dbg !7693 {
  %4 = alloca %struct.exception_config_type, align 4
  call void @llvm.dbg.value(metadata void (%struct.syslog_config_s*)* %0, metadata !7702, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.value(metadata i32 (%struct.syslog_config_s*)* %1, metadata !7703, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %2, metadata !7704, metadata !DIExpression()), !dbg !7711
  %5 = bitcast %struct.exception_config_type* %4 to i8*, !dbg !7712
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #19, !dbg !7712
  call void @llvm.dbg.declare(metadata %struct.exception_config_type* %4, metadata !7705, metadata !DIExpression()), !dbg !7713
  %6 = load i32, i32* @syslog_init_done, align 4, !dbg !7714
  %7 = and i32 %6, 2, !dbg !7716
  %8 = icmp eq i32 %7, 0, !dbg !7716
  br i1 %8, label %9, label %31, !dbg !7717

9:                                                ; preds = %3
  %10 = or i32 %6, 1, !dbg !7718
  store i32 %10, i32* @syslog_init_done, align 4, !dbg !7718
  tail call void @buffer_pool_init() #17, !dbg !7719
  tail call void @log_queue_create() #17, !dbg !7720
  store i1 false, i1* @syslog_task_ready, align 4, !dbg !7721
  %11 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 0, !dbg !7722
  store void ()* @syslog_exception_cb, void ()** %11, align 4, !dbg !7723
  %12 = getelementptr inbounds %struct.exception_config_type, %struct.exception_config_type* %4, i32 0, i32 1, !dbg !7724
  store void ()* null, void ()** %12, align 4, !dbg !7725
  %13 = call zeroext i1 @exception_register_callbacks(%struct.exception_config_type* noundef nonnull %4) #18, !dbg !7726
  %14 = call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @syslog_task_entry, i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.130, i32 0, i32 0), i16 noundef zeroext 192, i8* noundef null, i32 noundef 8, i8** noundef nonnull @syslog_task_handle, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #18, !dbg !7727
  %15 = icmp eq i32 %14, 1, !dbg !7729
  br i1 %15, label %18, label %16, !dbg !7730

16:                                               ; preds = %9
  %17 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10.131, i32 0, i32 0)) #18, !dbg !7731
  br label %18, !dbg !7733

18:                                               ; preds = %16, %9
  %19 = call fastcc i32 @get_current_time_in_ms() #17, !dbg !7734
  %20 = load i32, i32* @syslog_init_done, align 4, !dbg !7735
  %21 = or i32 %20, 2, !dbg !7735
  store i32 %21, i32* @syslog_init_done, align 4, !dbg !7735
  store void (%struct.syslog_config_s*)* %0, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !7736
  store %struct.log_control_block_t** %2, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !7737
  %22 = icmp eq i32 (%struct.syslog_config_s*)* %1, null, !dbg !7738
  br i1 %22, label %28, label %23, !dbg !7740

23:                                               ; preds = %18
  %24 = call i32 %1(%struct.syslog_config_s* noundef nonnull @syslog_config) #18, !dbg !7741
  %25 = icmp eq i32 %24, 0, !dbg !7744
  br i1 %25, label %28, label %26, !dbg !7745

26:                                               ; preds = %23
  %27 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !7746
  call void (i8*, i8*, i32, i32, i8*, ...) %27(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.log_init, i32 0, i32 0), i32 noundef 1040, i32 noundef 3, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11.132, i32 0, i32 0)) #18, !dbg !7746
  br label %28, !dbg !7749

28:                                               ; preds = %23, %26, %18
  %29 = load i32, i32* @syslog_init_done, align 4, !dbg !7750
  %30 = or i32 %29, 4, !dbg !7750
  store i32 %30, i32* @syslog_init_done, align 4, !dbg !7750
  br label %31, !dbg !7751

31:                                               ; preds = %3, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #19, !dbg !7751
  ret void, !dbg !7751
}

; Function Attrs: noinline nounwind optsize
define internal void @syslog_exception_cb() #2 !dbg !7752 {
  tail call fastcc void @syslog_buffer_dump() #17, !dbg !7753
  ret void, !dbg !7754
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @syslog_buffer_dump() unnamed_addr #2 !dbg !7755 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !7758, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata i32 0, metadata !7757, metadata !DIExpression()), !dbg !7760
  br label %1, !dbg !7761

1:                                                ; preds = %0, %10
  %2 = phi i32 [ 0, %0 ], [ %12, %10 ]
  %3 = phi %struct.syslog_buffer_t* [ null, %0 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7757, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %3, metadata !7758, metadata !DIExpression()), !dbg !7760
  %4 = getelementptr inbounds [16 x %struct.syslog_buffer_t], [16 x %struct.syslog_buffer_t]* @syslog_buffer_pool, i32 0, i32 %2, !dbg !7763
  %5 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %4, i32 0, i32 0, !dbg !7767
  %6 = load i32, i32* %5, align 4, !dbg !7767
  %7 = icmp eq i32 %6, 0, !dbg !7763
  br i1 %7, label %10, label %8, !dbg !7768

8:                                                ; preds = %1
  %9 = ptrtoint %struct.syslog_buffer_t* %3 to i32, !dbg !7769
  store i32 %9, i32* %5, align 4, !dbg !7771
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %4, metadata !7758, metadata !DIExpression()), !dbg !7760
  br label %10, !dbg !7772

10:                                               ; preds = %1, %8
  %11 = phi %struct.syslog_buffer_t* [ %4, %8 ], [ %3, %1 ], !dbg !7760
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %11, metadata !7758, metadata !DIExpression()), !dbg !7760
  %12 = add nuw nsw i32 %2, 1, !dbg !7773
  call void @llvm.dbg.value(metadata i32 %12, metadata !7757, metadata !DIExpression()), !dbg !7760
  %13 = icmp eq i32 %12, 16, !dbg !7774
  br i1 %13, label %14, label %1, !dbg !7761, !llvm.loop !7775

14:                                               ; preds = %10
  %15 = tail call fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %11) #17, !dbg !7777
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !7758, metadata !DIExpression()), !dbg !7760
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.133, i32 0, i32 0)) #18, !dbg !7778
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %15, metadata !7758, metadata !DIExpression()), !dbg !7760
  %17 = icmp eq %struct.syslog_buffer_t* %15, null, !dbg !7779
  br i1 %17, label %26, label %18, !dbg !7779

18:                                               ; preds = %14, %18
  %19 = phi %struct.syslog_buffer_t* [ %22, %18 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !7758, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %19, metadata !7759, metadata !DIExpression()), !dbg !7760
  %20 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 0, !dbg !7780
  %21 = load i32, i32* %20, align 4, !dbg !7780
  %22 = inttoptr i32 %21 to %struct.syslog_buffer_t*, !dbg !7782
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %22, metadata !7758, metadata !DIExpression()), !dbg !7760
  store i32 1, i32* %20, align 4, !dbg !7783
  %23 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %19, i32 0, i32 1, i32 0, !dbg !7784
  %24 = bitcast i8* %23 to %struct.log_message_t*, !dbg !7785
  tail call void @process_log_message(%struct.log_message_t* noundef nonnull %24) #17, !dbg !7786
  %25 = icmp eq i32 %21, 0, !dbg !7779
  br i1 %25, label %26, label %18, !dbg !7779, !llvm.loop !7787

26:                                               ; preds = %18, %14
  ret void, !dbg !7789
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc %struct.syslog_buffer_t* @sort_syslog_buffer(%struct.syslog_buffer_t* noundef %0) unnamed_addr #11 !dbg !7790 {
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %0, metadata !7794, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* null, metadata !7795, metadata !DIExpression()), !dbg !7798
  %2 = icmp eq %struct.syslog_buffer_t* %0, null, !dbg !7799
  br i1 %2, label %44, label %3, !dbg !7801

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %0, i32 0, i32 0, !dbg !7802
  %5 = load i32, i32* %4, align 4, !dbg !7802
  %6 = icmp eq i32 %5, 0, !dbg !7803
  br i1 %6, label %44, label %7, !dbg !7804

7:                                                ; preds = %3, %41
  %8 = phi i32 [ %43, %41 ], [ %5, %3 ], !dbg !7805
  %9 = phi %struct.syslog_buffer_t* [ %38, %41 ], [ null, %3 ]
  %10 = phi %struct.syslog_buffer_t* [ %12, %41 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %9, metadata !7795, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !7794, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %10, metadata !7796, metadata !DIExpression()), !dbg !7798
  %11 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 0, !dbg !7805
  %12 = inttoptr i32 %8 to %struct.syslog_buffer_t*, !dbg !7807
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !7794, metadata !DIExpression()), !dbg !7798
  %13 = icmp eq %struct.syslog_buffer_t* %9, null, !dbg !7808
  br i1 %13, label %35, label %14, !dbg !7810

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %10, i32 0, i32 1, i32 20, !dbg !7811
  %16 = bitcast i8* %15 to i32*, !dbg !7811
  %17 = load i32, i32* %16, align 4, !dbg !7811
  %18 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %9, i32 0, i32 1, i32 20, !dbg !7812
  %19 = bitcast i8* %18 to i32*, !dbg !7812
  %20 = load i32, i32* %19, align 4, !dbg !7812
  %21 = icmp ult i32 %17, %20, !dbg !7813
  br i1 %21, label %35, label %22, !dbg !7814

22:                                               ; preds = %14, %27
  %23 = phi %struct.syslog_buffer_t* [ %28, %27 ], [ %9, %14 ], !dbg !7815
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %23, metadata !7797, metadata !DIExpression()), !dbg !7798
  %24 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !7817
  %25 = load i32, i32* %24, align 4, !dbg !7817
  %26 = icmp eq i32 %25, 0, !dbg !7820
  br i1 %26, label %33, label %27, !dbg !7821

27:                                               ; preds = %22
  %28 = inttoptr i32 %25 to %struct.syslog_buffer_t*, !dbg !7822
  %29 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %28, i32 0, i32 1, i32 20, !dbg !7822
  %30 = bitcast i8* %29 to i32*, !dbg !7822
  %31 = load i32, i32* %30, align 4, !dbg !7822
  %32 = icmp ult i32 %17, %31, !dbg !7823
  br i1 %32, label %33, label %22, !dbg !7824, !llvm.loop !7825

33:                                               ; preds = %27, %22
  %34 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %23, i32 0, i32 0, !dbg !7817
  store i32 %25, i32* %11, align 4, !dbg !7828
  br label %35, !dbg !7830

35:                                               ; preds = %7, %14, %33
  %36 = phi %struct.syslog_buffer_t* [ %10, %33 ], [ %9, %14 ], [ %9, %7 ]
  %37 = phi i32* [ %34, %33 ], [ %11, %14 ], [ %11, %7 ]
  %38 = phi %struct.syslog_buffer_t* [ %9, %33 ], [ %10, %14 ], [ %10, %7 ], !dbg !7798
  %39 = ptrtoint %struct.syslog_buffer_t* %36 to i32, !dbg !7831
  store i32 %39, i32* %37, align 4, !dbg !7831
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %38, metadata !7795, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata %struct.syslog_buffer_t* %12, metadata !7794, metadata !DIExpression()), !dbg !7798
  %40 = icmp eq i32 %8, 0, !dbg !7832
  br i1 %40, label %44, label %41, !dbg !7833, !llvm.loop !7834

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.syslog_buffer_t, %struct.syslog_buffer_t* %12, i32 0, i32 0
  %43 = load i32, i32* %42, align 4, !dbg !7805
  br label %7, !dbg !7833

44:                                               ; preds = %35, %1, %3
  %45 = phi %struct.syslog_buffer_t* [ %0, %3 ], [ null, %1 ], [ %38, %35 ], !dbg !7798
  ret %struct.syslog_buffer_t* %45, !dbg !7836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @syslog_get_config(%struct.syslog_config_s* nocapture noundef writeonly %0) local_unnamed_addr #10 !dbg !7837 {
  call void @llvm.dbg.value(metadata %struct.syslog_config_s* %0, metadata !7841, metadata !DIExpression()), !dbg !7842
  %2 = bitcast %struct.syslog_config_s* %0 to i64*, !dbg !7843
  %3 = load i64, i64* bitcast (%struct.syslog_config_s* @syslog_config to i64*), align 8, !dbg !7843
  store i64 %3, i64* %2, align 4, !dbg !7843
  ret void, !dbg !7844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_set_filter(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !7845 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7849, metadata !DIExpression()), !dbg !7856
  call void @llvm.dbg.value(metadata i8* %1, metadata !7850, metadata !DIExpression()), !dbg !7856
  call void @llvm.dbg.value(metadata i8* %2, metadata !7851, metadata !DIExpression()), !dbg !7856
  call void @llvm.dbg.value(metadata i32 %3, metadata !7852, metadata !DIExpression()), !dbg !7856
  %5 = tail call i32 @str_to_log_switch(i8* noundef %1) #17, !dbg !7857
  call void @llvm.dbg.value(metadata i32 %5, metadata !7854, metadata !DIExpression()), !dbg !7856
  %6 = icmp slt i32 %5, 0, !dbg !7858
  br i1 %6, label %47, label %7, !dbg !7860

7:                                                ; preds = %4
  %8 = tail call i32 @str_to_print_level(i8* noundef %2) #17, !dbg !7861
  call void @llvm.dbg.value(metadata i32 %8, metadata !7855, metadata !DIExpression()), !dbg !7856
  %9 = icmp slt i32 %8, 0, !dbg !7862
  br i1 %9, label %47, label %10, !dbg !7864

10:                                               ; preds = %7
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.134, i32 0, i32 0)) #18, !dbg !7865
  %12 = icmp eq i32 %11, 0, !dbg !7867
  %13 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !7868
  br i1 %12, label %14, label %31, !dbg !7869

14:                                               ; preds = %10
  %15 = icmp eq %struct.log_control_block_t** %13, null, !dbg !7870
  br i1 %15, label %47, label %16, !dbg !7873

16:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 0, metadata !7853, metadata !DIExpression()), !dbg !7856
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %13, align 4, !dbg !7874
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !7875
  br i1 %18, label %43, label %19, !dbg !7875

19:                                               ; preds = %16, %19
  %20 = phi %struct.log_control_block_t* [ %29, %19 ], [ %17, %16 ]
  %21 = phi i32 [ %27, %19 ], [ 0, %16 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !7853, metadata !DIExpression()), !dbg !7856
  %22 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %20, i32 0, i32 1, !dbg !7876
  store i32 %5, i32* %22, align 4, !dbg !7878
  %23 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !7879
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %21, !dbg !7880
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !7880
  %26 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %25, i32 0, i32 2, !dbg !7881
  store i32 %8, i32* %26, align 4, !dbg !7882
  %27 = add nuw nsw i32 %21, 1, !dbg !7883
  call void @llvm.dbg.value(metadata i32 %27, metadata !7853, metadata !DIExpression()), !dbg !7856
  %28 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %23, i32 %27, !dbg !7874
  %29 = load %struct.log_control_block_t*, %struct.log_control_block_t** %28, align 4, !dbg !7874
  %30 = icmp eq %struct.log_control_block_t* %29, null, !dbg !7875
  br i1 %30, label %43, label %19, !dbg !7875, !llvm.loop !7884

31:                                               ; preds = %10
  %32 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %13, i8* noundef %0) #17, !dbg !7886
  call void @llvm.dbg.value(metadata i32 %32, metadata !7853, metadata !DIExpression()), !dbg !7856
  %33 = icmp slt i32 %32, 0, !dbg !7888
  br i1 %33, label %47, label %34, !dbg !7890

34:                                               ; preds = %31
  %35 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !7891
  %36 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %35, i32 %32, !dbg !7892
  %37 = load %struct.log_control_block_t*, %struct.log_control_block_t** %36, align 4, !dbg !7892
  %38 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %37, i32 0, i32 1, !dbg !7893
  store i32 %5, i32* %38, align 4, !dbg !7894
  %39 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !7895
  %40 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %39, i32 %32, !dbg !7896
  %41 = load %struct.log_control_block_t*, %struct.log_control_block_t** %40, align 4, !dbg !7896
  %42 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %41, i32 0, i32 2, !dbg !7897
  store i32 %8, i32* %42, align 4, !dbg !7898
  br label %43

43:                                               ; preds = %19, %16, %34
  %44 = icmp eq i32 %3, 0, !dbg !7899
  br i1 %44, label %47, label %45, !dbg !7901

45:                                               ; preds = %43
  %46 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !7902
  tail call void %46(%struct.syslog_config_s* noundef nonnull @syslog_config) #18, !dbg !7904
  br label %47, !dbg !7905

47:                                               ; preds = %43, %45, %31, %14, %7, %4
  %48 = phi i32 [ -1, %4 ], [ -1, %7 ], [ -1, %14 ], [ -1, %31 ], [ 0, %45 ], [ 0, %43 ], !dbg !7856
  ret i32 %48, !dbg !7906
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_log_switch(i8* noundef %0) local_unnamed_addr #2 !dbg !7907 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7911, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i32 0, metadata !7912, metadata !DIExpression()), !dbg !7913
  br label %2, !dbg !7914

2:                                                ; preds = %2, %1
  %3 = phi i1 [ false, %1 ], [ true, %2 ]
  %4 = phi i32 [ 0, %1 ], [ 1, %2 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !7912, metadata !DIExpression()), !dbg !7913
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %4, !dbg !7916
  %6 = load i8*, i8** %5, align 4, !dbg !7916
  %7 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %6) #18, !dbg !7920
  %8 = icmp eq i32 %7, 0, !dbg !7920
  %9 = or i1 %8, %3, !dbg !7921
  br i1 %9, label %10, label %2, !dbg !7921

10:                                               ; preds = %2
  %11 = select i1 %8, i32 %4, i32 -1, !dbg !7921
  ret i32 %11, !dbg !7922
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @str_to_print_level(i8* noundef %0) local_unnamed_addr #2 !dbg !7923 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7925, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 0, metadata !7926, metadata !DIExpression()), !dbg !7927
  br label %2, !dbg !7928

2:                                                ; preds = %1, %8
  %3 = phi i32 [ 0, %1 ], [ %9, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7926, metadata !DIExpression()), !dbg !7927
  %4 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %3, !dbg !7930
  %5 = load i8*, i8** %4, align 4, !dbg !7930
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #18, !dbg !7934
  %7 = icmp eq i32 %6, 0, !dbg !7934
  br i1 %7, label %11, label %8, !dbg !7935

8:                                                ; preds = %2
  %9 = add nuw nsw i32 %3, 1, !dbg !7936
  call void @llvm.dbg.value(metadata i32 %9, metadata !7926, metadata !DIExpression()), !dbg !7927
  %10 = icmp eq i32 %9, 4, !dbg !7937
  br i1 %10, label %11, label %2, !dbg !7928, !llvm.loop !7938

11:                                               ; preds = %8, %2
  %12 = phi i32 [ %3, %2 ], [ -1, %8 ], !dbg !7927
  ret i32 %12, !dbg !7940
}

; Function Attrs: optsize
declare dso_local i32 @strcmp(i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) unnamed_addr #2 !dbg !7941 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !7945, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i8* %1, metadata !7946, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.value(metadata i32 0, metadata !7947, metadata !DIExpression()), !dbg !7948
  %3 = icmp eq %struct.log_control_block_t** %0, null, !dbg !7949
  br i1 %3, label %19, label %4, !dbg !7951

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !7947, metadata !DIExpression()), !dbg !7948
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !7952
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !7953
  br i1 %6, label %19, label %7, !dbg !7953

7:                                                ; preds = %4, %14
  %8 = phi %struct.log_control_block_t* [ %17, %14 ], [ %5, %4 ]
  %9 = phi i32 [ %15, %14 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7947, metadata !DIExpression()), !dbg !7948
  %10 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !7954
  %11 = load i8*, i8** %10, align 4, !dbg !7954
  %12 = tail call i32 @strcmp(i8* noundef %11, i8* noundef %1) #18, !dbg !7957
  %13 = icmp eq i32 %12, 0, !dbg !7957
  br i1 %13, label %19, label %14, !dbg !7958

14:                                               ; preds = %7
  %15 = add nuw nsw i32 %9, 1, !dbg !7959
  call void @llvm.dbg.value(metadata i32 %15, metadata !7947, metadata !DIExpression()), !dbg !7948
  %16 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %15, !dbg !7952
  %17 = load %struct.log_control_block_t*, %struct.log_control_block_t** %16, align 4, !dbg !7952
  %18 = icmp eq %struct.log_control_block_t* %17, null, !dbg !7953
  br i1 %18, label %19, label %7, !dbg !7953, !llvm.loop !7960

19:                                               ; preds = %7, %14, %4, %2
  %20 = phi i32 [ -1, %2 ], [ -1, %4 ], [ %9, %7 ], [ -1, %14 ], !dbg !7948
  ret i32 %20, !dbg !7962
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_at_set_filter(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !7963 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7967, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32 %1, metadata !7968, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32 %2, metadata !7969, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.value(metadata i32 %3, metadata !7970, metadata !DIExpression()), !dbg !7972
  %5 = tail call i32 @strcmp(i8* noundef %0, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.134, i32 0, i32 0)) #18, !dbg !7973
  %6 = icmp eq i32 %5, 0, !dbg !7975
  %7 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !7976
  br i1 %6, label %8, label %25, !dbg !7977

8:                                                ; preds = %4
  %9 = icmp eq %struct.log_control_block_t** %7, null, !dbg !7978
  br i1 %9, label %41, label %10, !dbg !7981

10:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 0, metadata !7971, metadata !DIExpression()), !dbg !7972
  %11 = load %struct.log_control_block_t*, %struct.log_control_block_t** %7, align 4, !dbg !7982
  %12 = icmp eq %struct.log_control_block_t* %11, null, !dbg !7983
  br i1 %12, label %37, label %13, !dbg !7983

13:                                               ; preds = %10, %13
  %14 = phi %struct.log_control_block_t* [ %23, %13 ], [ %11, %10 ]
  %15 = phi i32 [ %21, %13 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7971, metadata !DIExpression()), !dbg !7972
  %16 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %14, i32 0, i32 1, !dbg !7984
  store i32 %1, i32* %16, align 4, !dbg !7986
  %17 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !7987
  %18 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %15, !dbg !7988
  %19 = load %struct.log_control_block_t*, %struct.log_control_block_t** %18, align 4, !dbg !7988
  %20 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %19, i32 0, i32 2, !dbg !7989
  store i32 %2, i32* %20, align 4, !dbg !7990
  %21 = add nuw nsw i32 %15, 1, !dbg !7991
  call void @llvm.dbg.value(metadata i32 %21, metadata !7971, metadata !DIExpression()), !dbg !7972
  %22 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %17, i32 %21, !dbg !7982
  %23 = load %struct.log_control_block_t*, %struct.log_control_block_t** %22, align 4, !dbg !7982
  %24 = icmp eq %struct.log_control_block_t* %23, null, !dbg !7983
  br i1 %24, label %37, label %13, !dbg !7983, !llvm.loop !7992

25:                                               ; preds = %4
  %26 = tail call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %7, i8* noundef %0) #17, !dbg !7994
  call void @llvm.dbg.value(metadata i32 %26, metadata !7971, metadata !DIExpression()), !dbg !7972
  %27 = icmp slt i32 %26, 0, !dbg !7996
  br i1 %27, label %41, label %28, !dbg !7998

28:                                               ; preds = %25
  %29 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !7999
  %30 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %29, i32 %26, !dbg !8000
  %31 = load %struct.log_control_block_t*, %struct.log_control_block_t** %30, align 4, !dbg !8000
  %32 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %31, i32 0, i32 1, !dbg !8001
  store i32 %1, i32* %32, align 4, !dbg !8002
  %33 = load %struct.log_control_block_t**, %struct.log_control_block_t*** getelementptr inbounds (%struct.syslog_config_s, %struct.syslog_config_s* @syslog_config, i32 0, i32 1), align 4, !dbg !8003
  %34 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %33, i32 %26, !dbg !8004
  %35 = load %struct.log_control_block_t*, %struct.log_control_block_t** %34, align 4, !dbg !8004
  %36 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %35, i32 0, i32 2, !dbg !8005
  store i32 %2, i32* %36, align 4, !dbg !8006
  br label %37

37:                                               ; preds = %13, %10, %28
  %38 = icmp eq i32 %3, 0, !dbg !8007
  br i1 %38, label %41, label %39, !dbg !8009

39:                                               ; preds = %37
  %40 = load void (%struct.syslog_config_s*)*, void (%struct.syslog_config_s*)** bitcast (%struct.syslog_config_s* @syslog_config to void (%struct.syslog_config_s*)**), align 8, !dbg !8010
  tail call void %40(%struct.syslog_config_s* noundef nonnull @syslog_config) #18, !dbg !8012
  br label %41, !dbg !8013

41:                                               ; preds = %37, %39, %25, %8
  %42 = phi i32 [ -1, %8 ], [ -1, %25 ], [ 0, %39 ], [ 0, %37 ], !dbg !7972
  ret i32 %42, !dbg !8014
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_str2val(%struct.log_control_block_t** noundef %0, i8* noundef %1) local_unnamed_addr #2 !dbg !8015 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !8019, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i8* %1, metadata !8020, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i32 0, metadata !8021, metadata !DIExpression()), !dbg !8030
  %7 = bitcast i8** %3 to i8*, !dbg !8031
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !8031
  %8 = bitcast i8** %4 to i8*, !dbg !8032
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #19, !dbg !8032
  %9 = bitcast i8** %5 to i8*, !dbg !8033
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #19, !dbg !8033
  call void @llvm.dbg.value(metadata i8 0, metadata !8026, metadata !DIExpression()), !dbg !8030
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #19, !dbg !8034
  call void @llvm.dbg.value(metadata i8 poison, metadata !8026, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i32 0, metadata !8021, metadata !DIExpression()), !dbg !8030
  br label %10, !dbg !8035

10:                                               ; preds = %2, %51
  %11 = phi i32 [ 0, %2 ], [ %37, %51 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8021, metadata !DIExpression()), !dbg !8030
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !8036
  call void @llvm.dbg.value(metadata i8** %3, metadata !8023, metadata !DIExpression(DW_OP_deref)), !dbg !8030
  %13 = call fastcc i32 @syslog_get_a_string(i8* noundef %12, i8** noundef nonnull %3) #17, !dbg !8038
  call void @llvm.dbg.value(metadata i32 %13, metadata !8022, metadata !DIExpression()), !dbg !8030
  %14 = icmp eq i32 %13, 0, !dbg !8039
  br i1 %14, label %61, label %15, !dbg !8041

15:                                               ; preds = %10
  %16 = add i32 %13, %11, !dbg !8042
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !8043
  %18 = load i8, i8* %17, align 1, !dbg !8043
  %19 = icmp eq i8 %18, 0, !dbg !8044
  br i1 %19, label %61, label %20, !dbg !8045

20:                                               ; preds = %15
  store i8 0, i8* %17, align 1, !dbg !8046
  %21 = add i32 %16, 1, !dbg !8047
  call void @llvm.dbg.value(metadata i32 %21, metadata !8021, metadata !DIExpression()), !dbg !8030
  %22 = getelementptr inbounds i8, i8* %1, i32 %21, !dbg !8048
  call void @llvm.dbg.value(metadata i8** %4, metadata !8024, metadata !DIExpression(DW_OP_deref)), !dbg !8030
  %23 = call fastcc i32 @syslog_get_a_string(i8* noundef %22, i8** noundef nonnull %4) #17, !dbg !8049
  call void @llvm.dbg.value(metadata i32 %23, metadata !8022, metadata !DIExpression()), !dbg !8030
  %24 = icmp eq i32 %23, 0, !dbg !8050
  br i1 %24, label %61, label %25, !dbg !8052

25:                                               ; preds = %20
  %26 = add i32 %23, %21, !dbg !8053
  %27 = getelementptr inbounds i8, i8* %1, i32 %26, !dbg !8054
  call void @llvm.dbg.value(metadata i1 undef, metadata !8026, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8030
  store i8 0, i8* %27, align 1, !dbg !8055
  %28 = add i32 %26, 1, !dbg !8056
  call void @llvm.dbg.value(metadata i32 %28, metadata !8021, metadata !DIExpression()), !dbg !8030
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !8057
  call void @llvm.dbg.value(metadata i8** %5, metadata !8025, metadata !DIExpression(DW_OP_deref)), !dbg !8030
  %30 = call fastcc i32 @syslog_get_a_string(i8* noundef %29, i8** noundef nonnull %5) #17, !dbg !8058
  call void @llvm.dbg.value(metadata i32 %30, metadata !8022, metadata !DIExpression()), !dbg !8030
  %31 = icmp eq i32 %30, 0, !dbg !8059
  br i1 %31, label %61, label %32, !dbg !8061

32:                                               ; preds = %25
  %33 = add i32 %30, %28, !dbg !8062
  %34 = getelementptr inbounds i8, i8* %1, i32 %33, !dbg !8063
  %35 = load i8, i8* %34, align 1, !dbg !8063
  %36 = icmp eq i8 %35, 0, !dbg !8064
  call void @llvm.dbg.value(metadata i1 %36, metadata !8026, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8030
  store i8 0, i8* %34, align 1, !dbg !8065
  %37 = add i32 %33, 1, !dbg !8066
  call void @llvm.dbg.value(metadata i32 %37, metadata !8021, metadata !DIExpression()), !dbg !8030
  %38 = load i8*, i8** %3, align 4, !dbg !8067
  call void @llvm.dbg.value(metadata i8* %38, metadata !8023, metadata !DIExpression()), !dbg !8030
  %39 = call fastcc i32 @syslog_get_index_from_module_name(%struct.log_control_block_t** noundef %0, i8* noundef %38) #17, !dbg !8068
  call void @llvm.dbg.value(metadata i32 %39, metadata !8022, metadata !DIExpression()), !dbg !8030
  %40 = icmp slt i32 %39, 0, !dbg !8069
  br i1 %40, label %61, label %41, !dbg !8071

41:                                               ; preds = %32
  %42 = load i8*, i8** %4, align 4, !dbg !8072
  call void @llvm.dbg.value(metadata i8* %42, metadata !8024, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i8* %6, metadata !8029, metadata !DIExpression(DW_OP_deref)), !dbg !8030
  %43 = call i32 @toi(i8* noundef %42, i8* noundef nonnull %6) #18, !dbg !8073
  call void @llvm.dbg.value(metadata i32 %43, metadata !8027, metadata !DIExpression()), !dbg !8030
  %44 = load i8, i8* %6, align 1, !dbg !8074
  call void @llvm.dbg.value(metadata i8 %44, metadata !8029, metadata !DIExpression()), !dbg !8030
  %45 = icmp eq i8 %44, 4, !dbg !8076
  br i1 %45, label %61, label %46, !dbg !8077

46:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 undef, metadata !8027, metadata !DIExpression()), !dbg !8030
  %47 = load i8*, i8** %5, align 4, !dbg !8078
  call void @llvm.dbg.value(metadata i8* %47, metadata !8025, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i8* %6, metadata !8029, metadata !DIExpression(DW_OP_deref)), !dbg !8030
  %48 = call i32 @toi(i8* noundef %47, i8* noundef nonnull %6) #18, !dbg !8079
  call void @llvm.dbg.value(metadata i32 %48, metadata !8028, metadata !DIExpression()), !dbg !8030
  %49 = load i8, i8* %6, align 1, !dbg !8080
  call void @llvm.dbg.value(metadata i8 %49, metadata !8029, metadata !DIExpression()), !dbg !8030
  %50 = icmp eq i8 %49, 4, !dbg !8082
  br i1 %50, label %61, label %51, !dbg !8083

51:                                               ; preds = %46
  %52 = icmp ne i32 %43, 0, !dbg !8084
  %53 = zext i1 %52 to i32, !dbg !8084
  call void @llvm.dbg.value(metadata i32 %53, metadata !8027, metadata !DIExpression()), !dbg !8030
  %54 = icmp ult i32 %48, 3, !dbg !8085
  %55 = select i1 %54, i32 %48, i32 3, !dbg !8085
  call void @llvm.dbg.value(metadata i32 %55, metadata !8028, metadata !DIExpression()), !dbg !8030
  %56 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %39, !dbg !8086
  %57 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !8086
  %58 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %57, i32 0, i32 1, !dbg !8087
  store i32 %53, i32* %58, align 4, !dbg !8088
  %59 = load %struct.log_control_block_t*, %struct.log_control_block_t** %56, align 4, !dbg !8089
  %60 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %59, i32 0, i32 2, !dbg !8090
  store i32 %55, i32* %60, align 4, !dbg !8091
  call void @llvm.dbg.value(metadata i8 poison, metadata !8026, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.value(metadata i32 %37, metadata !8021, metadata !DIExpression()), !dbg !8030
  br i1 %36, label %61, label %10, !dbg !8035, !llvm.loop !8092

61:                                               ; preds = %51, %46, %41, %32, %25, %20, %10, %15
  %62 = phi i32 [ -1, %15 ], [ -1, %10 ], [ -2, %20 ], [ -2, %25 ], [ -3, %32 ], [ -4, %41 ], [ -4, %46 ], [ 0, %51 ], !dbg !8030
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #19, !dbg !8094
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #19, !dbg !8094
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #19, !dbg !8094
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !8094
  ret i32 %62, !dbg !8094
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @syslog_get_a_string(i8* noundef %0, i8** nocapture noundef writeonly %1) unnamed_addr #11 !dbg !8095 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8100, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.value(metadata i8** %1, metadata !8101, metadata !DIExpression()), !dbg !8103
  br label %3, !dbg !8104

3:                                                ; preds = %6, %2
  %4 = phi i8* [ %0, %2 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i8* %4, metadata !8100, metadata !DIExpression()), !dbg !8103
  %5 = load i8, i8* %4, align 1, !dbg !8105
  switch i8 %5, label %9 [
    i8 32, label %6
    i8 0, label %8
  ], !dbg !8104

6:                                                ; preds = %3
  %7 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8106
  call void @llvm.dbg.value(metadata i8* %7, metadata !8100, metadata !DIExpression()), !dbg !8103
  br label %3, !dbg !8104, !llvm.loop !8108

8:                                                ; preds = %3
  store i8* null, i8** %1, align 4, !dbg !8110
  br label %19, !dbg !8113

9:                                                ; preds = %3
  store i8* %4, i8** %1, align 4, !dbg !8114
  br label %10, !dbg !8115

10:                                               ; preds = %13, %9
  %11 = phi i8* [ %4, %9 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !8100, metadata !DIExpression()), !dbg !8103
  %12 = load i8, i8* %11, align 1, !dbg !8116
  switch i8 %12, label %13 [
    i8 32, label %15
    i8 0, label %15
  ], !dbg !8117

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !8118
  call void @llvm.dbg.value(metadata i8* %14, metadata !8100, metadata !DIExpression()), !dbg !8103
  br label %10, !dbg !8115, !llvm.loop !8120

15:                                               ; preds = %10, %10
  %16 = ptrtoint i8* %11 to i32, !dbg !8122
  %17 = ptrtoint i8* %4 to i32, !dbg !8122
  %18 = sub i32 %16, %17, !dbg !8122
  br label %19, !dbg !8123

19:                                               ; preds = %15, %8
  %20 = phi i32 [ 0, %8 ], [ %18, %15 ], !dbg !8103
  ret i32 %20, !dbg !8124
}

; Function Attrs: optsize
declare dso_local i32 @toi(i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @syslog_convert_filter_val2str(%struct.log_control_block_t** noundef readonly %0, i8* noundef %1) local_unnamed_addr #2 !dbg !8125 {
  call void @llvm.dbg.value(metadata %struct.log_control_block_t** %0, metadata !8132, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.value(metadata i8* %1, metadata !8133, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.value(metadata i32 0, metadata !8134, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.value(metadata i32 0, metadata !8135, metadata !DIExpression()), !dbg !8137
  %3 = icmp eq %struct.log_control_block_t** %0, null
  call void @llvm.dbg.value(metadata i32 0, metadata !8134, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.value(metadata i32 0, metadata !8135, metadata !DIExpression()), !dbg !8137
  br i1 %3, label %31, label %4, !dbg !8138

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 0, metadata !8134, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.value(metadata i32 0, metadata !8135, metadata !DIExpression()), !dbg !8137
  %5 = load %struct.log_control_block_t*, %struct.log_control_block_t** %0, align 4, !dbg !8139
  %6 = icmp eq %struct.log_control_block_t* %5, null, !dbg !8138
  br i1 %6, label %27, label %7, !dbg !8140

7:                                                ; preds = %4, %7
  %8 = phi %struct.log_control_block_t* [ %25, %7 ], [ %5, %4 ]
  %9 = phi i32 [ %22, %7 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %7 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8135, metadata !DIExpression()), !dbg !8137
  call void @llvm.dbg.value(metadata i32 %10, metadata !8134, metadata !DIExpression()), !dbg !8137
  %11 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !8141
  %12 = sub nsw i32 256, %9, !dbg !8143
  %13 = icmp eq i32 %10, 0, !dbg !8144
  %14 = select i1 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14.137, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.123, i32 0, i32 0), !dbg !8145
  %15 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 0, !dbg !8146
  %16 = load i8*, i8** %15, align 4, !dbg !8146
  %17 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 1, !dbg !8147
  %18 = load i32, i32* %17, align 4, !dbg !8147
  %19 = getelementptr inbounds %struct.log_control_block_t, %struct.log_control_block_t* %8, i32 0, i32 2, !dbg !8148
  %20 = load i32, i32* %19, align 4, !dbg !8148
  %21 = tail call i32 (i8*, i32, i8*, ...) @snprintf(i8* noundef %11, i32 noundef %12, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13.138, i32 0, i32 0), i8* noundef %14, i8* noundef %16, i32 noundef %18, i32 noundef %20) #18, !dbg !8149
  call void @llvm.dbg.value(metadata i32 %21, metadata !8136, metadata !DIExpression()), !dbg !8137
  %22 = add nsw i32 %21, %9, !dbg !8150
  call void @llvm.dbg.value(metadata i32 %22, metadata !8135, metadata !DIExpression()), !dbg !8137
  %23 = add nuw nsw i32 %10, 1, !dbg !8151
  call void @llvm.dbg.value(metadata i32 %23, metadata !8134, metadata !DIExpression()), !dbg !8137
  %24 = getelementptr inbounds %struct.log_control_block_t*, %struct.log_control_block_t** %0, i32 %23, !dbg !8139
  %25 = load %struct.log_control_block_t*, %struct.log_control_block_t** %24, align 4, !dbg !8139
  %26 = icmp eq %struct.log_control_block_t* %25, null, !dbg !8138
  br i1 %26, label %27, label %7, !dbg !8140, !llvm.loop !8152

27:                                               ; preds = %7, %4
  %28 = phi i32 [ 0, %4 ], [ %22, %7 ]
  %29 = icmp sgt i32 %28, 255, !dbg !8154
  br i1 %29, label %30, label %31, !dbg !8156

30:                                               ; preds = %27
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15.139, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.140, i32 0, i32 0), i32 noundef 1467) #18, !dbg !8157
  br label %31, !dbg !8157

31:                                               ; preds = %2, %30, %27
  %32 = phi i32 [ %28, %30 ], [ %28, %27 ], [ 0, %2 ]
  ret i32 %32, !dbg !8159
}

; Function Attrs: optsize
declare dso_local i32 @snprintf(i8* noundef, i32 noundef, i8* noundef, ...) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @log_switch_to_str(i32 noundef %0) local_unnamed_addr #2 !dbg !8160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8164, metadata !DIExpression()), !dbg !8165
  %2 = icmp ugt i32 %0, 1, !dbg !8166
  br i1 %2, label %3, label %4, !dbg !8168

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.140, i32 0, i32 0), i32 noundef 1474) #18, !dbg !8169
  br label %4, !dbg !8169

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [2 x i8*], [2 x i8*]* @log_switch_table, i32 0, i32 %0, !dbg !8171
  %6 = load i8*, i8** %5, align 4, !dbg !8171
  ret i8* %6, !dbg !8172
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @print_level_to_str(i32 noundef %0) local_unnamed_addr #2 !dbg !8173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8177, metadata !DIExpression()), !dbg !8178
  %2 = icmp ugt i32 %0, 3, !dbg !8179
  br i1 %2, label %3, label %4, !dbg !8181

3:                                                ; preds = %1
  tail call void @platform_assert(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.18.142, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16.140, i32 0, i32 0), i32 noundef 1480) #18, !dbg !8182
  br label %4, !dbg !8182

4:                                                ; preds = %3, %1
  %5 = getelementptr inbounds [4 x i8*], [4 x i8*]* @print_level_table, i32 0, i32 %0, !dbg !8184
  %6 = load i8*, i8** %5, align 4, !dbg !8184
  ret i8* %6, !dbg !8185
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__wrap_printf(i8* noundef %0, ...) local_unnamed_addr #2 !dbg !8186 {
  %2 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8190, metadata !DIExpression()), !dbg !8194
  %3 = bitcast %union.anon* %2 to i8*, !dbg !8195
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !8195
  call void @llvm.dbg.declare(metadata %union.anon* %2, metadata !8191, metadata !DIExpression()), !dbg !8196
  %4 = load i32, i32* @syslog_init_done, align 4, !dbg !8197
  %5 = icmp eq i32 %4, 0, !dbg !8197
  br i1 %5, label %13, label %6, !dbg !8199

6:                                                ; preds = %1
  %7 = tail call { i32, i32 } asm sideeffect "\09mrs $0, basepri\09\09\09\09\09\09\09\09\09\09\09\0A\09mov $1, $2\09\09\09\09\09\09\09\09\09\09\09\09\0A\09msr basepri, $1\09\09\09\09\09\09\09\09\09\09\09\0A\09isb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A\09dsb\09\09\09\09\09\09\09\09\09\09\09\09\09\09\0A", "=r,=r,i"(i32 128) #19, !dbg !8200, !srcloc !7192
  %8 = extractvalue { i32, i32 } %7, 0, !dbg !8200
  call void @llvm.dbg.value(metadata i32 %8, metadata !7189, metadata !DIExpression()) #19, !dbg !8202
  call void @llvm.dbg.value(metadata i32 undef, metadata !7190, metadata !DIExpression()) #19, !dbg !8202
  call void @llvm.dbg.value(metadata i32 %8, metadata !8193, metadata !DIExpression()), !dbg !8194
  call void @llvm.va_start(i8* nonnull %3), !dbg !8203
  %9 = bitcast %union.anon* %2 to i32*, !dbg !8204
  %10 = load i32, i32* %9, align 4, !dbg !8204
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !8204
  %12 = call i32 @vprintf(i8* noundef %0, [1 x i32] %11) #18, !dbg !8204
  call void @llvm.dbg.value(metadata i32 %12, metadata !8192, metadata !DIExpression()), !dbg !8194
  call void @llvm.va_end(i8* nonnull %3), !dbg !8205
  call void @llvm.dbg.value(metadata i32 %8, metadata !7208, metadata !DIExpression()) #19, !dbg !8206
  call void asm sideeffect "\09msr basepri, $0\09", "r"(i32 %8) #19, !dbg !8208, !srcloc !7214
  br label %13, !dbg !8209

13:                                               ; preds = %1, %6
  %14 = phi i32 [ %12, %6 ], [ 0, %1 ], !dbg !8194
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !8210
  ret i32 %14, !dbg !8210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_get_current_time() local_unnamed_addr #2 section ".ramTEXT" !dbg !8211 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !8216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19, !dbg !8216
  call void @llvm.dbg.value(metadata i32 0, metadata !8213, metadata !DIExpression()), !dbg !8217
  store i32 0, i32* %1, align 4, !dbg !8218
  call void @llvm.dbg.value(metadata i32* %1, metadata !8213, metadata !DIExpression(DW_OP_deref)), !dbg !8217
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #18, !dbg !8219
  call void @llvm.dbg.value(metadata i32 %3, metadata !8214, metadata !DIExpression()), !dbg !8217
  %4 = icmp eq i32 %3, 0, !dbg !8220
  br i1 %4, label %6, label %5, !dbg !8222

5:                                                ; preds = %0
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.143, i32 0, i32 0), i32 noundef 92, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpt_get_current_time, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #20, !dbg !8223
  unreachable, !dbg !8223

6:                                                ; preds = %0
  %7 = load i32, i32* %1, align 4, !dbg !8225
  call void @llvm.dbg.value(metadata i32 %7, metadata !8213, metadata !DIExpression()), !dbg !8217
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19, !dbg !8226
  ret i32 %7, !dbg !8227
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #15

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #8 section ".ramTEXT" !dbg !8228 {
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !8229
  ret void, !dbg !8230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #8 section ".ramTEXT" !dbg !8231 {
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !8232
  ret void, !dbg !8233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #8 section ".ramTEXT" !dbg !8234 {
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8235
  ret void, !dbg !8236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #8 section ".ramTEXT" !dbg !8237 {
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8238
  ret void, !dbg !8239
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_sf_lock() local_unnamed_addr #2 !dbg !8240 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !8245
  call void @llvm.dbg.value(metadata i32 %1, metadata !8244, metadata !DIExpression()), !dbg !8246
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !8247
  br i1 %2, label %4, label %3, !dbg !8249

3:                                                ; preds = %0
  store i1 true, i1* @sf_Mutex, align 4, !dbg !8250
  br label %4, !dbg !8252

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !8253
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !8253
  ret i32 %5, !dbg !8254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @free_sf_lock() local_unnamed_addr #2 !dbg !8255 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !8258
  call void @llvm.dbg.value(metadata i32 %1, metadata !8257, metadata !DIExpression()), !dbg !8259
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !8260
  br i1 %2, label %3, label %4, !dbg !8262

3:                                                ; preds = %0
  store i1 false, i1* @sf_Mutex, align 4, !dbg !8263
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !8265
  ret void, !dbg !8266

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !8267
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.143, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.free_sf_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #20, !dbg !8269
  unreachable, !dbg !8269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_sf_lock() local_unnamed_addr #2 !dbg !8270 {
  br label %1, !dbg !8273

1:                                                ; preds = %1, %0
  %2 = tail call i32 @get_sf_lock() #17, !dbg !8274
  call void @llvm.dbg.value(metadata i32 %2, metadata !8272, metadata !DIExpression()), !dbg !8276
  %3 = icmp eq i32 %2, 0, !dbg !8277
  br i1 %3, label %4, label %1, !dbg !8278, !llvm.loop !8279

4:                                                ; preds = %1
  ret void, !dbg !8281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_sf_lock() local_unnamed_addr #2 !dbg !8282 {
  tail call void @free_sf_lock() #17, !dbg !8283
  ret void, !dbg !8284
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_config(i8 noundef zeroext %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !8285 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8289, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.value(metadata i32 0, metadata !8290, metadata !DIExpression()), !dbg !8292
  tail call fastcc void @sfc_pad_config() #17, !dbg !8293
  %2 = tail call i32 @gpt_get_current_time() #17, !dbg !8294
  %3 = tail call %struct.flash_info_t* @customer_flash_register() #18, !dbg !8295
  %4 = icmp eq %struct.flash_info_t* %3, null, !dbg !8297
  br i1 %4, label %6, label %5, !dbg !8298

5:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !8299
  br label %6, !dbg !8301

6:                                                ; preds = %5, %1
  %7 = tail call i32 @flash_check_device() #18, !dbg !8302
  ret i32 0, !dbg !8303
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_pad_config() unnamed_addr #0 !dbg !8304 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8306, metadata !DIExpression()), !dbg !8307
  %1 = load volatile i32, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !8308
  call void @llvm.dbg.value(metadata i32 %1, metadata !8306, metadata !DIExpression()), !dbg !8307
  %2 = or i32 %1, 117440688, !dbg !8309
  call void @llvm.dbg.value(metadata i32 %2, metadata !8306, metadata !DIExpression()), !dbg !8307
  store volatile i32 %2, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !8310
  ret void, !dbg !8311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_flash_direct_read(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !8312 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8316, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata i8* %1, metadata !8317, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata i32 %2, metadata !8318, metadata !DIExpression()), !dbg !8319
  tail call void @retrieve_sf_lock() #17, !dbg !8320
  %4 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %0, i32 noundef %2) #18, !dbg !8321
  tail call void @release_sf_lock() #17, !dbg !8322
  ret void, !dbg !8323
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_read(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #2 section ".ramTEXT" !dbg !8324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8328, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32 %1, metadata !8329, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i8* %2, metadata !8330, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32 0, metadata !8331, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32 %1, metadata !8332, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32 0, metadata !8333, metadata !DIExpression()), !dbg !8334
  tail call void @retrieve_sf_lock() #17, !dbg !8335
  call void @llvm.dbg.value(metadata i32 %1, metadata !8332, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32 %0, metadata !8328, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i8* %2, metadata !8330, metadata !DIExpression()), !dbg !8334
  %4 = icmp ugt i32 %1, 127, !dbg !8336
  br i1 %4, label %5, label %19, !dbg !8337

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %1, %3 ]
  %7 = phi i32 [ %16, %14 ], [ %0, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8332, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32 %7, metadata !8328, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i8* %8, metadata !8330, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.value(metadata i32 128, metadata !8333, metadata !DIExpression()), !dbg !8334
  %9 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !8338
  switch i32 %9, label %14 [
    i32 0, label %10
    i32 1, label %12
  ], !dbg !8341

10:                                               ; preds = %5
  %11 = tail call i32 @flash_read(i8* noundef %8, i32 noundef %7, i32 noundef 128) #18, !dbg !8342
  br label %14, !dbg !8344

12:                                               ; preds = %5
  %13 = tail call i32 @flash_fast_read(i8* noundef %8, i32 noundef %7, i32 noundef 128, i32 noundef 1) #18, !dbg !8345
  br label %14, !dbg !8348

14:                                               ; preds = %5, %12, %10
  %15 = getelementptr inbounds i8, i8* %8, i32 128, !dbg !8349
  call void @llvm.dbg.value(metadata i8* %15, metadata !8330, metadata !DIExpression()), !dbg !8334
  %16 = add i32 %7, 128, !dbg !8350
  call void @llvm.dbg.value(metadata i32 %16, metadata !8328, metadata !DIExpression()), !dbg !8334
  %17 = add i32 %6, -128, !dbg !8351
  call void @llvm.dbg.value(metadata i32 %17, metadata !8332, metadata !DIExpression()), !dbg !8334
  %18 = icmp ugt i32 %17, 127, !dbg !8336
  br i1 %18, label %5, label %19, !dbg !8337, !llvm.loop !8352

19:                                               ; preds = %14, %3
  %20 = phi i8* [ %2, %3 ], [ %15, %14 ]
  %21 = phi i32 [ %0, %3 ], [ %16, %14 ]
  %22 = phi i32 [ %1, %3 ], [ %17, %14 ], !dbg !8334
  %23 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !8354
  switch i32 %23, label %28 [
    i32 0, label %24
    i32 1, label %26
  ], !dbg !8356

24:                                               ; preds = %19
  %25 = tail call i32 @flash_read(i8* noundef %20, i32 noundef %21, i32 noundef %22) #18, !dbg !8357
  br label %28, !dbg !8359

26:                                               ; preds = %19
  %27 = tail call i32 @flash_fast_read(i8* noundef %20, i32 noundef %21, i32 noundef %22, i32 noundef 1) #18, !dbg !8360
  br label %28, !dbg !8363

28:                                               ; preds = %19, %26, %24
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !8364
  tail call void @release_sf_lock() #17, !dbg !8365
  ret i32 0, !dbg !8366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_write(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #2 !dbg !8367 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8371, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i32 %1, metadata !8372, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i8* %2, metadata !8373, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.value(metadata i32 0, metadata !8374, metadata !DIExpression()), !dbg !8375
  tail call void @retrieve_sf_lock() #17, !dbg !8376
  %4 = tail call i32 @hal_cache_invalidate_all_cache_lines() #18, !dbg !8377
  %5 = tail call i32 @hal_cache_disable() #18, !dbg !8378
  %6 = tail call i32 @flash_write(i8* noundef %2, i32 noundef %0, i32 noundef %1) #18, !dbg !8379
  call void @llvm.dbg.value(metadata i32 %6, metadata !8374, metadata !DIExpression()), !dbg !8375
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !8380
  %7 = tail call i32 @hal_cache_enable() #18, !dbg !8381
  tail call void @release_sf_lock() #17, !dbg !8382
  ret i32 %6, !dbg !8383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".ramTEXT" !dbg !8384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8388, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 %1, metadata !8389, metadata !DIExpression()), !dbg !8391
  call void @llvm.dbg.value(metadata i32 0, metadata !8390, metadata !DIExpression()), !dbg !8391
  tail call void @retrieve_sf_lock() #17, !dbg !8392
  %3 = tail call i32 @hal_cache_invalidate_all_cache_lines() #18, !dbg !8393
  %4 = tail call i32 @hal_cache_disable() #18, !dbg !8394
  %5 = tail call i32 @flash_write_enable() #18, !dbg !8395
  %6 = tail call i32 @flash_unprotect() #18, !dbg !8396
  switch i32 %1, label %22 [
    i32 0, label %7
    i32 1, label %12
    i32 2, label %17
  ], !dbg !8397

7:                                                ; preds = %2
  %8 = and i32 %0, 4095, !dbg !8398
  %9 = icmp eq i32 %8, 0, !dbg !8402
  br i1 %9, label %10, label %22, !dbg !8403

10:                                               ; preds = %7
  %11 = tail call i32 @flash_erase_page(i32 noundef %0) #18, !dbg !8404
  call void @llvm.dbg.value(metadata i32 %11, metadata !8390, metadata !DIExpression()), !dbg !8391
  br label %22, !dbg !8405

12:                                               ; preds = %2
  %13 = and i32 %0, 32767, !dbg !8406
  %14 = icmp eq i32 %13, 0, !dbg !8410
  br i1 %14, label %15, label %22, !dbg !8411

15:                                               ; preds = %12
  %16 = tail call i32 @flash_erase_sector_32k(i32 noundef %0) #18, !dbg !8412
  call void @llvm.dbg.value(metadata i32 %16, metadata !8390, metadata !DIExpression()), !dbg !8391
  br label %22, !dbg !8413

17:                                               ; preds = %2
  %18 = and i32 %0, 65535, !dbg !8414
  %19 = icmp eq i32 %18, 0, !dbg !8418
  br i1 %19, label %20, label %22, !dbg !8419

20:                                               ; preds = %17
  %21 = tail call i32 @flash_erase_sector(i32 noundef %0) #18, !dbg !8420
  call void @llvm.dbg.value(metadata i32 %21, metadata !8390, metadata !DIExpression()), !dbg !8391
  br label %22, !dbg !8421

22:                                               ; preds = %10, %20, %15, %2, %17, %12, %7
  %23 = phi i32 [ -3, %7 ], [ -3, %12 ], [ -3, %17 ], [ %11, %10 ], [ %16, %15 ], [ %21, %20 ], [ 0, %2 ], !dbg !8391
  %24 = tail call i32 @hal_cache_enable() #18, !dbg !8391
  tail call void @release_sf_lock() #17, !dbg !8391
  ret i32 %23, !dbg !8422
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #2 section ".ramTEXT" !dbg !8423 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !8427
  call void @llvm.dbg.value(metadata i8 0, metadata !8425, metadata !DIExpression()), !dbg !8428
  store i8 0, i8* %1, align 1, !dbg !8429
  call void @llvm.dbg.value(metadata i32 0, metadata !8426, metadata !DIExpression()), !dbg !8428
  %2 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !8430
  call void @llvm.dbg.value(metadata i32 %2, metadata !8426, metadata !DIExpression()), !dbg !8428
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8431, !range !8433
  %4 = icmp ne i8 %3, 0, !dbg !8431
  %5 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %4, i1 true, i1 %6, !dbg !8434
  br i1 %7, label %27, label %8, !dbg !8434

8:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i8* %1, metadata !8425, metadata !DIExpression(DW_OP_deref)), !dbg !8428
  %9 = call i32 @flash_read_sr(i8* noundef nonnull %1) #18, !dbg !8435
  %10 = icmp slt i32 %9, 0, !dbg !8438
  br i1 %10, label %11, label %12, !dbg !8439

11:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.143, i32 0, i32 0), i32 noundef 333, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #20, !dbg !8440
  unreachable, !dbg !8440

12:                                               ; preds = %8
  %13 = load i8, i8* %1, align 1, !dbg !8442
  call void @llvm.dbg.value(metadata i8 %13, metadata !8425, metadata !DIExpression()), !dbg !8428
  %14 = and i8 %13, 1, !dbg !8444
  %15 = icmp eq i8 %14, 0, !dbg !8445
  br i1 %15, label %26, label %16, !dbg !8446

16:                                               ; preds = %12
  call void @flash_suspend_Winbond() #18, !dbg !8447
  br label %17, !dbg !8449

17:                                               ; preds = %21, %16
  call void @llvm.dbg.value(metadata i8* %1, metadata !8425, metadata !DIExpression(DW_OP_deref)), !dbg !8428
  %18 = call i32 @flash_read_sr(i8* noundef nonnull %1) #18, !dbg !8450
  %19 = icmp slt i32 %18, 0, !dbg !8453
  br i1 %19, label %20, label %21, !dbg !8454

20:                                               ; preds = %17
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.143, i32 0, i32 0), i32 noundef 344, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #20, !dbg !8455
  unreachable, !dbg !8455

21:                                               ; preds = %17
  %22 = load i8, i8* %1, align 1, !dbg !8457
  call void @llvm.dbg.value(metadata i8 %22, metadata !8425, metadata !DIExpression()), !dbg !8428
  %23 = and i8 %22, 1, !dbg !8459
  %24 = icmp eq i8 %23, 0, !dbg !8460
  br i1 %24, label %25, label %17, !dbg !8461, !llvm.loop !8462

25:                                               ; preds = %21
  call void @SF_DAL_FLAG_SUS_SET() #17, !dbg !8464
  br label %27, !dbg !8465

26:                                               ; preds = %12
  call void @SF_DAL_FLAG_BUSY_CLR() #17, !dbg !8466
  br label %27

27:                                               ; preds = %25, %26, %0
  call void @restore_interrupt_mask(i32 noundef %2) #18, !dbg !8468
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !8469
  ret void, !dbg !8469
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #2 section ".ramTEXT" !dbg !8470 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8474, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i32 %1, metadata !8475, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i32 0, metadata !8477, metadata !DIExpression()), !dbg !8485
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #19, !dbg !8486
  call void @llvm.dbg.value(metadata i8 0, metadata !8480, metadata !DIExpression()), !dbg !8485
  store i8 0, i8* %3, align 1, !dbg !8487
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #19, !dbg !8488
  call void @llvm.dbg.value(metadata i8 0, metadata !8481, metadata !DIExpression()), !dbg !8485
  store i8 0, i8* %4, align 1, !dbg !8489
  call void @llvm.dbg.value(metadata i8* %3, metadata !8480, metadata !DIExpression(DW_OP_deref)), !dbg !8485
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %3) #18, !dbg !8490
  %6 = icmp slt i32 %5, 0, !dbg !8492
  br i1 %6, label %7, label %8, !dbg !8493

7:                                                ; preds = %2
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.143, i32 0, i32 0), i32 noundef 368, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #20, !dbg !8494
  unreachable, !dbg !8494

8:                                                ; preds = %2
  %9 = load i8, i8* %3, align 1, !dbg !8496
  call void @llvm.dbg.value(metadata i8 %9, metadata !8480, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i8 %9, metadata !8478, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i8* %4, metadata !8481, metadata !DIExpression(DW_OP_deref)), !dbg !8485
  %10 = call i32 @flash_read_sr2(i8* noundef nonnull %4) #18, !dbg !8498
  %11 = icmp slt i32 %10, 0, !dbg !8500
  br i1 %11, label %12, label %13, !dbg !8501

12:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.143, i32 0, i32 0), i32 noundef 374, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #20, !dbg !8502
  unreachable, !dbg !8502

13:                                               ; preds = %8
  %14 = load i8, i8* %4, align 1, !dbg !8504
  call void @llvm.dbg.value(metadata i8 %14, metadata !8481, metadata !DIExpression()), !dbg !8485
  call void @llvm.dbg.value(metadata i8 %14, metadata !8479, metadata !DIExpression()), !dbg !8485
  %15 = call i32 @save_and_set_interrupt_mask() #18, !dbg !8506
  call void @llvm.dbg.value(metadata i32 %15, metadata !8477, metadata !DIExpression()), !dbg !8485
  %16 = and i8 %9, 1, !dbg !8507
  %17 = icmp eq i8 %16, 0, !dbg !8508
  br i1 %17, label %18, label %46, !dbg !8509

18:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8 12, metadata !8482, metadata !DIExpression()), !dbg !8510
  %19 = load i32, i32* @support_flash_id, align 4, !dbg !8511
  switch i32 %19, label %28 [
    i32 239, label %20
    i32 200, label %20
    i32 255, label %25
    i32 32, label %24
  ], !dbg !8513

20:                                               ; preds = %18, %18
  call void @llvm.dbg.value(metadata i8 -128, metadata !8482, metadata !DIExpression()), !dbg !8510
  %21 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !8514
  %22 = icmp eq i32 %21, 49, !dbg !8517
  %23 = select i1 %22, i32 132, i32 128, !dbg !8518
  br label %28, !dbg !8518

24:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i8 66, metadata !8482, metadata !DIExpression()), !dbg !8510
  br label %28, !dbg !8519

25:                                               ; preds = %18
  %26 = call zeroext i8 @customer_flash_suspend_bit() #18, !dbg !8523
  call void @llvm.dbg.value(metadata i8 %26, metadata !8482, metadata !DIExpression()), !dbg !8510
  %27 = zext i8 %26 to i32, !dbg !8526
  br label %28, !dbg !8526

28:                                               ; preds = %20, %18, %25, %24
  %29 = phi i32 [ 66, %24 ], [ %27, %25 ], [ %23, %20 ], [ 12, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !8482, metadata !DIExpression()), !dbg !8510
  %30 = zext i8 %14 to i32, !dbg !8527
  %31 = and i32 %29, %30, !dbg !8529
  %32 = icmp eq i32 %31, 0, !dbg !8530
  br i1 %32, label %33, label %38, !dbg !8531

33:                                               ; preds = %28
  %34 = icmp ne i32 %29, 0, !dbg !8532
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %34, i1 true, i1 %36, !dbg !8533
  br i1 %37, label %43, label %38, !dbg !8533

38:                                               ; preds = %33, %28
  %39 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8534, !range !8433
  %40 = icmp eq i8 %39, 0, !dbg !8534
  br i1 %40, label %41, label %42, !dbg !8534

41:                                               ; preds = %38
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.143, i32 0, i32 0), i32 noundef 407, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.147, i32 0, i32 0)) #20, !dbg !8534
  unreachable, !dbg !8534

42:                                               ; preds = %38
  call void @flash_resume_Winbond() #18, !dbg !8536
  call void @llvm.dbg.value(metadata i32 -121, metadata !8476, metadata !DIExpression()), !dbg !8485
  br label %44, !dbg !8537

43:                                               ; preds = %33
  call void @SF_DAL_FLAG_BUSY_CLR() #17, !dbg !8538
  call void @llvm.dbg.value(metadata i32 0, metadata !8476, metadata !DIExpression()), !dbg !8485
  br label %44

44:                                               ; preds = %43, %42
  %45 = phi i32 [ 0, %43 ], [ -121, %42 ]
  call void @SF_DAL_FLAG_SUS_CLR() #17, !dbg !8540
  br label %46, !dbg !8541

46:                                               ; preds = %44, %13
  %47 = phi i32 [ -121, %13 ], [ %45, %44 ], !dbg !8542
  call void @llvm.dbg.value(metadata i32 %47, metadata !8476, metadata !DIExpression()), !dbg !8485
  call void @restore_interrupt_mask(i32 noundef %15) #18, !dbg !8541
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #19, !dbg !8543
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #19, !dbg !8543
  ret i32 %47, !dbg !8544
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readnone %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #2 section ".ramTEXT" !dbg !8545 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8549, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i32 %1, metadata !8550, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i8 %2, metadata !8551, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i32 0, metadata !8553, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i16 0, metadata !8555, metadata !DIExpression()), !dbg !8557
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #19, !dbg !8558
  call void @llvm.dbg.value(metadata i8 0, metadata !8556, metadata !DIExpression()), !dbg !8557
  store i8 0, i8* %4, align 1, !dbg !8559
  call void @llvm.dbg.value(metadata i8* %4, metadata !8556, metadata !DIExpression(DW_OP_deref)), !dbg !8557
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %4) #18, !dbg !8560
  %6 = icmp slt i32 %5, 0, !dbg !8562
  br i1 %6, label %7, label %8, !dbg !8563

7:                                                ; preds = %3
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.143, i32 0, i32 0), i32 noundef 449, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #20, !dbg !8564
  unreachable, !dbg !8564

8:                                                ; preds = %3
  %9 = load i8, i8* %4, align 1, !dbg !8566
  call void @llvm.dbg.value(metadata i8 %9, metadata !8556, metadata !DIExpression()), !dbg !8557
  call void @llvm.dbg.value(metadata i8 %9, metadata !8555, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8557
  %10 = call i32 @save_and_set_interrupt_mask() #18, !dbg !8568
  call void @llvm.dbg.value(metadata i32 %10, metadata !8552, metadata !DIExpression()), !dbg !8557
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8569, !range !8433
  %12 = icmp eq i8 %11, 0, !dbg !8569
  br i1 %12, label %18, label %13, !dbg !8571

13:                                               ; preds = %8
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8572, !range !8433
  %15 = icmp eq i8 %14, 0, !dbg !8572
  br i1 %15, label %16, label %17, !dbg !8572

16:                                               ; preds = %13
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.143, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.147, i32 0, i32 0)) #20, !dbg !8572
  unreachable, !dbg !8572

17:                                               ; preds = %13
  call void @flash_resume_Winbond() #18, !dbg !8574
  call void @SF_DAL_FLAG_SUS_CLR() #17, !dbg !8575
  call void @restore_interrupt_mask(i32 noundef %10) #18, !dbg !8576
  br label %26, !dbg !8577

18:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 %9, metadata !8555, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8557
  %19 = and i8 %9, 1, !dbg !8578
  %20 = icmp eq i8 %19, 0, !dbg !8580
  br i1 %20, label %21, label %26, !dbg !8581

21:                                               ; preds = %18
  call void @SF_DAL_FLAG_BUSY_CLR() #17, !dbg !8582
  %22 = inttoptr i32 %1 to i8*, !dbg !8584
  %23 = load volatile i8, i8* %22, align 1, !dbg !8585
  call void @llvm.dbg.value(metadata i8 %23, metadata !8554, metadata !DIExpression()), !dbg !8557
  %24 = icmp eq i8 %23, %2, !dbg !8586
  %25 = select i1 %24, i32 1, i32 -1
  br label %26

26:                                               ; preds = %21, %18, %17
  %27 = phi i32 [ 0, %17 ], [ 0, %18 ], [ %25, %21 ], !dbg !8557
  call void @llvm.dbg.value(metadata i32 %27, metadata !8553, metadata !DIExpression()), !dbg !8557
  call void @restore_interrupt_mask(i32 noundef %10) #18, !dbg !8588
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #19, !dbg !8589
  ret i32 %27, !dbg !8590
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #2 !dbg !8591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8595, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i32 %1, metadata !8596, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i1 %2, metadata !8597, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8598
  %4 = icmp ugt i32 %0, 1, !dbg !8599
  br i1 %4, label %5, label %8, !dbg !8601

5:                                                ; preds = %3
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.149, i32 0, i32 0), i32 noundef 75) #18, !dbg !8602
  br label %7, !dbg !8602

7:                                                ; preds = %5, %7
  br label %7, !dbg !8602, !llvm.loop !8604

8:                                                ; preds = %3
  switch i32 %0, label %21 [
    i32 0, label %9
    i32 1, label %15
  ], !dbg !8605

9:                                                ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824300 to i32*), align 4, !dbg !8606
  %10 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !8609
  br i1 %2, label %11, label %13, !dbg !8611

11:                                               ; preds = %9
  %12 = or i32 %10, 2, !dbg !8612
  store volatile i32 %12, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !8612
  br label %21, !dbg !8614

13:                                               ; preds = %9
  %14 = and i32 %10, -3, !dbg !8615
  store volatile i32 %14, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !8615
  br label %21

15:                                               ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824284 to i32*), align 4, !dbg !8617
  %16 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !8620
  br i1 %2, label %17, label %19, !dbg !8622

17:                                               ; preds = %15
  %18 = or i32 %16, 2, !dbg !8623
  store volatile i32 %18, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !8623
  br label %21, !dbg !8625

19:                                               ; preds = %15
  %20 = and i32 %16, -3, !dbg !8626
  store volatile i32 %20, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !8626
  br label %21

21:                                               ; preds = %8, %19, %17, %11, %13
  ret void, !dbg !8628
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_Start(i32 noundef %0) local_unnamed_addr #2 !dbg !8629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8633, metadata !DIExpression()), !dbg !8634
  switch i32 %0, label %2 [
    i32 0, label %5
    i32 1, label %9
    i32 4, label %13
  ], !dbg !8635

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.149, i32 0, i32 0), i32 noundef 96) #18, !dbg !8636
  br label %4, !dbg !8636

4:                                                ; preds = %2, %4
  br label %4, !dbg !8636, !llvm.loop !8639

5:                                                ; preds = %1
  %6 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !8640
  %7 = or i32 %6, 1, !dbg !8640
  store volatile i32 %7, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !8640
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #18, !dbg !8643
  br label %16, !dbg !8644

9:                                                ; preds = %1
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !8645
  %11 = or i32 %10, 1, !dbg !8645
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !8645
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #18, !dbg !8648
  br label %16, !dbg !8649

13:                                               ; preds = %1
  %14 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !8650
  %15 = or i32 %14, 1, !dbg !8650
  store volatile i32 %15, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !8650
  br label %16, !dbg !8653

16:                                               ; preds = %9, %13, %5
  ret void, !dbg !8654
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPT_Stop(i32 noundef %0) local_unnamed_addr #0 !dbg !8655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8657, metadata !DIExpression()), !dbg !8658
  switch i32 %0, label %18 [
    i32 0, label %2
    i32 1, label %7
    i32 2, label %12
    i32 4, label %15
  ], !dbg !8659

2:                                                ; preds = %1
  %3 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !8660
  %4 = and i32 %3, -2, !dbg !8660
  store volatile i32 %4, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !8660
  %5 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !8663
  %6 = and i32 %5, -2, !dbg !8663
  store volatile i32 %6, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !8663
  store volatile i32 1, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !8664
  br label %18, !dbg !8665

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !8666
  %9 = and i32 %8, -3, !dbg !8666
  store volatile i32 %9, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !8666
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !8669
  %11 = and i32 %10, -2, !dbg !8669
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !8669
  store volatile i32 2, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !8670
  br label %18, !dbg !8671

12:                                               ; preds = %1
  %13 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !8672
  %14 = and i32 %13, -2, !dbg !8672
  store volatile i32 %14, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !8672
  br label %18, !dbg !8675

15:                                               ; preds = %1
  %16 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !8676
  %17 = and i32 %16, -2, !dbg !8676
  store volatile i32 %17, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !8676
  br label %18, !dbg !8679

18:                                               ; preds = %1, %7, %15, %12, %2
  ret void, !dbg !8680
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_INT_Handler(i32 %0) #2 !dbg !8681 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !8683, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.value(metadata i32 undef, metadata !8683, metadata !DIExpression()), !dbg !8685
  %2 = load volatile i32, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !8686
  %3 = and i32 %2, 65535, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %2, metadata !8684, metadata !DIExpression()), !dbg !8685
  store volatile i32 %3, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !8688
  %4 = and i32 %2, 1, !dbg !8689
  %5 = icmp eq i32 %4, 0, !dbg !8689
  br i1 %5, label %6, label %9, !dbg !8691

6:                                                ; preds = %1
  %7 = and i32 %2, 2, !dbg !8692
  %8 = icmp eq i32 %7, 0, !dbg !8692
  br i1 %8, label %13, label %9, !dbg !8694

9:                                                ; preds = %6, %1
  %10 = phi i32 [ 0, %1 ], [ 1, %6 ]
  %11 = phi void ()** [ @GPTTimer.0, %1 ], [ @GPTTimer.1, %6 ]
  tail call void @clear_TMR_INT_status_bit(i32 noundef %10) #18, !dbg !8695
  %12 = load void ()*, void ()** %11, align 4, !dbg !8695
  tail call void %12() #18, !dbg !8695
  br label %13, !dbg !8696

13:                                               ; preds = %9, %6
  ret void, !dbg !8696
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_init(i32 noundef %0, i32 noundef %1, void ()* noundef %2) local_unnamed_addr #2 !dbg !8697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8701, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata i32 %1, metadata !8702, metadata !DIExpression()), !dbg !8704
  call void @llvm.dbg.value(metadata void ()* %2, metadata !8703, metadata !DIExpression()), !dbg !8704
  switch i32 %0, label %4 [
    i32 4, label %7
    i32 2, label %7
    i32 1, label %7
    i32 0, label %7
  ], !dbg !8705

4:                                                ; preds = %3
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.149, i32 0, i32 0), i32 noundef 149) #18, !dbg !8706
  br label %6, !dbg !8706

6:                                                ; preds = %4, %6
  br label %6, !dbg !8706, !llvm.loop !8709

7:                                                ; preds = %3, %3, %3, %3
  %8 = icmp ult i32 %0, 2, !dbg !8710
  br i1 %8, label %9, label %13, !dbg !8711

9:                                                ; preds = %7
  %10 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 24, void (i32)* noundef nonnull @GPT_INT_Handler) #18, !dbg !8713
  %11 = tail call i32 @hal_nvic_set_priority(i32 noundef 24, i32 noundef 5) #18, !dbg !8715
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #18, !dbg !8716
  br label %13, !dbg !8717

13:                                               ; preds = %7, %9
  switch i32 %0, label %36 [
    i32 0, label %14
    i32 1, label %20
    i32 2, label %26
    i32 4, label %31
  ], !dbg !8718

14:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.0, align 4, !dbg !8719
  %15 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !8722
  %16 = or i32 %15, 1, !dbg !8722
  store volatile i32 %16, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !8722
  %17 = shl i32 %1, 2, !dbg !8723
  %18 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !8724
  %19 = or i32 %18, %17, !dbg !8724
  store volatile i32 %19, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !8724
  br label %36, !dbg !8725

20:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.1, align 4, !dbg !8726
  %21 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !8729
  %22 = or i32 %21, 2, !dbg !8729
  store volatile i32 %22, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !8729
  %23 = shl i32 %1, 2, !dbg !8730
  %24 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !8731
  %25 = or i32 %24, %23, !dbg !8731
  store volatile i32 %25, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !8731
  br label %36, !dbg !8732

26:                                               ; preds = %13
  %27 = shl i32 %1, 1, !dbg !8733
  %28 = or i32 %27, 1, !dbg !8736
  %29 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !8737
  %30 = or i32 %29, %28, !dbg !8737
  store volatile i32 %30, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !8737
  br label %36, !dbg !8738

31:                                               ; preds = %13
  %32 = shl i32 %1, 1, !dbg !8739
  %33 = or i32 %32, 1, !dbg !8742
  %34 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !8743
  %35 = or i32 %34, %33, !dbg !8743
  store volatile i32 %35, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !8743
  store volatile i32 0, i32* inttoptr (i32 -2096824220 to i32*), align 4, !dbg !8744
  br label %36, !dbg !8745

36:                                               ; preds = %13, %20, %31, %26, %14
  ret void, !dbg !8746
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GPT_return_current_count(i32 noundef %0) local_unnamed_addr #2 !dbg !8747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8751, metadata !DIExpression()), !dbg !8753
  switch i32 %0, label %2 [
    i32 0, label %8
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
  ], !dbg !8754

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.148, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.149, i32 0, i32 0), i32 noundef 177) #18, !dbg !8755
  br label %4, !dbg !8755

4:                                                ; preds = %4, %2
  br label %4, !dbg !8755, !llvm.loop !8758

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !8752, metadata !DIExpression()), !dbg !8753
  br label %8, !dbg !8759

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !8752, metadata !DIExpression()), !dbg !8753
  br label %8, !dbg !8763

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !8752, metadata !DIExpression()), !dbg !8753
  br label %8, !dbg !8766

8:                                                ; preds = %1, %5, %7, %6
  %9 = phi i32* [ inttoptr (i32 -2096824252 to i32*), %5 ], [ inttoptr (i32 -2096824268 to i32*), %6 ], [ inttoptr (i32 -2096824216 to i32*), %7 ], [ inttoptr (i32 -2096824256 to i32*), %1 ]
  %10 = load volatile i32, i32* %9, align 4, !dbg !8769
  call void @llvm.dbg.value(metadata i32 %10, metadata !8752, metadata !DIExpression()), !dbg !8753
  ret i32 %10, !dbg !8770
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT2Init() local_unnamed_addr #2 !dbg !8771 {
  tail call void @GPT_init(i32 noundef 2, i32 noundef 1, void ()* noundef null) #17, !dbg !8772
  ret void, !dbg !8773
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT4Init() local_unnamed_addr #2 !dbg !8774 {
  tail call void @GPT_init(i32 noundef 4, i32 noundef 1, void ()* noundef null) #17, !dbg !8775
  ret void, !dbg !8776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_init() local_unnamed_addr #13 !dbg !8777 {
  ret i32 0, !dbg !8781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_trng_deinit() local_unnamed_addr #13 !dbg !8782 {
  ret i32 0, !dbg !8783
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_trng_get_generated_random_number(i32* nocapture noundef writeonly %0) local_unnamed_addr #2 !dbg !8784 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !8788, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i16 0, metadata !8789, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !8791, metadata !DIExpression()), !dbg !8798
  %2 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !8799
  %3 = or i32 %2, 1, !dbg !8799
  store volatile i32 %3, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !8799
  call void @llvm.dbg.value(metadata i16 0, metadata !8789, metadata !DIExpression()), !dbg !8797
  br label %4, !dbg !8800

4:                                                ; preds = %1, %9
  %5 = phi i16 [ 0, %1 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i16 %5, metadata !8789, metadata !DIExpression()), !dbg !8797
  %6 = load volatile i32, i32* inttoptr (i32 -2096107504 to i32*), align 16, !dbg !8801
  %7 = and i32 %6, 1, !dbg !8801
  %8 = icmp eq i32 %7, 0, !dbg !8804
  br i1 %8, label %9, label %12, !dbg !8805

9:                                                ; preds = %4
  tail call void @delay_time(i32 noundef 32) #18, !dbg !8806
  %10 = add nuw nsw i16 %5, 1, !dbg !8807
  call void @llvm.dbg.value(metadata i16 %10, metadata !8789, metadata !DIExpression()), !dbg !8797
  %11 = icmp ult i16 %5, 99, !dbg !8808
  br i1 %11, label %4, label %12, !dbg !8800, !llvm.loop !8809

12:                                               ; preds = %4, %9
  %13 = phi i16 [ %5, %4 ], [ 100, %9 ], !dbg !8797
  %14 = load volatile i32, i32* inttoptr (i32 -2096107512 to i32*), align 8, !dbg !8811
  store i32 %14, i32* %0, align 4, !dbg !8812
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107500 to i32*), metadata !8793, metadata !DIExpression()), !dbg !8813
  %15 = load volatile i32, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !8814
  store volatile i32 1, i32* inttoptr (i32 -2096107500 to i32*), align 4, !dbg !8814
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096107520 to i32*), metadata !8795, metadata !DIExpression()), !dbg !8815
  %16 = load volatile i32, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !8816
  %17 = and i32 %16, -2, !dbg !8816
  store volatile i32 %17, i32* inttoptr (i32 -2096107520 to i32*), align 4096, !dbg !8816
  %18 = icmp ugt i16 %13, 99, !dbg !8817
  br i1 %18, label %19, label %20, !dbg !8819

19:                                               ; preds = %12
  store i32 0, i32* %0, align 4, !dbg !8820
  br label %20, !dbg !8822

20:                                               ; preds = %12, %19
  %21 = phi i32 [ -2, %19 ], [ 0, %12 ], !dbg !8823
  ret i32 %21, !dbg !8824
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NVIC_SetupVectorTable(i32 noundef %0) local_unnamed_addr #2 !dbg !8825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8827, metadata !DIExpression()), !dbg !8828
  store volatile i32 %0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8829
  tail call void asm sideeffect "dsb", ""() #19, !dbg !8830, !srcloc !8831
  tail call void asm sideeffect "isb", ""() #19, !dbg !8832, !srcloc !8833
  ret void, !dbg !8834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @NVIC_SWInt(i32 noundef %0) local_unnamed_addr #0 !dbg !8835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8839, metadata !DIExpression()), !dbg !8840
  store volatile i32 %0, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !8841
  ret void, !dbg !8842
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #2 section ".ramTEXT" !dbg !8843 {
  %1 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #19, !dbg !8846, !srcloc !8853
  call void @llvm.dbg.value(metadata i32 %1, metadata !8850, metadata !DIExpression()) #19, !dbg !8854
  call void @llvm.dbg.value(metadata i32 %1, metadata !8845, metadata !DIExpression()), !dbg !8855
  tail call void asm sideeffect "cpsid i", "~{memory}"() #19, !dbg !8856, !srcloc !8859
  ret i32 %1, !dbg !8860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !8861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8863, metadata !DIExpression()), !dbg !8864
  call void @llvm.dbg.value(metadata i32 %0, metadata !8865, metadata !DIExpression()) #19, !dbg !8868
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %0) #19, !dbg !8871, !srcloc !8872
  ret void, !dbg !8873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GPT_return_current_count() local_unnamed_addr #5 section ".ramTEXT" !dbg !8874 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096824268 to i32*), align 4, !dbg !8879
  call void @llvm.dbg.value(metadata i32 %1, metadata !8878, metadata !DIExpression()), !dbg !8880
  ret i32 %1, !dbg !8881
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_get_systime() local_unnamed_addr #5 section ".ramTEXT" !dbg !8882 {
  %1 = tail call i32 @sfc_GPT_return_current_count() #17, !dbg !8883
  ret i32 %1, !dbg !8884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_time(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !8885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8887, metadata !DIExpression()), !dbg !8890
  %2 = tail call i32 @sfc_get_systime() #17, !dbg !8891
  %3 = add i32 %2, %0, !dbg !8892
  %4 = xor i32 %3, -1, !dbg !8893
  call void @llvm.dbg.value(metadata i32 %3, metadata !8888, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8890
  %5 = tail call i32 @sfc_get_systime() #17, !dbg !8894
  call void @llvm.dbg.value(metadata i32 %5, metadata !8889, metadata !DIExpression()), !dbg !8890
  %6 = add i32 %5, %4, !dbg !8895
  %7 = icmp slt i32 %6, 0, !dbg !8895
  br i1 %7, label %8, label %12, !dbg !8896

8:                                                ; preds = %1, %8
  %9 = tail call i32 @sfc_get_systime() #17, !dbg !8897
  call void @llvm.dbg.value(metadata i32 %9, metadata !8889, metadata !DIExpression()), !dbg !8890
  %10 = add i32 %9, %4, !dbg !8895
  %11 = icmp slt i32 %10, 0, !dbg !8895
  br i1 %11, label %8, label %12, !dbg !8896, !llvm.loop !8899

12:                                               ; preds = %8, %1
  ret void, !dbg !8901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !8902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8904, metadata !DIExpression()), !dbg !8905
  %2 = shl i32 %0, 5, !dbg !8906
  tail call void @sfc_delay_time(i32 noundef %2) #17, !dbg !8907
  ret void, !dbg !8908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfc_getMaxGPRamSize() local_unnamed_addr #13 section ".ramTEXT" !dbg !8909 {
  ret i32 128, !dbg !8912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_Init(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !8913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8915, metadata !DIExpression()), !dbg !8917
  store i32 0, i32* @g_sfc_security_enable, align 4, !dbg !8918
  store volatile i32 65536, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !8919
  store volatile i32 185300880, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !8920
  store volatile i32 -1296039920, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !8921
  store volatile i32 0, i32* inttoptr (i32 -2096693236 to i32*), align 4, !dbg !8922
  store volatile i32 0, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !8923
  store volatile i32 0, i32* inttoptr (i32 -2096693220 to i32*), align 4, !dbg !8924
  %2 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !8925
  call void @llvm.dbg.value(metadata i32 %2, metadata !8916, metadata !DIExpression()), !dbg !8917
  %3 = and i32 %2, -4194305, !dbg !8926
  call void @llvm.dbg.value(metadata i32 %3, metadata !8916, metadata !DIExpression()), !dbg !8917
  store volatile i32 %3, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !8927
  tail call void @sfc_delay_ms(i32 noundef 1) #17, !dbg !8928
  %4 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !8929
  call void @llvm.dbg.value(metadata i32 %4, metadata !8916, metadata !DIExpression()), !dbg !8917
  %5 = or i32 %4, 4194304, !dbg !8930
  call void @llvm.dbg.value(metadata i32 %5, metadata !8916, metadata !DIExpression()), !dbg !8917
  store volatile i32 %5, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !8931
  tail call void @sfc_delay_ms(i32 noundef 1) #17, !dbg !8932
  %6 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !8933
  call void @llvm.dbg.value(metadata i32 %6, metadata !8916, metadata !DIExpression()), !dbg !8917
  %7 = and i32 %6, -4194305, !dbg !8934
  call void @llvm.dbg.value(metadata i32 %7, metadata !8916, metadata !DIExpression()), !dbg !8917
  store volatile i32 %7, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !8935
  tail call void @sfc_delay_ms(i32 noundef 1) #17, !dbg !8936
  %8 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !8937
  call void @llvm.dbg.value(metadata i32 %8, metadata !8916, metadata !DIExpression()), !dbg !8917
  %9 = or i32 %8, 4194304, !dbg !8938
  call void @llvm.dbg.value(metadata i32 %9, metadata !8916, metadata !DIExpression()), !dbg !8917
  store volatile i32 %9, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !8939
  tail call void @sfc_delay_ms(i32 noundef 1) #17, !dbg !8940
  %10 = icmp eq i32 %0, 0, !dbg !8941
  br i1 %10, label %12, label %11, !dbg !8943

11:                                               ; preds = %1
  store i32 1, i32* @g_sfc_security_enable, align 4, !dbg !8944
  store volatile i32 268435456, i32* inttoptr (i32 -2096660480 to i32*), align 32768, !dbg !8946
  store volatile i32 268435456, i32* inttoptr (i32 -2096660476 to i32*), align 4, !dbg !8947
  store volatile i32 3, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !8948
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !8949
  store volatile i32 135, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !8950
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !8951
  store volatile i32 69632, i32* inttoptr (i32 -2096660460 to i32*), align 4, !dbg !8952
  br label %12, !dbg !8953

12:                                               ; preds = %11, %1
  ret void, !dbg !8954
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GetDirectMode() local_unnamed_addr #5 section ".ramTEXT" !dbg !8955 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !8959
  call void @llvm.dbg.value(metadata i32 %1, metadata !8957, metadata !DIExpression(DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !8960
  %2 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !8961
  %3 = lshr i32 %2, 4, !dbg !8962
  %4 = and i32 %3, 7, !dbg !8962
  call void @llvm.dbg.value(metadata i32 %4, metadata !8958, metadata !DIExpression()), !dbg !8960
  %5 = icmp ne i32 %4, 7, !dbg !8963
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %5, i1 %7, i1 false, !dbg !8965
  call void @llvm.dbg.value(metadata i32 %6, metadata !8957, metadata !DIExpression()), !dbg !8960
  %9 = icmp ult i32 %4, 2, !dbg !8965
  %10 = zext i1 %9 to i32, !dbg !8965
  %11 = select i1 %8, i32 %10, i32 3, !dbg !8965
  ret i32 %11, !dbg !8966
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_direct_read_setup(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !8967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8971, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 %1, metadata !8972, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.value(metadata i32 0, metadata !8973, metadata !DIExpression()), !dbg !8974
  %3 = add i32 %1, -1, !dbg !8975
  %4 = icmp ult i32 %3, 3, !dbg !8975
  br i1 %4, label %5, label %8, !dbg !8975

5:                                                ; preds = %2
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.sfc_direct_read_setup, i32 0, i32 %3, !dbg !8975
  %7 = load i32, i32* %6, align 4, !dbg !8975
  br label %8, !dbg !8975

8:                                                ; preds = %5, %2
  %9 = phi i32 [ 0, %2 ], [ %7, %5 ], !dbg !8974
  call void @llvm.dbg.value(metadata i32 %9, metadata !8973, metadata !DIExpression()), !dbg !8974
  %10 = or i32 %9, %0, !dbg !8976
  call void @llvm.dbg.value(metadata i32 %10, metadata !8973, metadata !DIExpression()), !dbg !8974
  store volatile i32 %10, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !8977
  ret void, !dbg !8978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sfc_Command_List(i8* noundef readonly %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !8979 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8983, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 0, metadata !8984, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 0, metadata !8986, metadata !DIExpression()), !dbg !8987
  %2 = icmp eq i8* %0, null, !dbg !8988
  br i1 %2, label %25, label %3, !dbg !8990

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %4, metadata !8985, metadata !DIExpression()), !dbg !8987
  br label %5, !dbg !8992

5:                                                ; preds = %12, %3
  %6 = phi i32 [ 0, %3 ], [ %23, %12 ], !dbg !8987
  %7 = phi i32 [ 0, %3 ], [ %13, %12 ], !dbg !8987
  call void @llvm.dbg.value(metadata i32 %7, metadata !8986, metadata !DIExpression()), !dbg !8987
  call void @llvm.dbg.value(metadata i32 %6, metadata !8984, metadata !DIExpression()), !dbg !8987
  %8 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !8993
  %9 = load i8, i8* %8, align 1, !dbg !8993
  switch i8 %9, label %11 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %10
  ], !dbg !8995

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 1, metadata !8986, metadata !DIExpression()), !dbg !8987
  br label %12, !dbg !8996

11:                                               ; preds = %5
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !8998
  br label %25, !dbg !8999

12:                                               ; preds = %5, %5, %10
  %13 = phi i32 [ 1, %10 ], [ %7, %5 ], [ %7, %5 ], !dbg !8987
  call void @llvm.dbg.value(metadata i32 %13, metadata !8986, metadata !DIExpression()), !dbg !8987
  %14 = add i32 %6, 2, !dbg !9000
  %15 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9001
  %16 = add i32 %6, 1, !dbg !9002
  %17 = getelementptr inbounds i8, i8* %0, i32 %16, !dbg !9003
  %18 = load i8, i8* %17, align 1, !dbg !9003
  %19 = zext i8 %18 to i32, !dbg !9003
  %20 = tail call i32 @sfc_transfer(i8* noundef nonnull %15, i32 noundef %19, i8* noundef null, i32 noundef 0, i32 noundef %13) #17, !dbg !9004
  %21 = load i8, i8* %17, align 1, !dbg !9005
  %22 = zext i8 %21 to i32, !dbg !9005
  %23 = add i32 %14, %22, !dbg !9006
  call void @llvm.dbg.value(metadata i32 %23, metadata !8984, metadata !DIExpression()), !dbg !8987
  %24 = tail call i32 @flash_wait_ready(i32 noundef 1) #18, !dbg !9007
  br label %5, !dbg !8992, !llvm.loop !9008

25:                                               ; preds = %1, %11
  ret void, !dbg !9010
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_transfer(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #2 section ".ramTEXT" !dbg !9011 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9016, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 %1, metadata !9017, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i8* %2, metadata !9018, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 %3, metadata !9019, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 %4, metadata !9020, metadata !DIExpression()), !dbg !9027
  %7 = bitcast i32* %6 to i8*, !dbg !9028
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !9028
  %8 = add i32 %3, %1, !dbg !9029
  %9 = icmp ugt i32 %8, 160, !dbg !9031
  br i1 %9, label %59, label %10, !dbg !9032

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !9024, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 0, metadata !9022, metadata !DIExpression()), !dbg !9027
  %11 = icmp eq i32 %1, 0, !dbg !9033
  br i1 %11, label %41, label %12, !dbg !9036

12:                                               ; preds = %10, %38
  %13 = phi i8* [ %39, %38 ], [ inttoptr (i32 -2096691200 to i8*), %10 ]
  %14 = phi i32 [ %31, %38 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9024, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 %14, metadata !9022, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 0, metadata !9023, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 0, metadata !9021, metadata !DIExpression()), !dbg !9027
  store i32 0, i32* %6, align 4, !dbg !9037
  call void @llvm.dbg.value(metadata i32 0, metadata !9023, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 %14, metadata !9022, metadata !DIExpression()), !dbg !9027
  %15 = icmp ult i32 %14, %1, !dbg !9040
  br i1 %15, label %16, label %29, !dbg !9042

16:                                               ; preds = %12, %16
  %17 = phi i32 [ %23, %16 ], [ 0, %12 ]
  %18 = phi i32 [ %22, %16 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !9023, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 %18, metadata !9022, metadata !DIExpression()), !dbg !9027
  %19 = getelementptr inbounds i8, i8* %0, i32 %18, !dbg !9043
  %20 = load i8, i8* %19, align 1, !dbg !9043
  %21 = getelementptr inbounds i8, i8* %7, i32 %17, !dbg !9045
  store i8 %20, i8* %21, align 1, !dbg !9046
  %22 = add nuw i32 %18, 1, !dbg !9047
  call void @llvm.dbg.value(metadata i32 %22, metadata !9022, metadata !DIExpression()), !dbg !9027
  %23 = add nuw nsw i32 %17, 1, !dbg !9048
  call void @llvm.dbg.value(metadata i32 %23, metadata !9023, metadata !DIExpression()), !dbg !9027
  %24 = icmp ult i32 %22, %1, !dbg !9040
  %25 = icmp ult i32 %17, 3, !dbg !9049
  %26 = select i1 %24, i1 %25, i1 false, !dbg !9049
  br i1 %26, label %16, label %27, !dbg !9042, !llvm.loop !9050

27:                                               ; preds = %16
  %28 = load i32, i32* %6, align 4, !dbg !9052
  br label %29, !dbg !9052

29:                                               ; preds = %27, %12
  %30 = phi i32 [ 0, %12 ], [ %28, %27 ], !dbg !9052
  %31 = phi i32 [ %14, %12 ], [ %22, %27 ], !dbg !9053
  call void @llvm.dbg.value(metadata i32 %30, metadata !9021, metadata !DIExpression()), !dbg !9027
  %32 = bitcast i8* %13 to i32*, !dbg !9052
  store volatile i32 %30, i32* %32, align 4, !dbg !9052
  %33 = icmp eq i32 %31, 4, !dbg !9054
  %34 = load i32, i32* @g_sfc_security_enable, align 4
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %33, i1 %35, i1 false, !dbg !9056
  br i1 %36, label %37, label %38, !dbg !9056

37:                                               ; preds = %29
  store volatile i32 64, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !9057
  store volatile i32 256, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !9059
  br label %38, !dbg !9060

38:                                               ; preds = %29, %37
  %39 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !9061
  call void @llvm.dbg.value(metadata i8* %39, metadata !9024, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 %31, metadata !9022, metadata !DIExpression()), !dbg !9027
  %40 = icmp ult i32 %31, %1, !dbg !9033
  br i1 %40, label %12, label %41, !dbg !9036, !llvm.loop !9062

41:                                               ; preds = %38, %10
  %42 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !9064
  call void @llvm.dbg.value(metadata i32 %42, metadata !9026, metadata !DIExpression()), !dbg !9027
  %43 = load i32, i32* @g_sfc_security_enable, align 4, !dbg !9065
  %44 = icmp eq i32 %43, 0, !dbg !9065
  br i1 %44, label %46, label %45, !dbg !9067

45:                                               ; preds = %41
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !9068
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !9070
  br label %46, !dbg !9071

46:                                               ; preds = %45, %41
  store volatile i32 %1, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !9072
  store volatile i32 %3, i32* inttoptr (i32 -2096693228 to i32*), align 4, !dbg !9073
  tail call fastcc void @sfc_MacEnable(i32 noundef %4) #17, !dbg !9074
  tail call fastcc void @sfc_MacWaitReady() #17, !dbg !9075
  tail call void @restore_interrupt_mask(i32 noundef %42) #18, !dbg !9076
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -2096691200 to i8*), i32 %1), metadata !9024, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !9027
  call void @llvm.dbg.value(metadata i8* %2, metadata !9018, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 0, metadata !9022, metadata !DIExpression()), !dbg !9027
  %47 = icmp eq i32 %3, 0, !dbg !9077
  br i1 %47, label %59, label %48, !dbg !9080

48:                                               ; preds = %46
  %49 = getelementptr inbounds i8, i8* inttoptr (i32 -2096691200 to i8*), i32 %1, !dbg !9081
  call void @llvm.dbg.value(metadata i8* %49, metadata !9024, metadata !DIExpression()), !dbg !9027
  br label %50, !dbg !9080

50:                                               ; preds = %48, %50
  %51 = phi i8* [ %56, %50 ], [ %2, %48 ]
  %52 = phi i8* [ %57, %50 ], [ %49, %48 ]
  %53 = phi i32 [ %55, %50 ], [ 0, %48 ]
  call void @llvm.dbg.value(metadata i8* %51, metadata !9018, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i8* %52, metadata !9024, metadata !DIExpression()), !dbg !9027
  call void @llvm.dbg.value(metadata i32 %53, metadata !9022, metadata !DIExpression()), !dbg !9027
  %54 = load volatile i8, i8* %52, align 1, !dbg !9082
  store i8 %54, i8* %51, align 1, !dbg !9084
  %55 = add nuw i32 %53, 1, !dbg !9085
  call void @llvm.dbg.value(metadata i32 %55, metadata !9022, metadata !DIExpression()), !dbg !9027
  %56 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !9086
  call void @llvm.dbg.value(metadata i8* %56, metadata !9018, metadata !DIExpression()), !dbg !9027
  %57 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !9087
  call void @llvm.dbg.value(metadata i8* %57, metadata !9024, metadata !DIExpression()), !dbg !9027
  %58 = icmp eq i32 %55, %3, !dbg !9077
  br i1 %58, label %59, label %50, !dbg !9080, !llvm.loop !9088

59:                                               ; preds = %50, %46, %5
  %60 = phi i32 [ -1, %5 ], [ 0, %46 ], [ %3, %50 ], !dbg !9027
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !9090
  ret i32 %60, !dbg !9090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacEnable(i32 noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !9091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9093, metadata !DIExpression()), !dbg !9095
  %2 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !9096
  call void @llvm.dbg.value(metadata i32 %2, metadata !9094, metadata !DIExpression()), !dbg !9095
  %3 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !9097
  %4 = and i32 %3, 1, !dbg !9097
  %5 = or i32 %4, %0, !dbg !9099
  %6 = icmp eq i32 %5, 0, !dbg !9099
  %7 = or i32 %2, 16
  %8 = select i1 %6, i32 %2, i32 %7, !dbg !9099
  call void @llvm.dbg.value(metadata i32 %8, metadata !9094, metadata !DIExpression()), !dbg !9095
  %9 = or i32 %8, 8, !dbg !9100
  call void @llvm.dbg.value(metadata i32 %9, metadata !9094, metadata !DIExpression()), !dbg !9095
  store volatile i32 %9, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !9101
  ret void, !dbg !9102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacWaitReady() unnamed_addr #0 section ".ramTEXT" !dbg !9103 {
  tail call fastcc void @sfc_MacTrigger() #17, !dbg !9104
  tail call fastcc void @sfc_MacLeave() #17, !dbg !9105
  ret void, !dbg !9106
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacTrigger() unnamed_addr #0 section ".ramTEXT" !dbg !9107 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9111, metadata !DIExpression()), !dbg !9113
  call void @llvm.dbg.value(metadata i32 0, metadata !9112, metadata !DIExpression()), !dbg !9113
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !9114
  call void @llvm.dbg.value(metadata i32 %1, metadata !9111, metadata !DIExpression()), !dbg !9113
  %2 = or i32 %1, 12, !dbg !9115
  call void @llvm.dbg.value(metadata i32 %2, metadata !9111, metadata !DIExpression()), !dbg !9113
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !9116
  br label %3, !dbg !9117

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !9118
  %5 = and i32 %4, 2, !dbg !9119
  %6 = icmp eq i32 %5, 0, !dbg !9120
  br i1 %6, label %3, label %7, !dbg !9117, !llvm.loop !9121

7:                                                ; preds = %3, %7
  %8 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !9123
  %9 = and i32 %8, 1, !dbg !9124
  %10 = icmp eq i32 %9, 0, !dbg !9125
  br i1 %10, label %11, label %7, !dbg !9125, !llvm.loop !9126

11:                                               ; preds = %7
  ret void, !dbg !9128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacLeave() unnamed_addr #0 section ".ramTEXT" !dbg !9129 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !9132
  call void @llvm.dbg.value(metadata i32 %1, metadata !9131, metadata !DIExpression()), !dbg !9133
  %2 = and i32 %1, -268435477, !dbg !9134
  call void @llvm.dbg.value(metadata i32 %2, metadata !9131, metadata !DIExpression()), !dbg !9133
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !9135
  %3 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !9136
  call void @llvm.dbg.value(metadata i32 %3, metadata !9131, metadata !DIExpression()), !dbg !9133
  %4 = and i32 %3, -9, !dbg !9137
  call void @llvm.dbg.value(metadata i32 %4, metadata !9131, metadata !DIExpression()), !dbg !9133
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !9138
  ret void, !dbg !9139
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_clear_gpram() local_unnamed_addr #0 section ".ramTEXT" !dbg !9140 {
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !9143, metadata !DIExpression()), !dbg !9144
  call void @llvm.dbg.value(metadata i32 0, metadata !9142, metadata !DIExpression()), !dbg !9144
  br label %1, !dbg !9145

1:                                                ; preds = %0, %1
  %2 = phi i8* [ inttoptr (i32 -2096691200 to i8*), %0 ], [ %5, %1 ]
  %3 = phi i32 [ 0, %0 ], [ %6, %1 ]
  call void @llvm.dbg.value(metadata i8* %2, metadata !9143, metadata !DIExpression()), !dbg !9144
  call void @llvm.dbg.value(metadata i32 %3, metadata !9142, metadata !DIExpression()), !dbg !9144
  %4 = bitcast i8* %2 to i32*, !dbg !9147
  store volatile i32 0, i32* %4, align 4, !dbg !9147
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !9150
  call void @llvm.dbg.value(metadata i8* %5, metadata !9143, metadata !DIExpression()), !dbg !9144
  %6 = add nuw nsw i32 %3, 1, !dbg !9151
  call void @llvm.dbg.value(metadata i32 %6, metadata !9142, metadata !DIExpression()), !dbg !9144
  %7 = icmp eq i32 %6, 40, !dbg !9152
  br i1 %7, label %8, label %1, !dbg !9145, !llvm.loop !9153

8:                                                ; preds = %1
  ret void, !dbg !9155
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_read(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3) local_unnamed_addr #2 section ".ramTEXT" !dbg !9156 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9160, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.value(metadata i32 %1, metadata !9161, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.value(metadata i8* %2, metadata !9162, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.value(metadata i32 %3, metadata !9163, metadata !DIExpression()), !dbg !9164
  %5 = tail call i32 @sfc_transfer(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef 0) #17, !dbg !9165
  ret i32 %5, !dbg !9166
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #2 section ".ramTEXT" !dbg !9167 {
  %5 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9171, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.value(metadata i32 %1, metadata !9172, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.value(metadata i8* %2, metadata !9173, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.value(metadata i32 %3, metadata !9174, metadata !DIExpression()), !dbg !9180
  %6 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 0, !dbg !9181
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #19, !dbg !9181
  call void @llvm.dbg.declare(metadata [160 x i8]* %5, metadata !9175, metadata !DIExpression()), !dbg !9182
  %7 = add i32 %3, %1, !dbg !9183
  call void @llvm.dbg.value(metadata i32 %7, metadata !9179, metadata !DIExpression()), !dbg !9180
  %8 = icmp ugt i32 %7, 159, !dbg !9184
  br i1 %8, label %9, label %12, !dbg !9186

9:                                                ; preds = %4
  %10 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.155, i32 0, i32 0), i32 noundef 496) #18, !dbg !9187
  br label %11, !dbg !9187

11:                                               ; preds = %11, %9
  br label %11, !dbg !9187, !llvm.loop !9191

12:                                               ; preds = %4
  %13 = call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %0, i32 noundef %1) #18, !dbg !9192
  %14 = icmp ne i8* %2, null, !dbg !9193
  %15 = icmp ne i32 %3, 0
  %16 = and i1 %14, %15, !dbg !9195
  br i1 %16, label %17, label %20, !dbg !9195

17:                                               ; preds = %12
  %18 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 %1, !dbg !9196
  %19 = call i8* @memcpy(i8* noundef nonnull %18, i8* noundef nonnull %2, i32 noundef %3) #18, !dbg !9198
  br label %20, !dbg !9199

20:                                               ; preds = %17, %12
  %21 = call i32 @sfc_transfer(i8* noundef nonnull %6, i32 noundef %7, i8* noundef null, i32 noundef 0, i32 noundef 0) #17, !dbg !9200
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #19, !dbg !9201
  ret i32 %21, !dbg !9202
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_security_write_crc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".ramTEXT" !dbg !9203 {
  %3 = alloca [160 x i8], align 1
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9207, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata i32 %1, metadata !9208, metadata !DIExpression()), !dbg !9212
  %5 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 0, !dbg !9213
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #19, !dbg !9213
  call void @llvm.dbg.declare(metadata [160 x i8]* %3, metadata !9209, metadata !DIExpression()), !dbg !9214
  %6 = bitcast i32* %4 to i8*, !dbg !9215
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !9215
  %7 = load volatile i32, i32* inttoptr (i32 -2096660420 to i32*), align 4, !dbg !9216
  call void @llvm.dbg.value(metadata i32 %7, metadata !9210, metadata !DIExpression()), !dbg !9212
  store i32 %7, i32* %4, align 4, !dbg !9217
  %8 = add i32 %1, 4, !dbg !9218
  call void @llvm.dbg.value(metadata i32 %8, metadata !9211, metadata !DIExpression()), !dbg !9212
  %9 = call i8* @memcpy(i8* noundef nonnull %5, i8* noundef %0, i32 noundef %1) #18, !dbg !9219
  %10 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 %1, !dbg !9220
  call void @llvm.dbg.value(metadata i32* %4, metadata !9210, metadata !DIExpression(DW_OP_deref)), !dbg !9212
  %11 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef nonnull %6, i32 noundef 4) #18, !dbg !9221
  %12 = call i32 @sfc_transfer(i8* noundef nonnull %5, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #17, !dbg !9222
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !9223
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #19, !dbg !9223
  ret i32 %12, !dbg !9224
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #2 section ".ramTEXT" !dbg !9225 {
  %6 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9227, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata i32 %1, metadata !9228, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata i8* %2, metadata !9229, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata i32 %3, metadata !9230, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.value(metadata i32 %4, metadata !9231, metadata !DIExpression()), !dbg !9234
  %7 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 0, !dbg !9235
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #19, !dbg !9235
  call void @llvm.dbg.declare(metadata [160 x i8]* %6, metadata !9232, metadata !DIExpression()), !dbg !9236
  %8 = add i32 %3, %1, !dbg !9237
  call void @llvm.dbg.value(metadata i32 %8, metadata !9233, metadata !DIExpression()), !dbg !9234
  %9 = icmp ugt i32 %8, 160, !dbg !9238
  br i1 %9, label %10, label %13, !dbg !9240

10:                                               ; preds = %5
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.155, i32 0, i32 0), i32 noundef 544) #18, !dbg !9241
  br label %12, !dbg !9241

12:                                               ; preds = %12, %10
  br label %12, !dbg !9241, !llvm.loop !9245

13:                                               ; preds = %5
  %14 = call i8* @memcpy(i8* noundef nonnull %7, i8* noundef %0, i32 noundef %1) #18, !dbg !9246
  %15 = icmp ne i8* %2, null, !dbg !9247
  %16 = icmp ne i32 %3, 0
  %17 = and i1 %15, %16, !dbg !9249
  br i1 %17, label %18, label %21, !dbg !9249

18:                                               ; preds = %13
  %19 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 %1, !dbg !9250
  %20 = call i8* @memcpy(i8* noundef nonnull %19, i8* noundef nonnull %2, i32 noundef %3) #18, !dbg !9252
  br label %21, !dbg !9253

21:                                               ; preds = %18, %13
  %22 = call i32 @sfc_transfer(i8* noundef nonnull %7, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #17, !dbg !9254
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #19, !dbg !9255
  ret i32 %22, !dbg !9256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_suspend_Winbond() local_unnamed_addr #2 section ".ramTEXT" !dbg !9257 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_suspend_winbond, i32 0, i32 0)) #18, !dbg !9258
  ret void, !dbg !9259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_resume_Winbond() local_unnamed_addr #2 section ".ramTEXT" !dbg !9260 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_resume_winbond, i32 0, i32 0)) #18, !dbg !9261
  ret void, !dbg !9262
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_check_device() local_unnamed_addr #2 section ".ramTEXT" !dbg !9263 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !9270
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #19, !dbg !9270
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !9267, metadata !DIExpression()), !dbg !9271
  %3 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #17, !dbg !9272
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !9273
  %5 = load i8, i8* %4, align 1, !dbg !9273
  %6 = zext i8 %5 to i32, !dbg !9274
  %7 = shl nuw i32 %6, 24, !dbg !9275
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !9276
  %9 = load i8, i8* %8, align 1, !dbg !9276
  %10 = zext i8 %9 to i32, !dbg !9277
  %11 = shl nuw nsw i32 %10, 16, !dbg !9278
  %12 = or i32 %11, %7, !dbg !9279
  call void @llvm.dbg.value(metadata i32 %12, metadata !9266, metadata !DIExpression()), !dbg !9280
  %13 = call i32 @sfc_GetDirectMode() #18, !dbg !9281
  store i32 %13, i32* @gucFlashSFCMode, align 4, !dbg !9282
  call void @llvm.dbg.value(metadata i32 1, metadata !9265, metadata !DIExpression()), !dbg !9280
  %14 = load i8, i8* %2, align 1
  call void @llvm.dbg.value(metadata i32 1, metadata !9265, metadata !DIExpression()), !dbg !9280
  br label %15, !dbg !9283

15:                                               ; preds = %0, %44
  %16 = phi i32 [ 1, %0 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9265, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata !DIArgList([13 x %struct.flash_info_t]* @chips_data, i32 %16), metadata !9269, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 24, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !9280
  %17 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 1, !dbg !9285
  %18 = load i8, i8* %17, align 4, !dbg !9285
  %19 = icmp eq i8 %18, %14, !dbg !9289
  br i1 %19, label %20, label %44, !dbg !9290

20:                                               ; preds = %15
  %21 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 2, !dbg !9291
  %22 = load i32, i32* %21, align 4, !dbg !9291
  %23 = icmp eq i32 %22, %12, !dbg !9292
  br i1 %23, label %24, label %44, !dbg !9293

24:                                               ; preds = %20
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, !dbg !9294
  store %struct.flash_info_t* %25, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9295
  %26 = add nsw i32 %16, -4, !dbg !9297
  %27 = icmp ult i32 %26, 5, !dbg !9297
  br i1 %27, label %42, label %28, !dbg !9299

28:                                               ; preds = %24
  %29 = add nsw i32 %16, -1, !dbg !9300
  %30 = icmp ult i32 %29, 3, !dbg !9300
  br i1 %30, label %42, label %31, !dbg !9302

31:                                               ; preds = %28
  %32 = add nsw i32 %16, -9, !dbg !9303
  %33 = icmp ult i32 %32, 3, !dbg !9303
  br i1 %33, label %34, label %40, !dbg !9305

34:                                               ; preds = %31
  %35 = and i32 %16, 2147483639, !dbg !9306
  %36 = icmp eq i32 %35, 1, !dbg !9306
  %37 = icmp eq i32 %16, 11
  %38 = or i1 %37, %36, !dbg !9309
  %39 = select i1 %38, i32 49, i32 1, !dbg !9309
  store i32 %39, i32* @gd_write_sr2_1, align 4, !dbg !9310
  br label %42, !dbg !9311

40:                                               ; preds = %31
  %41 = icmp eq i32 %16, 12, !dbg !9312
  br i1 %41, label %42, label %67, !dbg !9314

42:                                               ; preds = %40, %28, %24, %34
  %43 = phi i32 [ 200, %34 ], [ 194, %24 ], [ 239, %28 ], [ 32, %40 ]
  store i32 %43, i32* @support_flash_id, align 4, !dbg !9315
  br label %67, !dbg !9316

44:                                               ; preds = %15, %20
  %45 = add nuw nsw i32 %16, 1, !dbg !9317
  call void @llvm.dbg.value(metadata i32 %45, metadata !9265, metadata !DIExpression()), !dbg !9280
  %46 = icmp eq i32 %45, 13, !dbg !9318
  br i1 %46, label %47, label %15, !dbg !9283, !llvm.loop !9319

47:                                               ; preds = %44
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9321
  %48 = load i32, i32* @support_flash_id, align 4, !dbg !9322
  %49 = icmp eq i32 %48, 255, !dbg !9324
  br i1 %49, label %50, label %67, !dbg !9325

50:                                               ; preds = %47
  %51 = call %struct.flash_info_t* @customer_flash_register() #18, !dbg !9326
  store %struct.flash_info_t* %51, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9328
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !9269, metadata !DIExpression()), !dbg !9280
  %52 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 1, !dbg !9329
  %53 = load i8, i8* %52, align 4, !dbg !9329
  %54 = load i8, i8* %2, align 1, !dbg !9331
  %55 = icmp eq i8 %53, %54, !dbg !9332
  br i1 %55, label %56, label %60, !dbg !9333

56:                                               ; preds = %50
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !9269, metadata !DIExpression()), !dbg !9280
  %57 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 2, !dbg !9334
  %58 = load i32, i32* %57, align 4, !dbg !9334
  %59 = icmp eq i32 %58, %12, !dbg !9335
  br i1 %59, label %67, label %60, !dbg !9336

60:                                               ; preds = %56, %50
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 322, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.166, i32 0, i32 0)) #18, !dbg !9337
  %61 = load i8, i8* %2, align 1, !dbg !9339
  %62 = zext i8 %61 to i32, !dbg !9339
  %63 = load i8, i8* %4, align 1, !dbg !9339
  %64 = zext i8 %63 to i32, !dbg !9339
  %65 = load i8, i8* %8, align 1, !dbg !9339
  %66 = zext i8 %65 to i32, !dbg !9339
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 323, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.167, i32 0, i32 0), i32 noundef %62, i32 noundef %64, i32 noundef %66, i32 noundef %12) #18, !dbg !9339
  br label %67, !dbg !9340

67:                                               ; preds = %47, %60, %56, %40, %42
  %68 = phi i32 [ 0, %42 ], [ 0, %40 ], [ 0, %56 ], [ -1, %60 ], [ -1, %47 ]
  %69 = phi i32 [ 1, %42 ], [ 1, %40 ], [ 1, %56 ], [ 0, %60 ], [ 0, %47 ], !dbg !9280
  store i32 %68, i32* @sf_drvier_status, align 4, !dbg !9280
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #19, !dbg !9341
  ret i32 %69, !dbg !9341
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_jedec_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".ramTEXT" !dbg !9342 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9346, metadata !DIExpression()), !dbg !9350
  call void @llvm.dbg.value(metadata i32 %1, metadata !9347, metadata !DIExpression()), !dbg !9350
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #19, !dbg !9351
  call void @llvm.dbg.value(metadata i8 -97, metadata !9348, metadata !DIExpression()), !dbg !9350
  store i8 -97, i8* %3, align 1, !dbg !9352
  call void @llvm.dbg.value(metadata i8* %3, metadata !9348, metadata !DIExpression(DW_OP_deref)), !dbg !9350
  %4 = call i32 @sfc_read(i8* noundef nonnull %3, i32 noundef 1, i8* noundef %0, i32 noundef %1) #18, !dbg !9353
  call void @llvm.dbg.value(metadata i32 %4, metadata !9349, metadata !DIExpression()), !dbg !9350
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #19, !dbg !9354
  ret i32 %4, !dbg !9355
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_switch_mode(i32 noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !9356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9360, metadata !DIExpression()), !dbg !9361
  %2 = tail call %struct.flash_info_t* @customer_flash_register() #18, !dbg !9362
  %3 = icmp eq %struct.flash_info_t* %2, null, !dbg !9364
  br i1 %3, label %5, label %4, !dbg !9365

4:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !9366
  br label %5, !dbg !9368

5:                                                ; preds = %4, %1
  %6 = tail call i32 @flash_check_device() #17, !dbg !9369
  tail call fastcc void @flash_Switch_Device_Mode(i32 noundef %0) #17, !dbg !9370
  switch i32 %0, label %14 [
    i32 1, label %7
    i32 2, label %8
    i32 3, label %13
  ], !dbg !9371

7:                                                ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 185298944, i32 noundef 1) #18, !dbg !9372
  br label %17, !dbg !9375

8:                                                ; preds = %5
  %9 = load i32, i32* @support_flash_id, align 4, !dbg !9376
  %10 = icmp eq i32 %9, 32, !dbg !9380
  br i1 %10, label %11, label %12, !dbg !9381

11:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335572992, i32 noundef 2) #18, !dbg !9382
  br label %17, !dbg !9384

12:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335589376, i32 noundef 2) #18, !dbg !9385
  br label %17

13:                                               ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 201265152, i32 noundef 3) #18, !dbg !9387
  br label %17

14:                                               ; preds = %5
  %15 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.181, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.182, i32 0, i32 0), i32 noundef 352) #18, !dbg !9390
  br label %16, !dbg !9390

16:                                               ; preds = %14, %16
  br label %16, !dbg !9390, !llvm.loop !9394

17:                                               ; preds = %13, %12, %11, %7
  store i32 %0, i32* @gucFlashSFCMode, align 4, !dbg !9395
  ret void, !dbg !9396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_Switch_Device_Mode(i32 noundef %0) unnamed_addr #2 section ".ramTEXT" !dbg !9397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9399, metadata !DIExpression()), !dbg !9401
  switch i32 %0, label %29 [
    i32 1, label %2
    i32 2, label %11
    i32 3, label %20
  ], !dbg !9402

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), metadata !9400, metadata !DIExpression()), !dbg !9401
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !9403
  switch i32 %3, label %32 [
    i32 194, label %35
    i32 200, label %4
    i32 32, label %8
    i32 255, label %9
  ], !dbg !9406

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), metadata !9400, metadata !DIExpression()), !dbg !9401
  %5 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !9407
  %6 = icmp eq i32 %5, 49, !dbg !9411
  %7 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), !dbg !9412
  call void @llvm.dbg.value(metadata i8* %7, metadata !9400, metadata !DIExpression()), !dbg !9401
  br label %35, !dbg !9413

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), metadata !9400, metadata !DIExpression()), !dbg !9401
  br label %35, !dbg !9414

9:                                                ; preds = %2
  %10 = tail call i8* @customer_switch_spi_mode_command() #18, !dbg !9417
  call void @llvm.dbg.value(metadata i8* %10, metadata !9400, metadata !DIExpression()), !dbg !9401
  br label %35, !dbg !9420

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), metadata !9400, metadata !DIExpression()), !dbg !9401
  %12 = load i32, i32* @support_flash_id, align 4, !dbg !9421
  switch i32 %12, label %33 [
    i32 194, label %35
    i32 200, label %13
    i32 32, label %17
    i32 255, label %18
  ], !dbg !9423

13:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !9400, metadata !DIExpression()), !dbg !9401
  %14 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !9424
  %15 = icmp eq i32 %14, 49, !dbg !9428
  %16 = select i1 %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !9429
  call void @llvm.dbg.value(metadata i8* %16, metadata !9400, metadata !DIExpression()), !dbg !9401
  br label %35, !dbg !9430

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !9400, metadata !DIExpression()), !dbg !9401
  br label %35, !dbg !9431

18:                                               ; preds = %11
  %19 = tail call i8* @customer_switch_spiq_mode_command() #18, !dbg !9434
  call void @llvm.dbg.value(metadata i8* %19, metadata !9400, metadata !DIExpression()), !dbg !9401
  br label %35, !dbg !9437

20:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), metadata !9400, metadata !DIExpression()), !dbg !9401
  %21 = load i32, i32* @support_flash_id, align 4, !dbg !9438
  switch i32 %21, label %34 [
    i32 194, label %35
    i32 200, label %22
    i32 32, label %26
    i32 255, label %27
  ], !dbg !9440

22:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !9400, metadata !DIExpression()), !dbg !9401
  %23 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !9441
  %24 = icmp eq i32 %23, 49, !dbg !9445
  %25 = select i1 %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchqpi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !9446
  call void @llvm.dbg.value(metadata i8* %25, metadata !9400, metadata !DIExpression()), !dbg !9401
  br label %35, !dbg !9447

26:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !9400, metadata !DIExpression()), !dbg !9401
  br label %35, !dbg !9448

27:                                               ; preds = %20
  %28 = tail call i8* @customer_switch_spiq_mode_command() #18, !dbg !9451
  call void @llvm.dbg.value(metadata i8* %28, metadata !9400, metadata !DIExpression()), !dbg !9401
  br label %35, !dbg !9454

29:                                               ; preds = %1
  %30 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.181, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.182, i32 0, i32 0), i32 noundef 268) #18, !dbg !9455
  br label %31, !dbg !9455

31:                                               ; preds = %31, %29
  br label %31, !dbg !9455, !llvm.loop !9458

32:                                               ; preds = %2
  br label %35, !dbg !9459

33:                                               ; preds = %11
  br label %35, !dbg !9459

34:                                               ; preds = %20
  br label %35, !dbg !9459

35:                                               ; preds = %20, %34, %11, %33, %2, %32, %26, %27, %22, %17, %18, %13, %8, %9, %4
  %36 = phi i8* [ %25, %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %26 ], [ %28, %27 ], [ %16, %13 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %17 ], [ %19, %18 ], [ %7, %4 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), %8 ], [ %10, %9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_mxic, i32 0, i32 0), %2 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), %32 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %11 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), %33 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %20 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), %34 ], !dbg !9460
  call void @llvm.dbg.value(metadata i8* %36, metadata !9400, metadata !DIExpression()), !dbg !9401
  tail call void @sfc_Command_List(i8* noundef %36) #18, !dbg !9459
  ret void, !dbg !9461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_config() local_unnamed_addr #2 section ".ramTEXT" !dbg !9462 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !9468
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #19, !dbg !9468
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !9466, metadata !DIExpression()), !dbg !9469
  %3 = tail call i32 @sfc_getMaxGPRamSize() #18, !dbg !9470
  store i32 %3, i32* @gSFC_max_data_size, align 4, !dbg !9471
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9472
  %4 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #17, !dbg !9473
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !9474
  %6 = load i8, i8* %5, align 1, !dbg !9474
  %7 = zext i8 %6 to i32, !dbg !9475
  %8 = shl nuw i32 %7, 24, !dbg !9476
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !9477
  %10 = load i8, i8* %9, align 1, !dbg !9477
  %11 = zext i8 %10 to i32, !dbg !9478
  %12 = shl nuw nsw i32 %11, 16, !dbg !9479
  %13 = or i32 %12, %8, !dbg !9480
  call void @llvm.dbg.value(metadata i32 %13, metadata !9465, metadata !DIExpression()), !dbg !9481
  %14 = load i8, i8* %2, align 1, !dbg !9482
  %15 = zext i8 %14 to i32, !dbg !9482
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 385, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.183, i32 0, i32 0), i32 noundef %15, i32 noundef %7, i32 noundef %11, i32 noundef %13) #18, !dbg !9482
  call void @llvm.dbg.value(metadata i32 1, metadata !9464, metadata !DIExpression()), !dbg !9481
  br label %16, !dbg !9483

16:                                               ; preds = %0, %43
  %17 = phi i32 [ 1, %0 ], [ %44, %43 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !9464, metadata !DIExpression()), !dbg !9481
  %18 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, !dbg !9485
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %18, metadata !9467, metadata !DIExpression()), !dbg !9481
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 1, !dbg !9488
  %20 = load i8, i8* %19, align 4, !dbg !9488
  %21 = load i8, i8* %2, align 1, !dbg !9490
  %22 = icmp eq i8 %20, %21, !dbg !9491
  br i1 %22, label %23, label %43, !dbg !9492

23:                                               ; preds = %16
  %24 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 2, !dbg !9493
  %25 = load i32, i32* %24, align 4, !dbg !9493
  %26 = icmp eq i32 %25, %13, !dbg !9494
  br i1 %26, label %27, label %43, !dbg !9495

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %18, i32 0, i32 0, !dbg !9496
  %29 = load i8*, i8** %28, align 4, !dbg !9496
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 390, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5.184, i32 0, i32 0), i8* noundef %29) #18, !dbg !9496
  store %struct.flash_info_t* %18, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9498
  %30 = add nsw i32 %17, -4, !dbg !9499
  %31 = icmp ult i32 %30, 5, !dbg !9499
  br i1 %31, label %41, label %32, !dbg !9501

32:                                               ; preds = %27
  %33 = add nsw i32 %17, -1, !dbg !9502
  %34 = icmp ult i32 %33, 3, !dbg !9502
  br i1 %34, label %41, label %35, !dbg !9504

35:                                               ; preds = %32
  %36 = add nsw i32 %17, -9, !dbg !9505
  %37 = icmp ult i32 %36, 3, !dbg !9505
  br i1 %37, label %41, label %38, !dbg !9507

38:                                               ; preds = %35
  %39 = icmp eq i32 %17, 12, !dbg !9508
  br i1 %39, label %40, label %43, !dbg !9510

40:                                               ; preds = %38
  store i32 32, i32* @support_flash_id, align 4, !dbg !9511
  call void @llvm.dbg.value(metadata i32 %44, metadata !9464, metadata !DIExpression()), !dbg !9481
  br label %66, !dbg !9513

41:                                               ; preds = %35, %32, %27
  %42 = phi i32 [ 194, %27 ], [ 239, %32 ], [ 200, %35 ]
  store i32 %42, i32* @support_flash_id, align 4, !dbg !9514
  br label %43, !dbg !9515

43:                                               ; preds = %41, %16, %23, %38
  %44 = add nuw nsw i32 %17, 1, !dbg !9515
  call void @llvm.dbg.value(metadata i32 %44, metadata !9464, metadata !DIExpression()), !dbg !9481
  %45 = icmp eq i32 %44, 13, !dbg !9516
  br i1 %45, label %46, label %16, !dbg !9483, !llvm.loop !9517

46:                                               ; preds = %43
  %47 = load i32, i32* @support_flash_id, align 4, !dbg !9519
  %48 = icmp eq i32 %47, 255, !dbg !9521
  br i1 %48, label %49, label %66, !dbg !9513

49:                                               ; preds = %46
  %50 = call %struct.flash_info_t* @customer_flash_register() #18, !dbg !9522
  store %struct.flash_info_t* %50, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9524
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !9467, metadata !DIExpression()), !dbg !9481
  %51 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 1, !dbg !9525
  %52 = load i8, i8* %51, align 4, !dbg !9525
  %53 = load i8, i8* %2, align 1, !dbg !9527
  %54 = icmp eq i8 %52, %53, !dbg !9528
  br i1 %54, label %55, label %59, !dbg !9529

55:                                               ; preds = %49
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !9467, metadata !DIExpression()), !dbg !9481
  %56 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 2, !dbg !9530
  %57 = load i32, i32* %56, align 4, !dbg !9530
  %58 = icmp eq i32 %57, %13, !dbg !9531
  br i1 %58, label %71, label %59, !dbg !9532

59:                                               ; preds = %55, %49
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 411, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.166, i32 0, i32 0)) #18, !dbg !9533
  %60 = load i8, i8* %2, align 1, !dbg !9535
  %61 = zext i8 %60 to i32, !dbg !9535
  %62 = load i8, i8* %5, align 1, !dbg !9535
  %63 = zext i8 %62 to i32, !dbg !9535
  %64 = load i8, i8* %9, align 1, !dbg !9535
  %65 = zext i8 %64 to i32, !dbg !9535
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 412, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.167, i32 0, i32 0), i32 noundef %61, i32 noundef %63, i32 noundef %65, i32 noundef %13) #18, !dbg !9535
  br label %66, !dbg !9536

66:                                               ; preds = %40, %59, %46
  %67 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9537
  %68 = icmp eq %struct.flash_info_t* %67, null, !dbg !9537
  br i1 %68, label %69, label %71, !dbg !9539

69:                                               ; preds = %66
  %70 = inttoptr i32 %13 to i8*, !dbg !9540
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 417, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6.185, i32 0, i32 0), i8* noundef %70) #18, !dbg !9540
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9542
  br label %71, !dbg !9543

71:                                               ; preds = %66, %69, %55
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !9481
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #19, !dbg !9544
  ret void, !dbg !9544
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_init(i32 noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !9545 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !9547, metadata !DIExpression()), !dbg !9552
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !9553
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !9553
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !9550, metadata !DIExpression()), !dbg !9554
  tail call void @sfc_Init(i32 noundef %0) #18, !dbg !9555
  %4 = tail call i32 @sfc_getMaxGPRamSize() #18, !dbg !9556
  store i32 %4, i32* @gSFC_max_data_size, align 4, !dbg !9557
  tail call fastcc void @flash_reset() #17, !dbg !9558
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9559
  %5 = call i32 @flash_read_jedec_id(i8* noundef nonnull %3, i32 noundef 3) #17, !dbg !9560
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !9561
  %7 = load i8, i8* %6, align 1, !dbg !9561
  %8 = zext i8 %7 to i32, !dbg !9562
  %9 = shl nuw i32 %8, 24, !dbg !9563
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !9564
  %11 = load i8, i8* %10, align 1, !dbg !9564
  %12 = zext i8 %11 to i32, !dbg !9565
  %13 = shl nuw nsw i32 %12, 16, !dbg !9566
  %14 = or i32 %13, %9, !dbg !9567
  call void @llvm.dbg.value(metadata i32 %14, metadata !9549, metadata !DIExpression()), !dbg !9552
  %15 = load i8, i8* %3, align 1, !dbg !9568
  %16 = zext i8 %15 to i32, !dbg !9568
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 447, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.183, i32 0, i32 0), i32 noundef %16, i32 noundef %8, i32 noundef %12, i32 noundef %14) #18, !dbg !9568
  call void @llvm.dbg.value(metadata i32 1, metadata !9548, metadata !DIExpression()), !dbg !9552
  br label %17, !dbg !9569

17:                                               ; preds = %1, %31
  %18 = phi i32 [ 1, %1 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !9548, metadata !DIExpression()), !dbg !9552
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, !dbg !9571
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %19, metadata !9551, metadata !DIExpression()), !dbg !9552
  %20 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 1, !dbg !9574
  %21 = load i8, i8* %20, align 4, !dbg !9574
  %22 = load i8, i8* %3, align 1, !dbg !9576
  %23 = icmp eq i8 %21, %22, !dbg !9577
  br i1 %23, label %24, label %31, !dbg !9578

24:                                               ; preds = %17
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 2, !dbg !9579
  %26 = load i32, i32* %25, align 4, !dbg !9579
  %27 = icmp eq i32 %26, %14, !dbg !9580
  br i1 %27, label %28, label %31, !dbg !9581

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %19, i32 0, i32 0, !dbg !9582
  %30 = load i8*, i8** %29, align 4, !dbg !9582
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 452, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5.184, i32 0, i32 0), i8* noundef %30) #18, !dbg !9582
  store %struct.flash_info_t* %19, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9584
  br label %31, !dbg !9585

31:                                               ; preds = %17, %24, %28
  %32 = add nuw nsw i32 %18, 1, !dbg !9586
  call void @llvm.dbg.value(metadata i32 %32, metadata !9548, metadata !DIExpression()), !dbg !9552
  %33 = icmp eq i32 %32, 13, !dbg !9587
  br i1 %33, label %34, label %17, !dbg !9569, !llvm.loop !9588

34:                                               ; preds = %31
  %35 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9590
  %36 = icmp eq %struct.flash_info_t* %35, null, !dbg !9590
  br i1 %36, label %37, label %39, !dbg !9592

37:                                               ; preds = %34
  %38 = inttoptr i32 %14 to i8*, !dbg !9593
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6.185, i32 0, i32 0), i8* noundef %38) #18, !dbg !9593
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !9595
  br label %39, !dbg !9596

39:                                               ; preds = %37, %34
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !9597
  ret void, !dbg !9597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_reset() unnamed_addr #2 section ".ramTEXT" !dbg !9598 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_qpimode, i32 0, i32 0)) #18, !dbg !9599
  tail call void @sfc_delay_ms(i32 noundef 1) #18, !dbg !9600
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_spimode, i32 0, i32 0)) #18, !dbg !9601
  tail call void @sfc_delay_ms(i32 noundef 1) #18, !dbg !9602
  ret void, !dbg !9603
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_wait_ready(i32 noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !9604 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !9608, metadata !DIExpression()), !dbg !9611
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !9612
  call void @llvm.dbg.value(metadata i8 0, metadata !9610, metadata !DIExpression()), !dbg !9611
  store i8 0, i8* %2, align 1, !dbg !9613
  call void @llvm.dbg.value(metadata i32 0, metadata !9609, metadata !DIExpression()), !dbg !9611
  %3 = mul i32 %0, 1000
  %4 = add i32 %3, 1000
  call void @llvm.dbg.value(metadata i32 0, metadata !9609, metadata !DIExpression()), !dbg !9611
  %5 = icmp sgt i32 %4, 0, !dbg !9614
  br i1 %5, label %6, label %18, !dbg !9617

6:                                                ; preds = %1, %15
  %7 = phi i32 [ %16, %15 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9609, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.value(metadata i8* %2, metadata !9610, metadata !DIExpression(DW_OP_deref)), !dbg !9611
  %8 = call i32 @flash_read_sr(i8* noundef nonnull %2) #17, !dbg !9618
  %9 = icmp slt i32 %8, 0, !dbg !9621
  br i1 %9, label %18, label %10, !dbg !9622

10:                                               ; preds = %6
  %11 = load i8, i8* %2, align 1, !dbg !9623
  call void @llvm.dbg.value(metadata i8 %11, metadata !9610, metadata !DIExpression()), !dbg !9611
  %12 = and i8 %11, 1, !dbg !9625
  %13 = icmp eq i8 %12, 0, !dbg !9625
  br i1 %13, label %14, label %15, !dbg !9626

14:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !9627
  ret i32 0, !dbg !9628

15:                                               ; preds = %10
  call void @sfc_delay_ms(i32 noundef 1) #18, !dbg !9630
  %16 = add nuw nsw i32 %7, 1, !dbg !9631
  call void @llvm.dbg.value(metadata i32 %16, metadata !9609, metadata !DIExpression()), !dbg !9611
  %17 = icmp eq i32 %16, %4, !dbg !9614
  br i1 %17, label %18, label %6, !dbg !9617, !llvm.loop !9632

18:                                               ; preds = %15, %6, %1
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.182, i32 0, i32 0), i32 noundef 491, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.flash_wait_ready, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.190, i32 0, i32 0)) #20, !dbg !9634
  unreachable, !dbg !9634
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr(i8* noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !9635 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9639, metadata !DIExpression()), !dbg !9642
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !9643
  call void @llvm.dbg.value(metadata i8 5, metadata !9641, metadata !DIExpression()), !dbg !9642
  store i8 5, i8* %2, align 1, !dbg !9644
  call void @llvm.dbg.value(metadata i8* %2, metadata !9641, metadata !DIExpression(DW_OP_deref)), !dbg !9642
  %3 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #18, !dbg !9645
  call void @llvm.dbg.value(metadata i32 %3, metadata !9640, metadata !DIExpression()), !dbg !9642
  %4 = icmp ne i32 %3, 1, !dbg !9646
  %5 = sext i1 %4 to i32, !dbg !9642
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !9648
  ret i32 %5, !dbg !9648
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".ramTEXT" !dbg !9649 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9651, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32 %1, metadata !9652, metadata !DIExpression()), !dbg !9655
  %4 = bitcast i32* %3 to i8*, !dbg !9656
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !9656
  call void @llvm.dbg.value(metadata i32 0, metadata !9653, metadata !DIExpression()), !dbg !9655
  store i32 144, i32* %3, align 4, !dbg !9657
  call void @llvm.dbg.value(metadata i8 undef, metadata !9653, metadata !DIExpression()), !dbg !9655
  call void @llvm.dbg.value(metadata i32* %3, metadata !9653, metadata !DIExpression(DW_OP_deref)), !dbg !9655
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #18, !dbg !9658
  call void @llvm.dbg.value(metadata i32 %5, metadata !9654, metadata !DIExpression()), !dbg !9655
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !9659
  ret i32 %5, !dbg !9660
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id_quad(i8* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".ramTEXT" !dbg !9661 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9663, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.value(metadata i32 %1, metadata !9664, metadata !DIExpression()), !dbg !9667
  %4 = bitcast i32* %3 to i8*, !dbg !9668
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !9668
  call void @llvm.dbg.value(metadata i32 0, metadata !9665, metadata !DIExpression()), !dbg !9667
  store i32 144, i32* %3, align 4, !dbg !9669
  call void @llvm.dbg.value(metadata i8 undef, metadata !9665, metadata !DIExpression()), !dbg !9667
  call void @llvm.dbg.value(metadata i32* %3, metadata !9665, metadata !DIExpression(DW_OP_deref)), !dbg !9667
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #18, !dbg !9670
  call void @llvm.dbg.value(metadata i32 %5, metadata !9666, metadata !DIExpression()), !dbg !9667
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !9671
  ret i32 %5, !dbg !9672
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 section ".ramTEXT" !dbg !9673 {
  %4 = alloca [4 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9677, metadata !DIExpression()), !dbg !9682
  call void @llvm.dbg.value(metadata i32 %1, metadata !9678, metadata !DIExpression()), !dbg !9682
  call void @llvm.dbg.value(metadata i32 %2, metadata !9679, metadata !DIExpression()), !dbg !9682
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 0, !dbg !9683
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !9683
  call void @llvm.dbg.declare(metadata [4 x i8]* %4, metadata !9680, metadata !DIExpression()), !dbg !9684
  %6 = icmp eq i32 %2, 0, !dbg !9685
  br i1 %6, label %18, label %7, !dbg !9687

7:                                                ; preds = %3
  %8 = tail call i32 @flash_wait_ready(i32 noundef 1) #17, !dbg !9688
  store i32 1, i32* @sf_drvier_status, align 4, !dbg !9690
  store i8 3, i8* %5, align 1, !dbg !9691
  %9 = lshr i32 %1, 16, !dbg !9692
  %10 = trunc i32 %9 to i8, !dbg !9693
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 1, !dbg !9694
  store i8 %10, i8* %11, align 1, !dbg !9695
  %12 = lshr i32 %1, 8, !dbg !9696
  %13 = trunc i32 %12 to i8, !dbg !9697
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 2, !dbg !9698
  store i8 %13, i8* %14, align 1, !dbg !9699
  %15 = trunc i32 %1 to i8, !dbg !9700
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 3, !dbg !9701
  store i8 %15, i8* %16, align 1, !dbg !9702
  %17 = call i32 @sfc_read(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %0, i32 noundef %2) #18, !dbg !9703
  call void @llvm.dbg.value(metadata i32 %17, metadata !9681, metadata !DIExpression()), !dbg !9682
  br label %18, !dbg !9704

18:                                               ; preds = %3, %7
  %19 = phi i32 [ %17, %7 ], [ 0, %3 ], !dbg !9682
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !9705
  ret i32 %19, !dbg !9705
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_fast_read(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 section ".ramTEXT" !dbg !9706 {
  %5 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9710, metadata !DIExpression()), !dbg !9719
  call void @llvm.dbg.value(metadata i32 %1, metadata !9711, metadata !DIExpression()), !dbg !9719
  call void @llvm.dbg.value(metadata i32 %2, metadata !9712, metadata !DIExpression()), !dbg !9719
  call void @llvm.dbg.value(metadata i32 %3, metadata !9713, metadata !DIExpression()), !dbg !9719
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0, !dbg !9720
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #19, !dbg !9720
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !9714, metadata !DIExpression()), !dbg !9721
  %7 = icmp eq i32 %2, 0, !dbg !9722
  br i1 %7, label %33, label %8, !dbg !9724

8:                                                ; preds = %4
  %9 = tail call i32 @flash_wait_ready(i32 noundef 1) #17, !dbg !9725
  store i8 11, i8* %6, align 1, !dbg !9727
  %10 = lshr i32 %1, 16, !dbg !9728
  %11 = trunc i32 %10 to i8, !dbg !9729
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 1, !dbg !9730
  store i8 %11, i8* %12, align 1, !dbg !9731
  %13 = lshr i32 %1, 8, !dbg !9732
  %14 = trunc i32 %13 to i8, !dbg !9733
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 2, !dbg !9734
  store i8 %14, i8* %15, align 1, !dbg !9735
  %16 = trunc i32 %1 to i8, !dbg !9736
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 3, !dbg !9737
  store i8 %16, i8* %17, align 1, !dbg !9738
  call void @llvm.dbg.value(metadata i32 4, metadata !9716, metadata !DIExpression()), !dbg !9719
  call void @llvm.dbg.value(metadata i32 0, metadata !9718, metadata !DIExpression()), !dbg !9719
  %18 = icmp sgt i32 %3, 0, !dbg !9739
  br i1 %18, label %19, label %30, !dbg !9742

19:                                               ; preds = %8
  %20 = add nsw i32 %3, -1, !dbg !9742
  %21 = call i32 @llvm.umin.i32(i32 %20, i32 27), !dbg !9742
  br label %22, !dbg !9742

22:                                               ; preds = %19, %22
  %23 = phi i32 [ %26, %22 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !9718, metadata !DIExpression()), !dbg !9719
  call void @llvm.dbg.value(metadata i32 undef, metadata !9716, metadata !DIExpression()), !dbg !9719
  %24 = add nuw nsw i32 %23, 4, !dbg !9743
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 %24, !dbg !9745
  store i8 0, i8* %25, align 1, !dbg !9746
  call void @llvm.dbg.value(metadata i32 undef, metadata !9716, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9719
  %26 = add nuw nsw i32 %23, 1, !dbg !9747
  call void @llvm.dbg.value(metadata i32 %26, metadata !9718, metadata !DIExpression()), !dbg !9719
  %27 = icmp eq i32 %23, %21, !dbg !9748
  br i1 %27, label %28, label %22, !dbg !9742, !llvm.loop !9749

28:                                               ; preds = %22
  %29 = add nuw nsw i32 %21, 5, !dbg !9742
  br label %30, !dbg !9751

30:                                               ; preds = %28, %8
  %31 = phi i32 [ 4, %8 ], [ %29, %28 ], !dbg !9719
  %32 = call i32 @sfc_read(i8* noundef nonnull %6, i32 noundef %31, i8* noundef %0, i32 noundef %2) #18, !dbg !9751
  call void @llvm.dbg.value(metadata i32 %32, metadata !9717, metadata !DIExpression()), !dbg !9719
  br label %33, !dbg !9752

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9719
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #19, !dbg !9753
  ret i32 %34, !dbg !9753
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr2(i8* noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !9754 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9756, metadata !DIExpression()), !dbg !9759
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !9760
  call void @llvm.dbg.value(metadata i8 53, metadata !9758, metadata !DIExpression()), !dbg !9759
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !9761
  switch i32 %3, label %9 [
    i32 239, label %4
    i32 200, label %4
    i32 194, label %5
    i32 32, label %6
    i32 255, label %7
  ], !dbg !9763

4:                                                ; preds = %1, %1
  call void @llvm.dbg.value(metadata i8 53, metadata !9758, metadata !DIExpression()), !dbg !9759
  store i8 53, i8* %2, align 1, !dbg !9764
  br label %10, !dbg !9766

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 43, metadata !9758, metadata !DIExpression()), !dbg !9759
  store i8 43, i8* %2, align 1, !dbg !9767
  br label %10, !dbg !9770

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 112, metadata !9758, metadata !DIExpression()), !dbg !9759
  store i8 112, i8* %2, align 1, !dbg !9771
  br label %10, !dbg !9774

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @customer_flash_read_SR2_comand() #18, !dbg !9775
  call void @llvm.dbg.value(metadata i8 %8, metadata !9758, metadata !DIExpression()), !dbg !9759
  store i8 %8, i8* %2, align 1, !dbg !9778
  br label %10, !dbg !9779

9:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.flash_read_sr2, i32 0, i32 0), i32 noundef 655, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8.197, i32 0, i32 0)) #18, !dbg !9780
  call void @llvm.dbg.value(metadata i8 5, metadata !9758, metadata !DIExpression()), !dbg !9759
  store i8 5, i8* %2, align 1, !dbg !9782
  br label %10

10:                                               ; preds = %5, %7, %9, %6, %4
  call void @llvm.dbg.value(metadata i8* %2, metadata !9758, metadata !DIExpression(DW_OP_deref)), !dbg !9759
  %11 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #18, !dbg !9783
  call void @llvm.dbg.value(metadata i32 %11, metadata !9757, metadata !DIExpression()), !dbg !9759
  %12 = icmp ne i32 %11, 1, !dbg !9784
  %13 = sext i1 %12 to i32, !dbg !9759
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !9786
  ret i32 %13, !dbg !9786
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_unprotect() local_unnamed_addr #2 section ".ramTEXT" !dbg !9787 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !9790
  call void @llvm.dbg.value(metadata i8 0, metadata !9789, metadata !DIExpression()), !dbg !9791
  store i8 0, i8* %1, align 1, !dbg !9792
  call void @llvm.dbg.value(metadata i8* %1, metadata !9789, metadata !DIExpression(DW_OP_deref)), !dbg !9791
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #17, !dbg !9793
  %3 = icmp slt i32 %2, 0, !dbg !9795
  br i1 %3, label %9, label %4, !dbg !9796

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !9797
  call void @llvm.dbg.value(metadata i8 %5, metadata !9789, metadata !DIExpression()), !dbg !9791
  %6 = and i8 %5, 28, !dbg !9799
  %7 = icmp eq i8 %6, 0, !dbg !9800
  br i1 %7, label %9, label %8, !dbg !9801

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 0, metadata !9789, metadata !DIExpression()), !dbg !9791
  store i8 0, i8* %1, align 1, !dbg !9802
  call void @llvm.dbg.value(metadata i8* %1, metadata !9789, metadata !DIExpression(DW_OP_deref)), !dbg !9791
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #17, !dbg !9804
  br label %9, !dbg !9805

9:                                                ; preds = %4, %8, %0
  %10 = phi i32 [ -1, %0 ], [ 0, %8 ], [ 0, %4 ], !dbg !9791
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !9806
  ret i32 %10, !dbg !9806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_write_sr(i8* noundef %0) unnamed_addr #2 section ".ramTEXT" !dbg !9807 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9809, metadata !DIExpression()), !dbg !9812
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19, !dbg !9813
  call void @llvm.dbg.value(metadata i8 1, metadata !9811, metadata !DIExpression()), !dbg !9812
  store i8 1, i8* %2, align 1, !dbg !9814
  call void @llvm.dbg.value(metadata i8* %2, metadata !9811, metadata !DIExpression(DW_OP_deref)), !dbg !9812
  %3 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #18, !dbg !9815
  call void @llvm.dbg.value(metadata i32 %3, metadata !9810, metadata !DIExpression()), !dbg !9812
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19, !dbg !9816
  ret void, !dbg !9816
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_protect() local_unnamed_addr #2 section ".ramTEXT" !dbg !9817 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !9820
  call void @llvm.dbg.value(metadata i8 0, metadata !9819, metadata !DIExpression()), !dbg !9821
  store i8 0, i8* %1, align 1, !dbg !9822
  call void @llvm.dbg.value(metadata i8* %1, metadata !9819, metadata !DIExpression(DW_OP_deref)), !dbg !9821
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #17, !dbg !9823
  %3 = icmp slt i32 %2, 0, !dbg !9825
  br i1 %3, label %7, label %4, !dbg !9826

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !9827
  call void @llvm.dbg.value(metadata i8 %5, metadata !9819, metadata !DIExpression()), !dbg !9821
  %6 = or i8 %5, 28, !dbg !9827
  call void @llvm.dbg.value(metadata i8 %6, metadata !9819, metadata !DIExpression()), !dbg !9821
  store i8 %6, i8* %1, align 1, !dbg !9827
  call void @llvm.dbg.value(metadata i8* %1, metadata !9819, metadata !DIExpression(DW_OP_deref)), !dbg !9821
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #17, !dbg !9828
  br label %7, !dbg !9829

7:                                                ; preds = %0, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %0 ], !dbg !9821
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !9830
  ret i32 %8, !dbg !9830
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_enable() local_unnamed_addr #2 section ".ramTEXT" !dbg !9831 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !9834
  call void @llvm.dbg.value(metadata i8 6, metadata !9833, metadata !DIExpression()), !dbg !9835
  store i8 6, i8* %1, align 1, !dbg !9836
  call void @llvm.dbg.value(metadata i8* %1, metadata !9833, metadata !DIExpression(DW_OP_deref)), !dbg !9835
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #18, !dbg !9837
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !9838
  ret i32 %2, !dbg !9839
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_disable() local_unnamed_addr #2 section ".ramTEXT" !dbg !9840 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #19, !dbg !9843
  call void @llvm.dbg.value(metadata i8 4, metadata !9842, metadata !DIExpression()), !dbg !9844
  store i8 4, i8* %1, align 1, !dbg !9845
  call void @llvm.dbg.value(metadata i8* %1, metadata !9842, metadata !DIExpression(DW_OP_deref)), !dbg !9844
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #18, !dbg !9846
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #19, !dbg !9847
  ret i32 %2, !dbg !9848
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector(i32 noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !9849 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !9853, metadata !DIExpression()), !dbg !9857
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !9858
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !9858
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !9854, metadata !DIExpression()), !dbg !9859
  call void @llvm.dbg.value(metadata i32 0, metadata !9856, metadata !DIExpression()), !dbg !9857
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #17, !dbg !9860
  store i32 8, i32* @sf_drvier_status, align 4, !dbg !9862
  br label %5, !dbg !9863

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !9864
  call void @llvm.dbg.value(metadata i32 %6, metadata !9856, metadata !DIExpression()), !dbg !9857
  %7 = icmp eq i32 %6, -121, !dbg !9866
  br i1 %7, label %5, label %8, !dbg !9867, !llvm.loop !9868

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !9870
  call void @llvm.dbg.value(metadata i32 %9, metadata !9855, metadata !DIExpression()), !dbg !9857
  store i8 -40, i8* %3, align 1, !dbg !9871
  %10 = lshr i32 %0, 16, !dbg !9872
  %11 = trunc i32 %10 to i8, !dbg !9873
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !9874
  store i8 %11, i8* %12, align 1, !dbg !9875
  %13 = lshr i32 %0, 8, !dbg !9876
  %14 = trunc i32 %13 to i8, !dbg !9877
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !9878
  store i8 %14, i8* %15, align 1, !dbg !9879
  %16 = trunc i32 %0 to i8, !dbg !9880
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !9881
  store i8 %16, i8* %17, align 1, !dbg !9882
  tail call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !9883
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #18, !dbg !9884
  call void @restore_interrupt_mask(i32 noundef %9) #18, !dbg !9885
  br label %19, !dbg !9886

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %20, metadata !9856, metadata !DIExpression()), !dbg !9857
  %21 = icmp eq i32 %20, -121, !dbg !9889
  br i1 %21, label %19, label %22, !dbg !9890, !llvm.loop !9891

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #17, !dbg !9893
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !9894
  ret i32 0, !dbg !9894
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector_32k(i32 noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !9895 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !9897, metadata !DIExpression()), !dbg !9901
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !9902
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !9902
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !9898, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.value(metadata i32 0, metadata !9900, metadata !DIExpression()), !dbg !9901
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #17, !dbg !9904
  store i32 7, i32* @sf_drvier_status, align 4, !dbg !9906
  br label %5, !dbg !9907

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !9908
  call void @llvm.dbg.value(metadata i32 %6, metadata !9900, metadata !DIExpression()), !dbg !9901
  %7 = icmp eq i32 %6, -121, !dbg !9910
  br i1 %7, label %5, label %8, !dbg !9911, !llvm.loop !9912

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !9914
  call void @llvm.dbg.value(metadata i32 %9, metadata !9899, metadata !DIExpression()), !dbg !9901
  store i8 82, i8* %3, align 1, !dbg !9915
  %10 = lshr i32 %0, 16, !dbg !9916
  %11 = trunc i32 %10 to i8, !dbg !9917
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !9918
  store i8 %11, i8* %12, align 1, !dbg !9919
  %13 = lshr i32 %0, 8, !dbg !9920
  %14 = trunc i32 %13 to i8, !dbg !9921
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !9922
  store i8 %14, i8* %15, align 1, !dbg !9923
  %16 = trunc i32 %0 to i8, !dbg !9924
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !9925
  store i8 %16, i8* %17, align 1, !dbg !9926
  tail call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !9927
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #18, !dbg !9928
  br label %19, !dbg !9929

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !9930
  call void @llvm.dbg.value(metadata i32 %20, metadata !9900, metadata !DIExpression()), !dbg !9901
  %21 = icmp eq i32 %20, -121, !dbg !9932
  br i1 %21, label %19, label %22, !dbg !9933, !llvm.loop !9934

22:                                               ; preds = %19
  call void @restore_interrupt_mask(i32 noundef %9) #18, !dbg !9936
  %23 = call i32 @flash_write_disable() #17, !dbg !9937
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !9938
  ret i32 0, !dbg !9938
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_page(i32 noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !9939 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !9941, metadata !DIExpression()), !dbg !9945
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !9946
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !9946
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !9942, metadata !DIExpression()), !dbg !9947
  call void @llvm.dbg.value(metadata i32 0, metadata !9944, metadata !DIExpression()), !dbg !9945
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #17, !dbg !9948
  store i32 6, i32* @sf_drvier_status, align 4, !dbg !9950
  br label %5, !dbg !9951

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %6, metadata !9944, metadata !DIExpression()), !dbg !9945
  %7 = icmp eq i32 %6, -121, !dbg !9954
  br i1 %7, label %5, label %8, !dbg !9955, !llvm.loop !9956

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !9958
  call void @llvm.dbg.value(metadata i32 %9, metadata !9943, metadata !DIExpression()), !dbg !9945
  store i8 32, i8* %3, align 1, !dbg !9959
  %10 = lshr i32 %0, 16, !dbg !9960
  %11 = trunc i32 %10 to i8, !dbg !9961
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !9962
  store i8 %11, i8* %12, align 1, !dbg !9963
  %13 = lshr i32 %0, 8, !dbg !9964
  %14 = trunc i32 %13 to i8, !dbg !9965
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !9966
  store i8 %14, i8* %15, align 1, !dbg !9967
  %16 = trunc i32 %0 to i8, !dbg !9968
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !9969
  store i8 %16, i8* %17, align 1, !dbg !9970
  tail call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !9971
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #18, !dbg !9972
  call void @restore_interrupt_mask(i32 noundef %9) #18, !dbg !9973
  br label %19, !dbg !9974

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !9975
  call void @llvm.dbg.value(metadata i32 %20, metadata !9944, metadata !DIExpression()), !dbg !9945
  %21 = icmp eq i32 %20, -121, !dbg !9977
  br i1 %21, label %19, label %22, !dbg !9978, !llvm.loop !9979

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #17, !dbg !9981
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !9982
  ret i32 0, !dbg !9982
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_chip() local_unnamed_addr #2 section ".ramTEXT" !dbg !9983 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !9986
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #19, !dbg !9986
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !9985, metadata !DIExpression()), !dbg !9987
  %3 = tail call i32 @flash_wait_ready(i32 noundef 3) #17, !dbg !9988
  store i32 9, i32* @sf_drvier_status, align 4, !dbg !9990
  %4 = tail call i32 @flash_write_enable() #17, !dbg !9991
  %5 = tail call i32 @flash_unprotect() #17, !dbg !9992
  store i8 96, i8* %2, align 1, !dbg !9993
  %6 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef null, i32 noundef 0) #18, !dbg !9994
  %7 = call i32 @flash_wait_ready(i32 noundef 30000) #17, !dbg !9995
  %8 = call i32 @flash_write_disable() #17, !dbg !9997
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !9998
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #19, !dbg !9999
  ret i32 0, !dbg !9999
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".ramTEXT" !dbg !10000 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10004, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i32 %1, metadata !10005, metadata !DIExpression()), !dbg !10006
  %3 = icmp sgt i32 %1, 0
  call void @llvm.dbg.value(metadata i32 %1, metadata !10005, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i32 %0, metadata !10004, metadata !DIExpression()), !dbg !10006
  br i1 %3, label %4, label %14, !dbg !10007

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %12, %4 ], [ %1, %2 ]
  %6 = phi i32 [ %11, %4 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !10005, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.value(metadata i32 %6, metadata !10004, metadata !DIExpression()), !dbg !10006
  %7 = tail call i32 @flash_erase_page(i32 noundef %6) #17, !dbg !10008
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !10011
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !10012
  %10 = load i32, i32* %9, align 4, !dbg !10012
  %11 = add i32 %10, %6, !dbg !10013
  call void @llvm.dbg.value(metadata i32 %11, metadata !10004, metadata !DIExpression()), !dbg !10006
  %12 = sub i32 %5, %10, !dbg !10014
  call void @llvm.dbg.value(metadata i32 %12, metadata !10005, metadata !DIExpression()), !dbg !10006
  %13 = icmp sgt i32 %12, 0, !dbg !10015
  br i1 %13, label %4, label %14, !dbg !10016, !llvm.loop !10017

14:                                               ; preds = %4, %2
  ret i32 0, !dbg !10019
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 section ".ramTEXT" !dbg !10020 {
  %4 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !10024, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %1, metadata !10025, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %2, metadata !10026, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 0, metadata !10029, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 0, metadata !10030, metadata !DIExpression()), !dbg !10038
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 0, !dbg !10039
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %5) #19, !dbg !10039
  call void @llvm.dbg.declare(metadata [5 x i8]* %4, metadata !10032, metadata !DIExpression()), !dbg !10040
  call void @llvm.dbg.value(metadata i32 %1, metadata !10035, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i8* %0, metadata !10036, metadata !DIExpression()), !dbg !10038
  %6 = icmp eq i32 %2, 0, !dbg !10041
  br i1 %6, label %86, label %7, !dbg !10043

7:                                                ; preds = %3
  %8 = add i32 %2, %1, !dbg !10044
  %9 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !10046
  %10 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 3, !dbg !10047
  %11 = load i32, i32* %10, align 4, !dbg !10047
  %12 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 4, !dbg !10048
  %13 = load i32, i32* %12, align 4, !dbg !10048
  %14 = mul i32 %13, %11, !dbg !10049
  %15 = icmp ugt i32 %8, %14, !dbg !10050
  br i1 %15, label %86, label %16, !dbg !10051

16:                                               ; preds = %7
  %17 = tail call i32 @flash_wait_ready(i32 noundef 2) #17, !dbg !10052
  br label %18

18:                                               ; preds = %16, %18
  %19 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !10054
  call void @llvm.dbg.value(metadata i32 %19, metadata !10033, metadata !DIExpression()), !dbg !10038
  %20 = icmp eq i32 %19, -121, !dbg !10056
  br i1 %20, label %18, label %21, !dbg !10057, !llvm.loop !10058

21:                                               ; preds = %18
  store i32 3, i32* @sf_drvier_status, align 4, !dbg !10061
  %22 = tail call i32 @sfc_GetDirectMode() #18, !dbg !10062
  call void @llvm.dbg.value(metadata i32 %22, metadata !10031, metadata !DIExpression()), !dbg !10038
  %23 = icmp eq i32 %22, 2, !dbg !10063
  br i1 %23, label %24, label %29, !dbg !10065

24:                                               ; preds = %21
  %25 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !10066
  %26 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %25, i32 0, i32 5, !dbg !10067
  %27 = load i8, i8* %26, align 4, !dbg !10067
  %28 = icmp eq i8 %27, 0, !dbg !10066
  br i1 %28, label %29, label %30, !dbg !10068

29:                                               ; preds = %24, %21
  br label %30

30:                                               ; preds = %24, %29
  %31 = phi i8 [ 2, %29 ], [ %27, %24 ], !dbg !10069
  store i8 %31, i8* %5, align 1, !dbg !10069
  call void @llvm.dbg.value(metadata i32 undef, metadata !10027, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i8* %0, metadata !10036, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %1, metadata !10035, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %2, metadata !10026, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 0, metadata !10030, metadata !DIExpression()), !dbg !10038
  %32 = icmp sgt i32 %2, 0, !dbg !10070
  br i1 %32, label %33, label %41, !dbg !10071

33:                                               ; preds = %30
  %34 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !10072
  %35 = urem i32 %1, %34, !dbg !10073
  call void @llvm.dbg.value(metadata i32 %35, metadata !10027, metadata !DIExpression()), !dbg !10038
  %36 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 1
  %37 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 2
  %38 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 3
  %39 = add i32 %1, -1
  %40 = getelementptr inbounds i8, i8* %0, i32 -1
  br label %43, !dbg !10071

41:                                               ; preds = %73, %30
  %42 = phi i32 [ 0, %30 ], [ %74, %73 ], !dbg !10038
  br label %81, !dbg !10074

43:                                               ; preds = %77, %33
  %44 = phi i32 [ %34, %33 ], [ %80, %77 ], !dbg !10075
  %45 = phi i8* [ %0, %33 ], [ %78, %77 ]
  %46 = phi i32 [ %1, %33 ], [ %79, %77 ]
  %47 = phi i32 [ %2, %33 ], [ %75, %77 ]
  %48 = phi i32 [ %35, %33 ], [ 0, %77 ]
  %49 = phi i32 [ 0, %33 ], [ %74, %77 ]
  call void @llvm.dbg.value(metadata i8* %45, metadata !10036, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %46, metadata !10035, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %47, metadata !10026, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %48, metadata !10027, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 %49, metadata !10030, metadata !DIExpression()), !dbg !10038
  %50 = sub i32 %44, %48, !dbg !10075
  %51 = icmp ugt i32 %47, %50, !dbg !10075
  %52 = select i1 %51, i32 %50, i32 %47, !dbg !10075
  call void @llvm.dbg.value(metadata i32 %52, metadata !10028, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 0, metadata !10027, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i8* %45, metadata !10037, metadata !DIExpression()), !dbg !10038
  %53 = lshr i32 %46, 16, !dbg !10077
  %54 = trunc i32 %53 to i8, !dbg !10078
  store i8 %54, i8* %36, align 1, !dbg !10079
  %55 = lshr i32 %46, 8, !dbg !10080
  %56 = trunc i32 %55 to i8, !dbg !10081
  store i8 %56, i8* %37, align 1, !dbg !10082
  %57 = trunc i32 %46 to i8, !dbg !10083
  store i8 %57, i8* %38, align 1, !dbg !10084
  %58 = call i32 @flash_wait_ready(i32 noundef 3) #17, !dbg !10085
  %59 = call i32 @flash_write_enable() #17, !dbg !10087
  %60 = call i32 @save_and_set_interrupt_mask() #18, !dbg !10088
  call void @llvm.dbg.value(metadata i32 %60, metadata !10034, metadata !DIExpression()), !dbg !10038
  call void @SF_DAL_FLAG_BUSY_SET() #18, !dbg !10089
  %61 = call i32 @sfc_write(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %45, i32 noundef %52) #18, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %61, metadata !10029, metadata !DIExpression()), !dbg !10038
  call void @restore_interrupt_mask(i32 noundef %60) #18, !dbg !10091
  br label %62, !dbg !10092

62:                                               ; preds = %62, %43
  %63 = load i8, i8* %40, align 1, !dbg !10093
  %64 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef null, i32 noundef %39, i8 noundef zeroext %63) #18, !dbg !10095
  call void @llvm.dbg.value(metadata i32 %64, metadata !10033, metadata !DIExpression()), !dbg !10038
  %65 = icmp eq i32 %64, 0, !dbg !10096
  br i1 %65, label %62, label %66, !dbg !10097, !llvm.loop !10098

66:                                               ; preds = %62
  %67 = icmp sgt i32 %61, 0, !dbg !10100
  br i1 %67, label %68, label %73, !dbg !10102

68:                                               ; preds = %66
  %69 = add nsw i32 %61, %49, !dbg !10103
  call void @llvm.dbg.value(metadata i32 %69, metadata !10030, metadata !DIExpression()), !dbg !10038
  %70 = icmp ult i32 %61, %52, !dbg !10105
  br i1 %70, label %71, label %73, !dbg !10107

71:                                               ; preds = %68
  %72 = call i32 @flash_write_disable() #17, !dbg !10108
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.182, i32 0, i32 0), i32 noundef 942, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.flash_write, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7.190, i32 0, i32 0)) #20, !dbg !10110
  unreachable, !dbg !10110

73:                                               ; preds = %68, %66
  %74 = phi i32 [ %69, %68 ], [ %49, %66 ], !dbg !10038
  call void @llvm.dbg.value(metadata i32 %74, metadata !10030, metadata !DIExpression()), !dbg !10038
  %75 = sub i32 %47, %52, !dbg !10111
  call void @llvm.dbg.value(metadata i32 %75, metadata !10026, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata !DIArgList(i32 %52, i32 %46), metadata !10035, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10038
  call void @llvm.dbg.value(metadata !DIArgList(i8* %45, i32 %52), metadata !10036, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !10038
  call void @llvm.dbg.value(metadata i32 0, metadata !10027, metadata !DIExpression()), !dbg !10038
  %76 = icmp sgt i32 %75, 0, !dbg !10070
  br i1 %76, label %77, label %41, !dbg !10071, !llvm.loop !10112

77:                                               ; preds = %73
  %78 = getelementptr inbounds i8, i8* %45, i32 %52, !dbg !10114
  call void @llvm.dbg.value(metadata i8* %78, metadata !10036, metadata !DIExpression()), !dbg !10038
  %79 = add i32 %52, %46, !dbg !10115
  call void @llvm.dbg.value(metadata i32 %79, metadata !10035, metadata !DIExpression()), !dbg !10038
  %80 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !10075
  br label %43, !dbg !10071

81:                                               ; preds = %41, %81
  %82 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #18, !dbg !10116
  call void @llvm.dbg.value(metadata i32 %82, metadata !10033, metadata !DIExpression()), !dbg !10038
  %83 = icmp eq i32 %82, -121, !dbg !10118
  br i1 %83, label %81, label %84, !dbg !10119, !llvm.loop !10120

84:                                               ; preds = %81
  %85 = call i32 @flash_write_disable() #17, !dbg !10122
  br label %86, !dbg !10123

86:                                               ; preds = %7, %3, %84
  %87 = phi i32 [ %42, %84 ], [ 0, %3 ], [ -1, %7 ], !dbg !10038
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %5) #19, !dbg !10124
  ret i32 %87, !dbg !10124
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write_security_crc(i32 noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !10125 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !10127, metadata !DIExpression()), !dbg !10131
  call void @llvm.dbg.value(metadata i32 4, metadata !10128, metadata !DIExpression()), !dbg !10131
  call void @llvm.dbg.value(metadata i32 0, metadata !10129, metadata !DIExpression()), !dbg !10131
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !10132
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #19, !dbg !10132
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !10130, metadata !DIExpression()), !dbg !10133
  %4 = and i32 %0, 4095, !dbg !10134
  %5 = icmp eq i32 %4, 0, !dbg !10134
  br i1 %5, label %6, label %29, !dbg !10136

6:                                                ; preds = %1
  %7 = add nuw i32 %0, 4, !dbg !10137
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !10139
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !10140
  %10 = load i32, i32* %9, align 4, !dbg !10140
  %11 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 4, !dbg !10141
  %12 = load i32, i32* %11, align 4, !dbg !10141
  %13 = mul i32 %12, %10, !dbg !10142
  %14 = icmp ugt i32 %7, %13, !dbg !10143
  br i1 %14, label %29, label %15, !dbg !10144

15:                                               ; preds = %6
  store i32 5, i32* @sf_drvier_status, align 4, !dbg !10145
  %16 = tail call i32 @flash_wait_ready(i32 noundef 2) #17, !dbg !10146
  %17 = tail call i32 @flash_erase_page(i32 noundef %0) #17, !dbg !10148
  store i8 2, i8* %3, align 1, !dbg !10149
  %18 = lshr i32 %0, 16, !dbg !10150
  %19 = trunc i32 %18 to i8, !dbg !10151
  %20 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !10152
  store i8 %19, i8* %20, align 1, !dbg !10153
  %21 = lshr i32 %0, 8, !dbg !10154
  %22 = trunc i32 %21 to i8, !dbg !10155
  %23 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !10156
  store i8 %22, i8* %23, align 1, !dbg !10157
  %24 = trunc i32 %0 to i8, !dbg !10158
  %25 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !10159
  store i8 %24, i8* %25, align 1, !dbg !10160
  %26 = tail call i32 @flash_write_enable() #17, !dbg !10161
  %27 = tail call i32 @flash_unprotect() #17, !dbg !10162
  %28 = call i32 @sfc_security_write_crc(i8* noundef nonnull %3, i32 noundef 4) #18, !dbg !10163
  call void @llvm.dbg.value(metadata i32 %28, metadata !10129, metadata !DIExpression()), !dbg !10131
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !10164
  br label %29, !dbg !10165

29:                                               ; preds = %6, %1, %15
  %30 = phi i32 [ %28, %15 ], [ -1, %1 ], [ -1, %6 ], !dbg !10131
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #19, !dbg !10166
  ret i32 %30, !dbg !10166
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 section ".ramTEXT" !dbg !10167 {
  %4 = alloca [4096 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !10169, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 %1, metadata !10170, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 %2, metadata !10171, metadata !DIExpression()), !dbg !10186
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 0, !dbg !10187
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %5) #19, !dbg !10187
  call void @llvm.dbg.declare(metadata [4096 x i8]* %4, metadata !10172, metadata !DIExpression()), !dbg !10188
  call void @llvm.dbg.value(metadata i32 4096, metadata !10176, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 4095, metadata !10177, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i8* %0, metadata !10169, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 %1, metadata !10170, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 %2, metadata !10171, metadata !DIExpression()), !dbg !10186
  %6 = icmp sgt i32 %2, 0, !dbg !10189
  br i1 %6, label %7, label %43, !dbg !10190

7:                                                ; preds = %3, %37
  %8 = phi i8* [ %40, %37 ], [ %0, %3 ]
  %9 = phi i32 [ %41, %37 ], [ %1, %3 ]
  %10 = phi i32 [ %38, %37 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !10169, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 %9, metadata !10170, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 %10, metadata !10171, metadata !DIExpression()), !dbg !10186
  %11 = and i32 %9, 4095, !dbg !10191
  %12 = icmp ne i32 %11, 0, !dbg !10191
  %13 = icmp ult i32 %10, 4096
  %14 = select i1 %12, i1 true, i1 %13, !dbg !10192
  br i1 %14, label %15, label %30, !dbg !10192

15:                                               ; preds = %7
  %16 = and i32 %9, -4096, !dbg !10193
  call void @llvm.dbg.value(metadata i32 %16, metadata !10182, metadata !DIExpression()), !dbg !10194
  %17 = call i32 @flash_direct_read_nocache(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #17, !dbg !10195
  %18 = icmp eq i32 %17, 4096, !dbg !10197
  br i1 %18, label %19, label %45, !dbg !10198

19:                                               ; preds = %15
  store i32 4, i32* @sf_drvier_status, align 4, !dbg !10199
  call void @llvm.dbg.value(metadata i32 %11, metadata !10178, metadata !DIExpression()), !dbg !10194
  %20 = sub nuw nsw i32 4096, %11, !dbg !10200
  %21 = icmp ugt i32 %10, %20, !dbg !10200
  %22 = select i1 %21, i32 %20, i32 %10, !dbg !10200
  call void @llvm.dbg.value(metadata i32 %22, metadata !10183, metadata !DIExpression()), !dbg !10194
  %23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 %11, !dbg !10201
  %24 = call i8* @memcpy(i8* noundef nonnull %23, i8* noundef %8, i32 noundef %22) #18, !dbg !10202
  %25 = call i32 @flash_erase(i32 noundef %16, i32 noundef 4096) #17, !dbg !10203
  %26 = call i32 @flash_write(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #17, !dbg !10205
  %27 = icmp eq i32 %26, 4096, !dbg !10207
  br i1 %27, label %28, label %45, !dbg !10208

28:                                               ; preds = %19
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %22), metadata !10169, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !10186
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %22), metadata !10170, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10186
  %29 = sub nsw i32 %10, %22, !dbg !10209
  call void @llvm.dbg.value(metadata i32 %29, metadata !10171, metadata !DIExpression()), !dbg !10186
  br label %37

30:                                               ; preds = %7
  %31 = and i32 %10, -4096, !dbg !10210
  call void @llvm.dbg.value(metadata i32 %31, metadata !10184, metadata !DIExpression()), !dbg !10211
  %32 = call i32 @flash_erase(i32 noundef %9, i32 noundef %31) #17, !dbg !10212
  %33 = call i32 @flash_write(i8* noundef %8, i32 noundef %9, i32 noundef %31) #17, !dbg !10214
  %34 = icmp eq i32 %33, %31, !dbg !10216
  br i1 %34, label %35, label %43, !dbg !10217

35:                                               ; preds = %30
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %31), metadata !10169, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !10186
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %31), metadata !10170, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10186
  %36 = and i32 %10, 4095, !dbg !10218
  call void @llvm.dbg.value(metadata i8* %8, metadata !10169, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 %9, metadata !10170, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 %10, metadata !10171, metadata !DIExpression()), !dbg !10186
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %29, %28 ], [ %36, %35 ]
  %39 = phi i32 [ %22, %28 ], [ %31, %35 ]
  %40 = getelementptr inbounds i8, i8* %8, i32 %39, !dbg !10219
  %41 = add i32 %39, %9, !dbg !10219
  call void @llvm.dbg.value(metadata i8* %40, metadata !10169, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 %41, metadata !10170, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.value(metadata i32 %38, metadata !10171, metadata !DIExpression()), !dbg !10186
  %42 = icmp sgt i32 %38, 0, !dbg !10189
  br i1 %42, label %7, label %43, !dbg !10190, !llvm.loop !10220

43:                                               ; preds = %37, %30, %3
  %44 = phi i32 [ 0, %3 ], [ -1, %30 ], [ 0, %37 ]
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !10186
  br label %45, !dbg !10222

45:                                               ; preds = %19, %15, %43
  %46 = phi i32 [ %44, %43 ], [ -2, %15 ], [ -4, %19 ], !dbg !10186
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %5) #19, !dbg !10222
  ret i32 %46, !dbg !10222
}

; Function Attrs: noinline nounwind optsize
declare dso_local i32 @flash_direct_read_nocache(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #2 section ".ramTEXT"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @query_spi_flash_status() local_unnamed_addr #7 section ".ramTEXT" !dbg !10223 {
  %1 = load i32, i32* @sf_drvier_status, align 4, !dbg !10227
  switch i32 %1, label %3 [
    i32 -1, label %7
    i32 0, label %2
  ], !dbg !10229

2:                                                ; preds = %0
  br label %7, !dbg !10230

3:                                                ; preds = %0
  %4 = add i32 %1, -3, !dbg !10233
  %5 = icmp ult i32 %4, 3, !dbg !10233
  %6 = select i1 %5, i32 1, i32 2, !dbg !10235
  br label %7, !dbg !10235

7:                                                ; preds = %3, %0, %2
  %8 = phi i32 [ 0, %2 ], [ %1, %0 ], [ %6, %3 ], !dbg !10236
  ret i32 %8, !dbg !10237
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_count() local_unnamed_addr #2 !dbg !10238 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 2) #18, !dbg !10239
  ret i32 %1, !dbg !10240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time(i32 noundef %0) local_unnamed_addr #2 !dbg !10241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10243, metadata !DIExpression()), !dbg !10246
  %2 = tail call i32 @get_current_count() #17, !dbg !10247
  %3 = add i32 %2, %0, !dbg !10248
  %4 = xor i32 %3, -1, !dbg !10249
  call void @llvm.dbg.value(metadata i32 %3, metadata !10244, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10246
  %5 = tail call i32 @get_current_count() #17, !dbg !10250
  call void @llvm.dbg.value(metadata i32 %5, metadata !10245, metadata !DIExpression()), !dbg !10246
  %6 = add i32 %5, %4, !dbg !10251
  %7 = icmp slt i32 %6, 0, !dbg !10251
  br i1 %7, label %8, label %12, !dbg !10252

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_count() #17, !dbg !10253
  call void @llvm.dbg.value(metadata i32 %9, metadata !10245, metadata !DIExpression()), !dbg !10246
  %10 = add i32 %9, %4, !dbg !10251
  %11 = icmp slt i32 %10, 0, !dbg !10251
  br i1 %11, label %8, label %12, !dbg !10252, !llvm.loop !10255

12:                                               ; preds = %8, %1
  ret void, !dbg !10257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time_for_gpt4(i32 noundef %0) local_unnamed_addr #2 !dbg !10258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10260, metadata !DIExpression()), !dbg !10263
  %2 = tail call i32 @get_current_gpt4_count() #17, !dbg !10264
  %3 = add i32 %2, %0, !dbg !10265
  %4 = xor i32 %3, -1, !dbg !10266
  call void @llvm.dbg.value(metadata i32 %3, metadata !10261, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10263
  %5 = tail call i32 @get_current_gpt4_count() #17, !dbg !10267
  call void @llvm.dbg.value(metadata i32 %5, metadata !10262, metadata !DIExpression()), !dbg !10263
  %6 = add i32 %5, %4, !dbg !10268
  %7 = icmp slt i32 %6, 0, !dbg !10268
  br i1 %7, label %8, label %12, !dbg !10269

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_gpt4_count() #17, !dbg !10270
  call void @llvm.dbg.value(metadata i32 %9, metadata !10262, metadata !DIExpression()), !dbg !10263
  %10 = add i32 %9, %4, !dbg !10268
  %11 = icmp slt i32 %10, 0, !dbg !10268
  br i1 %11, label %8, label %12, !dbg !10269, !llvm.loop !10272

12:                                               ; preds = %8, %1
  ret void, !dbg !10274
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_gpt4_count() local_unnamed_addr #2 !dbg !10275 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 4) #18, !dbg !10276
  ret i32 %1, !dbg !10277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_ms(i32 noundef %0) local_unnamed_addr #2 !dbg !10278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10280, metadata !DIExpression()), !dbg !10282
  %2 = shl i32 %0, 5, !dbg !10283
  call void @llvm.dbg.value(metadata i32 %2, metadata !10281, metadata !DIExpression()), !dbg !10282
  %3 = mul i32 %0, 7, !dbg !10284
  %4 = udiv i32 %3, 10, !dbg !10285
  %5 = add i32 %4, %2, !dbg !10286
  call void @llvm.dbg.value(metadata i32 %5, metadata !10281, metadata !DIExpression()), !dbg !10282
  %6 = mul i32 %0, 6, !dbg !10287
  %7 = udiv i32 %6, 100, !dbg !10288
  %8 = add i32 %5, %7, !dbg !10289
  call void @llvm.dbg.value(metadata i32 %8, metadata !10281, metadata !DIExpression()), !dbg !10282
  %9 = shl i32 %0, 3, !dbg !10290
  %10 = udiv i32 %9, 1000, !dbg !10291
  %11 = add i32 %8, %10, !dbg !10292
  call void @llvm.dbg.value(metadata i32 %11, metadata !10281, metadata !DIExpression()), !dbg !10282
  tail call void @delay_time(i32 noundef %11) #17, !dbg !10293
  ret void, !dbg !10294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_us(i32 noundef %0) local_unnamed_addr #2 !dbg !10295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10297, metadata !DIExpression()), !dbg !10300
  %2 = tail call i32 @top_mcu_freq_get() #18, !dbg !10301
  %3 = udiv i32 %2, 1000000, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %3, metadata !10299, metadata !DIExpression()), !dbg !10300
  %4 = mul i32 %3, %0, !dbg !10303
  call void @llvm.dbg.value(metadata i32 %4, metadata !10298, metadata !DIExpression()), !dbg !10300
  tail call void @delay_time_for_gpt4(i32 noundef %4) #17, !dbg !10304
  ret void, !dbg !10305
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvTMR_init(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2, void ()* noundef %3) local_unnamed_addr #2 !dbg !10306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10310, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.value(metadata i32 %1, metadata !10311, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.value(metadata i1 %2, metadata !10312, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10314
  call void @llvm.dbg.value(metadata void ()* %3, metadata !10313, metadata !DIExpression()), !dbg !10314
  tail call void @GPT_Stop(i32 noundef %0) #18, !dbg !10315
  %5 = icmp eq i32 %0, 0, !dbg !10316
  br i1 %5, label %6, label %7, !dbg !10318

6:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !10319
  br label %8, !dbg !10321

7:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !10322
  br label %8

8:                                                ; preds = %7, %6
  %9 = phi i32 [ %0, %7 ], [ 0, %6 ]
  tail call void @GPT_init(i32 noundef %9, i32 noundef 1, void ()* noundef %3) #18, !dbg !10324
  tail call void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) #18, !dbg !10325
  ret void, !dbg !10326
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Start(i32 noundef %0) local_unnamed_addr #2 !dbg !10327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10329, metadata !DIExpression()), !dbg !10330
  tail call void @GPT_Start(i32 noundef %0) #18, !dbg !10331
  ret void, !dbg !10332
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Stop(i32 noundef %0) local_unnamed_addr #2 !dbg !10333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10335, metadata !DIExpression()), !dbg !10336
  tail call void @GPT_Stop(i32 noundef %0) #18, !dbg !10337
  ret void, !dbg !10338
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT2Init() local_unnamed_addr #2 !dbg !10339 {
  tail call void @CM4_GPT2Init() #18, !dbg !10340
  ret void, !dbg !10341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT4Init() local_unnamed_addr #2 !dbg !10342 {
  tail call void @CM4_GPT4Init() #18, !dbg !10343
  ret void, !dbg !10344
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @clear_TMR_INT_status_bit(i32 noundef %0) local_unnamed_addr #0 !dbg !10345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10347, metadata !DIExpression()), !dbg !10348
  switch i32 %0, label %5 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !10349

2:                                                ; preds = %1
  br label %3, !dbg !10350

3:                                                ; preds = %1, %2
  %4 = phi i32 [ 2, %2 ], [ 1, %1 ]
  store volatile i32 %4, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !10348
  br label %5, !dbg !10353

5:                                                ; preds = %3, %1
  ret void, !dbg !10353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @top_xtal_init() local_unnamed_addr #2 !dbg !10354 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10356, metadata !DIExpression()), !dbg !10358
  %1 = load volatile i32, i32* inttoptr (i32 -2097118784 to i32*), align 64, !dbg !10359
  call void @llvm.dbg.value(metadata i32 %1, metadata !10357, metadata !DIExpression()), !dbg !10358
  %2 = lshr i32 %1, 13, !dbg !10360
  %3 = and i32 %2, 7, !dbg !10361
  call void @llvm.dbg.value(metadata i32 %3, metadata !10357, metadata !DIExpression()), !dbg !10358
  %4 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !10362
  call void @llvm.dbg.value(metadata i32 %4, metadata !10356, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.value(metadata i32 %4, metadata !10356, metadata !DIExpression(DW_OP_constu, 18446744073709549568, DW_OP_and, DW_OP_stack_value)), !dbg !10358
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init, i32 0, i32 %3, !dbg !10363
  %6 = load i32, i32* %5, align 4, !dbg !10363
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init.1, i32 0, i32 %3, !dbg !10363
  %8 = load i32, i32* %7, align 4, !dbg !10363
  %9 = and i32 %4, -2048, !dbg !10364
  call void @llvm.dbg.value(metadata i32 %9, metadata !10356, metadata !DIExpression()), !dbg !10358
  store i32 %6, i32* @gXtalFreq, align 4, !dbg !10365
  %10 = or i32 %9, %8, !dbg !10365
  call void @llvm.dbg.value(metadata i32 %10, metadata !10356, metadata !DIExpression()), !dbg !10358
  store volatile i32 %10, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !10367
  %11 = load i32, i32* @gXtalFreq, align 4, !dbg !10368
  store i32 %11, i32* @gCpuFrequency, align 4, !dbg !10369
  tail call void @SystemCoreClockUpdate() #18, !dbg !10370
  %12 = load i32, i32* @SystemCoreClock, align 4, !dbg !10371
  %13 = udiv i32 %12, 1000, !dbg !10372
  %14 = tail call i32 @SysTick_Set(i32 noundef %13) #18, !dbg !10373
  ret void, !dbg !10374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_xtal_freq_get() local_unnamed_addr #7 !dbg !10375 {
  %1 = load i32, i32* @gXtalFreq, align 4, !dbg !10376
  ret i32 %1, !dbg !10377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_mcu_freq_get() local_unnamed_addr #7 !dbg !10378 {
  %1 = load i32, i32* @gCpuFrequency, align 4, !dbg !10379
  ret i32 %1, !dbg !10380
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON() local_unnamed_addr #16 !dbg !10381 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !10385
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10385
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10383, metadata !DIExpression()), !dbg !10386
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !10384, metadata !DIExpression()), !dbg !10387
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !10388
  store volatile i32 %3, i32* %1, align 4, !dbg !10389
  %4 = load volatile i32, i32* %1, align 4, !dbg !10390
  %5 = lshr i32 %4, 28, !dbg !10391
  %6 = and i32 %5, 3, !dbg !10392
  store volatile i32 %6, i32* %1, align 4, !dbg !10393
  %7 = load volatile i32, i32* %1, align 4, !dbg !10394
  %8 = icmp eq i32 %7, 0, !dbg !10396
  br i1 %8, label %9, label %22, !dbg !10397

9:                                                ; preds = %0
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !10398
  store volatile i32 %10, i32* %1, align 4, !dbg !10400
  %11 = load volatile i32, i32* %1, align 4, !dbg !10401
  %12 = and i32 %11, -16777217, !dbg !10402
  store volatile i32 %12, i32* %1, align 4, !dbg !10403
  %13 = load volatile i32, i32* %1, align 4, !dbg !10404
  %14 = or i32 %13, 536870912, !dbg !10405
  store volatile i32 %14, i32* %1, align 4, !dbg !10406
  %15 = load volatile i32, i32* %1, align 4, !dbg !10407
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %15) #17, !dbg !10408
  br label %16, !dbg !10409

16:                                               ; preds = %16, %9
  %17 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !10410
  store volatile i32 %17, i32* %1, align 4, !dbg !10412
  %18 = load volatile i32, i32* %1, align 4, !dbg !10413
  %19 = and i32 %18, 134217728, !dbg !10414
  store volatile i32 %19, i32* %1, align 4, !dbg !10415
  %20 = load volatile i32, i32* %1, align 4, !dbg !10416
  %21 = icmp eq i32 %20, 0, !dbg !10417
  br i1 %21, label %16, label %22, !dbg !10418, !llvm.loop !10419

22:                                               ; preds = %16, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10421
  ret void, !dbg !10421
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @cmnReadRegister32(i8* noundef %0) unnamed_addr #5 !dbg !10422 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10429, metadata !DIExpression()), !dbg !10430
  %2 = bitcast i8* %0 to i32*, !dbg !10431
  %3 = load volatile i32, i32* %2, align 4, !dbg !10432
  ret i32 %3, !dbg !10433
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @cmnWriteRegister32(i8* noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !10434 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10438, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata i32 %1, metadata !10439, metadata !DIExpression()), !dbg !10440
  %3 = bitcast i8* %0 to i32*, !dbg !10441
  store volatile i32 %1, i32* %3, align 4, !dbg !10442
  ret void, !dbg !10443
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON_PLL2ON(i8 noundef zeroext %0) local_unnamed_addr #16 !dbg !10444 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !10448, metadata !DIExpression()), !dbg !10451
  %3 = bitcast i32* %2 to i8*, !dbg !10452
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10452
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10449, metadata !DIExpression()), !dbg !10453
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !10450, metadata !DIExpression()), !dbg !10451
  %4 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !10454
  store volatile i32 %4, i32* %2, align 4, !dbg !10455
  %5 = load volatile i32, i32* %2, align 4, !dbg !10456
  %6 = lshr i32 %5, 28, !dbg !10457
  %7 = and i32 %6, 3, !dbg !10458
  store volatile i32 %7, i32* %2, align 4, !dbg !10459
  %8 = load volatile i32, i32* %2, align 4, !dbg !10460
  %9 = icmp eq i32 %8, 3, !dbg !10462
  br i1 %9, label %38, label %10, !dbg !10463

10:                                               ; preds = %1
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !10464
  store volatile i32 %11, i32* %2, align 4, !dbg !10466
  %12 = load volatile i32, i32* %2, align 4, !dbg !10467
  %13 = and i32 %12, -262145, !dbg !10468
  store volatile i32 %13, i32* %2, align 4, !dbg !10469
  %14 = load volatile i32, i32* %2, align 4, !dbg !10470
  %15 = and i32 %14, -16777217, !dbg !10471
  store volatile i32 %15, i32* %2, align 4, !dbg !10472
  %16 = load volatile i32, i32* %2, align 4, !dbg !10473
  store volatile i32 %16, i32* %2, align 4, !dbg !10474
  %17 = load volatile i32, i32* %2, align 4, !dbg !10475
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %17) #17, !dbg !10476
  %18 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !10477
  store volatile i32 %18, i32* %2, align 4, !dbg !10478
  %19 = load volatile i32, i32* %2, align 4, !dbg !10479
  %20 = and i32 %19, -805306369, !dbg !10480
  store volatile i32 %20, i32* %2, align 4, !dbg !10481
  %21 = load volatile i32, i32* %2, align 4, !dbg !10482
  %22 = and i32 %21, -16777217, !dbg !10483
  store volatile i32 %22, i32* %2, align 4, !dbg !10484
  %23 = load volatile i32, i32* %2, align 4, !dbg !10485
  %24 = or i32 %23, 805306368, !dbg !10486
  store volatile i32 %24, i32* %2, align 4, !dbg !10487
  %25 = load volatile i32, i32* %2, align 4, !dbg !10488
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %25) #17, !dbg !10489
  br label %26, !dbg !10490

26:                                               ; preds = %26, %10
  %27 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !10491
  store volatile i32 %27, i32* %2, align 4, !dbg !10493
  %28 = load volatile i32, i32* %2, align 4, !dbg !10494
  %29 = and i32 %28, 67108864, !dbg !10495
  store volatile i32 %29, i32* %2, align 4, !dbg !10496
  %30 = load volatile i32, i32* %2, align 4, !dbg !10497
  %31 = icmp eq i32 %30, 0, !dbg !10498
  br i1 %31, label %26, label %32, !dbg !10499, !llvm.loop !10500

32:                                               ; preds = %26
  %33 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !10502
  store volatile i32 %33, i32* %2, align 4, !dbg !10503
  %34 = load volatile i32, i32* %2, align 4, !dbg !10504
  %35 = and i32 %34, -262145, !dbg !10505
  store volatile i32 %35, i32* %2, align 4, !dbg !10506
  %36 = load volatile i32, i32* %2, align 4, !dbg !10507
  %37 = and i32 %36, -16777217, !dbg !10508
  store volatile i32 %37, i32* %2, align 4, !dbg !10509
  br label %38, !dbg !10510

38:                                               ; preds = %32, %1
  %39 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !10511
  store volatile i32 %39, i32* %2, align 4, !dbg !10512
  %40 = icmp eq i8 %0, 0, !dbg !10513
  %41 = load volatile i32, i32* %2, align 4, !dbg !10515
  br i1 %40, label %44, label %42, !dbg !10516

42:                                               ; preds = %38
  %43 = or i32 %41, 262144, !dbg !10517
  store volatile i32 %43, i32* %2, align 4, !dbg !10519
  br label %45, !dbg !10520

44:                                               ; preds = %38
  store volatile i32 %41, i32* %2, align 4, !dbg !10521
  br label %45

45:                                               ; preds = %44, %42
  %46 = load volatile i32, i32* %2, align 4, !dbg !10523
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %46) #17, !dbg !10524
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10525
  ret void, !dbg !10525
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1OFF_PLL2OFF() local_unnamed_addr #16 !dbg !10526 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !10530
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10530
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10528, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !10529, metadata !DIExpression()), !dbg !10532
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !10533
  store volatile i32 %3, i32* %1, align 4, !dbg !10534
  %4 = load volatile i32, i32* %1, align 4, !dbg !10535
  %5 = and i32 %4, -805306369, !dbg !10536
  store volatile i32 %5, i32* %1, align 4, !dbg !10537
  %6 = load volatile i32, i32* %1, align 4, !dbg !10538
  %7 = and i32 %6, -16777217, !dbg !10539
  store volatile i32 %7, i32* %1, align 4, !dbg !10540
  %8 = load volatile i32, i32* %1, align 4, !dbg !10541
  store volatile i32 %8, i32* %1, align 4, !dbg !10542
  %9 = load volatile i32, i32* %1, align 4, !dbg !10543
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %9) #17, !dbg !10544
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #17, !dbg !10545
  store volatile i32 %10, i32* %1, align 4, !dbg !10546
  %11 = load volatile i32, i32* %1, align 4, !dbg !10547
  %12 = and i32 %11, -262145, !dbg !10548
  store volatile i32 %12, i32* %1, align 4, !dbg !10549
  %13 = load volatile i32, i32* %1, align 4, !dbg !10550
  %14 = and i32 %13, -16777217, !dbg !10551
  store volatile i32 %14, i32* %1, align 4, !dbg !10552
  %15 = load volatile i32, i32* %1, align 4, !dbg !10553
  store volatile i32 %15, i32* %1, align 4, !dbg !10554
  %16 = load volatile i32, i32* %1, align 4, !dbg !10555
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %16) #17, !dbg !10556
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10557
  ret void, !dbg !10557
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureToXtal() local_unnamed_addr #2 !dbg !10558 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !10562
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10562
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10560, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !10561, metadata !DIExpression()), !dbg !10564
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10565
  store volatile i32 %3, i32* %1, align 4, !dbg !10566
  %4 = load volatile i32, i32* %1, align 4, !dbg !10567
  %5 = and i32 %4, -8, !dbg !10568
  store volatile i32 %5, i32* %1, align 4, !dbg !10569
  %6 = load volatile i32, i32* %1, align 4, !dbg !10570
  store volatile i32 %6, i32* %1, align 4, !dbg !10571
  %7 = load volatile i32, i32* %1, align 4, !dbg !10572
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #17, !dbg !10573
  %8 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10574
  store volatile i32 %8, i32* %1, align 4, !dbg !10575
  %9 = load volatile i32, i32* %1, align 4, !dbg !10576
  %10 = and i32 %9, -49153, !dbg !10577
  store volatile i32 %10, i32* %1, align 4, !dbg !10578
  %11 = load volatile i32, i32* %1, align 4, !dbg !10579
  store volatile i32 %11, i32* %1, align 4, !dbg !10580
  %12 = load volatile i32, i32* %1, align 4, !dbg !10581
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %12) #17, !dbg !10582
  br label %13, !dbg !10583

13:                                               ; preds = %13, %0
  %14 = load volatile i32, i32* %1, align 4, !dbg !10584
  %15 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10585
  %16 = icmp eq i32 %14, %15, !dbg !10586
  br i1 %16, label %17, label %13, !dbg !10583, !llvm.loop !10587

17:                                               ; preds = %13
  %18 = tail call i32 @top_xtal_freq_get() #17, !dbg !10589
  store i32 %18, i32* @gCpuFrequency, align 4, !dbg !10590
  tail call void @SystemCoreClockUpdate() #18, !dbg !10591
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !10592
  %20 = udiv i32 %19, 1000, !dbg !10593
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #18, !dbg !10594
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10595
  ret void, !dbg !10595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo192M() local_unnamed_addr #2 !dbg !10596 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !10600
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10600
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10598, metadata !DIExpression()), !dbg !10601
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !10599, metadata !DIExpression()), !dbg !10602
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 1) #17, !dbg !10603
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10604
  store volatile i32 %3, i32* %1, align 4, !dbg !10605
  %4 = load volatile i32, i32* %1, align 4, !dbg !10606
  %5 = and i32 %4, -49153, !dbg !10607
  store volatile i32 %5, i32* %1, align 4, !dbg !10608
  %6 = load volatile i32, i32* %1, align 4, !dbg !10609
  %7 = or i32 %6, 16384, !dbg !10610
  store volatile i32 %7, i32* %1, align 4, !dbg !10611
  %8 = load volatile i32, i32* %1, align 4, !dbg !10612
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #17, !dbg !10613
  br label %9, !dbg !10614

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !10615
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10616
  %12 = icmp eq i32 %10, %11, !dbg !10617
  br i1 %12, label %13, label %9, !dbg !10614, !llvm.loop !10618

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10620
  store volatile i32 %14, i32* %1, align 4, !dbg !10621
  %15 = load volatile i32, i32* %1, align 4, !dbg !10622
  %16 = and i32 %15, -1009, !dbg !10623
  store volatile i32 %16, i32* %1, align 4, !dbg !10624
  %17 = load volatile i32, i32* %1, align 4, !dbg !10625
  %18 = or i32 %17, 128, !dbg !10626
  store volatile i32 %18, i32* %1, align 4, !dbg !10627
  %19 = load volatile i32, i32* %1, align 4, !dbg !10628
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #17, !dbg !10629
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10630
  store volatile i32 %20, i32* %1, align 4, !dbg !10631
  %21 = load volatile i32, i32* %1, align 4, !dbg !10632
  %22 = and i32 %21, -8, !dbg !10633
  store volatile i32 %22, i32* %1, align 4, !dbg !10634
  %23 = load volatile i32, i32* %1, align 4, !dbg !10635
  %24 = or i32 %23, 4, !dbg !10636
  store volatile i32 %24, i32* %1, align 4, !dbg !10637
  %25 = load volatile i32, i32* %1, align 4, !dbg !10638
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #17, !dbg !10639
  store i32 192000000, i32* @gCpuFrequency, align 4, !dbg !10640
  tail call void @SystemCoreClockUpdate() #18, !dbg !10641
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !10642
  %27 = udiv i32 %26, 1000, !dbg !10643
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #18, !dbg !10644
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10645
  ret void, !dbg !10645
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo160M() local_unnamed_addr #2 !dbg !10646 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !10650
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10650
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10648, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !10649, metadata !DIExpression()), !dbg !10652
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 0) #17, !dbg !10653
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10654
  store volatile i32 %3, i32* %1, align 4, !dbg !10655
  %4 = load volatile i32, i32* %1, align 4, !dbg !10656
  %5 = and i32 %4, -49153, !dbg !10657
  store volatile i32 %5, i32* %1, align 4, !dbg !10658
  %6 = load volatile i32, i32* %1, align 4, !dbg !10659
  %7 = or i32 %6, 32768, !dbg !10660
  store volatile i32 %7, i32* %1, align 4, !dbg !10661
  %8 = load volatile i32, i32* %1, align 4, !dbg !10662
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #17, !dbg !10663
  br label %9, !dbg !10664

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !10665
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10666
  %12 = icmp eq i32 %10, %11, !dbg !10667
  br i1 %12, label %13, label %9, !dbg !10664, !llvm.loop !10668

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10670
  store volatile i32 %14, i32* %1, align 4, !dbg !10671
  %15 = load volatile i32, i32* %1, align 4, !dbg !10672
  %16 = and i32 %15, -1009, !dbg !10673
  store volatile i32 %16, i32* %1, align 4, !dbg !10674
  %17 = load volatile i32, i32* %1, align 4, !dbg !10675
  %18 = or i32 %17, 32, !dbg !10676
  store volatile i32 %18, i32* %1, align 4, !dbg !10677
  %19 = load volatile i32, i32* %1, align 4, !dbg !10678
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #17, !dbg !10679
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10680
  store volatile i32 %20, i32* %1, align 4, !dbg !10681
  %21 = load volatile i32, i32* %1, align 4, !dbg !10682
  %22 = and i32 %21, -8, !dbg !10683
  store volatile i32 %22, i32* %1, align 4, !dbg !10684
  %23 = load volatile i32, i32* %1, align 4, !dbg !10685
  %24 = or i32 %23, 4, !dbg !10686
  store volatile i32 %24, i32* %1, align 4, !dbg !10687
  %25 = load volatile i32, i32* %1, align 4, !dbg !10688
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #17, !dbg !10689
  store i32 160000000, i32* @gCpuFrequency, align 4, !dbg !10690
  tail call void @SystemCoreClockUpdate() #18, !dbg !10691
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !10692
  %27 = udiv i32 %26, 1000, !dbg !10693
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #18, !dbg !10694
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10695
  ret void, !dbg !10695
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo64M() local_unnamed_addr #2 !dbg !10696 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !10700
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10700
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10698, metadata !DIExpression()), !dbg !10701
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !10699, metadata !DIExpression()), !dbg !10702
  tail call void @cmnPLL1ON() #17, !dbg !10703
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10704
  store volatile i32 %3, i32* %1, align 4, !dbg !10705
  %4 = load volatile i32, i32* %1, align 4, !dbg !10706
  %5 = and i32 %4, -49153, !dbg !10707
  store volatile i32 %5, i32* %1, align 4, !dbg !10708
  %6 = load volatile i32, i32* %1, align 4, !dbg !10709
  store volatile i32 %6, i32* %1, align 4, !dbg !10710
  %7 = load volatile i32, i32* %1, align 4, !dbg !10711
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #17, !dbg !10712
  br label %8, !dbg !10713

8:                                                ; preds = %8, %0
  %9 = load volatile i32, i32* %1, align 4, !dbg !10714
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10715
  %11 = icmp eq i32 %9, %10, !dbg !10716
  br i1 %11, label %12, label %8, !dbg !10713, !llvm.loop !10717

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #17, !dbg !10719
  store volatile i32 %13, i32* %1, align 4, !dbg !10720
  %14 = load volatile i32, i32* %1, align 4, !dbg !10721
  %15 = and i32 %14, -8, !dbg !10722
  store volatile i32 %15, i32* %1, align 4, !dbg !10723
  %16 = load volatile i32, i32* %1, align 4, !dbg !10724
  %17 = or i32 %16, 2, !dbg !10725
  store volatile i32 %17, i32* %1, align 4, !dbg !10726
  %18 = load volatile i32, i32* %1, align 4, !dbg !10727
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %18) #17, !dbg !10728
  store i32 64000000, i32* @gCpuFrequency, align 4, !dbg !10729
  tail call void @SystemCoreClockUpdate() #18, !dbg !10730
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !10731
  %20 = udiv i32 %19, 1000, !dbg !10732
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #18, !dbg !10733
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10734
  ret void, !dbg !10734
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfToXtal() local_unnamed_addr #16 section ".ramTEXT" !dbg !10735 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !10739
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10739
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10737, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !10738, metadata !DIExpression()), !dbg !10741
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #17, !dbg !10742
  store volatile i32 %3, i32* %1, align 4, !dbg !10743
  %4 = load volatile i32, i32* %1, align 4, !dbg !10744
  %5 = and i32 %4, -24577, !dbg !10745
  store volatile i32 %5, i32* %1, align 4, !dbg !10746
  %6 = load volatile i32, i32* %1, align 4, !dbg !10747
  store volatile i32 %6, i32* %1, align 4, !dbg !10748
  %7 = load volatile i32, i32* %1, align 4, !dbg !10749
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %7) #17, !dbg !10750
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10751
  ret void, !dbg !10751
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfTo64M() local_unnamed_addr #16 section ".ramTEXT" !dbg !10752 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !10762
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10762
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10754, metadata !DIExpression()), !dbg !10763
  store volatile i32 0, i32* %1, align 4, !dbg !10763
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !10755, metadata !DIExpression()), !dbg !10764
  tail call void @cmnPLL1ON() #17, !dbg !10765
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #17, !dbg !10766
  store volatile i32 %3, i32* %1, align 4, !dbg !10767
  %4 = load volatile i32, i32* %1, align 4, !dbg !10768
  %5 = and i32 %4, -24577, !dbg !10769
  store volatile i32 %5, i32* %1, align 4, !dbg !10770
  %6 = load volatile i32, i32* %1, align 4, !dbg !10771
  %7 = or i32 %6, 8192, !dbg !10772
  store volatile i32 %7, i32* %1, align 4, !dbg !10773
  %8 = load volatile i32, i32* %1, align 4, !dbg !10774
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %8) #17, !dbg !10775
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !10756, metadata !DIExpression()), !dbg !10776
  %9 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !10777
  %10 = and i32 %9, -4, !dbg !10777
  store volatile i32 %10, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !10777
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !10758, metadata !DIExpression()), !dbg !10778
  %11 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !10779
  %12 = or i32 %11, 16, !dbg !10779
  store volatile i32 %12, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !10779
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693208 to i32*), metadata !10760, metadata !DIExpression()), !dbg !10780
  %13 = load volatile i32, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !10781
  %14 = and i32 %13, -64, !dbg !10781
  %15 = or i32 %14, 24, !dbg !10781
  store volatile i32 %15, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !10781
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10782
  ret void, !dbg !10782
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc() local_unnamed_addr #5 !dbg !10783 {
  %1 = tail call i32 @getc_nowait() #17, !dbg !10786
  call void @llvm.dbg.value(metadata i32 %1, metadata !10785, metadata !DIExpression()), !dbg !10787
  ret i32 %1, !dbg !10788
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc_nowait() local_unnamed_addr #5 !dbg !10789 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096955372 to i32*), align 4, !dbg !10792
  %2 = and i32 %1, 1, !dbg !10794
  %3 = icmp eq i32 %2, 0, !dbg !10794
  br i1 %3, label %7, label %4, !dbg !10795

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -2096955392 to i32*), align 65536, !dbg !10796
  %6 = and i32 %5, 255, !dbg !10798
  call void @llvm.dbg.value(metadata i32 %5, metadata !10791, metadata !DIExpression()), !dbg !10799
  br label %7, !dbg !10800

7:                                                ; preds = %0, %4
  %8 = phi i32 [ %6, %4 ], [ -1, %0 ], !dbg !10801
  ret i32 %8, !dbg !10802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_output_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !10803 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10808, metadata !DIExpression()), !dbg !10811
  call void @llvm.dbg.value(metadata i8 %1, metadata !10809, metadata !DIExpression()), !dbg !10811
  %3 = icmp eq i32 %0, 0, !dbg !10812
  %4 = select i1 %3, i32 -2096955392, i32 -2096889856, !dbg !10812
  call void @llvm.dbg.value(metadata i32 %4, metadata !10810, metadata !DIExpression()), !dbg !10811
  %5 = or i32 %4, 20
  %6 = inttoptr i32 %5 to i32*
  br label %7, !dbg !10813

7:                                                ; preds = %7, %2
  %8 = load volatile i32, i32* %6, align 4, !dbg !10814
  %9 = and i32 %8, 32, !dbg !10815
  %10 = icmp eq i32 %9, 0, !dbg !10816
  br i1 %10, label %7, label %11, !dbg !10813, !llvm.loop !10817

11:                                               ; preds = %7
  %12 = zext i8 %1 to i32, !dbg !10819
  %13 = inttoptr i32 %4 to i32*, !dbg !10820
  store volatile i32 %12, i32* %13, align 65536, !dbg !10821
  ret void, !dbg !10822
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_input_char(i32 noundef %0) local_unnamed_addr #0 !dbg !10823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10827, metadata !DIExpression()), !dbg !10830
  %2 = icmp eq i32 %0, 0, !dbg !10831
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !10831
  call void @llvm.dbg.value(metadata i32 %3, metadata !10828, metadata !DIExpression()), !dbg !10830
  %4 = or i32 %3, 20
  %5 = inttoptr i32 %4 to i32*
  br label %6, !dbg !10832

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* %5, align 4, !dbg !10833
  %8 = and i32 %7, 1, !dbg !10834
  %9 = icmp eq i32 %8, 0, !dbg !10835
  br i1 %9, label %6, label %10, !dbg !10832, !llvm.loop !10836

10:                                               ; preds = %6
  %11 = inttoptr i32 %3 to i32*, !dbg !10838
  %12 = load volatile i32, i32* %11, align 65536, !dbg !10838
  %13 = trunc i32 %12 to i8, !dbg !10838
  call void @llvm.dbg.value(metadata i8 %13, metadata !10829, metadata !DIExpression()), !dbg !10830
  ret i8 %13, !dbg !10839
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_input_char_unblocking(i32 noundef %0) local_unnamed_addr #5 !dbg !10840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10844, metadata !DIExpression()), !dbg !10847
  %2 = icmp eq i32 %0, 0, !dbg !10848
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !10848
  call void @llvm.dbg.value(metadata i32 %3, metadata !10845, metadata !DIExpression()), !dbg !10847
  %4 = or i32 %3, 20, !dbg !10849
  %5 = inttoptr i32 %4 to i32*, !dbg !10849
  %6 = load volatile i32, i32* %5, align 4, !dbg !10849
  %7 = and i32 %6, 1, !dbg !10851
  %8 = icmp eq i32 %7, 0, !dbg !10851
  br i1 %8, label %13, label %9, !dbg !10852

9:                                                ; preds = %1
  %10 = inttoptr i32 %3 to i32*, !dbg !10853
  %11 = load volatile i32, i32* %10, align 65536, !dbg !10853
  %12 = and i32 %11, 255, !dbg !10855
  call void @llvm.dbg.value(metadata i32 %11, metadata !10846, metadata !DIExpression()), !dbg !10847
  br label %13, !dbg !10856

13:                                               ; preds = %1, %9
  %14 = phi i32 [ %12, %9 ], [ -1, %1 ], !dbg !10857
  ret i32 %14, !dbg !10858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_HWInit(i32 noundef %0) local_unnamed_addr #2 !dbg !10859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10863, metadata !DIExpression()), !dbg !10864
  tail call void @halUART_SetFormat(i32 noundef %0, i32 noundef 115200, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 0) #17, !dbg !10865
  switch i32 %0, label %7 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !10866

2:                                                ; preds = %1
  br label %3, !dbg !10867

3:                                                ; preds = %1, %2
  %4 = phi i32* [ inttoptr (i32 -2096889780 to i32*), %2 ], [ inttoptr (i32 -2096955316 to i32*), %1 ]
  %5 = load volatile i32, i32* %4, align 4, !dbg !10871
  %6 = or i32 %5, 1, !dbg !10871
  store volatile i32 %6, i32* %4, align 4, !dbg !10871
  br label %7, !dbg !10872

7:                                                ; preds = %3, %1
  ret void, !dbg !10872
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_SetFormat(i32 noundef %0, i32 noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #2 !dbg !10873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10877, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i32 %1, metadata !10878, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i16 %2, metadata !10879, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i16 %3, metadata !10880, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i16 %4, metadata !10881, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i32 -2096955392, metadata !10883, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, metadata !10890, metadata !DIExpression()), !dbg !10895
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, metadata !10892, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 0, metadata !10893, metadata !DIExpression()), !dbg !10894
  %6 = tail call i32 @top_xtal_freq_get() #18, !dbg !10897
  store i32 %6, i32* @gUartClkFreq, align 4, !dbg !10898
  %7 = icmp eq i32 %0, 1, !dbg !10899
  %8 = select i1 %7, i32 -2096889856, i32 -2096955392, !dbg !10899
  call void @llvm.dbg.value(metadata i32 %8, metadata !10883, metadata !DIExpression()), !dbg !10894
  %9 = or i32 %8, 36, !dbg !10900
  %10 = inttoptr i32 %9 to i32*, !dbg !10900
  store volatile i32 3, i32* %10, align 4, !dbg !10901
  %11 = or i32 %8, 12, !dbg !10902
  %12 = inttoptr i32 %11 to i32*, !dbg !10902
  %13 = load volatile i32, i32* %12, align 4, !dbg !10902
  call void @llvm.dbg.value(metadata i32 %13, metadata !10885, metadata !DIExpression()), !dbg !10894
  %14 = or i32 %13, 128, !dbg !10903
  store volatile i32 %14, i32* %12, align 4, !dbg !10904
  %15 = load i32, i32* @gUartClkFreq, align 4, !dbg !10905
  %16 = udiv i32 %15, %1, !dbg !10906
  call void @llvm.dbg.value(metadata i32 %16, metadata !10884, metadata !DIExpression()), !dbg !10894
  %17 = lshr i32 %16, 8, !dbg !10907
  %18 = add nuw nsw i32 %17, 1, !dbg !10908
  call void @llvm.dbg.value(metadata i32 %18, metadata !10886, metadata !DIExpression()), !dbg !10894
  %19 = udiv i32 %16, %18, !dbg !10909
  %20 = add i32 %19, -1, !dbg !10911
  call void @llvm.dbg.value(metadata i32 %20, metadata !10887, metadata !DIExpression()), !dbg !10894
  %21 = icmp eq i32 %20, 3, !dbg !10912
  %22 = lshr i32 %20, 1, !dbg !10914
  %23 = add nsw i32 %22, -1, !dbg !10914
  %24 = select i1 %21, i32 0, i32 %23, !dbg !10914
  call void @llvm.dbg.value(metadata i32 %24, metadata !10888, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i32 undef, metadata !10893, metadata !DIExpression()), !dbg !10894
  %25 = mul i32 %15, 10, !dbg !10915
  %26 = udiv i32 %25, %1, !dbg !10916
  %27 = udiv i32 %26, %16, !dbg !10917
  %28 = mul i32 %19, -10, !dbg !10918
  %29 = add i32 %27, %28, !dbg !10919
  %30 = urem i32 %29, 10, !dbg !10920
  call void @llvm.dbg.value(metadata i32 %30, metadata !10889, metadata !DIExpression()), !dbg !10894
  %31 = and i32 %18, 255, !dbg !10921
  %32 = inttoptr i32 %8 to i32*, !dbg !10922
  store volatile i32 %31, i32* %32, align 65536, !dbg !10923
  %33 = lshr i32 %18, 8, !dbg !10924
  %34 = and i32 %33, 255, !dbg !10925
  %35 = or i32 %8, 4, !dbg !10926
  %36 = inttoptr i32 %35 to i32*, !dbg !10926
  store volatile i32 %34, i32* %36, align 4, !dbg !10927
  %37 = or i32 %8, 40, !dbg !10928
  %38 = inttoptr i32 %37 to i32*, !dbg !10928
  store volatile i32 %20, i32* %38, align 8, !dbg !10929
  %39 = or i32 %8, 44, !dbg !10930
  %40 = inttoptr i32 %39 to i32*, !dbg !10930
  store volatile i32 %24, i32* %40, align 4, !dbg !10931
  %41 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, i32 0, i32 %30, !dbg !10932
  %42 = load i16, i16* %41, align 2, !dbg !10932
  %43 = zext i16 %42 to i32, !dbg !10932
  %44 = or i32 %8, 88, !dbg !10933
  %45 = inttoptr i32 %44 to i32*, !dbg !10933
  store volatile i32 %43, i32* %45, align 8, !dbg !10934
  %46 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, i32 0, i32 %30, !dbg !10935
  %47 = load i16, i16* %46, align 2, !dbg !10935
  %48 = zext i16 %47 to i32, !dbg !10935
  %49 = or i32 %8, 84, !dbg !10936
  %50 = inttoptr i32 %49 to i32*, !dbg !10936
  store volatile i32 %48, i32* %50, align 4, !dbg !10937
  store volatile i32 %13, i32* %12, align 4, !dbg !10938
  %51 = or i32 %8, 8, !dbg !10939
  %52 = inttoptr i32 %51 to i32*, !dbg !10939
  store volatile i32 71, i32* %52, align 8, !dbg !10940
  %53 = inttoptr i32 %11 to i16*, !dbg !10941
  %54 = load volatile i16, i16* %53, align 4, !dbg !10941
  call void @llvm.dbg.value(metadata i16 %54, metadata !10882, metadata !DIExpression()), !dbg !10894
  %55 = and i16 %54, -64, !dbg !10942
  call void @llvm.dbg.value(metadata i16 %54, metadata !10882, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !10894
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %2), metadata !10882, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !10894
  %56 = and i16 %2, -61, !dbg !10943
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %56), metadata !10882, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !10894
  call void @llvm.dbg.value(metadata !DIArgList(i16 %55, i16 %4, i16 %56), metadata !10882, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !10894
  %57 = and i16 %4, -57, !dbg !10944
  call void @llvm.dbg.value(metadata i16 undef, metadata !10882, metadata !DIExpression()), !dbg !10894
  %58 = or i16 %56, %3, !dbg !10943
  %59 = or i16 %58, %57, !dbg !10944
  %60 = or i16 %59, %55, !dbg !10945
  call void @llvm.dbg.value(metadata i16 %60, metadata !10882, metadata !DIExpression()), !dbg !10894
  store volatile i16 %60, i16* %53, align 4, !dbg !10946
  ret void, !dbg !10947
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #5 !dbg !10948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10952, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.value(metadata i32 %1, metadata !10953, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.value(metadata i32* %2, metadata !10954, metadata !DIExpression()), !dbg !10955
  %4 = icmp eq i32 %0, 0, !dbg !10956
  %5 = icmp eq i32 %1, 0, !dbg !10958
  br i1 %4, label %6, label %16, !dbg !10959

6:                                                ; preds = %3
  br i1 %5, label %10, label %7, !dbg !10960

7:                                                ; preds = %6
  %8 = load volatile i16, i16* inttoptr (i32 -2097082568 to i16*), align 8, !dbg !10962
  %9 = zext i16 %8 to i32, !dbg !10962
  br label %26, !dbg !10965

10:                                               ; preds = %6
  %11 = load volatile i16, i16* inttoptr (i32 -2097082812 to i16*), align 4, !dbg !10966
  %12 = zext i16 %11 to i32, !dbg !10966
  store i32 %12, i32* %2, align 4, !dbg !10968
  %13 = load volatile i16, i16* inttoptr (i32 -2097082824 to i16*), align 8, !dbg !10969
  %14 = zext i16 %13 to i32, !dbg !10969
  %15 = sub nsw i32 %12, %14, !dbg !10970
  br label %26

16:                                               ; preds = %3
  br i1 %5, label %20, label %17, !dbg !10971

17:                                               ; preds = %16
  %18 = load volatile i16, i16* inttoptr (i32 -2097082056 to i16*), align 8, !dbg !10973
  %19 = zext i16 %18 to i32, !dbg !10973
  br label %26, !dbg !10976

20:                                               ; preds = %16
  %21 = load volatile i16, i16* inttoptr (i32 -2097082300 to i16*), align 4, !dbg !10977
  %22 = zext i16 %21 to i32, !dbg !10977
  store i32 %22, i32* %2, align 4, !dbg !10979
  %23 = load volatile i16, i16* inttoptr (i32 -2097082312 to i16*), align 8, !dbg !10980
  %24 = zext i16 %23 to i32, !dbg !10980
  %25 = sub nsw i32 %22, %24, !dbg !10981
  br label %26

26:                                               ; preds = %17, %20, %7, %10
  %27 = phi i32 [ %19, %17 ], [ %25, %20 ], [ %9, %7 ], [ %15, %10 ]
  store i32 %27, i32* %2, align 4, !dbg !10958
  ret void, !dbg !10982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Read_VFIFO_Data(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10987, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i8* %1, metadata !10988, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i32 %2, metadata !10989, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i32 0, metadata !10990, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i32 0, metadata !10990, metadata !DIExpression()), !dbg !10991
  %4 = icmp eq i32 %2, 0, !dbg !10992
  br i1 %4, label %15, label %5, !dbg !10995

5:                                                ; preds = %3, %12
  %6 = phi i32 [ %13, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !10990, metadata !DIExpression()), !dbg !10991
  switch i32 %0, label %12 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !10996

7:                                                ; preds = %5
  br label %8, !dbg !10998

8:                                                ; preds = %5, %7
  %9 = phi i8* [ inttoptr (i32 2030044416 to i8*), %7 ], [ inttoptr (i32 2030043904 to i8*), %5 ]
  %10 = load volatile i8, i8* %9, align 256, !dbg !11002
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !11002
  store i8 %10, i8* %11, align 1, !dbg !11002
  br label %12, !dbg !11003

12:                                               ; preds = %8, %5
  %13 = add nuw i32 %6, 1, !dbg !11003
  call void @llvm.dbg.value(metadata i32 %13, metadata !10990, metadata !DIExpression()), !dbg !10991
  %14 = icmp eq i32 %13, %2, !dbg !10992
  br i1 %14, label %15, label %5, !dbg !10995, !llvm.loop !11004

15:                                               ; preds = %12, %3
  ret void, !dbg !11006
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Write_VFIFO_Data(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11011, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i8* %1, metadata !11012, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i32 %2, metadata !11013, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i32 0, metadata !11014, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i32 0, metadata !11014, metadata !DIExpression()), !dbg !11015
  %4 = icmp eq i32 %2, 0, !dbg !11016
  br i1 %4, label %16, label %5, !dbg !11019

5:                                                ; preds = %3, %13
  %6 = phi i32 [ %14, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11014, metadata !DIExpression()), !dbg !11015
  switch i32 %0, label %13 [
    i32 0, label %7
    i32 1, label %10
  ], !dbg !11020

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !11022
  %9 = load i8, i8* %8, align 1, !dbg !11022
  store volatile i8 %9, i8* inttoptr (i32 2030043648 to i8*), align 512, !dbg !11025
  br label %13, !dbg !11026

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !11027
  %12 = load i8, i8* %11, align 1, !dbg !11027
  store volatile i8 %12, i8* inttoptr (i32 2030044160 to i8*), align 1024, !dbg !11030
  br label %13, !dbg !11031

13:                                               ; preds = %5, %7, %10
  %14 = add nuw i32 %6, 1, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %14, metadata !11014, metadata !DIExpression()), !dbg !11015
  %15 = icmp eq i32 %14, %2, !dbg !11016
  br i1 %15, label %16, label %5, !dbg !11019, !llvm.loop !11033

16:                                               ; preds = %13, %3
  ret void, !dbg !11035
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Tx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !11036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11040, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i8* %1, metadata !11041, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 %2, metadata !11042, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 %3, metadata !11043, metadata !DIExpression()), !dbg !11044
  switch i32 %0, label %9 [
    i32 0, label %6
    i32 1, label %5
  ], !dbg !11045

5:                                                ; preds = %4
  br label %6, !dbg !11046

6:                                                ; preds = %4, %5
  %7 = phi i32 [ 16, %5 ], [ 14, %4 ]
  %8 = ptrtoint i8* %1 to i32, !dbg !11050
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %8, i32 noundef %2, i32 noundef %7, i32 noundef 0, i32 noundef %3, i32 noundef 0) #18, !dbg !11050
  tail call void @DMA_Vfifo_Flush(i32 noundef %7) #18, !dbg !11050
  br label %9, !dbg !11051

9:                                                ; preds = %6, %4
  ret void, !dbg !11051
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_SetAdrs(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Flush(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Rx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #2 !dbg !11052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11056, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i8* %1, metadata !11057, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %2, metadata !11058, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %3, metadata !11059, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %4, metadata !11060, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.value(metadata i32 %5, metadata !11061, metadata !DIExpression()), !dbg !11062
  switch i32 %0, label %11 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !11063

7:                                                ; preds = %6
  br label %8, !dbg !11064

8:                                                ; preds = %6, %7
  %9 = phi i32 [ 17, %7 ], [ 15, %6 ]
  %10 = ptrtoint i8* %1 to i32, !dbg !11068
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %10, i32 noundef %2, i32 noundef %9, i32 noundef %3, i32 noundef %4, i32 noundef %5) #18, !dbg !11068
  tail call void @DMA_Vfifo_Flush(i32 noundef %9) #18, !dbg !11068
  br label %11, !dbg !11069

11:                                               ; preds = %8, %6
  ret void, !dbg !11069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #2 !dbg !11070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11074, metadata !DIExpression()), !dbg !11076
  call void @llvm.dbg.value(metadata void ()* %1, metadata !11075, metadata !DIExpression()), !dbg !11076
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !11077

3:                                                ; preds = %2
  br label %4, !dbg !11078

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef %5, void ()* noundef %1) #18, !dbg !11082
  br label %6, !dbg !11083

6:                                                ; preds = %4, %2
  ret void, !dbg !11083
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #2 !dbg !11084 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11086, metadata !DIExpression()), !dbg !11088
  call void @llvm.dbg.value(metadata void ()* %1, metadata !11087, metadata !DIExpression()), !dbg !11088
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !11089

3:                                                ; preds = %2
  br label %4, !dbg !11090

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_TO_Callback(i32 noundef %5, void ()* noundef %1) #18, !dbg !11094
  br label %6, !dbg !11095

6:                                                ; preds = %4, %2
  ret void, !dbg !11095
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_TO_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !11096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11098, metadata !DIExpression()), !dbg !11102
  %2 = icmp eq i32 %0, 0, !dbg !11103
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !11103
  call void @llvm.dbg.value(metadata i32 %3, metadata !11099, metadata !DIExpression()), !dbg !11102
  %4 = or i32 %3, 12, !dbg !11104
  %5 = inttoptr i32 %4 to i32*, !dbg !11104
  %6 = load volatile i32, i32* %5, align 4, !dbg !11104
  call void @llvm.dbg.value(metadata i32 %6, metadata !11101, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11102
  store volatile i32 191, i32* %5, align 4, !dbg !11105
  %7 = or i32 %3, 8, !dbg !11106
  %8 = inttoptr i32 %7 to i32*, !dbg !11106
  %9 = load volatile i32, i32* %8, align 8, !dbg !11106
  call void @llvm.dbg.value(metadata i32 %9, metadata !11100, metadata !DIExpression()), !dbg !11102
  %10 = and i32 %9, 65327, !dbg !11107
  %11 = or i32 %10, 208, !dbg !11107
  call void @llvm.dbg.value(metadata i32 %9, metadata !11100, metadata !DIExpression(DW_OP_constu, 208, DW_OP_or, DW_OP_stack_value)), !dbg !11102
  store volatile i32 %11, i32* %8, align 8, !dbg !11108
  %12 = or i32 %3, 68, !dbg !11109
  %13 = inttoptr i32 %12 to i32*, !dbg !11109
  store volatile i32 0, i32* %13, align 4, !dbg !11110
  store volatile i32 0, i32* %5, align 4, !dbg !11111
  %14 = or i32 %3, 16, !dbg !11112
  %15 = inttoptr i32 %14 to i32*, !dbg !11112
  store volatile i32 2, i32* %15, align 16, !dbg !11113
  %16 = and i32 %6, 65535, !dbg !11114
  store volatile i32 %16, i32* %5, align 4, !dbg !11115
  ret void, !dbg !11116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !11117 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11121, metadata !DIExpression()), !dbg !11128
  call void @llvm.dbg.value(metadata i8 %1, metadata !11122, metadata !DIExpression()), !dbg !11128
  call void @llvm.dbg.value(metadata i8 %2, metadata !11123, metadata !DIExpression()), !dbg !11128
  call void @llvm.dbg.value(metadata i8 %3, metadata !11124, metadata !DIExpression()), !dbg !11128
  %5 = icmp eq i32 %0, 0, !dbg !11129
  %6 = select i1 %5, i32 -2096955392, i32 -2096889856, !dbg !11129
  call void @llvm.dbg.value(metadata i32 %6, metadata !11125, metadata !DIExpression()), !dbg !11128
  %7 = or i32 %6, 12, !dbg !11130
  %8 = inttoptr i32 %7 to i32*, !dbg !11130
  %9 = load volatile i32, i32* %8, align 4, !dbg !11130
  call void @llvm.dbg.value(metadata i32 %9, metadata !11127, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11128
  store volatile i32 191, i32* %8, align 4, !dbg !11131
  %10 = zext i8 %1 to i32, !dbg !11132
  %11 = or i32 %6, 16, !dbg !11133
  %12 = inttoptr i32 %11 to i32*, !dbg !11133
  store volatile i32 %10, i32* %12, align 16, !dbg !11134
  %13 = or i32 %6, 20, !dbg !11135
  %14 = inttoptr i32 %13 to i32*, !dbg !11135
  store volatile i32 %10, i32* %14, align 4, !dbg !11136
  %15 = zext i8 %2 to i32, !dbg !11137
  %16 = or i32 %6, 24, !dbg !11138
  %17 = inttoptr i32 %16 to i32*, !dbg !11138
  store volatile i32 %15, i32* %17, align 8, !dbg !11139
  %18 = or i32 %6, 28, !dbg !11140
  %19 = inttoptr i32 %18 to i32*, !dbg !11140
  store volatile i32 %15, i32* %19, align 4, !dbg !11141
  %20 = or i32 %6, 8, !dbg !11142
  %21 = inttoptr i32 %20 to i32*, !dbg !11142
  %22 = load volatile i32, i32* %21, align 8, !dbg !11142
  call void @llvm.dbg.value(metadata i32 %22, metadata !11126, metadata !DIExpression()), !dbg !11128
  %23 = and i32 %22, 65525, !dbg !11143
  %24 = or i32 %23, 10, !dbg !11143
  call void @llvm.dbg.value(metadata i32 %22, metadata !11126, metadata !DIExpression(DW_OP_constu, 10, DW_OP_or, DW_OP_stack_value)), !dbg !11128
  store volatile i32 %24, i32* %21, align 8, !dbg !11144
  %25 = and i32 %9, 65535, !dbg !11145
  store volatile i32 %25, i32* %8, align 4, !dbg !11146
  %26 = zext i8 %3 to i32, !dbg !11147
  %27 = or i32 %6, 64, !dbg !11148
  %28 = inttoptr i32 %27 to i32*, !dbg !11148
  store volatile i32 %26, i32* %28, align 64, !dbg !11149
  %29 = or i32 %6, 68, !dbg !11150
  %30 = inttoptr i32 %29 to i32*, !dbg !11150
  store volatile i32 1, i32* %30, align 4, !dbg !11151
  ret void, !dbg !11152
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !11153 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11155, metadata !DIExpression()), !dbg !11158
  %2 = icmp eq i32 %0, 0, !dbg !11159
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !11159
  call void @llvm.dbg.value(metadata i32 %3, metadata !11156, metadata !DIExpression()), !dbg !11158
  %4 = or i32 %3, 12, !dbg !11160
  %5 = inttoptr i32 %4 to i32*, !dbg !11160
  %6 = load volatile i32, i32* %5, align 4, !dbg !11160
  call void @llvm.dbg.value(metadata i32 %6, metadata !11157, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11158
  store volatile i32 191, i32* %5, align 4, !dbg !11161
  %7 = or i32 %3, 8, !dbg !11162
  %8 = inttoptr i32 %7 to i32*, !dbg !11162
  store volatile i32 0, i32* %8, align 8, !dbg !11163
  store volatile i32 0, i32* %5, align 4, !dbg !11164
  %9 = and i32 %6, 65535, !dbg !11165
  store volatile i32 %9, i32* %5, align 4, !dbg !11166
  ret void, !dbg !11167
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(i32 noundef %0) local_unnamed_addr #0 !dbg !11168 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11170, metadata !DIExpression()), !dbg !11172
  %2 = icmp eq i32 %0, 0, !dbg !11173
  call void @llvm.dbg.value(metadata i32 undef, metadata !11171, metadata !DIExpression()), !dbg !11172
  %3 = select i1 %2, i32 -2096955320, i32 -2096889784, !dbg !11174
  %4 = inttoptr i32 %3 to i32*, !dbg !11174
  store volatile i32 1, i32* %4, align 8, !dbg !11175
  ret void, !dbg !11176
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(i32 noundef %0) local_unnamed_addr #0 !dbg !11177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11179, metadata !DIExpression()), !dbg !11183
  %2 = icmp eq i32 %0, 0, !dbg !11184
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !11184
  call void @llvm.dbg.value(metadata i32 %3, metadata !11180, metadata !DIExpression()), !dbg !11183
  %4 = or i32 %3, 12, !dbg !11185
  %5 = inttoptr i32 %4 to i32*, !dbg !11185
  %6 = load volatile i32, i32* %5, align 4, !dbg !11185
  call void @llvm.dbg.value(metadata i32 %6, metadata !11182, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11183
  store volatile i32 0, i32* %5, align 4, !dbg !11186
  %7 = or i32 %3, 4, !dbg !11187
  %8 = inttoptr i32 %7 to i32*, !dbg !11187
  %9 = load volatile i32, i32* %8, align 4, !dbg !11187
  call void @llvm.dbg.value(metadata i32 %9, metadata !11181, metadata !DIExpression()), !dbg !11183
  %10 = and i32 %9, 65533, !dbg !11188
  %11 = or i32 %10, 2, !dbg !11188
  call void @llvm.dbg.value(metadata i32 %9, metadata !11181, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !11183
  store volatile i32 %11, i32* %8, align 4, !dbg !11189
  %12 = and i32 %6, 65535, !dbg !11190
  store volatile i32 %12, i32* %5, align 4, !dbg !11191
  %13 = or i32 %3, 72, !dbg !11192
  %14 = inttoptr i32 %13 to i32*, !dbg !11192
  store volatile i32 1, i32* %14, align 8, !dbg !11193
  ret void, !dbg !11194
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_mask_send_interrupt(i32 noundef %0) local_unnamed_addr #0 !dbg !11195 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11197, metadata !DIExpression()), !dbg !11201
  %2 = icmp eq i32 %0, 0, !dbg !11202
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !11202
  call void @llvm.dbg.value(metadata i32 %3, metadata !11198, metadata !DIExpression()), !dbg !11201
  %4 = or i32 %3, 12, !dbg !11203
  %5 = inttoptr i32 %4 to i32*, !dbg !11203
  %6 = load volatile i32, i32* %5, align 4, !dbg !11203
  call void @llvm.dbg.value(metadata i32 %6, metadata !11200, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11201
  store volatile i32 0, i32* %5, align 4, !dbg !11204
  %7 = or i32 %3, 4, !dbg !11205
  %8 = inttoptr i32 %7 to i32*, !dbg !11205
  %9 = load volatile i32, i32* %8, align 4, !dbg !11205
  call void @llvm.dbg.value(metadata i32 %9, metadata !11199, metadata !DIExpression()), !dbg !11201
  %10 = and i32 %9, 65533, !dbg !11206
  call void @llvm.dbg.value(metadata i32 %10, metadata !11199, metadata !DIExpression()), !dbg !11201
  store volatile i32 %10, i32* %8, align 4, !dbg !11207
  %11 = and i32 %6, 65535, !dbg !11208
  store volatile i32 %11, i32* %5, align 4, !dbg !11209
  %12 = or i32 %3, 72, !dbg !11210
  %13 = inttoptr i32 %12 to i32*, !dbg !11210
  store volatile i32 0, i32* %13, align 8, !dbg !11211
  ret void, !dbg !11212
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #2 !dbg !11213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11215, metadata !DIExpression()), !dbg !11219
  %2 = icmp eq i32 %0, 0, !dbg !11220
  %3 = select i1 %2, i32* inttoptr (i32 -2096955384 to i32*), i32* inttoptr (i32 -2096889848 to i32*)
  call void @llvm.dbg.value(metadata i32 undef, metadata !11216, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.value(metadata i32 undef, metadata !11217, metadata !DIExpression()), !dbg !11219
  %4 = load volatile i32, i32* %3, align 8, !dbg !11222
  call void @llvm.dbg.value(metadata i32 %4, metadata !11218, metadata !DIExpression()), !dbg !11219
  %5 = and i32 %4, 63, !dbg !11223
  %6 = icmp eq i32 %5, 2, !dbg !11224
  br i1 %6, label %7, label %10, !dbg !11224

7:                                                ; preds = %1
  %8 = xor i1 %2, true
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !11216, metadata !DIExpression()), !dbg !11219
  tail call void @uart_send_handler(i32 noundef %9) #18, !dbg !11225
  br label %10, !dbg !11227

10:                                               ; preds = %1, %7
  ret void, !dbg !11228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(i32 noundef %0) local_unnamed_addr #0 !dbg !11229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11231, metadata !DIExpression()), !dbg !11233
  %2 = icmp eq i32 %0, 0, !dbg !11234
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !11234
  call void @llvm.dbg.value(metadata i32 %3, metadata !11232, metadata !DIExpression()), !dbg !11233
  %4 = or i32 %3, 12, !dbg !11235
  %5 = inttoptr i32 %4 to i32*, !dbg !11235
  store volatile i32 191, i32* %5, align 4, !dbg !11236
  %6 = or i32 %3, 8, !dbg !11237
  %7 = inttoptr i32 %6 to i32*, !dbg !11237
  store volatile i32 16, i32* %7, align 8, !dbg !11238
  %8 = or i32 %3, 16, !dbg !11239
  %9 = inttoptr i32 %8 to i32*, !dbg !11239
  store volatile i32 0, i32* %9, align 16, !dbg !11240
  %10 = or i32 %3, 24, !dbg !11241
  %11 = inttoptr i32 %10 to i32*, !dbg !11241
  store volatile i32 0, i32* %11, align 8, !dbg !11242
  store volatile i32 128, i32* %5, align 4, !dbg !11243
  %12 = inttoptr i32 %3 to i32*, !dbg !11244
  store volatile i32 0, i32* %12, align 65536, !dbg !11245
  %13 = or i32 %3, 4, !dbg !11246
  %14 = inttoptr i32 %13 to i32*, !dbg !11246
  store volatile i32 0, i32* %14, align 4, !dbg !11247
  store volatile i32 0, i32* %5, align 4, !dbg !11248
  store volatile i32 0, i32* %14, align 4, !dbg !11249
  store volatile i32 0, i32* %7, align 8, !dbg !11250
  store volatile i32 191, i32* %5, align 4, !dbg !11251
  store volatile i32 0, i32* %7, align 8, !dbg !11252
  store volatile i32 0, i32* %5, align 4, !dbg !11253
  store volatile i32 0, i32* %9, align 16, !dbg !11254
  %15 = or i32 %3, 28, !dbg !11255
  %16 = inttoptr i32 %15 to i32*, !dbg !11255
  store volatile i32 0, i32* %16, align 4, !dbg !11256
  %17 = or i32 %3, 36, !dbg !11257
  %18 = inttoptr i32 %17 to i32*, !dbg !11257
  store volatile i32 0, i32* %18, align 4, !dbg !11258
  %19 = or i32 %3, 40, !dbg !11259
  %20 = inttoptr i32 %19 to i32*, !dbg !11259
  store volatile i32 0, i32* %20, align 8, !dbg !11260
  %21 = or i32 %3, 44, !dbg !11261
  %22 = inttoptr i32 %21 to i32*, !dbg !11261
  store volatile i32 0, i32* %22, align 4, !dbg !11262
  %23 = or i32 %3, 52, !dbg !11263
  %24 = inttoptr i32 %23 to i32*, !dbg !11263
  store volatile i32 0, i32* %24, align 4, !dbg !11264
  %25 = or i32 %3, 60, !dbg !11265
  %26 = inttoptr i32 %25 to i32*, !dbg !11265
  store volatile i32 0, i32* %26, align 4, !dbg !11266
  %27 = or i32 %3, 64, !dbg !11267
  %28 = inttoptr i32 %27 to i32*, !dbg !11267
  store volatile i32 0, i32* %28, align 64, !dbg !11268
  %29 = or i32 %3, 68, !dbg !11269
  %30 = inttoptr i32 %29 to i32*, !dbg !11269
  store volatile i32 0, i32* %30, align 4, !dbg !11270
  %31 = or i32 %3, 72, !dbg !11271
  %32 = inttoptr i32 %31 to i32*, !dbg !11271
  store volatile i32 0, i32* %32, align 8, !dbg !11272
  %33 = or i32 %3, 76, !dbg !11273
  %34 = inttoptr i32 %33 to i32*, !dbg !11273
  store volatile i32 0, i32* %34, align 4, !dbg !11274
  %35 = or i32 %3, 80, !dbg !11275
  %36 = inttoptr i32 %35 to i32*, !dbg !11275
  store volatile i32 0, i32* %36, align 16, !dbg !11276
  %37 = or i32 %3, 84, !dbg !11277
  %38 = inttoptr i32 %37 to i32*, !dbg !11277
  store volatile i32 0, i32* %38, align 4, !dbg !11278
  %39 = or i32 %3, 88, !dbg !11279
  %40 = inttoptr i32 %39 to i32*, !dbg !11279
  store volatile i32 0, i32* %40, align 8, !dbg !11280
  %41 = or i32 %3, 96, !dbg !11281
  %42 = inttoptr i32 %41 to i32*, !dbg !11281
  store volatile i32 0, i32* %42, align 32, !dbg !11282
  ret void, !dbg !11283
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(i32 noundef %0) local_unnamed_addr #0 !dbg !11284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11286, metadata !DIExpression()), !dbg !11288
  %2 = icmp eq i32 %0, 0, !dbg !11289
  call void @llvm.dbg.value(metadata i32 undef, metadata !11287, metadata !DIExpression()), !dbg !11288
  %3 = select i1 %2, i32 -2096955372, i32 -2096889836
  %4 = inttoptr i32 %3 to i32*
  br label %5, !dbg !11290

5:                                                ; preds = %5, %1
  %6 = load volatile i32, i32* %4, align 4, !dbg !11291
  %7 = and i32 %6, 64, !dbg !11292
  %8 = icmp eq i32 %7, 0, !dbg !11293
  br i1 %8, label %5, label %9, !dbg !11290, !llvm.loop !11294

9:                                                ; preds = %5
  ret void, !dbg !11296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_fatal_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #2 !dbg !11297 {
  %4 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11301, metadata !DIExpression()), !dbg !11311
  call void @llvm.dbg.value(metadata i32 %1, metadata !11302, metadata !DIExpression()), !dbg !11311
  call void @llvm.dbg.value(metadata i8* %2, metadata !11303, metadata !DIExpression()), !dbg !11311
  %5 = bitcast %union.anon* %4 to i8*, !dbg !11312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !11312
  call void @llvm.dbg.declare(metadata %union.anon* %4, metadata !11304, metadata !DIExpression()), !dbg !11313
  call void @llvm.va_start(i8* nonnull %5), !dbg !11314
  %6 = bitcast %union.anon* %4 to i32*, !dbg !11315
  %7 = load i32, i32* %6, align 4, !dbg !11315
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !11315
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #18, !dbg !11315
  call void @llvm.va_end(i8* nonnull %5), !dbg !11316
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !11317
  ret void, !dbg !11317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #2 !dbg !11318 {
  %4 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11320, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i32 %1, metadata !11321, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i8* %2, metadata !11322, metadata !DIExpression()), !dbg !11324
  %5 = bitcast %union.anon* %4 to i8*, !dbg !11325
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !11325
  call void @llvm.dbg.declare(metadata %union.anon* %4, metadata !11323, metadata !DIExpression()), !dbg !11326
  call void @llvm.va_start(i8* nonnull %5), !dbg !11327
  %6 = bitcast %union.anon* %4 to i32*, !dbg !11328
  %7 = load i32, i32* %6, align 4, !dbg !11328
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !11328
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 3, i8* noundef %2, [1 x i32] %8) #18, !dbg !11328
  call void @llvm.va_end(i8* nonnull %5), !dbg !11329
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !11330
  ret void, !dbg !11330
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #2 !dbg !11331 {
  %4 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11333, metadata !DIExpression()), !dbg !11337
  call void @llvm.dbg.value(metadata i32 %1, metadata !11334, metadata !DIExpression()), !dbg !11337
  call void @llvm.dbg.value(metadata i8* %2, metadata !11335, metadata !DIExpression()), !dbg !11337
  %5 = bitcast %union.anon* %4 to i8*, !dbg !11338
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !11338
  call void @llvm.dbg.declare(metadata %union.anon* %4, metadata !11336, metadata !DIExpression()), !dbg !11339
  call void @llvm.va_start(i8* nonnull %5), !dbg !11340
  %6 = bitcast %union.anon* %4 to i32*, !dbg !11341
  %7 = load i32, i32* %6, align 4, !dbg !11341
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !11341
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 2, i8* noundef %2, [1 x i32] %8) #18, !dbg !11341
  call void @llvm.va_end(i8* nonnull %5), !dbg !11342
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !11343
  ret void, !dbg !11343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #2 !dbg !11344 {
  %4 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11346, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.value(metadata i32 %1, metadata !11347, metadata !DIExpression()), !dbg !11350
  call void @llvm.dbg.value(metadata i8* %2, metadata !11348, metadata !DIExpression()), !dbg !11350
  %5 = bitcast %union.anon* %4 to i8*, !dbg !11351
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !11351
  call void @llvm.dbg.declare(metadata %union.anon* %4, metadata !11349, metadata !DIExpression()), !dbg !11352
  call void @llvm.va_start(i8* nonnull %5), !dbg !11353
  %6 = bitcast %union.anon* %4 to i32*, !dbg !11354
  %7 = load i32, i32* %6, align 4, !dbg !11354
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !11354
  call void @vprint_module_log(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %2, [1 x i32] %8) #18, !dbg !11354
  call void @llvm.va_end(i8* nonnull %5), !dbg !11355
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !11356
  ret void, !dbg !11356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_dump_internal(i8* noundef %0, i32 noundef %1, i8* noundef %2, i8* noundef %3, i32 noundef %4, ...) local_unnamed_addr #2 !dbg !11357 {
  %6 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11361, metadata !DIExpression()), !dbg !11367
  call void @llvm.dbg.value(metadata i32 %1, metadata !11362, metadata !DIExpression()), !dbg !11367
  call void @llvm.dbg.value(metadata i8* %2, metadata !11363, metadata !DIExpression()), !dbg !11367
  call void @llvm.dbg.value(metadata i8* %3, metadata !11364, metadata !DIExpression()), !dbg !11367
  call void @llvm.dbg.value(metadata i32 %4, metadata !11365, metadata !DIExpression()), !dbg !11367
  %7 = bitcast %union.anon* %6 to i8*, !dbg !11368
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !11368
  call void @llvm.dbg.declare(metadata %union.anon* %6, metadata !11366, metadata !DIExpression()), !dbg !11369
  call void @llvm.va_start(i8* nonnull %7), !dbg !11370
  %8 = bitcast %union.anon* %6 to i32*, !dbg !11371
  %9 = load i32, i32* %8, align 4, !dbg !11371
  %10 = insertvalue [1 x i32] poison, i32 %9, 0, !dbg !11371
  call void @vdump_module_buffer(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_hal to i8*), i8* noundef %0, i32 noundef %1, i32 noundef 1, i8* noundef %3, i32 noundef %4, i8* noundef %2, [1 x i32] %10) #18, !dbg !11371
  call void @llvm.va_end(i8* nonnull %7), !dbg !11372
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !11373
  ret void, !dbg !11373
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #2 !dbg !11374 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !11381
  call void @llvm.dbg.value(metadata i32 %1, metadata !11380, metadata !DIExpression()), !dbg !11382
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !11383, !range !8433
  %3 = icmp eq i8 %2, 0, !dbg !11383
  br i1 %3, label %5, label %4, !dbg !11385

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !11386
  br label %15, !dbg !11388

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !11389
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !11391
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #17, !dbg !11392
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11393
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !11394
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11395
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !11396
  call void @llvm.dbg.value(metadata i32 0, metadata !11379, metadata !DIExpression()), !dbg !11382
  br label %7, !dbg !11397

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !11379, metadata !DIExpression()), !dbg !11382
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %8, !dbg !11399
  store volatile i32 0, i32* %9, align 4, !dbg !11402
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %8, !dbg !11403
  store volatile i32 0, i32* %10, align 4, !dbg !11404
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !11405
  store i32 0, i32* %11, align 4, !dbg !11406
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !11407
  store i32 0, i32* %12, align 4, !dbg !11408
  %13 = add nuw nsw i32 %8, 1, !dbg !11409
  call void @llvm.dbg.value(metadata i32 %13, metadata !11379, metadata !DIExpression()), !dbg !11382
  %14 = icmp eq i32 %13, 16, !dbg !11410
  br i1 %14, label %15, label %7, !dbg !11397, !llvm.loop !11411

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !11382
  ret i32 %16, !dbg !11413
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #2 section ".ramTEXT" !dbg !11414 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !11417
  call void @llvm.dbg.value(metadata i32 %1, metadata !11416, metadata !DIExpression()), !dbg !11418
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11419
  %3 = and i32 %2, -31, !dbg !11419
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11419
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11420
  %5 = or i32 %4, 19, !dbg !11420
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11420
  %6 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11421
  %7 = and i32 %6, -31, !dbg !11421
  store volatile i32 %7, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11421
  %8 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11422
  %9 = or i32 %8, 3, !dbg !11422
  store volatile i32 %9, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11422
  tail call void asm sideeffect "isb", ""() #19, !dbg !11423, !srcloc !11427
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !11428
  ret i32 0, !dbg !11429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #2 !dbg !11430 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #17, !dbg !11433
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11434
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !11435
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11436
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !11437
  call void @llvm.dbg.value(metadata i32 0, metadata !11432, metadata !DIExpression()), !dbg !11438
  br label %2, !dbg !11439

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11432, metadata !DIExpression()), !dbg !11438
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %3, !dbg !11441
  store volatile i32 0, i32* %4, align 4, !dbg !11444
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %3, !dbg !11445
  store volatile i32 0, i32* %5, align 4, !dbg !11446
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !11447
  store i32 0, i32* %6, align 4, !dbg !11448
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !11449
  store i32 0, i32* %7, align 4, !dbg !11450
  %8 = add nuw nsw i32 %3, 1, !dbg !11451
  call void @llvm.dbg.value(metadata i32 %8, metadata !11432, metadata !DIExpression()), !dbg !11438
  %9 = icmp eq i32 %8, 16, !dbg !11452
  br i1 %9, label %10, label %2, !dbg !11439, !llvm.loop !11453

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !11455
  ret i32 0, !dbg !11456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #0 !dbg !11457 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11458
  %2 = and i32 %1, 768, !dbg !11460
  %3 = icmp eq i32 %2, 0, !dbg !11460
  br i1 %3, label %8, label %4, !dbg !11461

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11462
  %6 = or i32 %5, 13, !dbg !11462
  store volatile i32 %6, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11462
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11463
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11464
  br label %8, !dbg !11465

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !11466
  ret i32 %9, !dbg !11467
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #2 !dbg !11468 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !11471
  call void @llvm.dbg.value(metadata i32 %1, metadata !11470, metadata !DIExpression()), !dbg !11472
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11473
  %3 = and i32 %2, 1, !dbg !11475
  %4 = icmp eq i32 %3, 0, !dbg !11475
  br i1 %4, label %7, label %5, !dbg !11476

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #17, !dbg !11477
  br label %7, !dbg !11479

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11480
  %9 = and i32 %8, -2, !dbg !11480
  store volatile i32 %9, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11480
  %10 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11481
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11482
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !11483
  ret i32 0, !dbg !11484
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #0 !dbg !11485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11489, metadata !DIExpression()), !dbg !11490
  %2 = icmp ugt i32 %0, 15, !dbg !11491
  br i1 %2, label %13, label %3, !dbg !11493

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !11494
  %5 = load volatile i32, i32* %4, align 4, !dbg !11494
  %6 = and i32 %5, 256, !dbg !11496
  %7 = icmp eq i32 %6, 0, !dbg !11496
  br i1 %7, label %13, label %8, !dbg !11497

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !11498
  %10 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !11500
  %11 = or i32 %10, %9, !dbg !11500
  store volatile i32 %11, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !11500
  %12 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !11501
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !11502
  br label %13, !dbg !11503

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !11490
  ret i32 %14, !dbg !11504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #0 !dbg !11505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11507, metadata !DIExpression()), !dbg !11508
  %2 = icmp ugt i32 %0, 15, !dbg !11509
  br i1 %2, label %11, label %3, !dbg !11511

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !11512
  %5 = xor i32 %4, -1, !dbg !11513
  %6 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !11514
  %7 = and i32 %6, %5, !dbg !11514
  store volatile i32 %7, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !11514
  %8 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !11515
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !11516
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !11517
  store i32 0, i32* %9, align 4, !dbg !11518
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !11519
  store i32 0, i32* %10, align 4, !dbg !11520
  br label %11, !dbg !11521

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !11508
  ret i32 %12, !dbg !11522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #0 !dbg !11523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11528, metadata !DIExpression()), !dbg !11529
  %2 = icmp ugt i32 %0, 3, !dbg !11530
  br i1 %2, label %13, label %3, !dbg !11532

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11533
  %5 = and i32 %4, -769, !dbg !11533
  store volatile i32 %5, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11533
  %6 = shl nuw nsw i32 %0, 8, !dbg !11534
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11535
  %8 = or i32 %7, %6, !dbg !11535
  store volatile i32 %8, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11535
  %9 = icmp eq i32 %0, 0, !dbg !11536
  br i1 %9, label %10, label %11, !dbg !11538

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11539
  br label %11, !dbg !11541

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11542
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11543
  br label %13, !dbg !11544

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !11529
  ret i32 %14, !dbg !11545
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.xTIME_OUT* noundef readonly %1) local_unnamed_addr #2 !dbg !11546 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11557, metadata !DIExpression()), !dbg !11559
  call void @llvm.dbg.value(metadata %struct.xTIME_OUT* %1, metadata !11558, metadata !DIExpression()), !dbg !11559
  %3 = icmp ugt i32 %0, 15, !dbg !11560
  br i1 %3, label %30, label %4, !dbg !11562

4:                                                ; preds = %2
  %5 = icmp eq %struct.xTIME_OUT* %1, null, !dbg !11563
  br i1 %5, label %30, label %6, !dbg !11565

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %1, i32 0, i32 0, !dbg !11566
  %8 = load i32, i32* %7, align 4, !dbg !11566
  %9 = and i32 %8, 4095, !dbg !11568
  %10 = icmp eq i32 %9, 0, !dbg !11568
  br i1 %10, label %12, label %11, !dbg !11569

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.227, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.228, i32 0, i32 0)) #20, !dbg !11570
  unreachable, !dbg !11570

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.xTIME_OUT, %struct.xTIME_OUT* %1, i32 0, i32 1, !dbg !11572
  %14 = load i32, i32* %13, align 4, !dbg !11572
  %15 = and i32 %14, 4095, !dbg !11574
  %16 = icmp eq i32 %15, 0, !dbg !11574
  br i1 %16, label %18, label %17, !dbg !11575

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.227, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.228, i32 0, i32 0)) #20, !dbg !11576
  unreachable, !dbg !11576

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !11578
  store volatile i32 %8, i32* %19, align 4, !dbg !11579
  %20 = load i32, i32* %7, align 4, !dbg !11580
  %21 = load i32, i32* %13, align 4, !dbg !11581
  %22 = add i32 %21, %20, !dbg !11582
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %0, !dbg !11583
  store volatile i32 %22, i32* %23, align 4, !dbg !11584
  %24 = load volatile i32, i32* %19, align 4, !dbg !11585
  %25 = or i32 %24, 256, !dbg !11585
  store volatile i32 %25, i32* %19, align 4, !dbg !11585
  %26 = load volatile i32, i32* %19, align 4, !dbg !11586
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !11587
  store i32 %26, i32* %27, align 4, !dbg !11588
  %28 = load volatile i32, i32* %23, align 4, !dbg !11589
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !11590
  store i32 %28, i32* %29, align 4, !dbg !11591
  br label %30, !dbg !11592

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !11559
  ret i32 %31, !dbg !11593
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !11594 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11598, metadata !DIExpression()), !dbg !11600
  %2 = and i32 %0, 31, !dbg !11601
  %3 = icmp eq i32 %2, 0, !dbg !11601
  br i1 %3, label %4, label %9, !dbg !11603

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !11604
  call void @llvm.dbg.value(metadata i32 %5, metadata !11599, metadata !DIExpression()), !dbg !11600
  %6 = and i32 %0, -32, !dbg !11605
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11606
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11607
  %8 = or i32 %7, 5, !dbg !11607
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11607
  tail call void asm sideeffect "isb", ""() #19, !dbg !11608, !srcloc !11427
  tail call void @restore_interrupt_mask(i32 noundef %5) #18, !dbg !11610
  br label %9, !dbg !11611

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !11600
  ret i32 %10, !dbg !11612
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".ramTEXT" !dbg !11613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11617, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 %1, metadata !11618, metadata !DIExpression()), !dbg !11621
  %3 = add i32 %1, %0, !dbg !11622
  call void @llvm.dbg.value(metadata i32 %3, metadata !11620, metadata !DIExpression()), !dbg !11621
  %4 = or i32 %1, %0, !dbg !11623
  %5 = and i32 %4, 31, !dbg !11623
  %6 = icmp eq i32 %5, 0, !dbg !11623
  br i1 %6, label %7, label %16, !dbg !11623

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !11625
  call void @llvm.dbg.value(metadata i32 %8, metadata !11619, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i32 %0, metadata !11617, metadata !DIExpression()), !dbg !11621
  %9 = icmp ugt i32 %3, %0, !dbg !11626
  br i1 %9, label %10, label %15, !dbg !11627

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11617, metadata !DIExpression()), !dbg !11621
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #17, !dbg !11628
  %13 = add i32 %11, 32, !dbg !11630
  call void @llvm.dbg.value(metadata i32 %13, metadata !11617, metadata !DIExpression()), !dbg !11621
  %14 = icmp ult i32 %13, %3, !dbg !11626
  br i1 %14, label %10, label %15, !dbg !11627, !llvm.loop !11631

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #19, !dbg !11633, !srcloc !11427
  tail call void @restore_interrupt_mask(i32 noundef %8) #18, !dbg !11635
  br label %16, !dbg !11636

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !11621
  ret i32 %17, !dbg !11637
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #2 section ".ramTEXT" !dbg !11638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11640, metadata !DIExpression()), !dbg !11642
  %2 = and i32 %0, 31, !dbg !11643
  %3 = icmp eq i32 %2, 0, !dbg !11643
  br i1 %3, label %4, label %9, !dbg !11645

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !11646
  call void @llvm.dbg.value(metadata i32 %5, metadata !11641, metadata !DIExpression()), !dbg !11642
  %6 = and i32 %0, -32, !dbg !11647
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11648
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11649
  %8 = or i32 %7, 21, !dbg !11649
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11649
  tail call void asm sideeffect "isb", ""() #19, !dbg !11650, !srcloc !11427
  tail call void @restore_interrupt_mask(i32 noundef %5) #18, !dbg !11652
  br label %9, !dbg !11653

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !11642
  ret i32 %10, !dbg !11654
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".ramTEXT" !dbg !11655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11657, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.value(metadata i32 %1, metadata !11658, metadata !DIExpression()), !dbg !11661
  %3 = add i32 %1, %0, !dbg !11662
  call void @llvm.dbg.value(metadata i32 %3, metadata !11660, metadata !DIExpression()), !dbg !11661
  %4 = or i32 %1, %0, !dbg !11663
  %5 = and i32 %4, 31, !dbg !11663
  %6 = icmp eq i32 %5, 0, !dbg !11663
  br i1 %6, label %7, label %16, !dbg !11663

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !11665
  call void @llvm.dbg.value(metadata i32 %8, metadata !11659, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.value(metadata i32 %0, metadata !11657, metadata !DIExpression()), !dbg !11661
  %9 = icmp ugt i32 %3, %0, !dbg !11666
  br i1 %9, label %10, label %15, !dbg !11667

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11657, metadata !DIExpression()), !dbg !11661
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #17, !dbg !11668
  %13 = add i32 %11, 32, !dbg !11670
  call void @llvm.dbg.value(metadata i32 %13, metadata !11657, metadata !DIExpression()), !dbg !11661
  %14 = icmp ult i32 %13, %3, !dbg !11666
  br i1 %14, label %10, label %15, !dbg !11667, !llvm.loop !11671

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #19, !dbg !11673, !srcloc !11427
  tail call void @restore_interrupt_mask(i32 noundef %8) #18, !dbg !11675
  br label %16, !dbg !11676

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !11661
  ret i32 %17, !dbg !11677
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #2 section ".ramTEXT" !dbg !11678 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %1, metadata !11680, metadata !DIExpression()), !dbg !11682
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11683
  %3 = and i32 %2, -31, !dbg !11683
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11683
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11684
  %5 = or i32 %4, 19, !dbg !11684
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !11684
  tail call void asm sideeffect "isb", ""() #19, !dbg !11685, !srcloc !11427
  tail call void @restore_interrupt_mask(i32 noundef %1) #18, !dbg !11687
  ret i32 0, !dbg !11688
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #0 !dbg !11689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11693, metadata !DIExpression()), !dbg !11695
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !11696
  %3 = and i32 %2, 8, !dbg !11698
  %4 = icmp eq i32 %3, 0, !dbg !11698
  br i1 %4, label %23, label %5, !dbg !11699

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11694, metadata !DIExpression()), !dbg !11695
  %7 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !11700
  %8 = shl nuw nsw i32 1, %6, !dbg !11705
  %9 = and i32 %7, %8, !dbg !11706
  %10 = icmp eq i32 %9, 0, !dbg !11706
  br i1 %10, label %20, label %11, !dbg !11707

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %6, !dbg !11708
  %13 = load volatile i32, i32* %12, align 4, !dbg !11708
  %14 = and i32 %13, -257, !dbg !11711
  %15 = icmp ugt i32 %14, %0, !dbg !11712
  br i1 %15, label %20, label %16, !dbg !11713

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %6, !dbg !11714
  %18 = load volatile i32, i32* %17, align 4, !dbg !11714
  %19 = icmp ugt i32 %18, %0, !dbg !11715
  br i1 %19, label %23, label %20, !dbg !11716

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !11717
  call void @llvm.dbg.value(metadata i32 %21, metadata !11694, metadata !DIExpression()), !dbg !11695
  %22 = icmp eq i32 %21, 16, !dbg !11718
  br i1 %22, label %23, label %5, !dbg !11719, !llvm.loop !11720

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !11695
  ret i1 %24, !dbg !11722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_nvic_init() local_unnamed_addr #13 !dbg !11723 {
  ret i32 0, !dbg !11727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #0 !dbg !11728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11732, metadata !DIExpression()), !dbg !11734
  call void @llvm.dbg.value(metadata i32 -1, metadata !11733, metadata !DIExpression()), !dbg !11734
  %2 = icmp ugt i32 %0, 95, !dbg !11735
  br i1 %2, label %4, label %3, !dbg !11735

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #17, !dbg !11737
  call void @llvm.dbg.value(metadata i32 0, metadata !11733, metadata !DIExpression()), !dbg !11734
  br label %4, !dbg !11739

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !11734
  ret i32 %5, !dbg !11740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #0 !dbg !11741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11745, metadata !DIExpression()), !dbg !11746
  %2 = and i32 %0, 31, !dbg !11747
  %3 = shl nuw i32 1, %2, !dbg !11748
  %4 = lshr i32 %0, 5, !dbg !11749
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !11750
  store volatile i32 %3, i32* %5, align 4, !dbg !11751
  ret void, !dbg !11752
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #0 !dbg !11753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11755, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.value(metadata i32 -1, metadata !11756, metadata !DIExpression()), !dbg !11757
  %2 = icmp ugt i32 %0, 95, !dbg !11758
  br i1 %2, label %4, label %3, !dbg !11758

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #17, !dbg !11760
  call void @llvm.dbg.value(metadata i32 0, metadata !11756, metadata !DIExpression()), !dbg !11757
  br label %4, !dbg !11762

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !11757
  ret i32 %5, !dbg !11763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #0 !dbg !11764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11766, metadata !DIExpression()), !dbg !11767
  %2 = and i32 %0, 31, !dbg !11768
  %3 = shl nuw i32 1, %2, !dbg !11769
  %4 = lshr i32 %0, 5, !dbg !11770
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !11771
  store volatile i32 %3, i32* %5, align 4, !dbg !11772
  ret void, !dbg !11773
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !11774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11778, metadata !DIExpression()), !dbg !11780
  call void @llvm.dbg.value(metadata i32 255, metadata !11779, metadata !DIExpression()), !dbg !11780
  %2 = icmp ugt i32 %0, 95, !dbg !11781
  br i1 %2, label %5, label %3, !dbg !11781

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #17, !dbg !11783
  call void @llvm.dbg.value(metadata i32 %4, metadata !11779, metadata !DIExpression()), !dbg !11780
  br label %5, !dbg !11785

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !11780
  ret i32 %6, !dbg !11786
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !11787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11791, metadata !DIExpression()), !dbg !11792
  %2 = lshr i32 %0, 5, !dbg !11793
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !11794
  %4 = load volatile i32, i32* %3, align 4, !dbg !11794
  %5 = and i32 %0, 31, !dbg !11795
  %6 = lshr i32 %4, %5, !dbg !11796
  %7 = and i32 %6, 1, !dbg !11796
  ret i32 %7, !dbg !11797
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #0 !dbg !11798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11800, metadata !DIExpression()), !dbg !11802
  call void @llvm.dbg.value(metadata i32 -1, metadata !11801, metadata !DIExpression()), !dbg !11802
  %2 = icmp ugt i32 %0, 95, !dbg !11803
  br i1 %2, label %4, label %3, !dbg !11803

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #17, !dbg !11805
  call void @llvm.dbg.value(metadata i32 0, metadata !11801, metadata !DIExpression()), !dbg !11802
  br label %4, !dbg !11807

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !11802
  ret i32 %5, !dbg !11808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #0 !dbg !11809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11811, metadata !DIExpression()), !dbg !11812
  %2 = and i32 %0, 31, !dbg !11813
  %3 = shl nuw i32 1, %2, !dbg !11814
  %4 = lshr i32 %0, 5, !dbg !11815
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !11816
  store volatile i32 %3, i32* %5, align 4, !dbg !11817
  ret void, !dbg !11818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #0 !dbg !11819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11821, metadata !DIExpression()), !dbg !11823
  call void @llvm.dbg.value(metadata i32 -1, metadata !11822, metadata !DIExpression()), !dbg !11823
  %2 = icmp ugt i32 %0, 95, !dbg !11824
  br i1 %2, label %4, label %3, !dbg !11824

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #17, !dbg !11826
  call void @llvm.dbg.value(metadata i32 0, metadata !11822, metadata !DIExpression()), !dbg !11823
  br label %4, !dbg !11828

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !11823
  ret i32 %5, !dbg !11829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #0 !dbg !11830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11832, metadata !DIExpression()), !dbg !11833
  %2 = and i32 %0, 31, !dbg !11834
  %3 = shl nuw i32 1, %2, !dbg !11835
  %4 = lshr i32 %0, 5, !dbg !11836
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !11837
  store volatile i32 %3, i32* %5, align 4, !dbg !11838
  ret void, !dbg !11839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11844, metadata !DIExpression()), !dbg !11847
  call void @llvm.dbg.value(metadata i32 %1, metadata !11845, metadata !DIExpression()), !dbg !11847
  call void @llvm.dbg.value(metadata i32 -1, metadata !11846, metadata !DIExpression()), !dbg !11847
  %3 = icmp ugt i32 %0, 95, !dbg !11848
  br i1 %3, label %5, label %4, !dbg !11848

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #17, !dbg !11850
  call void @llvm.dbg.value(metadata i32 0, metadata !11846, metadata !DIExpression()), !dbg !11847
  br label %5, !dbg !11852

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !11847
  ret i32 %6, !dbg !11853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #0 !dbg !11854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11858, metadata !DIExpression()), !dbg !11860
  call void @llvm.dbg.value(metadata i32 %1, metadata !11859, metadata !DIExpression()), !dbg !11860
  %3 = trunc i32 %1 to i8, !dbg !11861
  %4 = shl i8 %3, 5, !dbg !11861
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !11864
  store volatile i8 %4, i8* %5, align 1, !dbg !11865
  ret void, !dbg !11866
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #5 !dbg !11867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11869, metadata !DIExpression()), !dbg !11871
  call void @llvm.dbg.value(metadata i32 68, metadata !11870, metadata !DIExpression()), !dbg !11871
  %2 = icmp ugt i32 %0, 95, !dbg !11872
  br i1 %2, label %5, label %3, !dbg !11872

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #17, !dbg !11874
  call void @llvm.dbg.value(metadata i32 %4, metadata !11870, metadata !DIExpression()), !dbg !11871
  br label %5, !dbg !11876

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !11871
  ret i32 %6, !dbg !11877
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #5 !dbg !11878 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11880, metadata !DIExpression()), !dbg !11881
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !11882
  %3 = load volatile i8, i8* %2, align 1, !dbg !11882
  %4 = lshr i8 %3, 5, !dbg !11885
  %5 = zext i8 %4 to i32, !dbg !11885
  ret i32 %5, !dbg !11886
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #2 section ".ramTEXT" !dbg !11887 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11889, metadata !DIExpression()), !dbg !11891
  tail call void @Flash_ReturnReady() #18, !dbg !11892
  %1 = tail call fastcc i32 @get_current_irq() #17, !dbg !11893
  call void @llvm.dbg.value(metadata i32 %1, metadata !11890, metadata !DIExpression()), !dbg !11891
  %2 = icmp ugt i32 %1, 95, !dbg !11894
  br i1 %2, label %12, label %3, !dbg !11894

3:                                                ; preds = %0
  %4 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !11896
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !11896
  %6 = icmp eq void (i32)* %5, null, !dbg !11898
  br i1 %6, label %7, label %8, !dbg !11899

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !11889, metadata !DIExpression()), !dbg !11891
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 194, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.239, i32 0, i32 0)) #18, !dbg !11900
  br label %12, !dbg !11902

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #17, !dbg !11903
  %10 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !11905
  store i32 %9, i32* %10, align 4, !dbg !11906
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !11907
  tail call void %11(i32 noundef %1) #18, !dbg !11908
  call void @llvm.dbg.value(metadata i32 0, metadata !11889, metadata !DIExpression()), !dbg !11891
  br label %12, !dbg !11909

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !11891
  ret i32 %13, !dbg !11910
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #5 !dbg !11911 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11914
  %2 = and i32 %1, 511, !dbg !11915
  call void @llvm.dbg.value(metadata i32 %2, metadata !11913, metadata !DIExpression()), !dbg !11916
  %3 = add nsw i32 %2, -16, !dbg !11917
  ret i32 %3, !dbg !11918
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #5 !dbg !11919 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11920
  %2 = lshr i32 %1, 22, !dbg !11921
  %3 = and i32 %2, 1, !dbg !11921
  ret i32 %3, !dbg !11922
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #2 !dbg !11923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11928, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !11929, metadata !DIExpression()), !dbg !11931
  %3 = icmp ugt i32 %0, 95, !dbg !11932
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !11932
  br i1 %5, label %10, label %6, !dbg !11932

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !11934
  call void @llvm.dbg.value(metadata i32 %7, metadata !11930, metadata !DIExpression()), !dbg !11931
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #17, !dbg !11935
  %8 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !11936
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !11937
  %9 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !11938
  store i32 0, i32* %9, align 4, !dbg !11939
  tail call void @restore_interrupt_mask(i32 noundef %7) #18, !dbg !11940
  br label %10, !dbg !11941

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !11931
  ret i32 %11, !dbg !11942
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #2 !dbg !11943 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !11947, metadata !DIExpression()), !dbg !11948
  %2 = tail call i32 @save_and_set_interrupt_mask() #18, !dbg !11949
  store i32 %2, i32* %0, align 4, !dbg !11950
  ret i32 0, !dbg !11951
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #2 !dbg !11952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11956, metadata !DIExpression()), !dbg !11957
  tail call void @restore_interrupt_mask(i32 noundef %0) #18, !dbg !11958
  ret i32 0, !dbg !11959
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #2 !dbg !11960 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11965, metadata !DIExpression()), !dbg !11966
  %1 = tail call i32 @flash_sfc_config(i8 noundef zeroext 0) #18, !dbg !11967
  call void @llvm.dbg.value(metadata i32 %1, metadata !11965, metadata !DIExpression()), !dbg !11966
  %2 = ashr i32 %1, 31, !dbg !11968
  ret i32 %2, !dbg !11969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #13 !dbg !11970 {
  ret i32 0, !dbg !11971
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !11972 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11977, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i32 %1, metadata !11978, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.value(metadata i32 -1, metadata !11979, metadata !DIExpression()), !dbg !11980
  %3 = tail call i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) #18, !dbg !11981
  call void @llvm.dbg.value(metadata i32 %3, metadata !11979, metadata !DIExpression()), !dbg !11980
  %4 = ashr i32 %3, 31, !dbg !11982
  ret i32 %4, !dbg !11983
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !11984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11988, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.value(metadata i8* %1, metadata !11989, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.value(metadata i32 %2, metadata !11990, metadata !DIExpression()), !dbg !11991
  %4 = add i32 %0, 268435456, !dbg !11992
  %5 = inttoptr i32 %4 to i8*, !dbg !11993
  tail call void @hal_flash_direct_read(i8* noundef %5, i8* noundef %1, i32 noundef %2) #18, !dbg !11994
  ret i32 0, !dbg !11995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !11996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12000, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i8* %1, metadata !12001, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i32 %2, metadata !12002, metadata !DIExpression()), !dbg !12004
  %4 = tail call i32 @flash_sfc_write(i32 noundef %0, i32 noundef %2, i8* noundef %1) #18, !dbg !12005
  call void @llvm.dbg.value(metadata i32 %4, metadata !12003, metadata !DIExpression()), !dbg !12004
  %5 = ashr i32 %4, 31, !dbg !12006
  ret i32 %5, !dbg !12007
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #2 !dbg !12008 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12013, metadata !DIExpression()), !dbg !12014
  %2 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !12015
  %3 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !12017
  %4 = load i8, i8* %3, align 4, !dbg !12017, !range !8433
  %5 = icmp eq i8 %4, 0, !dbg !12017
  br i1 %5, label %6, label %12, !dbg !12018

6:                                                ; preds = %1
  %7 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #17, !dbg !12019
  br i1 %7, label %9, label %8, !dbg !12021

8:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 89, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.242, i32 0, i32 0), i32 noundef %0) #18, !dbg !12022
  br label %12, !dbg !12024

9:                                                ; preds = %6
  %10 = bitcast %struct.hal_gpt_context_t* %2 to i8*, !dbg !12025
  %11 = tail call i8* @memset(i8* noundef nonnull %10, i32 noundef 0, i32 noundef 16) #18, !dbg !12026
  store i8 1, i8* %3, align 4, !dbg !12027
  br label %12, !dbg !12028

12:                                               ; preds = %1, %9, %8
  %13 = phi i32 [ -2, %8 ], [ 0, %9 ], [ -3, %1 ], !dbg !12014
  ret i32 %13, !dbg !12029
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #13 !dbg !12030 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12034, metadata !DIExpression()), !dbg !12035
  %2 = icmp ult i32 %0, 5, !dbg !12036
  %3 = icmp ne i32 %0, 2
  %4 = and i1 %2, %3, !dbg !12038
  ret i1 %4, !dbg !12039
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #2 !dbg !12040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12042, metadata !DIExpression()), !dbg !12043
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #17, !dbg !12044
  br i1 %2, label %4, label %3, !dbg !12046

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 104, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.242, i32 0, i32 0), i32 noundef %0) #18, !dbg !12047
  br label %14, !dbg !12049

4:                                                ; preds = %1
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !12050
  %6 = getelementptr inbounds %struct.hal_gpt_context_t, %struct.hal_gpt_context_t* %5, i32 0, i32 0, !dbg !12052
  %7 = load i32, i32* %6, align 4, !dbg !12052
  %8 = icmp eq i32 %7, 0, !dbg !12053
  br i1 %8, label %10, label %9, !dbg !12054

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 109, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.243, i32 0, i32 0), i32 noundef %0) #18, !dbg !12055
  br label %14, !dbg !12057

10:                                               ; preds = %4
  %11 = bitcast %struct.hal_gpt_context_t* %5 to i8*, !dbg !12058
  %12 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 0, i32 noundef 16) #18, !dbg !12059
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !12060
  store i8 0, i8* %13, align 4, !dbg !12061
  br label %14, !dbg !12062

14:                                               ; preds = %10, %9, %3
  %15 = phi i32 [ -2, %3 ], [ -3, %9 ], [ 0, %10 ], !dbg !12043
  ret i32 %15, !dbg !12063
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #2 !dbg !12064 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12069, metadata !DIExpression()), !dbg !12071
  call void @llvm.dbg.value(metadata i32* %1, metadata !12070, metadata !DIExpression()), !dbg !12071
  switch i32 %0, label %24 [
    i32 0, label %3
    i32 1, label %9
    i32 2, label %18
  ], !dbg !12072

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !12073
  %5 = icmp eq i32 %4, 1, !dbg !12077
  br i1 %5, label %7, label %6, !dbg !12078

6:                                                ; preds = %3
  tail call void @CM4_GPT2Init() #18, !dbg !12079
  br label %7, !dbg !12081

7:                                                ; preds = %6, %3
  %8 = tail call i32 @get_current_count() #18, !dbg !12082
  store i32 %8, i32* %1, align 4, !dbg !12083
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !12084
  br label %25, !dbg !12085

9:                                                ; preds = %2
  %10 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !12086
  %11 = icmp eq i32 %10, 1, !dbg !12090
  br i1 %11, label %13, label %12, !dbg !12091

12:                                               ; preds = %9
  tail call void @CM4_GPT4Init() #18, !dbg !12092
  br label %13, !dbg !12094

13:                                               ; preds = %12, %9
  %14 = tail call i32 @get_current_gpt4_count() #18, !dbg !12095
  %15 = tail call i32 @top_mcu_freq_get() #18, !dbg !12096
  %16 = udiv i32 %15, 1000000, !dbg !12097
  %17 = udiv i32 %14, %16, !dbg !12098
  store i32 %17, i32* %1, align 4, !dbg !12099
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !12100
  br label %25, !dbg !12101

18:                                               ; preds = %2
  %19 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !12102
  %20 = icmp eq i32 %19, 1, !dbg !12106
  br i1 %20, label %22, label %21, !dbg !12107

21:                                               ; preds = %18
  tail call void @CM4_GPT4Init() #18, !dbg !12108
  br label %22, !dbg !12110

22:                                               ; preds = %21, %18
  %23 = tail call i32 @get_current_gpt4_count() #18, !dbg !12111
  store i32 %23, i32* %1, align 4, !dbg !12112
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !12113
  br label %25

24:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_free_run_count, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.246, i32 0, i32 0), i32 noundef %0) #18, !dbg !12114
  br label %25, !dbg !12116

25:                                               ; preds = %7, %22, %13, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %13 ], [ 0, %22 ], [ 0, %7 ], !dbg !12071
  ret i32 %26, !dbg !12117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #8 !dbg !12118 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12122, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.value(metadata i32 %1, metadata !12123, metadata !DIExpression()), !dbg !12125
  call void @llvm.dbg.value(metadata i32* %2, metadata !12124, metadata !DIExpression()), !dbg !12125
  %4 = icmp eq i32* %2, null, !dbg !12126
  br i1 %4, label %7, label %5, !dbg !12128

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !12129
  store i32 %6, i32* %2, align 4, !dbg !12129
  br label %7, !dbg !12131

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !12125
  ret i32 %8, !dbg !12132
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #2 !dbg !12133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12138, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.value(metadata i32* %1, metadata !12139, metadata !DIExpression()), !dbg !12140
  %3 = icmp ugt i32 %0, 4, !dbg !12141
  br i1 %3, label %4, label %5, !dbg !12143

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_running_status, i32 0, i32 0), i32 noundef 167, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.247, i32 0, i32 0), i32 noundef %0) #18, !dbg !12144
  br label %8, !dbg !12146

5:                                                ; preds = %2
  %6 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !12147
  %7 = load i32, i32* %6, align 4, !dbg !12147
  store i32 %7, i32* %1, align 4, !dbg !12148
  br label %8, !dbg !12149

8:                                                ; preds = %5, %4
  %9 = phi i32 [ -2, %4 ], [ 0, %5 ], !dbg !12140
  ret i32 %9, !dbg !12150
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #2 !dbg !12151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12155, metadata !DIExpression()), !dbg !12158
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !12156, metadata !DIExpression()), !dbg !12158
  call void @llvm.dbg.value(metadata i8* %2, metadata !12157, metadata !DIExpression()), !dbg !12158
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #17, !dbg !12159
  br i1 %4, label %6, label %5, !dbg !12161

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_gpt_register_callback, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.248, i32 0, i32 0), i32 noundef %0) #18, !dbg !12162
  br label %15, !dbg !12164

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !12165
  %8 = load i8, i8* %7, align 4, !dbg !12165, !range !8433
  %9 = icmp eq i8 %8, 1, !dbg !12167
  br i1 %9, label %10, label %15, !dbg !12168

10:                                               ; preds = %6
  %11 = icmp eq void (i8*)* %1, null, !dbg !12169
  br i1 %11, label %15, label %12, !dbg !12171

12:                                               ; preds = %10
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !12172
  store void (i8*)* %1, void (i8*)** %13, align 4, !dbg !12173
  %14 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !12174
  store i8* %2, i8** %14, align 4, !dbg !12175
  br label %15, !dbg !12176

15:                                               ; preds = %10, %6, %12, %5
  %16 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !12158
  ret i32 %16, !dbg !12177
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !12178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12183, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.value(metadata i32 %1, metadata !12184, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.value(metadata i32 %2, metadata !12185, metadata !DIExpression()), !dbg !12186
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #17, !dbg !12187
  br i1 %4, label %6, label %5, !dbg !12189

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_gpt_start_timer_ms, i32 0, i32 0), i32 noundef 221, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.248, i32 0, i32 0), i32 noundef %0) #18, !dbg !12190
  br label %17, !dbg !12192

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !12193
  %8 = load i8, i8* %7, align 4, !dbg !12193, !range !8433
  %9 = icmp eq i8 %8, 1, !dbg !12195
  br i1 %9, label %10, label %17, !dbg !12196

10:                                               ; preds = %6
  %11 = icmp ugt i32 %1, 130150523, !dbg !12197
  br i1 %11, label %17, label %12, !dbg !12199

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %1) #17, !dbg !12200
  %14 = tail call fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %2) #17, !dbg !12201
  %15 = tail call fastcc void ()* @hal_gpt_map_callback(i32 noundef %0) #17, !dbg !12202
  tail call void @drvTMR_init(i32 noundef %0, i32 noundef %13, i1 noundef zeroext %14, void ()* noundef nonnull %15) #18, !dbg !12203
  tail call void @TMR_Start(i32 noundef %0) #18, !dbg !12204
  %16 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !12205
  store i32 1, i32* %16, align 4, !dbg !12206
  br label %17, !dbg !12207

17:                                               ; preds = %10, %6, %12, %5
  %18 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !12186
  ret i32 %18, !dbg !12208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %0) unnamed_addr #13 !dbg !12209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12213, metadata !DIExpression()), !dbg !12214
  %2 = shl i32 %0, 5, !dbg !12215
  %3 = mul i32 %0, 7, !dbg !12216
  %4 = udiv i32 %3, 10, !dbg !12217
  %5 = add i32 %4, %2, !dbg !12218
  %6 = mul i32 %0, 6, !dbg !12219
  %7 = udiv i32 %6, 100, !dbg !12220
  %8 = add i32 %5, %7, !dbg !12221
  %9 = shl i32 %0, 3, !dbg !12222
  %10 = udiv i32 %9, 1000, !dbg !12223
  %11 = add i32 %8, %10, !dbg !12224
  ret i32 %11, !dbg !12225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %0) unnamed_addr #13 !dbg !12226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12230, metadata !DIExpression()), !dbg !12231
  %2 = icmp eq i32 %0, 1, !dbg !12232
  ret i1 %2, !dbg !12233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull void ()* @hal_gpt_map_callback(i32 noundef %0) unnamed_addr #13 !dbg !12234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12239, metadata !DIExpression()), !dbg !12240
  %2 = icmp eq i32 %0, 0, !dbg !12241
  %3 = select i1 %2, void ()* @hal_gpt_callback0, void ()* @hal_gpt_callback1, !dbg !12242
  ret void ()* %3, !dbg !12243
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback0() #2 !dbg !12244 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 0), align 4, !dbg !12248
  %2 = icmp eq void (i8*)* %1, null, !dbg !12250
  br i1 %2, label %5, label %3, !dbg !12251

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 1), align 4, !dbg !12252
  tail call void %1(i8* noundef %4) #18, !dbg !12254
  br label %5, !dbg !12255

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 0), align 4, !dbg !12256
  ret void, !dbg !12257
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback1() #2 !dbg !12258 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 0), align 4, !dbg !12261
  %2 = icmp eq void (i8*)* %1, null, !dbg !12263
  br i1 %2, label %5, label %3, !dbg !12264

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 1), align 4, !dbg !12265
  tail call void %1(i8* noundef %4) #18, !dbg !12267
  br label %5, !dbg !12268

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 0), align 4, !dbg !12269
  ret void, !dbg !12270
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #2 !dbg !12271 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12273, metadata !DIExpression()), !dbg !12274
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #17, !dbg !12275
  br i1 %2, label %4, label %3, !dbg !12277

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_gpt_stop_timer, i32 0, i32 0), i32 noundef 245, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.248, i32 0, i32 0), i32 noundef %0) #18, !dbg !12278
  br label %6, !dbg !12280

4:                                                ; preds = %1
  tail call void @TMR_Stop(i32 noundef %0) #18, !dbg !12281
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !12282
  store i32 0, i32* %5, align 4, !dbg !12283
  br label %6, !dbg !12284

6:                                                ; preds = %4, %3
  %7 = phi i32 [ -2, %3 ], [ 0, %4 ], !dbg !12274
  ret i32 %7, !dbg !12285
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #2 !dbg !12286 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12290, metadata !DIExpression()), !dbg !12291
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !12292
  %3 = icmp eq i32 %2, 1, !dbg !12294
  br i1 %3, label %5, label %4, !dbg !12295

4:                                                ; preds = %1
  tail call void @CM4_GPT2Init() #18, !dbg !12296
  br label %5, !dbg !12298

5:                                                ; preds = %4, %1
  tail call void @delay_ms(i32 noundef %0) #18, !dbg !12299
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !12300
  ret i32 0, !dbg !12301
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #2 !dbg !12302 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12304, metadata !DIExpression()), !dbg !12305
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !12306
  %3 = icmp eq i32 %2, 1, !dbg !12308
  br i1 %3, label %5, label %4, !dbg !12309

4:                                                ; preds = %1
  tail call void @CM4_GPT4Init() #18, !dbg !12310
  br label %5, !dbg !12312

5:                                                ; preds = %4, %1
  tail call void @delay_us(i32 noundef %0) #18, !dbg !12313
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !12314
  ret i32 0, !dbg !12315
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0) local_unnamed_addr #2 !dbg !12316 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12318, metadata !DIExpression()), !dbg !12321
  %4 = bitcast i32* %2 to i8*, !dbg !12322
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !12322
  %5 = bitcast i32* %3 to i8*, !dbg !12323
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !12323
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !12324
  %7 = load i8, i8* %6, align 1, !dbg !12324, !range !8433
  %8 = icmp eq i8 %7, 0, !dbg !12326
  br i1 %8, label %9, label %26, !dbg !12327

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32* %3, metadata !12320, metadata !DIExpression(DW_OP_deref)), !dbg !12321
  %10 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %3) #18, !dbg !12328
  call void @llvm.dbg.value(metadata i32* %2, metadata !12319, metadata !DIExpression(DW_OP_deref)), !dbg !12321
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %2) #18, !dbg !12330
  %11 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !12331
  %12 = load i32, i32* %11, align 4, !dbg !12331
  %13 = load i32, i32* %2, align 4, !dbg !12333
  call void @llvm.dbg.value(metadata i32 %13, metadata !12319, metadata !DIExpression()), !dbg !12321
  %14 = icmp eq i32 %12, %13, !dbg !12334
  br i1 %14, label %15, label %23, !dbg !12335

15:                                               ; preds = %9
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !12336
  %17 = load i8, i8* %16, align 1, !dbg !12336, !range !8433
  %18 = icmp eq i8 %17, 0, !dbg !12336
  br i1 %18, label %23, label %19, !dbg !12339

19:                                               ; preds = %15
  %20 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !12340
  %21 = load i8, i8* %20, align 1, !dbg !12340
  %22 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %21) #18, !dbg !12342
  store i8 0, i8* %16, align 1, !dbg !12343
  br label %23, !dbg !12344

23:                                               ; preds = %15, %19, %9
  %24 = load i32, i32* %3, align 4, !dbg !12345
  call void @llvm.dbg.value(metadata i32 %24, metadata !12320, metadata !DIExpression()), !dbg !12321
  %25 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %24) #18, !dbg !12346
  br label %27, !dbg !12347

26:                                               ; preds = %1
  store i8 0, i8* %6, align 1, !dbg !12348
  br label %27

27:                                               ; preds = %26, %23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !12350
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #19, !dbg !12350
  ret void, !dbg !12350
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #2 !dbg !12351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12356, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !12357, metadata !DIExpression()), !dbg !12358
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #17, !dbg !12359
  br i1 %3, label %4, label %24, !dbg !12361

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !12362
  %6 = load i8, i8* %5, align 4, !dbg !12362, !range !8433
  %7 = icmp eq i8 %6, 0, !dbg !12362
  br i1 %7, label %8, label %24, !dbg !12364

8:                                                ; preds = %4
  %9 = tail call i8* @memset(i8* noundef nonnull %5, i32 noundef 0, i32 noundef 64) #18, !dbg !12365
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !12366
  %11 = bitcast %struct.hal_uart_config_t* %10 to i8*, !dbg !12367
  %12 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !12368
  %13 = tail call i8* @memcpy(i8* noundef nonnull %11, i8* noundef %12, i32 noundef 16) #18, !dbg !12369
  store i8 1, i8* %5, align 4, !dbg !12370
  %14 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !12371, !range !12372
  tail call void @uart_reset_default_value(i32 noundef %14) #18, !dbg !12373
  tail call void @halUART_HWInit(i32 noundef %14) #18, !dbg !12374
  %15 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #17, !dbg !12375
  %16 = icmp eq i32 %15, 0, !dbg !12377
  br i1 %16, label %17, label %24, !dbg !12378

17:                                               ; preds = %8
  tail call void @uart_set_sleep_mode(i32 noundef %14) #18, !dbg !12379
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !12380
  store i8 0, i8* %18, align 1, !dbg !12381
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !12382
  store i8 0, i8* %19, align 1, !dbg !12383
  %20 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([2 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !12384
  %21 = load i8*, i8** %20, align 4, !dbg !12384
  %22 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %21) #18, !dbg !12385
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !12386
  store i8 %22, i8* %23, align 1, !dbg !12387
  br label %24, !dbg !12388

24:                                               ; preds = %8, %4, %2, %17
  %25 = phi i32 [ 0, %17 ], [ -4, %2 ], [ -3, %4 ], [ -4, %8 ], !dbg !12358
  ret i32 %25, !dbg !12389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef readonly %1) unnamed_addr #7 !dbg !12390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12396, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !12397, metadata !DIExpression()), !dbg !12398
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !12399
  %4 = icmp ne %struct.hal_uart_config_t* %1, null
  %5 = and i1 %4, %3, !dbg !12401
  br i1 %5, label %6, label %22, !dbg !12401

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !12402
  %8 = load i32, i32* %7, align 4, !dbg !12402
  %9 = icmp ugt i32 %8, 12, !dbg !12404
  br i1 %9, label %22, label %10, !dbg !12405

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !12406
  %12 = load i32, i32* %11, align 4, !dbg !12406
  %13 = icmp ugt i32 %12, 2, !dbg !12407
  br i1 %13, label %22, label %14, !dbg !12408

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !12409
  %16 = load i32, i32* %15, align 4, !dbg !12409
  %17 = icmp ugt i32 %16, 1, !dbg !12410
  br i1 %17, label %22, label %18, !dbg !12411

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !12412
  %20 = load i32, i32* %19, align 4, !dbg !12412
  %21 = icmp ult i32 %20, 4, !dbg !12413
  br label %22, !dbg !12414

22:                                               ; preds = %18, %6, %10, %14, %2
  %23 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %10 ], [ false, %6 ], [ %21, %18 ], !dbg !12398
  ret i1 %23, !dbg !12415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_port(i32 noundef %0) unnamed_addr #13 !dbg !12416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12420, metadata !DIExpression()), !dbg !12421
  %2 = icmp ne i32 %0, 0, !dbg !12422
  %3 = zext i1 %2 to i32, !dbg !12423
  ret i32 %3, !dbg !12424
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #2 !dbg !12425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12429, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !12430, metadata !DIExpression()), !dbg !12431
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #17, !dbg !12432
  br i1 %3, label %4, label %22, !dbg !12434

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !12435
  %6 = bitcast %struct.hal_uart_config_t* %5 to i8*, !dbg !12436
  %7 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !12437
  %8 = tail call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %7, i32 noundef 16) #18, !dbg !12438
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !12439
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !12440
  %11 = load i32, i32* %10, align 4, !dbg !12440
  %12 = tail call fastcc i32 @hal_uart_translate_baudrate(i32 noundef %11) #17, !dbg !12441
  %13 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !12442
  %14 = load i32, i32* %13, align 4, !dbg !12442
  %15 = tail call fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %14) #17, !dbg !12443
  %16 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !12444
  %17 = load i32, i32* %16, align 4, !dbg !12444
  %18 = tail call fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %17) #17, !dbg !12445
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !12446
  %20 = load i32, i32* %19, align 4, !dbg !12446
  %21 = tail call fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %20) #17, !dbg !12447
  tail call void @halUART_SetFormat(i32 noundef %9, i32 noundef %12, i16 noundef zeroext %15, i16 noundef zeroext %18, i16 noundef zeroext %21) #18, !dbg !12448
  br label %22, !dbg !12449

22:                                               ; preds = %2, %4
  %23 = phi i32 [ 0, %4 ], [ -4, %2 ], !dbg !12431
  ret i32 %23, !dbg !12450
}

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_baudrate(i32 noundef %0) unnamed_addr #13 !dbg !12451 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12455, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.declare(metadata [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, metadata !12456, metadata !DIExpression()), !dbg !12459
  %2 = getelementptr inbounds [13 x i32], [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, i32 0, i32 %0, !dbg !12460
  %3 = load i32, i32* %2, align 4, !dbg !12460
  ret i32 %3, !dbg !12461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %0) unnamed_addr #13 !dbg !12462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12466, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.declare(metadata [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, metadata !12467, metadata !DIExpression()), !dbg !12470
  %2 = getelementptr inbounds [4 x i16], [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, i32 0, i32 %0, !dbg !12471
  %3 = load i16, i16* %2, align 2, !dbg !12471
  ret i16 %3, !dbg !12472
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %0) unnamed_addr #13 !dbg !12473 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12477, metadata !DIExpression()), !dbg !12480
  call void @llvm.dbg.declare(metadata [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, metadata !12478, metadata !DIExpression()), !dbg !12481
  %2 = getelementptr inbounds [5 x i16], [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, i32 0, i32 %0, !dbg !12482
  %3 = load i16, i16* %2, align 2, !dbg !12482
  ret i16 %3, !dbg !12483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %0) unnamed_addr #13 !dbg !12484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12488, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.declare(metadata [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, metadata !12489, metadata !DIExpression()), !dbg !12492
  %2 = getelementptr inbounds [3 x i16], [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, i32 0, i32 %0, !dbg !12493
  %3 = load i16, i16* %2, align 2, !dbg !12493
  ret i16 %3, !dbg !12494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) unnamed_addr #13 !dbg !12495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12499, metadata !DIExpression()), !dbg !12500
  %2 = icmp ult i32 %0, 2, !dbg !12501
  ret i1 %2, !dbg !12502
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #2 !dbg !12503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12505, metadata !DIExpression()), !dbg !12506
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !12507
  br i1 %2, label %3, label %18, !dbg !12509

3:                                                ; preds = %1
  %4 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !12510
  %5 = load i8, i8* %4, align 4, !dbg !12510, !range !8433
  %6 = icmp eq i8 %5, 0, !dbg !12512
  br i1 %6, label %18, label %7, !dbg !12513

7:                                                ; preds = %3
  %8 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef 64) #18, !dbg !12514
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !12515, !range !12372
  tail call void @uart_query_empty(i32 noundef %9) #18, !dbg !12516
  %10 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !12517
  %11 = load i32, i32* %10, align 4, !dbg !12517
  %12 = tail call i32 @hal_nvic_disable_irq(i32 noundef %11) #18, !dbg !12518
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !12519
  store i8 0, i8* %13, align 1, !dbg !12520
  %14 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !12521
  store i8 0, i8* %14, align 1, !dbg !12522
  tail call void @uart_mask_send_interrupt(i32 noundef %9) #18, !dbg !12523
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !12524
  %16 = load i8, i8* %15, align 1, !dbg !12524
  %17 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %16) #18, !dbg !12525
  tail call void @uart_reset_default_value(i32 noundef %9) #18, !dbg !12526
  br label %18, !dbg !12527

18:                                               ; preds = %3, %1, %7
  %19 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !12506
  ret i32 %19, !dbg !12528
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !12529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12533, metadata !DIExpression()), !dbg !12536
  call void @llvm.dbg.value(metadata i8 %1, metadata !12534, metadata !DIExpression()), !dbg !12536
  %3 = icmp eq i32 %0, 0, !dbg !12537
  %4 = icmp eq i32 %0, 1, !dbg !12537
  %5 = select i1 %4, i32 1, i32 2, !dbg !12537
  %6 = select i1 %3, i32 0, i32 %5, !dbg !12537
  call void @llvm.dbg.value(metadata i32 %6, metadata !12535, metadata !DIExpression()), !dbg !12536
  %7 = icmp eq i32 %6, 2, !dbg !12538
  br i1 %7, label %9, label %8, !dbg !12540

8:                                                ; preds = %2
  tail call void @uart_output_char(i32 noundef %6, i8 noundef zeroext %1) #18, !dbg !12541
  br label %9, !dbg !12543

9:                                                ; preds = %2, %8
  ret void, !dbg !12544
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #2 !dbg !12545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12549, metadata !DIExpression()), !dbg !12554
  call void @llvm.dbg.value(metadata i8* %1, metadata !12550, metadata !DIExpression()), !dbg !12554
  call void @llvm.dbg.value(metadata i32 %2, metadata !12551, metadata !DIExpression()), !dbg !12554
  %4 = icmp eq i32 %0, 0, !dbg !12555
  %5 = icmp eq i32 %0, 1, !dbg !12555
  %6 = select i1 %5, i32 1, i32 2, !dbg !12555
  %7 = select i1 %4, i32 0, i32 %6, !dbg !12555
  call void @llvm.dbg.value(metadata i32 %7, metadata !12552, metadata !DIExpression()), !dbg !12554
  %8 = icmp eq i8* %1, null, !dbg !12556
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !12558
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !12558
  call void @llvm.dbg.value(metadata i32 0, metadata !12553, metadata !DIExpression()), !dbg !12554
  br i1 %12, label %19, label %13, !dbg !12558

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !12553, metadata !DIExpression()), !dbg !12554
  %15 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !12559
  %16 = load i8, i8* %15, align 1, !dbg !12559
  tail call void @uart_output_char(i32 noundef %7, i8 noundef zeroext %16) #18, !dbg !12565
  %17 = add nuw i32 %14, 1, !dbg !12566
  call void @llvm.dbg.value(metadata i32 %17, metadata !12553, metadata !DIExpression()), !dbg !12554
  %18 = icmp eq i32 %17, %2, !dbg !12567
  br i1 %18, label %19, label %13, !dbg !12568, !llvm.loop !12569

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !12554
  ret i32 %20, !dbg !12571
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !12572 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12574, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i8* %1, metadata !12575, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.value(metadata i32 %2, metadata !12576, metadata !DIExpression()), !dbg !12582
  %6 = bitcast i32* %4 to i8*, !dbg !12583
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !12583
  %7 = bitcast i32* %5 to i8*, !dbg !12584
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #19, !dbg !12584
  %8 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !12585
  br i1 %8, label %9, label %37, !dbg !12587

9:                                                ; preds = %3
  %10 = icmp eq i8* %1, null, !dbg !12588
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !12590
  br i1 %12, label %37, label %13, !dbg !12590

13:                                               ; preds = %9
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !12591
  %15 = load i8, i8* %14, align 4, !dbg !12591, !range !8433
  %16 = icmp eq i8 %15, 0, !dbg !12591
  br i1 %16, label %37, label %17, !dbg !12593

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32* %5, metadata !12581, metadata !DIExpression(DW_OP_deref)), !dbg !12582
  %18 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #18, !dbg !12594
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !12595
  %20 = load i8, i8* %19, align 1, !dbg !12595, !range !8433
  %21 = icmp eq i8 %20, 0, !dbg !12597
  br i1 %21, label %22, label %26, !dbg !12598

22:                                               ; preds = %17
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !12599
  %24 = load i8, i8* %23, align 1, !dbg !12599
  %25 = call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %24) #18, !dbg !12601
  store i8 1, i8* %19, align 1, !dbg !12602
  br label %26, !dbg !12603

26:                                               ; preds = %22, %17
  %27 = load i32, i32* %5, align 4, !dbg !12604
  call void @llvm.dbg.value(metadata i32 %27, metadata !12581, metadata !DIExpression()), !dbg !12582
  %28 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %27) #18, !dbg !12605
  %29 = call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !12606, !range !12372
  call void @llvm.dbg.value(metadata i32* %4, metadata !12577, metadata !DIExpression(DW_OP_deref)), !dbg !12582
  call void @halUART_Get_VFIFO_Length(i32 noundef %29, i32 noundef 0, i32* noundef nonnull %4) #18, !dbg !12607
  %30 = load i32, i32* %4, align 4, !dbg !12608
  call void @llvm.dbg.value(metadata i32 %30, metadata !12577, metadata !DIExpression()), !dbg !12582
  %31 = icmp ult i32 %30, %2, !dbg !12610
  %32 = select i1 %31, i32 %30, i32 %2
  call void @llvm.dbg.value(metadata i32 %32, metadata !12578, metadata !DIExpression()), !dbg !12582
  call void @halUART_Write_VFIFO_Data(i32 noundef %29, i8* noundef nonnull %1, i32 noundef %32) #18, !dbg !12611
  %33 = load i32, i32* %4, align 4, !dbg !12612
  call void @llvm.dbg.value(metadata i32 %33, metadata !12577, metadata !DIExpression()), !dbg !12582
  %34 = icmp eq i32 %32, %33, !dbg !12614
  br i1 %34, label %35, label %37, !dbg !12615

35:                                               ; preds = %26
  %36 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %29, i1 noundef zeroext false) #17, !dbg !12616, !range !12618
  call void @llvm.dbg.value(metadata i32 %36, metadata !12579, metadata !DIExpression()), !dbg !12582
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %36) #18, !dbg !12619
  br label %37, !dbg !12620

37:                                               ; preds = %26, %35, %13, %9, %3
  %38 = phi i32 [ 0, %3 ], [ 0, %9 ], [ 0, %13 ], [ %32, %35 ], [ %32, %26 ], !dbg !12582
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #19, !dbg !12621
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !12621
  ret i32 %38, !dbg !12621
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #13 !dbg !12622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12626, metadata !DIExpression()), !dbg !12629
  call void @llvm.dbg.value(metadata i1 %1, metadata !12627, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12629
  %3 = icmp eq i32 %0, 0, !dbg !12630
  %4 = select i1 %1, i32 15, i32 14, !dbg !12632
  %5 = select i1 %1, i32 17, i32 16, !dbg !12632
  %6 = select i1 %3, i32 %4, i32 %5, !dbg !12632
  call void @llvm.dbg.value(metadata i32 %6, metadata !12628, metadata !DIExpression()), !dbg !12629
  ret i32 %6, !dbg !12633
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_enable_interrupt(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #2 !dbg !12634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12638, metadata !DIExpression()), !dbg !12640
  %2 = icmp eq i32 %0, 0, !dbg !12641
  %3 = icmp eq i32 %0, 1, !dbg !12641
  %4 = select i1 %3, i32 1, i32 2, !dbg !12641
  %5 = select i1 %2, i32 0, i32 %4, !dbg !12641
  call void @llvm.dbg.value(metadata i32 %5, metadata !12639, metadata !DIExpression()), !dbg !12640
  %6 = icmp ult i32 %5, 2, !dbg !12642
  br i1 %6, label %7, label %9, !dbg !12644

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @uart_input_char(i32 noundef %5) #18, !dbg !12645
  br label %9, !dbg !12647

9:                                                ; preds = %1, %7
  %10 = phi i8 [ %8, %7 ], [ 0, %1 ], !dbg !12648
  ret i8 %10, !dbg !12649
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #2 !dbg !12650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12654, metadata !DIExpression()), !dbg !12656
  %2 = icmp eq i32 %0, 0, !dbg !12657
  %3 = icmp eq i32 %0, 1, !dbg !12657
  %4 = select i1 %3, i32 1, i32 2, !dbg !12657
  %5 = select i1 %2, i32 0, i32 %4, !dbg !12657
  call void @llvm.dbg.value(metadata i32 %5, metadata !12655, metadata !DIExpression()), !dbg !12656
  %6 = icmp ult i32 %5, 2, !dbg !12658
  br i1 %6, label %7, label %9, !dbg !12660

7:                                                ; preds = %1
  %8 = tail call i32 @uart_input_char_unblocking(i32 noundef %5) #18, !dbg !12661
  br label %9, !dbg !12663

9:                                                ; preds = %1, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %1 ], !dbg !12664
  ret i32 %10, !dbg !12665
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #2 !dbg !12666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12670, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i8* %1, metadata !12671, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i32 %2, metadata !12672, metadata !DIExpression()), !dbg !12675
  %4 = icmp eq i32 %0, 0, !dbg !12676
  %5 = icmp eq i32 %0, 1, !dbg !12676
  %6 = select i1 %5, i32 1, i32 2, !dbg !12676
  %7 = select i1 %4, i32 0, i32 %6, !dbg !12676
  call void @llvm.dbg.value(metadata i32 %7, metadata !12673, metadata !DIExpression()), !dbg !12675
  %8 = icmp eq i8* %1, null, !dbg !12677
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !12679
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !12679
  call void @llvm.dbg.value(metadata i32 0, metadata !12674, metadata !DIExpression()), !dbg !12675
  br i1 %12, label %19, label %13, !dbg !12679

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !12674, metadata !DIExpression()), !dbg !12675
  %15 = tail call zeroext i8 @uart_input_char(i32 noundef %7) #18, !dbg !12680
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !12686
  store i8 %15, i8* %16, align 1, !dbg !12687
  %17 = add nuw i32 %14, 1, !dbg !12688
  call void @llvm.dbg.value(metadata i32 %17, metadata !12674, metadata !DIExpression()), !dbg !12675
  %18 = icmp eq i32 %17, %2, !dbg !12689
  br i1 %18, label %19, label %13, !dbg !12690, !llvm.loop !12691

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !12675
  ret i32 %20, !dbg !12693
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !12694 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12696, metadata !DIExpression()), !dbg !12702
  call void @llvm.dbg.value(metadata i8* %1, metadata !12697, metadata !DIExpression()), !dbg !12702
  call void @llvm.dbg.value(metadata i32 %2, metadata !12698, metadata !DIExpression()), !dbg !12702
  %5 = bitcast i32* %4 to i8*, !dbg !12703
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !12703
  %6 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !12704
  br i1 %6, label %7, label %20, !dbg !12706

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !12707
  %9 = icmp eq i32 %2, 0
  %10 = or i1 %8, %9, !dbg !12709
  br i1 %10, label %20, label %11, !dbg !12709

11:                                               ; preds = %7
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !12710, !range !12372
  call void @llvm.dbg.value(metadata i32* %4, metadata !12699, metadata !DIExpression(DW_OP_deref)), !dbg !12702
  call void @halUART_Get_VFIFO_Length(i32 noundef %12, i32 noundef 1, i32* noundef nonnull %4) #18, !dbg !12711
  %13 = load i32, i32* %4, align 4, !dbg !12712
  call void @llvm.dbg.value(metadata i32 %13, metadata !12699, metadata !DIExpression()), !dbg !12702
  %14 = icmp ult i32 %13, %2, !dbg !12714
  %15 = select i1 %14, i32 %13, i32 %2
  call void @llvm.dbg.value(metadata i32 %15, metadata !12700, metadata !DIExpression()), !dbg !12702
  call void @halUART_Read_VFIFO_Data(i32 noundef %12, i8* noundef nonnull %1, i32 noundef %15) #18, !dbg !12715
  %16 = load i32, i32* %4, align 4, !dbg !12716
  call void @llvm.dbg.value(metadata i32 %16, metadata !12699, metadata !DIExpression()), !dbg !12702
  %17 = icmp eq i32 %15, %16, !dbg !12718
  br i1 %17, label %18, label %20, !dbg !12719

18:                                               ; preds = %11
  %19 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %12, i1 noundef zeroext true) #17, !dbg !12720, !range !12618
  call void @llvm.dbg.value(metadata i32 %19, metadata !12701, metadata !DIExpression()), !dbg !12702
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %19) #18, !dbg !12722
  br label %20, !dbg !12723

20:                                               ; preds = %11, %18, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %15, %18 ], [ %15, %11 ], !dbg !12702
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !12724
  ret i32 %21, !dbg !12724
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #2 !dbg !12725 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12727, metadata !DIExpression()), !dbg !12729
  %3 = bitcast i32* %2 to i8*, !dbg !12730
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !12730
  call void @llvm.dbg.value(metadata i32 0, metadata !12728, metadata !DIExpression()), !dbg !12729
  store i32 0, i32* %2, align 4, !dbg !12731
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !12732
  br i1 %4, label %5, label %8, !dbg !12734

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !12735, !range !12372
  call void @llvm.dbg.value(metadata i32* %2, metadata !12728, metadata !DIExpression(DW_OP_deref)), !dbg !12729
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 0, i32* noundef nonnull %2) #18, !dbg !12736
  %7 = load i32, i32* %2, align 4, !dbg !12737
  call void @llvm.dbg.value(metadata i32 %7, metadata !12728, metadata !DIExpression()), !dbg !12729
  br label %8, !dbg !12738

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !12729
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !12739
  ret i32 %9, !dbg !12739
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #2 !dbg !12740 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12742, metadata !DIExpression()), !dbg !12744
  %3 = bitcast i32* %2 to i8*, !dbg !12745
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #19, !dbg !12745
  call void @llvm.dbg.value(metadata i32 0, metadata !12743, metadata !DIExpression()), !dbg !12744
  store i32 0, i32* %2, align 4, !dbg !12746
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !12747
  br i1 %4, label %5, label %8, !dbg !12749

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !12750, !range !12372
  call void @llvm.dbg.value(metadata i32* %2, metadata !12743, metadata !DIExpression(DW_OP_deref)), !dbg !12744
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 1, i32* noundef nonnull %2) #18, !dbg !12751
  %7 = load i32, i32* %2, align 4, !dbg !12752
  call void @llvm.dbg.value(metadata i32 %7, metadata !12743, metadata !DIExpression()), !dbg !12744
  br label %8, !dbg !12753

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !12744
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #19, !dbg !12754
  ret i32 %9, !dbg !12754
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #2 !dbg !12755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12759, metadata !DIExpression()), !dbg !12763
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !12760, metadata !DIExpression()), !dbg !12763
  call void @llvm.dbg.value(metadata i8* %2, metadata !12761, metadata !DIExpression()), !dbg !12763
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !12764
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !12766
  br i1 %6, label %7, label %24, !dbg !12766

7:                                                ; preds = %3
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 0, !dbg !12767
  store void (i32, i8*)* %1, void (i32, i8*)** %8, align 4, !dbg !12768
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 1, !dbg !12769
  store i8* %2, i8** %9, align 4, !dbg !12770
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 2, !dbg !12771
  store i8 1, i8* %10, align 4, !dbg !12772
  %11 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !12773
  %12 = tail call fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) #17, !dbg !12774
  tail call void @halUART_VDMA_Rx_Register_Callback(i32 noundef %11, void ()* noundef %12) #18, !dbg !12775
  tail call void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %11, void ()* noundef %12) #18, !dbg !12776
  %13 = icmp eq i32 %11, 0, !dbg !12777
  br i1 %13, label %14, label %15, !dbg !12779

14:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 14, void ()* noundef nonnull @hal_uart_send_callback0) #18, !dbg !12780
  br label %16, !dbg !12782

15:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 16, void ()* noundef nonnull @hal_uart_send_callback1) #18, !dbg !12783
  br label %16

16:                                               ; preds = %15, %14
  %17 = tail call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %11, i1 noundef zeroext false) #17, !dbg !12785, !range !12618
  call void @llvm.dbg.value(metadata i32 %17, metadata !12762, metadata !DIExpression()), !dbg !12763
  tail call void @DMA_Vfifo_enable_interrupt(i32 noundef %17) #18, !dbg !12786
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !12787
  store i8 1, i8* %18, align 1, !dbg !12788
  %19 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !12789
  %20 = load i32, i32* %19, align 4, !dbg !12789
  %21 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %20, void (i32)* noundef nonnull @uart_interrupt_handler) #18, !dbg !12790
  tail call void @uart_unmask_send_interrupt(i32 noundef %11) #18, !dbg !12791
  %22 = load i32, i32* %19, align 4, !dbg !12792
  %23 = tail call i32 @hal_nvic_enable_irq(i32 noundef %22) #18, !dbg !12793
  br label %24, !dbg !12794

24:                                               ; preds = %3, %16
  %25 = phi i32 [ 0, %16 ], [ -4, %3 ], !dbg !12763
  ret i32 %25, !dbg !12795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) unnamed_addr #13 !dbg !1404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1409, metadata !DIExpression()), !dbg !12796
  %2 = getelementptr inbounds [2 x void ()*], [2 x void ()*]* @hal_uart_map_receive_callback.func_tbl, i32 0, i32 %0, !dbg !12797
  %3 = load void ()*, void ()** %2, align 4, !dbg !12797
  ret void ()* %3, !dbg !12798
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback0() #2 !dbg !12799 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !12805, !range !8433
  %2 = icmp eq i8 %1, 0, !dbg !12805
  br i1 %2, label %8, label %3, !dbg !12806

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !12807
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !12809
  br i1 %5, label %8, label %6, !dbg !12810

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !12811
  tail call void %4(i32 noundef 2, i8* noundef %7) #18, !dbg !12813
  br label %8, !dbg !12814

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #17, !dbg !12815, !range !12372
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #17, !dbg !12816
  ret void, !dbg !12817
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback1() #2 !dbg !12818 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !12823, !range !8433
  %2 = icmp eq i8 %1, 0, !dbg !12823
  br i1 %2, label %8, label %3, !dbg !12824

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !12825
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !12827
  br i1 %5, label %8, label %6, !dbg !12828

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !12829
  tail call void %4(i32 noundef 2, i8* noundef %7) #18, !dbg !12831
  br label %8, !dbg !12832

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #17, !dbg !12833, !range !12372
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #17, !dbg !12834
  ret void, !dbg !12835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_uart_check_irq_disable(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #2 !dbg !12836 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12840, metadata !DIExpression()), !dbg !12847
  call void @llvm.dbg.value(metadata i1 %1, metadata !12841, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12847
  %5 = bitcast i32* %3 to i8*, !dbg !12848
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #19, !dbg !12848
  %6 = bitcast i32* %4 to i8*, !dbg !12848
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #19, !dbg !12848
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !12844, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !12847
  br i1 %1, label %7, label %12, !dbg !12849

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !12844, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !12847
  call void @llvm.dbg.value(metadata i32* %3, metadata !12842, metadata !DIExpression(DW_OP_deref)), !dbg !12847
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 1, i32* noundef nonnull %3) #18, !dbg !12850
  %8 = load i32, i32* %3, align 4, !dbg !12853
  call void @llvm.dbg.value(metadata i32 %8, metadata !12842, metadata !DIExpression()), !dbg !12847
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 5, !dbg !12855
  %10 = load i32, i32* %9, align 4, !dbg !12855
  %11 = icmp ult i32 %8, %10, !dbg !12856
  br i1 %11, label %22, label %20, !dbg !12857

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32* %4, metadata !12843, metadata !DIExpression(DW_OP_deref)), !dbg !12847
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %4) #18, !dbg !12858
  %13 = load i32, i32* %4, align 4, !dbg !12860
  call void @llvm.dbg.value(metadata i32 %13, metadata !12843, metadata !DIExpression()), !dbg !12847
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !12862
  %15 = load i32, i32* %14, align 4, !dbg !12862
  %16 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 2, !dbg !12863
  %17 = load i32, i32* %16, align 4, !dbg !12863
  %18 = sub i32 %15, %17, !dbg !12864
  %19 = icmp ult i32 %13, %18, !dbg !12865
  br i1 %19, label %22, label %20, !dbg !12866

20:                                               ; preds = %12, %7
  %21 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) #17, !dbg !12867, !range !12618
  call void @DMA_Vfifo_disable_interrupt(i32 noundef %21) #18, !dbg !12867
  br label %22, !dbg !12868

22:                                               ; preds = %20, %12, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #19, !dbg !12868
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #19, !dbg !12868
  ret void, !dbg !12868
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_disable_interrupt(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback0() #2 !dbg !12869 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !12874, !range !8433
  %2 = icmp eq i8 %1, 0, !dbg !12874
  br i1 %2, label %11, label %3, !dbg !12875

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 0) #17, !dbg !12876
  %5 = icmp eq i32 %4, 0, !dbg !12877
  br i1 %5, label %11, label %6, !dbg !12878

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !12879
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !12881
  br i1 %8, label %11, label %9, !dbg !12882

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !12883
  tail call void %7(i32 noundef 1, i8* noundef %10) #18, !dbg !12885
  br label %11, !dbg !12886

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #17, !dbg !12887, !range !12372
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #17, !dbg !12888
  ret void, !dbg !12889
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback1() #2 !dbg !12890 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !12895, !range !8433
  %2 = icmp eq i8 %1, 0, !dbg !12895
  br i1 %2, label %11, label %3, !dbg !12896

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 1) #17, !dbg !12897
  %5 = icmp eq i32 %4, 0, !dbg !12898
  br i1 %5, label %11, label %6, !dbg !12899

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !12900
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !12902
  br i1 %8, label %11, label %9, !dbg !12903

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !12904
  tail call void %7(i32 noundef 1, i8* noundef %10) #18, !dbg !12906
  br label %11, !dbg !12907

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #17, !dbg !12908, !range !12372
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #17, !dbg !12909
  ret void, !dbg !12910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !12911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12915, metadata !DIExpression()), !dbg !12917
  call void @llvm.dbg.value(metadata i32 %1, metadata !12916, metadata !DIExpression()), !dbg !12917
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !12918
  %4 = icmp ult i32 %1, 13
  %5 = and i1 %4, %3, !dbg !12920
  br i1 %5, label %6, label %10, !dbg !12920

6:                                                ; preds = %2
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !12921
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %7, i32 0, i32 0, !dbg !12922
  store i32 %1, i32* %8, align 4, !dbg !12923
  %9 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %7) #17, !dbg !12924
  br label %10, !dbg !12925

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ -4, %2 ], !dbg !12917
  ret i32 %11, !dbg !12926
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* noundef %1) local_unnamed_addr #2 !dbg !12927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12933, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !12934, metadata !DIExpression()), !dbg !12935
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !12936
  br i1 %3, label %4, label %28, !dbg !12938

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef %1) #17, !dbg !12939
  br i1 %5, label %6, label %28, !dbg !12941

6:                                                ; preds = %4
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !12942
  store i8 1, i8* %7, align 4, !dbg !12943
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, !dbg !12944
  %9 = bitcast %struct.hal_uart_dma_config_t* %8 to i8*, !dbg !12945
  %10 = bitcast %struct.hal_uart_dma_config_t* %1 to i8*, !dbg !12946
  %11 = tail call i8* @memcpy(i8* noundef nonnull %9, i8* noundef %10, i32 noundef 28) #18, !dbg !12947
  tail call void @DMA_Init() #18, !dbg !12948
  tail call void @DMA_Vfifo_init() #18, !dbg !12949
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #17, !dbg !12950
  %13 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !12951
  %14 = load i8*, i8** %13, align 4, !dbg !12951
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !12952
  %16 = load i32, i32* %15, align 4, !dbg !12952
  %17 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !12953
  %18 = load i32, i32* %17, align 4, !dbg !12953
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !12954
  %20 = load i32, i32* %19, align 4, !dbg !12954
  %21 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef 5000) #17, !dbg !12955
  tail call void @halUART_Rx_VFIFO_Initialize(i32 noundef %12, i8* noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %21) #18, !dbg !12956
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !12957
  %23 = load i8*, i8** %22, align 4, !dbg !12957
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !12958
  %25 = load i32, i32* %24, align 4, !dbg !12958
  %26 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !12959
  %27 = load i32, i32* %26, align 4, !dbg !12959
  tail call void @halUART_Tx_VFIFO_Initialize(i32 noundef %12, i8* noundef %23, i32 noundef %25, i32 noundef %27) #18, !dbg !12960
  br label %28, !dbg !12961

28:                                               ; preds = %4, %2, %6
  %29 = phi i32 [ 0, %6 ], [ -4, %2 ], [ -4, %4 ], !dbg !12935
  ret i32 %29, !dbg !12962
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef readonly %0) unnamed_addr #7 !dbg !12963 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %0, metadata !12967, metadata !DIExpression()), !dbg !12968
  %2 = icmp eq %struct.hal_uart_dma_config_t* %0, null, !dbg !12969
  br i1 %2, label %27, label %3, !dbg !12971

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 3, !dbg !12972
  %5 = load i8*, i8** %4, align 4, !dbg !12972
  %6 = icmp eq i8* %5, null, !dbg !12974
  br i1 %6, label %27, label %7, !dbg !12975

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 4, !dbg !12976
  %9 = load i32, i32* %8, align 4, !dbg !12976
  %10 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 5, !dbg !12978
  %11 = load i32, i32* %10, align 4, !dbg !12978
  %12 = icmp ult i32 %9, %11, !dbg !12979
  br i1 %12, label %27, label %13, !dbg !12980

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 6, !dbg !12981
  %15 = load i32, i32* %14, align 4, !dbg !12981
  %16 = icmp ult i32 %9, %15, !dbg !12983
  br i1 %16, label %27, label %17, !dbg !12984

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 0, !dbg !12985
  %19 = load i8*, i8** %18, align 4, !dbg !12985
  %20 = icmp eq i8* %19, null, !dbg !12987
  br i1 %20, label %27, label %21, !dbg !12988

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 1, !dbg !12989
  %23 = load i32, i32* %22, align 4, !dbg !12989
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 2, !dbg !12991
  %25 = load i32, i32* %24, align 4, !dbg !12991
  %26 = icmp uge i32 %23, %25, !dbg !12992
  br label %27, !dbg !12993

27:                                               ; preds = %21, %17, %13, %7, %3, %1
  %28 = phi i1 [ false, %1 ], [ false, %3 ], [ false, %7 ], [ false, %13 ], [ false, %17 ], [ %26, %21 ], !dbg !12968
  ret i1 %28, !dbg !12994
}

; Function Attrs: optsize
declare dso_local void @DMA_Init() local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_init() local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hal_uart_translate_timeout(i32 noundef %0) unnamed_addr #2 !dbg !12995 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12997, metadata !DIExpression()), !dbg !12999
  %2 = tail call i32 @top_mcu_freq_get() #18, !dbg !13000
  %3 = udiv i32 %2, 1000000, !dbg !13001
  call void @llvm.dbg.value(metadata i32 %3, metadata !12998, metadata !DIExpression()), !dbg !12999
  %4 = mul i32 %3, %0, !dbg !13002
  ret i32 %4, !dbg !13003
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #2 !dbg !13004 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13006, metadata !DIExpression()), !dbg !13008
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !13009
  br i1 %2, label %3, label %8, !dbg !13011

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !13012
  %5 = icmp eq i32 %0, 1, !dbg !13012
  %6 = select i1 %5, i32 1, i32 2, !dbg !13012
  %7 = select i1 %4, i32 0, i32 %6, !dbg !13012
  call void @llvm.dbg.value(metadata i32 %7, metadata !13007, metadata !DIExpression()), !dbg !13008
  tail call void @uart_set_hardware_flowcontrol(i32 noundef %7) #18, !dbg !13013
  br label %8, !dbg !13014

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !13008
  ret i32 %9, !dbg !13015
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !13016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13020, metadata !DIExpression()), !dbg !13025
  call void @llvm.dbg.value(metadata i8 %1, metadata !13021, metadata !DIExpression()), !dbg !13025
  call void @llvm.dbg.value(metadata i8 %2, metadata !13022, metadata !DIExpression()), !dbg !13025
  call void @llvm.dbg.value(metadata i8 %3, metadata !13023, metadata !DIExpression()), !dbg !13025
  %5 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !13026
  br i1 %5, label %6, label %11, !dbg !13028

6:                                                ; preds = %4
  %7 = icmp eq i32 %0, 0, !dbg !13029
  %8 = icmp eq i32 %0, 1, !dbg !13029
  %9 = select i1 %8, i32 1, i32 2, !dbg !13029
  %10 = select i1 %7, i32 0, i32 %9, !dbg !13029
  call void @llvm.dbg.value(metadata i32 %10, metadata !13024, metadata !DIExpression()), !dbg !13025
  tail call void @uart_set_software_flowcontrol(i32 noundef %10, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #18, !dbg !13030
  br label %11, !dbg !13031

11:                                               ; preds = %4, %6
  %12 = phi i32 [ 0, %6 ], [ -4, %4 ], !dbg !13025
  ret i32 %12, !dbg !13032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #2 !dbg !13033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13035, metadata !DIExpression()), !dbg !13037
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !13038
  br i1 %2, label %3, label %8, !dbg !13040

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !13041
  %5 = icmp eq i32 %0, 1, !dbg !13041
  %6 = select i1 %5, i32 1, i32 2, !dbg !13041
  %7 = select i1 %4, i32 0, i32 %6, !dbg !13041
  call void @llvm.dbg.value(metadata i32 %7, metadata !13036, metadata !DIExpression()), !dbg !13037
  tail call void @uart_disable_flowcontrol(i32 noundef %7) #18, !dbg !13042
  br label %8, !dbg !13043

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !13037
  ret i32 %9, !dbg !13044
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13049, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.value(metadata i32 %1, metadata !13050, metadata !DIExpression()), !dbg !13051
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #17, !dbg !13052
  br i1 %3, label %4, label %8, !dbg !13054

4:                                                ; preds = %2
  %5 = icmp eq i32 %0, 0, !dbg !13055
  %6 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef %1) #17, !dbg !13057
  %7 = select i1 %5, i32 15, i32 17
  tail call void @DMA_Vfifo_Set_timeout(i32 noundef %7, i32 noundef %6) #18, !dbg !13057
  br label %8, !dbg !13058

8:                                                ; preds = %4, %2
  %9 = phi i32 [ -4, %2 ], [ 0, %4 ], !dbg !13051
  ret i32 %9, !dbg !13058
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Set_timeout(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_reset() local_unnamed_addr #0 !dbg !13059 {
  store volatile i32 0, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !13060
  store volatile i32 0, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !13061
  store volatile i32 0, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !13062
  store volatile i32 0, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !13063
  store volatile i32 0, i32* inttoptr (i32 -536866784 to i32*), align 32, !dbg !13064
  store volatile i32 0, i32* inttoptr (i32 -536866768 to i32*), align 16, !dbg !13065
  store volatile i32 0, i32* inttoptr (i32 -536866752 to i32*), align 64, !dbg !13066
  store volatile i32 0, i32* inttoptr (i32 -536866736 to i32*), align 16, !dbg !13067
  %1 = load volatile i32, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !13068
  %2 = and i32 %1, -16, !dbg !13068
  store volatile i32 %2, i32* inttoptr (i32 -536866776 to i32*), align 8, !dbg !13068
  %3 = load volatile i32, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !13069
  %4 = and i32 %3, -16, !dbg !13069
  store volatile i32 %4, i32* inttoptr (i32 -536866760 to i32*), align 8, !dbg !13069
  %5 = load volatile i32, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !13070
  %6 = and i32 %5, -16, !dbg !13070
  store volatile i32 %6, i32* inttoptr (i32 -536866744 to i32*), align 8, !dbg !13070
  %7 = load volatile i32, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !13071
  %8 = and i32 %7, -16, !dbg !13071
  store volatile i32 %8, i32* inttoptr (i32 -536866728 to i32*), align 8, !dbg !13071
  ret void, !dbg !13072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_dwt_init() local_unnamed_addr #0 !dbg !13073 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !13074
  %2 = and i32 %1, 1, !dbg !13076
  %3 = icmp eq i32 %2, 0, !dbg !13076
  br i1 %3, label %4, label %22, !dbg !13077

4:                                                ; preds = %0
  tail call void @hal_dwt_reset() #17, !dbg !13078
  %5 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !13080
  %6 = and i32 %5, 65536, !dbg !13082
  %7 = icmp eq i32 %6, 0, !dbg !13082
  br i1 %7, label %8, label %11, !dbg !13083

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !13084
  %10 = or i32 %9, 16842752, !dbg !13084
  store volatile i32 %10, i32* inttoptr (i32 -536809988 to i32*), align 4, !dbg !13084
  br label %11, !dbg !13086

11:                                               ; preds = %8, %4
  %12 = load volatile i32, i32* inttoptr (i32 -536866816 to i32*), align 4096, !dbg !13087
  %13 = lshr i32 %12, 28, !dbg !13088
  store i32 %13, i32* @DWT_NUMCOMP, align 4, !dbg !13089
  %14 = load volatile i32, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !13090
  %15 = or i32 %14, 31, !dbg !13090
  store volatile i32 %15, i32* inttoptr (i32 -536866780 to i32*), align 4, !dbg !13090
  %16 = load volatile i32, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !13091
  %17 = or i32 %16, 31, !dbg !13091
  store volatile i32 %17, i32* inttoptr (i32 -536866764 to i32*), align 4, !dbg !13091
  %18 = load volatile i32, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !13092
  %19 = or i32 %18, 31, !dbg !13092
  store volatile i32 %19, i32* inttoptr (i32 -536866748 to i32*), align 4, !dbg !13092
  %20 = load volatile i32, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !13093
  %21 = or i32 %20, 31, !dbg !13093
  store volatile i32 %21, i32* inttoptr (i32 -536866732 to i32*), align 4, !dbg !13093
  br label %22, !dbg !13094

22:                                               ; preds = %11, %0
  ret void, !dbg !13095
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_dwt_request_watchpoint(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !13096 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13101, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i32 %1, metadata !13102, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i32 %2, metadata !13103, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.value(metadata i32 %3, metadata !13104, metadata !DIExpression()), !dbg !13106
  %5 = load volatile i32, i32* inttoptr (i32 -536810000 to i32*), align 16, !dbg !13107
  %6 = and i32 %5, 1, !dbg !13109
  %7 = icmp eq i32 %6, 0, !dbg !13109
  br i1 %7, label %8, label %23, !dbg !13110

8:                                                ; preds = %4
  %9 = load i32, i32* @DWT_NUMCOMP, align 4, !dbg !13111
  %10 = icmp ugt i32 %9, %0, !dbg !13114
  %11 = and i32 %2, %1
  %12 = icmp eq i32 %11, 0
  %13 = and i1 %12, %10, !dbg !13115
  br i1 %13, label %14, label %23, !dbg !13115

14:                                               ; preds = %8
  %15 = shl i32 %0, 2, !dbg !13116
  %16 = and i32 %15, 1073741820, !dbg !13116
  call void @llvm.dbg.value(metadata i32 %16, metadata !13105, metadata !DIExpression()), !dbg !13106
  %17 = getelementptr inbounds i32, i32* inttoptr (i32 -536866784 to i32*), i32 %16, !dbg !13117
  store volatile i32 %1, i32* %17, align 16, !dbg !13118
  %18 = getelementptr inbounds i32, i32* inttoptr (i32 -536866780 to i32*), i32 %16, !dbg !13119
  store volatile i32 %2, i32* %18, align 4, !dbg !13120
  %19 = getelementptr inbounds i32, i32* inttoptr (i32 -536866776 to i32*), i32 %16, !dbg !13121
  %20 = load volatile i32, i32* %19, align 8, !dbg !13122
  %21 = and i32 %20, 15, !dbg !13123
  %22 = or i32 %21, %3, !dbg !13124
  store volatile i32 %22, i32* %19, align 8, !dbg !13125
  br label %23, !dbg !13126

23:                                               ; preds = %4, %8, %14
  %24 = phi i32 [ 0, %14 ], [ -1, %8 ], [ -1, %4 ], !dbg !13127
  ret i32 %24, !dbg !13128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_suspend_bit() local_unnamed_addr #13 !dbg !13129 {
  call void @llvm.dbg.value(metadata i8 5, metadata !13133, metadata !DIExpression()), !dbg !13134
  ret i8 5, !dbg !13135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spi_mode_command() local_unnamed_addr #13 !dbg !13136 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_default, i32 0, i32 0), !dbg !13139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spiq_mode_command() local_unnamed_addr #13 !dbg !13140 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_default, i32 0, i32 0), !dbg !13141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_read_SR2_comand() local_unnamed_addr #13 !dbg !13142 {
  call void @llvm.dbg.value(metadata i8 5, metadata !13144, metadata !DIExpression()), !dbg !13145
  ret i8 5, !dbg !13146
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias %struct.flash_info_t* @customer_flash_register() local_unnamed_addr #13 !dbg !13147 {
  ret %struct.flash_info_t* null, !dbg !13150
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #4 !dbg !13151 {
  tail call void @system_init() #18, !dbg !13154
  tail call void @log_init(void (%struct.syslog_config_s*)* noundef null, i32 (%struct.syslog_config_s*)* noundef null, %struct.log_control_block_t** noundef null) #18, !dbg !13155
  call void @llvm.dbg.value(metadata i32 0, metadata !13153, metadata !DIExpression()), !dbg !13156
  br label %1, !dbg !13157

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %5, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !13153, metadata !DIExpression()), !dbg !13156
  %3 = inttoptr i32 %2 to i8*, !dbg !13159
  %4 = tail call i32 @xTaskGenericCreate(void (i8*)* noundef nonnull @vTestTask, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.268, i32 0, i32 0), i16 noundef zeroext 192, i8* noundef %3, i32 noundef 2, i8** noundef null, i32* noundef null, %struct.xMEMORY_REGION* noundef null) #18, !dbg !13159
  %5 = add nuw nsw i32 %2, 1, !dbg !13162
  call void @llvm.dbg.value(metadata i32 %5, metadata !13153, metadata !DIExpression()), !dbg !13156
  %6 = icmp eq i32 %5, 4, !dbg !13163
  br i1 %6, label %7, label %1, !dbg !13157, !llvm.loop !13164

7:                                                ; preds = %1
  tail call void @SysInitStatus_Set() #18, !dbg !13166
  tail call void @vTaskStartScheduler() #18, !dbg !13167
  br label %8, !dbg !13168

8:                                                ; preds = %8, %7
  br label %8, !dbg !13169, !llvm.loop !13172
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @vTestTask(i8* noundef %0) #4 !dbg !13175 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !13177, metadata !DIExpression()), !dbg !13181
  %3 = ptrtoint i8* %0 to i32, !dbg !13182
  call void @llvm.dbg.value(metadata i32 %3, metadata !13178, metadata !DIExpression()), !dbg !13181
  %4 = bitcast i32* %2 to i8*, !dbg !13183
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #19, !dbg !13183
  %5 = tail call i32 @xTaskGetTickCount() #18, !dbg !13184
  call void @llvm.dbg.value(metadata i32 %5, metadata !13179, metadata !DIExpression()), !dbg !13181
  store i32 %5, i32* %2, align 4, !dbg !13185
  %6 = shl i32 1000, %3, !dbg !13186
  call void @llvm.dbg.value(metadata i32 %6, metadata !13180, metadata !DIExpression()), !dbg !13181
  br label %7, !dbg !13187

7:                                                ; preds = %7, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !13179, metadata !DIExpression(DW_OP_deref)), !dbg !13181
  call void @vTaskDelayUntil(i32* noundef nonnull %2, i32 noundef %6) #18, !dbg !13188
  %8 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_freertos, i32 0, i32 3), align 4, !dbg !13190
  call void (i8*, i8*, i32, i32, i8*, ...) %8(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_freertos to i8*), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.vTestTask, i32 0, i32 0), i32 noundef 78, i32 noundef 1, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef %3) #18, !dbg !13190
  br label %7, !dbg !13187, !llvm.loop !13192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #0 !dbg !13194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13196, metadata !DIExpression()), !dbg !13198
  %2 = add i32 %0, -1, !dbg !13199
  %3 = icmp ugt i32 %2, 16777215, !dbg !13201
  br i1 %3, label %8, label %4, !dbg !13202

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13203
  call void @llvm.dbg.value(metadata i32 %5, metadata !13197, metadata !DIExpression()), !dbg !13198
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13204
  %7 = and i32 %6, -4, !dbg !13204
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13204
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13205
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13206
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13207
  br label %8, !dbg !13208

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !13198
  ret i32 %9, !dbg !13209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #0 !dbg !13210 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !13211
  ret void, !dbg !13212
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #5 !dbg !13213 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !13214
  ret i32 %1, !dbg !13215
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #2 !dbg !13216 {
  %1 = tail call i32 @top_mcu_freq_get() #18, !dbg !13217
  store i32 %1, i32* @SystemCoreClock, align 4, !dbg !13218
  ret void, !dbg !13219
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #0 !dbg !13220 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !13221
  %2 = or i32 %1, 15728640, !dbg !13221
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !13221
  store volatile i32 536870912, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !13222
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13223
  %4 = or i32 %3, 458752, !dbg !13223
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13223
  ret void, !dbg !13224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #0 !dbg !13225 {
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !13226
  store volatile i32 19, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !13227
  store volatile i32 3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !13228
  store volatile i32 268931328, i32* inttoptr (i32 22282240 to i32*), align 262144, !dbg !13229
  store volatile i32 270950400, i32* inttoptr (i32 22282304 to i32*), align 64, !dbg !13230
  store volatile i32 1, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !13231
  store volatile i32 781, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !13232
  ret void, !dbg !13233
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #2 !dbg !13234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13236, metadata !DIExpression()), !dbg !13237
  %2 = trunc i32 %0 to i8, !dbg !13238
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext %2) #18, !dbg !13239
  %3 = icmp eq i32 %0, 10, !dbg !13240
  br i1 %3, label %4, label %5, !dbg !13242

4:                                                ; preds = %1
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext 13) #18, !dbg !13243
  br label %5, !dbg !13245

5:                                                ; preds = %4, %1
  ret i32 %0, !dbg !13246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @system_init() local_unnamed_addr #2 !dbg !13247 {
  tail call fastcc void @SystemClock_Config() #17, !dbg !13248
  tail call fastcc void @prvSetupHardware() #17, !dbg !13249
  tail call fastcc void @_main_sys_random_init() #17, !dbg !13250
  ret void, !dbg !13251
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #2 !dbg !13252 {
  tail call void @top_xtal_init() #18, !dbg !13253
  tail call void @cmnCpuClkConfigureTo192M() #18, !dbg !13254
  tail call void @cmnSerialFlashClkConfTo64M() #18, !dbg !13255
  ret void, !dbg !13256
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #2 !dbg !13257 {
  tail call fastcc void @cache_enable() #17, !dbg !13258
  tail call void @bsp_ept_gpio_setting_init() #18, !dbg !13260
  %1 = tail call i32 @log_uart_init(i32 noundef 0) #18, !dbg !13261
  %2 = tail call i32 @hal_flash_init() #18, !dbg !13262
  ret void, !dbg !13263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_main_sys_random_init() unnamed_addr #2 !dbg !13264 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !13268
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #19, !dbg !13268
  %3 = tail call i32 @hal_trng_init() #18, !dbg !13269
  call void @llvm.dbg.value(metadata i32 %3, metadata !13267, metadata !DIExpression()), !dbg !13270
  %4 = icmp eq i32 %3, 0, !dbg !13271
  br i1 %4, label %5, label %10, !dbg !13273

5:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !13266, metadata !DIExpression(DW_OP_deref)), !dbg !13270
  %6 = call i32 @hal_trng_get_generated_random_number(i32* noundef nonnull %1) #18, !dbg !13274
  call void @llvm.dbg.value(metadata i32 %6, metadata !13267, metadata !DIExpression()), !dbg !13270
  %7 = icmp eq i32 %6, 0, !dbg !13276
  br i1 %7, label %8, label %10, !dbg !13276

8:                                                ; preds = %5
  %9 = load i32, i32* %1, align 4, !dbg !13277
  call void @llvm.dbg.value(metadata i32 %9, metadata !13266, metadata !DIExpression()), !dbg !13270
  call void @srand(i32 noundef %9) #18, !dbg !13280
  br label %12, !dbg !13281

10:                                               ; preds = %0, %5
  %11 = load void (i8*, i8*, i32, i32, i8*, ...)*, void (i8*, i8*, i32, i32, i8*, ...)** getelementptr inbounds (%struct.log_control_block_t, %struct.log_control_block_t* @log_control_block_common, i32 0, i32 3), align 4, !dbg !13282
  call void (i8*, i8*, i32, i32, i8*, ...) %11(i8* noundef bitcast (%struct.log_control_block_t* @log_control_block_common to i8*), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__._main_sys_random_init, i32 0, i32 0), i32 noundef 203, i32 noundef 1, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.280, i32 0, i32 0)) #18, !dbg !13282
  br label %12, !dbg !13286

12:                                               ; preds = %8, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #19, !dbg !13287
  ret void, !dbg !13287
}

; Function Attrs: optsize
declare dso_local void @srand(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cache_enable() unnamed_addr #2 !dbg !13288 {
  %1 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 3, metadata !13292, metadata !DIExpression()), !dbg !13302
  %2 = bitcast i64* %1 to i8*, !dbg !13303
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #19, !dbg !13303
  call void @llvm.dbg.value(metadata i64 8672947988828160, metadata !13295, metadata !DIExpression()), !dbg !13302
  store i64 8672947988828160, i64* %1, align 8, !dbg !13304
  call void @llvm.dbg.value(metadata i32 1, metadata !13294, metadata !DIExpression()), !dbg !13302
  %3 = tail call i32 @hal_cache_init() #18, !dbg !13305
  %4 = tail call i32 @hal_cache_set_size(i32 noundef 3) #18, !dbg !13306
  call void @llvm.dbg.value(metadata i32 undef, metadata !13293, metadata !DIExpression()), !dbg !13302
  %5 = bitcast i64* %1 to %struct.xTIME_OUT*, !dbg !13307
  call void @llvm.dbg.value(metadata i64* %1, metadata !13295, metadata !DIExpression(DW_OP_deref)), !dbg !13302
  %6 = call i32 @hal_cache_region_config(i32 noundef 0, %struct.xTIME_OUT* noundef nonnull %5) #18, !dbg !13311
  %7 = call i32 @hal_cache_region_enable(i32 noundef 0) #18, !dbg !13312
  call void @llvm.dbg.value(metadata i32 1, metadata !13293, metadata !DIExpression()), !dbg !13302
  br label %8, !dbg !13313

8:                                                ; preds = %0, %8
  %9 = phi i32 [ 1, %0 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13293, metadata !DIExpression()), !dbg !13302
  %10 = call i32 @hal_cache_region_disable(i32 noundef %9) #18, !dbg !13315
  %11 = add nuw nsw i32 %9, 1, !dbg !13318
  call void @llvm.dbg.value(metadata i32 %11, metadata !13293, metadata !DIExpression()), !dbg !13302
  %12 = icmp eq i32 %11, 16, !dbg !13319
  br i1 %12, label %13, label %8, !dbg !13313, !llvm.loop !13320

13:                                               ; preds = %8
  %14 = call i32 @hal_cache_enable() #18, !dbg !13322
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #19, !dbg !13323
  ret void, !dbg !13323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #13 !dbg !13324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13326, metadata !DIExpression()), !dbg !13327
  ret i32 0, !dbg !13328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #13 !dbg !13329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13379, metadata !DIExpression()), !dbg !13381
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !13380, metadata !DIExpression()), !dbg !13381
  ret i32 0, !dbg !13382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #13 !dbg !13383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13385, metadata !DIExpression()), !dbg !13386
  ret i32 1, !dbg !13387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !13388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13392, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.value(metadata i32 %1, metadata !13393, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.value(metadata i32 %2, metadata !13394, metadata !DIExpression()), !dbg !13395
  ret i32 0, !dbg !13396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !13397 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13401, metadata !DIExpression()), !dbg !13404
  call void @llvm.dbg.value(metadata i32 %1, metadata !13402, metadata !DIExpression()), !dbg !13404
  call void @llvm.dbg.value(metadata i32 %2, metadata !13403, metadata !DIExpression()), !dbg !13404
  ret i32 -1, !dbg !13405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #13 !dbg !13406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13410, metadata !DIExpression()), !dbg !13413
  call void @llvm.dbg.value(metadata i8* %1, metadata !13411, metadata !DIExpression()), !dbg !13413
  call void @llvm.dbg.value(metadata i32 %2, metadata !13412, metadata !DIExpression()), !dbg !13413
  ret i32 0, !dbg !13414
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #2 !dbg !13415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13417, metadata !DIExpression()), !dbg !13421
  call void @llvm.dbg.value(metadata i8* %1, metadata !13418, metadata !DIExpression()), !dbg !13421
  call void @llvm.dbg.value(metadata i32 %2, metadata !13419, metadata !DIExpression()), !dbg !13421
  call void @llvm.dbg.value(metadata i32 0, metadata !13420, metadata !DIExpression()), !dbg !13421
  %4 = icmp sgt i32 %2, 0, !dbg !13422
  br i1 %4, label %5, label %14, !dbg !13425

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !13420, metadata !DIExpression()), !dbg !13421
  call void @llvm.dbg.value(metadata i8* %7, metadata !13418, metadata !DIExpression()), !dbg !13421
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !13426
  call void @llvm.dbg.value(metadata i8* %8, metadata !13418, metadata !DIExpression()), !dbg !13421
  %9 = load i8, i8* %7, align 1, !dbg !13428
  %10 = zext i8 %9 to i32, !dbg !13428
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #18, !dbg !13429
  %12 = add nuw nsw i32 %6, 1, !dbg !13430
  call void @llvm.dbg.value(metadata i32 %12, metadata !13420, metadata !DIExpression()), !dbg !13421
  %13 = icmp eq i32 %12, %2, !dbg !13422
  br i1 %13, label %14, label %5, !dbg !13425, !llvm.loop !13431

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !13433
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #2 !dbg !1571 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !1765, metadata !DIExpression()), !dbg !13434
  call void @llvm.dbg.value(metadata i32 %1, metadata !1766, metadata !DIExpression()), !dbg !13434
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #19, !dbg !13435, !srcloc !13436
  call void @llvm.dbg.value(metadata i8* %3, metadata !1768, metadata !DIExpression()), !dbg !13434
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !13437
  %5 = icmp eq i8* %4, null, !dbg !13439
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !13440
  call void @llvm.dbg.value(metadata i8* %6, metadata !1767, metadata !DIExpression()), !dbg !13434
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !13441
  %8 = icmp ult i8* %3, %7, !dbg !13443
  %9 = xor i1 %8, true, !dbg !13444
  %10 = or i1 %5, %9, !dbg !13444
  br i1 %10, label %11, label %13, !dbg !13444

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !13445
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !13444
  br label %13, !dbg !13444

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !13445
  ret i8* %14, !dbg !13444
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @_exit(i32 noundef %0) local_unnamed_addr #4 !dbg !13446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13448, metadata !DIExpression()), !dbg !13449
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.288, i32 0, i32 0)) #18, !dbg !13450
  br label %3, !dbg !13451

3:                                                ; preds = %1, %3
  br label %3, !dbg !13451, !llvm.loop !13452
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !13454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13458, metadata !DIExpression()), !dbg !13460
  call void @llvm.dbg.value(metadata i32 %1, metadata !13459, metadata !DIExpression()), !dbg !13460
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.289, i32 0, i32 0), i32 noundef %1) #18, !dbg !13461
  ret i32 -1, !dbg !13462
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_getpid() local_unnamed_addr #2 !dbg !13463 {
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.290, i32 0, i32 0)) #18, !dbg !13468
  ret i32 0, !dbg !13469
}

attributes #0 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { argmemonly nofree nosync nounwind willreturn }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { naked noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree nosync nounwind willreturn }
attributes #15 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #16 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nobuiltin optsize "no-builtins" }
attributes #18 = { nobuiltin nounwind optsize "no-builtins" }
attributes #19 = { nounwind }
attributes #20 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!1788, !2, !1791, !170, !235, !300, !333, !1817, !363, !1828, !569, !778, !838, !1831, !1841, !916, !932, !1886, !1019, !1031, !1076, !1090, !1168, !1221, !1889, !1304, !1343, !1414, !1456, !1482, !1497, !1903, !1557, !1760, !1771}
!llvm.ident = !{!1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908, !1908}
!llvm.module.flags = !{!1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pxCurrentTCB", scope: !2, file: !3, line: 208, type: !167, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !26, globals: !106, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/tasks.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!4 = !{!5, !11, !19}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 122, baseType: !6, size: 32, elements: !7)
!6 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!7 = !{!8, !9, !10}
!8 = !DIEnumerator(name: "eNotWaitingNotification", value: 0)
!9 = !DIEnumerator(name: "eWaitingNotification", value: 1)
!10 = !DIEnumerator(name: "eNotified", value: 2)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !12, line: 112, baseType: !6, size: 32, elements: !13)
!12 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/task.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!13 = !{!14, !15, !16, !17, !18}
!14 = !DIEnumerator(name: "eRunning", value: 0)
!15 = !DIEnumerator(name: "eReady", value: 1)
!16 = !DIEnumerator(name: "eBlocked", value: 2)
!17 = !DIEnumerator(name: "eSuspended", value: 3)
!18 = !DIEnumerator(name: "eDeleted", value: 4)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !12, line: 122, baseType: !6, size: 32, elements: !20)
!20 = !{!21, !22, !23, !24, !25}
!21 = !DIEnumerator(name: "eNoAction", value: 0)
!22 = !DIEnumerator(name: "eSetBits", value: 1)
!23 = !DIEnumerator(name: "eIncrement", value: 2)
!24 = !DIEnumerator(name: "eSetValueWithOverwrite", value: 3)
!25 = !DIEnumerator(name: "eSetValueWithoutOverwrite", value: 4)
!26 = !{!27, !30, !31, !36, !38, !40, !41, !43, !45, !59, !35, !81, !95, !6, !99, !103, !104, !96}
!27 = !DIDerivedType(tag: DW_TAG_typedef, name: "UBaseType_t", file: !28, line: 99, baseType: !29)
!28 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!29 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !32, line: 36, baseType: !33)
!32 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!33 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !34, line: 57, baseType: !35)
!34 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!35 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 32)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "StackType_t", file: !28, line: 97, baseType: !38)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !32, line: 48, baseType: !39)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !34, line: 79, baseType: !6)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskHandle_t", file: !12, line: 103, baseType: !30)
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "BaseType_t", file: !28, line: 98, baseType: !42)
!42 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 32)
!44 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !38)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 32)
!46 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCB_t", file: !3, line: 195, baseType: !47)
!47 = !DIDerivedType(tag: DW_TAG_typedef, name: "tskTCB", file: !3, line: 191, baseType: !48)
!48 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tskTaskControlBlock", file: !3, line: 134, size: 672, elements: !49)
!49 = !{!50, !53, !65, !66, !67, !68, !73, !74, !75, !76, !77, !78}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "pxTopOfStack", scope: !48, file: !3, line: 136, baseType: !51, size: 32)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 32)
!52 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !37)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "xGenericListItem", scope: !48, file: !3, line: 143, baseType: !54, size: 160, offset: 32)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !55, line: 191, baseType: !56)
!55 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/list.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!56 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !55, line: 181, size: 160, elements: !57)
!57 = !{!58, !60, !62, !63, !64}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !56, file: !55, line: 184, baseType: !59, size: 32)
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "TickType_t", file: !28, line: 105, baseType: !38)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !56, file: !55, line: 185, baseType: !61, size: 32, offset: 32)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 32)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !56, file: !55, line: 186, baseType: !61, size: 32, offset: 64)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !56, file: !55, line: 187, baseType: !30, size: 32, offset: 96)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !56, file: !55, line: 188, baseType: !30, size: 32, offset: 128)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "xEventListItem", scope: !48, file: !3, line: 144, baseType: !54, size: 160, offset: 192)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "uxPriority", scope: !48, file: !3, line: 145, baseType: !27, size: 32, offset: 352)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "pxStack", scope: !48, file: !3, line: 146, baseType: !36, size: 32, offset: 384)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !48, file: !3, line: 147, baseType: !69, size: 48, offset: 416)
!69 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 48, elements: !71)
!70 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!71 = !{!72}
!72 = !DISubrange(count: 6)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "uxTCBNumber", scope: !48, file: !3, line: 158, baseType: !27, size: 32, offset: 480)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "uxTaskNumber", scope: !48, file: !3, line: 159, baseType: !27, size: 32, offset: 512)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !48, file: !3, line: 163, baseType: !27, size: 32, offset: 544)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "uxMutexesHeld", scope: !48, file: !3, line: 164, baseType: !27, size: 32, offset: 576)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "ulNotifiedValue", scope: !48, file: !3, line: 187, baseType: !44, size: 32, offset: 608)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "eNotifyState", scope: !48, file: !3, line: 188, baseType: !79, size: 32, offset: 640)
!79 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !80)
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyValue", file: !3, line: 127, baseType: !5)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 32)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !55, line: 212, baseType: !83)
!83 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !55, line: 205, size: 160, elements: !84)
!84 = !{!85, !86, !88}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !83, file: !55, line: 208, baseType: !27, size: 32)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !83, file: !55, line: 209, baseType: !87, size: 32, offset: 32)
!87 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 32)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !83, file: !55, line: 210, baseType: !89, size: 96, offset: 64)
!89 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !55, line: 200, baseType: !90)
!90 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !55, line: 193, size: 96, elements: !91)
!91 = !{!92, !93, !94}
!92 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !90, file: !55, line: 196, baseType: !59, size: 32)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !90, file: !55, line: 197, baseType: !61, size: 32, offset: 32)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !90, file: !55, line: 198, baseType: !61, size: 32, offset: 64)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 32)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !32, line: 24, baseType: !97)
!97 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !34, line: 43, baseType: !98)
!98 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !100, line: 40, baseType: !101)
!100 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration")
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !102, line: 131, baseType: !6)
!102 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !70)
!106 = !{!0, !107, !124, !127, !130, !132, !134, !136, !138, !141, !144, !146, !148, !150, !152, !155, !157, !159, !161, !163, !165}
!107 = !DIGlobalVariableExpression(var: !108, expr: !DIExpression())
!108 = distinct !DIGlobalVariable(name: "ucExpectedStackBytes", scope: !109, file: !3, line: 2240, type: !120, isLocal: true, isDefinition: true)
!109 = distinct !DISubprogram(name: "vTaskSwitchContext", scope: !3, file: !3, line: 2198, type: !110, scopeLine: 2199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !112)
!110 = !DISubroutineType(types: !111)
!111 = !{null}
!112 = !{!113, !117}
!113 = !DILocalVariable(name: "uxTopPriority", scope: !114, file: !3, line: 2244, type: !27)
!114 = distinct !DILexicalBlock(scope: !115, file: !3, line: 2244, column: 3)
!115 = distinct !DILexicalBlock(scope: !116, file: !3, line: 2207, column: 2)
!116 = distinct !DILexicalBlock(scope: !109, file: !3, line: 2200, column: 6)
!117 = !DILocalVariable(name: "pxConstList", scope: !118, file: !3, line: 2244, type: !119)
!118 = distinct !DILexicalBlock(scope: !114, file: !3, line: 2244, column: 3)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !81)
!120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !122)
!121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !96)
!122 = !{!123}
!123 = !DISubrange(count: 20)
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(name: "pxReadyTasksLists", scope: !2, file: !3, line: 211, type: !126, isLocal: true, isDefinition: true)
!126 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 3200, elements: !122)
!127 = !DIGlobalVariableExpression(var: !128, expr: !DIExpression())
!128 = distinct !DIGlobalVariable(name: "pxDelayedTaskList", scope: !2, file: !3, line: 214, type: !129, isLocal: true, isDefinition: true)
!129 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !81)
!130 = !DIGlobalVariableExpression(var: !131, expr: !DIExpression())
!131 = distinct !DIGlobalVariable(name: "pxOverflowDelayedTaskList", scope: !2, file: !3, line: 215, type: !129, isLocal: true, isDefinition: true)
!132 = !DIGlobalVariableExpression(var: !133, expr: !DIExpression())
!133 = distinct !DIGlobalVariable(name: "xPendingReadyList", scope: !2, file: !3, line: 216, type: !82, isLocal: true, isDefinition: true)
!134 = !DIGlobalVariableExpression(var: !135, expr: !DIExpression())
!135 = distinct !DIGlobalVariable(name: "xTasksWaitingTermination", scope: !2, file: !3, line: 220, type: !82, isLocal: true, isDefinition: true)
!136 = !DIGlobalVariableExpression(var: !137, expr: !DIExpression())
!137 = distinct !DIGlobalVariable(name: "xSuspendedTaskList", scope: !2, file: !3, line: 227, type: !82, isLocal: true, isDefinition: true)
!138 = !DIGlobalVariableExpression(var: !139, expr: !DIExpression())
!139 = distinct !DIGlobalVariable(name: "uxCurrentNumberOfTasks", scope: !2, file: !3, line: 238, type: !140, isLocal: true, isDefinition: true)
!140 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !27)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "xSchedulerRunning", scope: !2, file: !3, line: 241, type: !143, isLocal: true, isDefinition: true)
!143 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !41)
!144 = !DIGlobalVariableExpression(var: !145, expr: !DIExpression())
!145 = distinct !DIGlobalVariable(name: "uxTaskNumber", scope: !2, file: !3, line: 245, type: !27, isLocal: true, isDefinition: true)
!146 = !DIGlobalVariableExpression(var: !147, expr: !DIExpression())
!147 = distinct !DIGlobalVariable(name: "uxTopReadyPriority", scope: !2, file: !3, line: 240, type: !140, isLocal: true, isDefinition: true)
!148 = !DIGlobalVariableExpression(var: !149, expr: !DIExpression())
!149 = distinct !DIGlobalVariable(name: "uxTasksDeleted", scope: !2, file: !3, line: 221, type: !140, isLocal: true, isDefinition: true)
!150 = !DIGlobalVariableExpression(var: !151, expr: !DIExpression())
!151 = distinct !DIGlobalVariable(name: "uxSchedulerSuspended", scope: !2, file: !3, line: 256, type: !140, isLocal: true, isDefinition: true)
!152 = !DIGlobalVariableExpression(var: !153, expr: !DIExpression())
!153 = distinct !DIGlobalVariable(name: "xTickCount", scope: !2, file: !3, line: 239, type: !154, isLocal: true, isDefinition: true)
!154 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !59)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "xYieldPending", scope: !2, file: !3, line: 243, type: !143, isLocal: true, isDefinition: true)
!157 = !DIGlobalVariableExpression(var: !158, expr: !DIExpression())
!158 = distinct !DIGlobalVariable(name: "uxPendedTicks", scope: !2, file: !3, line: 242, type: !140, isLocal: true, isDefinition: true)
!159 = !DIGlobalVariableExpression(var: !160, expr: !DIExpression())
!160 = distinct !DIGlobalVariable(name: "xNumOfOverflows", scope: !2, file: !3, line: 244, type: !143, isLocal: true, isDefinition: true)
!161 = !DIGlobalVariableExpression(var: !162, expr: !DIExpression())
!162 = distinct !DIGlobalVariable(name: "xNextTaskUnblockTime", scope: !2, file: !3, line: 246, type: !154, isLocal: true, isDefinition: true)
!163 = !DIGlobalVariableExpression(var: !164, expr: !DIExpression())
!164 = distinct !DIGlobalVariable(name: "xDelayedTaskList1", scope: !2, file: !3, line: 212, type: !82, isLocal: true, isDefinition: true)
!165 = !DIGlobalVariableExpression(var: !166, expr: !DIExpression())
!166 = distinct !DIGlobalVariable(name: "xDelayedTaskList2", scope: !2, file: !3, line: 213, type: !82, isLocal: true, isDefinition: true)
!167 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !45)
!168 = !DIGlobalVariableExpression(var: !169, expr: !DIExpression())
!169 = distinct !DIGlobalVariable(name: "xQueueRegistry", scope: !170, file: !171, line: 192, type: !222, isLocal: false, isDefinition: true)
!170 = distinct !DICompileUnit(language: DW_LANG_C99, file: !171, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !172, globals: !221, splitDebugInlining: false, nameTableKind: None)
!171 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/queue.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!172 = !{!173, !27, !41, !43, !30, !99, !179, !59, !96}
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "Queue_t", file: !171, line: 165, baseType: !175)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQUEUE", file: !171, line: 161, baseType: !176)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QueueDefinition", file: !171, line: 130, size: 672, elements: !177)
!177 = !{!178, !183, !184, !185, !190, !213, !214, !215, !216, !217, !218, !219, !220}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "pcHead", scope: !176, file: !171, line: 132, baseType: !179, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !32, line: 20, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !34, line: 41, baseType: !182)
!182 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "pcTail", scope: !176, file: !171, line: 133, baseType: !179, size: 32, offset: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "pcWriteTo", scope: !176, file: !171, line: 134, baseType: !179, size: 32, offset: 64)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !176, file: !171, line: 140, baseType: !186, size: 32, offset: 96)
!186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !176, file: !171, line: 136, size: 32, elements: !187)
!187 = !{!188, !189}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "pcReadFrom", scope: !186, file: !171, line: 138, baseType: !179, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "uxRecursiveCallCount", scope: !186, file: !171, line: 139, baseType: !27, size: 32)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToSend", scope: !176, file: !171, line: 142, baseType: !191, size: 160, offset: 128)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !55, line: 212, baseType: !192)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !55, line: 205, size: 160, elements: !193)
!193 = !{!194, !195, !206}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !192, file: !55, line: 208, baseType: !27, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !192, file: !55, line: 209, baseType: !196, size: 32, offset: 32)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !55, line: 191, baseType: !198)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !55, line: 181, size: 160, elements: !199)
!199 = !{!200, !201, !203, !204, !205}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !198, file: !55, line: 184, baseType: !59, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !198, file: !55, line: 185, baseType: !202, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !198, file: !55, line: 186, baseType: !202, size: 32, offset: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !198, file: !55, line: 187, baseType: !30, size: 32, offset: 96)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !198, file: !55, line: 188, baseType: !30, size: 32, offset: 128)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !192, file: !55, line: 210, baseType: !207, size: 96, offset: 64)
!207 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !55, line: 200, baseType: !208)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !55, line: 193, size: 96, elements: !209)
!209 = !{!210, !211, !212}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !208, file: !55, line: 196, baseType: !59, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !208, file: !55, line: 197, baseType: !202, size: 32, offset: 32)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !208, file: !55, line: 198, baseType: !202, size: 32, offset: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "xTasksWaitingToReceive", scope: !176, file: !171, line: 143, baseType: !191, size: 160, offset: 288)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "uxMessagesWaiting", scope: !176, file: !171, line: 145, baseType: !140, size: 32, offset: 448)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "uxLength", scope: !176, file: !171, line: 146, baseType: !27, size: 32, offset: 480)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "uxItemSize", scope: !176, file: !171, line: 147, baseType: !27, size: 32, offset: 512)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "xRxLock", scope: !176, file: !171, line: 149, baseType: !143, size: 32, offset: 544)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "xTxLock", scope: !176, file: !171, line: 150, baseType: !143, size: 32, offset: 576)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "uxQueueNumber", scope: !176, file: !171, line: 153, baseType: !27, size: 32, offset: 608)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "ucQueueType", scope: !176, file: !171, line: 154, baseType: !96, size: 8, offset: 640)
!221 = !{!168}
!222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !223, size: 512, elements: !231)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueRegistryItem_t", file: !171, line: 187, baseType: !224)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "xQueueRegistryItem", file: !171, line: 182, baseType: !225)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QUEUE_REGISTRY_ITEM", file: !171, line: 178, size: 64, elements: !226)
!226 = !{!227, !228}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "pcQueueName", scope: !225, file: !171, line: 180, baseType: !104, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !225, file: !171, line: 181, baseType: !229, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "QueueHandle_t", file: !230, line: 88, baseType: !30)
!230 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/queue.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!231 = !{!232}
!232 = !DISubrange(count: 8)
!233 = !DIGlobalVariableExpression(var: !234, expr: !DIExpression())
!234 = distinct !DIGlobalVariable(name: "xTimerQueue", scope: !235, file: !236, line: 169, type: !229, isLocal: true, isDefinition: true)
!235 = distinct !DICompileUnit(language: DW_LANG_C99, file: !236, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !237, globals: !265, splitDebugInlining: false, nameTableKind: None)
!236 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/timers.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!237 = !{!41, !30, !31, !35, !27, !59, !238, !263, !43, !96}
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer_t", file: !236, line: 119, baseType: !240)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "xTIMER", file: !236, line: 115, baseType: !241)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerControl", file: !236, line: 104, size: 352, elements: !242)
!242 = !{!243, !244, !254, !255, !256, !257, !264}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "pcTimerName", scope: !241, file: !236, line: 106, baseType: !104, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerListItem", scope: !241, file: !236, line: 107, baseType: !245, size: 160, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !55, line: 191, baseType: !246)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !55, line: 181, size: 160, elements: !247)
!247 = !{!248, !249, !251, !252, !253}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !246, file: !55, line: 184, baseType: !59, size: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !246, file: !55, line: 185, baseType: !250, size: 32, offset: 32)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !246, file: !55, line: 186, baseType: !250, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !246, file: !55, line: 187, baseType: !30, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !246, file: !55, line: 188, baseType: !30, size: 32, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerPeriodInTicks", scope: !241, file: !236, line: 108, baseType: !59, size: 32, offset: 192)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "uxAutoReload", scope: !241, file: !236, line: 109, baseType: !27, size: 32, offset: 224)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "pvTimerID", scope: !241, file: !236, line: 110, baseType: !30, size: 32, offset: 256)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "pxCallbackFunction", scope: !241, file: !236, line: 111, baseType: !258, size: 32, offset: 288)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerCallbackFunction_t", file: !259, line: 123, baseType: !260)
!259 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/timers.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DISubroutineType(types: !262)
!262 = !{null, !263}
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerHandle_t", file: !259, line: 118, baseType: !30)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "uxTimerNumber", scope: !241, file: !236, line: 113, baseType: !27, size: 32, offset: 320)
!265 = !{!233, !266, !282, !292, !294, !296}
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "pxCurrentTimerList", scope: !235, file: !236, line: 165, type: !268, isLocal: true, isDefinition: true)
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !55, line: 212, baseType: !270)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !55, line: 205, size: 160, elements: !271)
!271 = !{!272, !273, !275}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !270, file: !55, line: 208, baseType: !27, size: 32)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !270, file: !55, line: 209, baseType: !274, size: 32, offset: 32)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !270, file: !55, line: 210, baseType: !276, size: 96, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !55, line: 200, baseType: !277)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !55, line: 193, size: 96, elements: !278)
!278 = !{!279, !280, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !277, file: !55, line: 196, baseType: !59, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !277, file: !55, line: 197, baseType: !250, size: 32, offset: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !277, file: !55, line: 198, baseType: !250, size: 32, offset: 64)
!282 = !DIGlobalVariableExpression(var: !283, expr: !DIExpression())
!283 = distinct !DIGlobalVariable(name: "xLastTime", scope: !284, file: !236, line: 524, type: !59, isLocal: true, isDefinition: true)
!284 = distinct !DISubprogram(name: "prvSampleTimeNow", scope: !236, file: !236, line: 521, type: !285, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !289)
!285 = !DISubroutineType(types: !286)
!286 = !{!59, !287}
!287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 32)
!289 = !{!290, !291}
!290 = !DILocalVariable(name: "pxTimerListsWereSwitched", arg: 1, scope: !284, file: !236, line: 521, type: !287)
!291 = !DILocalVariable(name: "xTimeNow", scope: !284, file: !236, line: 523, type: !59)
!292 = !DIGlobalVariableExpression(var: !293, expr: !DIExpression())
!293 = distinct !DIGlobalVariable(name: "pxOverflowTimerList", scope: !235, file: !236, line: 166, type: !268, isLocal: true, isDefinition: true)
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "xActiveTimerList1", scope: !235, file: !236, line: 163, type: !269, isLocal: true, isDefinition: true)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(name: "xActiveTimerList2", scope: !235, file: !236, line: 164, type: !269, isLocal: true, isDefinition: true)
!298 = !DIGlobalVariableExpression(var: !299, expr: !DIExpression())
!299 = distinct !DIGlobalVariable(name: "ucMaxSysCallPriority", scope: !300, file: !301, line: 212, type: !96, isLocal: true, isDefinition: true)
!300 = distinct !DICompileUnit(language: DW_LANG_C99, file: !301, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !302, retainedTypes: !318, globals: !321, splitDebugInlining: false, nameTableKind: None)
!301 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!302 = !{!303, !311}
!303 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !304, line: 50, baseType: !6, size: 32, elements: !305)
!304 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_dwt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!305 = !{!306, !307, !308, !309, !310}
!306 = !DIEnumerator(name: "HAL_DWT_0", value: 0)
!307 = !DIEnumerator(name: "HAL_DWT_1", value: 1)
!308 = !DIEnumerator(name: "HAL_DWT_2", value: 2)
!309 = !DIEnumerator(name: "HAL_DWT_3", value: 3)
!310 = !DIEnumerator(name: "HAL_DWT_MAX", value: 4)
!311 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !304, line: 42, baseType: !6, size: 32, elements: !312)
!312 = !{!313, !314, !315, !316, !317}
!313 = !DIEnumerator(name: "COMP_DISABLE", value: 0)
!314 = !DIEnumerator(name: "WDE_INST", value: 4)
!315 = !DIEnumerator(name: "WDE_DATA_RO", value: 5)
!316 = !DIEnumerator(name: "WDE_DATA_WO", value: 6)
!317 = !DIEnumerator(name: "WDE_DATA_RW", value: 7)
!318 = !{!37, !30, !319, !96, !38, !43, !41, !59}
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 32)
!320 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !96)
!321 = !{!322, !298, !327, !329}
!322 = !DIGlobalVariableExpression(var: !323, expr: !DIExpression())
!323 = distinct !DIGlobalVariable(name: "pcInterruptPriorityRegisters", scope: !300, file: !301, line: 214, type: !324, isLocal: true, isDefinition: true)
!324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !320)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "ulMaxPRIGROUPValue", scope: !300, file: !301, line: 213, type: !38, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "uxCriticalNesting", scope: !300, file: !301, line: 150, type: !27, isLocal: true, isDefinition: true)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "pxEnd", scope: !333, file: !334, line: 142, type: !336, isLocal: true, isDefinition: true)
!333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !334, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !335, globals: !343, splitDebugInlining: false, nameTableKind: None)
!334 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/MemMang/heap_4.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!335 = !{!30, !95, !99, !38, !336}
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 32)
!337 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlockLink_t", file: !334, line: 117, baseType: !338)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "A_BLOCK_LINK", file: !334, line: 110, size: 64, elements: !339)
!339 = !{!340, !342}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "pxNextFreeBlock", scope: !338, file: !334, line: 112, baseType: !341, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "xBlockSize", scope: !338, file: !334, line: 113, baseType: !99, size: 32, offset: 32)
!343 = !{!344, !347, !331, !349, !351, !353, !355}
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression(DW_OP_constu, 8, DW_OP_stack_value))
!345 = distinct !DIGlobalVariable(name: "xHeapStructSize", scope: !333, file: !334, line: 139, type: !346, isLocal: true, isDefinition: true)
!346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !99)
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "xStart", scope: !333, file: !334, line: 142, type: !337, isLocal: true, isDefinition: true)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "xBlockAllocatedBit", scope: !333, file: !334, line: 153, type: !99, isLocal: true, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "xFreeBytesRemaining", scope: !333, file: !334, line: 146, type: !99, isLocal: true, isDefinition: true)
!353 = !DIGlobalVariableExpression(var: !354, expr: !DIExpression())
!354 = distinct !DIGlobalVariable(name: "xMinimumEverFreeBytesRemaining", scope: !333, file: !334, line: 147, type: !99, isLocal: true, isDefinition: true)
!355 = !DIGlobalVariableExpression(var: !356, expr: !DIExpression())
!356 = distinct !DIGlobalVariable(name: "ucHeap", scope: !333, file: !334, line: 105, type: !357, isLocal: true, isDefinition: true)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 524288, elements: !358)
!358 = !{!359}
!359 = !DISubrange(count: 65536)
!360 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 2147483648, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "xExceptionStack", scope: !363, file: !364, line: 78, type: !560, isLocal: true, isDefinition: true)
!363 = distinct !DICompileUnit(language: DW_LANG_C99, file: !364, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !365, retainedTypes: !393, globals: !466, splitDebugInlining: false, nameTableKind: None)
!364 = !DIFile(filename: "../../../../../kernel/service/src/exception_handler.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!365 = !{!366, !303}
!366 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !364, line: 276, baseType: !6, size: 32, elements: !367)
!367 = !{!368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392}
!368 = !DIEnumerator(name: "r0", value: 0)
!369 = !DIEnumerator(name: "r1", value: 1)
!370 = !DIEnumerator(name: "r2", value: 2)
!371 = !DIEnumerator(name: "r3", value: 3)
!372 = !DIEnumerator(name: "r12", value: 4)
!373 = !DIEnumerator(name: "lr", value: 5)
!374 = !DIEnumerator(name: "pc", value: 6)
!375 = !DIEnumerator(name: "psr", value: 7)
!376 = !DIEnumerator(name: "s0", value: 8)
!377 = !DIEnumerator(name: "s1", value: 9)
!378 = !DIEnumerator(name: "s2", value: 10)
!379 = !DIEnumerator(name: "s3", value: 11)
!380 = !DIEnumerator(name: "s4", value: 12)
!381 = !DIEnumerator(name: "s5", value: 13)
!382 = !DIEnumerator(name: "s6", value: 14)
!383 = !DIEnumerator(name: "s7", value: 15)
!384 = !DIEnumerator(name: "s8", value: 16)
!385 = !DIEnumerator(name: "s9", value: 17)
!386 = !DIEnumerator(name: "s10", value: 18)
!387 = !DIEnumerator(name: "s11", value: 19)
!388 = !DIEnumerator(name: "s12", value: 20)
!389 = !DIEnumerator(name: "s13", value: 21)
!390 = !DIEnumerator(name: "s14", value: 22)
!391 = !DIEnumerator(name: "s15", value: 23)
!392 = !DIEnumerator(name: "fpscr", value: 24)
!393 = !{!394, !434, !6, !38, !436}
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !396, line: 418, baseType: !397)
!396 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 395, size: 1120, elements: !398)
!398 = !{!399, !401, !402, !403, !404, !405, !406, !410, !411, !412, !413, !414, !415, !416, !417, !421, !422, !423, !427, !431, !433}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !397, file: !396, line: 397, baseType: !400, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !44)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !397, file: !396, line: 398, baseType: !44, size: 32, offset: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !397, file: !396, line: 399, baseType: !44, size: 32, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !397, file: !396, line: 400, baseType: !44, size: 32, offset: 96)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !397, file: !396, line: 401, baseType: !44, size: 32, offset: 128)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !397, file: !396, line: 402, baseType: !44, size: 32, offset: 160)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !397, file: !396, line: 403, baseType: !407, size: 96, offset: 192)
!407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 96, elements: !408)
!408 = !{!409}
!409 = !DISubrange(count: 12)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !397, file: !396, line: 404, baseType: !44, size: 32, offset: 288)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !397, file: !396, line: 405, baseType: !44, size: 32, offset: 320)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !397, file: !396, line: 406, baseType: !44, size: 32, offset: 352)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !397, file: !396, line: 407, baseType: !44, size: 32, offset: 384)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !397, file: !396, line: 408, baseType: !44, size: 32, offset: 416)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !397, file: !396, line: 409, baseType: !44, size: 32, offset: 448)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !397, file: !396, line: 410, baseType: !44, size: 32, offset: 480)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !397, file: !396, line: 411, baseType: !418, size: 64, offset: 512)
!418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 64, elements: !419)
!419 = !{!420}
!420 = !DISubrange(count: 2)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !397, file: !396, line: 412, baseType: !400, size: 32, offset: 576)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !397, file: !396, line: 413, baseType: !400, size: 32, offset: 608)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !397, file: !396, line: 414, baseType: !424, size: 128, offset: 640)
!424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 128, elements: !425)
!425 = !{!426}
!426 = !DISubrange(count: 4)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !397, file: !396, line: 415, baseType: !428, size: 160, offset: 768)
!428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 160, elements: !429)
!429 = !{!430}
!430 = !DISubrange(count: 5)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !397, file: !396, line: 416, baseType: !432, size: 160, offset: 928)
!432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 160, elements: !429)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !397, file: !396, line: 417, baseType: !44, size: 32, offset: 1088)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 32)
!435 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !396, line: 826, baseType: !438)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 801, size: 736, elements: !439)
!439 = !{!440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !438, file: !396, line: 803, baseType: !44, size: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !438, file: !396, line: 804, baseType: !44, size: 32, offset: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !438, file: !396, line: 805, baseType: !44, size: 32, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !438, file: !396, line: 806, baseType: !44, size: 32, offset: 96)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !438, file: !396, line: 807, baseType: !44, size: 32, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !438, file: !396, line: 808, baseType: !44, size: 32, offset: 160)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !438, file: !396, line: 809, baseType: !44, size: 32, offset: 192)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !438, file: !396, line: 810, baseType: !400, size: 32, offset: 224)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !438, file: !396, line: 811, baseType: !44, size: 32, offset: 256)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !438, file: !396, line: 812, baseType: !44, size: 32, offset: 288)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !438, file: !396, line: 813, baseType: !44, size: 32, offset: 320)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !438, file: !396, line: 814, baseType: !452, size: 32, offset: 352)
!452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 32, elements: !453)
!453 = !{!454}
!454 = !DISubrange(count: 1)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !438, file: !396, line: 815, baseType: !44, size: 32, offset: 384)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !438, file: !396, line: 816, baseType: !44, size: 32, offset: 416)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !438, file: !396, line: 817, baseType: !44, size: 32, offset: 448)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !438, file: !396, line: 818, baseType: !452, size: 32, offset: 480)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !438, file: !396, line: 819, baseType: !44, size: 32, offset: 512)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !438, file: !396, line: 820, baseType: !44, size: 32, offset: 544)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !438, file: !396, line: 821, baseType: !44, size: 32, offset: 576)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !438, file: !396, line: 822, baseType: !452, size: 32, offset: 608)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !438, file: !396, line: 823, baseType: !44, size: 32, offset: 640)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !438, file: !396, line: 824, baseType: !44, size: 32, offset: 672)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !438, file: !396, line: 825, baseType: !44, size: 32, offset: 704)
!466 = !{!467, !470, !361, !530, !540, !542, !558}
!467 = !DIGlobalVariableExpression(var: !468, expr: !DIExpression())
!468 = distinct !DIGlobalVariable(name: "pxExceptionStack", scope: !363, file: !364, line: 79, type: !469, isLocal: false, isDefinition: true)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 32)
!470 = !DIGlobalVariableExpression(var: !471, expr: !DIExpression())
!471 = distinct !DIGlobalVariable(name: "pTaskContext", scope: !363, file: !364, line: 340, type: !472, isLocal: false, isDefinition: true)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskContext", file: !364, line: 337, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TaskContextType", file: !364, line: 282, size: 1728, elements: !475)
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !474, file: !364, line: 283, baseType: !6, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !474, file: !364, line: 284, baseType: !6, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !474, file: !364, line: 285, baseType: !6, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !474, file: !364, line: 286, baseType: !6, size: 32, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "r4", scope: !474, file: !364, line: 287, baseType: !6, size: 32, offset: 128)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "r5", scope: !474, file: !364, line: 288, baseType: !6, size: 32, offset: 160)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "r6", scope: !474, file: !364, line: 289, baseType: !6, size: 32, offset: 192)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "r7", scope: !474, file: !364, line: 290, baseType: !6, size: 32, offset: 224)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !474, file: !364, line: 291, baseType: !6, size: 32, offset: 256)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !474, file: !364, line: 292, baseType: !6, size: 32, offset: 288)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !474, file: !364, line: 293, baseType: !6, size: 32, offset: 320)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !474, file: !364, line: 294, baseType: !6, size: 32, offset: 352)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !474, file: !364, line: 295, baseType: !6, size: 32, offset: 384)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !474, file: !364, line: 296, baseType: !6, size: 32, offset: 416)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !474, file: !364, line: 297, baseType: !6, size: 32, offset: 448)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !474, file: !364, line: 298, baseType: !6, size: 32, offset: 480)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "psr", scope: !474, file: !364, line: 299, baseType: !6, size: 32, offset: 512)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !474, file: !364, line: 300, baseType: !6, size: 32, offset: 544)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "exc_return", scope: !474, file: !364, line: 301, baseType: !6, size: 32, offset: 576)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "msp", scope: !474, file: !364, line: 302, baseType: !6, size: 32, offset: 608)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !474, file: !364, line: 303, baseType: !6, size: 32, offset: 640)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "fpscr", scope: !474, file: !364, line: 304, baseType: !6, size: 32, offset: 672)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "s0", scope: !474, file: !364, line: 305, baseType: !6, size: 32, offset: 704)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "s1", scope: !474, file: !364, line: 306, baseType: !6, size: 32, offset: 736)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "s2", scope: !474, file: !364, line: 307, baseType: !6, size: 32, offset: 768)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "s3", scope: !474, file: !364, line: 308, baseType: !6, size: 32, offset: 800)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "s4", scope: !474, file: !364, line: 309, baseType: !6, size: 32, offset: 832)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "s5", scope: !474, file: !364, line: 310, baseType: !6, size: 32, offset: 864)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "s6", scope: !474, file: !364, line: 311, baseType: !6, size: 32, offset: 896)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "s7", scope: !474, file: !364, line: 312, baseType: !6, size: 32, offset: 928)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "s8", scope: !474, file: !364, line: 313, baseType: !6, size: 32, offset: 960)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "s9", scope: !474, file: !364, line: 314, baseType: !6, size: 32, offset: 992)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "s10", scope: !474, file: !364, line: 315, baseType: !6, size: 32, offset: 1024)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "s11", scope: !474, file: !364, line: 316, baseType: !6, size: 32, offset: 1056)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "s12", scope: !474, file: !364, line: 317, baseType: !6, size: 32, offset: 1088)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "s13", scope: !474, file: !364, line: 318, baseType: !6, size: 32, offset: 1120)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "s14", scope: !474, file: !364, line: 319, baseType: !6, size: 32, offset: 1152)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "s15", scope: !474, file: !364, line: 320, baseType: !6, size: 32, offset: 1184)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "s16", scope: !474, file: !364, line: 321, baseType: !6, size: 32, offset: 1216)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "s17", scope: !474, file: !364, line: 322, baseType: !6, size: 32, offset: 1248)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "s18", scope: !474, file: !364, line: 323, baseType: !6, size: 32, offset: 1280)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "s19", scope: !474, file: !364, line: 324, baseType: !6, size: 32, offset: 1312)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "s20", scope: !474, file: !364, line: 325, baseType: !6, size: 32, offset: 1344)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "s21", scope: !474, file: !364, line: 326, baseType: !6, size: 32, offset: 1376)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "s22", scope: !474, file: !364, line: 327, baseType: !6, size: 32, offset: 1408)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "s23", scope: !474, file: !364, line: 328, baseType: !6, size: 32, offset: 1440)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "s24", scope: !474, file: !364, line: 329, baseType: !6, size: 32, offset: 1472)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "s25", scope: !474, file: !364, line: 330, baseType: !6, size: 32, offset: 1504)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "s26", scope: !474, file: !364, line: 331, baseType: !6, size: 32, offset: 1536)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "s27", scope: !474, file: !364, line: 332, baseType: !6, size: 32, offset: 1568)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "s28", scope: !474, file: !364, line: 333, baseType: !6, size: 32, offset: 1600)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "s29", scope: !474, file: !364, line: 334, baseType: !6, size: 32, offset: 1632)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "s30", scope: !474, file: !364, line: 335, baseType: !6, size: 32, offset: 1664)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "s31", scope: !474, file: !364, line: 336, baseType: !6, size: 32, offset: 1696)
!530 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression())
!531 = distinct !DIGlobalVariable(name: "assert_expr", scope: !363, file: !364, line: 99, type: !532, isLocal: true, isDefinition: true)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "assert_expr_t", file: !364, line: 95, baseType: !533)
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !364, line: 89, size: 128, elements: !534)
!534 = !{!535, !537, !538, !539}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "is_valid", scope: !533, file: !364, line: 91, baseType: !536, size: 8)
!536 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !533, file: !364, line: 92, baseType: !104, size: 32, offset: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !533, file: !364, line: 93, baseType: !104, size: 32, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !533, file: !364, line: 94, baseType: !103, size: 32, offset: 96)
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "reboot_flag", scope: !363, file: !364, line: 101, type: !103, isLocal: true, isDefinition: true)
!542 = !DIGlobalVariableExpression(var: !543, expr: !DIExpression())
!543 = distinct !DIGlobalVariable(name: "exception_config", scope: !363, file: !364, line: 97, type: !544, isLocal: true, isDefinition: true)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_t", file: !364, line: 87, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !364, line: 83, size: 416, elements: !546)
!546 = !{!547, !548}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !545, file: !364, line: 85, baseType: !103, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "configs", scope: !545, file: !364, line: 86, baseType: !549, size: 384, offset: 32)
!549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 384, elements: !71)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !551, line: 99, baseType: !552)
!551 = !DIFile(filename: "../../../../../kernel/service/inc/exception_handler.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !551, line: 95, size: 64, elements: !553)
!553 = !{!554, !557}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !552, file: !551, line: 97, baseType: !555, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_exception_callback_t", file: !551, line: 93, baseType: !556)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !552, file: !551, line: 98, baseType: !555, size: 32, offset: 32)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "taskContext", scope: !363, file: !364, line: 339, type: !473, isLocal: true, isDefinition: true)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 6144, elements: !561)
!561 = !{!562}
!562 = !DISubrange(count: 192)
!563 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value, DW_OP_LLVM_fragment, 0, 8))
!564 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!565 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression(DW_OP_LLVM_fragment, 64, 32))
!566 = !DIGlobalVariableExpression(var: !531, expr: !DIExpression(DW_OP_LLVM_fragment, 96, 32))
!567 = !DIGlobalVariableExpression(var: !568, expr: !DIExpression())
!568 = distinct !DIGlobalVariable(name: "g_log_uart_port", scope: !569, file: !570, line: 166, type: !774, isLocal: true, isDefinition: true)
!569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !570, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !571, retainedTypes: !658, globals: !734, splitDebugInlining: false, nameTableKind: None)
!570 = !DIFile(filename: "../../../../../kernel/service/src/syslog.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!571 = !{!572, !577, !583, !591, !597, !613, !619, !623, !628, !632, !645, !653}
!572 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !573, line: 65, baseType: !6, size: 32, elements: !574)
!573 = !DIFile(filename: "../../../../../kernel/service/inc/syslog.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!574 = !{!575, !576}
!575 = !DIEnumerator(name: "DEBUG_LOG_ON", value: 0)
!576 = !DIEnumerator(name: "DEBUG_LOG_OFF", value: 1)
!577 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !573, line: 74, baseType: !6, size: 32, elements: !578)
!578 = !{!579, !580, !581, !582}
!579 = !DIEnumerator(name: "PRINT_LEVEL_DEBUG", value: 0)
!580 = !DIEnumerator(name: "PRINT_LEVEL_INFO", value: 1)
!581 = !DIEnumerator(name: "PRINT_LEVEL_WARNING", value: 2)
!582 = !DIEnumerator(name: "PRINT_LEVEL_ERROR", value: 3)
!583 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !584, line: 345, baseType: !103, size: 32, elements: !585)
!584 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!585 = !{!586, !587, !588, !589, !590}
!586 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!587 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!588 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!589 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!590 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!591 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !592, line: 109, baseType: !6, size: 32, elements: !593)
!592 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!593 = !{!594, !595, !596}
!594 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!595 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!596 = !DIEnumerator(name: "HAL_UART_MAX", value: 2)
!597 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !584, line: 302, baseType: !6, size: 32, elements: !598)
!598 = !{!599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612}
!599 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!600 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!601 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!602 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!603 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!604 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!605 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!606 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!607 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!608 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!609 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!610 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!611 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!612 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!613 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !584, line: 321, baseType: !6, size: 32, elements: !614)
!614 = !{!615, !616, !617, !618}
!615 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!616 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!617 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!618 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!619 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !584, line: 330, baseType: !6, size: 32, elements: !620)
!620 = !{!621, !622}
!621 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!622 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!623 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !584, line: 337, baseType: !6, size: 32, elements: !624)
!624 = !{!625, !626, !627}
!625 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!626 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!627 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!628 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !570, line: 96, baseType: !6, size: 32, elements: !629)
!629 = !{!630, !631}
!630 = !DIEnumerator(name: "MESSAGE_TYPE_NORMAL_LOG", value: 0)
!631 = !DIEnumerator(name: "MESSAGE_TYPE_HEX_DUMP", value: 1)
!632 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !633, line: 40, baseType: !6, size: 32, elements: !634)
!633 = !DIFile(filename: "../inc/task_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!634 = !{!635, !636, !637, !638, !639, !640, !641, !642, !643, !644}
!635 = !DIEnumerator(name: "TASK_PRIORITY_IDLE", value: 0)
!636 = !DIEnumerator(name: "TASK_PRIORITY_SYSLOG", value: 1)
!637 = !DIEnumerator(name: "TASK_PRIORITY_LOW", value: 2)
!638 = !DIEnumerator(name: "TASK_PRIORITY_BELOW_NORMAL", value: 3)
!639 = !DIEnumerator(name: "TASK_PRIORITY_NORMAL", value: 4)
!640 = !DIEnumerator(name: "TASK_PRIORITY_ABOVE_NORMAL", value: 5)
!641 = !DIEnumerator(name: "TASK_PRIORITY_HIGH", value: 6)
!642 = !DIEnumerator(name: "TASK_PRIORITY_SOFT_REALTIME", value: 7)
!643 = !DIEnumerator(name: "TASK_PRIORITY_HARD_REALTIME", value: 8)
!644 = !DIEnumerator(name: "TASK_PRIORITY_TIMER", value: 19)
!645 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !646, line: 50, baseType: !6, size: 32, elements: !647)
!646 = !DIFile(filename: "../../../../../kernel/service/inc/toi.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!647 = !{!648, !649, !650, !651, !652}
!648 = !DIEnumerator(name: "TOI_BIN", value: 0)
!649 = !DIEnumerator(name: "TOI_OCT", value: 1)
!650 = !DIEnumerator(name: "TOI_DEC", value: 2)
!651 = !DIEnumerator(name: "TOI_HEX", value: 3)
!652 = !DIEnumerator(name: "TOI_ERR", value: 4)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !592, line: 666, baseType: !6, size: 32, elements: !654)
!654 = !{!655, !656, !657}
!655 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!656 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!657 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_BUS", value: 2)
!658 = !{!659, !96, !30, !43, !41, !59, !6, !701, !103, !702, !708, !674, !38, !722, !731}
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_message_t", file: !570, line: 130, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 124, size: 2336, elements: !662)
!662 = !{!663, !665}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "message_type", scope: !661, file: !570, line: 125, baseType: !664, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "message_type_t", file: !570, line: 99, baseType: !628)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !661, file: !570, line: 129, baseType: !666, size: 2304, offset: 32)
!666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !661, file: !570, line: 126, size: 2304, elements: !667)
!667 = !{!668, !682}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "normal_log_message", scope: !666, file: !570, line: 127, baseType: !669, size: 2240)
!669 = !DIDerivedType(tag: DW_TAG_typedef, name: "normal_log_message_t", file: !570, line: 108, baseType: !670)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 101, size: 2240, elements: !671)
!671 = !{!672, !673, !675, !676, !677, !678}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !670, file: !570, line: 102, baseType: !104, size: 32)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !670, file: !570, line: 103, baseType: !674, size: 32, offset: 32)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "print_level_t", file: !573, line: 79, baseType: !577)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !670, file: !570, line: 104, baseType: !104, size: 32, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !670, file: !570, line: 105, baseType: !103, size: 32, offset: 96)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !670, file: !570, line: 106, baseType: !38, size: 32, offset: 128)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !670, file: !570, line: 107, baseType: !679, size: 2056, offset: 160)
!679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 2056, elements: !680)
!680 = !{!681}
!681 = !DISubrange(count: 257)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "hex_dump_message", scope: !666, file: !570, line: 128, baseType: !683, size: 2304)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "hex_dump_message_t", file: !570, line: 120, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 110, size: 2304, elements: !685)
!685 = !{!686, !687, !688, !689, !690, !691, !695, !696, !700}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !684, file: !570, line: 111, baseType: !104, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !684, file: !570, line: 112, baseType: !674, size: 32, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "func_name", scope: !684, file: !570, line: 113, baseType: !104, size: 32, offset: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "line_number", scope: !684, file: !570, line: 114, baseType: !103, size: 32, offset: 96)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !684, file: !570, line: 115, baseType: !38, size: 32, offset: 128)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !684, file: !570, line: 116, baseType: !692, size: 1032, offset: 160)
!692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 1032, elements: !693)
!693 = !{!694}
!694 = !DISubrange(count: 129)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "data_length", scope: !684, file: !570, line: 117, baseType: !38, size: 32, offset: 1216)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !684, file: !570, line: 118, baseType: !697, size: 1024, offset: 1248)
!697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 1024, elements: !698)
!698 = !{!699}
!699 = !DISubrange(count: 128)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "additional_data", scope: !684, file: !570, line: 119, baseType: !701, size: 32, offset: 2272)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 32)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !573, line: 95, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !573, line: 89, size: 160, elements: !705)
!705 = !{!706, !707, !709, !710, !715}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !704, file: !573, line: 90, baseType: !104, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !704, file: !573, line: 91, baseType: !708, size: 32, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_switch_t", file: !573, line: 68, baseType: !572)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !704, file: !573, line: 92, baseType: !674, size: 32, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !704, file: !573, line: 93, baseType: !711, size: 32, offset: 96)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_print_t", file: !573, line: 82, baseType: !712)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 32)
!713 = !DISubroutineType(types: !714)
!714 = !{null, !30, !104, !103, !674, !104, null}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !704, file: !573, line: 94, baseType: !716, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "f_dump_buffer_t", file: !573, line: 83, baseType: !717)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 32)
!718 = !DISubroutineType(types: !719)
!719 = !{null, !30, !104, !103, !674, !720, !103, !104, null}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_buffer_t", file: !570, line: 135, baseType: !724)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !570, line: 132, size: 2368, elements: !725)
!725 = !{!726, !727}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "occupied", scope: !724, file: !570, line: 133, baseType: !38, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !724, file: !570, line: 134, baseType: !728, size: 2336, offset: 32)
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 2336, elements: !729)
!729 = !{!730}
!730 = !DISubrange(count: 292)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !32, line: 60, baseType: !732)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !34, line: 105, baseType: !733)
!733 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!734 = !{!735, !737, !739, !744, !567, !758, !760, !762, !764, !767, !769, !771}
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "log_control_block_common", scope: !569, file: !570, line: 158, type: !703, isLocal: false, isDefinition: true)
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "syslog_task_handle", scope: !569, file: !570, line: 138, type: !40, isLocal: true, isDefinition: true)
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "syslog_buffer_pool", scope: !569, file: !570, line: 141, type: !741, isLocal: true, isDefinition: true)
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !723, size: 37888, elements: !742)
!742 = !{!743}
!743 = !DISubrange(count: 16)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "syslog_config", scope: !569, file: !570, line: 160, type: !746, isLocal: true, isDefinition: true)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_config_t", file: !573, line: 97, baseType: !747)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "syslog_config_s", file: !573, line: 122, size: 64, elements: !748)
!748 = !{!749, !756}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "save_fn", scope: !747, file: !573, line: 123, baseType: !750, size: 32)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_save_fn", file: !573, line: 107, baseType: !751)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 32)
!752 = !DISubroutineType(types: !753)
!753 = !{null, !754}
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 32)
!755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !746)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !747, file: !573, line: 124, baseType: !757, size: 32, offset: 32)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "syslog_init_done", scope: !569, file: !570, line: 153, type: !38, isLocal: true, isDefinition: true)
!760 = !DIGlobalVariableExpression(var: !761, expr: !DIExpression())
!761 = distinct !DIGlobalVariable(name: "syslog_drop_count", scope: !569, file: !570, line: 155, type: !38, isLocal: true, isDefinition: true)
!762 = !DIGlobalVariableExpression(var: !763, expr: !DIExpression())
!763 = distinct !DIGlobalVariable(name: "g_log_queue", scope: !569, file: !570, line: 144, type: !229, isLocal: true, isDefinition: true)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "print_level_table", scope: !569, file: !570, line: 164, type: !766, isLocal: true, isDefinition: true)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 128, elements: !425)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "syslog_task_ready", scope: !569, file: !570, line: 154, type: !38, isLocal: true, isDefinition: true)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "syslog_init_time", scope: !569, file: !570, line: 152, type: !38, isLocal: true, isDefinition: true)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "log_switch_table", scope: !569, file: !570, line: 162, type: !773, isLocal: true, isDefinition: true)
!773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 64, elements: !419)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !592, line: 113, baseType: !591)
!775 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !778, file: !779, line: 74, type: !536, isLocal: false, isDefinition: true)
!778 = distinct !DICompileUnit(language: DW_LANG_C99, file: !779, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !780, retainedTypes: !818, globals: !819, splitDebugInlining: false, nameTableKind: None)
!779 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/flash_sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!780 = !{!781, !795, !653, !803, !812}
!781 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !782, line: 52, baseType: !103, size: 32, elements: !783)
!782 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/spi_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!783 = !{!784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794}
!784 = !DIEnumerator(name: "SF_DRV_NOT_READY", value: -1)
!785 = !DIEnumerator(name: "SF_DRV_READY", value: 0)
!786 = !DIEnumerator(name: "SF_DRV_READING", value: 1)
!787 = !DIEnumerator(name: "SF_DRV_DIRECT_READING", value: 2)
!788 = !DIEnumerator(name: "SF_DRV_PROGRAMMING", value: 3)
!789 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE", value: 4)
!790 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE_CRC", value: 5)
!791 = !DIEnumerator(name: "SF_DRV_SECTOR_4K_ERASING", value: 6)
!792 = !DIEnumerator(name: "SF_DRV_SECTOR_32K_ERASING", value: 7)
!793 = !DIEnumerator(name: "SF_DRV_SECTOR_64K_ERASING", value: 8)
!794 = !DIEnumerator(name: "SF_DRV_CHIP_ERASING", value: 9)
!795 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !796, line: 387, baseType: !103, size: 32, elements: !797)
!796 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!797 = !{!798, !799, !800, !801, !802}
!798 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!799 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!800 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!801 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!802 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!803 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !782, line: 73, baseType: !6, size: 32, elements: !804)
!804 = !{!805, !806, !807, !808, !809, !810, !811}
!805 = !DIEnumerator(name: "SF_TYPE_NONE", value: 0)
!806 = !DIEnumerator(name: "SF_TYPE_MXIC", value: 194)
!807 = !DIEnumerator(name: "SF_TYPE_WINBOND", value: 239)
!808 = !DIEnumerator(name: "SF_TYPE_GD", value: 200)
!809 = !DIEnumerator(name: "SF_TYPE_MICRON", value: 32)
!810 = !DIEnumerator(name: "SF_TYPE_CUSTOMER", value: 255)
!811 = !DIEnumerator(name: "SF_TYPE_COUNT", value: 65535)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !813, line: 123, baseType: !6, size: 32, elements: !814)
!813 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!814 = !{!815, !816, !817}
!815 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!816 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!817 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!818 = !{!30, !319, !43}
!819 = !{!820, !776, !823, !825, !827, !829, !831, !833}
!820 = !DIGlobalVariableExpression(var: !821, expr: !DIExpression())
!821 = distinct !DIGlobalVariable(name: "sf_drvier_status", scope: !778, file: !779, line: 72, type: !822, isLocal: false, isDefinition: true)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_DRV_STATE", file: !782, line: 64, baseType: !781)
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !778, file: !779, line: 75, type: !536, isLocal: false, isDefinition: true)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "gucFlashSFCMode", scope: !778, file: !779, line: 77, type: !38, isLocal: false, isDefinition: true)
!827 = !DIGlobalVariableExpression(var: !828, expr: !DIExpression())
!828 = distinct !DIGlobalVariable(name: "suspend_time", scope: !778, file: !779, line: 82, type: !38, isLocal: false, isDefinition: true)
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "resume_suspend_on_ready", scope: !778, file: !779, line: 83, type: !38, isLocal: false, isDefinition: true)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "resume_suspend_on_checkready", scope: !778, file: !779, line: 84, type: !38, isLocal: false, isDefinition: true)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "sf_Mutex", scope: !778, file: !779, line: 78, type: !103, isLocal: true, isDefinition: true)
!835 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!836 = !DIGlobalVariableExpression(var: !837, expr: !DIExpression())
!837 = distinct !DIGlobalVariable(name: "g_u4ClkCnt1ms", scope: !838, file: !839, line: 71, type: !910, isLocal: false, isDefinition: true)
!838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !840, retainedTypes: !891, globals: !896, splitDebugInlining: false, nameTableKind: None)
!839 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!840 = !{!841, !846}
!841 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !842, line: 121, baseType: !6, size: 32, elements: !843)
!842 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/type_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!843 = !{!844, !845}
!844 = !DIEnumerator(name: "KAL_FALSE", value: 0)
!845 = !DIEnumerator(name: "KAL_TRUE", value: 1)
!846 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !847, line: 47, baseType: !103, size: 32, elements: !848)
!847 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!848 = !{!849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890}
!849 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!850 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!851 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!852 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!853 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!854 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!855 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!856 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!857 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!858 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!859 = !DIEnumerator(name: "CM4_UART1_IRQ", value: 0)
!860 = !DIEnumerator(name: "CM4_DMA_IRQ", value: 1)
!861 = !DIEnumerator(name: "CM4_HIF_IRQ", value: 2)
!862 = !DIEnumerator(name: "CM4_I2C1_IRQ", value: 3)
!863 = !DIEnumerator(name: "CM4_I2C2_IRQ", value: 4)
!864 = !DIEnumerator(name: "CM4_UART2_IRQ", value: 5)
!865 = !DIEnumerator(name: "CM4_MTK_CRYPTO_IRQ", value: 6)
!866 = !DIEnumerator(name: "CM4_SF_IRQ", value: 7)
!867 = !DIEnumerator(name: "CM4_EINT_IRQ", value: 8)
!868 = !DIEnumerator(name: "CM4_BTIF_IRQ", value: 9)
!869 = !DIEnumerator(name: "CM4_WDT_IRQ", value: 10)
!870 = !DIEnumerator(name: "CM4_AHB_MON_IRQ", value: 11)
!871 = !DIEnumerator(name: "CM4_SPI_SLAVE_IRQ", value: 12)
!872 = !DIEnumerator(name: "CM4_N9_WDT_IRQ", value: 13)
!873 = !DIEnumerator(name: "CM4_ADC_IRQ", value: 14)
!874 = !DIEnumerator(name: "CM4_IRDA_TX_IRQ", value: 15)
!875 = !DIEnumerator(name: "CM4_IRDA_RX_IRQ", value: 16)
!876 = !DIEnumerator(name: "CM4_USB_VBUS_ON_IRQ", value: 17)
!877 = !DIEnumerator(name: "CM4_USB_VBUS_OFF_IRQ", value: 18)
!878 = !DIEnumerator(name: "CM4_SPIS_CS_WAKEUP_IRQ", value: 19)
!879 = !DIEnumerator(name: "CM4_GPT3_IRQ", value: 20)
!880 = !DIEnumerator(name: "CM4_IRQ21_IRQ", value: 21)
!881 = !DIEnumerator(name: "CM4_AUDIO_IRQ", value: 22)
!882 = !DIEnumerator(name: "CM4_HIF_DMA_IRQ", value: 23)
!883 = !DIEnumerator(name: "CM4_GPT_IRQ", value: 24)
!884 = !DIEnumerator(name: "CM4_ADC_COMP_IRQ", value: 25)
!885 = !DIEnumerator(name: "CM4_AUDIO_WAKE_IRQ", value: 26)
!886 = !DIEnumerator(name: "CM4_SPIM_IRQ", value: 27)
!887 = !DIEnumerator(name: "CM4_USB_IRQ", value: 28)
!888 = !DIEnumerator(name: "CM4_UDMA_IRQ", value: 29)
!889 = !DIEnumerator(name: "CM4_TRNG_IRQ", value: 30)
!890 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 96)
!891 = !{!892, !895}
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !894)
!894 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint32", file: !842, line: 116, baseType: !6)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !847, line: 95, baseType: !846)
!896 = !{!836, !897}
!897 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression())
!898 = distinct !DIGlobalVariable(name: "GPTTimer", scope: !838, file: !839, line: 67, type: !899, isLocal: true, isDefinition: true)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPTStruct", file: !900, line: 111, baseType: !901)
!900 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !900, line: 109, size: 96, elements: !902)
!902 = !{!903}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_FUNC", scope: !901, file: !900, line: 110, baseType: !904, size: 96)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_func", file: !900, line: 106, baseType: !905)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !900, line: 102, size: 96, elements: !906)
!906 = !{!907, !908, !909}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "gpt0_func", scope: !905, file: !900, line: 103, baseType: !556, size: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "gpt1_func", scope: !905, file: !900, line: 104, baseType: !556, size: 32, offset: 32)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "gpt3_func", scope: !905, file: !900, line: 105, baseType: !556, size: 32, offset: 64)
!910 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !911)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT32", file: !842, line: 62, baseType: !6)
!912 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 32))
!913 = !DIGlobalVariableExpression(var: !898, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "g_sfc_security_enable", scope: !916, file: !917, line: 58, type: !6, isLocal: false, isDefinition: true)
!916 = distinct !DICompileUnit(language: DW_LANG_C99, file: !917, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !918, retainedTypes: !925, globals: !929, splitDebugInlining: false, nameTableKind: None)
!917 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!918 = !{!919}
!919 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !782, line: 45, baseType: !6, size: 32, elements: !920)
!920 = !{!921, !922, !923, !924}
!921 = !DIEnumerator(name: "SF_UNDEF", value: 0)
!922 = !DIEnumerator(name: "SPI", value: 1)
!923 = !DIEnumerator(name: "SPIQ", value: 2)
!924 = !DIEnumerator(name: "QPI", value: 3)
!925 = !{!892, !42, !6, !434, !926, !927}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !98)
!929 = !{!914}
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "gSFC_max_data_size", scope: !932, file: !933, line: 67, type: !6, isLocal: false, isDefinition: true)
!932 = distinct !DICompileUnit(language: DW_LANG_C99, file: !933, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !934, retainedTypes: !941, globals: !956, splitDebugInlining: false, nameTableKind: None)
!933 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/spi_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!934 = !{!803, !781, !919, !935}
!935 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !782, line: 66, baseType: !103, size: 32, elements: !936)
!936 = !{!937, !938, !939, !940}
!937 = !DIEnumerator(name: "FLASH_NOT_READY", value: -1)
!938 = !DIEnumerator(name: "FLASH_READY", value: 0)
!939 = !DIEnumerator(name: "FLASH_PROGRAMMING", value: 1)
!940 = !DIEnumerator(name: "FLASH_ERASING", value: 2)
!941 = !{!942, !29, !944, !6, !30, !95, !38, !894}
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !98)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !946)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chip_info", file: !782, line: 137, size: 192, elements: !947)
!947 = !{!948, !949, !950, !951, !952, !953, !954, !955}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !946, file: !782, line: 138, baseType: !701, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !946, file: !782, line: 139, baseType: !98, size: 8, offset: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !946, file: !782, line: 140, baseType: !29, size: 32, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !946, file: !782, line: 141, baseType: !29, size: 32, offset: 96)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !946, file: !782, line: 142, baseType: !6, size: 32, offset: 128)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !946, file: !782, line: 144, baseType: !98, size: 8, offset: 160)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !946, file: !782, line: 145, baseType: !98, size: 8, offset: 168)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !946, file: !782, line: 146, baseType: !98, size: 8, offset: 176)
!956 = !{!930, !957, !960, !963, !968, !971, !973, !976, !978, !980, !982, !984, !986, !988, !990, !992, !994, !996, !998, !1003, !1005, !1007, !1009, !1012}
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_winbond", scope: !932, file: !933, line: 70, type: !959, isLocal: false, isDefinition: true)
!959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 96, elements: !408)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_winbond", scope: !932, file: !933, line: 73, type: !962, isLocal: false, isDefinition: true)
!962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 32, elements: !425)
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_winbond", scope: !932, file: !933, line: 76, type: !965, isLocal: false, isDefinition: true)
!965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 72, elements: !966)
!966 = !{!967}
!967 = !DISubrange(count: 9)
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "cmdlist_suspend_winbond", scope: !932, file: !933, line: 79, type: !970, isLocal: false, isDefinition: true)
!970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 32, elements: !425)
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "cmdlist_resume_winbond", scope: !932, file: !933, line: 82, type: !970, isLocal: false, isDefinition: true)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_mxic", scope: !932, file: !933, line: 87, type: !975, isLocal: false, isDefinition: true)
!975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 64, elements: !231)
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_mxic", scope: !932, file: !933, line: 91, type: !975, isLocal: false, isDefinition: true)
!978 = !DIGlobalVariableExpression(var: !979, expr: !DIExpression())
!979 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_mxic", scope: !932, file: !933, line: 95, type: !975, isLocal: false, isDefinition: true)
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd", scope: !932, file: !933, line: 100, type: !965, isLocal: false, isDefinition: true)
!982 = !DIGlobalVariableExpression(var: !983, expr: !DIExpression())
!983 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd", scope: !932, file: !933, line: 104, type: !965, isLocal: false, isDefinition: true)
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd", scope: !932, file: !933, line: 108, type: !965, isLocal: false, isDefinition: true)
!986 = !DIGlobalVariableExpression(var: !987, expr: !DIExpression())
!987 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd25q32c", scope: !932, file: !933, line: 112, type: !975, isLocal: false, isDefinition: true)
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd25q32c", scope: !932, file: !933, line: 115, type: !975, isLocal: false, isDefinition: true)
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd25q32c", scope: !932, file: !933, line: 119, type: !975, isLocal: false, isDefinition: true)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_micron", scope: !932, file: !933, line: 123, type: !975, isLocal: false, isDefinition: true)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_micron", scope: !932, file: !933, line: 126, type: !975, isLocal: false, isDefinition: true)
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_micron", scope: !932, file: !933, line: 130, type: !975, isLocal: false, isDefinition: true)
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_spimode", scope: !932, file: !933, line: 135, type: !1000, isLocal: false, isDefinition: true)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 56, elements: !1001)
!1001 = !{!1002}
!1002 = !DISubrange(count: 7)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_qpimode", scope: !932, file: !933, line: 138, type: !1000, isLocal: false, isDefinition: true)
!1005 = !DIGlobalVariableExpression(var: !1006, expr: !DIExpression())
!1006 = distinct !DIGlobalVariable(name: "spi_chip_info", scope: !932, file: !933, line: 142, type: !944, isLocal: false, isDefinition: true)
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "gd_write_sr2_1", scope: !932, file: !933, line: 161, type: !103, isLocal: false, isDefinition: true)
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "support_flash_id", scope: !932, file: !933, line: 162, type: !1011, isLocal: false, isDefinition: true)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_TYPT", file: !782, line: 81, baseType: !803)
!1012 = !DIGlobalVariableExpression(var: !1013, expr: !DIExpression())
!1013 = distinct !DIGlobalVariable(name: "chips_data", scope: !932, file: !933, line: 144, type: !1014, isLocal: true, isDefinition: true)
!1014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !945, size: 2496, elements: !1015)
!1015 = !{!1016}
!1016 = !DISubrange(count: 13)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "gXtalFreq", scope: !1019, file: !1020, line: 43, type: !38, isLocal: true, isDefinition: true)
!1019 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1020, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1021, globals: !1026, splitDebugInlining: false, nameTableKind: None)
!1020 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/top.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1021 = !{!434, !911, !43, !1022, !1023, !1025}
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1025)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int32", file: !842, line: 133, baseType: !6)
!1026 = !{!1017, !1027}
!1027 = !DIGlobalVariableExpression(var: !1028, expr: !DIExpression())
!1028 = distinct !DIGlobalVariable(name: "gCpuFrequency", scope: !1019, file: !1020, line: 44, type: !38, isLocal: true, isDefinition: true)
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "gUartClkFreq", scope: !1031, file: !1032, line: 54, type: !38, isLocal: false, isDefinition: true)
!1031 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1032, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1033, retainedTypes: !1057, globals: !1064, splitDebugInlining: false, nameTableKind: None)
!1032 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1033 = !{!846, !1034, !1040}
!1034 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1035, line: 71, baseType: !6, size: 32, elements: !1036)
!1035 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1036 = !{!1037, !1038, !1039}
!1037 = !DIEnumerator(name: "UART_PORT0", value: 0)
!1038 = !DIEnumerator(name: "UART_PORT1", value: 1)
!1039 = !DIEnumerator(name: "UART_MAX_PORT", value: 2)
!1040 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1041, line: 129, baseType: !6, size: 32, elements: !1042)
!1041 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/dma_sw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1042 = !{!1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056}
!1043 = !DIEnumerator(name: "VDMA_I2S_TX_CH", value: 12)
!1044 = !DIEnumerator(name: "VDMA_I2S_RX_CH", value: 13)
!1045 = !DIEnumerator(name: "VDMA_UART1TX_CH", value: 14)
!1046 = !DIEnumerator(name: "VDMA_UART1RX_CH", value: 15)
!1047 = !DIEnumerator(name: "VDMA_UART2TX_CH", value: 16)
!1048 = !DIEnumerator(name: "VDMA_UART2RX_CH", value: 17)
!1049 = !DIEnumerator(name: "VDMA_BTIF_TX_CH", value: 18)
!1050 = !DIEnumerator(name: "VDMA_BTIF_RX_CH", value: 19)
!1051 = !DIEnumerator(name: "VDMA_USB_EP2O_CH", value: 20)
!1052 = !DIEnumerator(name: "VDMA_USB_EP3I_CH", value: 21)
!1053 = !DIEnumerator(name: "VDMA_USB_EP3O_CH", value: 22)
!1054 = !DIEnumerator(name: "VDMA_USB_EP4I_CH", value: 23)
!1055 = !DIEnumerator(name: "VDMA_USB_EP4O_CH", value: 24)
!1056 = !DIEnumerator(name: "VDMA_ADC_RX_CH", value: 25)
!1057 = !{!434, !38, !1058, !1060, !1061, !1062, !911}
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1060)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint16", file: !842, line: 113, baseType: !35)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT8", file: !842, line: 59, baseType: !98)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1061)
!1064 = !{!1065, !1069, !1029}
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !1031, file: !1032, line: 57, type: !1067, isLocal: false, isDefinition: true)
!1067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1068, size: 64, elements: !419)
!1068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !104)
!1069 = !DIGlobalVariableExpression(var: !1070, expr: !DIExpression())
!1070 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !1031, file: !1032, line: 58, type: !1071, isLocal: false, isDefinition: true)
!1071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1072, size: 64, elements: !419)
!1072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1073)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !847, line: 97, baseType: !895)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "log_control_block_hal", scope: !1076, file: !1077, line: 127, type: !1080, isLocal: false, isDefinition: true)
!1076 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1077, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1078, globals: !1079, splitDebugInlining: false, nameTableKind: None)
!1077 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1078 = !{!572, !577}
!1079 = !{!1074}
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !573, line: 95, baseType: !1081)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !573, line: 89, size: 160, elements: !1082)
!1082 = !{!1083, !1084, !1085, !1086, !1087}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1081, file: !573, line: 90, baseType: !104, size: 32)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !1081, file: !573, line: 91, baseType: !708, size: 32, offset: 32)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1081, file: !573, line: 92, baseType: !674, size: 32, offset: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !1081, file: !573, line: 93, baseType: !711, size: 32, offset: 96)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !1081, file: !573, line: 94, baseType: !716, size: 32, offset: 128)
!1088 = !DIGlobalVariableExpression(var: !1089, expr: !DIExpression())
!1089 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !1090, file: !1091, line: 51, type: !1165, isLocal: false, isDefinition: true)
!1090 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1091, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1092, retainedTypes: !1139, globals: !1164, splitDebugInlining: false, nameTableKind: None)
!1091 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1092 = !{!1093, !1104, !1123, !1130}
!1093 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1094, line: 163, baseType: !103, size: 32, elements: !1095)
!1094 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1095 = !{!1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103}
!1096 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!1097 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!1098 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!1099 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!1100 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!1101 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!1102 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!1103 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!1104 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1094, line: 186, baseType: !6, size: 32, elements: !1105)
!1105 = !{!1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122}
!1106 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!1107 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!1108 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!1109 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!1110 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!1111 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!1112 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!1113 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!1114 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!1115 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!1116 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!1117 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!1118 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!1119 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!1120 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!1121 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!1122 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!1123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1094, line: 176, baseType: !6, size: 32, elements: !1124)
!1124 = !{!1125, !1126, !1127, !1128, !1129}
!1125 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!1126 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!1127 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!1128 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!1129 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!1130 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1131, line: 99, baseType: !6, size: 32, elements: !1132)
!1131 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1132 = !{!1133, !1134, !1135, !1136, !1137, !1138}
!1133 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!1134 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!1135 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!1136 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!1137 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!1138 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!1139 = !{!1140, !30}
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !1142, line: 72, baseType: !1143)
!1142 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_hw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1142, line: 56, size: 525312, elements: !1144)
!1144 = !{!1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1161, !1163}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !1143, file: !1142, line: 57, baseType: !44, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !1143, file: !1142, line: 58, baseType: !44, size: 32, offset: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !1143, file: !1142, line: 59, baseType: !44, size: 32, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !1143, file: !1142, line: 60, baseType: !44, size: 32, offset: 96)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !1143, file: !1142, line: 61, baseType: !44, size: 32, offset: 128)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !1143, file: !1142, line: 62, baseType: !44, size: 32, offset: 160)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !1143, file: !1142, line: 63, baseType: !44, size: 32, offset: 192)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !1143, file: !1142, line: 64, baseType: !44, size: 32, offset: 224)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !1143, file: !1142, line: 65, baseType: !44, size: 32, offset: 256)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !1143, file: !1142, line: 66, baseType: !44, size: 32, offset: 288)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1143, file: !1142, line: 67, baseType: !452, size: 32, offset: 320)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !1143, file: !1142, line: 68, baseType: !44, size: 32, offset: 352)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1143, file: !1142, line: 69, baseType: !1158, size: 523904, offset: 384)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 523904, elements: !1159)
!1159 = !{!1160}
!1160 = !DISubrange(count: 16372)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !1143, file: !1142, line: 70, baseType: !1162, size: 512, offset: 524288)
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 512, elements: !742)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !1143, file: !1142, line: 71, baseType: !1162, size: 512, offset: 524800)
!1164 = !{!1088}
!1165 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !536)
!1166 = !DIGlobalVariableExpression(var: !1167, expr: !DIExpression())
!1167 = distinct !DIGlobalVariable(name: "g_cache_con", scope: !1168, file: !1169, line: 48, type: !1203, isLocal: false, isDefinition: true)
!1168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1170, splitDebugInlining: false, nameTableKind: None)
!1169 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1170 = !{!1166, !1171, !1174}
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "g_cache_region_en", scope: !1168, file: !1169, line: 49, type: !1173, isLocal: false, isDefinition: true)
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGION_EN_Type", file: !1131, line: 66, baseType: !38)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "g_cache_entry", scope: !1168, file: !1169, line: 50, type: !1176, isLocal: false, isDefinition: true)
!1176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1177, size: 1024, elements: !742)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_Type", file: !1131, line: 90, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1131, line: 87, size: 64, elements: !1179)
!1179 = !{!1180, !1193}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "cache_entry_n", scope: !1178, file: !1131, line: 88, baseType: !1181, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_N_Type", file: !1131, line: 77, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1131, line: 68, size: 32, elements: !1183)
!1183 = !{!1184, !1192}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1182, file: !1131, line: 75, baseType: !1185, size: 32)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1182, file: !1131, line: 69, size: 32, elements: !1186)
!1186 = !{!1187, !1188, !1189, !1190, !1191}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !1185, file: !1131, line: 70, baseType: !38, size: 5, flags: DIFlagBitField, extraData: i64 0)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "ATTR", scope: !1185, file: !1131, line: 71, baseType: !38, size: 3, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !1185, file: !1131, line: 72, baseType: !38, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !1185, file: !1131, line: 73, baseType: !38, size: 3, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !1185, file: !1131, line: 74, baseType: !38, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1182, file: !1131, line: 76, baseType: !38, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "cache_end_entry_n", scope: !1178, file: !1131, line: 89, baseType: !1194, size: 32, offset: 32)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_END_ENTRY_N_Type", file: !1131, line: 85, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1131, line: 79, size: 32, elements: !1196)
!1196 = !{!1197, !1202}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1195, file: !1131, line: 83, baseType: !1198, size: 32)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1195, file: !1131, line: 80, size: 32, elements: !1199)
!1199 = !{!1200, !1201}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !1198, file: !1131, line: 81, baseType: !38, size: 12, flags: DIFlagBitField, extraData: i64 0)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !1198, file: !1131, line: 82, baseType: !38, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1195, file: !1131, line: 84, baseType: !38, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_CON_Type", file: !1131, line: 64, baseType: !1204)
!1204 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1131, line: 51, size: 32, elements: !1205)
!1205 = !{!1206, !1218}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1204, file: !1131, line: 62, baseType: !1207, size: 32)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1204, file: !1131, line: 52, size: 32, elements: !1208)
!1208 = !{!1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "MCEN", scope: !1207, file: !1131, line: 53, baseType: !38, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "MPEN", scope: !1207, file: !1131, line: 54, baseType: !38, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN0", scope: !1207, file: !1131, line: 55, baseType: !38, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN1", scope: !1207, file: !1131, line: 56, baseType: !38, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "MPDEFEN", scope: !1207, file: !1131, line: 57, baseType: !38, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !1207, file: !1131, line: 58, baseType: !38, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "MDRF", scope: !1207, file: !1131, line: 59, baseType: !38, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "CACHESIZE", scope: !1207, file: !1131, line: 60, baseType: !38, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !1207, file: !1131, line: 61, baseType: !38, size: 22, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1204, file: !1131, line: 63, baseType: !38, size: 32)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1221, file: !1222, line: 53, type: !1291, isLocal: false, isDefinition: true)
!1221 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1222, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1223, retainedTypes: !1232, globals: !1290, splitDebugInlining: false, nameTableKind: None)
!1222 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1223 = !{!1224, !846}
!1224 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1225, line: 152, baseType: !103, size: 32, elements: !1226)
!1225 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1226 = !{!1227, !1228, !1229, !1230, !1231}
!1227 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!1228 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!1229 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!1230 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!1231 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!1232 = !{!1073, !30, !38, !1233, !1235, !1265}
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !32, line: 44, baseType: !1234)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !34, line: 77, baseType: !103)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !396, line: 378, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 363, size: 28704, elements: !1238)
!1238 = !{!1239, !1241, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1256, !1260, !1264}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1237, file: !396, line: 365, baseType: !1240, size: 256)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 256, elements: !231)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1237, file: !396, line: 366, baseType: !1242, size: 768, offset: 256)
!1242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 768, elements: !1243)
!1243 = !{!1244}
!1244 = !DISubrange(count: 24)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1237, file: !396, line: 367, baseType: !1240, size: 256, offset: 1024)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1237, file: !396, line: 368, baseType: !1242, size: 768, offset: 1280)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1237, file: !396, line: 369, baseType: !1240, size: 256, offset: 2048)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1237, file: !396, line: 370, baseType: !1242, size: 768, offset: 2304)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1237, file: !396, line: 371, baseType: !1240, size: 256, offset: 3072)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1237, file: !396, line: 372, baseType: !1242, size: 768, offset: 3328)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1237, file: !396, line: 373, baseType: !1240, size: 256, offset: 4096)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1237, file: !396, line: 374, baseType: !1253, size: 1792, offset: 4352)
!1253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 1792, elements: !1254)
!1254 = !{!1255}
!1255 = !DISubrange(count: 56)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1237, file: !396, line: 375, baseType: !1257, size: 1920, offset: 6144)
!1257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 1920, elements: !1258)
!1258 = !{!1259}
!1259 = !DISubrange(count: 240)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1237, file: !396, line: 376, baseType: !1261, size: 20608, offset: 8064)
!1261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 20608, elements: !1262)
!1262 = !{!1263}
!1263 = !DISubrange(count: 644)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1237, file: !396, line: 377, baseType: !44, size: 32, offset: 28672)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !396, line: 418, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 395, size: 1120, elements: !1268)
!1268 = !{!1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1267, file: !396, line: 397, baseType: !400, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1267, file: !396, line: 398, baseType: !44, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1267, file: !396, line: 399, baseType: !44, size: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1267, file: !396, line: 400, baseType: !44, size: 32, offset: 96)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1267, file: !396, line: 401, baseType: !44, size: 32, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1267, file: !396, line: 402, baseType: !44, size: 32, offset: 160)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1267, file: !396, line: 403, baseType: !407, size: 96, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1267, file: !396, line: 404, baseType: !44, size: 32, offset: 288)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1267, file: !396, line: 405, baseType: !44, size: 32, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1267, file: !396, line: 406, baseType: !44, size: 32, offset: 352)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1267, file: !396, line: 407, baseType: !44, size: 32, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1267, file: !396, line: 408, baseType: !44, size: 32, offset: 416)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1267, file: !396, line: 409, baseType: !44, size: 32, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1267, file: !396, line: 410, baseType: !44, size: 32, offset: 480)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1267, file: !396, line: 411, baseType: !418, size: 64, offset: 512)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1267, file: !396, line: 412, baseType: !400, size: 32, offset: 576)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1267, file: !396, line: 413, baseType: !400, size: 32, offset: 608)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1267, file: !396, line: 414, baseType: !424, size: 128, offset: 640)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1267, file: !396, line: 415, baseType: !428, size: 160, offset: 768)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1267, file: !396, line: 416, baseType: !432, size: 160, offset: 928)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1267, file: !396, line: 417, baseType: !44, size: 32, offset: 1088)
!1290 = !{!1219}
!1291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1292, size: 6144, elements: !1300)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1222, line: 50, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1222, line: 47, size: 64, elements: !1294)
!1294 = !{!1295, !1299}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1293, file: !1222, line: 48, baseType: !1296, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{null, !1073}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1293, file: !1222, line: 49, baseType: !38, size: 32, offset: 32)
!1300 = !{!1301}
!1301 = !DISubrange(count: 96)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !1304, file: !1305, line: 61, type: !1324, isLocal: true, isDefinition: true)
!1304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1305, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1306, retainedTypes: !1322, globals: !1323, splitDebugInlining: false, nameTableKind: None)
!1305 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1306 = !{!795, !1307, !1314, !653, !1318}
!1307 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !592, line: 657, baseType: !6, size: 32, elements: !1308)
!1308 = !{!1309, !1310, !1311, !1312, !1313}
!1309 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!1310 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!1311 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!1312 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!1313 = !DIEnumerator(name: "HAL_GPT_MAX", value: 5)
!1314 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !796, line: 397, baseType: !6, size: 32, elements: !1315)
!1315 = !{!1316, !1317}
!1316 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!1317 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!1318 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !796, line: 380, baseType: !6, size: 32, elements: !1319)
!1319 = !{!1320, !1321}
!1320 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!1321 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!1322 = !{!30, !38}
!1323 = !{!1302}
!1324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1325, size: 640, elements: !429)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_context_t", file: !1305, line: 55, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1305, line: 51, size: 128, elements: !1327)
!1327 = !{!1328, !1330, !1340}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !1326, file: !1305, line: 52, baseType: !1329, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !796, line: 400, baseType: !1314)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !1326, file: !1305, line: 53, baseType: !1331, size: 64, offset: 32)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_context", file: !1305, line: 49, baseType: !1332)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1305, line: 46, size: 64, elements: !1333)
!1333 = !{!1334, !1339}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1332, file: !1305, line: 47, baseType: !1335, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !796, line: 371, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{null, !30}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1332, file: !1305, line: 48, baseType: !30, size: 32, offset: 32)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "has_initlized", scope: !1326, file: !1305, line: 54, baseType: !536, size: 8, offset: 96)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !1343, file: !1344, line: 80, type: !1401, isLocal: true, isDefinition: true)
!1343 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1344, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1345, retainedTypes: !1351, globals: !1352, splitDebugInlining: false, nameTableKind: None)
!1344 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1345 = !{!1034, !583, !591, !597, !613, !619, !623, !1040, !1346}
!1346 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !584, line: 355, baseType: !103, size: 32, elements: !1347)
!1347 = !{!1348, !1349, !1350}
!1348 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!1349 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!1350 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!1351 = !{!701, !6, !30, !98, !70, !96}
!1352 = !{!1353, !1396, !1341, !1399, !1402}
!1353 = !DIGlobalVariableExpression(var: !1354, expr: !DIExpression())
!1354 = distinct !DIGlobalVariable(name: "g_uart_context_table", scope: !1343, file: !1344, line: 77, type: !1355, isLocal: true, isDefinition: true)
!1355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 1024, elements: !419)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_context_t", file: !1344, line: 75, baseType: !1357)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1344, line: 68, size: 512, elements: !1358)
!1358 = !{!1359, !1360, !1372, !1373, !1384, !1385}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config_present", scope: !1357, file: !1344, line: 69, baseType: !536, size: 8)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config", scope: !1357, file: !1344, line: 70, baseType: !1361, size: 128, offset: 32)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !584, line: 378, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !584, line: 373, size: 128, elements: !1363)
!1363 = !{!1364, !1366, !1368, !1370}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1362, file: !584, line: 374, baseType: !1365, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !584, line: 317, baseType: !597)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !1362, file: !584, line: 375, baseType: !1367, size: 32, offset: 32)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !584, line: 326, baseType: !613)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !1362, file: !584, line: 376, baseType: !1369, size: 32, offset: 64)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !584, line: 333, baseType: !619)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1362, file: !584, line: 377, baseType: !1371, size: 32, offset: 96)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !584, line: 341, baseType: !623)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "callback_present", scope: !1357, file: !1344, line: 71, baseType: !536, size: 8, offset: 160)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "callback_config", scope: !1357, file: !1344, line: 72, baseType: !1374, size: 64, offset: 192)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_config_t", file: !1344, line: 66, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1344, line: 63, size: 64, elements: !1376)
!1376 = !{!1377, !1383}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1375, file: !1344, line: 64, baseType: !1378, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !584, line: 410, baseType: !1379)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{null, !1382, !30}
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !584, line: 359, baseType: !1346)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1375, file: !1344, line: 65, baseType: !30, size: 32, offset: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config_present", scope: !1357, file: !1344, line: 73, baseType: !536, size: 8, offset: 256)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config", scope: !1357, file: !1344, line: 74, baseType: !1386, size: 224, offset: 288)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !584, line: 390, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !584, line: 382, size: 224, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393, !1394, !1395}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !1387, file: !584, line: 383, baseType: !95, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !1387, file: !584, line: 384, baseType: !38, size: 32, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !1387, file: !584, line: 385, baseType: !38, size: 32, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !1387, file: !584, line: 386, baseType: !95, size: 32, offset: 96)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !1387, file: !584, line: 387, baseType: !38, size: 32, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !1387, file: !584, line: 388, baseType: !38, size: 32, offset: 160)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !1387, file: !584, line: 389, baseType: !38, size: 32, offset: 192)
!1396 = !DIGlobalVariableExpression(var: !1397, expr: !DIExpression())
!1397 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !1343, file: !1344, line: 82, type: !1398, isLocal: true, isDefinition: true)
!1398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 16, elements: !419)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !1343, file: !1344, line: 81, type: !1401, isLocal: true, isDefinition: true)
!1401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 16, elements: !419)
!1402 = !DIGlobalVariableExpression(var: !1403, expr: !DIExpression())
!1403 = distinct !DIGlobalVariable(name: "func_tbl", scope: !1404, file: !1344, line: 536, type: !1410, isLocal: true, isDefinition: true)
!1404 = distinct !DISubprogram(name: "hal_uart_map_receive_callback", scope: !1344, file: !1344, line: 534, type: !1405, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !1408)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{!1407, !774}
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "VOID_FUNC", file: !1041, line: 197, baseType: !556)
!1408 = !{!1409}
!1409 = !DILocalVariable(name: "uart_port", arg: 1, scope: !1404, file: !1344, line: 534, type: !774)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1411, size: 64, elements: !419)
!1411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1407)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "DWT_NUMCOMP", scope: !1414, file: !1415, line: 44, type: !103, isLocal: true, isDefinition: true)
!1414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1416, retainedTypes: !1417, globals: !1453, splitDebugInlining: false, nameTableKind: None)
!1415 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_dwt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1416 = !{!311}
!1417 = !{!1418, !1445}
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_Type", file: !396, line: 826, baseType: !1420)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 801, size: 736, elements: !1421)
!1421 = !{!1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1420, file: !396, line: 803, baseType: !44, size: 32)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "CYCCNT", scope: !1420, file: !396, line: 804, baseType: !44, size: 32, offset: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "CPICNT", scope: !1420, file: !396, line: 805, baseType: !44, size: 32, offset: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "EXCCNT", scope: !1420, file: !396, line: 806, baseType: !44, size: 32, offset: 96)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEPCNT", scope: !1420, file: !396, line: 807, baseType: !44, size: 32, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "LSUCNT", scope: !1420, file: !396, line: 808, baseType: !44, size: 32, offset: 160)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "FOLDCNT", scope: !1420, file: !396, line: 809, baseType: !44, size: 32, offset: 192)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "PCSR", scope: !1420, file: !396, line: 810, baseType: !400, size: 32, offset: 224)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "COMP0", scope: !1420, file: !396, line: 811, baseType: !44, size: 32, offset: 256)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "MASK0", scope: !1420, file: !396, line: 812, baseType: !44, size: 32, offset: 288)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION0", scope: !1420, file: !396, line: 813, baseType: !44, size: 32, offset: 320)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1420, file: !396, line: 814, baseType: !452, size: 32, offset: 352)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "COMP1", scope: !1420, file: !396, line: 815, baseType: !44, size: 32, offset: 384)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "MASK1", scope: !1420, file: !396, line: 816, baseType: !44, size: 32, offset: 416)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION1", scope: !1420, file: !396, line: 817, baseType: !44, size: 32, offset: 448)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1420, file: !396, line: 818, baseType: !452, size: 32, offset: 480)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "COMP2", scope: !1420, file: !396, line: 819, baseType: !44, size: 32, offset: 512)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "MASK2", scope: !1420, file: !396, line: 820, baseType: !44, size: 32, offset: 544)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION2", scope: !1420, file: !396, line: 821, baseType: !44, size: 32, offset: 576)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1420, file: !396, line: 822, baseType: !452, size: 32, offset: 608)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "COMP3", scope: !1420, file: !396, line: 823, baseType: !44, size: 32, offset: 640)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "MASK3", scope: !1420, file: !396, line: 824, baseType: !44, size: 32, offset: 672)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "FUNCTION3", scope: !1420, file: !396, line: 825, baseType: !44, size: 32, offset: 704)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "CoreDebug_Type", file: !396, line: 1304, baseType: !1447)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 1298, size: 128, elements: !1448)
!1448 = !{!1449, !1450, !1451, !1452}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "DHCSR", scope: !1447, file: !396, line: 1300, baseType: !44, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "DCRSR", scope: !1447, file: !396, line: 1301, baseType: !44, size: 32, offset: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "DCRDR", scope: !1447, file: !396, line: 1302, baseType: !44, size: 32, offset: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "DEMCR", scope: !1447, file: !396, line: 1303, baseType: !44, size: 32, offset: 96)
!1453 = !{!1412}
!1454 = !DIGlobalVariableExpression(var: !1455, expr: !DIExpression())
!1455 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_default", scope: !1456, file: !1457, line: 164, type: !959, isLocal: false, isDefinition: true)
!1456 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1457, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1458, globals: !1473, splitDebugInlining: false, nameTableKind: None)
!1457 = !DIFile(filename: "../../../../../driver/board/linkit7697_hdk/external_flash/src/bsp_flash_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1458 = !{!1459, !30}
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "flash_info_t", file: !1462, line: 48, baseType: !1463)
!1462 = !DIFile(filename: "../../../../../driver/board/linkit7697_hdk/external_flash/inc/bsp_flash_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1462, line: 38, size: 192, elements: !1464)
!1464 = !{!1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1463, file: !1462, line: 39, baseType: !701, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1463, file: !1462, line: 40, baseType: !98, size: 8, offset: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !1463, file: !1462, line: 41, baseType: !29, size: 32, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !1463, file: !1462, line: 42, baseType: !29, size: 32, offset: 96)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !1463, file: !1462, line: 43, baseType: !6, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !1463, file: !1462, line: 45, baseType: !98, size: 8, offset: 160)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !1463, file: !1462, line: 46, baseType: !98, size: 8, offset: 168)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !1463, file: !1462, line: 47, baseType: !98, size: 8, offset: 176)
!1473 = !{!1454, !1474, !1476, !1478}
!1474 = !DIGlobalVariableExpression(var: !1475, expr: !DIExpression())
!1475 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_default", scope: !1456, file: !1457, line: 167, type: !962, isLocal: false, isDefinition: true)
!1476 = !DIGlobalVariableExpression(var: !1477, expr: !DIExpression())
!1477 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_default", scope: !1456, file: !1457, line: 170, type: !965, isLocal: false, isDefinition: true)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "customer_flash_info", scope: !1456, file: !1457, line: 174, type: !1460, isLocal: false, isDefinition: true)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "log_control_block_freertos", scope: !1482, file: !1483, line: 59, type: !1487, isLocal: false, isDefinition: true)
!1482 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1483, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1484, retainedTypes: !1485, globals: !1486, splitDebugInlining: false, nameTableKind: None)
!1483 = !DIFile(filename: "../../../../../project/linkit7697_hdk/templates/freertos_create_thread/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1484 = !{!572, !577, !632}
!1485 = !{!30, !103, !59}
!1486 = !{!1480}
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "log_control_block_t", file: !573, line: 95, baseType: !1488)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !573, line: 89, size: 160, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !1488, file: !573, line: 90, baseType: !104, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "log_switch", scope: !1488, file: !573, line: 91, baseType: !708, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "print_level", scope: !1488, file: !573, line: 92, baseType: !674, size: 32, offset: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "print_handle", scope: !1488, file: !573, line: 93, baseType: !711, size: 32, offset: 96)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "dump_handle", scope: !1488, file: !573, line: 94, baseType: !716, size: 32, offset: 128)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1497, file: !1498, line: 59, type: !38, isLocal: false, isDefinition: true)
!1497 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1498, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1499, globals: !1552, splitDebugInlining: false, nameTableKind: None)
!1498 = !DIFile(filename: "../../../../../project/linkit7697_hdk/templates/freertos_create_thread/src/system_mt7687.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1499 = !{!1500, !1508, !1533}
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !396, line: 656, baseType: !1502)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 650, size: 128, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1502, file: !396, line: 652, baseType: !44, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1502, file: !396, line: 653, baseType: !44, size: 32, offset: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1502, file: !396, line: 654, baseType: !44, size: 32, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1502, file: !396, line: 655, baseType: !400, size: 32, offset: 96)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !396, line: 418, baseType: !1510)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 395, size: 1120, elements: !1511)
!1511 = !{!1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1510, file: !396, line: 397, baseType: !400, size: 32)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1510, file: !396, line: 398, baseType: !44, size: 32, offset: 32)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1510, file: !396, line: 399, baseType: !44, size: 32, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1510, file: !396, line: 400, baseType: !44, size: 32, offset: 96)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1510, file: !396, line: 401, baseType: !44, size: 32, offset: 128)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1510, file: !396, line: 402, baseType: !44, size: 32, offset: 160)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1510, file: !396, line: 403, baseType: !407, size: 96, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1510, file: !396, line: 404, baseType: !44, size: 32, offset: 288)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1510, file: !396, line: 405, baseType: !44, size: 32, offset: 320)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1510, file: !396, line: 406, baseType: !44, size: 32, offset: 352)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1510, file: !396, line: 407, baseType: !44, size: 32, offset: 384)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1510, file: !396, line: 408, baseType: !44, size: 32, offset: 416)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1510, file: !396, line: 409, baseType: !44, size: 32, offset: 448)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1510, file: !396, line: 410, baseType: !44, size: 32, offset: 480)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1510, file: !396, line: 411, baseType: !418, size: 64, offset: 512)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1510, file: !396, line: 412, baseType: !400, size: 32, offset: 576)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1510, file: !396, line: 413, baseType: !400, size: 32, offset: 608)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1510, file: !396, line: 414, baseType: !424, size: 128, offset: 640)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1510, file: !396, line: 415, baseType: !428, size: 160, offset: 768)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1510, file: !396, line: 416, baseType: !432, size: 160, offset: 928)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1510, file: !396, line: 417, baseType: !44, size: 32, offset: 1088)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !1142, line: 72, baseType: !1535)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1142, line: 56, size: 525312, elements: !1536)
!1536 = !{!1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !1535, file: !1142, line: 57, baseType: !44, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !1535, file: !1142, line: 58, baseType: !44, size: 32, offset: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !1535, file: !1142, line: 59, baseType: !44, size: 32, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !1535, file: !1142, line: 60, baseType: !44, size: 32, offset: 96)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !1535, file: !1142, line: 61, baseType: !44, size: 32, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !1535, file: !1142, line: 62, baseType: !44, size: 32, offset: 160)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !1535, file: !1142, line: 63, baseType: !44, size: 32, offset: 192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !1535, file: !1142, line: 64, baseType: !44, size: 32, offset: 224)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !1535, file: !1142, line: 65, baseType: !44, size: 32, offset: 256)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !1535, file: !1142, line: 66, baseType: !44, size: 32, offset: 288)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1535, file: !1142, line: 67, baseType: !452, size: 32, offset: 320)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !1535, file: !1142, line: 68, baseType: !44, size: 32, offset: 352)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1535, file: !1142, line: 69, baseType: !1158, size: 523904, offset: 384)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !1535, file: !1142, line: 70, baseType: !1162, size: 512, offset: 524288)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !1535, file: !1142, line: 71, baseType: !1162, size: 512, offset: 524800)
!1552 = !{!1495, !1553}
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !1497, file: !1498, line: 61, type: !44, isLocal: true, isDefinition: true)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "memory_regions", scope: !1557, file: !1558, line: 51, type: !1560, isLocal: false, isDefinition: true)
!1557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1559, splitDebugInlining: false, nameTableKind: None)
!1558 = !DIFile(filename: "../../../../../project/linkit7697_hdk/templates/freertos_create_thread/src/regions_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1559 = !{!1555}
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1561, size: 768, elements: !71)
!1561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "memory_region_type", file: !551, line: 91, baseType: !1563)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !551, line: 85, size: 128, elements: !1564)
!1564 = !{!1565, !1566, !1567, !1568}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "region_name", scope: !1563, file: !551, line: 87, baseType: !701, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "start_address", scope: !1563, file: !551, line: 88, baseType: !469, size: 32, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "end_address", scope: !1563, file: !551, line: 89, baseType: !469, size: 32, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "is_dumped", scope: !1563, file: !551, line: 90, baseType: !6, size: 32, offset: 96)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "heap_end", scope: !1571, file: !1572, line: 101, type: !701, isLocal: true, isDefinition: true)
!1571 = distinct !DISubprogram(name: "_sbrk_r", scope: !1572, file: !1572, line: 98, type: !1573, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !1764)
!1572 = !DIFile(filename: "../../../../../project/linkit7697_hdk/templates/freertos_create_thread/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1573 = !DISubroutineType(types: !1574)
!1574 = !{!1575, !1577, !1759}
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !1576, line: 123, baseType: !701)
!1576 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 32)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !1579, line: 377, size: 1920, elements: !1580)
!1579 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!1580 = !{!1581, !1582, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1659, !1679, !1683, !1684, !1685, !1686, !1695, !1708, !1709, !1714, !1733, !1734, !1741, !1742, !1758}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !1578, file: !1579, line: 381, baseType: !103, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !1578, file: !1579, line: 386, baseType: !1583, size: 32, offset: 32)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !1579, line: 292, baseType: !1585)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !1579, line: 186, size: 832, elements: !1586)
!1586 = !{!1587, !1588, !1589, !1590, !1592, !1593, !1598, !1599, !1600, !1601, !1605, !1609, !1614, !1618, !1619, !1620, !1621, !1625, !1627, !1628, !1629, !1631, !1637, !1649}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !1585, file: !1579, line: 187, baseType: !926, size: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !1585, file: !1579, line: 188, baseType: !103, size: 32, offset: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !1585, file: !1579, line: 189, baseType: !103, size: 32, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1585, file: !1579, line: 190, baseType: !1591, size: 16, offset: 96)
!1591 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !1585, file: !1579, line: 191, baseType: !1591, size: 16, offset: 112)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !1585, file: !1579, line: 192, baseType: !1594, size: 64, offset: 128)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !1579, line: 122, size: 64, elements: !1595)
!1595 = !{!1596, !1597}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !1594, file: !1579, line: 123, baseType: !926, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !1594, file: !1579, line: 124, baseType: !103, size: 32, offset: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !1585, file: !1579, line: 193, baseType: !103, size: 32, offset: 192)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !1585, file: !1579, line: 196, baseType: !1577, size: 32, offset: 224)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !1585, file: !1579, line: 200, baseType: !30, size: 32, offset: 256)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !1585, file: !1579, line: 202, baseType: !1602, size: 32, offset: 288)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!103, !1577, !30, !701, !103}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !1585, file: !1579, line: 204, baseType: !1606, size: 32, offset: 320)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 32)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{!103, !1577, !30, !104, !103}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !1585, file: !1579, line: 207, baseType: !1610, size: 32, offset: 352)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!1613, !1577, !30, !1613, !103}
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !102, line: 116, baseType: !42)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !1585, file: !1579, line: 208, baseType: !1615, size: 32, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 32)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!103, !1577, !30}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !1585, file: !1579, line: 211, baseType: !1594, size: 64, offset: 416)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !1585, file: !1579, line: 212, baseType: !926, size: 32, offset: 480)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !1585, file: !1579, line: 213, baseType: !103, size: 32, offset: 512)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !1585, file: !1579, line: 216, baseType: !1622, size: 24, offset: 544)
!1622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 24, elements: !1623)
!1623 = !{!1624}
!1624 = !DISubrange(count: 3)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !1585, file: !1579, line: 217, baseType: !1626, size: 8, offset: 568)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 8, elements: !453)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !1585, file: !1579, line: 220, baseType: !1594, size: 64, offset: 576)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !1585, file: !1579, line: 223, baseType: !103, size: 32, offset: 640)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1585, file: !1579, line: 224, baseType: !1630, size: 32, offset: 672)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !102, line: 46, baseType: !42)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1585, file: !1579, line: 231, baseType: !1632, size: 32, offset: 704)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !1579, line: 35, baseType: !1633)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !1634, line: 34, baseType: !1635)
!1634 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !1634, line: 33, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !1585, file: !1579, line: 233, baseType: !1638, size: 64, offset: 736)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !102, line: 170, baseType: !1639)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !102, line: 162, size: 64, elements: !1640)
!1640 = !{!1641, !1642}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1639, file: !102, line: 164, baseType: !103, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1639, file: !102, line: 169, baseType: !1643, size: 32, offset: 32)
!1643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1639, file: !102, line: 165, size: 32, elements: !1644)
!1644 = !{!1645, !1648}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1643, file: !102, line: 167, baseType: !1646, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !1647, line: 116, baseType: !103)
!1647 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1643, file: !102, line: 168, baseType: !970, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1585, file: !1579, line: 234, baseType: !103, size: 32, offset: 800)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !1578, file: !1579, line: 386, baseType: !1583, size: 32, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !1578, file: !1579, line: 386, baseType: !1583, size: 32, offset: 96)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !1578, file: !1579, line: 388, baseType: !103, size: 32, offset: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !1578, file: !1579, line: 390, baseType: !701, size: 32, offset: 160)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !1578, file: !1579, line: 392, baseType: !103, size: 32, offset: 192)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !1578, file: !1579, line: 394, baseType: !103, size: 32, offset: 224)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !1578, file: !1579, line: 395, baseType: !1657, size: 32, offset: 256)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 32)
!1658 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !1579, line: 45, flags: DIFlagFwdDecl)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !1578, file: !1579, line: 397, baseType: !1660, size: 32, offset: 288)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 32)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !1579, line: 349, size: 128, elements: !1662)
!1662 = !{!1663, !1675, !1676, !1677}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !1661, file: !1579, line: 352, baseType: !1664, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 32)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !1579, line: 52, size: 192, elements: !1666)
!1666 = !{!1667, !1668, !1669, !1670, !1671, !1672}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1665, file: !1579, line: 54, baseType: !1664, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !1665, file: !1579, line: 55, baseType: !103, size: 32, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !1665, file: !1579, line: 55, baseType: !103, size: 32, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !1665, file: !1579, line: 55, baseType: !103, size: 32, offset: 96)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !1665, file: !1579, line: 55, baseType: !103, size: 32, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !1665, file: !1579, line: 56, baseType: !1673, size: 32, offset: 160)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1674, size: 32, elements: !453)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !1579, line: 22, baseType: !29)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !1661, file: !1579, line: 353, baseType: !103, size: 32, offset: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !1661, file: !1579, line: 354, baseType: !1664, size: 32, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !1661, file: !1579, line: 355, baseType: !1678, size: 32, offset: 96)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !1578, file: !1579, line: 399, baseType: !1680, size: 32, offset: 320)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{null, !1577}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !1578, file: !1579, line: 401, baseType: !103, size: 32, offset: 352)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !1578, file: !1579, line: 404, baseType: !103, size: 32, offset: 384)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !1578, file: !1579, line: 405, baseType: !701, size: 32, offset: 416)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !1578, file: !1579, line: 407, baseType: !1687, size: 32, offset: 448)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !1579, line: 324, size: 192, elements: !1689)
!1689 = !{!1690, !1692, !1693, !1694}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !1688, file: !1579, line: 325, baseType: !1691, size: 48)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 48, elements: !1623)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !1688, file: !1579, line: 326, baseType: !1691, size: 48, offset: 48)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !1688, file: !1579, line: 327, baseType: !35, size: 16, offset: 96)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !1688, file: !1579, line: 330, baseType: !733, size: 64, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !1578, file: !1579, line: 408, baseType: !1696, size: 32, offset: 480)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 32)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !1579, line: 60, size: 288, elements: !1698)
!1698 = !{!1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !1697, file: !1579, line: 62, baseType: !103, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !1697, file: !1579, line: 63, baseType: !103, size: 32, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !1697, file: !1579, line: 64, baseType: !103, size: 32, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !1697, file: !1579, line: 65, baseType: !103, size: 32, offset: 96)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !1697, file: !1579, line: 66, baseType: !103, size: 32, offset: 128)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !1697, file: !1579, line: 67, baseType: !103, size: 32, offset: 160)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !1697, file: !1579, line: 68, baseType: !103, size: 32, offset: 192)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !1697, file: !1579, line: 69, baseType: !103, size: 32, offset: 224)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !1697, file: !1579, line: 70, baseType: !103, size: 32, offset: 256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !1578, file: !1579, line: 409, baseType: !701, size: 32, offset: 512)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !1578, file: !1579, line: 412, baseType: !1710, size: 32, offset: 544)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 32)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{null, !103}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !1578, file: !1579, line: 416, baseType: !1715, size: 32, offset: 576)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 32)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !1579, line: 90, size: 1120, elements: !1717)
!1717 = !{!1718, !1719, !1720, !1724}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1716, file: !1579, line: 91, baseType: !1715, size: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !1716, file: !1579, line: 92, baseType: !103, size: 32, offset: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !1716, file: !1579, line: 93, baseType: !1721, size: 1024, offset: 64)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !556, size: 1024, elements: !1722)
!1722 = !{!1723}
!1723 = !DISubrange(count: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !1716, file: !1579, line: 94, baseType: !1725, size: 32, offset: 1088)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !1579, line: 79, size: 2112, elements: !1727)
!1727 = !{!1728, !1730, !1731, !1732}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !1726, file: !1579, line: 80, baseType: !1729, size: 1024)
!1729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1024, elements: !1722)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !1726, file: !1579, line: 81, baseType: !1729, size: 1024, offset: 1024)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !1726, file: !1579, line: 83, baseType: !1674, size: 32, offset: 2048)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !1726, file: !1579, line: 86, baseType: !1674, size: 32, offset: 2080)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !1578, file: !1579, line: 417, baseType: !1716, size: 1120, offset: 608)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !1578, file: !1579, line: 420, baseType: !1735, size: 96, offset: 1728)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !1579, line: 296, size: 96, elements: !1736)
!1736 = !{!1737, !1739, !1740}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1735, file: !1579, line: 298, baseType: !1738, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !1735, file: !1579, line: 299, baseType: !103, size: 32, offset: 32)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !1735, file: !1579, line: 300, baseType: !1583, size: 32, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !1578, file: !1579, line: 421, baseType: !1583, size: 32, offset: 1824)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !1578, file: !1579, line: 422, baseType: !1743, size: 32, offset: 1856)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !1579, line: 359, size: 640, elements: !1745)
!1745 = !{!1746, !1747, !1748, !1749, !1750, !1752, !1753, !1754, !1755, !1756, !1757}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !1744, file: !1579, line: 362, baseType: !701, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !1744, file: !1579, line: 363, baseType: !1638, size: 64, offset: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !1744, file: !1579, line: 364, baseType: !1638, size: 64, offset: 96)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !1744, file: !1579, line: 365, baseType: !1638, size: 64, offset: 160)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !1744, file: !1579, line: 366, baseType: !1751, size: 64, offset: 224)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 64, elements: !231)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !1744, file: !1579, line: 367, baseType: !103, size: 32, offset: 288)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !1744, file: !1579, line: 368, baseType: !1638, size: 64, offset: 320)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !1744, file: !1579, line: 369, baseType: !1638, size: 64, offset: 384)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !1744, file: !1579, line: 370, baseType: !1638, size: 64, offset: 448)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !1744, file: !1579, line: 371, baseType: !1638, size: 64, offset: 512)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !1744, file: !1579, line: 372, baseType: !1638, size: 64, offset: 576)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !1578, file: !1579, line: 423, baseType: !701, size: 32, offset: 1888)
!1759 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1647, line: 46, baseType: !6)
!1760 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1761, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1762, globals: !1763, splitDebugInlining: false, nameTableKind: None)
!1761 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1762 = !{!701, !1575}
!1763 = !{!1569}
!1764 = !{!1765, !1766, !1767, !1768}
!1765 = !DILocalVariable(name: "r", arg: 1, scope: !1571, file: !1572, line: 98, type: !1577)
!1766 = !DILocalVariable(name: "nbytes", arg: 2, scope: !1571, file: !1572, line: 98, type: !1759)
!1767 = !DILocalVariable(name: "prev_heap_end", scope: !1571, file: !1572, line: 102, type: !701)
!1768 = !DILocalVariable(name: "stack", scope: !1571, file: !1572, line: 103, type: !701)
!1769 = !DIGlobalVariableExpression(var: !1770, expr: !DIExpression())
!1770 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !1771, file: !1776, line: 4, type: !1785, isLocal: false, isDefinition: true)
!1771 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1772, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1773, splitDebugInlining: false, nameTableKind: None)
!1772 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1773 = !{!1769, !1774, !1780}
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !1771, file: !1776, line: 5, type: !1777, isLocal: false, isDefinition: true)
!1776 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 88, elements: !1778)
!1778 = !{!1779}
!1779 = !DISubrange(count: 11)
!1780 = !DIGlobalVariableExpression(var: !1781, expr: !DIExpression())
!1781 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !1771, file: !1776, line: 6, type: !1782, isLocal: false, isDefinition: true)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 120, elements: !1783)
!1783 = !{!1784}
!1784 = !DISubrange(count: 15)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 248, elements: !1786)
!1786 = !{!1787}
!1787 = !DISubrange(count: 31)
!1788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1789, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1790, splitDebugInlining: false, nameTableKind: None)
!1789 = !DIFile(filename: "../../../../../driver/board/linkit7697_hdk/ept/src/bsp_gpio_ept_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1790 = !{!38, !43}
!1791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1792, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1793, splitDebugInlining: false, nameTableKind: None)
!1792 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/list.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1793 = !{!1794, !59, !27, !30, !1804}
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListItem_t", file: !55, line: 191, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST_ITEM", file: !55, line: 181, size: 160, elements: !1797)
!1797 = !{!1798, !1799, !1801, !1802, !1803}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1796, file: !55, line: 184, baseType: !59, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1796, file: !55, line: 185, baseType: !1800, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1796, file: !55, line: 186, baseType: !1800, size: 32, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "pvOwner", scope: !1796, file: !55, line: 187, baseType: !30, size: 32, offset: 96)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "pvContainer", scope: !1796, file: !55, line: 188, baseType: !30, size: 32, offset: 128)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "List_t", file: !55, line: 212, baseType: !1806)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xLIST", file: !55, line: 205, size: 160, elements: !1807)
!1807 = !{!1808, !1809, !1810}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "uxNumberOfItems", scope: !1806, file: !55, line: 208, baseType: !27, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "pxIndex", scope: !1806, file: !55, line: 209, baseType: !1794, size: 32, offset: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "xListEnd", scope: !1806, file: !55, line: 210, baseType: !1811, size: 96, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "MiniListItem_t", file: !55, line: 200, baseType: !1812)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMINI_LIST_ITEM", file: !55, line: 193, size: 96, elements: !1813)
!1813 = !{!1814, !1815, !1816}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "xItemValue", scope: !1812, file: !55, line: 196, baseType: !59, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "pxNext", scope: !1812, file: !55, line: 197, baseType: !1800, size: 32, offset: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "pxPrevious", scope: !1812, file: !55, line: 198, baseType: !1800, size: 32, offset: 64)
!1817 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1818, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1819, splitDebugInlining: false, nameTableKind: None)
!1818 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/portable/GCC/mt7687/port_tick.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1819 = !{!59, !1820}
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !396, line: 656, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 650, size: 128, elements: !1823)
!1823 = !{!1824, !1825, !1826, !1827}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1822, file: !396, line: 652, baseType: !44, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1822, file: !396, line: 653, baseType: !44, size: 32, offset: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1822, file: !396, line: 654, baseType: !44, size: 32, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1822, file: !396, line: 655, baseType: !400, size: 32, offset: 96)
!1828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1829, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1830, splitDebugInlining: false, nameTableKind: None)
!1829 = !DIFile(filename: "../../../../../kernel/service/src/os_port_callback.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1830 = !{!6, !701}
!1831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1833, retainedTypes: !1840, splitDebugInlining: false, nameTableKind: None)
!1832 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/hal_trng.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1833 = !{!1834}
!1834 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1835, line: 92, baseType: !103, size: 32, elements: !1836)
!1835 = !DIFile(filename: "../../../../../driver/chip/inc/hal_trng.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1836 = !{!1837, !1838, !1839}
!1837 = !DIEnumerator(name: "HAL_TRNG_STATUS_ERROR", value: -2)
!1838 = !DIEnumerator(name: "HAL_TRNG_STATUS_INVALID_PARAMETER", value: -1)
!1839 = !DIEnumerator(name: "HAL_TRNG_STATUS_OK", value: 0)
!1840 = !{!1023, !1025}
!1841 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1842, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1843, splitDebugInlining: false, nameTableKind: None)
!1842 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1843 = !{!1844, !1869}
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !396, line: 418, baseType: !1846)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 395, size: 1120, elements: !1847)
!1847 = !{!1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1846, file: !396, line: 397, baseType: !400, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1846, file: !396, line: 398, baseType: !44, size: 32, offset: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1846, file: !396, line: 399, baseType: !44, size: 32, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1846, file: !396, line: 400, baseType: !44, size: 32, offset: 96)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1846, file: !396, line: 401, baseType: !44, size: 32, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1846, file: !396, line: 402, baseType: !44, size: 32, offset: 160)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1846, file: !396, line: 403, baseType: !407, size: 96, offset: 192)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1846, file: !396, line: 404, baseType: !44, size: 32, offset: 288)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1846, file: !396, line: 405, baseType: !44, size: 32, offset: 320)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1846, file: !396, line: 406, baseType: !44, size: 32, offset: 352)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1846, file: !396, line: 407, baseType: !44, size: 32, offset: 384)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1846, file: !396, line: 408, baseType: !44, size: 32, offset: 416)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1846, file: !396, line: 409, baseType: !44, size: 32, offset: 448)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1846, file: !396, line: 410, baseType: !44, size: 32, offset: 480)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1846, file: !396, line: 411, baseType: !418, size: 64, offset: 512)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1846, file: !396, line: 412, baseType: !400, size: 32, offset: 576)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1846, file: !396, line: 413, baseType: !400, size: 32, offset: 608)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1846, file: !396, line: 414, baseType: !424, size: 128, offset: 640)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1846, file: !396, line: 415, baseType: !428, size: 160, offset: 768)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1846, file: !396, line: 416, baseType: !432, size: 160, offset: 928)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1846, file: !396, line: 417, baseType: !44, size: 32, offset: 1088)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !396, line: 378, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !396, line: 363, size: 28704, elements: !1872)
!1872 = !{!1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1871, file: !396, line: 365, baseType: !1240, size: 256)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1871, file: !396, line: 366, baseType: !1242, size: 768, offset: 256)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1871, file: !396, line: 367, baseType: !1240, size: 256, offset: 1024)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1871, file: !396, line: 368, baseType: !1242, size: 768, offset: 1280)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1871, file: !396, line: 369, baseType: !1240, size: 256, offset: 2048)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1871, file: !396, line: 370, baseType: !1242, size: 768, offset: 2304)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1871, file: !396, line: 371, baseType: !1240, size: 256, offset: 3072)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1871, file: !396, line: 372, baseType: !1242, size: 768, offset: 3328)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1871, file: !396, line: 373, baseType: !1240, size: 256, offset: 4096)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1871, file: !396, line: 374, baseType: !1253, size: 1792, offset: 4352)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1871, file: !396, line: 375, baseType: !1257, size: 1920, offset: 6144)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1871, file: !396, line: 376, baseType: !1261, size: 20608, offset: 8064)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1871, file: !396, line: 377, baseType: !44, size: 32, offset: 28672)
!1886 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1887, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1888, splitDebugInlining: false, nameTableKind: None)
!1887 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/timer.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1888 = !{!42, !892}
!1889 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1890, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1891, retainedTypes: !1902, splitDebugInlining: false, nameTableKind: None)
!1890 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1891 = !{!1892, !812}
!1892 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !813, line: 110, baseType: !103, size: 32, elements: !1893)
!1893 = !{!1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901}
!1894 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1895 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1896 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1897 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1898 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1899 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1900 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1901 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1902 = !{!30}
!1903 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1904, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1905, retainedTypes: !1906, splitDebugInlining: false, nameTableKind: None)
!1904 = !DIFile(filename: "../../../../../project/linkit7697_hdk/templates/freertos_create_thread/src/sys_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!1905 = !{!591, !1123, !577, !1104, !1834}
!1906 = !{!1907, !6}
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !1094, line: 204, baseType: !1104)
!1908 = !{!"Ubuntu clang version 14.0.6"}
!1909 = !{i32 7, !"Dwarf Version", i32 2}
!1910 = !{i32 2, !"Debug Info Version", i32 3}
!1911 = !{i32 1, !"wchar_size", i32 4}
!1912 = !{i32 1, !"min_enum_size", i32 4}
!1913 = !{i32 1, !"branch-target-enforcement", i32 0}
!1914 = !{i32 1, !"sign-return-address", i32 0}
!1915 = !{i32 1, !"sign-return-address-all", i32 0}
!1916 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!1917 = !{i32 7, !"frame-pointer", i32 2}
!1918 = distinct !DISubprogram(name: "gpio_mode_init", scope: !1789, file: !1789, line: 93, type: !110, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1788, retainedNodes: !1919)
!1919 = !{!1920, !1921}
!1920 = !DILocalVariable(name: "i", scope: !1918, file: !1789, line: 95, type: !38)
!1921 = !DILocalVariable(name: "mode_temp", scope: !1918, file: !1789, line: 98, type: !1922)
!1922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 320, elements: !1923)
!1923 = !{!1924}
!1924 = !DISubrange(count: 10)
!1925 = !DILocation(line: 98, column: 14, scope: !1918)
!1926 = !DILocation(line: 0, scope: !1918)
!1927 = !DILocation(line: 100, column: 5, scope: !1928)
!1928 = distinct !DILexicalBlock(scope: !1918, file: !1789, line: 100, column: 5)
!1929 = !DILocation(line: 101, column: 9, scope: !1930)
!1930 = distinct !DILexicalBlock(scope: !1931, file: !1789, line: 100, column: 50)
!1931 = distinct !DILexicalBlock(scope: !1928, file: !1789, line: 100, column: 5)
!1932 = !DILocation(line: 100, column: 46, scope: !1931)
!1933 = !DILocation(line: 100, column: 19, scope: !1931)
!1934 = distinct !{!1934, !1927, !1935}
!1935 = !DILocation(line: 103, column: 5, scope: !1928)
!1936 = !DILocation(line: 106, column: 1, scope: !1918)
!1937 = distinct !DISubprogram(name: "gpio_oe_init", scope: !1789, file: !1789, line: 114, type: !110, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1788, retainedNodes: !1938)
!1938 = !{!1939, !1940}
!1939 = !DILocalVariable(name: "i", scope: !1937, file: !1789, line: 116, type: !38)
!1940 = !DILocalVariable(name: "oe_temp", scope: !1937, file: !1789, line: 119, type: !1941)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 96, elements: !1623)
!1942 = !DILocation(line: 0, scope: !1937)
!1943 = !DILocation(line: 122, column: 9, scope: !1944)
!1944 = distinct !DILexicalBlock(scope: !1945, file: !1789, line: 121, column: 48)
!1945 = distinct !DILexicalBlock(scope: !1946, file: !1789, line: 121, column: 5)
!1946 = distinct !DILexicalBlock(scope: !1937, file: !1789, line: 121, column: 5)
!1947 = !DILocation(line: 125, column: 1, scope: !1937)
!1948 = distinct !DISubprogram(name: "gpio_ies_init", scope: !1789, file: !1789, line: 133, type: !110, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1788, retainedNodes: !1949)
!1949 = !{!1950, !1951}
!1950 = !DILocalVariable(name: "i", scope: !1948, file: !1789, line: 135, type: !38)
!1951 = !DILocalVariable(name: "ies_temp", scope: !1948, file: !1789, line: 138, type: !1941)
!1952 = !DILocation(line: 0, scope: !1948)
!1953 = !DILocation(line: 141, column: 9, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1955, file: !1789, line: 140, column: 49)
!1955 = distinct !DILexicalBlock(scope: !1956, file: !1789, line: 140, column: 5)
!1956 = distinct !DILexicalBlock(scope: !1948, file: !1789, line: 140, column: 5)
!1957 = !DILocation(line: 145, column: 33, scope: !1948)
!1958 = !DILocation(line: 146, column: 33, scope: !1948)
!1959 = !DILocation(line: 147, column: 33, scope: !1948)
!1960 = !DILocation(line: 150, column: 33, scope: !1948)
!1961 = !DILocation(line: 151, column: 33, scope: !1948)
!1962 = !DILocation(line: 152, column: 33, scope: !1948)
!1963 = !DILocation(line: 155, column: 35, scope: !1948)
!1964 = !DILocation(line: 156, column: 35, scope: !1948)
!1965 = !DILocation(line: 157, column: 35, scope: !1948)
!1966 = !DILocation(line: 160, column: 35, scope: !1948)
!1967 = !DILocation(line: 161, column: 35, scope: !1948)
!1968 = !DILocation(line: 162, column: 35, scope: !1948)
!1969 = !DILocation(line: 165, column: 35, scope: !1948)
!1970 = !DILocation(line: 166, column: 35, scope: !1948)
!1971 = !DILocation(line: 167, column: 35, scope: !1948)
!1972 = !DILocation(line: 170, column: 35, scope: !1948)
!1973 = !DILocation(line: 171, column: 35, scope: !1948)
!1974 = !DILocation(line: 172, column: 35, scope: !1948)
!1975 = !DILocation(line: 174, column: 1, scope: !1948)
!1976 = distinct !DISubprogram(name: "gpio_pull_up_init", scope: !1789, file: !1789, line: 182, type: !110, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1788, retainedNodes: !1977)
!1977 = !{!1978, !1979}
!1978 = !DILocalVariable(name: "i", scope: !1976, file: !1789, line: 184, type: !38)
!1979 = !DILocalVariable(name: "pull_up_temp", scope: !1976, file: !1789, line: 187, type: !1941)
!1980 = !DILocation(line: 0, scope: !1976)
!1981 = !DILocation(line: 190, column: 9, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1983, file: !1789, line: 189, column: 53)
!1983 = distinct !DILexicalBlock(scope: !1984, file: !1789, line: 189, column: 5)
!1984 = distinct !DILexicalBlock(scope: !1976, file: !1789, line: 189, column: 5)
!1985 = !DILocation(line: 194, column: 33, scope: !1976)
!1986 = !DILocation(line: 202, column: 33, scope: !1976)
!1987 = !DILocation(line: 210, column: 35, scope: !1976)
!1988 = !DILocation(line: 218, column: 35, scope: !1976)
!1989 = !DILocation(line: 226, column: 35, scope: !1976)
!1990 = !DILocation(line: 234, column: 35, scope: !1976)
!1991 = !DILocation(line: 241, column: 1, scope: !1976)
!1992 = distinct !DISubprogram(name: "gpio_pull_down_init", scope: !1789, file: !1789, line: 250, type: !110, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1788, retainedNodes: !1993)
!1993 = !{!1994, !1995}
!1994 = !DILocalVariable(name: "i", scope: !1992, file: !1789, line: 252, type: !38)
!1995 = !DILocalVariable(name: "pull_down_temp", scope: !1992, file: !1789, line: 255, type: !1941)
!1996 = !DILocation(line: 0, scope: !1992)
!1997 = !DILocation(line: 258, column: 9, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1999, file: !1789, line: 257, column: 55)
!1999 = distinct !DILexicalBlock(scope: !2000, file: !1789, line: 257, column: 5)
!2000 = distinct !DILexicalBlock(scope: !1992, file: !1789, line: 257, column: 5)
!2001 = !DILocation(line: 261, column: 1, scope: !1992)
!2002 = distinct !DISubprogram(name: "gpio_output_init", scope: !1789, file: !1789, line: 269, type: !110, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1788, retainedNodes: !2003)
!2003 = !{!2004, !2005}
!2004 = !DILocalVariable(name: "i", scope: !2002, file: !1789, line: 271, type: !38)
!2005 = !DILocalVariable(name: "output_temp", scope: !2002, file: !1789, line: 274, type: !1941)
!2006 = !DILocation(line: 0, scope: !2002)
!2007 = !DILocation(line: 277, column: 9, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !2009, file: !1789, line: 276, column: 52)
!2009 = distinct !DILexicalBlock(scope: !2010, file: !1789, line: 276, column: 5)
!2010 = distinct !DILexicalBlock(scope: !2002, file: !1789, line: 276, column: 5)
!2011 = !DILocation(line: 281, column: 1, scope: !2002)
!2012 = distinct !DISubprogram(name: "bsp_ept_gpio_setting_init", scope: !1789, file: !1789, line: 289, type: !110, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1788, retainedNodes: !2013)
!2013 = !{}
!2014 = !DILocation(line: 291, column: 5, scope: !2012)
!2015 = !DILocation(line: 292, column: 5, scope: !2012)
!2016 = !DILocation(line: 293, column: 5, scope: !2012)
!2017 = !DILocation(line: 294, column: 5, scope: !2012)
!2018 = !DILocation(line: 295, column: 5, scope: !2012)
!2019 = !DILocation(line: 296, column: 5, scope: !2012)
!2020 = !DILocation(line: 297, column: 1, scope: !2012)
!2021 = distinct !DISubprogram(name: "xTaskGenericCreate", scope: !3, file: !3, line: 547, type: !2022, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2040)
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!41, !2024, !1068, !2026, !2027, !27, !2028, !2030, !2031}
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskFunction_t", file: !2025, line: 77, baseType: !1336)
!2025 = !DIFile(filename: "../../../../../kernel/rtos/FreeRTOS/Source/include/projdefs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!2026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !31)
!2027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !30)
!2028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2029)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !36)
!2031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2032)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2034)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemoryRegion_t", file: !12, line: 148, baseType: !2035)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xMEMORY_REGION", file: !12, line: 143, size: 96, elements: !2036)
!2036 = !{!2037, !2038, !2039}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "pvBaseAddress", scope: !2035, file: !12, line: 145, baseType: !30, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "ulLengthInBytes", scope: !2035, file: !12, line: 146, baseType: !38, size: 32, offset: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "ulParameters", scope: !2035, file: !12, line: 147, baseType: !38, size: 32, offset: 64)
!2040 = !{!2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051}
!2041 = !DILocalVariable(name: "pxTaskCode", arg: 1, scope: !2021, file: !3, line: 547, type: !2024)
!2042 = !DILocalVariable(name: "pcName", arg: 2, scope: !2021, file: !3, line: 547, type: !1068)
!2043 = !DILocalVariable(name: "usStackDepth", arg: 3, scope: !2021, file: !3, line: 547, type: !2026)
!2044 = !DILocalVariable(name: "pvParameters", arg: 4, scope: !2021, file: !3, line: 547, type: !2027)
!2045 = !DILocalVariable(name: "uxPriority", arg: 5, scope: !2021, file: !3, line: 547, type: !27)
!2046 = !DILocalVariable(name: "pxCreatedTask", arg: 6, scope: !2021, file: !3, line: 547, type: !2028)
!2047 = !DILocalVariable(name: "puxStackBuffer", arg: 7, scope: !2021, file: !3, line: 547, type: !2030)
!2048 = !DILocalVariable(name: "xRegions", arg: 8, scope: !2021, file: !3, line: 547, type: !2031)
!2049 = !DILocalVariable(name: "xReturn", scope: !2021, file: !3, line: 549, type: !41)
!2050 = !DILocalVariable(name: "pxNewTCB", scope: !2021, file: !3, line: 550, type: !45)
!2051 = !DILocalVariable(name: "pxTopOfStack", scope: !2021, file: !3, line: 551, type: !36)
!2052 = !DILocation(line: 0, scope: !2021)
!2053 = !DILocation(line: 553, column: 2, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !2021, file: !3, line: 553, column: 2)
!2055 = !DILocation(line: 553, column: 2, scope: !2021)
!2056 = !DILocation(line: 553, column: 2, scope: !2057)
!2057 = distinct !DILexicalBlock(scope: !2054, file: !3, line: 553, column: 2)
!2058 = !DILocation(line: 554, column: 2, scope: !2059)
!2059 = distinct !DILexicalBlock(scope: !2021, file: !3, line: 554, column: 2)
!2060 = !DILocation(line: 554, column: 2, scope: !2021)
!2061 = !DILocation(line: 554, column: 2, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !2059, file: !3, line: 554, column: 2)
!2063 = !DILocation(line: 558, column: 13, scope: !2021)
!2064 = !DILocation(line: 560, column: 15, scope: !2065)
!2065 = distinct !DILexicalBlock(scope: !2021, file: !3, line: 560, column: 6)
!2066 = !DILocation(line: 560, column: 6, scope: !2021)
!2067 = !DILocation(line: 596, column: 29, scope: !2068)
!2068 = distinct !DILexicalBlock(scope: !2069, file: !3, line: 595, column: 3)
!2069 = distinct !DILexicalBlock(scope: !2065, file: !3, line: 561, column: 2)
!2070 = !DILocation(line: 596, column: 41, scope: !2068)
!2071 = !DILocation(line: 596, column: 54, scope: !2068)
!2072 = !DILocation(line: 596, column: 37, scope: !2068)
!2073 = !DILocation(line: 597, column: 41, scope: !2068)
!2074 = !DILocation(line: 597, column: 82, scope: !2068)
!2075 = !DILocation(line: 597, column: 19, scope: !2068)
!2076 = !DILocation(line: 617, column: 3, scope: !2069)
!2077 = !DILocation(line: 629, column: 29, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2069, file: !3, line: 628, column: 3)
!2079 = !DILocation(line: 629, column: 14, scope: !2078)
!2080 = !DILocation(line: 629, column: 27, scope: !2078)
!2081 = !DILocation(line: 633, column: 32, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2069, file: !3, line: 633, column: 7)
!2083 = !DILocation(line: 633, column: 7, scope: !2069)
!2084 = !DILocation(line: 638, column: 19, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !2082, file: !3, line: 634, column: 3)
!2086 = !DILocation(line: 639, column: 3, scope: !2085)
!2087 = !DILocation(line: 647, column: 3, scope: !2069)
!2088 = !DILocation(line: 649, column: 26, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !2069, file: !3, line: 648, column: 3)
!2090 = !DILocation(line: 650, column: 8, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !2089, file: !3, line: 650, column: 8)
!2092 = !DILocation(line: 650, column: 21, scope: !2091)
!2093 = !DILocation(line: 650, column: 8, scope: !2089)
!2094 = !DILocation(line: 654, column: 18, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !2091, file: !3, line: 651, column: 4)
!2096 = !DILocation(line: 656, column: 9, scope: !2097)
!2097 = distinct !DILexicalBlock(scope: !2095, file: !3, line: 656, column: 9)
!2098 = !DILocation(line: 656, column: 32, scope: !2097)
!2099 = !DILocation(line: 656, column: 9, scope: !2095)
!2100 = !DILocation(line: 661, column: 6, scope: !2101)
!2101 = distinct !DILexicalBlock(scope: !2097, file: !3, line: 657, column: 5)
!2102 = !DILocation(line: 662, column: 5, scope: !2101)
!2103 = !DILocation(line: 673, column: 9, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !2105, file: !3, line: 673, column: 9)
!2105 = distinct !DILexicalBlock(scope: !2091, file: !3, line: 669, column: 4)
!2106 = !DILocation(line: 673, column: 27, scope: !2104)
!2107 = !DILocation(line: 673, column: 9, scope: !2105)
!2108 = !DILocation(line: 675, column: 10, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !2110, file: !3, line: 675, column: 10)
!2110 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 674, column: 5)
!2111 = !DILocation(line: 675, column: 24, scope: !2109)
!2112 = !DILocation(line: 675, column: 35, scope: !2109)
!2113 = !DILocation(line: 675, column: 10, scope: !2110)
!2114 = !DILocation(line: 677, column: 20, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2109, file: !3, line: 676, column: 6)
!2116 = !DILocation(line: 678, column: 6, scope: !2115)
!2117 = !DILocation(line: 690, column: 16, scope: !2089)
!2118 = !DILocation(line: 695, column: 15, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2089, file: !3, line: 693, column: 4)
!2120 = !DILocation(line: 695, column: 27, scope: !2119)
!2121 = !DILocation(line: 700, column: 4, scope: !2089)
!2122 = !DILocation(line: 705, column: 3, scope: !2069)
!2123 = !DILocation(line: 715, column: 7, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !2125, file: !3, line: 715, column: 7)
!2125 = distinct !DILexicalBlock(scope: !2126, file: !3, line: 714, column: 2)
!2126 = distinct !DILexicalBlock(scope: !2021, file: !3, line: 713, column: 6)
!2127 = !DILocation(line: 715, column: 25, scope: !2124)
!2128 = !DILocation(line: 715, column: 7, scope: !2125)
!2129 = !DILocation(line: 719, column: 8, scope: !2130)
!2130 = distinct !DILexicalBlock(scope: !2131, file: !3, line: 719, column: 8)
!2131 = distinct !DILexicalBlock(scope: !2124, file: !3, line: 716, column: 3)
!2132 = !DILocation(line: 719, column: 22, scope: !2130)
!2133 = !DILocation(line: 719, column: 33, scope: !2130)
!2134 = !DILocation(line: 719, column: 8, scope: !2131)
!2135 = !DILocation(line: 721, column: 5, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2137, file: !3, line: 721, column: 5)
!2137 = distinct !DILexicalBlock(scope: !2130, file: !3, line: 720, column: 4)
!2138 = !{i64 2148466151}
!2139 = !{i64 2148466191}
!2140 = !DILocation(line: 722, column: 4, scope: !2137)
!2141 = !DILocation(line: 734, column: 2, scope: !2021)
!2142 = distinct !DISubprogram(name: "prvAllocateTCBAndStack", scope: !3, file: !3, line: 3021, type: !2143, scopeLine: 3022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2145)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{!45, !2026, !2030}
!2145 = !{!2146, !2147, !2148, !2149}
!2146 = !DILocalVariable(name: "usStackDepth", arg: 1, scope: !2142, file: !3, line: 3021, type: !2026)
!2147 = !DILocalVariable(name: "puxStackBuffer", arg: 2, scope: !2142, file: !3, line: 3021, type: !2030)
!2148 = !DILocalVariable(name: "pxNewTCB", scope: !2142, file: !3, line: 3023, type: !45)
!2149 = !DILocalVariable(name: "pxStack", scope: !2150, file: !3, line: 3051, type: !36)
!2150 = distinct !DILexicalBlock(scope: !2142, file: !3, line: 3050, column: 2)
!2151 = !DILocation(line: 0, scope: !2142)
!2152 = !DILocation(line: 3054, column: 31, scope: !2150)
!2153 = !DILocation(line: 0, scope: !2150)
!2154 = !DILocation(line: 3056, column: 15, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !2150, file: !3, line: 3056, column: 7)
!2156 = !DILocation(line: 3056, column: 7, scope: !2150)
!2157 = !DILocation(line: 3060, column: 27, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2155, file: !3, line: 3057, column: 3)
!2159 = !DILocation(line: 3062, column: 17, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !2158, file: !3, line: 3062, column: 8)
!2161 = !DILocation(line: 3062, column: 8, scope: !2158)
!2162 = !DILocation(line: 3071, column: 5, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !2160, file: !3, line: 3068, column: 4)
!2164 = !DILocation(line: 3065, column: 15, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2160, file: !3, line: 3063, column: 4)
!2166 = !DILocation(line: 3065, column: 23, scope: !2165)
!2167 = !DILocation(line: 3060, column: 15, scope: !2158)
!2168 = !DILocation(line: 3087, column: 68, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2170, file: !3, line: 3085, column: 3)
!2170 = distinct !DILexicalBlock(scope: !2171, file: !3, line: 3082, column: 2)
!2171 = distinct !DILexicalBlock(scope: !2142, file: !3, line: 3081, column: 6)
!2172 = !DILocation(line: 3087, column: 92, scope: !2169)
!2173 = !DILocation(line: 3087, column: 13, scope: !2169)
!2174 = !DILocation(line: 3090, column: 2, scope: !2170)
!2175 = !DILocation(line: 3092, column: 2, scope: !2142)
!2176 = distinct !DISubprogram(name: "prvInitialiseTCBVariables", scope: !3, file: !3, line: 2802, type: !2177, scopeLine: 2803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2180)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{null, !2179, !1068, !27, !2031, !2026}
!2179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !45)
!2180 = !{!2181, !2182, !2183, !2184, !2185, !2186}
!2181 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !2176, file: !3, line: 2802, type: !2179)
!2182 = !DILocalVariable(name: "pcName", arg: 2, scope: !2176, file: !3, line: 2802, type: !1068)
!2183 = !DILocalVariable(name: "uxPriority", arg: 3, scope: !2176, file: !3, line: 2802, type: !27)
!2184 = !DILocalVariable(name: "xRegions", arg: 4, scope: !2176, file: !3, line: 2802, type: !2031)
!2185 = !DILocalVariable(name: "usStackDepth", arg: 5, scope: !2176, file: !3, line: 2802, type: !2026)
!2186 = !DILocalVariable(name: "x", scope: !2176, file: !3, line: 2804, type: !27)
!2187 = !DILocation(line: 0, scope: !2176)
!2188 = !DILocation(line: 2807, column: 2, scope: !2189)
!2189 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 2807, column: 2)
!2190 = !DILocation(line: 2809, column: 28, scope: !2191)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !3, line: 2808, column: 2)
!2192 = distinct !DILexicalBlock(scope: !2189, file: !3, line: 2807, column: 2)
!2193 = !DILocation(line: 2809, column: 3, scope: !2191)
!2194 = !DILocation(line: 2809, column: 26, scope: !2191)
!2195 = !DILocation(line: 2814, column: 7, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 2814, column: 7)
!2197 = !DILocation(line: 2814, column: 19, scope: !2196)
!2198 = !DILocation(line: 2814, column: 7, scope: !2191)
!2199 = distinct !{!2199, !2188, !2200}
!2200 = !DILocation(line: 2822, column: 2, scope: !2189)
!2201 = !DILocation(line: 2826, column: 2, scope: !2176)
!2202 = !DILocation(line: 2826, column: 51, scope: !2176)
!2203 = !DILocation(line: 2830, column: 6, scope: !2176)
!2204 = !DILocation(line: 2839, column: 9, scope: !2176)
!2205 = !DILocation(line: 2839, column: 20, scope: !2176)
!2206 = !DILocation(line: 2842, column: 10, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 2841, column: 2)
!2208 = !DILocation(line: 2842, column: 25, scope: !2207)
!2209 = !DILocation(line: 2843, column: 10, scope: !2207)
!2210 = !DILocation(line: 2843, column: 24, scope: !2207)
!2211 = !DILocation(line: 2847, column: 33, scope: !2176)
!2212 = !DILocation(line: 2847, column: 2, scope: !2176)
!2213 = !DILocation(line: 2848, column: 33, scope: !2176)
!2214 = !DILocation(line: 2848, column: 2, scope: !2176)
!2215 = !DILocation(line: 2852, column: 2, scope: !2176)
!2216 = !DILocation(line: 2855, column: 2, scope: !2176)
!2217 = !DILocation(line: 2856, column: 2, scope: !2176)
!2218 = !DILocation(line: 2889, column: 10, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2176, file: !3, line: 2888, column: 2)
!2220 = !DILocation(line: 2889, column: 26, scope: !2219)
!2221 = !DILocation(line: 2890, column: 10, scope: !2219)
!2222 = !DILocation(line: 2890, column: 23, scope: !2219)
!2223 = !DILocation(line: 2900, column: 1, scope: !2176)
!2224 = distinct !DISubprogram(name: "prvInitialiseTaskLists", scope: !3, file: !3, line: 2918, type: !110, scopeLine: 2919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2225)
!2225 = !{!2226}
!2226 = !DILocalVariable(name: "uxPriority", scope: !2224, file: !3, line: 2920, type: !27)
!2227 = !DILocation(line: 0, scope: !2224)
!2228 = !DILocation(line: 2922, column: 2, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 2922, column: 2)
!2230 = !DILocation(line: 2924, column: 23, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2232, file: !3, line: 2923, column: 2)
!2232 = distinct !DILexicalBlock(scope: !2229, file: !3, line: 2922, column: 2)
!2233 = !DILocation(line: 2924, column: 3, scope: !2231)
!2234 = !DILocation(line: 2922, column: 101, scope: !2232)
!2235 = !DILocation(line: 2922, column: 51, scope: !2232)
!2236 = distinct !{!2236, !2228, !2237}
!2237 = !DILocation(line: 2925, column: 2, scope: !2229)
!2238 = !DILocation(line: 2927, column: 2, scope: !2224)
!2239 = !DILocation(line: 2928, column: 2, scope: !2224)
!2240 = !DILocation(line: 2929, column: 2, scope: !2224)
!2241 = !DILocation(line: 2933, column: 3, scope: !2242)
!2242 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 2932, column: 2)
!2243 = !DILocation(line: 2939, column: 3, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2224, file: !3, line: 2938, column: 2)
!2245 = !DILocation(line: 2945, column: 20, scope: !2224)
!2246 = !DILocation(line: 2946, column: 28, scope: !2224)
!2247 = !DILocation(line: 2947, column: 1, scope: !2224)
!2248 = distinct !DISubprogram(name: "vTaskDelete", scope: !3, file: !3, line: 740, type: !2249, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2251)
!2249 = !DISubroutineType(types: !2250)
!2250 = !{null, !40}
!2251 = !{!2252, !2253}
!2252 = !DILocalVariable(name: "xTaskToDelete", arg: 1, scope: !2248, file: !3, line: 740, type: !40)
!2253 = !DILocalVariable(name: "pxTCB", scope: !2248, file: !3, line: 742, type: !45)
!2254 = !DILocation(line: 0, scope: !2248)
!2255 = !DILocation(line: 744, column: 3, scope: !2248)
!2256 = !DILocation(line: 748, column: 12, scope: !2257)
!2257 = distinct !DILexicalBlock(scope: !2248, file: !3, line: 745, column: 3)
!2258 = !DILocation(line: 754, column: 32, scope: !2259)
!2259 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 754, column: 8)
!2260 = !DILocation(line: 754, column: 8, scope: !2259)
!2261 = !DILocation(line: 754, column: 53, scope: !2259)
!2262 = !DILocation(line: 754, column: 8, scope: !2257)
!2263 = !DILocation(line: 756, column: 5, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2265, file: !3, line: 756, column: 5)
!2265 = distinct !DILexicalBlock(scope: !2266, file: !3, line: 756, column: 5)
!2266 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 755, column: 4)
!2267 = !DILocation(line: 756, column: 5, scope: !2265)
!2268 = !DILocation(line: 756, column: 5, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 756, column: 5)
!2270 = !DILocation(line: 764, column: 8, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2257, file: !3, line: 764, column: 8)
!2272 = !DILocation(line: 764, column: 62, scope: !2271)
!2273 = !DILocation(line: 764, column: 8, scope: !2257)
!2274 = !DILocation(line: 766, column: 14, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2271, file: !3, line: 765, column: 4)
!2276 = !DILocation(line: 767, column: 4, scope: !2275)
!2277 = !DILocation(line: 773, column: 4, scope: !2257)
!2278 = !DILocation(line: 778, column: 4, scope: !2257)
!2279 = !DILocation(line: 782, column: 16, scope: !2257)
!2280 = !DILocation(line: 786, column: 3, scope: !2248)
!2281 = !DILocation(line: 790, column: 7, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2248, file: !3, line: 790, column: 7)
!2283 = !DILocation(line: 790, column: 25, scope: !2282)
!2284 = !DILocation(line: 790, column: 7, scope: !2248)
!2285 = !DILocation(line: 792, column: 17, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2287, file: !3, line: 792, column: 8)
!2287 = distinct !DILexicalBlock(scope: !2282, file: !3, line: 791, column: 3)
!2288 = !DILocation(line: 792, column: 14, scope: !2286)
!2289 = !DILocation(line: 792, column: 8, scope: !2287)
!2290 = !DILocation(line: 794, column: 5, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2292, file: !3, line: 794, column: 5)
!2292 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 793, column: 4)
!2293 = !DILocation(line: 794, column: 5, scope: !2292)
!2294 = !DILocation(line: 794, column: 5, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2291, file: !3, line: 794, column: 5)
!2296 = !DILocation(line: 802, column: 5, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2292, file: !3, line: 802, column: 5)
!2298 = !{i64 2148467557}
!2299 = !{i64 2148467597}
!2300 = !DILocation(line: 803, column: 4, scope: !2292)
!2301 = !DILocation(line: 808, column: 5, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 805, column: 4)
!2303 = !DILocation(line: 810, column: 6, scope: !2304)
!2304 = distinct !DILexicalBlock(scope: !2302, file: !3, line: 809, column: 5)
!2305 = !DILocation(line: 812, column: 5, scope: !2302)
!2306 = !DILocation(line: 815, column: 2, scope: !2248)
!2307 = distinct !DISubprogram(name: "prvResetNextTaskUnblockTime", scope: !3, file: !3, line: 3267, type: !110, scopeLine: 3268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2308)
!2308 = !{!2309}
!2309 = !DILocalVariable(name: "pxTCB", scope: !2307, file: !3, line: 3269, type: !45)
!2310 = !DILocation(line: 3271, column: 6, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2307, file: !3, line: 3271, column: 6)
!2312 = !DILocation(line: 3271, column: 6, scope: !2307)
!2313 = !DILocation(line: 3286, column: 27, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2311, file: !3, line: 3281, column: 2)
!2315 = !DILocation(line: 0, scope: !2307)
!2316 = !DILocation(line: 3287, column: 26, scope: !2314)
!2317 = !DILocation(line: 0, scope: !2311)
!2318 = !DILocation(line: 3289, column: 1, scope: !2307)
!2319 = distinct !DISubprogram(name: "vTaskDelayUntil", scope: !3, file: !3, line: 822, type: !2320, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{null, !2322, !2324}
!2322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2323)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !59)
!2325 = !{!2326, !2327, !2328, !2329, !2330, !2331}
!2326 = !DILocalVariable(name: "pxPreviousWakeTime", arg: 1, scope: !2319, file: !3, line: 822, type: !2322)
!2327 = !DILocalVariable(name: "xTimeIncrement", arg: 2, scope: !2319, file: !3, line: 822, type: !2324)
!2328 = !DILocalVariable(name: "xTimeToWake", scope: !2319, file: !3, line: 824, type: !59)
!2329 = !DILocalVariable(name: "xAlreadyYielded", scope: !2319, file: !3, line: 825, type: !41)
!2330 = !DILocalVariable(name: "xShouldDelay", scope: !2319, file: !3, line: 825, type: !41)
!2331 = !DILocalVariable(name: "xConstTickCount", scope: !2332, file: !3, line: 835, type: !2324)
!2332 = distinct !DILexicalBlock(scope: !2319, file: !3, line: 832, column: 3)
!2333 = !DILocation(line: 0, scope: !2319)
!2334 = !DILocation(line: 827, column: 3, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2319, file: !3, line: 827, column: 3)
!2336 = !DILocation(line: 827, column: 3, scope: !2319)
!2337 = !DILocation(line: 827, column: 3, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2335, file: !3, line: 827, column: 3)
!2339 = !DILocation(line: 828, column: 3, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2319, file: !3, line: 828, column: 3)
!2341 = !DILocation(line: 828, column: 3, scope: !2319)
!2342 = !DILocation(line: 828, column: 3, scope: !2343)
!2343 = distinct !DILexicalBlock(scope: !2340, file: !3, line: 828, column: 3)
!2344 = !DILocation(line: 829, column: 3, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2319, file: !3, line: 829, column: 3)
!2346 = !DILocation(line: 829, column: 3, scope: !2319)
!2347 = !DILocation(line: 829, column: 3, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2345, file: !3, line: 829, column: 3)
!2349 = !DILocation(line: 831, column: 3, scope: !2319)
!2350 = !DILocation(line: 835, column: 39, scope: !2332)
!2351 = !DILocation(line: 0, scope: !2332)
!2352 = !DILocation(line: 838, column: 18, scope: !2332)
!2353 = !DILocation(line: 838, column: 38, scope: !2332)
!2354 = !DILocation(line: 840, column: 24, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2332, file: !3, line: 840, column: 8)
!2356 = !DILocation(line: 0, scope: !2355)
!2357 = !DILocation(line: 840, column: 8, scope: !2332)
!2358 = !DILocation(line: 847, column: 47, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2360, file: !3, line: 847, column: 9)
!2360 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 841, column: 4)
!2361 = !DILocation(line: 861, column: 47, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 861, column: 9)
!2363 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 857, column: 4)
!2364 = !DILocation(line: 872, column: 24, scope: !2332)
!2365 = !DILocation(line: 874, column: 8, scope: !2332)
!2366 = !DILocation(line: 880, column: 26, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2368, file: !3, line: 880, column: 9)
!2368 = distinct !DILexicalBlock(scope: !2369, file: !3, line: 875, column: 4)
!2369 = distinct !DILexicalBlock(scope: !2332, file: !3, line: 874, column: 8)
!2370 = !DILocation(line: 880, column: 40, scope: !2367)
!2371 = !DILocation(line: 880, column: 9, scope: !2367)
!2372 = !DILocation(line: 880, column: 61, scope: !2367)
!2373 = !DILocation(line: 880, column: 9, scope: !2368)
!2374 = !DILocation(line: 885, column: 6, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2367, file: !3, line: 881, column: 5)
!2376 = !DILocation(line: 886, column: 5, scope: !2375)
!2377 = !DILocation(line: 892, column: 5, scope: !2368)
!2378 = !DILocation(line: 893, column: 4, scope: !2368)
!2379 = !DILocation(line: 899, column: 21, scope: !2319)
!2380 = !DILocation(line: 903, column: 23, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2319, file: !3, line: 903, column: 7)
!2382 = !DILocation(line: 903, column: 7, scope: !2319)
!2383 = !DILocation(line: 905, column: 4, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 905, column: 4)
!2385 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 904, column: 3)
!2386 = !{i64 2148468795}
!2387 = !{i64 2148468835}
!2388 = !DILocation(line: 906, column: 3, scope: !2385)
!2389 = !DILocation(line: 911, column: 2, scope: !2319)
!2390 = distinct !DISubprogram(name: "vTaskSuspendAll", scope: !3, file: !3, line: 1628, type: !110, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2013)
!2391 = !DILocation(line: 1634, column: 2, scope: !2390)
!2392 = !DILocation(line: 1635, column: 1, scope: !2390)
!2393 = distinct !DISubprogram(name: "prvAddCurrentTaskToDelayedList", scope: !3, file: !3, line: 2991, type: !2394, scopeLine: 2992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2396)
!2394 = !DISubroutineType(types: !2395)
!2395 = !{null, !2324}
!2396 = !{!2397}
!2397 = !DILocalVariable(name: "xTimeToWake", arg: 1, scope: !2393, file: !3, line: 2991, type: !2324)
!2398 = !DILocation(line: 0, scope: !2393)
!2399 = !DILocation(line: 2994, column: 2, scope: !2393)
!2400 = !DILocation(line: 2996, column: 20, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2393, file: !3, line: 2996, column: 6)
!2402 = !DILocation(line: 2996, column: 18, scope: !2401)
!2403 = !DILocation(line: 2996, column: 6, scope: !2393)
!2404 = !DILocation(line: 2999, column: 16, scope: !2405)
!2405 = distinct !DILexicalBlock(scope: !2401, file: !3, line: 2997, column: 2)
!2406 = !DILocation(line: 2999, column: 46, scope: !2405)
!2407 = !DILocation(line: 2999, column: 60, scope: !2405)
!2408 = !DILocation(line: 2999, column: 3, scope: !2405)
!2409 = !DILocation(line: 3000, column: 2, scope: !2405)
!2410 = !DILocation(line: 3004, column: 16, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2401, file: !3, line: 3002, column: 2)
!2412 = !DILocation(line: 3004, column: 38, scope: !2411)
!2413 = !DILocation(line: 3004, column: 52, scope: !2411)
!2414 = !DILocation(line: 3004, column: 3, scope: !2411)
!2415 = !DILocation(line: 3009, column: 21, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2411, file: !3, line: 3009, column: 7)
!2417 = !DILocation(line: 3009, column: 19, scope: !2416)
!2418 = !DILocation(line: 3009, column: 7, scope: !2411)
!2419 = !DILocation(line: 3011, column: 25, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2416, file: !3, line: 3010, column: 3)
!2421 = !DILocation(line: 3012, column: 3, scope: !2420)
!2422 = !DILocation(line: 3018, column: 1, scope: !2393)
!2423 = distinct !DISubprogram(name: "xTaskResumeAll", scope: !3, file: !3, line: 1666, type: !2424, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2426)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!41}
!2426 = !{!2427, !2428}
!2427 = !DILocalVariable(name: "pxTCB", scope: !2423, file: !3, line: 1668, type: !45)
!2428 = !DILocalVariable(name: "xAlreadyYielded", scope: !2423, file: !3, line: 1669, type: !41)
!2429 = !DILocation(line: 0, scope: !2423)
!2430 = !DILocation(line: 1673, column: 2, scope: !2431)
!2431 = distinct !DILexicalBlock(scope: !2423, file: !3, line: 1673, column: 2)
!2432 = !DILocation(line: 1673, column: 2, scope: !2423)
!2433 = !DILocation(line: 1673, column: 2, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2431, file: !3, line: 1673, column: 2)
!2435 = !DILocation(line: 1680, column: 2, scope: !2423)
!2436 = !DILocation(line: 1682, column: 3, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2423, file: !3, line: 1681, column: 2)
!2438 = !DILocation(line: 1684, column: 7, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2437, file: !3, line: 1684, column: 7)
!2440 = !DILocation(line: 1684, column: 28, scope: !2439)
!2441 = !DILocation(line: 1684, column: 7, scope: !2437)
!2442 = !DILocation(line: 1686, column: 8, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2444, file: !3, line: 1686, column: 8)
!2444 = distinct !DILexicalBlock(scope: !2439, file: !3, line: 1685, column: 3)
!2445 = !DILocation(line: 1686, column: 31, scope: !2443)
!2446 = !DILocation(line: 1686, column: 8, scope: !2444)
!2447 = !DILocation(line: 1690, column: 12, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2443, file: !3, line: 1687, column: 4)
!2449 = !DILocation(line: 1690, column: 5, scope: !2448)
!2450 = !DILocation(line: 1692, column: 26, scope: !2451)
!2451 = distinct !DILexicalBlock(scope: !2448, file: !3, line: 1691, column: 5)
!2452 = !DILocation(line: 1693, column: 39, scope: !2451)
!2453 = !DILocation(line: 1693, column: 15, scope: !2451)
!2454 = !DILocation(line: 1694, column: 39, scope: !2451)
!2455 = !DILocation(line: 1694, column: 15, scope: !2451)
!2456 = !DILocation(line: 1695, column: 6, scope: !2451)
!2457 = !DILocation(line: 1699, column: 17, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2451, file: !3, line: 1699, column: 10)
!2459 = !DILocation(line: 1699, column: 31, scope: !2458)
!2460 = !DILocation(line: 1699, column: 45, scope: !2458)
!2461 = !DILocation(line: 1699, column: 28, scope: !2458)
!2462 = !DILocation(line: 1699, column: 10, scope: !2451)
!2463 = !DILocation(line: 1701, column: 21, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2458, file: !3, line: 1700, column: 6)
!2465 = !DILocation(line: 1702, column: 6, scope: !2464)
!2466 = distinct !{!2466, !2449, !2467}
!2467 = !DILocation(line: 1707, column: 5, scope: !2448)
!2468 = !DILocation(line: 1713, column: 9, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2448, file: !3, line: 1713, column: 9)
!2470 = !DILocation(line: 1713, column: 23, scope: !2469)
!2471 = !DILocation(line: 1713, column: 9, scope: !2448)
!2472 = !DILocation(line: 1715, column: 13, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 1714, column: 5)
!2474 = !DILocation(line: 1715, column: 27, scope: !2473)
!2475 = !DILocation(line: 1715, column: 6, scope: !2473)
!2476 = !DILocation(line: 1717, column: 11, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2478, file: !3, line: 1717, column: 11)
!2478 = distinct !DILexicalBlock(scope: !2473, file: !3, line: 1716, column: 6)
!2479 = !DILocation(line: 1717, column: 32, scope: !2477)
!2480 = !DILocation(line: 1717, column: 11, scope: !2478)
!2481 = !DILocation(line: 1719, column: 22, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2477, file: !3, line: 1718, column: 7)
!2483 = !DILocation(line: 1720, column: 7, scope: !2482)
!2484 = !DILocation(line: 1725, column: 7, scope: !2478)
!2485 = distinct !{!2485, !2475, !2486}
!2486 = !DILocation(line: 1726, column: 6, scope: !2473)
!2487 = !DILocation(line: 1733, column: 9, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2448, file: !3, line: 1733, column: 9)
!2489 = !DILocation(line: 1733, column: 23, scope: !2488)
!2490 = !DILocation(line: 1733, column: 9, scope: !2448)
!2491 = !DILocation(line: 1740, column: 6, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2493, file: !3, line: 1740, column: 6)
!2493 = distinct !DILexicalBlock(scope: !2488, file: !3, line: 1734, column: 5)
!2494 = !{i64 2148478093}
!2495 = !{i64 2148478133}
!2496 = !DILocation(line: 1741, column: 5, scope: !2493)
!2497 = !DILocation(line: 1753, column: 2, scope: !2423)
!2498 = !DILocation(line: 1755, column: 2, scope: !2423)
!2499 = distinct !DISubprogram(name: "xTaskIncrementTick", scope: !3, file: !3, line: 1934, type: !2424, scopeLine: 1935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2500)
!2500 = !{!2501, !2502, !2503, !2504, !2508}
!2501 = !DILocalVariable(name: "pxTCB", scope: !2499, file: !3, line: 1936, type: !45)
!2502 = !DILocalVariable(name: "xItemValue", scope: !2499, file: !3, line: 1937, type: !59)
!2503 = !DILocalVariable(name: "xSwitchRequired", scope: !2499, file: !3, line: 1938, type: !41)
!2504 = !DILocalVariable(name: "xConstTickCount", scope: !2505, file: !3, line: 1953, type: !2324)
!2505 = distinct !DILexicalBlock(scope: !2506, file: !3, line: 1950, column: 3)
!2506 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 1945, column: 2)
!2507 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 1944, column: 6)
!2508 = !DILocalVariable(name: "pxTemp", scope: !2509, file: !3, line: 1957, type: !81)
!2509 = distinct !DILexicalBlock(scope: !2510, file: !3, line: 1957, column: 5)
!2510 = distinct !DILexicalBlock(scope: !2511, file: !3, line: 1956, column: 4)
!2511 = distinct !DILexicalBlock(scope: !2505, file: !3, line: 1955, column: 8)
!2512 = !DILocation(line: 0, scope: !2499)
!2513 = !DILocation(line: 1944, column: 6, scope: !2507)
!2514 = !DILocation(line: 1944, column: 27, scope: !2507)
!2515 = !DILocation(line: 1944, column: 6, scope: !2499)
!2516 = !DILocation(line: 1948, column: 3, scope: !2506)
!2517 = !DILocation(line: 1953, column: 39, scope: !2505)
!2518 = !DILocation(line: 0, scope: !2505)
!2519 = !DILocation(line: 1955, column: 24, scope: !2511)
!2520 = !DILocation(line: 1955, column: 8, scope: !2505)
!2521 = !DILocation(line: 1957, column: 5, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2509, file: !3, line: 1957, column: 5)
!2523 = !DILocation(line: 1957, column: 5, scope: !2509)
!2524 = !DILocation(line: 1957, column: 5, scope: !2525)
!2525 = distinct !DILexicalBlock(scope: !2522, file: !3, line: 1957, column: 5)
!2526 = !DILocation(line: 0, scope: !2509)
!2527 = !DILocation(line: 1958, column: 4, scope: !2510)
!2528 = !DILocation(line: 1968, column: 27, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2505, file: !3, line: 1968, column: 8)
!2530 = !DILocation(line: 1968, column: 24, scope: !2529)
!2531 = !DILocation(line: 1968, column: 8, scope: !2505)
!2532 = !DILocation(line: 1972, column: 10, scope: !2533)
!2533 = distinct !DILexicalBlock(scope: !2534, file: !3, line: 1972, column: 10)
!2534 = distinct !DILexicalBlock(scope: !2535, file: !3, line: 1971, column: 5)
!2535 = distinct !DILexicalBlock(scope: !2536, file: !3, line: 1970, column: 5)
!2536 = distinct !DILexicalBlock(scope: !2537, file: !3, line: 1970, column: 5)
!2537 = distinct !DILexicalBlock(scope: !2529, file: !3, line: 1969, column: 4)
!2538 = !DILocation(line: 1972, column: 10, scope: !2534)
!2539 = !DILocation(line: 1988, column: 27, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2533, file: !3, line: 1983, column: 6)
!2541 = !DILocation(line: 1989, column: 20, scope: !2540)
!2542 = !DILocation(line: 1991, column: 27, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2540, file: !3, line: 1991, column: 11)
!2544 = !DILocation(line: 1991, column: 11, scope: !2540)
!2545 = !DILocation(line: 2007, column: 16, scope: !2540)
!2546 = !DILocation(line: 2011, column: 11, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2540, file: !3, line: 2011, column: 11)
!2548 = !DILocation(line: 2011, column: 65, scope: !2547)
!2549 = !DILocation(line: 2011, column: 11, scope: !2540)
!2550 = !DILocation(line: 2013, column: 17, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2547, file: !3, line: 2012, column: 7)
!2552 = !DILocation(line: 2014, column: 7, scope: !2551)
!2553 = !DILocation(line: 2022, column: 7, scope: !2540)
!2554 = !DILocation(line: 2032, column: 19, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2556, file: !3, line: 2032, column: 12)
!2556 = distinct !DILexicalBlock(scope: !2540, file: !3, line: 2027, column: 7)
!2557 = !DILocation(line: 2032, column: 33, scope: !2555)
!2558 = !DILocation(line: 2032, column: 47, scope: !2555)
!2559 = !DILocation(line: 2032, column: 30, scope: !2555)
!2560 = !DILocation(line: 2032, column: 12, scope: !2556)
!2561 = distinct !{!2561, !2562, !2563}
!2562 = !DILocation(line: 1970, column: 5, scope: !2536)
!2563 = !DILocation(line: 2043, column: 5, scope: !2536)
!2564 = !DILocation(line: 0, scope: !2533)
!2565 = !DILocation(line: 2052, column: 8, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2567, file: !3, line: 2052, column: 8)
!2567 = distinct !DILexicalBlock(scope: !2506, file: !3, line: 2051, column: 3)
!2568 = !DILocation(line: 1938, column: 12, scope: !2499)
!2569 = !DILocation(line: 2052, column: 86, scope: !2566)
!2570 = !DILocation(line: 2052, column: 8, scope: !2567)
!2571 = !DILocation(line: 2080, column: 3, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 2079, column: 2)
!2573 = !DILocation(line: 2093, column: 7, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 2093, column: 7)
!2575 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 2092, column: 2)
!2576 = !DILocation(line: 2093, column: 21, scope: !2574)
!2577 = !DILocation(line: 2093, column: 7, scope: !2575)
!2578 = !DILocation(line: 2104, column: 2, scope: !2499)
!2579 = distinct !DISubprogram(name: "vTaskDelay", scope: !3, file: !3, line: 918, type: !2394, scopeLine: 919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2580)
!2580 = !{!2581, !2582, !2583}
!2581 = !DILocalVariable(name: "xTicksToDelay", arg: 1, scope: !2579, file: !3, line: 918, type: !2324)
!2582 = !DILocalVariable(name: "xTimeToWake", scope: !2579, file: !3, line: 920, type: !59)
!2583 = !DILocalVariable(name: "xAlreadyYielded", scope: !2579, file: !3, line: 921, type: !41)
!2584 = !DILocation(line: 0, scope: !2579)
!2585 = !DILocation(line: 925, column: 21, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2579, file: !3, line: 925, column: 7)
!2587 = !DILocation(line: 925, column: 7, scope: !2579)
!2588 = !DILocation(line: 927, column: 4, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2590, file: !3, line: 927, column: 4)
!2590 = distinct !DILexicalBlock(scope: !2586, file: !3, line: 926, column: 3)
!2591 = !DILocation(line: 927, column: 4, scope: !2590)
!2592 = !DILocation(line: 927, column: 4, scope: !2593)
!2593 = distinct !DILexicalBlock(scope: !2589, file: !3, line: 927, column: 4)
!2594 = !DILocation(line: 928, column: 4, scope: !2590)
!2595 = !DILocation(line: 942, column: 19, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !2590, file: !3, line: 929, column: 4)
!2597 = !DILocation(line: 942, column: 30, scope: !2596)
!2598 = !DILocation(line: 947, column: 26, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2596, file: !3, line: 947, column: 9)
!2600 = !DILocation(line: 947, column: 40, scope: !2599)
!2601 = !DILocation(line: 947, column: 9, scope: !2599)
!2602 = !DILocation(line: 947, column: 61, scope: !2599)
!2603 = !DILocation(line: 947, column: 9, scope: !2596)
!2604 = !DILocation(line: 952, column: 6, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2599, file: !3, line: 948, column: 5)
!2606 = !DILocation(line: 953, column: 5, scope: !2605)
!2607 = !DILocation(line: 958, column: 5, scope: !2596)
!2608 = !DILocation(line: 960, column: 22, scope: !2590)
!2609 = !DILocation(line: 961, column: 3, scope: !2590)
!2610 = !DILocation(line: 969, column: 7, scope: !2579)
!2611 = !DILocation(line: 971, column: 4, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2613, file: !3, line: 971, column: 4)
!2613 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 970, column: 3)
!2614 = distinct !DILexicalBlock(scope: !2579, file: !3, line: 969, column: 7)
!2615 = !{i64 2148469564}
!2616 = !{i64 2148469604}
!2617 = !DILocation(line: 972, column: 3, scope: !2613)
!2618 = !DILocation(line: 977, column: 2, scope: !2579)
!2619 = distinct !DISubprogram(name: "uxTaskPriorityGet", scope: !3, file: !3, line: 1054, type: !2620, scopeLine: 1055, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2622)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{!27, !40}
!2622 = !{!2623, !2624, !2625}
!2623 = !DILocalVariable(name: "xTask", arg: 1, scope: !2619, file: !3, line: 1054, type: !40)
!2624 = !DILocalVariable(name: "pxTCB", scope: !2619, file: !3, line: 1056, type: !45)
!2625 = !DILocalVariable(name: "uxReturn", scope: !2619, file: !3, line: 1057, type: !27)
!2626 = !DILocation(line: 0, scope: !2619)
!2627 = !DILocation(line: 1059, column: 3, scope: !2619)
!2628 = !DILocation(line: 1063, column: 12, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 1060, column: 3)
!2630 = !DILocation(line: 1064, column: 22, scope: !2629)
!2631 = !DILocation(line: 1066, column: 3, scope: !2619)
!2632 = !DILocation(line: 1068, column: 3, scope: !2619)
!2633 = distinct !DISubprogram(name: "uxTaskPriorityGetFromISR", scope: !3, file: !3, line: 1076, type: !2620, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2634)
!2634 = !{!2635, !2636, !2637, !2638}
!2635 = !DILocalVariable(name: "xTask", arg: 1, scope: !2633, file: !3, line: 1076, type: !40)
!2636 = !DILocalVariable(name: "pxTCB", scope: !2633, file: !3, line: 1078, type: !45)
!2637 = !DILocalVariable(name: "uxReturn", scope: !2633, file: !3, line: 1079, type: !27)
!2638 = !DILocalVariable(name: "uxSavedInterruptState", scope: !2633, file: !3, line: 1079, type: !27)
!2639 = !DILocation(line: 0, scope: !2633)
!2640 = !DILocation(line: 1097, column: 3, scope: !2633)
!2641 = !DILocation(line: 231, column: 2, scope: !2642, inlinedAt: !2648)
!2642 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !28, file: !28, line: 227, type: !2643, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2645)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{!38}
!2645 = !{!2646, !2647}
!2646 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !2642, file: !28, line: 229, type: !38)
!2647 = !DILocalVariable(name: "ulNewBASEPRI", scope: !2642, file: !28, line: 229, type: !38)
!2648 = distinct !DILocation(line: 1099, column: 27, scope: !2633)
!2649 = !{i64 806680, i64 806717, i64 806749, i64 806785, i64 806812}
!2650 = !DILocation(line: 0, scope: !2642, inlinedAt: !2648)
!2651 = !DILocation(line: 1103, column: 12, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2633, file: !3, line: 1100, column: 3)
!2653 = !DILocation(line: 1104, column: 22, scope: !2652)
!2654 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !2655, file: !28, line: 247, type: !38)
!2655 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !28, file: !28, line: 247, type: !2656, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2658)
!2656 = !DISubroutineType(types: !2657)
!2657 = !{null, !38}
!2658 = !{!2654}
!2659 = !DILocation(line: 0, scope: !2655, inlinedAt: !2660)
!2660 = distinct !DILocation(line: 1106, column: 3, scope: !2633)
!2661 = !DILocation(line: 249, column: 2, scope: !2655, inlinedAt: !2660)
!2662 = !{i64 807213}
!2663 = !DILocation(line: 1108, column: 3, scope: !2633)
!2664 = distinct !DISubprogram(name: "vTaskPrioritySet", scope: !3, file: !3, line: 1116, type: !2665, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2667)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{null, !40, !27}
!2667 = !{!2668, !2669, !2670, !2671, !2672, !2673}
!2668 = !DILocalVariable(name: "xTask", arg: 1, scope: !2664, file: !3, line: 1116, type: !40)
!2669 = !DILocalVariable(name: "uxNewPriority", arg: 2, scope: !2664, file: !3, line: 1116, type: !27)
!2670 = !DILocalVariable(name: "pxTCB", scope: !2664, file: !3, line: 1118, type: !45)
!2671 = !DILocalVariable(name: "uxCurrentBasePriority", scope: !2664, file: !3, line: 1119, type: !27)
!2672 = !DILocalVariable(name: "uxPriorityUsedOnEntry", scope: !2664, file: !3, line: 1119, type: !27)
!2673 = !DILocalVariable(name: "xYieldRequired", scope: !2664, file: !3, line: 1120, type: !41)
!2674 = !DILocation(line: 0, scope: !2664)
!2675 = !DILocation(line: 1122, column: 3, scope: !2676)
!2676 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 1122, column: 3)
!2677 = !DILocation(line: 1122, column: 3, scope: !2664)
!2678 = !DILocation(line: 1122, column: 3, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2676, file: !3, line: 1122, column: 3)
!2680 = !DILocation(line: 1125, column: 7, scope: !2664)
!2681 = !DILocation(line: 1134, column: 3, scope: !2664)
!2682 = !DILocation(line: 1138, column: 12, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 1135, column: 3)
!2684 = !DILocation(line: 1144, column: 36, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 1143, column: 4)
!2686 = !DILocation(line: 1152, column: 30, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2683, file: !3, line: 1152, column: 8)
!2688 = !DILocation(line: 1152, column: 8, scope: !2683)
!2689 = !DILocation(line: 1156, column: 23, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 1156, column: 9)
!2691 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 1153, column: 4)
!2692 = !DILocation(line: 0, scope: !2690)
!2693 = !DILocation(line: 1156, column: 9, scope: !2691)
!2694 = !DILocation(line: 1163, column: 28, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 1163, column: 11)
!2696 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 1159, column: 6)
!2697 = distinct !DILexicalBlock(scope: !2698, file: !3, line: 1158, column: 10)
!2698 = distinct !DILexicalBlock(scope: !2690, file: !3, line: 1157, column: 5)
!2699 = !DILocation(line: 1163, column: 42, scope: !2695)
!2700 = !DILocation(line: 1163, column: 25, scope: !2695)
!2701 = !DILocation(line: 1163, column: 11, scope: !2696)
!2702 = !DILocation(line: 1196, column: 36, scope: !2691)
!2703 = !DILocation(line: 1202, column: 32, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 1202, column: 10)
!2705 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 1199, column: 5)
!2706 = !DILocation(line: 1202, column: 10, scope: !2705)
!2707 = !DILocation(line: 1204, column: 25, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2704, file: !3, line: 1203, column: 6)
!2709 = !DILocation(line: 1205, column: 6, scope: !2708)
!2710 = !DILocation(line: 1212, column: 28, scope: !2705)
!2711 = !DILocation(line: 1222, column: 11, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 1222, column: 9)
!2713 = !DILocation(line: 1222, column: 102, scope: !2712)
!2714 = !DILocation(line: 1222, column: 9, scope: !2691)
!2715 = !DILocation(line: 1224, column: 6, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2712, file: !3, line: 1223, column: 5)
!2717 = !DILocation(line: 1225, column: 5, scope: !2716)
!2718 = !DILocation(line: 1235, column: 9, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 1235, column: 9)
!2720 = !DILocation(line: 1235, column: 9, scope: !2691)
!2721 = !DILocation(line: 1240, column: 10, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2723, file: !3, line: 1240, column: 10)
!2723 = distinct !DILexicalBlock(scope: !2719, file: !3, line: 1236, column: 5)
!2724 = !DILocation(line: 1240, column: 55, scope: !2722)
!2725 = !DILocation(line: 1240, column: 10, scope: !2723)
!2726 = !DILocation(line: 1245, column: 7, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2722, file: !3, line: 1241, column: 6)
!2728 = !DILocation(line: 1246, column: 6, scope: !2727)
!2729 = !DILocation(line: 1251, column: 6, scope: !2723)
!2730 = !DILocation(line: 1252, column: 5, scope: !2723)
!2731 = !DILocation(line: 1258, column: 9, scope: !2691)
!2732 = !DILocation(line: 1260, column: 6, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2734, file: !3, line: 1260, column: 6)
!2734 = distinct !DILexicalBlock(scope: !2735, file: !3, line: 1259, column: 5)
!2735 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 1258, column: 9)
!2736 = !{i64 2148471781}
!2737 = !{i64 2148471821}
!2738 = !DILocation(line: 1261, column: 5, scope: !2734)
!2739 = !DILocation(line: 1272, column: 3, scope: !2664)
!2740 = !DILocation(line: 1273, column: 2, scope: !2664)
!2741 = distinct !DISubprogram(name: "vTaskSuspend", scope: !3, file: !3, line: 1280, type: !2249, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2742)
!2742 = !{!2743, !2744}
!2743 = !DILocalVariable(name: "xTaskToSuspend", arg: 1, scope: !2741, file: !3, line: 1280, type: !40)
!2744 = !DILocalVariable(name: "pxTCB", scope: !2741, file: !3, line: 1282, type: !45)
!2745 = !DILocation(line: 0, scope: !2741)
!2746 = !DILocation(line: 1284, column: 3, scope: !2741)
!2747 = !DILocation(line: 1288, column: 12, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 1285, column: 3)
!2749 = !DILocation(line: 1294, column: 32, scope: !2750)
!2750 = distinct !DILexicalBlock(scope: !2748, file: !3, line: 1294, column: 8)
!2751 = !DILocation(line: 1294, column: 8, scope: !2750)
!2752 = !DILocation(line: 1294, column: 53, scope: !2750)
!2753 = !DILocation(line: 1294, column: 8, scope: !2748)
!2754 = !DILocation(line: 1296, column: 5, scope: !2755)
!2755 = distinct !DILexicalBlock(scope: !2756, file: !3, line: 1296, column: 5)
!2756 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 1296, column: 5)
!2757 = distinct !DILexicalBlock(scope: !2750, file: !3, line: 1295, column: 4)
!2758 = !DILocation(line: 1296, column: 5, scope: !2756)
!2759 = !DILocation(line: 1296, column: 5, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 1296, column: 5)
!2761 = !DILocation(line: 1304, column: 8, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2748, file: !3, line: 1304, column: 8)
!2763 = !DILocation(line: 1304, column: 62, scope: !2762)
!2764 = !DILocation(line: 1304, column: 8, scope: !2748)
!2765 = !DILocation(line: 1306, column: 14, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 1305, column: 4)
!2767 = !DILocation(line: 1307, column: 4, scope: !2766)
!2768 = !DILocation(line: 1313, column: 4, scope: !2748)
!2769 = !DILocation(line: 1315, column: 3, scope: !2741)
!2770 = !DILocation(line: 1317, column: 16, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2741, file: !3, line: 1317, column: 7)
!2772 = !DILocation(line: 1317, column: 13, scope: !2771)
!2773 = !DILocation(line: 0, scope: !2771)
!2774 = !DILocation(line: 1317, column: 7, scope: !2741)
!2775 = !DILocation(line: 1319, column: 8, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2771, file: !3, line: 1318, column: 3)
!2777 = !DILocation(line: 1322, column: 5, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2779, file: !3, line: 1322, column: 5)
!2779 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 1320, column: 4)
!2780 = distinct !DILexicalBlock(scope: !2776, file: !3, line: 1319, column: 8)
!2781 = !DILocation(line: 1322, column: 5, scope: !2779)
!2782 = !DILocation(line: 1322, column: 5, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2778, file: !3, line: 1322, column: 5)
!2784 = !DILocation(line: 1323, column: 5, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2779, file: !3, line: 1323, column: 5)
!2786 = !{i64 2148473230}
!2787 = !{i64 2148473270}
!2788 = !DILocation(line: 1324, column: 4, scope: !2779)
!2789 = !DILocation(line: 1330, column: 9, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2791, file: !3, line: 1330, column: 9)
!2791 = distinct !DILexicalBlock(scope: !2780, file: !3, line: 1326, column: 4)
!2792 = !DILocation(line: 1330, column: 59, scope: !2790)
!2793 = !DILocation(line: 1330, column: 56, scope: !2790)
!2794 = !DILocation(line: 1330, column: 9, scope: !2791)
!2795 = !DILocation(line: 1336, column: 19, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 1331, column: 5)
!2797 = !DILocation(line: 1337, column: 5, scope: !2796)
!2798 = !DILocation(line: 1340, column: 6, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2790, file: !3, line: 1339, column: 5)
!2800 = !DILocation(line: 1346, column: 8, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2771, file: !3, line: 1345, column: 3)
!2802 = !DILocation(line: 1351, column: 5, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2804, file: !3, line: 1347, column: 4)
!2804 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 1346, column: 8)
!2805 = !DILocation(line: 1353, column: 6, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 1352, column: 5)
!2807 = !DILocation(line: 1355, column: 5, scope: !2803)
!2808 = !DILocation(line: 1356, column: 4, scope: !2803)
!2809 = !DILocation(line: 1362, column: 2, scope: !2741)
!2810 = !DILocation(line: 2200, column: 6, scope: !116)
!2811 = !DILocation(line: 2200, column: 27, scope: !116)
!2812 = !DILocation(line: 2200, column: 6, scope: !109)
!2813 = !DILocation(line: 2204, column: 17, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !116, file: !3, line: 2201, column: 2)
!2815 = !DILocation(line: 2205, column: 2, scope: !2814)
!2816 = !DILocation(line: 2208, column: 17, scope: !115)
!2817 = !DILocation(line: 2239, column: 3, scope: !2818)
!2818 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 2239, column: 3)
!2819 = distinct !DILexicalBlock(scope: !115, file: !3, line: 2239, column: 3)
!2820 = !DILocation(line: 2239, column: 3, scope: !2819)
!2821 = !DILocation(line: 2239, column: 3, scope: !2822)
!2822 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 2239, column: 3)
!2823 = distinct !DILexicalBlock(scope: !2818, file: !3, line: 2239, column: 3)
!2824 = !DILocation(line: 2239, column: 3, scope: !2823)
!2825 = !DILocation(line: 2239, column: 3, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 2239, column: 3)
!2827 = !DILocation(line: 2240, column: 3, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 2240, column: 3)
!2829 = distinct !DILexicalBlock(scope: !115, file: !3, line: 2240, column: 3)
!2830 = !DILocation(line: 2240, column: 3, scope: !2829)
!2831 = !DILocation(line: 2240, column: 3, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2833, file: !3, line: 2240, column: 3)
!2833 = distinct !DILexicalBlock(scope: !2828, file: !3, line: 2240, column: 3)
!2834 = !DILocation(line: 2240, column: 3, scope: !2833)
!2835 = !DILocation(line: 2240, column: 3, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 2240, column: 3)
!2837 = !DILocation(line: 2244, column: 3, scope: !114)
!2838 = !DILocalVariable(name: "ulBitmap", arg: 1, scope: !2839, file: !28, line: 172, type: !38)
!2839 = distinct !DISubprogram(name: "ucPortCountLeadingZeros", scope: !28, file: !28, line: 172, type: !2840, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2842)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{!96, !38}
!2842 = !{!2838, !2843}
!2843 = !DILocalVariable(name: "ucReturn", scope: !2839, file: !28, line: 174, type: !96)
!2844 = !DILocation(line: 0, scope: !2839, inlinedAt: !2845)
!2845 = distinct !DILocation(line: 2244, column: 3, scope: !114)
!2846 = !DILocation(line: 176, column: 3, scope: !2839, inlinedAt: !2845)
!2847 = !{i64 804772}
!2848 = !DILocation(line: 0, scope: !114)
!2849 = !DILocation(line: 2244, column: 3, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !114, file: !3, line: 2244, column: 3)
!2851 = !DILocation(line: 2244, column: 3, scope: !2852)
!2852 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 2244, column: 3)
!2853 = !DILocation(line: 0, scope: !118)
!2854 = !DILocation(line: 2244, column: 3, scope: !118)
!2855 = !DILocation(line: 2244, column: 3, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !118, file: !3, line: 2244, column: 3)
!2857 = !DILocation(line: 2244, column: 3, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2856, file: !3, line: 2244, column: 3)
!2859 = !DILocation(line: 2255, column: 1, scope: !109)
!2860 = distinct !DISubprogram(name: "vTaskResume", scope: !3, file: !3, line: 1415, type: !2249, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2861)
!2861 = !{!2862, !2863}
!2862 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !2860, file: !3, line: 1415, type: !40)
!2863 = !DILocalVariable(name: "pxTCB", scope: !2860, file: !3, line: 1417, type: !2179)
!2864 = !DILocation(line: 0, scope: !2860)
!2865 = !DILocation(line: 1420, column: 3, scope: !2860)
!2866 = !DILocation(line: 1420, column: 3, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 1420, column: 3)
!2868 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 1420, column: 3)
!2869 = !DILocation(line: 1424, column: 25, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 1424, column: 7)
!2871 = !DILocation(line: 1417, column: 24, scope: !2860)
!2872 = !DILocation(line: 1424, column: 39, scope: !2870)
!2873 = !DILocation(line: 1424, column: 36, scope: !2870)
!2874 = !DILocation(line: 1424, column: 7, scope: !2860)
!2875 = !DILocation(line: 1426, column: 4, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2870, file: !3, line: 1425, column: 3)
!2877 = !DILocation(line: 1428, column: 9, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 1428, column: 9)
!2879 = distinct !DILexicalBlock(scope: !2876, file: !3, line: 1427, column: 4)
!2880 = !DILocation(line: 1428, column: 41, scope: !2878)
!2881 = !DILocation(line: 1428, column: 9, scope: !2879)
!2882 = !DILocation(line: 1434, column: 40, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 1429, column: 5)
!2884 = !DILocation(line: 1434, column: 15, scope: !2883)
!2885 = !DILocation(line: 1435, column: 6, scope: !2883)
!2886 = !DILocation(line: 1438, column: 17, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 1438, column: 10)
!2888 = !DILocation(line: 1438, column: 31, scope: !2887)
!2889 = !DILocation(line: 1438, column: 45, scope: !2887)
!2890 = !DILocation(line: 1438, column: 28, scope: !2887)
!2891 = !DILocation(line: 1438, column: 10, scope: !2883)
!2892 = !DILocation(line: 1443, column: 7, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 1443, column: 7)
!2894 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 1439, column: 6)
!2895 = !{i64 2148475133}
!2896 = !{i64 2148475173}
!2897 = !DILocation(line: 1444, column: 6, scope: !2894)
!2898 = !DILocation(line: 1455, column: 4, scope: !2876)
!2899 = !DILocation(line: 1456, column: 3, scope: !2876)
!2900 = !DILocation(line: 1461, column: 2, scope: !2860)
!2901 = distinct !DISubprogram(name: "prvTaskIsTaskSuspended", scope: !3, file: !3, line: 1369, type: !2902, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2905)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!41, !2904}
!2904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !40)
!2905 = !{!2906, !2907, !2908}
!2906 = !DILocalVariable(name: "xTask", arg: 1, scope: !2901, file: !3, line: 1369, type: !2904)
!2907 = !DILocalVariable(name: "xReturn", scope: !2901, file: !3, line: 1371, type: !41)
!2908 = !DILocalVariable(name: "pxTCB", scope: !2901, file: !3, line: 1372, type: !2909)
!2909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2910)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !46)
!2912 = !DILocation(line: 0, scope: !2901)
!2913 = !DILocation(line: 1378, column: 3, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 1378, column: 3)
!2915 = !DILocation(line: 1378, column: 3, scope: !2901)
!2916 = !DILocation(line: 1378, column: 3, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 1378, column: 3)
!2918 = !DILocation(line: 1381, column: 7, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 1381, column: 7)
!2920 = !DILocation(line: 1381, column: 7, scope: !2901)
!2921 = !DILocation(line: 1384, column: 8, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2923, file: !3, line: 1384, column: 8)
!2923 = distinct !DILexicalBlock(scope: !2919, file: !3, line: 1382, column: 3)
!2924 = !DILocation(line: 1384, column: 8, scope: !2923)
!2925 = !DILocation(line: 1407, column: 3, scope: !2901)
!2926 = distinct !DISubprogram(name: "xTaskResumeFromISR", scope: !3, file: !3, line: 1469, type: !2927, scopeLine: 1470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2929)
!2927 = !DISubroutineType(types: !2928)
!2928 = !{!41, !40}
!2929 = !{!2930, !2931, !2932, !2933}
!2930 = !DILocalVariable(name: "xTaskToResume", arg: 1, scope: !2926, file: !3, line: 1469, type: !40)
!2931 = !DILocalVariable(name: "xYieldRequired", scope: !2926, file: !3, line: 1471, type: !41)
!2932 = !DILocalVariable(name: "pxTCB", scope: !2926, file: !3, line: 1472, type: !2179)
!2933 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !2926, file: !3, line: 1473, type: !27)
!2934 = !DILocation(line: 0, scope: !2926)
!2935 = !DILocation(line: 1475, column: 3, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 1475, column: 3)
!2937 = !DILocation(line: 1475, column: 3, scope: !2926)
!2938 = !DILocation(line: 1475, column: 3, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2936, file: !3, line: 1475, column: 3)
!2940 = !DILocation(line: 1493, column: 3, scope: !2926)
!2941 = !DILocation(line: 231, column: 2, scope: !2642, inlinedAt: !2942)
!2942 = distinct !DILocation(line: 1495, column: 28, scope: !2926)
!2943 = !DILocation(line: 0, scope: !2642, inlinedAt: !2942)
!2944 = !DILocation(line: 1497, column: 8, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 1497, column: 8)
!2946 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 1496, column: 3)
!2947 = !DILocation(line: 1497, column: 40, scope: !2945)
!2948 = !DILocation(line: 1497, column: 8, scope: !2946)
!2949 = !DILocation(line: 1502, column: 9, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2951, file: !3, line: 1502, column: 9)
!2951 = distinct !DILexicalBlock(scope: !2945, file: !3, line: 1498, column: 4)
!2952 = !DILocation(line: 1502, column: 30, scope: !2950)
!2953 = !DILocation(line: 1502, column: 9, scope: !2951)
!2954 = !DILocation(line: 1506, column: 17, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2956, file: !3, line: 1506, column: 10)
!2956 = distinct !DILexicalBlock(scope: !2950, file: !3, line: 1503, column: 5)
!2957 = !DILocation(line: 1506, column: 31, scope: !2955)
!2958 = !DILocation(line: 1506, column: 45, scope: !2955)
!2959 = !DILocation(line: 1506, column: 28, scope: !2955)
!2960 = !DILocation(line: 1506, column: 10, scope: !2956)
!2961 = !DILocation(line: 1515, column: 40, scope: !2956)
!2962 = !DILocation(line: 1515, column: 15, scope: !2956)
!2963 = !DILocation(line: 1516, column: 6, scope: !2956)
!2964 = !DILocation(line: 1517, column: 5, scope: !2956)
!2965 = !DILocation(line: 1523, column: 56, scope: !2966)
!2966 = distinct !DILexicalBlock(scope: !2950, file: !3, line: 1519, column: 5)
!2967 = !DILocation(line: 1523, column: 6, scope: !2966)
!2968 = !DILocation(line: 0, scope: !2655, inlinedAt: !2969)
!2969 = distinct !DILocation(line: 1531, column: 3, scope: !2926)
!2970 = !DILocation(line: 249, column: 2, scope: !2655, inlinedAt: !2969)
!2971 = !DILocation(line: 1533, column: 3, scope: !2926)
!2972 = distinct !DISubprogram(name: "vTaskStartScheduler", scope: !3, file: !3, line: 1539, type: !110, scopeLine: 1540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2973)
!2973 = !{!2974}
!2974 = !DILocalVariable(name: "xReturn", scope: !2972, file: !3, line: 1541, type: !41)
!2975 = !DILocation(line: 1553, column: 13, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 1551, column: 2)
!2977 = !DILocation(line: 0, scope: !2972)
!2978 = !DILocation(line: 1559, column: 15, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2980, file: !3, line: 1559, column: 7)
!2980 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 1558, column: 2)
!2981 = !DILocation(line: 1559, column: 7, scope: !2980)
!2982 = !DILocation(line: 1561, column: 14, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 1560, column: 3)
!2984 = !DILocation(line: 1562, column: 3, scope: !2983)
!2985 = !DILocation(line: 1570, column: 6, scope: !2972)
!2986 = !DILocation(line: 215, column: 2, scope: !2987, inlinedAt: !2990)
!2987 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !28, file: !28, line: 211, type: !110, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2988)
!2988 = !{!2989}
!2989 = !DILocalVariable(name: "ulNewBASEPRI", scope: !2987, file: !28, line: 213, type: !38)
!2990 = distinct !DILocation(line: 1577, column: 3, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 1571, column: 2)
!2992 = distinct !DILexicalBlock(scope: !2972, file: !3, line: 1570, column: 6)
!2993 = !{i64 806292, i64 806325, i64 806361, i64 806388}
!2994 = !DILocation(line: 0, scope: !2987, inlinedAt: !2990)
!2995 = !DILocation(line: 1587, column: 21, scope: !2991)
!2996 = !DILocation(line: 1588, column: 14, scope: !2991)
!2997 = !DILocation(line: 1597, column: 7, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 1597, column: 7)
!2999 = !DILocation(line: 1606, column: 2, scope: !2991)
!3000 = !DILocation(line: 1612, column: 3, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 1612, column: 3)
!3002 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 1612, column: 3)
!3003 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 1608, column: 2)
!3004 = !DILocation(line: 1614, column: 1, scope: !2972)
!3005 = distinct !DISubprogram(name: "prvIdleTask", scope: !3, file: !3, line: 2653, type: !1337, scopeLine: 2654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3006)
!3006 = !{!3007}
!3007 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !3005, file: !3, line: 2653, type: !30)
!3008 = !DILocation(line: 0, scope: !3005)
!3009 = !DILocation(line: 2658, column: 2, scope: !3005)
!3010 = !DILocation(line: 2661, column: 3, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 2659, column: 2)
!3012 = distinct !DILexicalBlock(scope: !3013, file: !3, line: 2658, column: 2)
!3013 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 2658, column: 2)
!3014 = !DILocation(line: 2684, column: 8, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 2684, column: 8)
!3016 = distinct !DILexicalBlock(scope: !3011, file: !3, line: 2674, column: 3)
!3017 = !DILocation(line: 2684, column: 78, scope: !3015)
!3018 = !DILocation(line: 2684, column: 8, scope: !3016)
!3019 = distinct !{!3019, !3020, !3021}
!3020 = !DILocation(line: 2658, column: 2, scope: !3013)
!3021 = !DILocation(line: 2754, column: 2, scope: !3013)
!3022 = !DILocation(line: 2686, column: 5, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3024, file: !3, line: 2686, column: 5)
!3024 = distinct !DILexicalBlock(scope: !3015, file: !3, line: 2685, column: 4)
!3025 = !{i64 2148488363}
!3026 = !{i64 2148488403}
!3027 = !DILocation(line: 2687, column: 4, scope: !3024)
!3028 = distinct !DISubprogram(name: "prvCheckTasksWaitingTermination", scope: !3, file: !3, line: 2950, type: !110, scopeLine: 2951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3029)
!3029 = !{!3030, !3032}
!3030 = !DILocalVariable(name: "xListIsEmpty", scope: !3031, file: !3, line: 2954, type: !41)
!3031 = distinct !DILexicalBlock(scope: !3028, file: !3, line: 2953, column: 2)
!3032 = !DILocalVariable(name: "pxTCB", scope: !3033, file: !3, line: 2968, type: !45)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 2967, column: 4)
!3034 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 2966, column: 8)
!3035 = distinct !DILexicalBlock(scope: !3031, file: !3, line: 2959, column: 3)
!3036 = !DILocation(line: 2958, column: 10, scope: !3031)
!3037 = !DILocation(line: 2958, column: 25, scope: !3031)
!3038 = !DILocation(line: 2958, column: 3, scope: !3031)
!3039 = !DILocation(line: 2960, column: 4, scope: !3035)
!3040 = !DILocation(line: 2962, column: 20, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 2961, column: 4)
!3042 = !DILocation(line: 0, scope: !3031)
!3043 = !DILocation(line: 2964, column: 13, scope: !3035)
!3044 = !DILocation(line: 2966, column: 8, scope: !3035)
!3045 = !DILocation(line: 2970, column: 5, scope: !3033)
!3046 = !DILocation(line: 2972, column: 26, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 2971, column: 5)
!3048 = !DILocation(line: 0, scope: !3033)
!3049 = !DILocation(line: 2973, column: 39, scope: !3047)
!3050 = !DILocation(line: 2973, column: 15, scope: !3047)
!3051 = !DILocation(line: 2974, column: 6, scope: !3047)
!3052 = !DILocation(line: 2975, column: 6, scope: !3047)
!3053 = !DILocation(line: 2977, column: 5, scope: !3033)
!3054 = !DILocation(line: 2979, column: 5, scope: !3033)
!3055 = !DILocation(line: 2980, column: 4, scope: !3033)
!3056 = distinct !{!3056, !3038, !3057}
!3057 = !DILocation(line: 2985, column: 3, scope: !3031)
!3058 = !DILocation(line: 2988, column: 1, scope: !3028)
!3059 = distinct !DISubprogram(name: "prvDeleteTCB", scope: !3, file: !3, line: 3231, type: !3060, scopeLine: 3232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3062)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{null, !45}
!3062 = !{!3063}
!3063 = !DILocalVariable(name: "pxTCB", arg: 1, scope: !3059, file: !3, line: 3231, type: !45)
!3064 = !DILocation(line: 0, scope: !3059)
!3065 = !DILocation(line: 3257, column: 4, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3059, file: !3, line: 3256, column: 3)
!3067 = !DILocation(line: 3261, column: 14, scope: !3059)
!3068 = !DILocation(line: 3261, column: 3, scope: !3059)
!3069 = !DILocation(line: 3262, column: 2, scope: !3059)
!3070 = distinct !DISubprogram(name: "vTaskEndScheduler", scope: !3, file: !3, line: 1617, type: !110, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2013)
!3071 = !DILocation(line: 215, column: 2, scope: !2987, inlinedAt: !3072)
!3072 = distinct !DILocation(line: 1622, column: 2, scope: !3070)
!3073 = !DILocation(line: 0, scope: !2987, inlinedAt: !3072)
!3074 = !DILocation(line: 1623, column: 20, scope: !3070)
!3075 = !DILocation(line: 1624, column: 2, scope: !3070)
!3076 = !DILocation(line: 1625, column: 1, scope: !3070)
!3077 = distinct !DISubprogram(name: "xTaskGetTickCount", scope: !3, file: !3, line: 1759, type: !3078, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3080)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{!59}
!3080 = !{!3081}
!3081 = !DILocalVariable(name: "xTicks", scope: !3077, file: !3, line: 1761, type: !59)
!3082 = !DILocation(line: 1766, column: 12, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3077, file: !3, line: 1765, column: 2)
!3084 = !DILocation(line: 0, scope: !3077)
!3085 = !DILocation(line: 1770, column: 2, scope: !3077)
!3086 = distinct !DISubprogram(name: "xTaskGetTickCountFromISR", scope: !3, file: !3, line: 1774, type: !3078, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3087)
!3087 = !{!3088, !3089}
!3088 = !DILocalVariable(name: "xReturn", scope: !3086, file: !3, line: 1776, type: !59)
!3089 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !3086, file: !3, line: 1777, type: !27)
!3090 = !DILocation(line: 1793, column: 2, scope: !3086)
!3091 = !DILocation(line: 0, scope: !3086)
!3092 = !DILocation(line: 1797, column: 13, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 1796, column: 2)
!3094 = !DILocation(line: 1801, column: 2, scope: !3086)
!3095 = distinct !DISubprogram(name: "uxTaskGetNumberOfTasks", scope: !3, file: !3, line: 1805, type: !3096, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2013)
!3096 = !DISubroutineType(types: !3097)
!3097 = !{!27}
!3098 = !DILocation(line: 1809, column: 9, scope: !3095)
!3099 = !DILocation(line: 1809, column: 2, scope: !3095)
!3100 = distinct !DISubprogram(name: "pcTaskGetTaskName", scope: !3, file: !3, line: 1815, type: !3101, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3103)
!3101 = !DISubroutineType(types: !3102)
!3102 = !{!701, !40}
!3103 = !{!3104, !3105}
!3104 = !DILocalVariable(name: "xTaskToQuery", arg: 1, scope: !3100, file: !3, line: 1815, type: !40)
!3105 = !DILocalVariable(name: "pxTCB", scope: !3100, file: !3, line: 1817, type: !45)
!3106 = !DILocation(line: 0, scope: !3100)
!3107 = !DILocation(line: 1820, column: 11, scope: !3100)
!3108 = !DILocation(line: 1821, column: 3, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 1821, column: 3)
!3110 = !DILocation(line: 1821, column: 3, scope: !3100)
!3111 = !DILocation(line: 1821, column: 3, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3109, file: !3, line: 1821, column: 3)
!3113 = !DILocation(line: 1822, column: 13, scope: !3100)
!3114 = !DILocation(line: 1822, column: 3, scope: !3100)
!3115 = distinct !DISubprogram(name: "uxTaskGetSystemState", scope: !3, file: !3, line: 1830, type: !3116, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3135)
!3116 = !DISubroutineType(types: !3117)
!3117 = !{!27, !3118, !3132, !3133}
!3118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3119)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_typedef, name: "TaskStatus_t", file: !12, line: 176, baseType: !3121)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTASK_STATUS", file: !12, line: 166, size: 256, elements: !3122)
!3122 = !{!3123, !3124, !3125, !3126, !3128, !3129, !3130, !3131}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "xHandle", scope: !3121, file: !12, line: 168, baseType: !40, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "pcTaskName", scope: !3121, file: !12, line: 169, baseType: !104, size: 32, offset: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "xTaskNumber", scope: !3121, file: !12, line: 170, baseType: !27, size: 32, offset: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "eCurrentState", scope: !3121, file: !12, line: 171, baseType: !3127, size: 32, offset: 96)
!3127 = !DIDerivedType(tag: DW_TAG_typedef, name: "eTaskState", file: !12, line: 119, baseType: !11)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "uxCurrentPriority", scope: !3121, file: !12, line: 172, baseType: !27, size: 32, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "uxBasePriority", scope: !3121, file: !12, line: 173, baseType: !27, size: 32, offset: 160)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "ulRunTimeCounter", scope: !3121, file: !12, line: 174, baseType: !38, size: 32, offset: 192)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "usStackHighWaterMark", scope: !3121, file: !12, line: 175, baseType: !31, size: 16, offset: 224)
!3132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!3133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3134)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 32)
!3135 = !{!3136, !3137, !3138, !3139, !3140}
!3136 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !3115, file: !3, line: 1830, type: !3118)
!3137 = !DILocalVariable(name: "uxArraySize", arg: 2, scope: !3115, file: !3, line: 1830, type: !3132)
!3138 = !DILocalVariable(name: "pulTotalRunTime", arg: 3, scope: !3115, file: !3, line: 1830, type: !3133)
!3139 = !DILocalVariable(name: "uxTask", scope: !3115, file: !3, line: 1832, type: !27)
!3140 = !DILocalVariable(name: "uxQueue", scope: !3115, file: !3, line: 1832, type: !27)
!3141 = !DILocation(line: 0, scope: !3115)
!3142 = !DILocation(line: 1834, column: 3, scope: !3115)
!3143 = !DILocation(line: 1837, column: 23, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 1837, column: 8)
!3145 = distinct !DILexicalBlock(scope: !3115, file: !3, line: 1835, column: 3)
!3146 = !DILocation(line: 1837, column: 20, scope: !3144)
!3147 = !DILocation(line: 1837, column: 8, scope: !3145)
!3148 = !DILocation(line: 1843, column: 13, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1842, column: 5)
!3150 = distinct !DILexicalBlock(scope: !3144, file: !3, line: 1838, column: 4)
!3151 = !DILocation(line: 1844, column: 48, scope: !3149)
!3152 = !DILocation(line: 1844, column: 82, scope: !3149)
!3153 = !DILocation(line: 1844, column: 16, scope: !3149)
!3154 = !DILocation(line: 1844, column: 13, scope: !3149)
!3155 = !DILocation(line: 1846, column: 22, scope: !3150)
!3156 = !DILocation(line: 1846, column: 5, scope: !3149)
!3157 = distinct !{!3157, !3158, !3159}
!3158 = !DILocation(line: 1841, column: 5, scope: !3150)
!3159 = !DILocation(line: 1846, column: 57, scope: !3150)
!3160 = !DILocation(line: 1850, column: 47, scope: !3150)
!3161 = !DILocation(line: 1850, column: 91, scope: !3150)
!3162 = !DILocation(line: 1850, column: 15, scope: !3150)
!3163 = !DILocation(line: 1850, column: 12, scope: !3150)
!3164 = !DILocation(line: 1851, column: 47, scope: !3150)
!3165 = !DILocation(line: 1851, column: 91, scope: !3150)
!3166 = !DILocation(line: 1851, column: 15, scope: !3150)
!3167 = !DILocation(line: 1851, column: 12, scope: !3150)
!3168 = !DILocation(line: 1857, column: 48, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1854, column: 5)
!3170 = !DILocation(line: 1857, column: 16, scope: !3169)
!3171 = !DILocation(line: 1857, column: 13, scope: !3169)
!3172 = !DILocation(line: 1865, column: 48, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1862, column: 5)
!3174 = !DILocation(line: 1865, column: 16, scope: !3173)
!3175 = !DILocation(line: 1865, column: 13, scope: !3173)
!3176 = !DILocation(line: 1882, column: 26, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3178, file: !3, line: 1882, column: 10)
!3178 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 1881, column: 5)
!3179 = !DILocation(line: 1882, column: 10, scope: !3178)
!3180 = !DILocation(line: 1884, column: 24, scope: !3181)
!3181 = distinct !DILexicalBlock(scope: !3177, file: !3, line: 1883, column: 6)
!3182 = !DILocation(line: 1885, column: 6, scope: !3181)
!3183 = !DILocation(line: 1894, column: 12, scope: !3115)
!3184 = !DILocation(line: 1896, column: 3, scope: !3115)
!3185 = distinct !DISubprogram(name: "prvListTaskWithinSingleList", scope: !3, file: !3, line: 3098, type: !3186, scopeLine: 3099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3188)
!3186 = !DISubroutineType(types: !3187)
!3187 = !{!27, !3119, !81, !3127}
!3188 = !{!3189, !3190, !3191, !3192, !3195, !3196, !3197, !3201}
!3189 = !DILocalVariable(name: "pxTaskStatusArray", arg: 1, scope: !3185, file: !3, line: 3098, type: !3119)
!3190 = !DILocalVariable(name: "pxList", arg: 2, scope: !3185, file: !3, line: 3098, type: !81)
!3191 = !DILocalVariable(name: "eState", arg: 3, scope: !3185, file: !3, line: 3098, type: !3127)
!3192 = !DILocalVariable(name: "pxNextTCB", scope: !3185, file: !3, line: 3100, type: !3193)
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 32)
!3194 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !46)
!3195 = !DILocalVariable(name: "pxFirstTCB", scope: !3185, file: !3, line: 3100, type: !3193)
!3196 = !DILocalVariable(name: "uxTask", scope: !3185, file: !3, line: 3101, type: !27)
!3197 = !DILocalVariable(name: "pxConstList", scope: !3198, file: !3, line: 3105, type: !119)
!3198 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 3105, column: 4)
!3199 = distinct !DILexicalBlock(scope: !3200, file: !3, line: 3104, column: 3)
!3200 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 3103, column: 7)
!3201 = !DILocalVariable(name: "pxConstList", scope: !3202, file: !3, line: 3113, type: !119)
!3202 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 3113, column: 5)
!3203 = distinct !DILexicalBlock(scope: !3199, file: !3, line: 3112, column: 4)
!3204 = !DILocation(line: 0, scope: !3185)
!3205 = !DILocation(line: 3103, column: 7, scope: !3200)
!3206 = !DILocation(line: 3103, column: 41, scope: !3200)
!3207 = !DILocation(line: 3103, column: 7, scope: !3185)
!3208 = !DILocation(line: 0, scope: !3198)
!3209 = !DILocation(line: 3105, column: 4, scope: !3198)
!3210 = !DILocation(line: 3105, column: 4, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 3105, column: 4)
!3212 = !DILocation(line: 3105, column: 4, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 3105, column: 4)
!3214 = !DILocation(line: 3111, column: 4, scope: !3199)
!3215 = !DILocation(line: 3113, column: 5, scope: !3202)
!3216 = !DILocation(line: 0, scope: !3202)
!3217 = !DILocation(line: 3113, column: 5, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3202, file: !3, line: 3113, column: 5)
!3219 = !DILocation(line: 3113, column: 5, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 3113, column: 5)
!3221 = !DILocation(line: 3115, column: 33, scope: !3203)
!3222 = !DILocation(line: 3115, column: 41, scope: !3203)
!3223 = !DILocation(line: 3116, column: 77, scope: !3203)
!3224 = !DILocation(line: 3116, column: 33, scope: !3203)
!3225 = !DILocation(line: 3116, column: 44, scope: !3203)
!3226 = !DILocation(line: 3117, column: 58, scope: !3203)
!3227 = !DILocation(line: 3117, column: 33, scope: !3203)
!3228 = !DILocation(line: 3117, column: 45, scope: !3203)
!3229 = !DILocation(line: 3118, column: 33, scope: !3203)
!3230 = !DILocation(line: 3118, column: 47, scope: !3203)
!3231 = !DILocation(line: 3119, column: 64, scope: !3203)
!3232 = !DILocation(line: 3119, column: 33, scope: !3203)
!3233 = !DILocation(line: 3119, column: 51, scope: !3203)
!3234 = !DILocation(line: 3126, column: 10, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 3122, column: 5)
!3236 = !DILocation(line: 3128, column: 11, scope: !3237)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !3, line: 3128, column: 11)
!3238 = distinct !DILexicalBlock(scope: !3239, file: !3, line: 3127, column: 6)
!3239 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 3126, column: 10)
!3240 = !DILocation(line: 3128, column: 69, scope: !3237)
!3241 = !DILocation(line: 3128, column: 11, scope: !3238)
!3242 = !DILocation(line: 3130, column: 50, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3237, file: !3, line: 3129, column: 7)
!3244 = !DILocation(line: 3131, column: 7, scope: !3243)
!3245 = !DILocation(line: 3138, column: 62, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 3137, column: 5)
!3247 = !DILocation(line: 3138, column: 34, scope: !3246)
!3248 = !DILocation(line: 3138, column: 49, scope: !3246)
!3249 = !DILocation(line: 3152, column: 34, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 3151, column: 5)
!3251 = !DILocation(line: 3152, column: 51, scope: !3250)
!3252 = !DILocation(line: 3162, column: 110, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 3161, column: 5)
!3254 = !DILocation(line: 3162, column: 85, scope: !3253)
!3255 = !DILocation(line: 3162, column: 57, scope: !3253)
!3256 = !DILocation(line: 3162, column: 34, scope: !3253)
!3257 = !DILocation(line: 3162, column: 55, scope: !3253)
!3258 = !DILocation(line: 3166, column: 11, scope: !3203)
!3259 = !DILocation(line: 3168, column: 23, scope: !3199)
!3260 = !DILocation(line: 3168, column: 4, scope: !3203)
!3261 = distinct !{!3261, !3214, !3262}
!3262 = !DILocation(line: 3168, column: 37, scope: !3199)
!3263 = !DILocation(line: 3175, column: 3, scope: !3185)
!3264 = distinct !DISubprogram(name: "prvTaskCheckFreeStackSpace", scope: !3, file: !3, line: 3183, type: !3265, scopeLine: 3184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3268)
!3265 = !DISubroutineType(types: !3266)
!3266 = !{!31, !3267}
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!3268 = !{!3269, !3270}
!3269 = !DILocalVariable(name: "pucStackByte", arg: 1, scope: !3264, file: !3, line: 3183, type: !3267)
!3270 = !DILocalVariable(name: "ulCount", scope: !3264, file: !3, line: 3185, type: !38)
!3271 = !DILocation(line: 0, scope: !3264)
!3272 = !DILocation(line: 3187, column: 10, scope: !3264)
!3273 = !DILocation(line: 3187, column: 24, scope: !3264)
!3274 = !DILocation(line: 3187, column: 3, scope: !3264)
!3275 = !DILocation(line: 3189, column: 17, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 3188, column: 3)
!3277 = !DILocation(line: 3190, column: 11, scope: !3276)
!3278 = distinct !{!3278, !3274, !3279}
!3279 = !DILocation(line: 3191, column: 3, scope: !3264)
!3280 = !DILocation(line: 3193, column: 11, scope: !3264)
!3281 = !DILocation(line: 3195, column: 3, scope: !3264)
!3282 = distinct !DISubprogram(name: "vTaskPlaceOnEventList", scope: !3, file: !3, line: 2258, type: !3283, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3285)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{null, !119, !2324}
!3285 = !{!3286, !3287, !3288}
!3286 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !3282, file: !3, line: 2258, type: !119)
!3287 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !3282, file: !3, line: 2258, type: !2324)
!3288 = !DILocalVariable(name: "xTimeToWake", scope: !3282, file: !3, line: 2260, type: !59)
!3289 = !DILocation(line: 0, scope: !3282)
!3290 = !DILocation(line: 2262, column: 2, scope: !3291)
!3291 = distinct !DILexicalBlock(scope: !3282, file: !3, line: 2262, column: 2)
!3292 = !DILocation(line: 2262, column: 2, scope: !3282)
!3293 = !DILocation(line: 2262, column: 2, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3291, file: !3, line: 2262, column: 2)
!3295 = !DILocation(line: 2271, column: 31, scope: !3282)
!3296 = !DILocation(line: 2271, column: 45, scope: !3282)
!3297 = !DILocation(line: 2271, column: 2, scope: !3282)
!3298 = !DILocation(line: 2276, column: 23, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3282, file: !3, line: 2276, column: 6)
!3300 = !DILocation(line: 2276, column: 37, scope: !3299)
!3301 = !DILocation(line: 2276, column: 6, scope: !3299)
!3302 = !DILocation(line: 2276, column: 58, scope: !3299)
!3303 = !DILocation(line: 2276, column: 6, scope: !3282)
!3304 = !DILocation(line: 2280, column: 3, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3299, file: !3, line: 2277, column: 2)
!3306 = !DILocation(line: 2281, column: 2, scope: !3305)
!3307 = !DILocation(line: 2289, column: 20, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3309, file: !3, line: 2289, column: 7)
!3309 = distinct !DILexicalBlock(scope: !3282, file: !3, line: 2288, column: 2)
!3310 = !DILocation(line: 2289, column: 7, scope: !3309)
!3311 = !DILocation(line: 2294, column: 44, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 2290, column: 3)
!3313 = !DILocation(line: 2294, column: 58, scope: !3312)
!3314 = !DILocation(line: 2294, column: 4, scope: !3312)
!3315 = !DILocation(line: 2295, column: 3, scope: !3312)
!3316 = !DILocation(line: 2301, column: 18, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 2297, column: 3)
!3318 = !DILocation(line: 2301, column: 29, scope: !3317)
!3319 = !DILocation(line: 2302, column: 4, scope: !3317)
!3320 = !DILocation(line: 2314, column: 1, scope: !3282)
!3321 = distinct !DISubprogram(name: "vTaskPlaceOnUnorderedEventList", scope: !3, file: !3, line: 2317, type: !3322, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3324)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{null, !81, !2324, !2324}
!3324 = !{!3325, !3326, !3327, !3328}
!3325 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !3321, file: !3, line: 2317, type: !81)
!3326 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !3321, file: !3, line: 2317, type: !2324)
!3327 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !3321, file: !3, line: 2317, type: !2324)
!3328 = !DILocalVariable(name: "xTimeToWake", scope: !3321, file: !3, line: 2319, type: !59)
!3329 = !DILocation(line: 0, scope: !3321)
!3330 = !DILocation(line: 2321, column: 2, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 2321, column: 2)
!3332 = !DILocation(line: 2321, column: 2, scope: !3321)
!3333 = !DILocation(line: 2321, column: 2, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 2321, column: 2)
!3335 = !DILocation(line: 2325, column: 2, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 2325, column: 2)
!3337 = !DILocation(line: 2325, column: 2, scope: !3321)
!3338 = !DILocation(line: 2325, column: 2, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3336, file: !3, line: 2325, column: 2)
!3340 = !DILocation(line: 2330, column: 2, scope: !3321)
!3341 = !DILocation(line: 2337, column: 34, scope: !3321)
!3342 = !DILocation(line: 2337, column: 48, scope: !3321)
!3343 = !DILocation(line: 2337, column: 2, scope: !3321)
!3344 = !DILocation(line: 2342, column: 23, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 2342, column: 6)
!3346 = !DILocation(line: 2342, column: 37, scope: !3345)
!3347 = !DILocation(line: 2342, column: 6, scope: !3345)
!3348 = !DILocation(line: 2342, column: 58, scope: !3345)
!3349 = !DILocation(line: 2342, column: 6, scope: !3321)
!3350 = !DILocation(line: 2346, column: 3, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 2343, column: 2)
!3352 = !DILocation(line: 2347, column: 2, scope: !3351)
!3353 = !DILocation(line: 2355, column: 20, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 2355, column: 7)
!3355 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 2354, column: 2)
!3356 = !DILocation(line: 2355, column: 7, scope: !3355)
!3357 = !DILocation(line: 2360, column: 44, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 2356, column: 3)
!3359 = !DILocation(line: 2360, column: 58, scope: !3358)
!3360 = !DILocation(line: 2360, column: 4, scope: !3358)
!3361 = !DILocation(line: 2361, column: 3, scope: !3358)
!3362 = !DILocation(line: 2367, column: 18, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 2363, column: 3)
!3364 = !DILocation(line: 2367, column: 29, scope: !3363)
!3365 = !DILocation(line: 2368, column: 4, scope: !3363)
!3366 = !DILocation(line: 2380, column: 1, scope: !3321)
!3367 = distinct !DISubprogram(name: "vTaskPlaceOnEventListRestricted", scope: !3, file: !3, line: 2385, type: !3283, scopeLine: 2386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3368)
!3368 = !{!3369, !3370, !3371}
!3369 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !3367, file: !3, line: 2385, type: !119)
!3370 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !3367, file: !3, line: 2385, type: !2324)
!3371 = !DILocalVariable(name: "xTimeToWake", scope: !3367, file: !3, line: 2387, type: !59)
!3372 = !DILocation(line: 0, scope: !3367)
!3373 = !DILocation(line: 2389, column: 3, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 2389, column: 3)
!3375 = !DILocation(line: 2389, column: 3, scope: !3367)
!3376 = !DILocation(line: 2389, column: 3, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 2389, column: 3)
!3378 = !DILocation(line: 2401, column: 35, scope: !3367)
!3379 = !DILocation(line: 2401, column: 49, scope: !3367)
!3380 = !DILocation(line: 2401, column: 3, scope: !3367)
!3381 = !DILocation(line: 2406, column: 24, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3367, file: !3, line: 2406, column: 7)
!3383 = !DILocation(line: 2406, column: 38, scope: !3382)
!3384 = !DILocation(line: 2406, column: 7, scope: !3382)
!3385 = !DILocation(line: 2406, column: 59, scope: !3382)
!3386 = !DILocation(line: 2406, column: 7, scope: !3367)
!3387 = !DILocation(line: 2410, column: 4, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 2407, column: 3)
!3389 = !DILocation(line: 2411, column: 3, scope: !3388)
!3390 = !DILocation(line: 2419, column: 17, scope: !3367)
!3391 = !DILocation(line: 2419, column: 28, scope: !3367)
!3392 = !DILocation(line: 2422, column: 3, scope: !3367)
!3393 = !DILocation(line: 2423, column: 2, scope: !3367)
!3394 = distinct !DISubprogram(name: "xTaskRemoveFromEventList", scope: !3, file: !3, line: 2428, type: !3395, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3400)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!41, !3397}
!3397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3398)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 32)
!3399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !82)
!3400 = !{!3401, !3402, !3403}
!3401 = !DILocalVariable(name: "pxEventList", arg: 1, scope: !3394, file: !3, line: 2428, type: !3397)
!3402 = !DILocalVariable(name: "pxUnblockedTCB", scope: !3394, file: !3, line: 2430, type: !45)
!3403 = !DILocalVariable(name: "xReturn", scope: !3394, file: !3, line: 2431, type: !41)
!3404 = !DILocation(line: 0, scope: !3394)
!3405 = !DILocation(line: 2446, column: 31, scope: !3394)
!3406 = !DILocation(line: 2447, column: 2, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 2447, column: 2)
!3408 = !DILocation(line: 2447, column: 2, scope: !3394)
!3409 = !DILocation(line: 2447, column: 2, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 2447, column: 2)
!3411 = !DILocation(line: 2448, column: 44, scope: !3394)
!3412 = !DILocation(line: 2448, column: 11, scope: !3394)
!3413 = !DILocation(line: 2450, column: 6, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 2450, column: 6)
!3415 = !DILocation(line: 2450, column: 27, scope: !3414)
!3416 = !DILocation(line: 2450, column: 6, scope: !3394)
!3417 = !DILocation(line: 2452, column: 45, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 2451, column: 2)
!3419 = !DILocation(line: 2452, column: 12, scope: !3418)
!3420 = !DILocation(line: 2453, column: 3, scope: !3418)
!3421 = !DILocation(line: 2454, column: 2, scope: !3418)
!3422 = !DILocation(line: 2459, column: 3, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 2456, column: 2)
!3424 = !DILocation(line: 2462, column: 22, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 2462, column: 6)
!3426 = !DILocation(line: 2462, column: 35, scope: !3425)
!3427 = !DILocation(line: 2462, column: 49, scope: !3425)
!3428 = !DILocation(line: 2462, column: 33, scope: !3425)
!3429 = !DILocation(line: 2462, column: 6, scope: !3394)
!3430 = !DILocation(line: 2471, column: 17, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 2463, column: 2)
!3432 = !DILocation(line: 2472, column: 2, scope: !3431)
!3433 = !DILocation(line: 0, scope: !3425)
!3434 = !DILocation(line: 2492, column: 2, scope: !3394)
!3435 = distinct !DISubprogram(name: "xTaskRemoveFromUnorderedEventList", scope: !3, file: !3, line: 2496, type: !3436, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3438)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{!41, !87, !2324}
!3438 = !{!3439, !3440, !3441, !3442}
!3439 = !DILocalVariable(name: "pxEventListItem", arg: 1, scope: !3435, file: !3, line: 2496, type: !87)
!3440 = !DILocalVariable(name: "xItemValue", arg: 2, scope: !3435, file: !3, line: 2496, type: !2324)
!3441 = !DILocalVariable(name: "pxUnblockedTCB", scope: !3435, file: !3, line: 2498, type: !45)
!3442 = !DILocalVariable(name: "xReturn", scope: !3435, file: !3, line: 2499, type: !41)
!3443 = !DILocation(line: 0, scope: !3435)
!3444 = !DILocation(line: 2503, column: 2, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 2503, column: 2)
!3446 = !DILocation(line: 2503, column: 2, scope: !3435)
!3447 = !DILocation(line: 2503, column: 2, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3445, file: !3, line: 2503, column: 2)
!3449 = !DILocation(line: 2506, column: 2, scope: !3435)
!3450 = !DILocation(line: 2510, column: 31, scope: !3435)
!3451 = !DILocation(line: 2511, column: 2, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 2511, column: 2)
!3453 = !DILocation(line: 2511, column: 2, scope: !3435)
!3454 = !DILocation(line: 2511, column: 2, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 2511, column: 2)
!3456 = !DILocation(line: 2512, column: 11, scope: !3435)
!3457 = !DILocation(line: 2517, column: 44, scope: !3435)
!3458 = !DILocation(line: 2517, column: 11, scope: !3435)
!3459 = !DILocation(line: 2518, column: 2, scope: !3435)
!3460 = !DILocation(line: 2520, column: 22, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3435, file: !3, line: 2520, column: 6)
!3462 = !DILocation(line: 2520, column: 35, scope: !3461)
!3463 = !DILocation(line: 2520, column: 49, scope: !3461)
!3464 = !DILocation(line: 2520, column: 33, scope: !3461)
!3465 = !DILocation(line: 2520, column: 6, scope: !3435)
!3466 = !DILocation(line: 2530, column: 17, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 2521, column: 2)
!3468 = !DILocation(line: 2531, column: 2, scope: !3467)
!3469 = !DILocation(line: 0, scope: !3461)
!3470 = !DILocation(line: 2537, column: 2, scope: !3435)
!3471 = distinct !DISubprogram(name: "vTaskSetTimeOutState", scope: !3, file: !3, line: 2541, type: !3472, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3481)
!3472 = !DISubroutineType(types: !3473)
!3473 = !{null, !3474}
!3474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3475)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 32)
!3476 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !12, line: 138, baseType: !3477)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !12, line: 134, size: 64, elements: !3478)
!3478 = !{!3479, !3480}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !3477, file: !12, line: 136, baseType: !41, size: 32)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !3477, file: !12, line: 137, baseType: !59, size: 32, offset: 32)
!3481 = !{!3482}
!3482 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !3471, file: !3, line: 2541, type: !3474)
!3483 = !DILocation(line: 0, scope: !3471)
!3484 = !DILocation(line: 2543, column: 2, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3471, file: !3, line: 2543, column: 2)
!3486 = !DILocation(line: 2543, column: 2, scope: !3471)
!3487 = !DILocation(line: 2543, column: 2, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3485, file: !3, line: 2543, column: 2)
!3489 = !DILocation(line: 2544, column: 30, scope: !3471)
!3490 = !DILocation(line: 2544, column: 13, scope: !3471)
!3491 = !DILocation(line: 2544, column: 28, scope: !3471)
!3492 = !DILocation(line: 2545, column: 31, scope: !3471)
!3493 = !DILocation(line: 2545, column: 13, scope: !3471)
!3494 = !DILocation(line: 2545, column: 29, scope: !3471)
!3495 = !DILocation(line: 2546, column: 1, scope: !3471)
!3496 = distinct !DISubprogram(name: "xTaskCheckForTimeOut", scope: !3, file: !3, line: 2549, type: !3497, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3499)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{!41, !3474, !2322}
!3499 = !{!3500, !3501, !3502, !3503}
!3500 = !DILocalVariable(name: "pxTimeOut", arg: 1, scope: !3496, file: !3, line: 2549, type: !3474)
!3501 = !DILocalVariable(name: "pxTicksToWait", arg: 2, scope: !3496, file: !3, line: 2549, type: !2322)
!3502 = !DILocalVariable(name: "xReturn", scope: !3496, file: !3, line: 2551, type: !41)
!3503 = !DILocalVariable(name: "xConstTickCount", scope: !3504, file: !3, line: 2559, type: !2324)
!3504 = distinct !DILexicalBlock(scope: !3496, file: !3, line: 2557, column: 2)
!3505 = !DILocation(line: 0, scope: !3496)
!3506 = !DILocation(line: 2553, column: 2, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3496, file: !3, line: 2553, column: 2)
!3508 = !DILocation(line: 2553, column: 2, scope: !3496)
!3509 = !DILocation(line: 2553, column: 2, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 2553, column: 2)
!3511 = !DILocation(line: 2554, column: 2, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3496, file: !3, line: 2554, column: 2)
!3513 = !DILocation(line: 2554, column: 2, scope: !3496)
!3514 = !DILocation(line: 2554, column: 2, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3512, file: !3, line: 2554, column: 2)
!3516 = !DILocation(line: 2556, column: 2, scope: !3496)
!3517 = !DILocation(line: 2559, column: 38, scope: !3504)
!3518 = !DILocation(line: 0, scope: !3504)
!3519 = !DILocation(line: 2565, column: 8, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3504, file: !3, line: 2565, column: 8)
!3521 = !DILocation(line: 2565, column: 23, scope: !3520)
!3522 = !DILocation(line: 2565, column: 8, scope: !3504)
!3523 = !DILocation(line: 2572, column: 9, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 2572, column: 7)
!3525 = !DILocation(line: 2572, column: 39, scope: !3524)
!3526 = !DILocation(line: 2572, column: 25, scope: !3524)
!3527 = !DILocation(line: 0, scope: !3524)
!3528 = !DILocation(line: 2572, column: 56, scope: !3524)
!3529 = !DILocation(line: 2580, column: 30, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 2580, column: 12)
!3531 = !DILocation(line: 2580, column: 61, scope: !3530)
!3532 = !DILocation(line: 2580, column: 12, scope: !3524)
!3533 = !DILocation(line: 2583, column: 19, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 2581, column: 3)
!3535 = !DILocation(line: 2584, column: 4, scope: !3534)
!3536 = !DILocation(line: 2586, column: 3, scope: !3534)
!3537 = !DILocation(line: 0, scope: !3520)
!3538 = !DILocation(line: 2592, column: 2, scope: !3496)
!3539 = !DILocation(line: 2594, column: 2, scope: !3496)
!3540 = distinct !DISubprogram(name: "vTaskMissedYield", scope: !3, file: !3, line: 2598, type: !110, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2013)
!3541 = !DILocation(line: 2600, column: 16, scope: !3540)
!3542 = !DILocation(line: 2601, column: 1, scope: !3540)
!3543 = distinct !DISubprogram(name: "uxTaskGetTaskNumber", scope: !3, file: !3, line: 2606, type: !2620, scopeLine: 2607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3544)
!3544 = !{!3545, !3546, !3547}
!3545 = !DILocalVariable(name: "xTask", arg: 1, scope: !3543, file: !3, line: 2606, type: !40)
!3546 = !DILocalVariable(name: "uxReturn", scope: !3543, file: !3, line: 2608, type: !27)
!3547 = !DILocalVariable(name: "pxTCB", scope: !3543, file: !3, line: 2609, type: !45)
!3548 = !DILocation(line: 0, scope: !3543)
!3549 = !DILocation(line: 2611, column: 13, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3543, file: !3, line: 2611, column: 7)
!3551 = !DILocation(line: 2611, column: 7, scope: !3543)
!3552 = !DILocation(line: 2614, column: 22, scope: !3553)
!3553 = distinct !DILexicalBlock(scope: !3550, file: !3, line: 2612, column: 3)
!3554 = !DILocation(line: 2615, column: 3, scope: !3553)
!3555 = !DILocation(line: 0, scope: !3550)
!3556 = !DILocation(line: 2621, column: 3, scope: !3543)
!3557 = distinct !DISubprogram(name: "vTaskSetTaskNumber", scope: !3, file: !3, line: 2629, type: !3558, scopeLine: 2630, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3560)
!3558 = !DISubroutineType(types: !3559)
!3559 = !{null, !40, !3132}
!3560 = !{!3561, !3562, !3563}
!3561 = !DILocalVariable(name: "xTask", arg: 1, scope: !3557, file: !3, line: 2629, type: !40)
!3562 = !DILocalVariable(name: "uxHandle", arg: 2, scope: !3557, file: !3, line: 2629, type: !3132)
!3563 = !DILocalVariable(name: "pxTCB", scope: !3557, file: !3, line: 2631, type: !45)
!3564 = !DILocation(line: 0, scope: !3557)
!3565 = !DILocation(line: 2633, column: 13, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3557, file: !3, line: 2633, column: 7)
!3567 = !DILocation(line: 2633, column: 7, scope: !3557)
!3568 = !DILocation(line: 2636, column: 11, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3566, file: !3, line: 2634, column: 3)
!3570 = !DILocation(line: 2636, column: 24, scope: !3569)
!3571 = !DILocation(line: 2637, column: 3, scope: !3569)
!3572 = !DILocation(line: 2638, column: 2, scope: !3557)
!3573 = distinct !DISubprogram(name: "uxTaskGetStackHighWaterMark", scope: !3, file: !3, line: 3203, type: !2620, scopeLine: 3204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3574)
!3574 = !{!3575, !3576, !3577, !3578}
!3575 = !DILocalVariable(name: "xTask", arg: 1, scope: !3573, file: !3, line: 3203, type: !40)
!3576 = !DILocalVariable(name: "pxTCB", scope: !3573, file: !3, line: 3205, type: !45)
!3577 = !DILocalVariable(name: "pucEndOfStack", scope: !3573, file: !3, line: 3206, type: !95)
!3578 = !DILocalVariable(name: "uxReturn", scope: !3573, file: !3, line: 3207, type: !27)
!3579 = !DILocation(line: 0, scope: !3573)
!3580 = !DILocation(line: 3209, column: 11, scope: !3573)
!3581 = !DILocation(line: 3213, column: 41, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3573, file: !3, line: 3212, column: 3)
!3583 = !DILocation(line: 3221, column: 30, scope: !3573)
!3584 = !DILocation(line: 3221, column: 14, scope: !3573)
!3585 = !DILocation(line: 3223, column: 3, scope: !3573)
!3586 = distinct !DISubprogram(name: "xTaskGetCurrentTaskHandle", scope: !3, file: !3, line: 3294, type: !3587, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3589)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{!40}
!3589 = !{!3590}
!3590 = !DILocalVariable(name: "xReturn", scope: !3586, file: !3, line: 3296, type: !40)
!3591 = !DILocation(line: 3301, column: 13, scope: !3586)
!3592 = !DILocation(line: 0, scope: !3586)
!3593 = !DILocation(line: 3303, column: 3, scope: !3586)
!3594 = distinct !DISubprogram(name: "xTaskGetSchedulerState", scope: !3, file: !3, line: 3311, type: !2424, scopeLine: 3312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3595)
!3595 = !{!3596}
!3596 = !DILocalVariable(name: "xReturn", scope: !3594, file: !3, line: 3313, type: !41)
!3597 = !DILocation(line: 3315, column: 7, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3594, file: !3, line: 3315, column: 7)
!3599 = !DILocation(line: 3315, column: 25, scope: !3598)
!3600 = !DILocation(line: 3315, column: 7, scope: !3594)
!3601 = !DILocation(line: 3321, column: 8, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 3321, column: 8)
!3603 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 3320, column: 3)
!3604 = !DILocation(line: 3321, column: 29, scope: !3602)
!3605 = !DILocation(line: 0, scope: !3598)
!3606 = !DILocation(line: 0, scope: !3594)
!3607 = !DILocation(line: 3331, column: 3, scope: !3594)
!3608 = distinct !DISubprogram(name: "vTaskPriorityInherit", scope: !3, file: !3, line: 3339, type: !3609, scopeLine: 3340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3611)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{null, !2904}
!3611 = !{!3612, !3613}
!3612 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !3608, file: !3, line: 3339, type: !2904)
!3613 = !DILocalVariable(name: "pxTCB", scope: !3608, file: !3, line: 3341, type: !2179)
!3614 = !DILocation(line: 0, scope: !3608)
!3615 = !DILocation(line: 3345, column: 21, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 3345, column: 7)
!3617 = !DILocation(line: 3345, column: 7, scope: !3608)
!3618 = !DILocation(line: 3347, column: 15, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 3347, column: 8)
!3620 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 3346, column: 3)
!3621 = !DILocation(line: 3347, column: 28, scope: !3619)
!3622 = !DILocation(line: 3347, column: 42, scope: !3619)
!3623 = !DILocation(line: 3347, column: 26, scope: !3619)
!3624 = !DILocation(line: 3347, column: 8, scope: !3620)
!3625 = !DILocation(line: 3352, column: 11, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 3352, column: 9)
!3627 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 3348, column: 4)
!3628 = !DILocation(line: 3352, column: 102, scope: !3626)
!3629 = !DILocation(line: 3352, column: 9, scope: !3627)
!3630 = !DILocation(line: 3354, column: 6, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3626, file: !3, line: 3353, column: 5)
!3632 = !DILocation(line: 3355, column: 5, scope: !3631)
!3633 = !DILocation(line: 3363, column: 9, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 3363, column: 9)
!3635 = !DILocation(line: 3363, column: 9, scope: !3627)
!3636 = !DILocation(line: 3365, column: 10, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 3365, column: 10)
!3638 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 3364, column: 5)
!3639 = !DILocation(line: 3365, column: 55, scope: !3637)
!3640 = !DILocation(line: 3365, column: 10, scope: !3638)
!3641 = !DILocation(line: 3367, column: 7, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 3367, column: 7)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !3, line: 3367, column: 7)
!3644 = distinct !DILexicalBlock(scope: !3637, file: !3, line: 3366, column: 6)
!3645 = !DILocation(line: 3367, column: 7, scope: !3643)
!3646 = !DILocation(line: 3367, column: 7, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 3367, column: 7)
!3648 = !DILocation(line: 3375, column: 26, scope: !3638)
!3649 = !DILocation(line: 3375, column: 40, scope: !3638)
!3650 = !DILocation(line: 3375, column: 24, scope: !3638)
!3651 = !DILocation(line: 3376, column: 6, scope: !3638)
!3652 = !DILocation(line: 3377, column: 5, scope: !3638)
!3653 = !DILocation(line: 3381, column: 26, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 3379, column: 5)
!3655 = !DILocation(line: 3381, column: 40, scope: !3654)
!3656 = !DILocation(line: 3381, column: 24, scope: !3654)
!3657 = !DILocation(line: 3395, column: 2, scope: !3608)
!3658 = distinct !DISubprogram(name: "xTaskPriorityDisinherit", scope: !3, file: !3, line: 3402, type: !2902, scopeLine: 3403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3659)
!3659 = !{!3660, !3661, !3662}
!3660 = !DILocalVariable(name: "pxMutexHolder", arg: 1, scope: !3658, file: !3, line: 3402, type: !2904)
!3661 = !DILocalVariable(name: "pxTCB", scope: !3658, file: !3, line: 3404, type: !2179)
!3662 = !DILocalVariable(name: "xReturn", scope: !3658, file: !3, line: 3405, type: !41)
!3663 = !DILocation(line: 0, scope: !3658)
!3664 = !DILocation(line: 3407, column: 21, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 3407, column: 7)
!3666 = !DILocation(line: 3407, column: 7, scope: !3658)
!3667 = !DILocation(line: 3409, column: 4, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 3409, column: 4)
!3669 = distinct !DILexicalBlock(scope: !3665, file: !3, line: 3408, column: 3)
!3670 = !DILocation(line: 3409, column: 4, scope: !3669)
!3671 = !DILocation(line: 3409, column: 4, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 3409, column: 4)
!3673 = !DILocation(line: 3410, column: 28, scope: !3669)
!3674 = !DILocation(line: 3412, column: 15, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 3412, column: 8)
!3676 = !DILocation(line: 3412, column: 36, scope: !3675)
!3677 = !DILocation(line: 3412, column: 26, scope: !3675)
!3678 = !DILocation(line: 3412, column: 8, scope: !3669)
!3679 = !DILocation(line: 3422, column: 34, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 3422, column: 10)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !3, line: 3416, column: 5)
!3682 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 3415, column: 9)
!3683 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 3413, column: 4)
!3684 = !DILocation(line: 3422, column: 10, scope: !3680)
!3685 = !DILocation(line: 3422, column: 55, scope: !3680)
!3686 = !DILocation(line: 3422, column: 10, scope: !3681)
!3687 = !DILocation(line: 3424, column: 7, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3689, file: !3, line: 3424, column: 7)
!3689 = distinct !DILexicalBlock(scope: !3690, file: !3, line: 3424, column: 7)
!3690 = distinct !DILexicalBlock(scope: !3680, file: !3, line: 3423, column: 6)
!3691 = !DILocation(line: 3424, column: 7, scope: !3689)
!3692 = !DILocation(line: 3424, column: 7, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3688, file: !3, line: 3424, column: 7)
!3694 = !DILocation(line: 3434, column: 33, scope: !3681)
!3695 = !DILocation(line: 3434, column: 24, scope: !3681)
!3696 = !DILocation(line: 3439, column: 6, scope: !3681)
!3697 = !DILocation(line: 3440, column: 6, scope: !3681)
!3698 = !DILocation(line: 3451, column: 5, scope: !3681)
!3699 = !DILocation(line: 3467, column: 3, scope: !3658)
!3700 = distinct !DISubprogram(name: "vTaskList", scope: !3, file: !3, line: 3565, type: !3701, scopeLine: 3566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3703)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{null, !701}
!3703 = !{!3704, !3705, !3706, !3707, !3708}
!3704 = !DILocalVariable(name: "pcWriteBuffer", arg: 1, scope: !3700, file: !3, line: 3565, type: !701)
!3705 = !DILocalVariable(name: "pxTaskStatusArray", scope: !3700, file: !3, line: 3567, type: !3119)
!3706 = !DILocalVariable(name: "uxArraySize", scope: !3700, file: !3, line: 3568, type: !140)
!3707 = !DILocalVariable(name: "x", scope: !3700, file: !3, line: 3568, type: !140)
!3708 = !DILocalVariable(name: "cStatus", scope: !3700, file: !3, line: 3569, type: !70)
!3709 = !DILocation(line: 0, scope: !3700)
!3710 = !DILocation(line: 3568, column: 2, scope: !3700)
!3711 = !DILocation(line: 3568, column: 23, scope: !3700)
!3712 = !DILocation(line: 3568, column: 36, scope: !3700)
!3713 = !DILocation(line: 3597, column: 18, scope: !3700)
!3714 = !DILocation(line: 3601, column: 17, scope: !3700)
!3715 = !DILocation(line: 3601, column: 15, scope: !3700)
!3716 = !DILocation(line: 3604, column: 37, scope: !3700)
!3717 = !DILocation(line: 3604, column: 60, scope: !3700)
!3718 = !DILocation(line: 3604, column: 23, scope: !3700)
!3719 = !DILocation(line: 3606, column: 25, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3700, file: !3, line: 3606, column: 7)
!3721 = !DILocation(line: 3606, column: 7, scope: !3700)
!3722 = !DILocation(line: 3609, column: 59, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3720, file: !3, line: 3607, column: 3)
!3724 = !DILocation(line: 3609, column: 18, scope: !3723)
!3725 = !DILocation(line: 3609, column: 16, scope: !3723)
!3726 = !DILocation(line: 3612, column: 11, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3723, file: !3, line: 3612, column: 4)
!3728 = !DILocation(line: 3612, column: 16, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 3612, column: 4)
!3730 = !DILocation(line: 3612, column: 20, scope: !3729)
!3731 = !DILocation(line: 3612, column: 18, scope: !3729)
!3732 = !DILocation(line: 3612, column: 4, scope: !3727)
!3733 = !DILocation(line: 3614, column: 32, scope: !3734)
!3734 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 3613, column: 4)
!3735 = !DILocation(line: 3614, column: 36, scope: !3734)
!3736 = !DILocation(line: 3614, column: 5, scope: !3734)
!3737 = !DILocation(line: 3636, column: 77, scope: !3734)
!3738 = !DILocation(line: 3636, column: 81, scope: !3734)
!3739 = !DILocation(line: 3636, column: 21, scope: !3734)
!3740 = !DILocation(line: 3639, column: 98, scope: !3734)
!3741 = !DILocation(line: 3639, column: 102, scope: !3734)
!3742 = !DILocation(line: 3639, column: 157, scope: !3734)
!3743 = !DILocation(line: 3639, column: 161, scope: !3734)
!3744 = !DILocation(line: 3639, column: 121, scope: !3734)
!3745 = !DILocation(line: 3639, column: 219, scope: !3734)
!3746 = !DILocation(line: 3639, column: 223, scope: !3734)
!3747 = !DILocation(line: 3639, column: 5, scope: !3734)
!3748 = !DILocation(line: 3640, column: 22, scope: !3734)
!3749 = !DILocation(line: 3640, column: 19, scope: !3734)
!3750 = !DILocation(line: 3612, column: 34, scope: !3729)
!3751 = distinct !{!3751, !3732, !3752}
!3752 = !DILocation(line: 3641, column: 4, scope: !3727)
!3753 = !DILocation(line: 3644, column: 4, scope: !3723)
!3754 = !DILocation(line: 3645, column: 3, scope: !3723)
!3755 = !DILocation(line: 3650, column: 2, scope: !3700)
!3756 = distinct !DISubprogram(name: "prvWriteNameToBuffer", scope: !3, file: !3, line: 3539, type: !3757, scopeLine: 3540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3759)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{!701, !701, !104}
!3759 = !{!3760, !3761, !3762}
!3760 = !DILocalVariable(name: "pcBuffer", arg: 1, scope: !3756, file: !3, line: 3539, type: !701)
!3761 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !3756, file: !3, line: 3539, type: !104)
!3762 = !DILocalVariable(name: "x", scope: !3756, file: !3, line: 3541, type: !41)
!3763 = !DILocation(line: 0, scope: !3756)
!3764 = !DILocation(line: 3544, column: 3, scope: !3756)
!3765 = !DILocation(line: 3548, column: 12, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3756, file: !3, line: 3548, column: 3)
!3767 = !DILocation(line: 3548, column: 34, scope: !3768)
!3768 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 3548, column: 3)
!3769 = !DILocation(line: 3548, column: 3, scope: !3766)
!3770 = !DILocation(line: 3550, column: 4, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 3549, column: 3)
!3772 = !DILocation(line: 3550, column: 18, scope: !3771)
!3773 = !DILocation(line: 3548, column: 70, scope: !3768)
!3774 = distinct !{!3774, !3769, !3775}
!3775 = !DILocation(line: 3551, column: 3, scope: !3766)
!3776 = !DILocation(line: 0, scope: !3766)
!3777 = !DILocation(line: 3554, column: 3, scope: !3756)
!3778 = !DILocation(line: 3554, column: 17, scope: !3756)
!3779 = !DILocation(line: 3557, column: 3, scope: !3756)
!3780 = distinct !DISubprogram(name: "uxTaskResetEventItemValue", scope: !3, file: !3, line: 3779, type: !3078, scopeLine: 3780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3781)
!3781 = !{!3782}
!3782 = !DILocalVariable(name: "uxReturn", scope: !3780, file: !3, line: 3781, type: !59)
!3783 = !DILocation(line: 3783, column: 13, scope: !3780)
!3784 = !DILocation(line: 0, scope: !3780)
!3785 = !DILocation(line: 3787, column: 2, scope: !3780)
!3786 = !DILocation(line: 3789, column: 2, scope: !3780)
!3787 = distinct !DISubprogram(name: "pvTaskIncrementMutexHeldCount", scope: !3, file: !3, line: 3795, type: !3788, scopeLine: 3796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2013)
!3788 = !DISubroutineType(types: !1902)
!3789 = !DILocation(line: 3799, column: 7, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 3799, column: 7)
!3791 = !DILocation(line: 3799, column: 20, scope: !3790)
!3792 = !DILocation(line: 3799, column: 7, scope: !3787)
!3793 = !DILocation(line: 3801, column: 6, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3790, file: !3, line: 3800, column: 3)
!3795 = !DILocation(line: 3801, column: 20, scope: !3794)
!3796 = !DILocation(line: 3801, column: 35, scope: !3794)
!3797 = !DILocation(line: 3802, column: 3, scope: !3794)
!3798 = !DILocation(line: 3804, column: 10, scope: !3787)
!3799 = !DILocation(line: 3804, column: 3, scope: !3787)
!3800 = distinct !DISubprogram(name: "ulTaskNotifyTake", scope: !3, file: !3, line: 3812, type: !3801, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3803)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{!38, !41, !59}
!3803 = !{!3804, !3805, !3806, !3807}
!3804 = !DILocalVariable(name: "xClearCountOnExit", arg: 1, scope: !3800, file: !3, line: 3812, type: !41)
!3805 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !3800, file: !3, line: 3812, type: !59)
!3806 = !DILocalVariable(name: "xTimeToWake", scope: !3800, file: !3, line: 3814, type: !59)
!3807 = !DILocalVariable(name: "ulReturn", scope: !3800, file: !3, line: 3815, type: !38)
!3808 = !DILocation(line: 0, scope: !3800)
!3809 = !DILocation(line: 3817, column: 3, scope: !3800)
!3810 = !DILocation(line: 3820, column: 8, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 3820, column: 8)
!3812 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 3818, column: 3)
!3813 = !DILocation(line: 3820, column: 22, scope: !3811)
!3814 = !DILocation(line: 3820, column: 38, scope: !3811)
!3815 = !DILocation(line: 3820, column: 8, scope: !3812)
!3816 = !DILocation(line: 3823, column: 5, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 3821, column: 4)
!3818 = !DILocation(line: 3823, column: 19, scope: !3817)
!3819 = !DILocation(line: 3823, column: 32, scope: !3817)
!3820 = !DILocation(line: 3825, column: 22, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3817, file: !3, line: 3825, column: 9)
!3822 = !DILocation(line: 3825, column: 9, scope: !3817)
!3823 = !DILocation(line: 3829, column: 27, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 3829, column: 10)
!3825 = distinct !DILexicalBlock(scope: !3821, file: !3, line: 3826, column: 5)
!3826 = !DILocation(line: 3829, column: 41, scope: !3824)
!3827 = !DILocation(line: 3829, column: 10, scope: !3824)
!3828 = !DILocation(line: 3829, column: 62, scope: !3824)
!3829 = !DILocation(line: 3829, column: 10, scope: !3825)
!3830 = !DILocation(line: 3834, column: 7, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 3830, column: 6)
!3832 = !DILocation(line: 3835, column: 6, scope: !3831)
!3833 = !DILocation(line: 3843, column: 24, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 3843, column: 11)
!3835 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 3842, column: 6)
!3836 = !DILocation(line: 3843, column: 11, scope: !3835)
!3837 = !DILocation(line: 3849, column: 48, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 3844, column: 7)
!3839 = !DILocation(line: 3849, column: 62, scope: !3838)
!3840 = !DILocation(line: 3849, column: 8, scope: !3838)
!3841 = !DILocation(line: 3850, column: 7, scope: !3838)
!3842 = !DILocation(line: 3857, column: 22, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 3852, column: 7)
!3844 = !DILocation(line: 3857, column: 33, scope: !3843)
!3845 = !DILocation(line: 3858, column: 8, scope: !3843)
!3846 = !DILocation(line: 3876, column: 6, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 3876, column: 6)
!3848 = !{i64 2148494738}
!3849 = !{i64 2148494778}
!3850 = !DILocation(line: 3877, column: 5, scope: !3825)
!3851 = !DILocation(line: 3888, column: 3, scope: !3800)
!3852 = !DILocation(line: 3890, column: 3, scope: !3800)
!3853 = !DILocation(line: 3892, column: 15, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3800, file: !3, line: 3891, column: 3)
!3855 = !DILocation(line: 3892, column: 29, scope: !3854)
!3856 = !DILocation(line: 3894, column: 17, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 3894, column: 8)
!3858 = !DILocation(line: 3894, column: 8, scope: !3854)
!3859 = !DILocation(line: 3896, column: 27, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !3, line: 3896, column: 9)
!3861 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 3895, column: 4)
!3862 = !DILocation(line: 0, scope: !3860)
!3863 = !DILocation(line: 3896, column: 9, scope: !3861)
!3864 = !DILocation(line: 3902, column: 39, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 3901, column: 5)
!3866 = !DILocation(line: 3910, column: 4, scope: !3854)
!3867 = !DILocation(line: 3910, column: 18, scope: !3854)
!3868 = !DILocation(line: 3910, column: 31, scope: !3854)
!3869 = !DILocation(line: 3912, column: 3, scope: !3800)
!3870 = !DILocation(line: 3914, column: 3, scope: !3800)
!3871 = distinct !DISubprogram(name: "xTaskNotifyWait", scope: !3, file: !3, line: 3922, type: !3872, scopeLine: 3923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3874)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{!41, !38, !38, !3134, !59}
!3874 = !{!3875, !3876, !3877, !3878, !3879, !3880}
!3875 = !DILocalVariable(name: "ulBitsToClearOnEntry", arg: 1, scope: !3871, file: !3, line: 3922, type: !38)
!3876 = !DILocalVariable(name: "ulBitsToClearOnExit", arg: 2, scope: !3871, file: !3, line: 3922, type: !38)
!3877 = !DILocalVariable(name: "pulNotificationValue", arg: 3, scope: !3871, file: !3, line: 3922, type: !3134)
!3878 = !DILocalVariable(name: "xTicksToWait", arg: 4, scope: !3871, file: !3, line: 3922, type: !59)
!3879 = !DILocalVariable(name: "xTimeToWake", scope: !3871, file: !3, line: 3924, type: !59)
!3880 = !DILocalVariable(name: "xReturn", scope: !3871, file: !3, line: 3925, type: !41)
!3881 = !DILocation(line: 0, scope: !3871)
!3882 = !DILocation(line: 3927, column: 3, scope: !3871)
!3883 = !DILocation(line: 3930, column: 8, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !3, line: 3930, column: 8)
!3885 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 3928, column: 3)
!3886 = !DILocation(line: 3930, column: 22, scope: !3884)
!3887 = !DILocation(line: 3930, column: 35, scope: !3884)
!3888 = !DILocation(line: 3930, column: 8, scope: !3885)
!3889 = !DILocation(line: 3935, column: 38, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3884, file: !3, line: 3931, column: 4)
!3891 = !DILocation(line: 3935, column: 5, scope: !3890)
!3892 = !DILocation(line: 3935, column: 19, scope: !3890)
!3893 = !DILocation(line: 3935, column: 35, scope: !3890)
!3894 = !DILocation(line: 3938, column: 5, scope: !3890)
!3895 = !DILocation(line: 3938, column: 19, scope: !3890)
!3896 = !DILocation(line: 3938, column: 32, scope: !3890)
!3897 = !DILocation(line: 3940, column: 22, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 3940, column: 9)
!3899 = !DILocation(line: 3940, column: 9, scope: !3890)
!3900 = !DILocation(line: 3944, column: 27, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3944, column: 10)
!3902 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 3941, column: 5)
!3903 = !DILocation(line: 3944, column: 41, scope: !3901)
!3904 = !DILocation(line: 3944, column: 10, scope: !3901)
!3905 = !DILocation(line: 3944, column: 62, scope: !3901)
!3906 = !DILocation(line: 3944, column: 10, scope: !3902)
!3907 = !DILocation(line: 3949, column: 7, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3901, file: !3, line: 3945, column: 6)
!3909 = !DILocation(line: 3950, column: 6, scope: !3908)
!3910 = !DILocation(line: 3958, column: 24, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !3, line: 3958, column: 11)
!3912 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3957, column: 6)
!3913 = !DILocation(line: 3958, column: 11, scope: !3912)
!3914 = !DILocation(line: 3964, column: 48, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 3959, column: 7)
!3916 = !DILocation(line: 3964, column: 62, scope: !3915)
!3917 = !DILocation(line: 3964, column: 8, scope: !3915)
!3918 = !DILocation(line: 3965, column: 7, scope: !3915)
!3919 = !DILocation(line: 3972, column: 22, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 3967, column: 7)
!3921 = !DILocation(line: 3972, column: 33, scope: !3920)
!3922 = !DILocation(line: 3973, column: 8, scope: !3920)
!3923 = !DILocation(line: 3991, column: 6, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 3991, column: 6)
!3925 = !{i64 2148495509}
!3926 = !{i64 2148495549}
!3927 = !DILocation(line: 3992, column: 5, scope: !3902)
!3928 = !DILocation(line: 4003, column: 3, scope: !3871)
!3929 = !DILocation(line: 4005, column: 3, scope: !3871)
!3930 = !DILocation(line: 4007, column: 29, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 4007, column: 8)
!3932 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 4006, column: 3)
!3933 = !DILocation(line: 4007, column: 8, scope: !3932)
!3934 = !DILocation(line: 4011, column: 29, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 4008, column: 4)
!3936 = !DILocation(line: 4011, column: 43, scope: !3935)
!3937 = !DILocation(line: 4011, column: 27, scope: !3935)
!3938 = !DILocation(line: 4012, column: 4, scope: !3935)
!3939 = !DILocation(line: 4018, column: 8, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 4018, column: 8)
!3941 = !DILocation(line: 4018, column: 22, scope: !3940)
!3942 = !DILocation(line: 4018, column: 35, scope: !3940)
!3943 = !DILocation(line: 4018, column: 8, scope: !3932)
!3944 = !DILocation(line: 4027, column: 38, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 4024, column: 4)
!3946 = !DILocation(line: 4027, column: 5, scope: !3945)
!3947 = !DILocation(line: 4027, column: 19, scope: !3945)
!3948 = !DILocation(line: 4027, column: 35, scope: !3945)
!3949 = !DILocation(line: 0, scope: !3940)
!3950 = !DILocation(line: 4031, column: 4, scope: !3932)
!3951 = !DILocation(line: 4031, column: 18, scope: !3932)
!3952 = !DILocation(line: 4031, column: 31, scope: !3932)
!3953 = !DILocation(line: 4033, column: 3, scope: !3871)
!3954 = !DILocation(line: 4035, column: 3, scope: !3871)
!3955 = distinct !DISubprogram(name: "xTaskNotify", scope: !3, file: !3, line: 4043, type: !3956, scopeLine: 4044, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3959)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{!41, !40, !38, !3958}
!3958 = !DIDerivedType(tag: DW_TAG_typedef, name: "eNotifyAction", file: !12, line: 129, baseType: !19)
!3959 = !{!3960, !3961, !3962, !3963, !3964, !3965}
!3960 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !3955, file: !3, line: 4043, type: !40)
!3961 = !DILocalVariable(name: "ulValue", arg: 2, scope: !3955, file: !3, line: 4043, type: !38)
!3962 = !DILocalVariable(name: "eAction", arg: 3, scope: !3955, file: !3, line: 4043, type: !3958)
!3963 = !DILocalVariable(name: "pxTCB", scope: !3955, file: !3, line: 4045, type: !45)
!3964 = !DILocalVariable(name: "eOriginalNotifyState", scope: !3955, file: !3, line: 4046, type: !80)
!3965 = !DILocalVariable(name: "xReturn", scope: !3955, file: !3, line: 4047, type: !41)
!3966 = !DILocation(line: 0, scope: !3955)
!3967 = !DILocation(line: 4049, column: 3, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3955, file: !3, line: 4049, column: 3)
!3969 = !DILocation(line: 4049, column: 3, scope: !3955)
!3970 = !DILocation(line: 4049, column: 3, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 4049, column: 3)
!3972 = !DILocation(line: 4052, column: 3, scope: !3955)
!3973 = !DILocation(line: 4054, column: 34, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3955, file: !3, line: 4053, column: 3)
!3975 = !DILocation(line: 4056, column: 24, scope: !3974)
!3976 = !DILocation(line: 4058, column: 4, scope: !3974)
!3977 = !DILocation(line: 4061, column: 13, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 4059, column: 4)
!3979 = !DILocation(line: 4061, column: 29, scope: !3978)
!3980 = !DILocation(line: 4062, column: 6, scope: !3978)
!3981 = !DILocation(line: 4065, column: 15, scope: !3978)
!3982 = !DILocation(line: 4065, column: 32, scope: !3978)
!3983 = !DILocation(line: 4066, column: 6, scope: !3978)
!3984 = !DILocation(line: 4069, column: 13, scope: !3978)
!3985 = !DILocation(line: 4069, column: 29, scope: !3978)
!3986 = !DILocation(line: 4070, column: 6, scope: !3978)
!3987 = !DILocation(line: 4073, column: 31, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 4073, column: 10)
!3989 = !DILocation(line: 4073, column: 10, scope: !3978)
!3990 = !DILocation(line: 4075, column: 14, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 4074, column: 6)
!3992 = !DILocation(line: 4075, column: 30, scope: !3991)
!3993 = !DILocation(line: 4076, column: 6, scope: !3991)
!3994 = !DILocation(line: 4093, column: 29, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 4093, column: 8)
!3996 = !DILocation(line: 4093, column: 8, scope: !3974)
!3997 = !DILocation(line: 4095, column: 38, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 4094, column: 4)
!3999 = !DILocation(line: 4095, column: 14, scope: !3998)
!4000 = !DILocation(line: 4096, column: 5, scope: !3998)
!4001 = !DILocation(line: 4099, column: 5, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 4099, column: 5)
!4003 = !DILocation(line: 4099, column: 5, scope: !3998)
!4004 = !DILocation(line: 4099, column: 5, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 4099, column: 5)
!4006 = !DILocation(line: 4101, column: 16, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 4101, column: 9)
!4008 = !DILocation(line: 4101, column: 29, scope: !4007)
!4009 = !DILocation(line: 4101, column: 43, scope: !4007)
!4010 = !DILocation(line: 4101, column: 27, scope: !4007)
!4011 = !DILocation(line: 4101, column: 9, scope: !3998)
!4012 = !DILocation(line: 4105, column: 6, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 4105, column: 6)
!4014 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 4102, column: 5)
!4015 = !{i64 2148497134}
!4016 = !{i64 2148497174}
!4017 = !DILocation(line: 4106, column: 5, scope: !4014)
!4018 = !DILocation(line: 4117, column: 3, scope: !3955)
!4019 = !DILocation(line: 4119, column: 3, scope: !3955)
!4020 = distinct !DISubprogram(name: "xTaskNotifyFromISR", scope: !3, file: !3, line: 4127, type: !4021, scopeLine: 4128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4023)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!41, !40, !38, !3958, !288}
!4023 = !{!4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031}
!4024 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !4020, file: !3, line: 4127, type: !40)
!4025 = !DILocalVariable(name: "ulValue", arg: 2, scope: !4020, file: !3, line: 4127, type: !38)
!4026 = !DILocalVariable(name: "eAction", arg: 3, scope: !4020, file: !3, line: 4127, type: !3958)
!4027 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !4020, file: !3, line: 4127, type: !288)
!4028 = !DILocalVariable(name: "pxTCB", scope: !4020, file: !3, line: 4129, type: !45)
!4029 = !DILocalVariable(name: "eOriginalNotifyState", scope: !4020, file: !3, line: 4130, type: !80)
!4030 = !DILocalVariable(name: "xReturn", scope: !4020, file: !3, line: 4131, type: !41)
!4031 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !4020, file: !3, line: 4132, type: !27)
!4032 = !DILocation(line: 0, scope: !4020)
!4033 = !DILocation(line: 4134, column: 3, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 4134, column: 3)
!4035 = !DILocation(line: 4134, column: 3, scope: !4020)
!4036 = !DILocation(line: 4134, column: 3, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 4134, column: 3)
!4038 = !DILocation(line: 4152, column: 3, scope: !4020)
!4039 = !DILocation(line: 231, column: 2, scope: !2642, inlinedAt: !4040)
!4040 = distinct !DILocation(line: 4156, column: 28, scope: !4020)
!4041 = !DILocation(line: 0, scope: !2642, inlinedAt: !4040)
!4042 = !DILocation(line: 4158, column: 34, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 4157, column: 3)
!4044 = !DILocation(line: 4160, column: 24, scope: !4043)
!4045 = !DILocation(line: 4162, column: 4, scope: !4043)
!4046 = !DILocation(line: 4165, column: 13, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 4163, column: 4)
!4048 = !DILocation(line: 4165, column: 29, scope: !4047)
!4049 = !DILocation(line: 4166, column: 6, scope: !4047)
!4050 = !DILocation(line: 4169, column: 15, scope: !4047)
!4051 = !DILocation(line: 4169, column: 32, scope: !4047)
!4052 = !DILocation(line: 4170, column: 6, scope: !4047)
!4053 = !DILocation(line: 4173, column: 13, scope: !4047)
!4054 = !DILocation(line: 4173, column: 29, scope: !4047)
!4055 = !DILocation(line: 4174, column: 6, scope: !4047)
!4056 = !DILocation(line: 4177, column: 31, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 4177, column: 10)
!4058 = !DILocation(line: 4177, column: 10, scope: !4047)
!4059 = !DILocation(line: 4179, column: 14, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 4178, column: 6)
!4061 = !DILocation(line: 4179, column: 30, scope: !4060)
!4062 = !DILocation(line: 4180, column: 6, scope: !4060)
!4063 = !DILocation(line: 4197, column: 29, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 4197, column: 8)
!4065 = !DILocation(line: 4197, column: 8, scope: !4043)
!4066 = !DILocation(line: 4200, column: 5, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 4200, column: 5)
!4068 = distinct !DILexicalBlock(scope: !4064, file: !3, line: 4198, column: 4)
!4069 = !DILocation(line: 4200, column: 5, scope: !4068)
!4070 = !DILocation(line: 4200, column: 5, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 4200, column: 5)
!4072 = !DILocation(line: 4202, column: 9, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 4202, column: 9)
!4074 = !DILocation(line: 4202, column: 30, scope: !4073)
!4075 = !DILocation(line: 4202, column: 9, scope: !4068)
!4076 = !DILocation(line: 4204, column: 39, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 4203, column: 5)
!4078 = !DILocation(line: 4204, column: 15, scope: !4077)
!4079 = !DILocation(line: 4205, column: 6, scope: !4077)
!4080 = !DILocation(line: 4206, column: 5, scope: !4077)
!4081 = !DILocation(line: 4211, column: 6, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 4208, column: 5)
!4083 = !DILocation(line: 4214, column: 16, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 4214, column: 9)
!4085 = !DILocation(line: 4214, column: 29, scope: !4084)
!4086 = !DILocation(line: 4214, column: 43, scope: !4084)
!4087 = !DILocation(line: 4214, column: 27, scope: !4084)
!4088 = !DILocation(line: 4214, column: 9, scope: !4068)
!4089 = !DILocation(line: 4220, column: 34, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4091, file: !3, line: 4219, column: 6)
!4091 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 4218, column: 10)
!4092 = distinct !DILexicalBlock(scope: !4084, file: !3, line: 4215, column: 5)
!4093 = !DILocation(line: 4221, column: 6, scope: !4090)
!4094 = !DILocation(line: 0, scope: !2655, inlinedAt: !4095)
!4095 = distinct !DILocation(line: 4229, column: 3, scope: !4020)
!4096 = !DILocation(line: 249, column: 2, scope: !2655, inlinedAt: !4095)
!4097 = !DILocation(line: 4231, column: 3, scope: !4020)
!4098 = distinct !DISubprogram(name: "vTaskNotifyGiveFromISR", scope: !3, file: !3, line: 4239, type: !4099, scopeLine: 4240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4101)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{null, !40, !288}
!4101 = !{!4102, !4103, !4104, !4105, !4106}
!4102 = !DILocalVariable(name: "xTaskToNotify", arg: 1, scope: !4098, file: !3, line: 4239, type: !40)
!4103 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !4098, file: !3, line: 4239, type: !288)
!4104 = !DILocalVariable(name: "pxTCB", scope: !4098, file: !3, line: 4241, type: !45)
!4105 = !DILocalVariable(name: "eOriginalNotifyState", scope: !4098, file: !3, line: 4242, type: !80)
!4106 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !4098, file: !3, line: 4243, type: !27)
!4107 = !DILocation(line: 0, scope: !4098)
!4108 = !DILocation(line: 4245, column: 3, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 4245, column: 3)
!4110 = !DILocation(line: 4245, column: 3, scope: !4098)
!4111 = !DILocation(line: 4245, column: 3, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 4245, column: 3)
!4113 = !DILocation(line: 4263, column: 3, scope: !4098)
!4114 = !DILocation(line: 231, column: 2, scope: !2642, inlinedAt: !4115)
!4115 = distinct !DILocation(line: 4267, column: 28, scope: !4098)
!4116 = !DILocation(line: 0, scope: !2642, inlinedAt: !4115)
!4117 = !DILocation(line: 4269, column: 34, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 4268, column: 3)
!4119 = !DILocation(line: 4270, column: 24, scope: !4118)
!4120 = !DILocation(line: 4274, column: 13, scope: !4118)
!4121 = !DILocation(line: 4274, column: 30, scope: !4118)
!4122 = !DILocation(line: 4278, column: 29, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 4278, column: 8)
!4124 = !DILocation(line: 4278, column: 8, scope: !4118)
!4125 = !DILocation(line: 4281, column: 5, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 4281, column: 5)
!4127 = distinct !DILexicalBlock(scope: !4123, file: !3, line: 4279, column: 4)
!4128 = !DILocation(line: 4281, column: 5, scope: !4127)
!4129 = !DILocation(line: 4281, column: 5, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 4281, column: 5)
!4131 = !DILocation(line: 4283, column: 9, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 4283, column: 9)
!4133 = !DILocation(line: 4283, column: 30, scope: !4132)
!4134 = !DILocation(line: 4283, column: 9, scope: !4127)
!4135 = !DILocation(line: 4285, column: 39, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 4284, column: 5)
!4137 = !DILocation(line: 4285, column: 15, scope: !4136)
!4138 = !DILocation(line: 4286, column: 6, scope: !4136)
!4139 = !DILocation(line: 4287, column: 5, scope: !4136)
!4140 = !DILocation(line: 4292, column: 6, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4132, file: !3, line: 4289, column: 5)
!4142 = !DILocation(line: 4295, column: 16, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 4295, column: 9)
!4144 = !DILocation(line: 4295, column: 29, scope: !4143)
!4145 = !DILocation(line: 4295, column: 43, scope: !4143)
!4146 = !DILocation(line: 4295, column: 27, scope: !4143)
!4147 = !DILocation(line: 4295, column: 9, scope: !4127)
!4148 = !DILocation(line: 4301, column: 34, scope: !4149)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 4300, column: 6)
!4150 = distinct !DILexicalBlock(scope: !4151, file: !3, line: 4299, column: 10)
!4151 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 4296, column: 5)
!4152 = !DILocation(line: 4302, column: 6, scope: !4149)
!4153 = !DILocation(line: 0, scope: !2655, inlinedAt: !4154)
!4154 = distinct !DILocation(line: 4310, column: 3, scope: !4098)
!4155 = !DILocation(line: 249, column: 2, scope: !2655, inlinedAt: !4154)
!4156 = !DILocation(line: 4311, column: 2, scope: !4098)
!4157 = distinct !DISubprogram(name: "uxTaskGetBottomOfStack", scope: !3, file: !3, line: 4351, type: !2620, scopeLine: 4352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4158)
!4158 = !{!4159, !4160}
!4159 = !DILocalVariable(name: "TaskHandle_t", arg: 1, scope: !4157, file: !3, line: 4351, type: !40)
!4160 = !DILocalVariable(name: "pxTCB", scope: !4157, file: !3, line: 4353, type: !45)
!4161 = !DILocation(line: 0, scope: !4157)
!4162 = !DILocation(line: 4355, column: 24, scope: !4157)
!4163 = !DILocation(line: 4355, column: 10, scope: !4157)
!4164 = !DILocation(line: 4355, column: 47, scope: !4157)
!4165 = !DILocation(line: 4355, column: 62, scope: !4157)
!4166 = !DILocation(line: 4358, column: 33, scope: !4157)
!4167 = !DILocation(line: 4358, column: 9, scope: !4157)
!4168 = !DILocation(line: 4358, column: 2, scope: !4157)
!4169 = distinct !DISubprogram(name: "vListInitialise", scope: !1792, file: !1792, line: 79, type: !4170, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !4173)
!4170 = !DISubroutineType(types: !4171)
!4171 = !{null, !4172}
!4172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1804)
!4173 = !{!4174}
!4174 = !DILocalVariable(name: "pxList", arg: 1, scope: !4169, file: !1792, line: 79, type: !4172)
!4175 = !DILocation(line: 0, scope: !4169)
!4176 = !DILocation(line: 84, column: 48, scope: !4169)
!4177 = !DILocation(line: 84, column: 10, scope: !4169)
!4178 = !DILocation(line: 84, column: 18, scope: !4169)
!4179 = !DILocation(line: 88, column: 19, scope: !4169)
!4180 = !DILocation(line: 88, column: 30, scope: !4169)
!4181 = !DILocation(line: 92, column: 19, scope: !4169)
!4182 = !DILocation(line: 92, column: 26, scope: !4169)
!4183 = !DILocation(line: 93, column: 19, scope: !4169)
!4184 = !DILocation(line: 93, column: 30, scope: !4169)
!4185 = !DILocation(line: 95, column: 10, scope: !4169)
!4186 = !DILocation(line: 95, column: 26, scope: !4169)
!4187 = !DILocation(line: 101, column: 1, scope: !4169)
!4188 = distinct !DISubprogram(name: "vListInitialiseItem", scope: !1792, file: !1792, line: 104, type: !4189, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !4192)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{null, !4191}
!4191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!4192 = !{!4193}
!4193 = !DILocalVariable(name: "pxItem", arg: 1, scope: !4188, file: !1792, line: 104, type: !4191)
!4194 = !DILocation(line: 0, scope: !4188)
!4195 = !DILocation(line: 107, column: 10, scope: !4188)
!4196 = !DILocation(line: 107, column: 22, scope: !4188)
!4197 = !DILocation(line: 113, column: 1, scope: !4188)
!4198 = distinct !DISubprogram(name: "vListInsertEnd", scope: !1792, file: !1792, line: 116, type: !4199, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !4201)
!4199 = !DISubroutineType(types: !4200)
!4200 = !{null, !4172, !4191}
!4201 = !{!4202, !4203, !4204}
!4202 = !DILocalVariable(name: "pxList", arg: 1, scope: !4198, file: !1792, line: 116, type: !4172)
!4203 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !4198, file: !1792, line: 116, type: !4191)
!4204 = !DILocalVariable(name: "pxIndex", scope: !4198, file: !1792, line: 118, type: !4191)
!4205 = !DILocation(line: 0, scope: !4198)
!4206 = !DILocation(line: 118, column: 38, scope: !4198)
!4207 = !DILocation(line: 129, column: 17, scope: !4198)
!4208 = !DILocation(line: 129, column: 24, scope: !4198)
!4209 = !DILocation(line: 130, column: 39, scope: !4198)
!4210 = !DILocation(line: 130, column: 17, scope: !4198)
!4211 = !DILocation(line: 130, column: 28, scope: !4198)
!4212 = !DILocation(line: 131, column: 11, scope: !4198)
!4213 = !DILocation(line: 131, column: 23, scope: !4198)
!4214 = !DILocation(line: 131, column: 30, scope: !4198)
!4215 = !DILocation(line: 132, column: 22, scope: !4198)
!4216 = !DILocation(line: 135, column: 17, scope: !4198)
!4217 = !DILocation(line: 135, column: 29, scope: !4198)
!4218 = !DILocation(line: 137, column: 12, scope: !4198)
!4219 = !DILocation(line: 137, column: 29, scope: !4198)
!4220 = !DILocation(line: 138, column: 1, scope: !4198)
!4221 = distinct !DISubprogram(name: "vListInsert", scope: !1792, file: !1792, line: 141, type: !4199, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !4222)
!4222 = !{!4223, !4224, !4225, !4226}
!4223 = !DILocalVariable(name: "pxList", arg: 1, scope: !4221, file: !1792, line: 141, type: !4172)
!4224 = !DILocalVariable(name: "pxNewListItem", arg: 2, scope: !4221, file: !1792, line: 141, type: !4191)
!4225 = !DILocalVariable(name: "pxIterator", scope: !4221, file: !1792, line: 143, type: !1794)
!4226 = !DILocalVariable(name: "xValueOfInsertion", scope: !4221, file: !1792, line: 144, type: !2324)
!4227 = !DILocation(line: 0, scope: !4221)
!4228 = !DILocation(line: 144, column: 53, scope: !4221)
!4229 = !DILocation(line: 160, column: 24, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4221, file: !1792, line: 160, column: 6)
!4231 = !DILocation(line: 160, column: 6, scope: !4221)
!4232 = !DILocation(line: 162, column: 33, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4230, file: !1792, line: 161, column: 2)
!4234 = !DILocation(line: 195, column: 38, scope: !4221)
!4235 = !DILocation(line: 163, column: 2, scope: !4233)
!4236 = !DILocation(line: 188, column: 49, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4238, file: !1792, line: 188, column: 3)
!4238 = distinct !DILexicalBlock(scope: !4230, file: !1792, line: 165, column: 2)
!4239 = !DILocation(line: 188, column: 21, scope: !4237)
!4240 = !DILocation(line: 188, column: 8, scope: !4237)
!4241 = !DILocation(line: 0, scope: !4237)
!4242 = !DILocation(line: 188, column: 73, scope: !4243)
!4243 = distinct !DILexicalBlock(scope: !4237, file: !1792, line: 188, column: 3)
!4244 = !DILocation(line: 188, column: 81, scope: !4243)
!4245 = !DILocation(line: 188, column: 92, scope: !4243)
!4246 = !DILocation(line: 188, column: 3, scope: !4237)
!4247 = distinct !{!4247, !4246, !4248}
!4248 = !DILocation(line: 192, column: 3, scope: !4237)
!4249 = !DILocation(line: 0, scope: !4230)
!4250 = !DILocation(line: 195, column: 17, scope: !4221)
!4251 = !DILocation(line: 195, column: 24, scope: !4221)
!4252 = !DILocation(line: 196, column: 25, scope: !4221)
!4253 = !DILocation(line: 196, column: 36, scope: !4221)
!4254 = !DILocation(line: 197, column: 17, scope: !4221)
!4255 = !DILocation(line: 197, column: 28, scope: !4221)
!4256 = !DILocation(line: 198, column: 21, scope: !4221)
!4257 = !DILocation(line: 202, column: 17, scope: !4221)
!4258 = !DILocation(line: 202, column: 29, scope: !4221)
!4259 = !DILocation(line: 204, column: 12, scope: !4221)
!4260 = !DILocation(line: 204, column: 29, scope: !4221)
!4261 = !DILocation(line: 205, column: 1, scope: !4221)
!4262 = distinct !DISubprogram(name: "uxListRemove", scope: !1792, file: !1792, line: 208, type: !4263, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !4265)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!27, !4191}
!4265 = !{!4266, !4267}
!4266 = !DILocalVariable(name: "pxItemToRemove", arg: 1, scope: !4262, file: !1792, line: 208, type: !4191)
!4267 = !DILocalVariable(name: "pxList", scope: !4262, file: !1792, line: 212, type: !4172)
!4268 = !DILocation(line: 0, scope: !4262)
!4269 = !DILocation(line: 212, column: 54, scope: !4262)
!4270 = !DILocation(line: 214, column: 55, scope: !4262)
!4271 = !DILocation(line: 214, column: 18, scope: !4262)
!4272 = !DILocation(line: 214, column: 26, scope: !4262)
!4273 = !DILocation(line: 214, column: 37, scope: !4262)
!4274 = !DILocation(line: 215, column: 55, scope: !4262)
!4275 = !DILocation(line: 215, column: 18, scope: !4262)
!4276 = !DILocation(line: 215, column: 30, scope: !4262)
!4277 = !DILocation(line: 215, column: 37, scope: !4262)
!4278 = !DILocation(line: 218, column: 14, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4262, file: !1792, line: 218, column: 6)
!4280 = !DILocation(line: 218, column: 22, scope: !4279)
!4281 = !DILocation(line: 218, column: 6, scope: !4262)
!4282 = !DILocation(line: 220, column: 37, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4279, file: !1792, line: 219, column: 2)
!4284 = !DILocation(line: 220, column: 19, scope: !4283)
!4285 = !DILocation(line: 221, column: 2, scope: !4283)
!4286 = !DILocation(line: 227, column: 30, scope: !4262)
!4287 = !DILocation(line: 228, column: 12, scope: !4262)
!4288 = !DILocation(line: 228, column: 29, scope: !4262)
!4289 = !DILocation(line: 230, column: 2, scope: !4262)
!4290 = distinct !DISubprogram(name: "xQueueGenericReset", scope: !171, file: !171, line: 260, type: !4291, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4293)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{!41, !229, !41}
!4293 = !{!4294, !4295, !4296}
!4294 = !DILocalVariable(name: "xQueue", arg: 1, scope: !4290, file: !171, line: 260, type: !229)
!4295 = !DILocalVariable(name: "xNewQueue", arg: 2, scope: !4290, file: !171, line: 260, type: !41)
!4296 = !DILocalVariable(name: "pxQueue", scope: !4290, file: !171, line: 262, type: !4297)
!4297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!4298 = !DILocation(line: 0, scope: !4290)
!4299 = !DILocation(line: 264, column: 2, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4290, file: !171, line: 264, column: 2)
!4301 = !DILocation(line: 264, column: 2, scope: !4290)
!4302 = !DILocation(line: 264, column: 2, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4300, file: !171, line: 264, column: 2)
!4304 = !DILocation(line: 266, column: 2, scope: !4290)
!4305 = !DILocation(line: 268, column: 30, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4290, file: !171, line: 267, column: 2)
!4307 = !DILocation(line: 268, column: 50, scope: !4306)
!4308 = !DILocation(line: 268, column: 70, scope: !4306)
!4309 = !DILocation(line: 268, column: 59, scope: !4306)
!4310 = !DILocation(line: 268, column: 37, scope: !4306)
!4311 = !DILocation(line: 268, column: 12, scope: !4306)
!4312 = !DILocation(line: 268, column: 19, scope: !4306)
!4313 = !DILocation(line: 269, column: 12, scope: !4306)
!4314 = !DILocation(line: 269, column: 30, scope: !4306)
!4315 = !DILocation(line: 270, column: 12, scope: !4306)
!4316 = !DILocation(line: 270, column: 22, scope: !4306)
!4317 = !DILocation(line: 271, column: 67, scope: !4306)
!4318 = !DILocation(line: 271, column: 90, scope: !4306)
!4319 = !DILocation(line: 271, column: 43, scope: !4306)
!4320 = !DILocation(line: 271, column: 12, scope: !4306)
!4321 = !DILocation(line: 271, column: 14, scope: !4306)
!4322 = !DILocation(line: 271, column: 25, scope: !4306)
!4323 = !DILocation(line: 272, column: 12, scope: !4306)
!4324 = !DILocation(line: 272, column: 20, scope: !4306)
!4325 = !DILocation(line: 273, column: 12, scope: !4306)
!4326 = !DILocation(line: 273, column: 20, scope: !4306)
!4327 = !DILocation(line: 275, column: 17, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4306, file: !171, line: 275, column: 7)
!4329 = !DILocation(line: 0, scope: !4328)
!4330 = !DILocation(line: 275, column: 7, scope: !4306)
!4331 = !DILocation(line: 282, column: 8, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !171, line: 282, column: 8)
!4333 = distinct !DILexicalBlock(scope: !4328, file: !171, line: 276, column: 3)
!4334 = !DILocation(line: 282, column: 8, scope: !4333)
!4335 = !DILocation(line: 284, column: 9, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !171, line: 284, column: 9)
!4337 = distinct !DILexicalBlock(scope: !4332, file: !171, line: 283, column: 4)
!4338 = !DILocation(line: 284, column: 71, scope: !4336)
!4339 = !DILocation(line: 284, column: 9, scope: !4337)
!4340 = !DILocation(line: 286, column: 6, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !171, line: 286, column: 6)
!4342 = distinct !DILexicalBlock(scope: !4336, file: !171, line: 285, column: 5)
!4343 = !{i64 2148403375}
!4344 = !{i64 2148403415}
!4345 = !DILocation(line: 287, column: 5, scope: !4342)
!4346 = !DILocation(line: 301, column: 33, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4328, file: !171, line: 299, column: 3)
!4348 = !DILocation(line: 301, column: 4, scope: !4347)
!4349 = !DILocation(line: 302, column: 33, scope: !4347)
!4350 = !DILocation(line: 302, column: 4, scope: !4347)
!4351 = !DILocation(line: 305, column: 2, scope: !4290)
!4352 = !DILocation(line: 309, column: 2, scope: !4290)
!4353 = distinct !DISubprogram(name: "xQueueGenericCreate", scope: !171, file: !171, line: 313, type: !4354, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4356)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{!229, !3132, !3132, !121}
!4356 = !{!4357, !4358, !4359, !4360, !4361, !4362, !4363}
!4357 = !DILocalVariable(name: "uxQueueLength", arg: 1, scope: !4353, file: !171, line: 313, type: !3132)
!4358 = !DILocalVariable(name: "uxItemSize", arg: 2, scope: !4353, file: !171, line: 313, type: !3132)
!4359 = !DILocalVariable(name: "ucQueueType", arg: 3, scope: !4353, file: !171, line: 313, type: !121)
!4360 = !DILocalVariable(name: "pxNewQueue", scope: !4353, file: !171, line: 315, type: !173)
!4361 = !DILocalVariable(name: "xQueueSizeInBytes", scope: !4353, file: !171, line: 316, type: !99)
!4362 = !DILocalVariable(name: "xReturn", scope: !4353, file: !171, line: 317, type: !229)
!4363 = !DILocalVariable(name: "pcAllocatedBuffer", scope: !4353, file: !171, line: 318, type: !179)
!4364 = !DILocation(line: 0, scope: !4353)
!4365 = !DILocation(line: 324, column: 2, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4353, file: !171, line: 324, column: 2)
!4367 = !DILocation(line: 324, column: 2, scope: !4353)
!4368 = !DILocation(line: 324, column: 2, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4366, file: !171, line: 324, column: 2)
!4370 = !DILocation(line: 326, column: 17, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4353, file: !171, line: 326, column: 6)
!4372 = !DILocation(line: 326, column: 6, scope: !4353)
!4373 = !DILocation(line: 339, column: 35, scope: !4353)
!4374 = !DILocation(line: 341, column: 24, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4353, file: !171, line: 341, column: 6)
!4376 = !DILocation(line: 341, column: 6, scope: !4353)
!4377 = !DILocation(line: 345, column: 7, scope: !4378)
!4378 = distinct !DILexicalBlock(scope: !4375, file: !171, line: 342, column: 2)
!4379 = !DILocation(line: 0, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4378, file: !171, line: 345, column: 7)
!4381 = !DILocation(line: 362, column: 15, scope: !4378)
!4382 = !DILocation(line: 362, column: 24, scope: !4378)
!4383 = !DILocation(line: 363, column: 15, scope: !4378)
!4384 = !DILocation(line: 363, column: 26, scope: !4378)
!4385 = !DILocation(line: 364, column: 12, scope: !4378)
!4386 = !DILocation(line: 368, column: 16, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4378, file: !171, line: 367, column: 3)
!4388 = !DILocation(line: 368, column: 28, scope: !4387)
!4389 = !DILocation(line: 386, column: 2, scope: !4353)
!4390 = !DILocation(line: 386, column: 2, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !171, line: 386, column: 2)
!4392 = distinct !DILexicalBlock(scope: !4353, file: !171, line: 386, column: 2)
!4393 = !DILocation(line: 388, column: 2, scope: !4353)
!4394 = distinct !DISubprogram(name: "xQueueCreateMutex", scope: !171, file: !171, line: 394, type: !4395, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4397)
!4395 = !DISubroutineType(types: !4396)
!4396 = !{!229, !121}
!4397 = !{!4398, !4399}
!4398 = !DILocalVariable(name: "ucQueueType", arg: 1, scope: !4394, file: !171, line: 394, type: !121)
!4399 = !DILocalVariable(name: "pxNewQueue", scope: !4394, file: !171, line: 396, type: !173)
!4400 = !DILocation(line: 0, scope: !4394)
!4401 = !DILocation(line: 403, column: 30, scope: !4394)
!4402 = !DILocation(line: 404, column: 7, scope: !4394)
!4403 = !DILocation(line: 407, column: 16, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !171, line: 405, column: 3)
!4405 = distinct !DILexicalBlock(scope: !4394, file: !171, line: 404, column: 7)
!4406 = !DILocation(line: 407, column: 30, scope: !4404)
!4407 = !DILocation(line: 408, column: 16, scope: !4404)
!4408 = !DILocation(line: 408, column: 28, scope: !4404)
!4409 = !DILocation(line: 412, column: 16, scope: !4404)
!4410 = !DILocation(line: 412, column: 26, scope: !4404)
!4411 = !DILocation(line: 413, column: 16, scope: !4404)
!4412 = !DILocation(line: 413, column: 18, scope: !4404)
!4413 = !DILocation(line: 413, column: 29, scope: !4404)
!4414 = !DILocation(line: 418, column: 16, scope: !4404)
!4415 = !DILocation(line: 418, column: 34, scope: !4404)
!4416 = !DILocation(line: 419, column: 16, scope: !4404)
!4417 = !DILocation(line: 419, column: 25, scope: !4404)
!4418 = !DILocation(line: 420, column: 16, scope: !4404)
!4419 = !DILocation(line: 420, column: 27, scope: !4404)
!4420 = !DILocation(line: 421, column: 16, scope: !4404)
!4421 = !DILocation(line: 421, column: 24, scope: !4404)
!4422 = !DILocation(line: 422, column: 16, scope: !4404)
!4423 = !DILocation(line: 422, column: 24, scope: !4404)
!4424 = !DILocation(line: 426, column: 17, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4404, file: !171, line: 425, column: 4)
!4426 = !DILocation(line: 426, column: 29, scope: !4425)
!4427 = !DILocation(line: 437, column: 36, scope: !4404)
!4428 = !DILocation(line: 437, column: 4, scope: !4404)
!4429 = !DILocation(line: 438, column: 36, scope: !4404)
!4430 = !DILocation(line: 438, column: 4, scope: !4404)
!4431 = !DILocation(line: 443, column: 13, scope: !4404)
!4432 = !DILocation(line: 450, column: 3, scope: !4394)
!4433 = !DILocation(line: 450, column: 3, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !171, line: 450, column: 3)
!4435 = distinct !DILexicalBlock(scope: !4394, file: !171, line: 450, column: 3)
!4436 = !DILocation(line: 451, column: 3, scope: !4394)
!4437 = distinct !DISubprogram(name: "xQueueGenericSend", scope: !171, file: !171, line: 613, type: !4438, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4442)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{!41, !229, !4440, !59, !4441}
!4440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !720)
!4441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !41)
!4442 = !{!4443, !4444, !4445, !4446, !4447, !4448, !4449, !4455}
!4443 = !DILocalVariable(name: "xQueue", arg: 1, scope: !4437, file: !171, line: 613, type: !229)
!4444 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !4437, file: !171, line: 613, type: !4440)
!4445 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !4437, file: !171, line: 613, type: !59)
!4446 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !4437, file: !171, line: 613, type: !4441)
!4447 = !DILocalVariable(name: "xEntryTimeSet", scope: !4437, file: !171, line: 615, type: !41)
!4448 = !DILocalVariable(name: "xYieldRequired", scope: !4437, file: !171, line: 615, type: !41)
!4449 = !DILocalVariable(name: "xTimeOut", scope: !4437, file: !171, line: 616, type: !4450)
!4450 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeOut_t", file: !12, line: 138, baseType: !4451)
!4451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xTIME_OUT", file: !12, line: 134, size: 64, elements: !4452)
!4452 = !{!4453, !4454}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "xOverflowCount", scope: !4451, file: !12, line: 136, baseType: !41, size: 32)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "xTimeOnEntering", scope: !4451, file: !12, line: 137, baseType: !59, size: 32, offset: 32)
!4455 = !DILocalVariable(name: "pxQueue", scope: !4437, file: !171, line: 617, type: !4297)
!4456 = !DILocation(line: 0, scope: !4437)
!4457 = !DILocation(line: 616, column: 1, scope: !4437)
!4458 = !DILocation(line: 616, column: 11, scope: !4437)
!4459 = !DILocation(line: 617, column: 27, scope: !4437)
!4460 = !DILocation(line: 619, column: 2, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4437, file: !171, line: 619, column: 2)
!4462 = !DILocation(line: 619, column: 2, scope: !4437)
!4463 = !DILocation(line: 619, column: 2, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4461, file: !171, line: 619, column: 2)
!4465 = !DILocation(line: 620, column: 2, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4437, file: !171, line: 620, column: 2)
!4467 = !DILocation(line: 620, column: 2, scope: !4437)
!4468 = !DILocation(line: 620, column: 2, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4466, file: !171, line: 620, column: 2)
!4470 = !DILocation(line: 621, column: 2, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4437, file: !171, line: 621, column: 2)
!4472 = !DILocation(line: 621, column: 2, scope: !4437)
!4473 = !DILocation(line: 621, column: 2, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4471, file: !171, line: 621, column: 2)
!4475 = !DILocation(line: 624, column: 3, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !171, line: 624, column: 3)
!4477 = distinct !DILexicalBlock(scope: !4437, file: !171, line: 623, column: 2)
!4478 = !DILocation(line: 624, column: 3, scope: !4477)
!4479 = !DILocation(line: 624, column: 3, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4476, file: !171, line: 624, column: 3)
!4481 = !DILocation(line: 634, column: 3, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !171, line: 633, column: 2)
!4483 = distinct !DILexicalBlock(scope: !4484, file: !171, line: 632, column: 2)
!4484 = distinct !DILexicalBlock(scope: !4437, file: !171, line: 632, column: 2)
!4485 = !DILocation(line: 640, column: 19, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4487, file: !171, line: 640, column: 8)
!4487 = distinct !DILexicalBlock(scope: !4482, file: !171, line: 635, column: 3)
!4488 = !DILocation(line: 640, column: 48, scope: !4486)
!4489 = !DILocation(line: 640, column: 37, scope: !4486)
!4490 = !DILocation(line: 640, column: 59, scope: !4486)
!4491 = !DILocation(line: 733, column: 22, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !171, line: 733, column: 9)
!4493 = distinct !DILexicalBlock(scope: !4486, file: !171, line: 732, column: 4)
!4494 = !DILocation(line: 733, column: 9, scope: !4493)
!4495 = !DILocation(line: 643, column: 22, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4486, file: !171, line: 641, column: 4)
!4497 = !DILocation(line: 698, column: 10, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !171, line: 698, column: 10)
!4499 = distinct !DILexicalBlock(scope: !4496, file: !171, line: 695, column: 5)
!4500 = !DILocation(line: 698, column: 10, scope: !4499)
!4501 = !DILocation(line: 700, column: 11, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4503, file: !171, line: 700, column: 11)
!4503 = distinct !DILexicalBlock(scope: !4498, file: !171, line: 699, column: 6)
!4504 = !DILocation(line: 700, column: 76, scope: !4502)
!4505 = !DILocation(line: 700, column: 11, scope: !4503)
!4506 = !DILocation(line: 706, column: 8, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !171, line: 706, column: 8)
!4508 = distinct !DILexicalBlock(scope: !4502, file: !171, line: 701, column: 7)
!4509 = !{i64 2148406916}
!4510 = !{i64 2148406956}
!4511 = !DILocation(line: 707, column: 7, scope: !4508)
!4512 = !DILocation(line: 713, column: 30, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4498, file: !171, line: 713, column: 15)
!4514 = !DILocation(line: 713, column: 15, scope: !4498)
!4515 = !DILocation(line: 719, column: 7, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4517, file: !171, line: 719, column: 7)
!4517 = distinct !DILexicalBlock(scope: !4513, file: !171, line: 714, column: 6)
!4518 = !{i64 2148407418}
!4519 = !{i64 2148407458}
!4520 = !DILocation(line: 720, column: 6, scope: !4517)
!4521 = !DILocation(line: 728, column: 5, scope: !4496)
!4522 = !DILocation(line: 729, column: 5, scope: !4496)
!4523 = !DILocation(line: 737, column: 6, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4492, file: !171, line: 734, column: 5)
!4525 = !DILocation(line: 742, column: 6, scope: !4524)
!4526 = !DILocation(line: 748, column: 6, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !171, line: 745, column: 5)
!4528 = distinct !DILexicalBlock(scope: !4492, file: !171, line: 744, column: 14)
!4529 = !DILocation(line: 750, column: 5, scope: !4527)
!4530 = !DILocation(line: 758, column: 3, scope: !4482)
!4531 = !DILocation(line: 763, column: 3, scope: !4482)
!4532 = !DILocation(line: 764, column: 3, scope: !4482)
!4533 = !DILocation(line: 764, column: 3, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !171, line: 764, column: 3)
!4535 = distinct !DILexicalBlock(scope: !4482, file: !171, line: 764, column: 3)
!4536 = !DILocation(line: 764, column: 3, scope: !4535)
!4537 = !DILocation(line: 764, column: 3, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4534, file: !171, line: 764, column: 3)
!4539 = !DILocation(line: 764, column: 3, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4535, file: !171, line: 764, column: 3)
!4541 = !DILocation(line: 764, column: 3, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4540, file: !171, line: 764, column: 3)
!4543 = !DILocation(line: 767, column: 7, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4482, file: !171, line: 767, column: 7)
!4545 = !DILocation(line: 767, column: 56, scope: !4544)
!4546 = !DILocation(line: 767, column: 7, scope: !4482)
!4547 = !DILocation(line: 769, column: 8, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !171, line: 769, column: 8)
!4549 = distinct !DILexicalBlock(scope: !4544, file: !171, line: 768, column: 3)
!4550 = !DILocation(line: 769, column: 34, scope: !4548)
!4551 = !DILocation(line: 769, column: 8, scope: !4549)
!4552 = !DILocation(line: 772, column: 63, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4548, file: !171, line: 770, column: 4)
!4554 = !DILocation(line: 772, column: 5, scope: !4553)
!4555 = !DILocation(line: 779, column: 5, scope: !4553)
!4556 = !DILocation(line: 786, column: 9, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4553, file: !171, line: 786, column: 9)
!4558 = !DILocation(line: 786, column: 26, scope: !4557)
!4559 = !DILocation(line: 786, column: 9, scope: !4553)
!4560 = !DILocation(line: 788, column: 6, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !171, line: 788, column: 6)
!4562 = distinct !DILexicalBlock(scope: !4557, file: !171, line: 787, column: 5)
!4563 = !{i64 2148408719}
!4564 = !{i64 2148408759}
!4565 = !DILocation(line: 789, column: 5, scope: !4562)
!4566 = !DILocation(line: 794, column: 5, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4548, file: !171, line: 792, column: 4)
!4568 = !DILocation(line: 795, column: 14, scope: !4567)
!4569 = !DILocation(line: 801, column: 4, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4544, file: !171, line: 799, column: 3)
!4571 = !DILocation(line: 802, column: 13, scope: !4570)
!4572 = !DILocation(line: 807, column: 4, scope: !4570)
!4573 = distinct !{!4573, !4574, !4575}
!4574 = !DILocation(line: 632, column: 2, scope: !4484)
!4575 = !DILocation(line: 809, column: 2, scope: !4484)
!4576 = !DILocation(line: 733, column: 9, scope: !4492)
!4577 = !DILocation(line: 0, scope: !4482)
!4578 = !DILocation(line: 810, column: 1, scope: !4437)
!4579 = distinct !DISubprogram(name: "prvCopyDataToQueue", scope: !171, file: !171, line: 1783, type: !4580, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4582)
!4580 = !DISubroutineType(types: !4581)
!4581 = !{!41, !4297, !720, !4441}
!4582 = !{!4583, !4584, !4585, !4586}
!4583 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !4579, file: !171, line: 1783, type: !4297)
!4584 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !4579, file: !171, line: 1783, type: !720)
!4585 = !DILocalVariable(name: "xPosition", arg: 3, scope: !4579, file: !171, line: 1783, type: !4441)
!4586 = !DILocalVariable(name: "xReturn", scope: !4579, file: !171, line: 1785, type: !41)
!4587 = !DILocation(line: 0, scope: !4579)
!4588 = !DILocation(line: 1787, column: 15, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4579, file: !171, line: 1787, column: 6)
!4590 = !DILocation(line: 1787, column: 26, scope: !4589)
!4591 = !DILocation(line: 1787, column: 6, scope: !4579)
!4592 = !DILocation(line: 1791, column: 17, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !171, line: 1791, column: 8)
!4594 = distinct !DILexicalBlock(scope: !4595, file: !171, line: 1790, column: 3)
!4595 = distinct !DILexicalBlock(scope: !4589, file: !171, line: 1788, column: 2)
!4596 = !DILocation(line: 1791, column: 29, scope: !4593)
!4597 = !DILocation(line: 1791, column: 8, scope: !4594)
!4598 = !DILocation(line: 1794, column: 60, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4593, file: !171, line: 1792, column: 4)
!4600 = !DILocation(line: 1794, column: 15, scope: !4599)
!4601 = !DILocation(line: 1795, column: 28, scope: !4599)
!4602 = !DILocation(line: 1796, column: 4, scope: !4599)
!4603 = !DILocation(line: 1804, column: 21, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4589, file: !171, line: 1804, column: 11)
!4605 = !DILocation(line: 1804, column: 11, scope: !4589)
!4606 = !DILocation(line: 1806, column: 40, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4604, file: !171, line: 1805, column: 2)
!4608 = !DILocation(line: 1806, column: 12, scope: !4607)
!4609 = !DILocation(line: 1807, column: 34, scope: !4607)
!4610 = !DILocation(line: 1807, column: 22, scope: !4607)
!4611 = !DILocation(line: 1808, column: 38, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4607, file: !171, line: 1808, column: 7)
!4613 = !DILocation(line: 1808, column: 26, scope: !4612)
!4614 = !DILocation(line: 1808, column: 7, scope: !4607)
!4615 = !DILocation(line: 1810, column: 34, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4612, file: !171, line: 1809, column: 3)
!4617 = !DILocation(line: 1810, column: 23, scope: !4616)
!4618 = !DILocation(line: 1811, column: 3, scope: !4616)
!4619 = !DILocation(line: 1819, column: 42, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4604, file: !171, line: 1818, column: 2)
!4621 = !DILocation(line: 1819, column: 12, scope: !4620)
!4622 = !DILocation(line: 1820, column: 37, scope: !4620)
!4623 = !DILocation(line: 1820, column: 25, scope: !4620)
!4624 = !DILocation(line: 1821, column: 40, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4620, file: !171, line: 1821, column: 7)
!4626 = !DILocation(line: 1821, column: 29, scope: !4625)
!4627 = !DILocation(line: 1821, column: 7, scope: !4620)
!4628 = !DILocation(line: 1823, column: 39, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4625, file: !171, line: 1822, column: 3)
!4630 = !DILocation(line: 1823, column: 46, scope: !4629)
!4631 = !DILocation(line: 1823, column: 26, scope: !4629)
!4632 = !DILocation(line: 1824, column: 3, scope: !4629)
!4633 = !DILocation(line: 1830, column: 17, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4620, file: !171, line: 1830, column: 7)
!4635 = !DILocation(line: 1830, column: 7, scope: !4620)
!4636 = !DILocation(line: 1832, column: 17, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4638, file: !171, line: 1832, column: 8)
!4638 = distinct !DILexicalBlock(scope: !4634, file: !171, line: 1831, column: 3)
!4639 = !DILocation(line: 1832, column: 35, scope: !4637)
!4640 = !DILocation(line: 1832, column: 8, scope: !4638)
!4641 = !DILocation(line: 1838, column: 5, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4637, file: !171, line: 1833, column: 4)
!4643 = !DILocation(line: 1839, column: 4, scope: !4642)
!4644 = !DILocation(line: 1851, column: 15, scope: !4579)
!4645 = !DILocation(line: 1851, column: 2, scope: !4579)
!4646 = !DILocation(line: 1853, column: 2, scope: !4579)
!4647 = distinct !DISubprogram(name: "prvIsQueueFull", scope: !171, file: !171, line: 2029, type: !4648, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4652)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!41, !4650}
!4650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4651, size: 32)
!4651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !174)
!4652 = !{!4653, !4654}
!4653 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !4647, file: !171, line: 2029, type: !4650)
!4654 = !DILocalVariable(name: "xReturn", scope: !4647, file: !171, line: 2031, type: !41)
!4655 = !DILocation(line: 0, scope: !4647)
!4656 = !DILocation(line: 2033, column: 2, scope: !4647)
!4657 = !DILocation(line: 2035, column: 16, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !171, line: 2035, column: 7)
!4659 = distinct !DILexicalBlock(scope: !4647, file: !171, line: 2034, column: 2)
!4660 = !DILocation(line: 2035, column: 46, scope: !4658)
!4661 = !DILocation(line: 2035, column: 34, scope: !4658)
!4662 = !DILocation(line: 2044, column: 2, scope: !4647)
!4663 = !DILocation(line: 2046, column: 2, scope: !4647)
!4664 = distinct !DISubprogram(name: "prvUnlockQueue", scope: !171, file: !171, line: 1875, type: !4665, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4667)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{null, !4297}
!4667 = !{!4668}
!4668 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !4664, file: !171, line: 1875, type: !4297)
!4669 = !DILocation(line: 0, scope: !4664)
!4670 = !DILocation(line: 1883, column: 2, scope: !4664)
!4671 = !DILocation(line: 1933, column: 9, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4673, file: !171, line: 1933, column: 9)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !171, line: 1930, column: 4)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !171, line: 1887, column: 3)
!4675 = distinct !DILexicalBlock(scope: !4664, file: !171, line: 1884, column: 2)
!4676 = !DILocation(line: 1886, column: 19, scope: !4675)
!4677 = !DILocation(line: 1886, column: 27, scope: !4675)
!4678 = !DILocation(line: 1886, column: 3, scope: !4675)
!4679 = !DILocation(line: 1933, column: 9, scope: !4673)
!4680 = !DILocation(line: 1935, column: 10, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !171, line: 1935, column: 10)
!4682 = distinct !DILexicalBlock(scope: !4672, file: !171, line: 1934, column: 5)
!4683 = !DILocation(line: 1935, column: 75, scope: !4681)
!4684 = !DILocation(line: 1935, column: 10, scope: !4682)
!4685 = !DILocation(line: 1939, column: 7, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4681, file: !171, line: 1936, column: 6)
!4687 = !DILocation(line: 1940, column: 6, scope: !4686)
!4688 = !DILocation(line: 1953, column: 4, scope: !4674)
!4689 = distinct !{!4689, !4678, !4690}
!4690 = !DILocation(line: 1954, column: 3, scope: !4675)
!4691 = !DILocation(line: 1956, column: 20, scope: !4675)
!4692 = !DILocation(line: 1958, column: 2, scope: !4664)
!4693 = !DILocation(line: 1961, column: 2, scope: !4664)
!4694 = !DILocation(line: 1965, column: 8, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !171, line: 1965, column: 8)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !171, line: 1964, column: 3)
!4697 = distinct !DILexicalBlock(scope: !4664, file: !171, line: 1962, column: 2)
!4698 = !DILocation(line: 1963, column: 19, scope: !4697)
!4699 = !DILocation(line: 1963, column: 27, scope: !4697)
!4700 = !DILocation(line: 1963, column: 3, scope: !4697)
!4701 = !DILocation(line: 1965, column: 8, scope: !4696)
!4702 = !DILocation(line: 1967, column: 9, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !171, line: 1967, column: 9)
!4704 = distinct !DILexicalBlock(scope: !4695, file: !171, line: 1966, column: 4)
!4705 = !DILocation(line: 1967, column: 71, scope: !4703)
!4706 = !DILocation(line: 1967, column: 9, scope: !4704)
!4707 = !DILocation(line: 1969, column: 6, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4703, file: !171, line: 1968, column: 5)
!4709 = !DILocation(line: 1970, column: 5, scope: !4708)
!4710 = !DILocation(line: 1976, column: 5, scope: !4704)
!4711 = distinct !{!4711, !4700, !4712}
!4712 = !DILocation(line: 1982, column: 3, scope: !4697)
!4713 = !DILocation(line: 1984, column: 20, scope: !4697)
!4714 = !DILocation(line: 1986, column: 2, scope: !4664)
!4715 = !DILocation(line: 1987, column: 1, scope: !4664)
!4716 = distinct !DISubprogram(name: "xQueueGiveMutexRecursive", scope: !171, file: !171, line: 489, type: !4717, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4719)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{!41, !229}
!4719 = !{!4720, !4721, !4722}
!4720 = !DILocalVariable(name: "xMutex", arg: 1, scope: !4716, file: !171, line: 489, type: !229)
!4721 = !DILocalVariable(name: "xReturn", scope: !4716, file: !171, line: 491, type: !41)
!4722 = !DILocalVariable(name: "pxMutex", scope: !4716, file: !171, line: 492, type: !4297)
!4723 = !DILocation(line: 0, scope: !4716)
!4724 = !DILocation(line: 494, column: 3, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4716, file: !171, line: 494, column: 3)
!4726 = !DILocation(line: 494, column: 3, scope: !4716)
!4727 = !DILocation(line: 494, column: 3, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4725, file: !171, line: 494, column: 3)
!4729 = !DILocation(line: 502, column: 16, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4716, file: !171, line: 502, column: 7)
!4731 = !DILocation(line: 502, column: 44, scope: !4730)
!4732 = !DILocation(line: 502, column: 30, scope: !4730)
!4733 = !DILocation(line: 502, column: 7, scope: !4716)
!4734 = !DILocation(line: 511, column: 15, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4730, file: !171, line: 503, column: 3)
!4736 = !DILocation(line: 511, column: 17, scope: !4735)
!4737 = !DILocation(line: 511, column: 39, scope: !4735)
!4738 = !DILocation(line: 514, column: 40, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4735, file: !171, line: 514, column: 8)
!4740 = !DILocation(line: 514, column: 8, scope: !4735)
!4741 = !DILocation(line: 518, column: 14, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4739, file: !171, line: 515, column: 4)
!4743 = !DILocation(line: 519, column: 4, scope: !4742)
!4744 = !DILocation(line: 0, scope: !4730)
!4745 = !DILocation(line: 536, column: 3, scope: !4716)
!4746 = distinct !DISubprogram(name: "xQueueTakeMutexRecursive", scope: !171, file: !171, line: 544, type: !4747, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4749)
!4747 = !DISubroutineType(types: !4748)
!4748 = !{!41, !229, !59}
!4749 = !{!4750, !4751, !4752, !4753}
!4750 = !DILocalVariable(name: "xMutex", arg: 1, scope: !4746, file: !171, line: 544, type: !229)
!4751 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !4746, file: !171, line: 544, type: !59)
!4752 = !DILocalVariable(name: "xReturn", scope: !4746, file: !171, line: 546, type: !41)
!4753 = !DILocalVariable(name: "pxMutex", scope: !4746, file: !171, line: 547, type: !4297)
!4754 = !DILocation(line: 0, scope: !4746)
!4755 = !DILocation(line: 549, column: 3, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4746, file: !171, line: 549, column: 3)
!4757 = !DILocation(line: 549, column: 3, scope: !4746)
!4758 = !DILocation(line: 549, column: 3, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4756, file: !171, line: 549, column: 3)
!4760 = !DILocation(line: 556, column: 16, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4746, file: !171, line: 556, column: 7)
!4762 = !DILocation(line: 556, column: 44, scope: !4761)
!4763 = !DILocation(line: 556, column: 30, scope: !4761)
!4764 = !DILocation(line: 556, column: 7, scope: !4746)
!4765 = !DILocation(line: 563, column: 14, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4761, file: !171, line: 562, column: 3)
!4767 = !DILocation(line: 568, column: 16, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4766, file: !171, line: 568, column: 8)
!4769 = !DILocation(line: 568, column: 8, scope: !4766)
!4770 = !DILocation(line: 0, scope: !4761)
!4771 = !DILocation(line: 578, column: 3, scope: !4746)
!4772 = distinct !DISubprogram(name: "xQueueGenericReceive", scope: !171, file: !171, line: 1361, type: !4773, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4775)
!4773 = !DISubroutineType(types: !4774)
!4774 = !{!41, !229, !2027, !59, !4441}
!4775 = !{!4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783}
!4776 = !DILocalVariable(name: "xQueue", arg: 1, scope: !4772, file: !171, line: 1361, type: !229)
!4777 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !4772, file: !171, line: 1361, type: !2027)
!4778 = !DILocalVariable(name: "xTicksToWait", arg: 3, scope: !4772, file: !171, line: 1361, type: !59)
!4779 = !DILocalVariable(name: "xJustPeeking", arg: 4, scope: !4772, file: !171, line: 1361, type: !4441)
!4780 = !DILocalVariable(name: "xEntryTimeSet", scope: !4772, file: !171, line: 1363, type: !41)
!4781 = !DILocalVariable(name: "xTimeOut", scope: !4772, file: !171, line: 1364, type: !4450)
!4782 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !4772, file: !171, line: 1365, type: !179)
!4783 = !DILocalVariable(name: "pxQueue", scope: !4772, file: !171, line: 1366, type: !4297)
!4784 = !DILocation(line: 0, scope: !4772)
!4785 = !DILocation(line: 1364, column: 1, scope: !4772)
!4786 = !DILocation(line: 1364, column: 11, scope: !4772)
!4787 = !DILocation(line: 1366, column: 27, scope: !4772)
!4788 = !DILocation(line: 1368, column: 2, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4772, file: !171, line: 1368, column: 2)
!4790 = !DILocation(line: 1368, column: 2, scope: !4772)
!4791 = !DILocation(line: 1368, column: 2, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4789, file: !171, line: 1368, column: 2)
!4793 = !DILocation(line: 1369, column: 2, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4772, file: !171, line: 1369, column: 2)
!4795 = !DILocation(line: 1369, column: 2, scope: !4772)
!4796 = !DILocation(line: 1369, column: 2, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4794, file: !171, line: 1369, column: 2)
!4798 = !DILocation(line: 1372, column: 3, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4800, file: !171, line: 1372, column: 3)
!4800 = distinct !DILexicalBlock(scope: !4772, file: !171, line: 1371, column: 2)
!4801 = !DILocation(line: 1372, column: 3, scope: !4800)
!4802 = !DILocation(line: 1372, column: 3, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4799, file: !171, line: 1372, column: 3)
!4804 = !DILocation(line: 1382, column: 3, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4806, file: !171, line: 1381, column: 2)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !171, line: 1380, column: 2)
!4807 = distinct !DILexicalBlock(scope: !4772, file: !171, line: 1380, column: 2)
!4808 = !DILocation(line: 1386, column: 17, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4810, file: !171, line: 1386, column: 8)
!4810 = distinct !DILexicalBlock(scope: !4805, file: !171, line: 1383, column: 3)
!4811 = !DILocation(line: 1386, column: 35, scope: !4809)
!4812 = !DILocation(line: 1386, column: 8, scope: !4810)
!4813 = !DILocation(line: 1467, column: 22, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !171, line: 1467, column: 9)
!4815 = distinct !DILexicalBlock(scope: !4809, file: !171, line: 1466, column: 4)
!4816 = !DILocation(line: 1467, column: 9, scope: !4815)
!4817 = !DILocation(line: 1390, column: 39, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4809, file: !171, line: 1387, column: 4)
!4819 = !DILocation(line: 1390, column: 41, scope: !4818)
!4820 = !DILocation(line: 1392, column: 5, scope: !4818)
!4821 = !DILocation(line: 1394, column: 22, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4818, file: !171, line: 1394, column: 9)
!4823 = !DILocation(line: 1394, column: 9, scope: !4818)
!4824 = !DILocation(line: 1399, column: 6, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4822, file: !171, line: 1395, column: 5)
!4826 = !DILocation(line: 1403, column: 20, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4828, file: !171, line: 1403, column: 11)
!4828 = distinct !DILexicalBlock(scope: !4825, file: !171, line: 1402, column: 6)
!4829 = !DILocation(line: 1403, column: 32, scope: !4827)
!4830 = !DILocation(line: 1403, column: 11, scope: !4828)
!4831 = !DILocation(line: 1407, column: 46, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4827, file: !171, line: 1404, column: 7)
!4833 = !DILocation(line: 1407, column: 17, scope: !4832)
!4834 = !DILocation(line: 1407, column: 31, scope: !4832)
!4835 = !DILocation(line: 1408, column: 7, scope: !4832)
!4836 = !DILocation(line: 1416, column: 10, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4825, file: !171, line: 1416, column: 10)
!4838 = !DILocation(line: 1416, column: 10, scope: !4825)
!4839 = !DILocation(line: 1418, column: 11, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !171, line: 1418, column: 11)
!4841 = distinct !DILexicalBlock(scope: !4837, file: !171, line: 1417, column: 6)
!4842 = !DILocation(line: 1418, column: 73, scope: !4840)
!4843 = !DILocation(line: 1418, column: 11, scope: !4841)
!4844 = !DILocation(line: 1420, column: 8, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !171, line: 1420, column: 8)
!4846 = distinct !DILexicalBlock(scope: !4840, file: !171, line: 1419, column: 7)
!4847 = !{i64 2148411987}
!4848 = !{i64 2148412027}
!4849 = !DILocation(line: 1421, column: 7, scope: !4846)
!4850 = !DILocation(line: 1438, column: 28, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4822, file: !171, line: 1433, column: 5)
!4852 = !DILocation(line: 1442, column: 10, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4851, file: !171, line: 1442, column: 10)
!4854 = !DILocation(line: 1442, column: 10, scope: !4851)
!4855 = !DILocation(line: 1446, column: 11, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !171, line: 1446, column: 11)
!4857 = distinct !DILexicalBlock(scope: !4853, file: !171, line: 1443, column: 6)
!4858 = !DILocation(line: 1446, column: 76, scope: !4856)
!4859 = !DILocation(line: 1446, column: 11, scope: !4857)
!4860 = !DILocation(line: 1449, column: 8, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !171, line: 1449, column: 8)
!4862 = distinct !DILexicalBlock(scope: !4856, file: !171, line: 1447, column: 7)
!4863 = !{i64 2148412619}
!4864 = !{i64 2148412659}
!4865 = !DILocation(line: 1450, column: 7, scope: !4862)
!4866 = !DILocation(line: 1462, column: 5, scope: !4818)
!4867 = !DILocation(line: 1463, column: 5, scope: !4818)
!4868 = !DILocation(line: 1471, column: 6, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4814, file: !171, line: 1468, column: 5)
!4870 = !DILocation(line: 1473, column: 6, scope: !4869)
!4871 = !DILocation(line: 1479, column: 6, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4873, file: !171, line: 1476, column: 5)
!4873 = distinct !DILexicalBlock(scope: !4814, file: !171, line: 1475, column: 14)
!4874 = !DILocation(line: 1481, column: 5, scope: !4872)
!4875 = !DILocation(line: 1489, column: 3, scope: !4805)
!4876 = !DILocation(line: 1494, column: 3, scope: !4805)
!4877 = !DILocation(line: 1495, column: 3, scope: !4805)
!4878 = !DILocation(line: 1495, column: 3, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !171, line: 1495, column: 3)
!4880 = distinct !DILexicalBlock(scope: !4805, file: !171, line: 1495, column: 3)
!4881 = !DILocation(line: 1495, column: 3, scope: !4880)
!4882 = !DILocation(line: 1495, column: 3, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4879, file: !171, line: 1495, column: 3)
!4884 = !DILocation(line: 1495, column: 3, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4880, file: !171, line: 1495, column: 3)
!4886 = !DILocation(line: 1495, column: 3, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4885, file: !171, line: 1495, column: 3)
!4888 = !DILocation(line: 1498, column: 7, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4805, file: !171, line: 1498, column: 7)
!4890 = !DILocation(line: 1498, column: 56, scope: !4889)
!4891 = !DILocation(line: 1498, column: 7, scope: !4805)
!4892 = !DILocation(line: 1500, column: 8, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !171, line: 1500, column: 8)
!4894 = distinct !DILexicalBlock(scope: !4889, file: !171, line: 1499, column: 3)
!4895 = !DILocation(line: 1500, column: 35, scope: !4893)
!4896 = !DILocation(line: 1500, column: 8, scope: !4894)
!4897 = !DILocation(line: 1506, column: 19, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !171, line: 1506, column: 10)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !171, line: 1505, column: 5)
!4900 = distinct !DILexicalBlock(scope: !4893, file: !171, line: 1501, column: 4)
!4901 = !DILocation(line: 1506, column: 31, scope: !4898)
!4902 = !DILocation(line: 1506, column: 10, scope: !4899)
!4903 = !DILocation(line: 1508, column: 7, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4898, file: !171, line: 1507, column: 6)
!4905 = !DILocation(line: 1510, column: 50, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4904, file: !171, line: 1509, column: 7)
!4907 = !DILocation(line: 1510, column: 8, scope: !4906)
!4908 = !DILocation(line: 1512, column: 7, scope: !4904)
!4909 = !DILocation(line: 1513, column: 6, scope: !4904)
!4910 = !DILocation(line: 1521, column: 66, scope: !4900)
!4911 = !DILocation(line: 1521, column: 5, scope: !4900)
!4912 = !DILocation(line: 1522, column: 5, scope: !4900)
!4913 = !DILocation(line: 1523, column: 9, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4900, file: !171, line: 1523, column: 9)
!4915 = !DILocation(line: 1523, column: 26, scope: !4914)
!4916 = !DILocation(line: 1523, column: 9, scope: !4900)
!4917 = !DILocation(line: 1525, column: 6, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !171, line: 1525, column: 6)
!4919 = distinct !DILexicalBlock(scope: !4914, file: !171, line: 1524, column: 5)
!4920 = !{i64 2148414034}
!4921 = !{i64 2148414074}
!4922 = !DILocation(line: 1526, column: 5, scope: !4919)
!4923 = !DILocation(line: 1535, column: 5, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4893, file: !171, line: 1533, column: 4)
!4925 = !DILocation(line: 1536, column: 14, scope: !4924)
!4926 = !DILocation(line: 1541, column: 4, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4889, file: !171, line: 1540, column: 3)
!4928 = !DILocation(line: 1542, column: 13, scope: !4927)
!4929 = !DILocation(line: 1544, column: 4, scope: !4927)
!4930 = distinct !{!4930, !4931, !4932}
!4931 = !DILocation(line: 1380, column: 2, scope: !4807)
!4932 = !DILocation(line: 1546, column: 2, scope: !4807)
!4933 = !DILocation(line: 1467, column: 9, scope: !4814)
!4934 = !DILocation(line: 0, scope: !4805)
!4935 = !DILocation(line: 1547, column: 1, scope: !4772)
!4936 = distinct !DISubprogram(name: "prvCopyDataFromQueue", scope: !171, file: !171, line: 1857, type: !4937, scopeLine: 1858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4939)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{null, !4297, !2027}
!4939 = !{!4940, !4941}
!4940 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !4936, file: !171, line: 1857, type: !4297)
!4941 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !4936, file: !171, line: 1857, type: !2027)
!4942 = !DILocation(line: 0, scope: !4936)
!4943 = !DILocation(line: 1859, column: 15, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4936, file: !171, line: 1859, column: 6)
!4945 = !DILocation(line: 1859, column: 26, scope: !4944)
!4946 = !DILocation(line: 1859, column: 6, scope: !4936)
!4947 = !DILocation(line: 1861, column: 14, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4944, file: !171, line: 1860, column: 2)
!4949 = !DILocation(line: 1861, column: 25, scope: !4948)
!4950 = !DILocation(line: 1862, column: 41, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4948, file: !171, line: 1862, column: 7)
!4952 = !DILocation(line: 1862, column: 29, scope: !4951)
!4953 = !DILocation(line: 1862, column: 7, scope: !4948)
!4954 = !DILocation(line: 1864, column: 37, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4951, file: !171, line: 1863, column: 3)
!4956 = !DILocation(line: 1864, column: 26, scope: !4955)
!4957 = !DILocation(line: 1865, column: 3, scope: !4955)
!4958 = !DILocation(line: 1870, column: 63, scope: !4948)
!4959 = !DILocation(line: 1870, column: 12, scope: !4948)
!4960 = !DILocation(line: 1871, column: 2, scope: !4948)
!4961 = !DILocation(line: 1872, column: 1, scope: !4936)
!4962 = distinct !DISubprogram(name: "prvIsQueueEmpty", scope: !171, file: !171, line: 1990, type: !4648, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4963)
!4963 = !{!4964, !4965}
!4964 = !DILocalVariable(name: "pxQueue", arg: 1, scope: !4962, file: !171, line: 1990, type: !4650)
!4965 = !DILocalVariable(name: "xReturn", scope: !4962, file: !171, line: 1992, type: !41)
!4966 = !DILocation(line: 0, scope: !4962)
!4967 = !DILocation(line: 1994, column: 2, scope: !4962)
!4968 = !DILocation(line: 1996, column: 16, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !171, line: 1996, column: 7)
!4970 = distinct !DILexicalBlock(scope: !4962, file: !171, line: 1995, column: 2)
!4971 = !DILocation(line: 1996, column: 34, scope: !4969)
!4972 = !DILocation(line: 2005, column: 2, scope: !4962)
!4973 = !DILocation(line: 2007, column: 2, scope: !4962)
!4974 = distinct !DISubprogram(name: "xQueueCreateCountingSemaphore", scope: !171, file: !171, line: 586, type: !4975, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !4977)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!229, !3132, !3132}
!4977 = !{!4978, !4979, !4980}
!4978 = !DILocalVariable(name: "uxMaxCount", arg: 1, scope: !4974, file: !171, line: 586, type: !3132)
!4979 = !DILocalVariable(name: "uxInitialCount", arg: 2, scope: !4974, file: !171, line: 586, type: !3132)
!4980 = !DILocalVariable(name: "xHandle", scope: !4974, file: !171, line: 588, type: !229)
!4981 = !DILocation(line: 0, scope: !4974)
!4982 = !DILocation(line: 590, column: 3, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4974, file: !171, line: 590, column: 3)
!4984 = !DILocation(line: 590, column: 3, scope: !4974)
!4985 = !DILocation(line: 590, column: 3, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4983, file: !171, line: 590, column: 3)
!4987 = !DILocation(line: 591, column: 3, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4974, file: !171, line: 591, column: 3)
!4989 = !DILocation(line: 591, column: 3, scope: !4974)
!4990 = !DILocation(line: 591, column: 3, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4988, file: !171, line: 591, column: 3)
!4992 = !DILocation(line: 593, column: 13, scope: !4974)
!4993 = !DILocation(line: 595, column: 7, scope: !4974)
!4994 = !DILocation(line: 597, column: 31, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4996, file: !171, line: 596, column: 3)
!4996 = distinct !DILexicalBlock(scope: !4974, file: !171, line: 595, column: 7)
!4997 = !DILocation(line: 597, column: 49, scope: !4995)
!4998 = !DILocation(line: 606, column: 3, scope: !4974)
!4999 = !DILocation(line: 606, column: 3, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !5001, file: !171, line: 606, column: 3)
!5001 = distinct !DILexicalBlock(scope: !4974, file: !171, line: 606, column: 3)
!5002 = !DILocation(line: 607, column: 3, scope: !4974)
!5003 = distinct !DISubprogram(name: "xQueueGenericSendFromISR", scope: !171, file: !171, line: 1058, type: !5004, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5006)
!5004 = !DISubroutineType(types: !5005)
!5005 = !{!41, !229, !4440, !287, !4441}
!5006 = !{!5007, !5008, !5009, !5010, !5011, !5012, !5013}
!5007 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5003, file: !171, line: 1058, type: !229)
!5008 = !DILocalVariable(name: "pvItemToQueue", arg: 2, scope: !5003, file: !171, line: 1058, type: !4440)
!5009 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !5003, file: !171, line: 1058, type: !287)
!5010 = !DILocalVariable(name: "xCopyPosition", arg: 4, scope: !5003, file: !171, line: 1058, type: !4441)
!5011 = !DILocalVariable(name: "xReturn", scope: !5003, file: !171, line: 1060, type: !41)
!5012 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !5003, file: !171, line: 1061, type: !27)
!5013 = !DILocalVariable(name: "pxQueue", scope: !5003, file: !171, line: 1062, type: !4297)
!5014 = !DILocation(line: 0, scope: !5003)
!5015 = !DILocation(line: 1062, column: 27, scope: !5003)
!5016 = !DILocation(line: 1064, column: 2, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5003, file: !171, line: 1064, column: 2)
!5018 = !DILocation(line: 1064, column: 2, scope: !5003)
!5019 = !DILocation(line: 1064, column: 2, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !171, line: 1064, column: 2)
!5021 = !DILocation(line: 1065, column: 2, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5003, file: !171, line: 1065, column: 2)
!5023 = !DILocation(line: 1065, column: 2, scope: !5003)
!5024 = !DILocation(line: 1065, column: 2, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5022, file: !171, line: 1065, column: 2)
!5026 = !DILocation(line: 1066, column: 2, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5003, file: !171, line: 1066, column: 2)
!5028 = !DILocation(line: 1066, column: 2, scope: !5003)
!5029 = !DILocation(line: 1066, column: 2, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5027, file: !171, line: 1066, column: 2)
!5031 = !DILocation(line: 1082, column: 2, scope: !5003)
!5032 = !DILocation(line: 231, column: 2, scope: !5033, inlinedAt: !5037)
!5033 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !28, file: !28, line: 227, type: !2643, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5034)
!5034 = !{!5035, !5036}
!5035 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !5033, file: !28, line: 229, type: !38)
!5036 = !DILocalVariable(name: "ulNewBASEPRI", scope: !5033, file: !28, line: 229, type: !38)
!5037 = distinct !DILocation(line: 1089, column: 27, scope: !5003)
!5038 = !{i64 747231, i64 747268, i64 747300, i64 747336, i64 747363}
!5039 = !DILocation(line: 0, scope: !5033, inlinedAt: !5037)
!5040 = !DILocation(line: 1091, column: 18, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5042, file: !171, line: 1091, column: 7)
!5042 = distinct !DILexicalBlock(scope: !5003, file: !171, line: 1090, column: 2)
!5043 = !DILocation(line: 1091, column: 47, scope: !5041)
!5044 = !DILocation(line: 1091, column: 36, scope: !5041)
!5045 = !DILocation(line: 1091, column: 58, scope: !5041)
!5046 = !DILocation(line: 1100, column: 13, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5041, file: !171, line: 1092, column: 3)
!5048 = !DILocation(line: 1104, column: 17, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5047, file: !171, line: 1104, column: 8)
!5050 = !DILocation(line: 1104, column: 25, scope: !5049)
!5051 = !DILocation(line: 1104, column: 8, scope: !5047)
!5052 = !DILocation(line: 1159, column: 10, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5054, file: !171, line: 1159, column: 10)
!5054 = distinct !DILexicalBlock(scope: !5055, file: !171, line: 1158, column: 5)
!5055 = distinct !DILexicalBlock(scope: !5049, file: !171, line: 1105, column: 4)
!5056 = !DILocation(line: 1159, column: 10, scope: !5054)
!5057 = !DILocation(line: 1161, column: 11, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5059, file: !171, line: 1161, column: 11)
!5059 = distinct !DILexicalBlock(scope: !5053, file: !171, line: 1160, column: 6)
!5060 = !DILocation(line: 1161, column: 76, scope: !5058)
!5061 = !DILocation(line: 1161, column: 11, scope: !5059)
!5062 = !DILocation(line: 1167, column: 36, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !171, line: 1166, column: 8)
!5064 = distinct !DILexicalBlock(scope: !5065, file: !171, line: 1165, column: 12)
!5065 = distinct !DILexicalBlock(scope: !5058, file: !171, line: 1162, column: 7)
!5066 = !DILocation(line: 1168, column: 8, scope: !5063)
!5067 = !DILocation(line: 1190, column: 5, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5049, file: !171, line: 1187, column: 4)
!5069 = !DILocation(line: 0, scope: !5041)
!5070 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !5071, file: !28, line: 247, type: !38)
!5071 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !28, file: !28, line: 247, type: !2656, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5072)
!5072 = !{!5070}
!5073 = !DILocation(line: 0, scope: !5071, inlinedAt: !5074)
!5074 = distinct !DILocation(line: 1201, column: 2, scope: !5003)
!5075 = !DILocation(line: 249, column: 2, scope: !5071, inlinedAt: !5074)
!5076 = !{i64 747764}
!5077 = !DILocation(line: 1203, column: 2, scope: !5003)
!5078 = distinct !DISubprogram(name: "xQueueGiveFromISR", scope: !171, file: !171, line: 1207, type: !5079, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5081)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{!41, !229, !287}
!5081 = !{!5082, !5083, !5084, !5085, !5086}
!5082 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5078, file: !171, line: 1207, type: !229)
!5083 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 2, scope: !5078, file: !171, line: 1207, type: !287)
!5084 = !DILocalVariable(name: "xReturn", scope: !5078, file: !171, line: 1209, type: !41)
!5085 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !5078, file: !171, line: 1210, type: !27)
!5086 = !DILocalVariable(name: "pxQueue", scope: !5078, file: !171, line: 1211, type: !4297)
!5087 = !DILocation(line: 0, scope: !5078)
!5088 = !DILocation(line: 1213, column: 2, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5078, file: !171, line: 1213, column: 2)
!5090 = !DILocation(line: 1213, column: 2, scope: !5078)
!5091 = !DILocation(line: 1213, column: 2, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5089, file: !171, line: 1213, column: 2)
!5093 = !DILocation(line: 1216, column: 2, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5078, file: !171, line: 1216, column: 2)
!5095 = !DILocation(line: 1216, column: 2, scope: !5078)
!5096 = !DILocation(line: 1216, column: 2, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5094, file: !171, line: 1216, column: 2)
!5098 = !DILocation(line: 1232, column: 2, scope: !5078)
!5099 = !DILocation(line: 231, column: 2, scope: !5033, inlinedAt: !5100)
!5100 = distinct !DILocation(line: 1239, column: 27, scope: !5078)
!5101 = !DILocation(line: 0, scope: !5033, inlinedAt: !5100)
!5102 = !DILocation(line: 1244, column: 16, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5104, file: !171, line: 1244, column: 7)
!5104 = distinct !DILexicalBlock(scope: !5078, file: !171, line: 1240, column: 2)
!5105 = !DILocation(line: 1244, column: 45, scope: !5103)
!5106 = !DILocation(line: 1244, column: 34, scope: !5103)
!5107 = !DILocation(line: 1244, column: 7, scope: !5104)
!5108 = !DILocation(line: 1254, column: 4, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5103, file: !171, line: 1245, column: 3)
!5110 = !DILocation(line: 1258, column: 17, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5109, file: !171, line: 1258, column: 8)
!5112 = !DILocation(line: 1258, column: 25, scope: !5111)
!5113 = !DILocation(line: 1258, column: 8, scope: !5109)
!5114 = !DILocation(line: 1313, column: 10, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5116, file: !171, line: 1313, column: 10)
!5116 = distinct !DILexicalBlock(scope: !5117, file: !171, line: 1312, column: 5)
!5117 = distinct !DILexicalBlock(scope: !5111, file: !171, line: 1259, column: 4)
!5118 = !DILocation(line: 1313, column: 10, scope: !5116)
!5119 = !DILocation(line: 1315, column: 11, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5121, file: !171, line: 1315, column: 11)
!5121 = distinct !DILexicalBlock(scope: !5115, file: !171, line: 1314, column: 6)
!5122 = !DILocation(line: 1315, column: 76, scope: !5120)
!5123 = !DILocation(line: 1315, column: 11, scope: !5121)
!5124 = !DILocation(line: 1321, column: 36, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5126, file: !171, line: 1320, column: 8)
!5126 = distinct !DILexicalBlock(scope: !5127, file: !171, line: 1319, column: 12)
!5127 = distinct !DILexicalBlock(scope: !5120, file: !171, line: 1316, column: 7)
!5128 = !DILocation(line: 1322, column: 8, scope: !5125)
!5129 = !DILocation(line: 1344, column: 5, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5111, file: !171, line: 1341, column: 4)
!5131 = !DILocation(line: 0, scope: !5103)
!5132 = !DILocation(line: 0, scope: !5071, inlinedAt: !5133)
!5133 = distinct !DILocation(line: 1355, column: 2, scope: !5078)
!5134 = !DILocation(line: 249, column: 2, scope: !5071, inlinedAt: !5133)
!5135 = !DILocation(line: 1357, column: 2, scope: !5078)
!5136 = distinct !DISubprogram(name: "xQueueReceiveFromISR", scope: !171, file: !171, line: 1550, type: !5137, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5139)
!5137 = !DISubroutineType(types: !5138)
!5138 = !{!41, !229, !2027, !287}
!5139 = !{!5140, !5141, !5142, !5143, !5144, !5145}
!5140 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5136, file: !171, line: 1550, type: !229)
!5141 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !5136, file: !171, line: 1550, type: !2027)
!5142 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 3, scope: !5136, file: !171, line: 1550, type: !287)
!5143 = !DILocalVariable(name: "xReturn", scope: !5136, file: !171, line: 1552, type: !41)
!5144 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !5136, file: !171, line: 1553, type: !27)
!5145 = !DILocalVariable(name: "pxQueue", scope: !5136, file: !171, line: 1554, type: !4297)
!5146 = !DILocation(line: 0, scope: !5136)
!5147 = !DILocation(line: 1554, column: 27, scope: !5136)
!5148 = !DILocation(line: 1556, column: 2, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5136, file: !171, line: 1556, column: 2)
!5150 = !DILocation(line: 1556, column: 2, scope: !5136)
!5151 = !DILocation(line: 1556, column: 2, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5149, file: !171, line: 1556, column: 2)
!5153 = !DILocation(line: 1557, column: 2, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5136, file: !171, line: 1557, column: 2)
!5155 = !DILocation(line: 1557, column: 2, scope: !5136)
!5156 = !DILocation(line: 1557, column: 2, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5154, file: !171, line: 1557, column: 2)
!5158 = !DILocation(line: 1573, column: 2, scope: !5136)
!5159 = !DILocation(line: 231, column: 2, scope: !5033, inlinedAt: !5160)
!5160 = distinct !DILocation(line: 1575, column: 27, scope: !5136)
!5161 = !DILocation(line: 0, scope: !5033, inlinedAt: !5160)
!5162 = !DILocation(line: 1578, column: 16, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5164, file: !171, line: 1578, column: 7)
!5164 = distinct !DILexicalBlock(scope: !5136, file: !171, line: 1576, column: 2)
!5165 = !DILocation(line: 1578, column: 34, scope: !5163)
!5166 = !DILocation(line: 1578, column: 7, scope: !5164)
!5167 = !DILocation(line: 1582, column: 4, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5163, file: !171, line: 1579, column: 3)
!5169 = !DILocation(line: 1583, column: 4, scope: !5168)
!5170 = !DILocation(line: 1589, column: 17, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5168, file: !171, line: 1589, column: 8)
!5172 = !DILocation(line: 1589, column: 25, scope: !5171)
!5173 = !DILocation(line: 1589, column: 8, scope: !5168)
!5174 = !DILocation(line: 1591, column: 9, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5176, file: !171, line: 1591, column: 9)
!5176 = distinct !DILexicalBlock(scope: !5171, file: !171, line: 1590, column: 4)
!5177 = !DILocation(line: 1591, column: 9, scope: !5176)
!5178 = !DILocation(line: 1593, column: 10, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5180, file: !171, line: 1593, column: 10)
!5180 = distinct !DILexicalBlock(scope: !5175, file: !171, line: 1592, column: 5)
!5181 = !DILocation(line: 1593, column: 72, scope: !5179)
!5182 = !DILocation(line: 1593, column: 10, scope: !5180)
!5183 = !DILocation(line: 1599, column: 35, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5185, file: !171, line: 1598, column: 7)
!5185 = distinct !DILexicalBlock(scope: !5186, file: !171, line: 1597, column: 11)
!5186 = distinct !DILexicalBlock(scope: !5179, file: !171, line: 1594, column: 6)
!5187 = !DILocation(line: 1600, column: 7, scope: !5184)
!5188 = !DILocation(line: 1620, column: 5, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5171, file: !171, line: 1617, column: 4)
!5190 = !DILocation(line: 0, scope: !5163)
!5191 = !DILocation(line: 0, scope: !5071, inlinedAt: !5192)
!5192 = distinct !DILocation(line: 1631, column: 2, scope: !5136)
!5193 = !DILocation(line: 249, column: 2, scope: !5071, inlinedAt: !5192)
!5194 = !DILocation(line: 1633, column: 2, scope: !5136)
!5195 = distinct !DISubprogram(name: "xQueuePeekFromISR", scope: !171, file: !171, line: 1637, type: !5196, scopeLine: 1638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5198)
!5196 = !DISubroutineType(types: !5197)
!5197 = !{!41, !229, !2027}
!5198 = !{!5199, !5200, !5201, !5202, !5203, !5204}
!5199 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5195, file: !171, line: 1637, type: !229)
!5200 = !DILocalVariable(name: "pvBuffer", arg: 2, scope: !5195, file: !171, line: 1637, type: !2027)
!5201 = !DILocalVariable(name: "xReturn", scope: !5195, file: !171, line: 1639, type: !41)
!5202 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !5195, file: !171, line: 1640, type: !27)
!5203 = !DILocalVariable(name: "pcOriginalReadPosition", scope: !5195, file: !171, line: 1641, type: !179)
!5204 = !DILocalVariable(name: "pxQueue", scope: !5195, file: !171, line: 1642, type: !4297)
!5205 = !DILocation(line: 0, scope: !5195)
!5206 = !DILocation(line: 1642, column: 27, scope: !5195)
!5207 = !DILocation(line: 1644, column: 2, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5195, file: !171, line: 1644, column: 2)
!5209 = !DILocation(line: 1644, column: 2, scope: !5195)
!5210 = !DILocation(line: 1644, column: 2, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5208, file: !171, line: 1644, column: 2)
!5212 = !DILocation(line: 1645, column: 2, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5195, file: !171, line: 1645, column: 2)
!5214 = !DILocation(line: 1645, column: 2, scope: !5195)
!5215 = !DILocation(line: 1645, column: 2, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5213, file: !171, line: 1645, column: 2)
!5217 = !DILocation(line: 1646, column: 2, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5195, file: !171, line: 1646, column: 2)
!5219 = !DILocation(line: 1646, column: 2, scope: !5195)
!5220 = !DILocation(line: 1646, column: 2, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5218, file: !171, line: 1646, column: 2)
!5222 = !DILocation(line: 1662, column: 2, scope: !5195)
!5223 = !DILocation(line: 231, column: 2, scope: !5033, inlinedAt: !5224)
!5224 = distinct !DILocation(line: 1664, column: 27, scope: !5195)
!5225 = !DILocation(line: 0, scope: !5033, inlinedAt: !5224)
!5226 = !DILocation(line: 1667, column: 16, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5228, file: !171, line: 1667, column: 7)
!5228 = distinct !DILexicalBlock(scope: !5195, file: !171, line: 1665, column: 2)
!5229 = !DILocation(line: 1667, column: 34, scope: !5227)
!5230 = !DILocation(line: 1667, column: 7, scope: !5228)
!5231 = !DILocation(line: 1673, column: 38, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5227, file: !171, line: 1668, column: 3)
!5233 = !DILocation(line: 1673, column: 40, scope: !5232)
!5234 = !DILocation(line: 1674, column: 4, scope: !5232)
!5235 = !DILocation(line: 1675, column: 26, scope: !5232)
!5236 = !DILocation(line: 1678, column: 3, scope: !5232)
!5237 = !DILocation(line: 0, scope: !5227)
!5238 = !DILocation(line: 0, scope: !5071, inlinedAt: !5239)
!5239 = distinct !DILocation(line: 1685, column: 2, scope: !5195)
!5240 = !DILocation(line: 249, column: 2, scope: !5071, inlinedAt: !5239)
!5241 = !DILocation(line: 1687, column: 2, scope: !5195)
!5242 = distinct !DISubprogram(name: "uxQueueMessagesWaiting", scope: !171, file: !171, line: 1691, type: !5243, scopeLine: 1692, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5246)
!5243 = !DISubroutineType(types: !5244)
!5244 = !{!27, !5245}
!5245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !229)
!5246 = !{!5247, !5248}
!5247 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5242, file: !171, line: 1691, type: !5245)
!5248 = !DILocalVariable(name: "uxReturn", scope: !5242, file: !171, line: 1693, type: !27)
!5249 = !DILocation(line: 0, scope: !5242)
!5250 = !DILocation(line: 1695, column: 2, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5242, file: !171, line: 1695, column: 2)
!5252 = !DILocation(line: 1695, column: 2, scope: !5242)
!5253 = !DILocation(line: 1695, column: 2, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5251, file: !171, line: 1695, column: 2)
!5255 = !DILocation(line: 1697, column: 2, scope: !5242)
!5256 = !DILocation(line: 1699, column: 40, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5242, file: !171, line: 1698, column: 2)
!5258 = !DILocation(line: 1701, column: 2, scope: !5242)
!5259 = !DILocation(line: 1703, column: 2, scope: !5242)
!5260 = distinct !DISubprogram(name: "uxQueueSpacesAvailable", scope: !171, file: !171, line: 1707, type: !5243, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5261)
!5261 = !{!5262, !5263, !5264}
!5262 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5260, file: !171, line: 1707, type: !5245)
!5263 = !DILocalVariable(name: "uxReturn", scope: !5260, file: !171, line: 1709, type: !27)
!5264 = !DILocalVariable(name: "pxQueue", scope: !5260, file: !171, line: 1710, type: !173)
!5265 = !DILocation(line: 0, scope: !5260)
!5266 = !DILocation(line: 1713, column: 2, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5260, file: !171, line: 1713, column: 2)
!5268 = !DILocation(line: 1713, column: 2, scope: !5260)
!5269 = !DILocation(line: 1713, column: 2, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5267, file: !171, line: 1713, column: 2)
!5271 = !DILocation(line: 1715, column: 2, scope: !5260)
!5272 = !DILocation(line: 1717, column: 23, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5260, file: !171, line: 1716, column: 2)
!5274 = !DILocation(line: 1717, column: 43, scope: !5273)
!5275 = !DILocation(line: 1717, column: 32, scope: !5273)
!5276 = !DILocation(line: 1719, column: 2, scope: !5260)
!5277 = !DILocation(line: 1721, column: 2, scope: !5260)
!5278 = distinct !DISubprogram(name: "uxQueueMessagesWaitingFromISR", scope: !171, file: !171, line: 1725, type: !5243, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5279)
!5279 = !{!5280, !5281}
!5280 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5278, file: !171, line: 1725, type: !5245)
!5281 = !DILocalVariable(name: "uxReturn", scope: !5278, file: !171, line: 1727, type: !27)
!5282 = !DILocation(line: 0, scope: !5278)
!5283 = !DILocation(line: 1729, column: 2, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5278, file: !171, line: 1729, column: 2)
!5285 = !DILocation(line: 1729, column: 2, scope: !5278)
!5286 = !DILocation(line: 1729, column: 2, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5284, file: !171, line: 1729, column: 2)
!5288 = !DILocation(line: 1731, column: 39, scope: !5278)
!5289 = !DILocation(line: 1733, column: 2, scope: !5278)
!5290 = distinct !DISubprogram(name: "vQueueDelete", scope: !171, file: !171, line: 1737, type: !5291, scopeLine: 1738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5293)
!5291 = !DISubroutineType(types: !5292)
!5292 = !{null, !229}
!5293 = !{!5294, !5295}
!5294 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5290, file: !171, line: 1737, type: !229)
!5295 = !DILocalVariable(name: "pxQueue", scope: !5290, file: !171, line: 1739, type: !4297)
!5296 = !DILocation(line: 0, scope: !5290)
!5297 = !DILocation(line: 1741, column: 2, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5290, file: !171, line: 1741, column: 2)
!5299 = !DILocation(line: 1741, column: 2, scope: !5290)
!5300 = !DILocation(line: 1741, column: 2, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5298, file: !171, line: 1741, column: 2)
!5302 = !DILocation(line: 1746, column: 3, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5290, file: !171, line: 1745, column: 2)
!5304 = !DILocation(line: 1749, column: 2, scope: !5290)
!5305 = !DILocation(line: 1750, column: 1, scope: !5290)
!5306 = distinct !DISubprogram(name: "vQueueUnregisterQueue", scope: !171, file: !171, line: 2374, type: !5291, scopeLine: 2375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5307)
!5307 = !{!5308, !5309}
!5308 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5306, file: !171, line: 2374, type: !229)
!5309 = !DILocalVariable(name: "ux", scope: !5306, file: !171, line: 2376, type: !27)
!5310 = !DILocation(line: 0, scope: !5306)
!5311 = !DILocation(line: 2380, column: 3, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5306, file: !171, line: 2380, column: 3)
!5313 = !DILocation(line: 2382, column: 29, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5315, file: !171, line: 2382, column: 8)
!5315 = distinct !DILexicalBlock(scope: !5316, file: !171, line: 2381, column: 3)
!5316 = distinct !DILexicalBlock(scope: !5312, file: !171, line: 2380, column: 3)
!5317 = !DILocation(line: 2382, column: 37, scope: !5314)
!5318 = !DILocation(line: 2382, column: 8, scope: !5315)
!5319 = !DILocation(line: 2385, column: 26, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5314, file: !171, line: 2383, column: 4)
!5321 = !DILocation(line: 2385, column: 38, scope: !5320)
!5322 = !DILocation(line: 2386, column: 5, scope: !5320)
!5323 = !DILocation(line: 2380, column: 83, scope: !5316)
!5324 = !DILocation(line: 2380, column: 36, scope: !5316)
!5325 = distinct !{!5325, !5311, !5326}
!5326 = !DILocation(line: 2392, column: 3, scope: !5312)
!5327 = !DILocation(line: 2394, column: 2, scope: !5306)
!5328 = distinct !DISubprogram(name: "uxQueueGetQueueNumber", scope: !171, file: !171, line: 1755, type: !5329, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5331)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{!27, !229}
!5331 = !{!5332}
!5332 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5328, file: !171, line: 1755, type: !229)
!5333 = !DILocation(line: 0, scope: !5328)
!5334 = !DILocation(line: 1757, column: 36, scope: !5328)
!5335 = !DILocation(line: 1757, column: 3, scope: !5328)
!5336 = distinct !DISubprogram(name: "vQueueSetQueueNumber", scope: !171, file: !171, line: 1765, type: !5337, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5339)
!5337 = !DISubroutineType(types: !5338)
!5338 = !{null, !229, !27}
!5339 = !{!5340, !5341}
!5340 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5336, file: !171, line: 1765, type: !229)
!5341 = !DILocalVariable(name: "uxQueueNumber", arg: 2, scope: !5336, file: !171, line: 1765, type: !27)
!5342 = !DILocation(line: 0, scope: !5336)
!5343 = !DILocation(line: 1767, column: 29, scope: !5336)
!5344 = !DILocation(line: 1767, column: 43, scope: !5336)
!5345 = !DILocation(line: 1768, column: 2, scope: !5336)
!5346 = distinct !DISubprogram(name: "ucQueueGetQueueType", scope: !171, file: !171, line: 1775, type: !5347, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5349)
!5347 = !DISubroutineType(types: !5348)
!5348 = !{!96, !229}
!5349 = !{!5350}
!5350 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5346, file: !171, line: 1775, type: !229)
!5351 = !DILocation(line: 0, scope: !5346)
!5352 = !DILocation(line: 1777, column: 36, scope: !5346)
!5353 = !DILocation(line: 1777, column: 3, scope: !5346)
!5354 = distinct !DISubprogram(name: "xQueueIsQueueEmptyFromISR", scope: !171, file: !171, line: 2011, type: !5355, scopeLine: 2012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5357)
!5355 = !DISubroutineType(types: !5356)
!5356 = !{!41, !5245}
!5357 = !{!5358, !5359}
!5358 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5354, file: !171, line: 2011, type: !5245)
!5359 = !DILocalVariable(name: "xReturn", scope: !5354, file: !171, line: 2013, type: !41)
!5360 = !DILocation(line: 0, scope: !5354)
!5361 = !DILocation(line: 2015, column: 2, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5354, file: !171, line: 2015, column: 2)
!5363 = !DILocation(line: 2015, column: 2, scope: !5354)
!5364 = !DILocation(line: 2015, column: 2, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5362, file: !171, line: 2015, column: 2)
!5366 = !DILocation(line: 2016, column: 32, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5354, file: !171, line: 2016, column: 6)
!5368 = !DILocation(line: 2016, column: 50, scope: !5367)
!5369 = !DILocation(line: 2025, column: 2, scope: !5354)
!5370 = distinct !DISubprogram(name: "xQueueIsQueueFullFromISR", scope: !171, file: !171, line: 2050, type: !5355, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5371)
!5371 = !{!5372, !5373}
!5372 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5370, file: !171, line: 2050, type: !5245)
!5373 = !DILocalVariable(name: "xReturn", scope: !5370, file: !171, line: 2052, type: !41)
!5374 = !DILocation(line: 0, scope: !5370)
!5375 = !DILocation(line: 2054, column: 2, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5370, file: !171, line: 2054, column: 2)
!5377 = !DILocation(line: 2054, column: 2, scope: !5370)
!5378 = !DILocation(line: 2054, column: 2, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5376, file: !171, line: 2054, column: 2)
!5380 = !DILocation(line: 2055, column: 32, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5370, file: !171, line: 2055, column: 6)
!5382 = !DILocation(line: 2055, column: 79, scope: !5381)
!5383 = !DILocation(line: 2055, column: 50, scope: !5381)
!5384 = !DILocation(line: 2064, column: 2, scope: !5370)
!5385 = distinct !DISubprogram(name: "vQueueAddToRegistry", scope: !171, file: !171, line: 2345, type: !5386, scopeLine: 2346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5388)
!5386 = !DISubroutineType(types: !5387)
!5387 = !{null, !229, !104}
!5388 = !{!5389, !5390, !5391}
!5389 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5385, file: !171, line: 2345, type: !229)
!5390 = !DILocalVariable(name: "pcQueueName", arg: 2, scope: !5385, file: !171, line: 2345, type: !104)
!5391 = !DILocalVariable(name: "ux", scope: !5385, file: !171, line: 2347, type: !27)
!5392 = !DILocation(line: 0, scope: !5385)
!5393 = !DILocation(line: 2351, column: 3, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5385, file: !171, line: 2351, column: 3)
!5395 = !DILocation(line: 2353, column: 29, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !171, line: 2353, column: 8)
!5397 = distinct !DILexicalBlock(scope: !5398, file: !171, line: 2352, column: 3)
!5398 = distinct !DILexicalBlock(scope: !5394, file: !171, line: 2351, column: 3)
!5399 = !DILocation(line: 2353, column: 41, scope: !5396)
!5400 = !DILocation(line: 2353, column: 8, scope: !5397)
!5401 = !DILocation(line: 2356, column: 38, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5396, file: !171, line: 2354, column: 4)
!5403 = !DILocation(line: 2357, column: 26, scope: !5402)
!5404 = !DILocation(line: 2357, column: 34, scope: !5402)
!5405 = !DILocation(line: 2360, column: 5, scope: !5402)
!5406 = !DILocation(line: 2351, column: 83, scope: !5398)
!5407 = !DILocation(line: 2351, column: 36, scope: !5398)
!5408 = distinct !{!5408, !5393, !5409}
!5409 = !DILocation(line: 2366, column: 3, scope: !5394)
!5410 = !DILocation(line: 2367, column: 2, scope: !5385)
!5411 = distinct !DISubprogram(name: "vQueueWaitForMessageRestricted", scope: !171, file: !171, line: 2401, type: !5412, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !5414)
!5412 = !DISubroutineType(types: !5413)
!5413 = !{null, !229, !59}
!5414 = !{!5415, !5416, !5417}
!5415 = !DILocalVariable(name: "xQueue", arg: 1, scope: !5411, file: !171, line: 2401, type: !229)
!5416 = !DILocalVariable(name: "xTicksToWait", arg: 2, scope: !5411, file: !171, line: 2401, type: !59)
!5417 = !DILocalVariable(name: "pxQueue", scope: !5411, file: !171, line: 2403, type: !4297)
!5418 = !DILocation(line: 0, scope: !5411)
!5419 = !DILocation(line: 2419, column: 3, scope: !5411)
!5420 = !DILocation(line: 2419, column: 3, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5422, file: !171, line: 2419, column: 3)
!5422 = distinct !DILexicalBlock(scope: !5411, file: !171, line: 2419, column: 3)
!5423 = !DILocation(line: 2419, column: 3, scope: !5422)
!5424 = !DILocation(line: 2419, column: 3, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5421, file: !171, line: 2419, column: 3)
!5426 = !DILocation(line: 2419, column: 3, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5422, file: !171, line: 2419, column: 3)
!5428 = !DILocation(line: 2419, column: 3, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5427, file: !171, line: 2419, column: 3)
!5430 = !DILocation(line: 2420, column: 16, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5411, file: !171, line: 2420, column: 7)
!5432 = !DILocation(line: 2420, column: 34, scope: !5431)
!5433 = !DILocation(line: 2420, column: 7, scope: !5411)
!5434 = !DILocation(line: 2423, column: 49, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5431, file: !171, line: 2421, column: 3)
!5436 = !DILocation(line: 2423, column: 4, scope: !5435)
!5437 = !DILocation(line: 2424, column: 3, scope: !5435)
!5438 = !DILocation(line: 2403, column: 28, scope: !5411)
!5439 = !DILocation(line: 2429, column: 3, scope: !5411)
!5440 = !DILocation(line: 2430, column: 2, scope: !5411)
!5441 = distinct !DISubprogram(name: "xTimerCreateTimerTask", scope: !236, file: !236, line: 240, type: !2424, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5442)
!5442 = !{!5443}
!5443 = !DILocalVariable(name: "xReturn", scope: !5441, file: !236, line: 242, type: !41)
!5444 = !DILocation(line: 0, scope: !5441)
!5445 = !DILocation(line: 248, column: 2, scope: !5441)
!5446 = !DILocation(line: 250, column: 6, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5441, file: !236, line: 250, column: 6)
!5448 = !DILocation(line: 250, column: 18, scope: !5447)
!5449 = !DILocation(line: 250, column: 6, scope: !5441)
!5450 = !DILocation(line: 261, column: 14, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5452, file: !236, line: 259, column: 3)
!5452 = distinct !DILexicalBlock(scope: !5447, file: !236, line: 251, column: 2)
!5453 = !DILocation(line: 270, column: 2, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5441, file: !236, line: 270, column: 2)
!5455 = !DILocation(line: 270, column: 2, scope: !5441)
!5456 = !DILocation(line: 270, column: 2, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5454, file: !236, line: 270, column: 2)
!5458 = !DILocation(line: 271, column: 2, scope: !5441)
!5459 = distinct !DISubprogram(name: "prvCheckForValidListAndQueue", scope: !236, file: !236, line: 770, type: !110, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !2013)
!5460 = !DILocation(line: 775, column: 2, scope: !5459)
!5461 = !DILocation(line: 777, column: 7, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !236, line: 777, column: 7)
!5463 = distinct !DILexicalBlock(scope: !5459, file: !236, line: 776, column: 2)
!5464 = !DILocation(line: 777, column: 19, scope: !5462)
!5465 = !DILocation(line: 777, column: 7, scope: !5463)
!5466 = !DILocation(line: 779, column: 4, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5462, file: !236, line: 778, column: 3)
!5468 = !DILocation(line: 780, column: 4, scope: !5467)
!5469 = !DILocation(line: 781, column: 23, scope: !5467)
!5470 = !DILocation(line: 782, column: 24, scope: !5467)
!5471 = !DILocation(line: 783, column: 18, scope: !5467)
!5472 = !DILocation(line: 783, column: 16, scope: !5467)
!5473 = !DILocation(line: 784, column: 4, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5467, file: !236, line: 784, column: 4)
!5475 = !DILocation(line: 784, column: 4, scope: !5467)
!5476 = !DILocation(line: 784, column: 4, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5474, file: !236, line: 784, column: 4)
!5478 = !DILocation(line: 788, column: 9, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5480, file: !236, line: 788, column: 9)
!5480 = distinct !DILexicalBlock(scope: !5467, file: !236, line: 787, column: 4)
!5481 = !DILocation(line: 788, column: 21, scope: !5479)
!5482 = !DILocation(line: 788, column: 9, scope: !5480)
!5483 = !DILocation(line: 790, column: 6, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5479, file: !236, line: 789, column: 5)
!5485 = !DILocation(line: 791, column: 5, scope: !5484)
!5486 = !DILocation(line: 804, column: 2, scope: !5459)
!5487 = !DILocation(line: 805, column: 1, scope: !5459)
!5488 = distinct !DISubprogram(name: "prvTimerTask", scope: !236, file: !236, line: 418, type: !1337, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5489)
!5489 = !{!5490, !5491, !5492}
!5490 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !5488, file: !236, line: 418, type: !30)
!5491 = !DILocalVariable(name: "xNextExpireTime", scope: !5488, file: !236, line: 420, type: !59)
!5492 = !DILocalVariable(name: "xListWasEmpty", scope: !5488, file: !236, line: 421, type: !41)
!5493 = !DILocation(line: 0, scope: !5488)
!5494 = !DILocation(line: 421, column: 1, scope: !5488)
!5495 = !DILocation(line: 426, column: 2, scope: !5488)
!5496 = !DILocation(line: 430, column: 21, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !236, line: 427, column: 2)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !236, line: 426, column: 2)
!5499 = distinct !DILexicalBlock(scope: !5488, file: !236, line: 426, column: 2)
!5500 = !DILocation(line: 434, column: 48, scope: !5497)
!5501 = !DILocation(line: 434, column: 3, scope: !5497)
!5502 = !DILocation(line: 437, column: 3, scope: !5497)
!5503 = !DILocation(line: 426, column: 2, scope: !5498)
!5504 = distinct !{!5504, !5505, !5506}
!5505 = !DILocation(line: 426, column: 2, scope: !5499)
!5506 = !DILocation(line: 438, column: 2, scope: !5499)
!5507 = distinct !DISubprogram(name: "prvGetNextExpireTime", scope: !236, file: !236, line: 495, type: !285, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5508)
!5508 = !{!5509, !5510}
!5509 = !DILocalVariable(name: "pxListWasEmpty", arg: 1, scope: !5507, file: !236, line: 495, type: !287)
!5510 = !DILocalVariable(name: "xNextExpireTime", scope: !5507, file: !236, line: 497, type: !59)
!5511 = !DILocation(line: 0, scope: !5507)
!5512 = !DILocation(line: 506, column: 20, scope: !5507)
!5513 = !DILocation(line: 506, column: 18, scope: !5507)
!5514 = !DILocation(line: 507, column: 6, scope: !5507)
!5515 = !DILocation(line: 509, column: 21, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5517, file: !236, line: 508, column: 2)
!5517 = distinct !DILexicalBlock(scope: !5507, file: !236, line: 507, column: 6)
!5518 = !DILocation(line: 510, column: 2, scope: !5516)
!5519 = !DILocation(line: 0, scope: !5517)
!5520 = !DILocation(line: 517, column: 2, scope: !5507)
!5521 = distinct !DISubprogram(name: "prvProcessTimerOrBlockTask", scope: !236, file: !236, line: 442, type: !5522, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5524)
!5522 = !DISubroutineType(types: !5523)
!5523 = !{null, !2324, !4441}
!5524 = !{!5525, !5526, !5527, !5528}
!5525 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !5521, file: !236, line: 442, type: !2324)
!5526 = !DILocalVariable(name: "xListWasEmpty", arg: 2, scope: !5521, file: !236, line: 442, type: !4441)
!5527 = !DILocalVariable(name: "xTimeNow", scope: !5521, file: !236, line: 444, type: !59)
!5528 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !5521, file: !236, line: 445, type: !41)
!5529 = !DILocation(line: 0, scope: !5521)
!5530 = !DILocation(line: 445, column: 1, scope: !5521)
!5531 = !DILocation(line: 447, column: 2, scope: !5521)
!5532 = !DILocation(line: 454, column: 14, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5521, file: !236, line: 448, column: 2)
!5534 = !DILocation(line: 455, column: 7, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5533, file: !236, line: 455, column: 7)
!5536 = !DILocation(line: 455, column: 31, scope: !5535)
!5537 = !DILocation(line: 455, column: 7, scope: !5533)
!5538 = !DILocation(line: 458, column: 24, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5540, file: !236, line: 458, column: 8)
!5540 = distinct !DILexicalBlock(scope: !5535, file: !236, line: 456, column: 3)
!5541 = !DILocation(line: 458, column: 37, scope: !5539)
!5542 = !DILocation(line: 460, column: 14, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5539, file: !236, line: 459, column: 4)
!5544 = !DILocation(line: 461, column: 5, scope: !5543)
!5545 = !DILocation(line: 462, column: 4, scope: !5543)
!5546 = !DILocation(line: 471, column: 37, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5539, file: !236, line: 464, column: 4)
!5548 = !DILocation(line: 471, column: 68, scope: !5547)
!5549 = !DILocation(line: 471, column: 5, scope: !5547)
!5550 = !DILocation(line: 473, column: 9, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5547, file: !236, line: 473, column: 9)
!5552 = !DILocation(line: 473, column: 26, scope: !5551)
!5553 = !DILocation(line: 473, column: 9, scope: !5547)
!5554 = !DILocation(line: 479, column: 6, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !236, line: 479, column: 6)
!5556 = distinct !DILexicalBlock(scope: !5551, file: !236, line: 474, column: 5)
!5557 = !{i64 2148397420}
!5558 = !{i64 2148397460}
!5559 = !DILocation(line: 480, column: 5, scope: !5556)
!5560 = !DILocation(line: 489, column: 13, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5535, file: !236, line: 488, column: 3)
!5562 = !DILocation(line: 492, column: 1, scope: !5521)
!5563 = distinct !DISubprogram(name: "prvProcessReceivedCommands", scope: !236, file: !236, line: 585, type: !110, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5564)
!5564 = !{!5565, !5579, !5580, !5581, !5582}
!5565 = !DILocalVariable(name: "xMessage", scope: !5563, file: !236, line: 587, type: !5566)
!5566 = !DIDerivedType(tag: DW_TAG_typedef, name: "DaemonTaskMessage_t", file: !236, line: 155, baseType: !5567)
!5567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerQueueMessage", file: !236, line: 142, size: 96, elements: !5568)
!5568 = !{!5569, !5570}
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageID", scope: !5567, file: !236, line: 144, baseType: !41, size: 32)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !5567, file: !236, line: 154, baseType: !5571, size: 64, offset: 32)
!5571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5567, file: !236, line: 145, size: 64, elements: !5572)
!5572 = !{!5573}
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "xTimerParameters", scope: !5571, file: !236, line: 147, baseType: !5574, size: 64)
!5574 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerParameter_t", file: !236, line: 130, baseType: !5575)
!5575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tmrTimerParameters", file: !236, line: 126, size: 64, elements: !5576)
!5576 = !{!5577, !5578}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "xMessageValue", scope: !5575, file: !236, line: 128, baseType: !59, size: 32)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "pxTimer", scope: !5575, file: !236, line: 129, baseType: !238, size: 32, offset: 32)
!5579 = !DILocalVariable(name: "pxTimer", scope: !5563, file: !236, line: 588, type: !238)
!5580 = !DILocalVariable(name: "xTimerListsWereSwitched", scope: !5563, file: !236, line: 589, type: !41)
!5581 = !DILocalVariable(name: "xResult", scope: !5563, file: !236, line: 589, type: !41)
!5582 = !DILocalVariable(name: "xTimeNow", scope: !5563, file: !236, line: 590, type: !59)
!5583 = !DILocation(line: 587, column: 1, scope: !5563)
!5584 = !DILocation(line: 587, column: 21, scope: !5563)
!5585 = !DILocation(line: 589, column: 1, scope: !5563)
!5586 = !DILocation(line: 592, column: 9, scope: !5563)
!5587 = !DILocation(line: 592, column: 62, scope: !5563)
!5588 = !DILocation(line: 592, column: 2, scope: !5563)
!5589 = !DILocation(line: 618, column: 16, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5591, file: !236, line: 618, column: 7)
!5591 = distinct !DILexicalBlock(scope: !5563, file: !236, line: 593, column: 2)
!5592 = !DILocation(line: 618, column: 27, scope: !5590)
!5593 = !DILocation(line: 618, column: 7, scope: !5591)
!5594 = !DILocation(line: 622, column: 42, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5590, file: !236, line: 619, column: 3)
!5596 = !DILocation(line: 0, scope: !5563)
!5597 = !DILocation(line: 624, column: 8, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5595, file: !236, line: 624, column: 8)
!5599 = !DILocation(line: 624, column: 8, scope: !5595)
!5600 = !DILocation(line: 627, column: 14, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5598, file: !236, line: 625, column: 4)
!5602 = !DILocation(line: 628, column: 4, scope: !5601)
!5603 = !DILocation(line: 642, column: 15, scope: !5595)
!5604 = !DILocation(line: 644, column: 21, scope: !5595)
!5605 = !DILocation(line: 644, column: 4, scope: !5595)
!5606 = !DILocation(line: 652, column: 76, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !236, line: 652, column: 10)
!5608 = distinct !DILexicalBlock(scope: !5595, file: !236, line: 645, column: 4)
!5609 = !DILocation(line: 652, column: 101, scope: !5607)
!5610 = !DILocation(line: 652, column: 90, scope: !5607)
!5611 = !DILocation(line: 652, column: 10, scope: !5607)
!5612 = !DILocation(line: 652, column: 176, scope: !5607)
!5613 = !DILocation(line: 652, column: 10, scope: !5608)
!5614 = !DILocation(line: 656, column: 16, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5607, file: !236, line: 653, column: 6)
!5616 = !DILocation(line: 656, column: 36, scope: !5615)
!5617 = !DILocation(line: 656, column: 7, scope: !5615)
!5618 = !DILocation(line: 659, column: 20, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5615, file: !236, line: 659, column: 11)
!5620 = !DILocation(line: 659, column: 33, scope: !5619)
!5621 = !DILocation(line: 659, column: 11, scope: !5615)
!5622 = !DILocation(line: 661, column: 106, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5619, file: !236, line: 660, column: 7)
!5624 = !DILocation(line: 661, column: 131, scope: !5623)
!5625 = !DILocation(line: 661, column: 120, scope: !5623)
!5626 = !DILocation(line: 661, column: 18, scope: !5623)
!5627 = !DILocation(line: 662, column: 8, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5623, file: !236, line: 662, column: 8)
!5629 = !DILocation(line: 662, column: 8, scope: !5623)
!5630 = !DILocation(line: 662, column: 8, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5628, file: !236, line: 662, column: 8)
!5632 = !DILocation(line: 684, column: 65, scope: !5608)
!5633 = !DILocation(line: 684, column: 15, scope: !5608)
!5634 = !DILocation(line: 684, column: 35, scope: !5608)
!5635 = !DILocation(line: 685, column: 6, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5608, file: !236, line: 685, column: 6)
!5637 = !DILocation(line: 685, column: 6, scope: !5608)
!5638 = !DILocation(line: 685, column: 6, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5636, file: !236, line: 685, column: 6)
!5640 = !DILocation(line: 693, column: 74, scope: !5608)
!5641 = !DILocation(line: 693, column: 63, scope: !5608)
!5642 = !DILocation(line: 693, column: 15, scope: !5608)
!5643 = !DILocation(line: 694, column: 6, scope: !5608)
!5644 = !DILocation(line: 699, column: 17, scope: !5608)
!5645 = !DILocation(line: 699, column: 6, scope: !5608)
!5646 = !DILocation(line: 700, column: 6, scope: !5608)
!5647 = distinct !{!5647, !5588, !5648}
!5648 = !DILocation(line: 707, column: 2, scope: !5563)
!5649 = !DILocation(line: 708, column: 1, scope: !5563)
!5650 = !DILocation(line: 0, scope: !284)
!5651 = !DILocation(line: 526, column: 13, scope: !284)
!5652 = !DILocation(line: 528, column: 17, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !284, file: !236, line: 528, column: 6)
!5654 = !DILocation(line: 528, column: 15, scope: !5653)
!5655 = !DILocation(line: 528, column: 6, scope: !284)
!5656 = !DILocation(line: 530, column: 3, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5653, file: !236, line: 529, column: 2)
!5658 = !DILocation(line: 532, column: 2, scope: !5657)
!5659 = !DILocation(line: 0, scope: !5653)
!5660 = !DILocation(line: 538, column: 12, scope: !284)
!5661 = !DILocation(line: 540, column: 2, scope: !284)
!5662 = distinct !DISubprogram(name: "prvInsertTimerInActiveList", scope: !236, file: !236, line: 544, type: !5663, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5666)
!5663 = !DISubroutineType(types: !5664)
!5664 = !{!41, !5665, !2324, !2324, !2324}
!5665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !238)
!5666 = !{!5667, !5668, !5669, !5670, !5671}
!5667 = !DILocalVariable(name: "pxTimer", arg: 1, scope: !5662, file: !236, line: 544, type: !5665)
!5668 = !DILocalVariable(name: "xNextExpiryTime", arg: 2, scope: !5662, file: !236, line: 544, type: !2324)
!5669 = !DILocalVariable(name: "xTimeNow", arg: 3, scope: !5662, file: !236, line: 544, type: !2324)
!5670 = !DILocalVariable(name: "xCommandTime", arg: 4, scope: !5662, file: !236, line: 544, type: !2324)
!5671 = !DILocalVariable(name: "xProcessTimerNow", scope: !5662, file: !236, line: 546, type: !41)
!5672 = !DILocation(line: 0, scope: !5662)
!5673 = !DILocation(line: 548, column: 2, scope: !5662)
!5674 = !DILocation(line: 549, column: 2, scope: !5662)
!5675 = !DILocation(line: 551, column: 22, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5662, file: !236, line: 551, column: 6)
!5677 = !DILocation(line: 551, column: 6, scope: !5662)
!5678 = !DILocation(line: 555, column: 18, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5680, file: !236, line: 555, column: 7)
!5680 = distinct !DILexicalBlock(scope: !5676, file: !236, line: 552, column: 2)
!5681 = !DILocation(line: 555, column: 47, scope: !5679)
!5682 = !DILocation(line: 555, column: 35, scope: !5679)
!5683 = !DILocation(line: 555, column: 7, scope: !5680)
!5684 = !DILocation(line: 568, column: 18, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5686, file: !236, line: 568, column: 7)
!5686 = distinct !DILexicalBlock(scope: !5676, file: !236, line: 567, column: 2)
!5687 = !DILocation(line: 568, column: 35, scope: !5685)
!5688 = !DILocation(line: 0, scope: !5676)
!5689 = !DILocation(line: 581, column: 2, scope: !5662)
!5690 = distinct !DISubprogram(name: "xTimerGenericCommand", scope: !236, file: !236, line: 316, type: !5691, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5693)
!5691 = !DISubroutineType(types: !5692)
!5692 = !{!41, !263, !4441, !2324, !287, !2324}
!5693 = !{!5694, !5695, !5696, !5697, !5698, !5699, !5700}
!5694 = !DILocalVariable(name: "xTimer", arg: 1, scope: !5690, file: !236, line: 316, type: !263)
!5695 = !DILocalVariable(name: "xCommandID", arg: 2, scope: !5690, file: !236, line: 316, type: !4441)
!5696 = !DILocalVariable(name: "xOptionalValue", arg: 3, scope: !5690, file: !236, line: 316, type: !2324)
!5697 = !DILocalVariable(name: "pxHigherPriorityTaskWoken", arg: 4, scope: !5690, file: !236, line: 316, type: !287)
!5698 = !DILocalVariable(name: "xTicksToWait", arg: 5, scope: !5690, file: !236, line: 316, type: !2324)
!5699 = !DILocalVariable(name: "xReturn", scope: !5690, file: !236, line: 318, type: !41)
!5700 = !DILocalVariable(name: "xMessage", scope: !5690, file: !236, line: 319, type: !5566)
!5701 = !DILocation(line: 0, scope: !5690)
!5702 = !DILocation(line: 319, column: 1, scope: !5690)
!5703 = !DILocation(line: 319, column: 21, scope: !5690)
!5704 = !DILocation(line: 323, column: 6, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5690, file: !236, line: 323, column: 6)
!5706 = !DILocation(line: 323, column: 18, scope: !5705)
!5707 = !DILocation(line: 323, column: 6, scope: !5690)
!5708 = !DILocation(line: 326, column: 12, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5705, file: !236, line: 324, column: 2)
!5710 = !DILocation(line: 326, column: 23, scope: !5709)
!5711 = !DILocation(line: 327, column: 31, scope: !5709)
!5712 = !DILocation(line: 327, column: 45, scope: !5709)
!5713 = !DILocation(line: 328, column: 31, scope: !5709)
!5714 = !DILocation(line: 328, column: 39, scope: !5709)
!5715 = !DILocation(line: 330, column: 18, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5709, file: !236, line: 330, column: 7)
!5717 = !DILocation(line: 330, column: 7, scope: !5709)
!5718 = !DILocation(line: 332, column: 8, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5720, file: !236, line: 332, column: 8)
!5720 = distinct !DILexicalBlock(scope: !5716, file: !236, line: 331, column: 3)
!5721 = !DILocation(line: 332, column: 33, scope: !5719)
!5722 = !DILocation(line: 0, scope: !5719)
!5723 = !DILocation(line: 332, column: 8, scope: !5720)
!5724 = !DILocation(line: 334, column: 15, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5719, file: !236, line: 333, column: 4)
!5726 = !DILocation(line: 335, column: 4, scope: !5725)
!5727 = !DILocation(line: 338, column: 15, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5719, file: !236, line: 337, column: 4)
!5729 = !DILocation(line: 343, column: 14, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5716, file: !236, line: 342, column: 3)
!5731 = !DILocation(line: 354, column: 1, scope: !5690)
!5732 = !DILocation(line: 353, column: 2, scope: !5690)
!5733 = distinct !DISubprogram(name: "prvSwitchTimerLists", scope: !236, file: !236, line: 711, type: !110, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5734)
!5734 = !{!5735, !5736, !5737, !5738, !5739}
!5735 = !DILocalVariable(name: "xNextExpireTime", scope: !5733, file: !236, line: 713, type: !59)
!5736 = !DILocalVariable(name: "xReloadTime", scope: !5733, file: !236, line: 713, type: !59)
!5737 = !DILocalVariable(name: "pxTemp", scope: !5733, file: !236, line: 714, type: !268)
!5738 = !DILocalVariable(name: "pxTimer", scope: !5733, file: !236, line: 715, type: !238)
!5739 = !DILocalVariable(name: "xResult", scope: !5733, file: !236, line: 716, type: !41)
!5740 = !DILocation(line: 722, column: 9, scope: !5733)
!5741 = !DILocation(line: 722, column: 2, scope: !5733)
!5742 = !DILocation(line: 724, column: 21, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5733, file: !236, line: 723, column: 2)
!5744 = !DILocation(line: 0, scope: !5733)
!5745 = !DILocation(line: 727, column: 27, scope: !5743)
!5746 = !DILocation(line: 728, column: 38, scope: !5743)
!5747 = !DILocation(line: 728, column: 12, scope: !5743)
!5748 = !DILocation(line: 734, column: 12, scope: !5743)
!5749 = !DILocation(line: 734, column: 3, scope: !5743)
!5750 = !DILocation(line: 736, column: 16, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5743, file: !236, line: 736, column: 7)
!5752 = !DILocation(line: 736, column: 29, scope: !5751)
!5753 = !DILocation(line: 736, column: 7, scope: !5743)
!5754 = !DILocation(line: 744, column: 47, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5751, file: !236, line: 737, column: 3)
!5756 = !DILocation(line: 744, column: 36, scope: !5755)
!5757 = !DILocation(line: 745, column: 20, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5755, file: !236, line: 745, column: 8)
!5759 = !DILocation(line: 745, column: 8, scope: !5755)
!5760 = !DILocation(line: 747, column: 5, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5758, file: !236, line: 746, column: 4)
!5762 = !DILocation(line: 748, column: 5, scope: !5761)
!5763 = !DILocation(line: 749, column: 18, scope: !5761)
!5764 = !DILocation(line: 749, column: 5, scope: !5761)
!5765 = !DILocation(line: 750, column: 4, scope: !5761)
!5766 = !DILocation(line: 753, column: 15, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5758, file: !236, line: 752, column: 4)
!5768 = !DILocation(line: 754, column: 5, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5767, file: !236, line: 754, column: 5)
!5770 = !DILocation(line: 754, column: 5, scope: !5767)
!5771 = !DILocation(line: 754, column: 5, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5769, file: !236, line: 754, column: 5)
!5773 = distinct !{!5773, !5741, !5774}
!5774 = !DILocation(line: 762, column: 2, scope: !5733)
!5775 = !DILocation(line: 765, column: 23, scope: !5733)
!5776 = !DILocation(line: 765, column: 21, scope: !5733)
!5777 = !DILocation(line: 766, column: 22, scope: !5733)
!5778 = !DILocation(line: 767, column: 1, scope: !5733)
!5779 = distinct !DISubprogram(name: "prvProcessExpiredTimer", scope: !236, file: !236, line: 378, type: !5780, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5782)
!5780 = !DISubroutineType(types: !5781)
!5781 = !{null, !2324, !2324}
!5782 = !{!5783, !5784, !5785, !5786}
!5783 = !DILocalVariable(name: "xNextExpireTime", arg: 1, scope: !5779, file: !236, line: 378, type: !2324)
!5784 = !DILocalVariable(name: "xTimeNow", arg: 2, scope: !5779, file: !236, line: 378, type: !2324)
!5785 = !DILocalVariable(name: "xResult", scope: !5779, file: !236, line: 380, type: !41)
!5786 = !DILocalVariable(name: "pxTimer", scope: !5779, file: !236, line: 381, type: !5665)
!5787 = !DILocation(line: 0, scope: !5779)
!5788 = !DILocation(line: 381, column: 41, scope: !5779)
!5789 = !DILocation(line: 385, column: 37, scope: !5779)
!5790 = !DILocation(line: 385, column: 11, scope: !5779)
!5791 = !DILocation(line: 390, column: 15, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5779, file: !236, line: 390, column: 6)
!5793 = !DILocation(line: 390, column: 28, scope: !5792)
!5794 = !DILocation(line: 390, column: 6, scope: !5779)
!5795 = !DILocation(line: 381, column: 27, scope: !5779)
!5796 = !DILocation(line: 395, column: 73, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5798, file: !236, line: 395, column: 7)
!5798 = distinct !DILexicalBlock(scope: !5792, file: !236, line: 391, column: 2)
!5799 = !DILocation(line: 395, column: 62, scope: !5797)
!5800 = !DILocation(line: 395, column: 7, scope: !5797)
!5801 = !DILocation(line: 395, column: 124, scope: !5797)
!5802 = !DILocation(line: 395, column: 7, scope: !5798)
!5803 = !DILocation(line: 399, column: 14, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5797, file: !236, line: 396, column: 3)
!5805 = !DILocation(line: 400, column: 4, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5804, file: !236, line: 400, column: 4)
!5807 = !DILocation(line: 400, column: 4, scope: !5804)
!5808 = !DILocation(line: 400, column: 4, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5806, file: !236, line: 400, column: 4)
!5810 = !DILocation(line: 414, column: 11, scope: !5779)
!5811 = !DILocation(line: 414, column: 2, scope: !5779)
!5812 = !DILocation(line: 415, column: 1, scope: !5779)
!5813 = distinct !DISubprogram(name: "xTimerCreate", scope: !236, file: !236, line: 275, type: !5814, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5816)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{!263, !1068, !2324, !3132, !2027, !258}
!5816 = !{!5817, !5818, !5819, !5820, !5821, !5822}
!5817 = !DILocalVariable(name: "pcTimerName", arg: 1, scope: !5813, file: !236, line: 275, type: !1068)
!5818 = !DILocalVariable(name: "xTimerPeriodInTicks", arg: 2, scope: !5813, file: !236, line: 275, type: !2324)
!5819 = !DILocalVariable(name: "uxAutoReload", arg: 3, scope: !5813, file: !236, line: 275, type: !3132)
!5820 = !DILocalVariable(name: "pvTimerID", arg: 4, scope: !5813, file: !236, line: 275, type: !2027)
!5821 = !DILocalVariable(name: "pxCallbackFunction", arg: 5, scope: !5813, file: !236, line: 275, type: !258)
!5822 = !DILocalVariable(name: "pxNewTimer", scope: !5813, file: !236, line: 277, type: !238)
!5823 = !DILocation(line: 0, scope: !5813)
!5824 = !DILocation(line: 280, column: 26, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5813, file: !236, line: 280, column: 6)
!5826 = !DILocation(line: 280, column: 6, scope: !5813)
!5827 = !DILocation(line: 286, column: 30, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5825, file: !236, line: 285, column: 2)
!5829 = !DILocation(line: 287, column: 18, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5828, file: !236, line: 287, column: 7)
!5831 = !DILocation(line: 287, column: 7, scope: !5828)
!5832 = !DILocation(line: 291, column: 4, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5830, file: !236, line: 288, column: 3)
!5834 = !DILocation(line: 294, column: 16, scope: !5833)
!5835 = !DILocation(line: 294, column: 28, scope: !5833)
!5836 = !DILocation(line: 295, column: 16, scope: !5833)
!5837 = !DILocation(line: 295, column: 36, scope: !5833)
!5838 = !DILocation(line: 296, column: 16, scope: !5833)
!5839 = !DILocation(line: 296, column: 29, scope: !5833)
!5840 = !DILocation(line: 297, column: 16, scope: !5833)
!5841 = !DILocation(line: 297, column: 26, scope: !5833)
!5842 = !DILocation(line: 298, column: 16, scope: !5833)
!5843 = !DILocation(line: 298, column: 35, scope: !5833)
!5844 = !DILocation(line: 299, column: 40, scope: !5833)
!5845 = !DILocation(line: 299, column: 4, scope: !5833)
!5846 = !DILocation(line: 302, column: 3, scope: !5833)
!5847 = !DILocation(line: 310, column: 2, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5849, file: !236, line: 310, column: 2)
!5849 = distinct !DILexicalBlock(scope: !5813, file: !236, line: 310, column: 2)
!5850 = !DILocation(line: 312, column: 2, scope: !5813)
!5851 = distinct !DISubprogram(name: "pcTimerGetTimerName", scope: !236, file: !236, line: 370, type: !5852, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5854)
!5852 = !DISubroutineType(types: !5853)
!5853 = !{!104, !263}
!5854 = !{!5855, !5856}
!5855 = !DILocalVariable(name: "xTimer", arg: 1, scope: !5851, file: !236, line: 370, type: !263)
!5856 = !DILocalVariable(name: "pxTimer", scope: !5851, file: !236, line: 372, type: !238)
!5857 = !DILocation(line: 0, scope: !5851)
!5858 = !DILocation(line: 374, column: 18, scope: !5851)
!5859 = !DILocation(line: 374, column: 2, scope: !5851)
!5860 = distinct !DISubprogram(name: "xTimerIsTimerActive", scope: !236, file: !236, line: 808, type: !5861, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5863)
!5861 = !DISubroutineType(types: !5862)
!5862 = !{!41, !263}
!5863 = !{!5864, !5865, !5866}
!5864 = !DILocalVariable(name: "xTimer", arg: 1, scope: !5860, file: !236, line: 808, type: !263)
!5865 = !DILocalVariable(name: "xTimerIsInActiveList", scope: !5860, file: !236, line: 810, type: !41)
!5866 = !DILocalVariable(name: "pxTimer", scope: !5860, file: !236, line: 811, type: !238)
!5867 = !DILocation(line: 0, scope: !5860)
!5868 = !DILocation(line: 814, column: 2, scope: !5860)
!5869 = !DILocation(line: 819, column: 44, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5860, file: !236, line: 815, column: 2)
!5871 = !DILocation(line: 819, column: 41, scope: !5870)
!5872 = !DILocation(line: 821, column: 2, scope: !5860)
!5873 = !DILocation(line: 823, column: 2, scope: !5860)
!5874 = distinct !DISubprogram(name: "pvTimerGetTimerID", scope: !236, file: !236, line: 827, type: !5875, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !235, retainedNodes: !5878)
!5875 = !DISubroutineType(types: !5876)
!5876 = !{!30, !5877}
!5877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !263)
!5878 = !{!5879, !5880}
!5879 = !DILocalVariable(name: "xTimer", arg: 1, scope: !5874, file: !236, line: 827, type: !5877)
!5880 = !DILocalVariable(name: "pxTimer", scope: !5874, file: !236, line: 829, type: !5665)
!5881 = !DILocation(line: 0, scope: !5874)
!5882 = !DILocation(line: 831, column: 18, scope: !5874)
!5883 = !DILocation(line: 831, column: 2, scope: !5874)
!5884 = distinct !DISubprogram(name: "pxPortInitialiseStack", scope: !301, file: !301, line: 222, type: !5885, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !5887)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!36, !36, !2024, !30}
!5887 = !{!5888, !5889, !5890}
!5888 = !DILocalVariable(name: "pxTopOfStack", arg: 1, scope: !5884, file: !301, line: 222, type: !36)
!5889 = !DILocalVariable(name: "pxCode", arg: 2, scope: !5884, file: !301, line: 222, type: !2024)
!5890 = !DILocalVariable(name: "pvParameters", arg: 3, scope: !5884, file: !301, line: 222, type: !30)
!5891 = !DILocation(line: 0, scope: !5884)
!5892 = !DILocation(line: 229, column: 14, scope: !5884)
!5893 = !DILocation(line: 231, column: 16, scope: !5884)
!5894 = !DILocation(line: 232, column: 14, scope: !5884)
!5895 = !DILocation(line: 233, column: 18, scope: !5884)
!5896 = !DILocation(line: 233, column: 16, scope: !5884)
!5897 = !DILocation(line: 234, column: 14, scope: !5884)
!5898 = !DILocation(line: 235, column: 16, scope: !5884)
!5899 = !DILocation(line: 238, column: 15, scope: !5884)
!5900 = !DILocation(line: 239, column: 18, scope: !5884)
!5901 = !DILocation(line: 239, column: 16, scope: !5884)
!5902 = !DILocation(line: 243, column: 14, scope: !5884)
!5903 = !DILocation(line: 244, column: 16, scope: !5884)
!5904 = !DILocation(line: 246, column: 15, scope: !5884)
!5905 = !DILocation(line: 248, column: 2, scope: !5884)
!5906 = distinct !DISubprogram(name: "prvTaskExitError", scope: !301, file: !301, line: 252, type: !110, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !2013)
!5907 = !DILocation(line: 260, column: 2, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5906, file: !301, line: 260, column: 2)
!5909 = !DILocation(line: 260, column: 2, scope: !5906)
!5910 = !DILocation(line: 260, column: 2, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5908, file: !301, line: 260, column: 2)
!5912 = !DILocation(line: 215, column: 2, scope: !5913, inlinedAt: !5916)
!5913 = distinct !DISubprogram(name: "vPortRaiseBASEPRI", scope: !28, file: !28, line: 211, type: !110, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !5914)
!5914 = !{!5915}
!5915 = !DILocalVariable(name: "ulNewBASEPRI", scope: !5913, file: !28, line: 213, type: !38)
!5916 = distinct !DILocation(line: 261, column: 2, scope: !5906)
!5917 = !{i64 657584, i64 657617, i64 657653, i64 657680}
!5918 = !DILocation(line: 0, scope: !5913, inlinedAt: !5916)
!5919 = !DILocation(line: 262, column: 2, scope: !5906)
!5920 = !DILocation(line: 262, column: 2, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !301, line: 262, column: 2)
!5922 = distinct !DILexicalBlock(scope: !5906, file: !301, line: 262, column: 2)
!5923 = distinct !{!5923, !5924, !5925}
!5924 = !DILocation(line: 262, column: 2, scope: !5922)
!5925 = !DILocation(line: 262, column: 11, scope: !5922)
!5926 = distinct !DISubprogram(name: "vPortCurrentTaskStackOverflowCheck", scope: !301, file: !301, line: 268, type: !110, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !5927)
!5927 = !{!5928, !5929}
!5928 = !DILocalVariable(name: "stack_start_address", scope: !5926, file: !301, line: 270, type: !38)
!5929 = !DILocalVariable(name: "ret", scope: !5926, file: !301, line: 271, type: !1233)
!5930 = !DILocation(line: 273, column: 24, scope: !5926)
!5931 = !DILocation(line: 0, scope: !5926)
!5932 = !DILocation(line: 276, column: 8, scope: !5926)
!5933 = !DILocation(line: 281, column: 1, scope: !5926)
!5934 = distinct !DISubprogram(name: "SVC_Handler", scope: !301, file: !301, line: 287, type: !110, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !2013)
!5935 = !DILocation(line: 289, column: 2, scope: !5934)
!5936 = !{i64 11674, i64 11700, i64 11789, i64 11939, i64 11982, i64 12128, i64 12194, i64 12283, i64 12374, i64 12519, i64 12585, i64 12607, i64 12635, i64 12666, i64 12690, i64 12709, i64 12734}
!5937 = !DILocation(line: 312, column: 1, scope: !5934)
!5938 = distinct !DISubprogram(name: "xPortStartScheduler", scope: !301, file: !301, line: 335, type: !2424, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !5939)
!5939 = !{!5940, !5942, !5944}
!5940 = !DILocalVariable(name: "ulOriginalPriority", scope: !5941, file: !301, line: 343, type: !44)
!5941 = distinct !DILexicalBlock(scope: !5938, file: !301, line: 342, column: 2)
!5942 = !DILocalVariable(name: "pucFirstUserPriorityRegister", scope: !5941, file: !301, line: 344, type: !5943)
!5943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !319)
!5944 = !DILocalVariable(name: "ucMaxPriorityValue", scope: !5941, file: !301, line: 345, type: !320)
!5945 = !DILocation(line: 343, column: 3, scope: !5941)
!5946 = !DILocation(line: 343, column: 21, scope: !5941)
!5947 = !DILocation(line: 0, scope: !5941)
!5948 = !DILocation(line: 345, column: 3, scope: !5941)
!5949 = !DILocation(line: 345, column: 20, scope: !5941)
!5950 = !DILocation(line: 353, column: 24, scope: !5941)
!5951 = !DILocation(line: 353, column: 22, scope: !5941)
!5952 = !DILocation(line: 357, column: 33, scope: !5941)
!5953 = !DILocation(line: 360, column: 24, scope: !5941)
!5954 = !DILocation(line: 360, column: 22, scope: !5941)
!5955 = !DILocation(line: 363, column: 65, scope: !5941)
!5956 = !DILocation(line: 363, column: 63, scope: !5941)
!5957 = !DILocation(line: 363, column: 24, scope: !5941)
!5958 = !DILocation(line: 368, column: 12, scope: !5941)
!5959 = !DILocation(line: 368, column: 55, scope: !5941)
!5960 = !DILocation(line: 368, column: 3, scope: !5941)
!5961 = !DILocation(line: 370, column: 22, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5941, file: !301, line: 369, column: 3)
!5963 = !DILocation(line: 371, column: 23, scope: !5962)
!5964 = distinct !{!5964, !5960, !5965}
!5965 = !DILocation(line: 372, column: 3, scope: !5941)
!5966 = !DILocation(line: 376, column: 22, scope: !5941)
!5967 = !DILocation(line: 377, column: 22, scope: !5941)
!5968 = !DILocation(line: 381, column: 35, scope: !5941)
!5969 = !DILocation(line: 381, column: 33, scope: !5941)
!5970 = !DILocation(line: 382, column: 2, scope: !5938)
!5971 = !DILocation(line: 386, column: 23, scope: !5938)
!5972 = !DILocation(line: 388, column: 23, scope: !5938)
!5973 = !DILocation(line: 392, column: 2, scope: !5938)
!5974 = !DILocation(line: 395, column: 20, scope: !5938)
!5975 = !DILocation(line: 398, column: 2, scope: !5938)
!5976 = !DILocation(line: 401, column: 17, scope: !5938)
!5977 = !DILocation(line: 404, column: 2, scope: !5938)
!5978 = !DILocation(line: 410, column: 2, scope: !5938)
!5979 = !DILocation(line: 413, column: 2, scope: !5938)
!5980 = distinct !DISubprogram(name: "vPortEnableVFP", scope: !301, file: !301, line: 741, type: !110, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !2013)
!5981 = !DILocation(line: 743, column: 2, scope: !5980)
!5982 = !{i64 28402, i64 28478, i64 28502, i64 28517, i64 28609, i64 28633}
!5983 = !DILocation(line: 752, column: 1, scope: !5980)
!5984 = distinct !DISubprogram(name: "prvPortStartFirstTask", scope: !301, file: !301, line: 315, type: !110, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !2013)
!5985 = !DILocation(line: 317, column: 2, scope: !5984)
!5986 = !{i64 12920, i64 13009, i64 13036, i64 13063, i64 13138, i64 13194, i64 13216, i64 13235, i64 13254, i64 13314}
!5987 = !DILocation(line: 329, column: 1, scope: !5984)
!5988 = distinct !DISubprogram(name: "vPortEndScheduler", scope: !301, file: !301, line: 417, type: !110, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !2013)
!5989 = !DILocation(line: 421, column: 2, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5988, file: !301, line: 421, column: 2)
!5991 = !DILocation(line: 421, column: 2, scope: !5988)
!5992 = !DILocation(line: 421, column: 2, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5990, file: !301, line: 421, column: 2)
!5994 = !DILocation(line: 422, column: 1, scope: !5988)
!5995 = distinct !DISubprogram(name: "vPortEnterCritical", scope: !301, file: !301, line: 425, type: !110, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !2013)
!5996 = !DILocation(line: 215, column: 2, scope: !5913, inlinedAt: !5997)
!5997 = distinct !DILocation(line: 427, column: 2, scope: !5995)
!5998 = !DILocation(line: 0, scope: !5913, inlinedAt: !5997)
!5999 = !DILocation(line: 428, column: 19, scope: !5995)
!6000 = !DILocation(line: 435, column: 24, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5995, file: !301, line: 435, column: 6)
!6002 = !DILocation(line: 435, column: 6, scope: !5995)
!6003 = !DILocation(line: 437, column: 3, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6005, file: !301, line: 437, column: 3)
!6005 = distinct !DILexicalBlock(scope: !6001, file: !301, line: 436, column: 2)
!6006 = !DILocation(line: 437, column: 3, scope: !6005)
!6007 = !DILocation(line: 437, column: 3, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6004, file: !301, line: 437, column: 3)
!6009 = !DILocation(line: 439, column: 1, scope: !5995)
!6010 = distinct !DISubprogram(name: "vPortExitCritical", scope: !301, file: !301, line: 442, type: !110, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !2013)
!6011 = !DILocation(line: 444, column: 2, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6010, file: !301, line: 444, column: 2)
!6013 = !DILocation(line: 444, column: 2, scope: !6010)
!6014 = !DILocation(line: 444, column: 2, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6012, file: !301, line: 444, column: 2)
!6016 = !DILocation(line: 445, column: 19, scope: !6010)
!6017 = !DILocation(line: 446, column: 24, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6010, file: !301, line: 446, column: 6)
!6019 = !DILocation(line: 446, column: 6, scope: !6010)
!6020 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !6021, file: !28, line: 247, type: !38)
!6021 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !28, file: !28, line: 247, type: !2656, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !6022)
!6022 = !{!6020}
!6023 = !DILocation(line: 0, scope: !6021, inlinedAt: !6024)
!6024 = distinct !DILocation(line: 448, column: 3, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6018, file: !301, line: 447, column: 2)
!6026 = !DILocation(line: 249, column: 2, scope: !6021, inlinedAt: !6024)
!6027 = !{i64 658505}
!6028 = !DILocation(line: 449, column: 2, scope: !6025)
!6029 = !DILocation(line: 450, column: 1, scope: !6010)
!6030 = distinct !DISubprogram(name: "PendSV_Handler", scope: !301, file: !301, line: 469, type: !110, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !2013)
!6031 = !DILocation(line: 473, column: 2, scope: !6030)
!6032 = !{i64 18243, i64 18266, i64 18289, i64 18376, i64 18399, i64 18421, i64 18446, i64 18465, i64 18481, i64 18559, i64 18584, i64 18600, i64 18701, i64 18721, i64 18755, i64 18771, i64 18836, i64 18852, i64 18943, i64 18959, i64 18987, i64 19012, i64 19040, i64 19059, i64 19080, i64 19258, i64 19436, i64 19460, i64 19488, i64 19516, i64 19532, i64 19620, i64 19645, i64 19661, i64 19725, i64 19741, i64 19849, i64 19869, i64 19903, i64 19919, i64 19944, i64 19963, i64 20148, i64 20164, i64 20185, i64 20201, i64 20223}
!6033 = !DILocation(line: 537, column: 1, scope: !6030)
!6034 = distinct !DISubprogram(name: "SysTick_Handler", scope: !301, file: !301, line: 540, type: !110, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !6035)
!6035 = !{!6036}
!6036 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !6034, file: !301, line: 547, type: !27)
!6037 = !DILocation(line: 231, column: 2, scope: !6038, inlinedAt: !6042)
!6038 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !28, file: !28, line: 227, type: !2643, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !6039)
!6039 = !{!6040, !6041}
!6040 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !6038, file: !28, line: 229, type: !38)
!6041 = !DILocalVariable(name: "ulNewBASEPRI", scope: !6038, file: !28, line: 229, type: !38)
!6042 = distinct !DILocation(line: 548, column: 27, scope: !6034)
!6043 = !{i64 657972, i64 658009, i64 658041, i64 658077, i64 658104}
!6044 = !DILocation(line: 0, scope: !6038, inlinedAt: !6042)
!6045 = !DILocation(line: 0, scope: !6034)
!6046 = !DILocation(line: 552, column: 3, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6034, file: !301, line: 549, column: 2)
!6048 = !DILocation(line: 555, column: 7, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6047, file: !301, line: 555, column: 7)
!6050 = !DILocation(line: 555, column: 28, scope: !6049)
!6051 = !DILocation(line: 555, column: 7, scope: !6047)
!6052 = !DILocation(line: 559, column: 26, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6049, file: !301, line: 556, column: 3)
!6054 = !DILocation(line: 560, column: 3, scope: !6053)
!6055 = !DILocation(line: 0, scope: !6021, inlinedAt: !6056)
!6056 = distinct !DILocation(line: 562, column: 2, scope: !6034)
!6057 = !DILocation(line: 249, column: 2, scope: !6021, inlinedAt: !6056)
!6058 = !DILocation(line: 564, column: 1, scope: !6034)
!6059 = distinct !DISubprogram(name: "vPortValidateInterruptPriority", scope: !301, file: !301, line: 757, type: !110, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !300, retainedNodes: !6060)
!6060 = !{!6061, !6062}
!6061 = !DILocalVariable(name: "ulCurrentInterrupt", scope: !6059, file: !301, line: 759, type: !38)
!6062 = !DILocalVariable(name: "ucCurrentPriority", scope: !6059, file: !301, line: 760, type: !96)
!6063 = !DILocation(line: 763, column: 3, scope: !6059)
!6064 = !{i64 28942}
!6065 = !DILocation(line: 0, scope: !6059)
!6066 = !DILocation(line: 766, column: 26, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6059, file: !301, line: 766, column: 7)
!6068 = !DILocation(line: 766, column: 7, scope: !6059)
!6069 = !DILocation(line: 769, column: 24, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6067, file: !301, line: 767, column: 3)
!6071 = !DILocation(line: 794, column: 4, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6070, file: !301, line: 794, column: 4)
!6073 = !DILocation(line: 794, column: 4, scope: !6070)
!6074 = !DILocation(line: 794, column: 4, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6072, file: !301, line: 794, column: 4)
!6076 = !DILocation(line: 810, column: 3, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6059, file: !301, line: 810, column: 3)
!6078 = !DILocation(line: 810, column: 3, scope: !6059)
!6079 = !DILocation(line: 810, column: 3, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6077, file: !301, line: 810, column: 3)
!6081 = !DILocation(line: 811, column: 2, scope: !6059)
!6082 = distinct !DISubprogram(name: "pvPortMalloc", scope: !334, file: !334, line: 162, type: !6083, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6085)
!6083 = !DISubroutineType(types: !6084)
!6084 = !{!30, !99}
!6085 = !{!6086, !6087, !6088, !6089, !6090}
!6086 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !6082, file: !334, line: 162, type: !99)
!6087 = !DILocalVariable(name: "pxBlock", scope: !6082, file: !334, line: 164, type: !336)
!6088 = !DILocalVariable(name: "pxPreviousBlock", scope: !6082, file: !334, line: 164, type: !336)
!6089 = !DILocalVariable(name: "pxNewBlockLink", scope: !6082, file: !334, line: 164, type: !336)
!6090 = !DILocalVariable(name: "pvReturn", scope: !6082, file: !334, line: 165, type: !30)
!6091 = !DILocation(line: 0, scope: !6082)
!6092 = !DILocation(line: 178, column: 2, scope: !6082)
!6093 = !DILocation(line: 182, column: 7, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6095, file: !334, line: 182, column: 7)
!6095 = distinct !DILexicalBlock(scope: !6082, file: !334, line: 179, column: 2)
!6096 = !DILocation(line: 182, column: 13, scope: !6094)
!6097 = !DILocation(line: 182, column: 7, scope: !6095)
!6098 = !DILocation(line: 184, column: 4, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6094, file: !334, line: 183, column: 3)
!6100 = !DILocation(line: 185, column: 3, scope: !6099)
!6101 = !DILocation(line: 195, column: 23, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6095, file: !334, line: 195, column: 7)
!6103 = !DILocation(line: 195, column: 21, scope: !6102)
!6104 = !DILocation(line: 195, column: 44, scope: !6102)
!6105 = !DILocation(line: 195, column: 7, scope: !6095)
!6106 = !DILocation(line: 201, column: 17, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6108, file: !334, line: 200, column: 4)
!6108 = distinct !DILexicalBlock(scope: !6109, file: !334, line: 199, column: 8)
!6109 = distinct !DILexicalBlock(scope: !6102, file: !334, line: 196, column: 3)
!6110 = !DILocation(line: 205, column: 23, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6107, file: !334, line: 205, column: 9)
!6112 = !DILocation(line: 205, column: 51, scope: !6111)
!6113 = !DILocation(line: 205, column: 9, scope: !6107)
!6114 = !DILocation(line: 221, column: 22, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6109, file: !334, line: 221, column: 8)
!6116 = !DILocation(line: 221, column: 28, scope: !6115)
!6117 = !DILocation(line: 226, column: 22, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6115, file: !334, line: 222, column: 4)
!6119 = !DILocation(line: 227, column: 23, scope: !6118)
!6120 = !DILocation(line: 227, column: 34, scope: !6118)
!6121 = !DILocation(line: 227, column: 50, scope: !6118)
!6122 = !DILocation(line: 227, column: 64, scope: !6118)
!6123 = !DILocation(line: 227, column: 80, scope: !6118)
!6124 = !DILocation(line: 227, column: 5, scope: !6118)
!6125 = distinct !{!6125, !6124, !6126}
!6126 = !DILocation(line: 231, column: 5, scope: !6118)
!6127 = !DILocation(line: 0, scope: !6118)
!6128 = !DILocation(line: 235, column: 20, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6118, file: !334, line: 235, column: 9)
!6130 = !DILocation(line: 235, column: 17, scope: !6129)
!6131 = !DILocation(line: 235, column: 9, scope: !6118)
!6132 = !DILocation(line: 239, column: 63, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !334, line: 236, column: 5)
!6134 = !DILocation(line: 239, column: 81, scope: !6133)
!6135 = !DILocation(line: 246, column: 50, scope: !6133)
!6136 = !DILocation(line: 246, column: 39, scope: !6133)
!6137 = !DILocation(line: 250, column: 21, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6133, file: !334, line: 250, column: 10)
!6139 = !DILocation(line: 250, column: 32, scope: !6138)
!6140 = !DILocation(line: 250, column: 48, scope: !6138)
!6141 = !DILocation(line: 250, column: 10, scope: !6133)
!6142 = !DILocation(line: 256, column: 39, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6138, file: !334, line: 251, column: 6)
!6144 = !DILocation(line: 256, column: 63, scope: !6143)
!6145 = !DILocation(line: 256, column: 24, scope: !6143)
!6146 = !DILocation(line: 257, column: 7, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6143, file: !334, line: 257, column: 7)
!6148 = !DILocation(line: 257, column: 7, scope: !6143)
!6149 = !DILocation(line: 257, column: 7, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6147, file: !334, line: 257, column: 7)
!6151 = !DILocation(line: 261, column: 45, scope: !6143)
!6152 = !DILocation(line: 261, column: 56, scope: !6143)
!6153 = !DILocation(line: 261, column: 23, scope: !6143)
!6154 = !DILocation(line: 261, column: 34, scope: !6143)
!6155 = !DILocation(line: 262, column: 27, scope: !6143)
!6156 = !DILocation(line: 265, column: 7, scope: !6143)
!6157 = !DILocation(line: 272, column: 38, scope: !6133)
!6158 = !DILocation(line: 266, column: 6, scope: !6143)
!6159 = !DILocation(line: 272, column: 26, scope: !6133)
!6160 = !DILocation(line: 274, column: 32, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6133, file: !334, line: 274, column: 10)
!6162 = !DILocation(line: 274, column: 30, scope: !6161)
!6163 = !DILocation(line: 274, column: 10, scope: !6133)
!6164 = !DILocation(line: 276, column: 38, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6161, file: !334, line: 275, column: 6)
!6166 = !DILocation(line: 277, column: 6, scope: !6165)
!6167 = !DILocation(line: 285, column: 29, scope: !6133)
!6168 = !DILocation(line: 285, column: 26, scope: !6133)
!6169 = !DILocation(line: 286, column: 31, scope: !6133)
!6170 = !DILocation(line: 287, column: 5, scope: !6133)
!6171 = !DILocation(line: 305, column: 11, scope: !6082)
!6172 = !DILocation(line: 321, column: 2, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6082, file: !334, line: 321, column: 2)
!6174 = !DILocation(line: 321, column: 2, scope: !6082)
!6175 = !DILocation(line: 321, column: 2, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6173, file: !334, line: 321, column: 2)
!6177 = !DILocation(line: 322, column: 2, scope: !6082)
!6178 = distinct !DISubprogram(name: "prvHeapInit", scope: !334, file: !334, line: 392, type: !110, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6179)
!6179 = !{!6180, !6181, !6182, !6183}
!6180 = !DILocalVariable(name: "pxFirstFreeBlock", scope: !6178, file: !334, line: 394, type: !336)
!6181 = !DILocalVariable(name: "pucAlignedHeap", scope: !6178, file: !334, line: 395, type: !95)
!6182 = !DILocalVariable(name: "ulAddress", scope: !6178, file: !334, line: 396, type: !38)
!6183 = !DILocalVariable(name: "xTotalHeapSize", scope: !6178, file: !334, line: 397, type: !99)
!6184 = !DILocation(line: 0, scope: !6178)
!6185 = !DILocation(line: 412, column: 25, scope: !6178)
!6186 = !DILocation(line: 413, column: 20, scope: !6178)
!6187 = !DILocation(line: 420, column: 8, scope: !6178)
!6188 = !DILocation(line: 421, column: 20, scope: !6178)
!6189 = !DILocation(line: 422, column: 25, scope: !6178)
!6190 = !DILocation(line: 427, column: 31, scope: !6178)
!6191 = !DILocation(line: 428, column: 38, scope: !6178)
!6192 = !DILocation(line: 428, column: 36, scope: !6178)
!6193 = !DILocation(line: 434, column: 33, scope: !6178)
!6194 = !DILocation(line: 435, column: 22, scope: !6178)
!6195 = !DILocation(line: 438, column: 21, scope: !6178)
!6196 = !DILocation(line: 439, column: 1, scope: !6178)
!6197 = distinct !DISubprogram(name: "prvInsertBlockIntoFreeList", scope: !334, file: !334, line: 442, type: !6198, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6200)
!6198 = !DISubroutineType(types: !6199)
!6199 = !{null, !336}
!6200 = !{!6201, !6202, !6203}
!6201 = !DILocalVariable(name: "pxBlockToInsert", arg: 1, scope: !6197, file: !334, line: 442, type: !336)
!6202 = !DILocalVariable(name: "pxIterator", scope: !6197, file: !334, line: 444, type: !336)
!6203 = !DILocalVariable(name: "puc", scope: !6197, file: !334, line: 445, type: !95)
!6204 = !DILocation(line: 0, scope: !6197)
!6205 = !DILocation(line: 449, column: 7, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6197, file: !334, line: 449, column: 2)
!6207 = !DILocation(line: 0, scope: !6206)
!6208 = !DILocation(line: 449, column: 41, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6206, file: !334, line: 449, column: 2)
!6210 = !DILocation(line: 449, column: 57, scope: !6209)
!6211 = !DILocation(line: 449, column: 2, scope: !6206)
!6212 = distinct !{!6212, !6211, !6213}
!6213 = !DILocation(line: 452, column: 2, scope: !6206)
!6214 = !DILocation(line: 456, column: 8, scope: !6197)
!6215 = !DILocation(line: 457, column: 26, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6197, file: !334, line: 457, column: 6)
!6217 = !DILocation(line: 457, column: 12, scope: !6216)
!6218 = !DILocation(line: 457, column: 42, scope: !6216)
!6219 = !DILocation(line: 457, column: 39, scope: !6216)
!6220 = !DILocation(line: 457, column: 6, scope: !6197)
!6221 = !DILocation(line: 459, column: 26, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6216, file: !334, line: 458, column: 2)
!6223 = !DILocation(line: 461, column: 2, scope: !6222)
!6224 = !DILocation(line: 469, column: 8, scope: !6197)
!6225 = !DILocation(line: 470, column: 31, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6197, file: !334, line: 470, column: 6)
!6227 = !DILocation(line: 470, column: 12, scope: !6226)
!6228 = !DILocation(line: 470, column: 47, scope: !6226)
!6229 = !DILocation(line: 470, column: 44, scope: !6226)
!6230 = !DILocation(line: 470, column: 6, scope: !6197)
!6231 = !DILocation(line: 475, column: 64, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6233, file: !334, line: 473, column: 3)
!6233 = distinct !DILexicalBlock(scope: !6234, file: !334, line: 472, column: 7)
!6234 = distinct !DILexicalBlock(scope: !6226, file: !334, line: 471, column: 2)
!6235 = !DILocation(line: 475, column: 32, scope: !6232)
!6236 = !DILocation(line: 476, column: 51, scope: !6232)
!6237 = !DILocation(line: 476, column: 68, scope: !6232)
!6238 = !DILocation(line: 477, column: 3, scope: !6232)
!6239 = !DILocation(line: 0, scope: !6226)
!6240 = !DILocation(line: 492, column: 17, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6197, file: !334, line: 492, column: 6)
!6242 = !DILocation(line: 492, column: 6, scope: !6197)
!6243 = !DILocation(line: 494, column: 31, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6241, file: !334, line: 493, column: 2)
!6245 = !DILocation(line: 495, column: 2, scope: !6244)
!6246 = !DILocation(line: 500, column: 1, scope: !6197)
!6247 = distinct !DISubprogram(name: "vPortFree", scope: !334, file: !334, line: 326, type: !1337, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6248)
!6248 = !{!6249, !6250, !6251}
!6249 = !DILocalVariable(name: "pv", arg: 1, scope: !6247, file: !334, line: 326, type: !30)
!6250 = !DILocalVariable(name: "puc", scope: !6247, file: !334, line: 328, type: !95)
!6251 = !DILocalVariable(name: "pxLink", scope: !6247, file: !334, line: 329, type: !336)
!6252 = !DILocation(line: 0, scope: !6247)
!6253 = !DILocation(line: 331, column: 9, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6247, file: !334, line: 331, column: 6)
!6255 = !DILocation(line: 331, column: 6, scope: !6247)
!6256 = !DILocation(line: 335, column: 7, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6254, file: !334, line: 332, column: 2)
!6258 = !DILocation(line: 338, column: 12, scope: !6257)
!6259 = !DILocation(line: 341, column: 3, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6257, file: !334, line: 341, column: 3)
!6261 = !DILocation(line: 341, column: 3, scope: !6257)
!6262 = !DILocation(line: 341, column: 3, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6260, file: !334, line: 341, column: 3)
!6264 = !DILocation(line: 342, column: 3, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6257, file: !334, line: 342, column: 3)
!6266 = !DILocation(line: 342, column: 3, scope: !6257)
!6267 = !DILocation(line: 342, column: 3, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6265, file: !334, line: 342, column: 3)
!6269 = !DILocation(line: 344, column: 17, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6257, file: !334, line: 344, column: 7)
!6271 = !DILocation(line: 344, column: 30, scope: !6270)
!6272 = !DILocation(line: 344, column: 28, scope: !6270)
!6273 = !DILocation(line: 344, column: 51, scope: !6270)
!6274 = !DILocation(line: 344, column: 7, scope: !6257)
!6275 = !DILocation(line: 346, column: 16, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !334, line: 346, column: 8)
!6277 = distinct !DILexicalBlock(scope: !6270, file: !334, line: 345, column: 3)
!6278 = !DILocation(line: 346, column: 32, scope: !6276)
!6279 = !DILocation(line: 346, column: 8, scope: !6277)
!6280 = !DILocation(line: 350, column: 27, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6276, file: !334, line: 347, column: 4)
!6282 = !DILocation(line: 350, column: 24, scope: !6281)
!6283 = !DILocation(line: 352, column: 5, scope: !6281)
!6284 = !DILocation(line: 355, column: 37, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6281, file: !334, line: 353, column: 5)
!6286 = !DILocation(line: 355, column: 26, scope: !6285)
!6287 = !DILocation(line: 357, column: 6, scope: !6285)
!6288 = !DILocation(line: 359, column: 14, scope: !6281)
!6289 = !DILocation(line: 360, column: 4, scope: !6281)
!6290 = !DILocation(line: 371, column: 1, scope: !6247)
!6291 = distinct !DISubprogram(name: "xPortGetFreeHeapSize", scope: !334, file: !334, line: 374, type: !6292, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !2013)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{!99}
!6294 = !DILocation(line: 376, column: 9, scope: !6291)
!6295 = !DILocation(line: 376, column: 2, scope: !6291)
!6296 = distinct !DISubprogram(name: "xPortGetMinimumEverFreeHeapSize", scope: !334, file: !334, line: 380, type: !6292, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !2013)
!6297 = !DILocation(line: 382, column: 9, scope: !6296)
!6298 = !DILocation(line: 382, column: 2, scope: !6296)
!6299 = distinct !DISubprogram(name: "vPortInitialiseBlocks", scope: !334, file: !334, line: 386, type: !110, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !2013)
!6300 = !DILocation(line: 389, column: 1, scope: !6299)
!6301 = distinct !DISubprogram(name: "pvPortCalloc", scope: !334, file: !334, line: 505, type: !6302, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6304)
!6302 = !DISubroutineType(types: !6303)
!6303 = !{!30, !99, !99}
!6304 = !{!6305, !6306, !6307}
!6305 = !DILocalVariable(name: "nmemb", arg: 1, scope: !6301, file: !334, line: 505, type: !99)
!6306 = !DILocalVariable(name: "size", arg: 2, scope: !6301, file: !334, line: 505, type: !99)
!6307 = !DILocalVariable(name: "pvReturn", scope: !6301, file: !334, line: 507, type: !30)
!6308 = !DILocation(line: 0, scope: !6301)
!6309 = !DILocation(line: 516, column: 35, scope: !6301)
!6310 = !DILocation(line: 516, column: 16, scope: !6301)
!6311 = !DILocation(line: 518, column: 9, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6301, file: !334, line: 518, column: 9)
!6313 = !DILocation(line: 518, column: 9, scope: !6301)
!6314 = !DILocation(line: 520, column: 9, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6312, file: !334, line: 519, column: 5)
!6316 = !DILocation(line: 521, column: 5, scope: !6315)
!6317 = !DILocation(line: 523, column: 5, scope: !6301)
!6318 = distinct !DISubprogram(name: "pvPortRealloc", scope: !334, file: !334, line: 528, type: !6319, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6321)
!6319 = !DISubroutineType(types: !6320)
!6320 = !{!30, !30, !99}
!6321 = !{!6322, !6323, !6324, !6325, !6326, !6327}
!6322 = !DILocalVariable(name: "pv", arg: 1, scope: !6318, file: !334, line: 528, type: !30)
!6323 = !DILocalVariable(name: "size", arg: 2, scope: !6318, file: !334, line: 528, type: !99)
!6324 = !DILocalVariable(name: "pvReturn", scope: !6318, file: !334, line: 530, type: !30)
!6325 = !DILocalVariable(name: "xBlockSize", scope: !6318, file: !334, line: 531, type: !99)
!6326 = !DILocalVariable(name: "puc", scope: !6318, file: !334, line: 532, type: !95)
!6327 = !DILocalVariable(name: "pxLink", scope: !6318, file: !334, line: 533, type: !336)
!6328 = !DILocation(line: 0, scope: !6318)
!6329 = !DILocation(line: 535, column: 16, scope: !6318)
!6330 = !DILocation(line: 537, column: 12, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6318, file: !334, line: 537, column: 9)
!6332 = !DILocation(line: 537, column: 9, scope: !6318)
!6333 = !DILocation(line: 540, column: 13, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6331, file: !334, line: 538, column: 5)
!6335 = !DILocation(line: 546, column: 9, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6334, file: !334, line: 546, column: 9)
!6337 = !DILocation(line: 546, column: 9, scope: !6334)
!6338 = !DILocation(line: 546, column: 9, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6336, file: !334, line: 546, column: 9)
!6340 = !DILocation(line: 547, column: 9, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6334, file: !334, line: 547, column: 9)
!6342 = !DILocation(line: 547, column: 9, scope: !6334)
!6343 = !DILocation(line: 547, column: 9, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6341, file: !334, line: 547, column: 9)
!6345 = !DILocation(line: 550, column: 31, scope: !6334)
!6346 = !DILocation(line: 550, column: 45, scope: !6334)
!6347 = !DILocation(line: 550, column: 44, scope: !6334)
!6348 = !DILocation(line: 550, column: 42, scope: !6334)
!6349 = !DILocation(line: 553, column: 34, scope: !6334)
!6350 = !DILocation(line: 555, column: 23, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6334, file: !334, line: 555, column: 12)
!6352 = !DILocation(line: 0, scope: !6351)
!6353 = !DILocation(line: 561, column: 9, scope: !6334)
!6354 = !DILocation(line: 562, column: 5, scope: !6334)
!6355 = !DILocation(line: 564, column: 5, scope: !6318)
!6356 = distinct !DISubprogram(name: "pvPortMallocNC", scope: !334, file: !334, line: 570, type: !6083, scopeLine: 571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6357)
!6357 = !{!6358}
!6358 = !DILocalVariable(name: "xWantedSize", arg: 1, scope: !6356, file: !334, line: 570, type: !99)
!6359 = !DILocation(line: 0, scope: !6356)
!6360 = !DILocation(line: 649, column: 12, scope: !6356)
!6361 = !DILocation(line: 649, column: 5, scope: !6356)
!6362 = distinct !DISubprogram(name: "vPortFreeNC", scope: !334, file: !334, line: 652, type: !1337, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6363)
!6363 = !{!6364}
!6364 = !DILocalVariable(name: "pv", arg: 1, scope: !6362, file: !334, line: 652, type: !30)
!6365 = !DILocation(line: 0, scope: !6362)
!6366 = !DILocation(line: 680, column: 5, scope: !6362)
!6367 = !DILocation(line: 682, column: 1, scope: !6362)
!6368 = distinct !DISubprogram(name: "__wrap_malloc", scope: !334, file: !334, line: 686, type: !6083, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6369)
!6369 = !{!6370}
!6370 = !DILocalVariable(name: "size", arg: 1, scope: !6368, file: !334, line: 686, type: !99)
!6371 = !DILocation(line: 0, scope: !6368)
!6372 = !DILocation(line: 688, column: 12, scope: !6368)
!6373 = !DILocation(line: 688, column: 5, scope: !6368)
!6374 = distinct !DISubprogram(name: "__wrap_calloc", scope: !334, file: !334, line: 690, type: !6302, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6375)
!6375 = !{!6376, !6377}
!6376 = !DILocalVariable(name: "nmemb", arg: 1, scope: !6374, file: !334, line: 690, type: !99)
!6377 = !DILocalVariable(name: "size", arg: 2, scope: !6374, file: !334, line: 690, type: !99)
!6378 = !DILocation(line: 0, scope: !6374)
!6379 = !DILocation(line: 692, column: 12, scope: !6374)
!6380 = !DILocation(line: 692, column: 5, scope: !6374)
!6381 = distinct !DISubprogram(name: "__wrap_realloc", scope: !334, file: !334, line: 694, type: !6319, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6382)
!6382 = !{!6383, !6384}
!6383 = !DILocalVariable(name: "pv", arg: 1, scope: !6381, file: !334, line: 694, type: !30)
!6384 = !DILocalVariable(name: "size", arg: 2, scope: !6381, file: !334, line: 694, type: !99)
!6385 = !DILocation(line: 0, scope: !6381)
!6386 = !DILocation(line: 696, column: 12, scope: !6381)
!6387 = !DILocation(line: 696, column: 5, scope: !6381)
!6388 = distinct !DISubprogram(name: "__wrap_free", scope: !334, file: !334, line: 698, type: !1337, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !333, retainedNodes: !6389)
!6389 = !{!6390}
!6390 = !DILocalVariable(name: "pv", arg: 1, scope: !6388, file: !334, line: 698, type: !30)
!6391 = !DILocation(line: 0, scope: !6388)
!6392 = !DILocation(line: 700, column: 6, scope: !6388)
!6393 = !DILocation(line: 701, column: 1, scope: !6388)
!6394 = distinct !DISubprogram(name: "vPortSetupTimerInterrupt", scope: !1818, file: !1818, line: 769, type: !110, scopeLine: 770, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1817, retainedNodes: !2013)
!6395 = !DILocation(line: 781, column: 22, scope: !6394)
!6396 = !DILocation(line: 781, column: 45, scope: !6394)
!6397 = !DILocation(line: 781, column: 67, scope: !6394)
!6398 = !DILocation(line: 781, column: 19, scope: !6394)
!6399 = !DILocation(line: 782, column: 19, scope: !6394)
!6400 = !DILocation(line: 783, column: 1, scope: !6394)
!6401 = distinct !DISubprogram(name: "abort", scope: !364, file: !364, line: 108, type: !110, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !2013)
!6402 = !DILocation(line: 110, column: 5, scope: !6401)
!6403 = !{i64 4281}
!6404 = !DILocation(line: 111, column: 14, scope: !6401)
!6405 = !DILocation(line: 112, column: 45, scope: !6401)
!6406 = !DILocation(line: 113, column: 5, scope: !6401)
!6407 = !DILocation(line: 113, column: 5, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6409, file: !364, line: 113, column: 5)
!6409 = distinct !DILexicalBlock(scope: !6401, file: !364, line: 113, column: 5)
!6410 = distinct !{!6410, !6411, !6412}
!6411 = !DILocation(line: 113, column: 5, scope: !6409)
!6412 = !DILocation(line: 113, column: 13, scope: !6409)
!6413 = distinct !DISubprogram(name: "platform_assert", scope: !364, file: !364, line: 116, type: !6414, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !6416)
!6414 = !DISubroutineType(types: !6415)
!6415 = !{null, !104, !104, !103}
!6416 = !{!6417, !6418, !6419}
!6417 = !DILocalVariable(name: "expr", arg: 1, scope: !6413, file: !364, line: 116, type: !104)
!6418 = !DILocalVariable(name: "file", arg: 2, scope: !6413, file: !364, line: 116, type: !104)
!6419 = !DILocalVariable(name: "line", arg: 3, scope: !6413, file: !364, line: 116, type: !103)
!6420 = !DILocation(line: 0, scope: !6413)
!6421 = !DILocation(line: 118, column: 5, scope: !6413)
!6422 = !{i64 4480}
!6423 = !DILocation(line: 119, column: 14, scope: !6413)
!6424 = !DILocation(line: 120, column: 26, scope: !6413)
!6425 = !DILocation(line: 121, column: 22, scope: !6413)
!6426 = !DILocation(line: 122, column: 22, scope: !6413)
!6427 = !DILocation(line: 123, column: 22, scope: !6413)
!6428 = !DILocation(line: 124, column: 45, scope: !6413)
!6429 = !DILocation(line: 125, column: 5, scope: !6413)
!6430 = !DILocation(line: 125, column: 5, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6432, file: !364, line: 125, column: 5)
!6432 = distinct !DILexicalBlock(scope: !6413, file: !364, line: 125, column: 5)
!6433 = distinct !{!6433, !6434, !6435}
!6434 = !DILocation(line: 125, column: 5, scope: !6432)
!6435 = !DILocation(line: 125, column: 13, scope: !6432)
!6436 = distinct !DISubprogram(name: "exception_dump_config", scope: !364, file: !364, line: 128, type: !1712, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !6437)
!6437 = !{!6438}
!6438 = !DILocalVariable(name: "flag", arg: 1, scope: !6436, file: !364, line: 128, type: !103)
!6439 = !DILocation(line: 0, scope: !6436)
!6440 = !DILocation(line: 130, column: 17, scope: !6436)
!6441 = !DILocation(line: 131, column: 1, scope: !6436)
!6442 = distinct !DISubprogram(name: "exception_register_callbacks", scope: !364, file: !364, line: 142, type: !6443, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !6446)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{!536, !6445}
!6445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!6446 = !{!6447, !6448}
!6447 = !DILocalVariable(name: "cb", arg: 1, scope: !6442, file: !364, line: 142, type: !6445)
!6448 = !DILocalVariable(name: "i", scope: !6442, file: !364, line: 144, type: !103)
!6449 = !DILocation(line: 0, scope: !6442)
!6450 = !DILocation(line: 146, column: 26, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6442, file: !364, line: 146, column: 9)
!6452 = !DILocation(line: 146, column: 32, scope: !6451)
!6453 = !DILocation(line: 146, column: 9, scope: !6442)
!6454 = !DILocation(line: 150, column: 22, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6456, file: !364, line: 150, column: 8)
!6456 = distinct !DILexicalBlock(scope: !6457, file: !364, line: 150, column: 8)
!6457 = distinct !DILexicalBlock(scope: !6451, file: !364, line: 148, column: 12)
!6458 = !DILocation(line: 150, column: 8, scope: !6456)
!6459 = !DILocation(line: 151, column: 45, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !364, line: 151, column: 17)
!6461 = distinct !DILexicalBlock(scope: !6455, file: !364, line: 150, column: 53)
!6462 = !DILocation(line: 151, column: 53, scope: !6460)
!6463 = !DILocation(line: 152, column: 14, scope: !6460)
!6464 = !DILocation(line: 152, column: 45, scope: !6460)
!6465 = !DILocation(line: 152, column: 60, scope: !6460)
!6466 = !DILocation(line: 152, column: 53, scope: !6460)
!6467 = !DILocation(line: 151, column: 17, scope: !6461)
!6468 = !DILocation(line: 150, column: 49, scope: !6455)
!6469 = distinct !{!6469, !6458, !6470}
!6470 = !DILocation(line: 155, column: 8, scope: !6456)
!6471 = !DILocation(line: 156, column: 57, scope: !6457)
!6472 = !DILocation(line: 156, column: 65, scope: !6457)
!6473 = !DILocation(line: 157, column: 71, scope: !6457)
!6474 = !DILocation(line: 157, column: 57, scope: !6457)
!6475 = !DILocation(line: 157, column: 65, scope: !6457)
!6476 = !DILocation(line: 158, column: 30, scope: !6457)
!6477 = !DILocation(line: 159, column: 8, scope: !6457)
!6478 = !DILocation(line: 0, scope: !6451)
!6479 = !DILocation(line: 161, column: 1, scope: !6442)
!6480 = distinct !DISubprogram(name: "exception_init", scope: !364, file: !364, line: 163, type: !110, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !6481)
!6481 = !{!6482}
!6482 = !DILocalVariable(name: "i", scope: !6480, file: !364, line: 165, type: !103)
!6483 = !DILocation(line: 167, column: 14, scope: !6480)
!6484 = !DILocation(line: 170, column: 5, scope: !6480)
!6485 = !DILocation(line: 0, scope: !6480)
!6486 = !DILocation(line: 177, column: 38, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6488, file: !364, line: 177, column: 5)
!6488 = distinct !DILexicalBlock(scope: !6480, file: !364, line: 177, column: 5)
!6489 = !DILocation(line: 177, column: 19, scope: !6487)
!6490 = !DILocation(line: 177, column: 5, scope: !6488)
!6491 = !DILocation(line: 178, column: 41, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !364, line: 178, column: 13)
!6493 = distinct !DILexicalBlock(scope: !6487, file: !364, line: 177, column: 50)
!6494 = !DILocation(line: 178, column: 13, scope: !6492)
!6495 = !DILocation(line: 178, column: 13, scope: !6493)
!6496 = !DILocation(line: 179, column: 13, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6492, file: !364, line: 178, column: 50)
!6498 = !DILocation(line: 180, column: 9, scope: !6497)
!6499 = !DILocation(line: 177, column: 46, scope: !6487)
!6500 = distinct !{!6500, !6490, !6501}
!6501 = !DILocation(line: 181, column: 5, scope: !6488)
!6502 = !DILocation(line: 183, column: 21, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6480, file: !364, line: 183, column: 9)
!6504 = !DILocation(line: 183, column: 9, scope: !6480)
!6505 = !DILocation(line: 185, column: 28, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6503, file: !364, line: 183, column: 31)
!6507 = !DILocation(line: 186, column: 28, scope: !6506)
!6508 = !DILocation(line: 187, column: 28, scope: !6506)
!6509 = !DILocation(line: 184, column: 9, scope: !6506)
!6510 = !DILocation(line: 188, column: 5, scope: !6506)
!6511 = !DILocation(line: 189, column: 1, scope: !6480)
!6512 = distinct !DISubprogram(name: "NMI_Handler", scope: !364, file: !364, line: 196, type: !110, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !2013)
!6513 = !DILocation(line: 198, column: 1, scope: !6512)
!6514 = distinct !DISubprogram(name: "printUsageErrorMsg", scope: !364, file: !364, line: 200, type: !2656, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !6515)
!6515 = !{!6516}
!6516 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !6514, file: !364, line: 200, type: !38)
!6517 = !DILocation(line: 0, scope: !6514)
!6518 = !DILocation(line: 202, column: 5, scope: !6514)
!6519 = !DILocation(line: 204, column: 32, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6514, file: !364, line: 204, column: 9)
!6521 = !DILocation(line: 204, column: 9, scope: !6514)
!6522 = !DILocation(line: 205, column: 9, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6520, file: !364, line: 204, column: 38)
!6524 = !DILocation(line: 206, column: 5, scope: !6523)
!6525 = !DILocation(line: 207, column: 32, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6514, file: !364, line: 207, column: 9)
!6527 = !DILocation(line: 207, column: 9, scope: !6514)
!6528 = !DILocation(line: 208, column: 9, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6526, file: !364, line: 207, column: 38)
!6530 = !DILocation(line: 209, column: 5, scope: !6529)
!6531 = !DILocation(line: 210, column: 32, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6514, file: !364, line: 210, column: 9)
!6533 = !DILocation(line: 210, column: 9, scope: !6514)
!6534 = !DILocation(line: 211, column: 9, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6532, file: !364, line: 210, column: 38)
!6536 = !DILocation(line: 212, column: 5, scope: !6535)
!6537 = !DILocation(line: 213, column: 32, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6514, file: !364, line: 213, column: 9)
!6539 = !DILocation(line: 213, column: 9, scope: !6514)
!6540 = !DILocation(line: 214, column: 9, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6538, file: !364, line: 213, column: 38)
!6542 = !DILocation(line: 215, column: 5, scope: !6541)
!6543 = !DILocation(line: 216, column: 32, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6514, file: !364, line: 216, column: 9)
!6545 = !DILocation(line: 216, column: 9, scope: !6514)
!6546 = !DILocation(line: 217, column: 9, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6544, file: !364, line: 216, column: 38)
!6548 = !DILocation(line: 218, column: 5, scope: !6547)
!6549 = !DILocation(line: 219, column: 32, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6514, file: !364, line: 219, column: 9)
!6551 = !DILocation(line: 219, column: 9, scope: !6514)
!6552 = !DILocation(line: 220, column: 9, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6550, file: !364, line: 219, column: 38)
!6554 = !DILocation(line: 221, column: 5, scope: !6553)
!6555 = !DILocation(line: 222, column: 1, scope: !6514)
!6556 = distinct !DISubprogram(name: "printMemoryManagementErrorMsg", scope: !364, file: !364, line: 224, type: !2656, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !6557)
!6557 = !{!6558}
!6558 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !6556, file: !364, line: 224, type: !38)
!6559 = !DILocation(line: 0, scope: !6556)
!6560 = !DILocation(line: 226, column: 5, scope: !6556)
!6561 = !DILocation(line: 228, column: 20, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6556, file: !364, line: 228, column: 9)
!6563 = !DILocation(line: 228, column: 32, scope: !6562)
!6564 = !DILocation(line: 228, column: 9, scope: !6556)
!6565 = !DILocation(line: 229, column: 9, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6562, file: !364, line: 228, column: 38)
!6567 = !DILocation(line: 230, column: 5, scope: !6566)
!6568 = !DILocation(line: 231, column: 20, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6556, file: !364, line: 231, column: 9)
!6570 = !DILocation(line: 231, column: 32, scope: !6569)
!6571 = !DILocation(line: 231, column: 9, scope: !6556)
!6572 = !DILocation(line: 232, column: 9, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6569, file: !364, line: 231, column: 38)
!6574 = !DILocation(line: 233, column: 5, scope: !6573)
!6575 = !DILocation(line: 234, column: 20, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6556, file: !364, line: 234, column: 9)
!6577 = !DILocation(line: 234, column: 32, scope: !6576)
!6578 = !DILocation(line: 234, column: 9, scope: !6556)
!6579 = !DILocation(line: 235, column: 9, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6576, file: !364, line: 234, column: 38)
!6581 = !DILocation(line: 236, column: 5, scope: !6580)
!6582 = !DILocation(line: 237, column: 20, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6556, file: !364, line: 237, column: 9)
!6584 = !DILocation(line: 237, column: 32, scope: !6583)
!6585 = !DILocation(line: 237, column: 9, scope: !6556)
!6586 = !DILocation(line: 238, column: 72, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6583, file: !364, line: 237, column: 38)
!6588 = !DILocation(line: 238, column: 9, scope: !6587)
!6589 = !DILocation(line: 239, column: 5, scope: !6587)
!6590 = !DILocation(line: 240, column: 20, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6556, file: !364, line: 240, column: 9)
!6592 = !DILocation(line: 240, column: 32, scope: !6591)
!6593 = !DILocation(line: 240, column: 9, scope: !6556)
!6594 = !DILocation(line: 241, column: 9, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6591, file: !364, line: 240, column: 38)
!6596 = !DILocation(line: 242, column: 5, scope: !6595)
!6597 = !DILocation(line: 243, column: 20, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6556, file: !364, line: 243, column: 9)
!6599 = !DILocation(line: 243, column: 32, scope: !6598)
!6600 = !DILocation(line: 243, column: 9, scope: !6556)
!6601 = !DILocation(line: 244, column: 62, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6598, file: !364, line: 243, column: 38)
!6603 = !DILocation(line: 244, column: 9, scope: !6602)
!6604 = !DILocation(line: 245, column: 5, scope: !6602)
!6605 = !DILocation(line: 246, column: 1, scope: !6556)
!6606 = distinct !DISubprogram(name: "printBusFaultErrorMsg", scope: !364, file: !364, line: 248, type: !2656, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !6607)
!6607 = !{!6608}
!6608 = !DILocalVariable(name: "CFSRValue", arg: 1, scope: !6606, file: !364, line: 248, type: !38)
!6609 = !DILocation(line: 0, scope: !6606)
!6610 = !DILocation(line: 250, column: 5, scope: !6606)
!6611 = !DILocation(line: 253, column: 32, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6606, file: !364, line: 253, column: 9)
!6613 = !DILocation(line: 253, column: 9, scope: !6606)
!6614 = !DILocation(line: 254, column: 9, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6612, file: !364, line: 253, column: 38)
!6616 = !DILocation(line: 255, column: 5, scope: !6615)
!6617 = !DILocation(line: 256, column: 32, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6606, file: !364, line: 256, column: 9)
!6619 = !DILocation(line: 256, column: 9, scope: !6606)
!6620 = !DILocation(line: 257, column: 9, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6618, file: !364, line: 256, column: 38)
!6622 = !DILocation(line: 258, column: 5, scope: !6621)
!6623 = !DILocation(line: 259, column: 32, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6606, file: !364, line: 259, column: 9)
!6625 = !DILocation(line: 259, column: 9, scope: !6606)
!6626 = !DILocation(line: 260, column: 9, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6624, file: !364, line: 259, column: 38)
!6628 = !DILocation(line: 261, column: 5, scope: !6627)
!6629 = !DILocation(line: 262, column: 32, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6606, file: !364, line: 262, column: 9)
!6631 = !DILocation(line: 262, column: 9, scope: !6606)
!6632 = !DILocation(line: 263, column: 9, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6630, file: !364, line: 262, column: 38)
!6634 = !DILocation(line: 264, column: 5, scope: !6633)
!6635 = !DILocation(line: 265, column: 32, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6606, file: !364, line: 265, column: 9)
!6637 = !DILocation(line: 265, column: 9, scope: !6606)
!6638 = !DILocation(line: 266, column: 90, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6636, file: !364, line: 265, column: 38)
!6640 = !DILocation(line: 266, column: 9, scope: !6639)
!6641 = !DILocation(line: 267, column: 5, scope: !6639)
!6642 = !DILocation(line: 268, column: 32, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6606, file: !364, line: 268, column: 9)
!6644 = !DILocation(line: 268, column: 9, scope: !6606)
!6645 = !DILocation(line: 269, column: 9, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6643, file: !364, line: 268, column: 38)
!6647 = !DILocation(line: 270, column: 5, scope: !6646)
!6648 = !DILocation(line: 271, column: 32, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6606, file: !364, line: 271, column: 9)
!6650 = !DILocation(line: 271, column: 9, scope: !6606)
!6651 = !DILocation(line: 272, column: 61, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6649, file: !364, line: 271, column: 38)
!6653 = !DILocation(line: 272, column: 9, scope: !6652)
!6654 = !DILocation(line: 273, column: 5, scope: !6652)
!6655 = !DILocation(line: 274, column: 1, scope: !6606)
!6656 = distinct !DISubprogram(name: "exception_reboot", scope: !364, file: !364, line: 799, type: !110, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !2013)
!6657 = !DILocation(line: 805, column: 5, scope: !6656)
!6658 = distinct !DISubprogram(name: "stackDump", scope: !364, file: !364, line: 823, type: !6659, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !6661)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{null, !3134}
!6661 = !{!6662}
!6662 = !DILocalVariable(name: "stack", arg: 1, scope: !6658, file: !364, line: 823, type: !3134)
!6663 = !DILocation(line: 0, scope: !6658)
!6664 = !DILocation(line: 825, column: 24, scope: !6658)
!6665 = !DILocation(line: 825, column: 22, scope: !6658)
!6666 = !DILocation(line: 826, column: 24, scope: !6658)
!6667 = !DILocation(line: 826, column: 22, scope: !6658)
!6668 = !DILocation(line: 827, column: 24, scope: !6658)
!6669 = !DILocation(line: 827, column: 22, scope: !6658)
!6670 = !DILocation(line: 828, column: 24, scope: !6658)
!6671 = !DILocation(line: 828, column: 22, scope: !6658)
!6672 = !DILocation(line: 829, column: 24, scope: !6658)
!6673 = !DILocation(line: 829, column: 22, scope: !6658)
!6674 = !DILocation(line: 830, column: 25, scope: !6658)
!6675 = !DILocation(line: 830, column: 42, scope: !6658)
!6676 = !DILocation(line: 830, column: 22, scope: !6658)
!6677 = !DILocation(line: 831, column: 24, scope: !6658)
!6678 = !DILocation(line: 831, column: 22, scope: !6658)
!6679 = !DILocation(line: 832, column: 24, scope: !6658)
!6680 = !DILocation(line: 832, column: 22, scope: !6658)
!6681 = !DILocation(line: 833, column: 24, scope: !6658)
!6682 = !DILocation(line: 833, column: 22, scope: !6658)
!6683 = !DILocation(line: 836, column: 23, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6658, file: !364, line: 836, column: 10)
!6685 = !DILocation(line: 836, column: 34, scope: !6684)
!6686 = !DILocation(line: 836, column: 42, scope: !6684)
!6687 = !DILocation(line: 836, column: 10, scope: !6658)
!6688 = !DILocation(line: 837, column: 26, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6684, file: !364, line: 836, column: 49)
!6690 = !DILocation(line: 837, column: 24, scope: !6689)
!6691 = !DILocation(line: 838, column: 26, scope: !6689)
!6692 = !DILocation(line: 838, column: 24, scope: !6689)
!6693 = !DILocation(line: 839, column: 26, scope: !6689)
!6694 = !DILocation(line: 839, column: 24, scope: !6689)
!6695 = !DILocation(line: 840, column: 26, scope: !6689)
!6696 = !DILocation(line: 840, column: 24, scope: !6689)
!6697 = !DILocation(line: 841, column: 26, scope: !6689)
!6698 = !DILocation(line: 841, column: 24, scope: !6689)
!6699 = !DILocation(line: 842, column: 26, scope: !6689)
!6700 = !DILocation(line: 842, column: 24, scope: !6689)
!6701 = !DILocation(line: 843, column: 26, scope: !6689)
!6702 = !DILocation(line: 843, column: 24, scope: !6689)
!6703 = !DILocation(line: 844, column: 26, scope: !6689)
!6704 = !DILocation(line: 844, column: 24, scope: !6689)
!6705 = !DILocation(line: 845, column: 26, scope: !6689)
!6706 = !DILocation(line: 845, column: 24, scope: !6689)
!6707 = !DILocation(line: 846, column: 26, scope: !6689)
!6708 = !DILocation(line: 846, column: 24, scope: !6689)
!6709 = !DILocation(line: 847, column: 27, scope: !6689)
!6710 = !DILocation(line: 847, column: 25, scope: !6689)
!6711 = !DILocation(line: 848, column: 27, scope: !6689)
!6712 = !DILocation(line: 848, column: 25, scope: !6689)
!6713 = !DILocation(line: 849, column: 27, scope: !6689)
!6714 = !DILocation(line: 849, column: 25, scope: !6689)
!6715 = !DILocation(line: 850, column: 27, scope: !6689)
!6716 = !DILocation(line: 850, column: 25, scope: !6689)
!6717 = !DILocation(line: 851, column: 27, scope: !6689)
!6718 = !DILocation(line: 851, column: 25, scope: !6689)
!6719 = !DILocation(line: 852, column: 27, scope: !6689)
!6720 = !DILocation(line: 852, column: 25, scope: !6689)
!6721 = !DILocation(line: 853, column: 29, scope: !6689)
!6722 = !DILocation(line: 853, column: 27, scope: !6689)
!6723 = !DILocation(line: 854, column: 24, scope: !6689)
!6724 = !DILocation(line: 855, column: 5, scope: !6689)
!6725 = !DILocation(line: 858, column: 16, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6658, file: !364, line: 858, column: 10)
!6727 = !DILocation(line: 858, column: 20, scope: !6726)
!6728 = !DILocation(line: 858, column: 44, scope: !6726)
!6729 = !DILocation(line: 859, column: 24, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6726, file: !364, line: 858, column: 74)
!6731 = !DILocation(line: 860, column: 5, scope: !6730)
!6732 = !DILocation(line: 862, column: 5, scope: !6658)
!6733 = !DILocation(line: 863, column: 44, scope: !6658)
!6734 = !DILocation(line: 863, column: 5, scope: !6658)
!6735 = !DILocation(line: 864, column: 44, scope: !6658)
!6736 = !DILocation(line: 864, column: 5, scope: !6658)
!6737 = !DILocation(line: 865, column: 44, scope: !6658)
!6738 = !DILocation(line: 865, column: 5, scope: !6658)
!6739 = !DILocation(line: 866, column: 44, scope: !6658)
!6740 = !DILocation(line: 866, column: 5, scope: !6658)
!6741 = !DILocation(line: 867, column: 44, scope: !6658)
!6742 = !DILocation(line: 867, column: 5, scope: !6658)
!6743 = !DILocation(line: 868, column: 44, scope: !6658)
!6744 = !DILocation(line: 868, column: 5, scope: !6658)
!6745 = !DILocation(line: 869, column: 44, scope: !6658)
!6746 = !DILocation(line: 869, column: 5, scope: !6658)
!6747 = !DILocation(line: 870, column: 44, scope: !6658)
!6748 = !DILocation(line: 870, column: 5, scope: !6658)
!6749 = !DILocation(line: 871, column: 44, scope: !6658)
!6750 = !DILocation(line: 871, column: 5, scope: !6658)
!6751 = !DILocation(line: 872, column: 44, scope: !6658)
!6752 = !DILocation(line: 872, column: 5, scope: !6658)
!6753 = !DILocation(line: 873, column: 44, scope: !6658)
!6754 = !DILocation(line: 873, column: 5, scope: !6658)
!6755 = !DILocation(line: 874, column: 44, scope: !6658)
!6756 = !DILocation(line: 874, column: 5, scope: !6658)
!6757 = !DILocation(line: 875, column: 44, scope: !6658)
!6758 = !DILocation(line: 875, column: 5, scope: !6658)
!6759 = !DILocation(line: 876, column: 44, scope: !6658)
!6760 = !DILocation(line: 876, column: 5, scope: !6658)
!6761 = !DILocation(line: 877, column: 44, scope: !6658)
!6762 = !DILocation(line: 877, column: 5, scope: !6658)
!6763 = !DILocation(line: 878, column: 48, scope: !6658)
!6764 = !DILocation(line: 878, column: 5, scope: !6658)
!6765 = !DILocation(line: 881, column: 21, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6658, file: !364, line: 881, column: 9)
!6767 = !DILocation(line: 881, column: 32, scope: !6766)
!6768 = !DILocation(line: 881, column: 9, scope: !6658)
!6769 = !DILocation(line: 882, column: 29, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6766, file: !364, line: 881, column: 39)
!6771 = !DILocation(line: 884, column: 5, scope: !6770)
!6772 = !DILocation(line: 0, scope: !6766)
!6773 = !DILocation(line: 889, column: 34, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6658, file: !364, line: 889, column: 10)
!6775 = !DILocation(line: 889, column: 42, scope: !6774)
!6776 = !DILocation(line: 889, column: 10, scope: !6658)
!6777 = !DILocation(line: 890, column: 29, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6774, file: !364, line: 889, column: 49)
!6779 = !DILocation(line: 891, column: 48, scope: !6778)
!6780 = !DILocation(line: 891, column: 9, scope: !6778)
!6781 = !DILocation(line: 892, column: 48, scope: !6778)
!6782 = !DILocation(line: 892, column: 9, scope: !6778)
!6783 = !DILocation(line: 893, column: 48, scope: !6778)
!6784 = !DILocation(line: 893, column: 9, scope: !6778)
!6785 = !DILocation(line: 894, column: 48, scope: !6778)
!6786 = !DILocation(line: 894, column: 9, scope: !6778)
!6787 = !DILocation(line: 895, column: 48, scope: !6778)
!6788 = !DILocation(line: 895, column: 9, scope: !6778)
!6789 = !DILocation(line: 896, column: 48, scope: !6778)
!6790 = !DILocation(line: 896, column: 9, scope: !6778)
!6791 = !DILocation(line: 897, column: 48, scope: !6778)
!6792 = !DILocation(line: 897, column: 9, scope: !6778)
!6793 = !DILocation(line: 898, column: 48, scope: !6778)
!6794 = !DILocation(line: 898, column: 9, scope: !6778)
!6795 = !DILocation(line: 899, column: 48, scope: !6778)
!6796 = !DILocation(line: 899, column: 9, scope: !6778)
!6797 = !DILocation(line: 900, column: 48, scope: !6778)
!6798 = !DILocation(line: 900, column: 9, scope: !6778)
!6799 = !DILocation(line: 901, column: 48, scope: !6778)
!6800 = !DILocation(line: 901, column: 9, scope: !6778)
!6801 = !DILocation(line: 902, column: 48, scope: !6778)
!6802 = !DILocation(line: 902, column: 9, scope: !6778)
!6803 = !DILocation(line: 903, column: 48, scope: !6778)
!6804 = !DILocation(line: 903, column: 9, scope: !6778)
!6805 = !DILocation(line: 904, column: 48, scope: !6778)
!6806 = !DILocation(line: 904, column: 9, scope: !6778)
!6807 = !DILocation(line: 905, column: 48, scope: !6778)
!6808 = !DILocation(line: 905, column: 9, scope: !6778)
!6809 = !DILocation(line: 906, column: 48, scope: !6778)
!6810 = !DILocation(line: 906, column: 9, scope: !6778)
!6811 = !DILocation(line: 907, column: 48, scope: !6778)
!6812 = !DILocation(line: 907, column: 9, scope: !6778)
!6813 = !DILocation(line: 908, column: 48, scope: !6778)
!6814 = !DILocation(line: 908, column: 9, scope: !6778)
!6815 = !DILocation(line: 909, column: 48, scope: !6778)
!6816 = !DILocation(line: 909, column: 9, scope: !6778)
!6817 = !DILocation(line: 910, column: 48, scope: !6778)
!6818 = !DILocation(line: 910, column: 9, scope: !6778)
!6819 = !DILocation(line: 911, column: 48, scope: !6778)
!6820 = !DILocation(line: 911, column: 9, scope: !6778)
!6821 = !DILocation(line: 912, column: 48, scope: !6778)
!6822 = !DILocation(line: 912, column: 9, scope: !6778)
!6823 = !DILocation(line: 913, column: 48, scope: !6778)
!6824 = !DILocation(line: 913, column: 9, scope: !6778)
!6825 = !DILocation(line: 914, column: 48, scope: !6778)
!6826 = !DILocation(line: 914, column: 9, scope: !6778)
!6827 = !DILocation(line: 915, column: 48, scope: !6778)
!6828 = !DILocation(line: 915, column: 9, scope: !6778)
!6829 = !DILocation(line: 916, column: 48, scope: !6778)
!6830 = !DILocation(line: 916, column: 9, scope: !6778)
!6831 = !DILocation(line: 917, column: 48, scope: !6778)
!6832 = !DILocation(line: 917, column: 9, scope: !6778)
!6833 = !DILocation(line: 918, column: 48, scope: !6778)
!6834 = !DILocation(line: 918, column: 9, scope: !6778)
!6835 = !DILocation(line: 919, column: 48, scope: !6778)
!6836 = !DILocation(line: 919, column: 9, scope: !6778)
!6837 = !DILocation(line: 920, column: 48, scope: !6778)
!6838 = !DILocation(line: 920, column: 9, scope: !6778)
!6839 = !DILocation(line: 921, column: 48, scope: !6778)
!6840 = !DILocation(line: 921, column: 9, scope: !6778)
!6841 = !DILocation(line: 922, column: 48, scope: !6778)
!6842 = !DILocation(line: 922, column: 9, scope: !6778)
!6843 = !DILocation(line: 923, column: 50, scope: !6778)
!6844 = !DILocation(line: 923, column: 9, scope: !6778)
!6845 = !DILocation(line: 924, column: 5, scope: !6778)
!6846 = !DILocation(line: 926, column: 48, scope: !6658)
!6847 = !DILocation(line: 926, column: 5, scope: !6658)
!6848 = !DILocation(line: 927, column: 48, scope: !6658)
!6849 = !DILocation(line: 927, column: 5, scope: !6658)
!6850 = !DILocation(line: 928, column: 48, scope: !6658)
!6851 = !DILocation(line: 928, column: 5, scope: !6658)
!6852 = !DILocation(line: 929, column: 48, scope: !6658)
!6853 = !DILocation(line: 929, column: 5, scope: !6658)
!6854 = !DILocation(line: 959, column: 9, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6658, file: !364, line: 959, column: 9)
!6856 = !DILocation(line: 959, column: 9, scope: !6658)
!6857 = !DILocation(line: 960, column: 9, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6855, file: !364, line: 959, column: 33)
!6859 = !DILocation(line: 961, column: 5, scope: !6858)
!6860 = !DILocation(line: 962, column: 1, scope: !6658)
!6861 = distinct !DISubprogram(name: "reboot_check", scope: !364, file: !364, line: 808, type: !6862, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !2013)
!6862 = !DISubroutineType(types: !6863)
!6863 = !{!536}
!6864 = !DILocation(line: 810, column: 13, scope: !6861)
!6865 = !DILocation(line: 810, column: 25, scope: !6861)
!6866 = !DILocation(line: 810, column: 5, scope: !6861)
!6867 = distinct !DISubprogram(name: "memoryDumpAll", scope: !364, file: !364, line: 964, type: !110, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !6868)
!6868 = !{!6869, !6870, !6871}
!6869 = !DILocalVariable(name: "current", scope: !6867, file: !364, line: 966, type: !469)
!6870 = !DILocalVariable(name: "end", scope: !6867, file: !364, line: 966, type: !469)
!6871 = !DILocalVariable(name: "i", scope: !6867, file: !364, line: 967, type: !6)
!6872 = !DILocation(line: 0, scope: !6867)
!6873 = !DILocation(line: 971, column: 33, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6875, file: !364, line: 971, column: 14)
!6875 = distinct !DILexicalBlock(scope: !6876, file: !364, line: 969, column: 24)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !364, line: 969, column: 5)
!6877 = distinct !DILexicalBlock(scope: !6867, file: !364, line: 969, column: 5)
!6878 = !DILocation(line: 971, column: 15, scope: !6874)
!6879 = !DILocation(line: 971, column: 14, scope: !6875)
!6880 = !DILocation(line: 1000, column: 38, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !364, line: 1000, column: 5)
!6882 = distinct !DILexicalBlock(scope: !6867, file: !364, line: 1000, column: 5)
!6883 = !DILocation(line: 1000, column: 19, scope: !6881)
!6884 = !DILocation(line: 1000, column: 5, scope: !6882)
!6885 = !DILocation(line: 975, column: 33, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6875, file: !364, line: 975, column: 14)
!6887 = !DILocation(line: 975, column: 15, scope: !6886)
!6888 = !DILocation(line: 975, column: 14, scope: !6875)
!6889 = !DILocation(line: 979, column: 37, scope: !6875)
!6890 = !DILocation(line: 980, column: 37, scope: !6875)
!6891 = !DILocation(line: 982, column: 24, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !364, line: 982, column: 9)
!6893 = distinct !DILexicalBlock(scope: !6875, file: !364, line: 982, column: 9)
!6894 = !DILocation(line: 982, column: 9, scope: !6893)
!6895 = !DILocation(line: 984, column: 17, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !364, line: 984, column: 17)
!6897 = distinct !DILexicalBlock(scope: !6892, file: !364, line: 982, column: 45)
!6898 = !DILocation(line: 984, column: 32, scope: !6896)
!6899 = !DILocation(line: 0, scope: !6897)
!6900 = !DILocation(line: 984, column: 37, scope: !6896)
!6901 = !DILocation(line: 986, column: 27, scope: !6896)
!6902 = !DILocation(line: 986, column: 17, scope: !6896)
!6903 = !DILocation(line: 986, column: 32, scope: !6896)
!6904 = !DILocation(line: 986, column: 37, scope: !6896)
!6905 = !DILocation(line: 987, column: 27, scope: !6896)
!6906 = !DILocation(line: 987, column: 17, scope: !6896)
!6907 = !DILocation(line: 987, column: 32, scope: !6896)
!6908 = !DILocation(line: 984, column: 17, scope: !6897)
!6909 = !DILocation(line: 994, column: 20, scope: !6897)
!6910 = !DILocation(line: 992, column: 20, scope: !6897)
!6911 = !DILocation(line: 995, column: 30, scope: !6897)
!6912 = !DILocation(line: 995, column: 20, scope: !6897)
!6913 = !DILocation(line: 996, column: 30, scope: !6897)
!6914 = !DILocation(line: 996, column: 20, scope: !6897)
!6915 = !DILocation(line: 991, column: 13, scope: !6897)
!6916 = !DILocation(line: 997, column: 10, scope: !6897)
!6917 = !DILocation(line: 982, column: 39, scope: !6892)
!6918 = distinct !{!6918, !6894, !6919}
!6919 = !DILocation(line: 997, column: 10, scope: !6893)
!6920 = !DILocation(line: 969, column: 20, scope: !6876)
!6921 = distinct !{!6921, !6922, !6923}
!6922 = !DILocation(line: 969, column: 5, scope: !6877)
!6923 = !DILocation(line: 998, column: 5, scope: !6877)
!6924 = !DILocation(line: 1001, column: 41, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6926, file: !364, line: 1001, column: 13)
!6926 = distinct !DILexicalBlock(scope: !6881, file: !364, line: 1000, column: 50)
!6927 = !DILocation(line: 1001, column: 13, scope: !6925)
!6928 = !DILocation(line: 1001, column: 13, scope: !6926)
!6929 = !DILocation(line: 1002, column: 13, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6925, file: !364, line: 1001, column: 50)
!6931 = !DILocation(line: 1003, column: 9, scope: !6930)
!6932 = !DILocation(line: 1000, column: 46, scope: !6881)
!6933 = distinct !{!6933, !6884, !6934}
!6934 = !DILocation(line: 1004, column: 5, scope: !6882)
!6935 = !DILocation(line: 1006, column: 5, scope: !6867)
!6936 = !DILocation(line: 1017, column: 1, scope: !6867)
!6937 = distinct !DISubprogram(name: "Hard_Fault_Handler", scope: !364, file: !364, line: 1040, type: !6659, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !6938)
!6938 = !{!6939}
!6939 = !DILocalVariable(name: "stack", arg: 1, scope: !6937, file: !364, line: 1040, type: !3134)
!6940 = !DILocation(line: 0, scope: !6937)
!6941 = !DILocation(line: 1042, column: 5, scope: !6937)
!6942 = !DILocation(line: 1043, column: 57, scope: !6937)
!6943 = !DILocation(line: 1043, column: 5, scope: !6937)
!6944 = !DILocation(line: 1044, column: 15, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6937, file: !364, line: 1044, column: 9)
!6946 = !DILocation(line: 1044, column: 20, scope: !6945)
!6947 = !DILocation(line: 1044, column: 33, scope: !6945)
!6948 = !DILocation(line: 1044, column: 9, scope: !6937)
!6949 = !DILocation(line: 1045, column: 9, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6945, file: !364, line: 1044, column: 39)
!6951 = !DILocation(line: 1046, column: 61, scope: !6950)
!6952 = !DILocation(line: 1046, column: 9, scope: !6950)
!6953 = !DILocation(line: 1047, column: 19, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6950, file: !364, line: 1047, column: 13)
!6955 = !DILocation(line: 1047, column: 38, scope: !6954)
!6956 = !DILocation(line: 1047, column: 13, scope: !6950)
!6957 = !DILocation(line: 1048, column: 37, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6954, file: !364, line: 1047, column: 44)
!6959 = !DILocation(line: 1048, column: 13, scope: !6958)
!6960 = !DILocation(line: 1049, column: 9, scope: !6958)
!6961 = !DILocation(line: 1050, column: 19, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6950, file: !364, line: 1050, column: 13)
!6963 = !DILocation(line: 1050, column: 24, scope: !6962)
!6964 = !DILocation(line: 1050, column: 38, scope: !6962)
!6965 = !DILocation(line: 1050, column: 13, scope: !6950)
!6966 = !DILocation(line: 1051, column: 40, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6962, file: !364, line: 1050, column: 45)
!6968 = !DILocation(line: 1051, column: 13, scope: !6967)
!6969 = !DILocation(line: 1052, column: 9, scope: !6967)
!6970 = !DILocation(line: 1053, column: 19, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6950, file: !364, line: 1053, column: 13)
!6972 = !DILocation(line: 1053, column: 24, scope: !6971)
!6973 = !DILocation(line: 1053, column: 38, scope: !6971)
!6974 = !DILocation(line: 1053, column: 13, scope: !6950)
!6975 = !DILocation(line: 1054, column: 48, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6971, file: !364, line: 1053, column: 45)
!6977 = !DILocation(line: 1054, column: 13, scope: !6976)
!6978 = !DILocation(line: 1055, column: 9, scope: !6976)
!6979 = !DILocation(line: 1058, column: 5, scope: !6937)
!6980 = !DILocation(line: 1060, column: 5, scope: !6937)
!6981 = !DILocation(line: 1065, column: 5, scope: !6937)
!6982 = distinct !{!6982, !6981, !6983}
!6983 = !DILocation(line: 1065, column: 14, scope: !6937)
!6984 = distinct !DISubprogram(name: "MemManage_Fault_Handler", scope: !364, file: !364, line: 1069, type: !6659, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !6985)
!6985 = !{!6986}
!6986 = !DILocalVariable(name: "stack", arg: 1, scope: !6984, file: !364, line: 1069, type: !3134)
!6987 = !DILocation(line: 0, scope: !6984)
!6988 = !DILocation(line: 1071, column: 5, scope: !6984)
!6989 = !DILocation(line: 1072, column: 57, scope: !6984)
!6990 = !DILocation(line: 1072, column: 5, scope: !6984)
!6991 = !DILocation(line: 1073, column: 15, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6984, file: !364, line: 1073, column: 9)
!6993 = !DILocation(line: 1073, column: 20, scope: !6992)
!6994 = !DILocation(line: 1073, column: 28, scope: !6992)
!6995 = !DILocation(line: 1073, column: 9, scope: !6984)
!6996 = !DILocation(line: 1074, column: 44, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6992, file: !364, line: 1073, column: 34)
!6998 = !DILocation(line: 1074, column: 9, scope: !6997)
!6999 = !DILocation(line: 1075, column: 5, scope: !6997)
!7000 = !DILocation(line: 1077, column: 5, scope: !6984)
!7001 = !DILocation(line: 1079, column: 5, scope: !6984)
!7002 = !DILocation(line: 1084, column: 5, scope: !6984)
!7003 = distinct !{!7003, !7002, !7004}
!7004 = !DILocation(line: 1084, column: 14, scope: !6984)
!7005 = distinct !DISubprogram(name: "Bus_Fault_Handler", scope: !364, file: !364, line: 1088, type: !6659, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !7006)
!7006 = !{!7007}
!7007 = !DILocalVariable(name: "stack", arg: 1, scope: !7005, file: !364, line: 1088, type: !3134)
!7008 = !DILocation(line: 0, scope: !7005)
!7009 = !DILocation(line: 1090, column: 5, scope: !7005)
!7010 = !DILocation(line: 1091, column: 57, scope: !7005)
!7011 = !DILocation(line: 1091, column: 5, scope: !7005)
!7012 = !DILocation(line: 1092, column: 15, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7005, file: !364, line: 1092, column: 9)
!7014 = !DILocation(line: 1092, column: 20, scope: !7013)
!7015 = !DILocation(line: 1092, column: 30, scope: !7013)
!7016 = !DILocation(line: 1092, column: 9, scope: !7005)
!7017 = !DILocation(line: 1093, column: 36, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7013, file: !364, line: 1092, column: 36)
!7019 = !DILocation(line: 1093, column: 9, scope: !7018)
!7020 = !DILocation(line: 1094, column: 5, scope: !7018)
!7021 = !DILocation(line: 1096, column: 5, scope: !7005)
!7022 = !DILocation(line: 1098, column: 5, scope: !7005)
!7023 = !DILocation(line: 1103, column: 5, scope: !7005)
!7024 = distinct !{!7024, !7023, !7025}
!7025 = !DILocation(line: 1103, column: 14, scope: !7005)
!7026 = distinct !DISubprogram(name: "Usage_Fault_Handler", scope: !364, file: !364, line: 1107, type: !6659, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !7027)
!7027 = !{!7028}
!7028 = !DILocalVariable(name: "stack", arg: 1, scope: !7026, file: !364, line: 1107, type: !3134)
!7029 = !DILocation(line: 0, scope: !7026)
!7030 = !DILocation(line: 1109, column: 5, scope: !7026)
!7031 = !DILocation(line: 1110, column: 57, scope: !7026)
!7032 = !DILocation(line: 1110, column: 5, scope: !7026)
!7033 = !DILocation(line: 1111, column: 15, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7026, file: !364, line: 1111, column: 9)
!7035 = !DILocation(line: 1111, column: 34, scope: !7034)
!7036 = !DILocation(line: 1111, column: 9, scope: !7026)
!7037 = !DILocation(line: 1112, column: 33, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7034, file: !364, line: 1111, column: 40)
!7039 = !DILocation(line: 1112, column: 9, scope: !7038)
!7040 = !DILocation(line: 1113, column: 5, scope: !7038)
!7041 = !DILocation(line: 1115, column: 5, scope: !7026)
!7042 = !DILocation(line: 1117, column: 5, scope: !7026)
!7043 = !DILocation(line: 1122, column: 5, scope: !7026)
!7044 = distinct !{!7044, !7043, !7045}
!7045 = !DILocation(line: 1122, column: 14, scope: !7026)
!7046 = distinct !DISubprogram(name: "Debug_Monitor_Handler", scope: !364, file: !364, line: 1127, type: !6659, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !7047)
!7047 = !{!7048, !7049, !7050, !7051}
!7048 = !DILocalVariable(name: "stack", arg: 1, scope: !7046, file: !364, line: 1127, type: !3134)
!7049 = !DILocalVariable(name: "offset", scope: !7046, file: !364, line: 1129, type: !38)
!7050 = !DILocalVariable(name: "stack_end", scope: !7046, file: !364, line: 1129, type: !38)
!7051 = !DILocalVariable(name: "is_match", scope: !7046, file: !364, line: 1129, type: !38)
!7052 = !DILocation(line: 0, scope: !7046)
!7053 = !DILocation(line: 1131, column: 5, scope: !7046)
!7054 = !DILocation(line: 1136, column: 22, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7046, file: !364, line: 1134, column: 5)
!7056 = !DILocation(line: 1137, column: 21, scope: !7055)
!7057 = !DILocation(line: 1138, column: 63, scope: !7055)
!7058 = !DILocation(line: 1138, column: 9, scope: !7055)
!7059 = !DILocation(line: 1141, column: 5, scope: !7046)
!7060 = !DILocation(line: 1143, column: 5, scope: !7046)
!7061 = !DILocation(line: 1148, column: 5, scope: !7046)
!7062 = distinct !{!7062, !7061, !7063}
!7063 = !DILocation(line: 1148, column: 14, scope: !7046)
!7064 = distinct !DISubprogram(name: "CommonFault_Handler", scope: !364, file: !364, line: 1165, type: !110, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !2013)
!7065 = !DILocation(line: 1167, column: 5, scope: !7064)
!7066 = !{i64 35854, i64 35936, i64 35979, i64 36060, i64 36103, i64 36184, i64 36265, i64 36346, i64 36427, i64 36508, i64 36589, i64 36670, i64 36751, i64 36832, i64 36913, i64 36994, i64 37075, i64 37156, i64 37199, i64 37280, i64 37361, i64 37442, i64 37485, i64 37566, i64 37609, i64 37652, i64 37695, i64 37776, i64 37819, i64 37862, i64 37905}
!7067 = !DILocation(line: 1201, column: 1, scope: !7064)
!7068 = distinct !DISubprogram(name: "HardFault_Handler", scope: !364, file: !364, line: 1208, type: !110, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !2013)
!7069 = !DILocation(line: 1210, column: 5, scope: !7068)
!7070 = !{i64 38128, i64 38172, i64 38215}
!7071 = !DILocation(line: 1216, column: 1, scope: !7068)
!7072 = distinct !DISubprogram(name: "MemManage_Handler", scope: !364, file: !364, line: 1223, type: !110, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !2013)
!7073 = !DILocation(line: 1225, column: 5, scope: !7072)
!7074 = !{i64 38441, i64 38485, i64 38528}
!7075 = !DILocation(line: 1231, column: 1, scope: !7072)
!7076 = distinct !DISubprogram(name: "BusFault_Handler", scope: !364, file: !364, line: 1238, type: !110, scopeLine: 1239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !2013)
!7077 = !DILocation(line: 1240, column: 5, scope: !7076)
!7078 = !{i64 38749, i64 38793, i64 38836}
!7079 = !DILocation(line: 1246, column: 1, scope: !7076)
!7080 = distinct !DISubprogram(name: "UsageFault_Handler", scope: !364, file: !364, line: 1253, type: !110, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !2013)
!7081 = !DILocation(line: 1255, column: 5, scope: !7080)
!7082 = !{i64 39061, i64 39105, i64 39148}
!7083 = !DILocation(line: 1261, column: 1, scope: !7080)
!7084 = distinct !DISubprogram(name: "DebugMon_Handler", scope: !364, file: !364, line: 1264, type: !110, scopeLine: 1265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !363, retainedNodes: !2013)
!7085 = !DILocation(line: 1266, column: 5, scope: !7084)
!7086 = !{i64 39302, i64 39346, i64 39389}
!7087 = !DILocation(line: 1272, column: 1, scope: !7084)
!7088 = distinct !DISubprogram(name: "vApplicationStackOverflowHook", scope: !1829, file: !1829, line: 100, type: !7089, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1828, retainedNodes: !7091)
!7089 = !DISubroutineType(types: !7090)
!7090 = !{null, !40, !701}
!7091 = !{!7092, !7093}
!7092 = !DILocalVariable(name: "xTask", arg: 1, scope: !7088, file: !1829, line: 100, type: !40)
!7093 = !DILocalVariable(name: "pcTaskName", arg: 2, scope: !7088, file: !1829, line: 100, type: !701)
!7094 = !DILocation(line: 0, scope: !7088)
!7095 = !DILocation(line: 102, column: 40, scope: !7088)
!7096 = !DILocation(line: 102, column: 5, scope: !7088)
!7097 = !DILocation(line: 103, column: 5, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7099, file: !1829, line: 103, column: 5)
!7099 = distinct !DILexicalBlock(scope: !7088, file: !1829, line: 103, column: 5)
!7100 = !DILocation(line: 104, column: 1, scope: !7088)
!7101 = distinct !DISubprogram(name: "print_module_log", scope: !570, file: !570, line: 1102, type: !713, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7102)
!7102 = !{!7103, !7104, !7105, !7106, !7107, !7108}
!7103 = !DILocalVariable(name: "handle", arg: 1, scope: !7101, file: !570, line: 1102, type: !30)
!7104 = !DILocalVariable(name: "func", arg: 2, scope: !7101, file: !570, line: 1103, type: !104)
!7105 = !DILocalVariable(name: "line", arg: 3, scope: !7101, file: !570, line: 1104, type: !103)
!7106 = !DILocalVariable(name: "level", arg: 4, scope: !7101, file: !570, line: 1105, type: !674)
!7107 = !DILocalVariable(name: "message", arg: 5, scope: !7101, file: !570, line: 1106, type: !104)
!7108 = !DILocalVariable(name: "ap", scope: !7101, file: !570, line: 1108, type: !7109)
!7109 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !7110, line: 46, baseType: !7111)
!7110 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!7111 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !7112, line: 32, baseType: !7113)
!7112 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!7113 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !570, baseType: !7114)
!7114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7115)
!7115 = !{!7116}
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7114, file: !570, line: 1044, baseType: !30, size: 32)
!7117 = !DILocation(line: 0, scope: !7101)
!7118 = !DILocation(line: 1108, column: 5, scope: !7101)
!7119 = !DILocation(line: 1108, column: 13, scope: !7101)
!7120 = !DILocation(line: 1109, column: 5, scope: !7101)
!7121 = !DILocation(line: 1110, column: 5, scope: !7101)
!7122 = !DILocation(line: 1111, column: 5, scope: !7101)
!7123 = !DILocation(line: 1112, column: 1, scope: !7101)
!7124 = distinct !DISubprogram(name: "dump_module_buffer", scope: !570, file: !570, line: 1200, type: !718, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7125)
!7125 = !{!7126, !7127, !7128, !7129, !7130, !7131, !7132, !7133}
!7126 = !DILocalVariable(name: "handle", arg: 1, scope: !7124, file: !570, line: 1200, type: !30)
!7127 = !DILocalVariable(name: "func", arg: 2, scope: !7124, file: !570, line: 1201, type: !104)
!7128 = !DILocalVariable(name: "line", arg: 3, scope: !7124, file: !570, line: 1202, type: !103)
!7129 = !DILocalVariable(name: "level", arg: 4, scope: !7124, file: !570, line: 1203, type: !674)
!7130 = !DILocalVariable(name: "data", arg: 5, scope: !7124, file: !570, line: 1204, type: !720)
!7131 = !DILocalVariable(name: "length", arg: 6, scope: !7124, file: !570, line: 1205, type: !103)
!7132 = !DILocalVariable(name: "message", arg: 7, scope: !7124, file: !570, line: 1206, type: !104)
!7133 = !DILocalVariable(name: "ap", scope: !7124, file: !570, line: 1208, type: !7109)
!7134 = !DILocation(line: 0, scope: !7124)
!7135 = !DILocation(line: 1208, column: 5, scope: !7124)
!7136 = !DILocation(line: 1208, column: 13, scope: !7124)
!7137 = !DILocation(line: 1209, column: 5, scope: !7124)
!7138 = !DILocation(line: 1210, column: 5, scope: !7124)
!7139 = !DILocation(line: 1211, column: 5, scope: !7124)
!7140 = !DILocation(line: 1212, column: 1, scope: !7124)
!7141 = distinct !DISubprogram(name: "vdump_module_buffer", scope: !570, file: !570, line: 1114, type: !7142, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7144)
!7142 = !DISubroutineType(types: !7143)
!7143 = !{null, !30, !104, !103, !674, !720, !103, !104, !7109}
!7144 = !{!7145, !7146, !7147, !7148, !7149, !7150, !7151, !7152, !7153, !7154, !7155, !7162, !7164, !7165}
!7145 = !DILocalVariable(name: "handle", arg: 1, scope: !7141, file: !570, line: 1114, type: !30)
!7146 = !DILocalVariable(name: "func", arg: 2, scope: !7141, file: !570, line: 1115, type: !104)
!7147 = !DILocalVariable(name: "line", arg: 3, scope: !7141, file: !570, line: 1116, type: !103)
!7148 = !DILocalVariable(name: "level", arg: 4, scope: !7141, file: !570, line: 1117, type: !674)
!7149 = !DILocalVariable(name: "data", arg: 5, scope: !7141, file: !570, line: 1118, type: !720)
!7150 = !DILocalVariable(name: "length", arg: 6, scope: !7141, file: !570, line: 1119, type: !103)
!7151 = !DILocalVariable(name: "message", arg: 7, scope: !7141, file: !570, line: 1120, type: !104)
!7152 = !DILocalVariable(name: "list", arg: 8, scope: !7141, file: !570, line: 1121, type: !7109)
!7153 = !DILocalVariable(name: "context", scope: !7141, file: !570, line: 1123, type: !702)
!7154 = !DILocalVariable(name: "additional_length", scope: !7141, file: !570, line: 1124, type: !103)
!7155 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !7156, file: !570, line: 1133, type: !27)
!7156 = distinct !DILexicalBlock(scope: !7157, file: !570, line: 1132, column: 39)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !570, line: 1132, column: 17)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !570, line: 1131, column: 62)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !570, line: 1129, column: 13)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !570, line: 1127, column: 49)
!7161 = distinct !DILexicalBlock(scope: !7141, file: !570, line: 1126, column: 9)
!7162 = !DILocalVariable(name: "syslog_buffer", scope: !7163, file: !570, line: 1151, type: !722)
!7163 = distinct !DILexicalBlock(scope: !7159, file: !570, line: 1149, column: 16)
!7164 = !DILocalVariable(name: "log_message", scope: !7163, file: !570, line: 1152, type: !659)
!7165 = !DILocalVariable(name: "hex_dump_message", scope: !7163, file: !570, line: 1153, type: !7166)
!7166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 32)
!7167 = !DILocation(line: 0, scope: !7141)
!7168 = !DILocation(line: 1126, column: 19, scope: !7161)
!7169 = !DILocation(line: 1126, column: 30, scope: !7161)
!7170 = !DILocation(line: 1127, column: 13, scope: !7161)
!7171 = !DILocation(line: 1127, column: 26, scope: !7161)
!7172 = !DILocation(line: 1127, column: 38, scope: !7161)
!7173 = !DILocation(line: 1126, column: 9, scope: !7141)
!7174 = !DILocation(line: 1129, column: 14, scope: !7159)
!7175 = !DILocation(line: 1130, column: 17, scope: !7159)
!7176 = !DILocation(line: 1130, column: 21, scope: !7159)
!7177 = !DILocation(line: 1130, column: 46, scope: !7159)
!7178 = !DILocation(line: 1131, column: 21, scope: !7159)
!7179 = !DILocation(line: 1131, column: 25, scope: !7159)
!7180 = !DILocation(line: 1131, column: 47, scope: !7159)
!7181 = !DILocation(line: 1131, column: 55, scope: !7159)
!7182 = !DILocation(line: 1129, column: 13, scope: !7160)
!7183 = !DILocation(line: 1132, column: 17, scope: !7157)
!7184 = !DILocation(line: 1132, column: 34, scope: !7157)
!7185 = !DILocation(line: 1132, column: 17, scope: !7158)
!7186 = !DILocation(line: 231, column: 2, scope: !7187, inlinedAt: !7191)
!7187 = distinct !DISubprogram(name: "ulPortRaiseBASEPRI", scope: !28, file: !28, line: 227, type: !2643, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7188)
!7188 = !{!7189, !7190}
!7189 = !DILocalVariable(name: "ulOriginalBASEPRI", scope: !7187, file: !28, line: 229, type: !38)
!7190 = !DILocalVariable(name: "ulNewBASEPRI", scope: !7187, file: !28, line: 229, type: !38)
!7191 = distinct !DILocation(line: 1134, column: 42, scope: !7156)
!7192 = !{i64 690437, i64 690474, i64 690506, i64 690542, i64 690569}
!7193 = !DILocation(line: 0, scope: !7187, inlinedAt: !7191)
!7194 = !DILocation(line: 0, scope: !7156)
!7195 = !DILocation(line: 1135, column: 21, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7156, file: !570, line: 1135, column: 21)
!7197 = !DILocation(line: 1135, column: 38, scope: !7196)
!7198 = !DILocation(line: 1135, column: 21, scope: !7156)
!7199 = !DILocation(line: 1138, column: 28, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7196, file: !570, line: 1135, column: 63)
!7201 = !DILocation(line: 1139, column: 37, scope: !7200)
!7202 = !DILocation(line: 1140, column: 28, scope: !7200)
!7203 = !DILocation(line: 1137, column: 21, scope: !7200)
!7204 = !DILocation(line: 1143, column: 17, scope: !7200)
!7205 = !DILocation(line: 1144, column: 17, scope: !7156)
!7206 = !DILocation(line: 1145, column: 17, scope: !7156)
!7207 = !DILocation(line: 1146, column: 17, scope: !7156)
!7208 = !DILocalVariable(name: "ulNewMaskValue", arg: 1, scope: !7209, file: !28, line: 247, type: !38)
!7209 = distinct !DISubprogram(name: "vPortSetBASEPRI", scope: !28, file: !28, line: 247, type: !2656, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7210)
!7210 = !{!7208}
!7211 = !DILocation(line: 0, scope: !7209, inlinedAt: !7212)
!7212 = distinct !DILocation(line: 1147, column: 17, scope: !7156)
!7213 = !DILocation(line: 249, column: 2, scope: !7209, inlinedAt: !7212)
!7214 = !{i64 690970}
!7215 = !DILocation(line: 1148, column: 13, scope: !7156)
!7216 = !DILocation(line: 1151, column: 13, scope: !7163)
!7217 = !DILocation(line: 1151, column: 46, scope: !7163)
!7218 = !DILocation(line: 0, scope: !7163)
!7219 = !DILocation(line: 1151, column: 30, scope: !7163)
!7220 = !DILocation(line: 1155, column: 22, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7163, file: !570, line: 1155, column: 17)
!7222 = !DILocation(line: 1155, column: 17, scope: !7163)
!7223 = !DILocation(line: 1159, column: 44, scope: !7163)
!7224 = !DILocation(line: 1160, column: 26, scope: !7163)
!7225 = !DILocation(line: 1160, column: 39, scope: !7163)
!7226 = !DILocation(line: 1161, column: 46, scope: !7163)
!7227 = !DILocation(line: 1162, column: 54, scope: !7163)
!7228 = !DILocation(line: 1162, column: 31, scope: !7163)
!7229 = !DILocation(line: 1162, column: 43, scope: !7163)
!7230 = !DILocation(line: 1163, column: 31, scope: !7163)
!7231 = !DILocation(line: 1163, column: 43, scope: !7163)
!7232 = !DILocation(line: 1164, column: 31, scope: !7163)
!7233 = !DILocation(line: 1164, column: 41, scope: !7163)
!7234 = !DILocation(line: 1165, column: 31, scope: !7163)
!7235 = !DILocation(line: 1165, column: 43, scope: !7163)
!7236 = !DILocation(line: 1166, column: 43, scope: !7163)
!7237 = !DILocation(line: 1166, column: 31, scope: !7163)
!7238 = !DILocation(line: 1166, column: 41, scope: !7163)
!7239 = !DILocation(line: 1170, column: 47, scope: !7163)
!7240 = !DILocation(line: 1170, column: 19, scope: !7163)
!7241 = !DILocation(line: 1172, column: 17, scope: !7163)
!7242 = !DILocation(line: 1177, column: 24, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7163, file: !570, line: 1177, column: 17)
!7244 = !DILocation(line: 1177, column: 17, scope: !7163)
!7245 = !DILocation(line: 1178, column: 23, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7247, file: !570, line: 1178, column: 22)
!7247 = distinct !DILexicalBlock(scope: !7243, file: !570, line: 1177, column: 46)
!7248 = !DILocation(line: 1178, column: 45, scope: !7246)
!7249 = !DILocation(line: 1178, column: 53, scope: !7246)
!7250 = !DILocation(line: 0, scope: !7247)
!7251 = !DILocation(line: 1184, column: 38, scope: !7163)
!7252 = !DILocation(line: 1184, column: 13, scope: !7163)
!7253 = !DILocation(line: 1185, column: 31, scope: !7163)
!7254 = !DILocation(line: 1185, column: 43, scope: !7163)
!7255 = !DILocation(line: 1187, column: 31, scope: !7163)
!7256 = !DILocation(line: 1187, column: 47, scope: !7163)
!7257 = !DILocation(line: 1188, column: 17, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7163, file: !570, line: 1188, column: 17)
!7259 = !DILocation(line: 1188, column: 17, scope: !7163)
!7260 = !DILocation(line: 1189, column: 67, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !570, line: 1189, column: 21)
!7262 = distinct !DILexicalBlock(scope: !7258, file: !570, line: 1188, column: 36)
!7263 = !DILocation(line: 1189, column: 56, scope: !7261)
!7264 = !DILocation(line: 1189, column: 100, scope: !7261)
!7265 = !DILocation(line: 1189, column: 21, scope: !7262)
!7266 = !DILocation(line: 1190, column: 76, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7261, file: !570, line: 1189, column: 109)
!7268 = !DILocation(line: 1190, column: 21, scope: !7267)
!7269 = !DILocation(line: 1191, column: 51, scope: !7267)
!7270 = !DILocation(line: 1192, column: 17, scope: !7267)
!7271 = !DILocation(line: 1195, column: 13, scope: !7163)
!7272 = !DILocation(line: 1196, column: 9, scope: !7159)
!7273 = !DILocation(line: 1198, column: 1, scope: !7141)
!7274 = distinct !DISubprogram(name: "get_current_time_in_ms", scope: !570, file: !570, line: 601, type: !7275, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7277)
!7275 = !DISubroutineType(types: !7276)
!7276 = !{!6}
!7277 = !{!7278, !7279}
!7278 = !DILocalVariable(name: "count", scope: !7274, file: !570, line: 603, type: !38)
!7279 = !DILocalVariable(name: "count64", scope: !7274, file: !570, line: 604, type: !731)
!7280 = !DILocation(line: 603, column: 5, scope: !7274)
!7281 = !DILocation(line: 0, scope: !7274)
!7282 = !DILocation(line: 603, column: 14, scope: !7274)
!7283 = !DILocation(line: 605, column: 5, scope: !7274)
!7284 = !DILocation(line: 606, column: 26, scope: !7274)
!7285 = !DILocation(line: 606, column: 16, scope: !7274)
!7286 = !DILocation(line: 606, column: 32, scope: !7274)
!7287 = !DILocation(line: 606, column: 37, scope: !7274)
!7288 = !DILocation(line: 607, column: 12, scope: !7274)
!7289 = !DILocation(line: 608, column: 1, scope: !7274)
!7290 = !DILocation(line: 607, column: 5, scope: !7274)
!7291 = distinct !DISubprogram(name: "hex_dump_data", scope: !570, file: !570, line: 865, type: !7292, scopeLine: 866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7294)
!7292 = !DISubroutineType(types: !7293)
!7293 = !{null, !104, !103}
!7294 = !{!7295, !7296, !7297}
!7295 = !DILocalVariable(name: "data", arg: 1, scope: !7291, file: !570, line: 865, type: !104)
!7296 = !DILocalVariable(name: "length", arg: 2, scope: !7291, file: !570, line: 865, type: !103)
!7297 = !DILocalVariable(name: "index", scope: !7291, file: !570, line: 867, type: !103)
!7298 = !DILocation(line: 0, scope: !7291)
!7299 = !DILocation(line: 868, column: 27, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7301, file: !570, line: 868, column: 5)
!7301 = distinct !DILexicalBlock(scope: !7291, file: !570, line: 868, column: 5)
!7302 = !DILocation(line: 868, column: 5, scope: !7301)
!7303 = !DILocation(line: 869, column: 30, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7300, file: !570, line: 868, column: 46)
!7305 = !DILocation(line: 869, column: 24, scope: !7304)
!7306 = !DILocation(line: 869, column: 9, scope: !7304)
!7307 = !DILocation(line: 870, column: 20, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7304, file: !570, line: 870, column: 13)
!7309 = !DILocation(line: 870, column: 25, scope: !7308)
!7310 = !DILocation(line: 870, column: 30, scope: !7308)
!7311 = !DILocation(line: 870, column: 13, scope: !7304)
!7312 = !DILocation(line: 874, column: 23, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7304, file: !570, line: 874, column: 13)
!7314 = !DILocation(line: 874, column: 13, scope: !7304)
!7315 = !DILocation(line: 0, scope: !7304)
!7316 = distinct !{!7316, !7302, !7317}
!7317 = !DILocation(line: 877, column: 5, scope: !7301)
!7318 = !DILocation(line: 878, column: 20, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7291, file: !570, line: 878, column: 9)
!7320 = !DILocation(line: 879, column: 9, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7319, file: !570, line: 878, column: 40)
!7322 = !DILocation(line: 880, column: 5, scope: !7321)
!7323 = !DILocation(line: 881, column: 1, scope: !7291)
!7324 = distinct !DISubprogram(name: "buffer_pool_alloc", scope: !570, file: !570, line: 562, type: !7325, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7327)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{!722}
!7327 = !{!7328, !7329}
!7328 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !7324, file: !570, line: 564, type: !27)
!7329 = !DILocalVariable(name: "index", scope: !7324, file: !570, line: 565, type: !38)
!7330 = !DILocation(line: 231, column: 2, scope: !7187, inlinedAt: !7331)
!7331 = distinct !DILocation(line: 567, column: 30, scope: !7324)
!7332 = !DILocation(line: 0, scope: !7187, inlinedAt: !7331)
!7333 = !DILocation(line: 0, scope: !7324)
!7334 = !DILocation(line: 568, column: 5, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7324, file: !570, line: 568, column: 5)
!7336 = !DILocation(line: 568, column: 50, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7335, file: !570, line: 568, column: 5)
!7338 = !DILocation(line: 568, column: 27, scope: !7337)
!7339 = distinct !{!7339, !7334, !7340}
!7340 = !DILocation(line: 574, column: 5, scope: !7335)
!7341 = !DILocation(line: 569, column: 14, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !570, line: 569, column: 13)
!7343 = distinct !DILexicalBlock(scope: !7337, file: !570, line: 568, column: 54)
!7344 = !DILocation(line: 569, column: 40, scope: !7342)
!7345 = !DILocation(line: 569, column: 13, scope: !7343)
!7346 = !DILocation(line: 570, column: 48, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7342, file: !570, line: 569, column: 50)
!7348 = !DILocation(line: 0, scope: !7209, inlinedAt: !7349)
!7349 = distinct !DILocation(line: 571, column: 13, scope: !7347)
!7350 = !DILocation(line: 249, column: 2, scope: !7209, inlinedAt: !7349)
!7351 = !DILocation(line: 572, column: 13, scope: !7347)
!7352 = !DILocation(line: 575, column: 22, scope: !7324)
!7353 = !DILocation(line: 0, scope: !7209, inlinedAt: !7354)
!7354 = distinct !DILocation(line: 576, column: 5, scope: !7324)
!7355 = !DILocation(line: 249, column: 2, scope: !7209, inlinedAt: !7354)
!7356 = !DILocation(line: 582, column: 5, scope: !7324)
!7357 = !DILocation(line: 583, column: 1, scope: !7324)
!7358 = distinct !DISubprogram(name: "log_queue_send", scope: !570, file: !570, line: 621, type: !7359, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7362)
!7359 = !DISubroutineType(types: !7360)
!7360 = !{null, !7361}
!7361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 32)
!7362 = !{!7363, !7364}
!7363 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !7358, file: !570, line: 621, type: !7361)
!7364 = !DILocalVariable(name: "xTaskWokenByPost", scope: !7365, file: !570, line: 624, type: !41)
!7365 = distinct !DILexicalBlock(scope: !7366, file: !570, line: 623, column: 39)
!7366 = distinct !DILexicalBlock(scope: !7358, file: !570, line: 623, column: 9)
!7367 = !DILocation(line: 0, scope: !7358)
!7368 = !DILocation(line: 623, column: 9, scope: !7366)
!7369 = !DILocation(line: 623, column: 31, scope: !7366)
!7370 = !DILocation(line: 623, column: 9, scope: !7358)
!7371 = !DILocation(line: 624, column: 9, scope: !7365)
!7372 = !DILocation(line: 0, scope: !7365)
!7373 = !DILocation(line: 624, column: 20, scope: !7365)
!7374 = !DILocation(line: 625, column: 13, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7365, file: !570, line: 625, column: 13)
!7376 = !DILocation(line: 625, column: 75, scope: !7375)
!7377 = !DILocation(line: 625, column: 13, scope: !7365)
!7378 = !DILocation(line: 626, column: 33, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7375, file: !570, line: 625, column: 95)
!7380 = !DILocation(line: 626, column: 13, scope: !7379)
!7381 = !DILocation(line: 627, column: 9, scope: !7379)
!7382 = !DILocation(line: 628, column: 13, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !570, line: 628, column: 13)
!7384 = distinct !DILexicalBlock(scope: !7375, file: !570, line: 627, column: 16)
!7385 = !DILocation(line: 628, column: 13, scope: !7384)
!7386 = !DILocation(line: 628, column: 13, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7383, file: !570, line: 628, column: 13)
!7388 = !{i64 2148485569}
!7389 = !{i64 2148485609}
!7390 = !DILocation(line: 630, column: 5, scope: !7366)
!7391 = !DILocation(line: 630, column: 5, scope: !7365)
!7392 = !DILocation(line: 631, column: 9, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7366, file: !570, line: 630, column: 12)
!7394 = !DILocation(line: 633, column: 1, scope: !7358)
!7395 = distinct !DISubprogram(name: "buffer_pool_release", scope: !570, file: !570, line: 587, type: !7396, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7398)
!7396 = !DISubroutineType(types: !7397)
!7397 = !{null, !722}
!7398 = !{!7399, !7400, !7401}
!7399 = !DILocalVariable(name: "syslog_buffer", arg: 1, scope: !7395, file: !570, line: 587, type: !722)
!7400 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !7395, file: !570, line: 589, type: !27)
!7401 = !DILocalVariable(name: "log_message", scope: !7395, file: !570, line: 590, type: !659)
!7402 = !DILocation(line: 0, scope: !7395)
!7403 = !DILocation(line: 590, column: 51, scope: !7395)
!7404 = !DILocation(line: 231, column: 2, scope: !7187, inlinedAt: !7405)
!7405 = distinct !DILocation(line: 592, column: 30, scope: !7395)
!7406 = !DILocation(line: 0, scope: !7187, inlinedAt: !7405)
!7407 = !DILocation(line: 593, column: 20, scope: !7395)
!7408 = !DILocation(line: 593, column: 29, scope: !7395)
!7409 = !DILocation(line: 594, column: 23, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7395, file: !570, line: 594, column: 9)
!7411 = !DILocation(line: 594, column: 36, scope: !7410)
!7412 = !DILocation(line: 595, column: 13, scope: !7410)
!7413 = !DILocation(line: 595, column: 49, scope: !7410)
!7414 = !DILocation(line: 595, column: 16, scope: !7410)
!7415 = !DILocation(line: 594, column: 9, scope: !7395)
!7416 = !DILocation(line: 596, column: 9, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7410, file: !570, line: 595, column: 68)
!7418 = !DILocation(line: 597, column: 5, scope: !7417)
!7419 = !DILocation(line: 0, scope: !7209, inlinedAt: !7420)
!7420 = distinct !DILocation(line: 598, column: 5, scope: !7395)
!7421 = !DILocation(line: 249, column: 2, scope: !7209, inlinedAt: !7420)
!7422 = !DILocation(line: 599, column: 1, scope: !7395)
!7423 = distinct !DISubprogram(name: "vprint_module_log", scope: !570, file: !570, line: 1046, type: !7424, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7426)
!7424 = !DISubroutineType(types: !7425)
!7425 = !{null, !30, !104, !103, !674, !104, !7109}
!7426 = !{!7427, !7428, !7429, !7430, !7431, !7432, !7433, !7434, !7441, !7443, !7444}
!7427 = !DILocalVariable(name: "handle", arg: 1, scope: !7423, file: !570, line: 1046, type: !30)
!7428 = !DILocalVariable(name: "func", arg: 2, scope: !7423, file: !570, line: 1047, type: !104)
!7429 = !DILocalVariable(name: "line", arg: 3, scope: !7423, file: !570, line: 1048, type: !103)
!7430 = !DILocalVariable(name: "level", arg: 4, scope: !7423, file: !570, line: 1049, type: !674)
!7431 = !DILocalVariable(name: "message", arg: 5, scope: !7423, file: !570, line: 1050, type: !104)
!7432 = !DILocalVariable(name: "list", arg: 6, scope: !7423, file: !570, line: 1051, type: !7109)
!7433 = !DILocalVariable(name: "context", scope: !7423, file: !570, line: 1053, type: !702)
!7434 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !7435, file: !570, line: 1061, type: !27)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !570, line: 1060, column: 39)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !570, line: 1060, column: 17)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !570, line: 1059, column: 62)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !570, line: 1057, column: 13)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !570, line: 1055, column: 49)
!7440 = distinct !DILexicalBlock(scope: !7423, file: !570, line: 1054, column: 9)
!7441 = !DILocalVariable(name: "syslog_buffer", scope: !7442, file: !570, line: 1078, type: !722)
!7442 = distinct !DILexicalBlock(scope: !7438, file: !570, line: 1076, column: 16)
!7443 = !DILocalVariable(name: "log_message", scope: !7442, file: !570, line: 1079, type: !659)
!7444 = !DILocalVariable(name: "normal_log_message", scope: !7442, file: !570, line: 1080, type: !7445)
!7445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 32)
!7446 = !DILocation(line: 0, scope: !7423)
!7447 = !DILocation(line: 1054, column: 19, scope: !7440)
!7448 = !DILocation(line: 1054, column: 30, scope: !7440)
!7449 = !DILocation(line: 1055, column: 13, scope: !7440)
!7450 = !DILocation(line: 1055, column: 26, scope: !7440)
!7451 = !DILocation(line: 1055, column: 38, scope: !7440)
!7452 = !DILocation(line: 1054, column: 9, scope: !7423)
!7453 = !DILocation(line: 1057, column: 14, scope: !7438)
!7454 = !DILocation(line: 1058, column: 17, scope: !7438)
!7455 = !DILocation(line: 1058, column: 21, scope: !7438)
!7456 = !DILocation(line: 1058, column: 46, scope: !7438)
!7457 = !DILocation(line: 1059, column: 21, scope: !7438)
!7458 = !DILocation(line: 1059, column: 25, scope: !7438)
!7459 = !DILocation(line: 1059, column: 47, scope: !7438)
!7460 = !DILocation(line: 1059, column: 55, scope: !7438)
!7461 = !DILocation(line: 1057, column: 13, scope: !7439)
!7462 = !DILocation(line: 1060, column: 17, scope: !7436)
!7463 = !DILocation(line: 1060, column: 34, scope: !7436)
!7464 = !DILocation(line: 1060, column: 17, scope: !7437)
!7465 = !DILocation(line: 231, column: 2, scope: !7187, inlinedAt: !7466)
!7466 = distinct !DILocation(line: 1062, column: 42, scope: !7435)
!7467 = !DILocation(line: 0, scope: !7187, inlinedAt: !7466)
!7468 = !DILocation(line: 0, scope: !7435)
!7469 = !DILocation(line: 1063, column: 21, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7435, file: !570, line: 1063, column: 21)
!7471 = !DILocation(line: 1063, column: 38, scope: !7470)
!7472 = !DILocation(line: 1063, column: 21, scope: !7435)
!7473 = !DILocation(line: 1066, column: 28, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7470, file: !570, line: 1063, column: 63)
!7475 = !DILocation(line: 1067, column: 37, scope: !7474)
!7476 = !DILocation(line: 1068, column: 28, scope: !7474)
!7477 = !DILocation(line: 1065, column: 21, scope: !7474)
!7478 = !DILocation(line: 1071, column: 17, scope: !7474)
!7479 = !DILocation(line: 1072, column: 17, scope: !7435)
!7480 = !DILocation(line: 1073, column: 17, scope: !7435)
!7481 = !DILocation(line: 0, scope: !7209, inlinedAt: !7482)
!7482 = distinct !DILocation(line: 1074, column: 17, scope: !7435)
!7483 = !DILocation(line: 249, column: 2, scope: !7209, inlinedAt: !7482)
!7484 = !DILocation(line: 1075, column: 13, scope: !7435)
!7485 = !DILocation(line: 1078, column: 13, scope: !7442)
!7486 = !DILocation(line: 1078, column: 46, scope: !7442)
!7487 = !DILocation(line: 0, scope: !7442)
!7488 = !DILocation(line: 1078, column: 30, scope: !7442)
!7489 = !DILocation(line: 1082, column: 22, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7442, file: !570, line: 1082, column: 17)
!7491 = !DILocation(line: 1082, column: 17, scope: !7442)
!7492 = !DILocation(line: 1085, column: 44, scope: !7442)
!7493 = !DILocation(line: 1086, column: 26, scope: !7442)
!7494 = !DILocation(line: 1086, column: 39, scope: !7442)
!7495 = !DILocation(line: 1087, column: 48, scope: !7442)
!7496 = !DILocation(line: 1088, column: 56, scope: !7442)
!7497 = !DILocation(line: 1088, column: 33, scope: !7442)
!7498 = !DILocation(line: 1088, column: 45, scope: !7442)
!7499 = !DILocation(line: 1089, column: 33, scope: !7442)
!7500 = !DILocation(line: 1089, column: 45, scope: !7442)
!7501 = !DILocation(line: 1090, column: 33, scope: !7442)
!7502 = !DILocation(line: 1090, column: 43, scope: !7442)
!7503 = !DILocation(line: 1091, column: 33, scope: !7442)
!7504 = !DILocation(line: 1091, column: 45, scope: !7442)
!7505 = !DILocation(line: 1092, column: 45, scope: !7442)
!7506 = !DILocation(line: 1092, column: 33, scope: !7442)
!7507 = !DILocation(line: 1092, column: 43, scope: !7442)
!7508 = !DILocation(line: 1096, column: 49, scope: !7442)
!7509 = !DILocation(line: 1096, column: 19, scope: !7442)
!7510 = !DILocation(line: 1097, column: 13, scope: !7442)
!7511 = !DILocation(line: 1098, column: 9, scope: !7438)
!7512 = !DILocation(line: 1100, column: 1, scope: !7423)
!7513 = distinct !DISubprogram(name: "log_uart_init", scope: !570, file: !570, line: 185, type: !7514, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7517)
!7514 = !DISubroutineType(types: !7515)
!7515 = !{!7516, !774}
!7516 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !584, line: 351, baseType: !583)
!7517 = !{!7518, !7519, !7527}
!7518 = !DILocalVariable(name: "port", arg: 1, scope: !7513, file: !570, line: 185, type: !774)
!7519 = !DILocalVariable(name: "uart_config", scope: !7513, file: !570, line: 187, type: !7520)
!7520 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !584, line: 378, baseType: !7521)
!7521 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !584, line: 373, size: 128, elements: !7522)
!7522 = !{!7523, !7524, !7525, !7526}
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !7521, file: !584, line: 374, baseType: !1365, size: 32)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !7521, file: !584, line: 375, baseType: !1367, size: 32, offset: 32)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !7521, file: !584, line: 376, baseType: !1369, size: 32, offset: 64)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7521, file: !584, line: 377, baseType: !1371, size: 32, offset: 96)
!7527 = !DILocalVariable(name: "ret", scope: !7513, file: !570, line: 188, type: !7516)
!7528 = !DILocation(line: 0, scope: !7513)
!7529 = !DILocation(line: 187, column: 5, scope: !7513)
!7530 = !DILocation(line: 187, column: 23, scope: !7513)
!7531 = !DILocation(line: 191, column: 17, scope: !7513)
!7532 = !DILocation(line: 191, column: 26, scope: !7513)
!7533 = !DILocation(line: 192, column: 17, scope: !7513)
!7534 = !DILocation(line: 192, column: 24, scope: !7513)
!7535 = !DILocation(line: 193, column: 17, scope: !7513)
!7536 = !DILocation(line: 193, column: 26, scope: !7513)
!7537 = !DILocation(line: 194, column: 17, scope: !7513)
!7538 = !DILocation(line: 194, column: 29, scope: !7513)
!7539 = !DILocation(line: 196, column: 21, scope: !7513)
!7540 = !DILocation(line: 197, column: 11, scope: !7513)
!7541 = !DILocation(line: 199, column: 22, scope: !7513)
!7542 = !DILocation(line: 202, column: 1, scope: !7513)
!7543 = !DILocation(line: 201, column: 5, scope: !7513)
!7544 = distinct !DISubprogram(name: "log_putchar", scope: !570, file: !570, line: 204, type: !7545, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7547)
!7545 = !DISubroutineType(types: !7546)
!7546 = !{null, !70}
!7547 = !{!7548}
!7548 = !DILocalVariable(name: "byte", arg: 1, scope: !7544, file: !570, line: 204, type: !70)
!7549 = !DILocation(line: 0, scope: !7544)
!7550 = !DILocation(line: 206, column: 23, scope: !7544)
!7551 = !DILocation(line: 206, column: 5, scope: !7544)
!7552 = !DILocation(line: 207, column: 1, scope: !7544)
!7553 = distinct !DISubprogram(name: "buffer_pool_init", scope: !570, file: !570, line: 524, type: !110, scopeLine: 525, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !2013)
!7554 = !DILocation(line: 526, column: 5, scope: !7553)
!7555 = !DILocation(line: 527, column: 1, scope: !7553)
!7556 = distinct !DISubprogram(name: "log_queue_create", scope: !570, file: !570, line: 613, type: !110, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !2013)
!7557 = !DILocation(line: 615, column: 19, scope: !7556)
!7558 = !DILocation(line: 615, column: 17, scope: !7556)
!7559 = !DILocation(line: 616, column: 14, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7556, file: !570, line: 616, column: 9)
!7561 = !DILocation(line: 616, column: 9, scope: !7556)
!7562 = !DILocation(line: 617, column: 9, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7560, file: !570, line: 616, column: 30)
!7564 = !DILocation(line: 618, column: 5, scope: !7563)
!7565 = !DILocation(line: 619, column: 1, scope: !7556)
!7566 = distinct !DISubprogram(name: "log_queue_receive", scope: !570, file: !570, line: 635, type: !7567, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7569)
!7567 = !DISubroutineType(types: !7568)
!7568 = !{!103, !7361}
!7569 = !{!7570, !7571}
!7570 = !DILocalVariable(name: "log_buffer", arg: 1, scope: !7566, file: !570, line: 635, type: !7361)
!7571 = !DILocalVariable(name: "ret_val", scope: !7566, file: !570, line: 637, type: !41)
!7572 = !DILocation(line: 0, scope: !7566)
!7573 = !DILocation(line: 637, column: 26, scope: !7566)
!7574 = !DILocation(line: 638, column: 20, scope: !7566)
!7575 = !DILocation(line: 638, column: 12, scope: !7566)
!7576 = !DILocation(line: 638, column: 5, scope: !7566)
!7577 = distinct !DISubprogram(name: "print_normal_log", scope: !570, file: !570, line: 854, type: !7578, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7582)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{null, !7580}
!7580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7581, size: 32)
!7581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!7582 = !{!7583}
!7583 = !DILocalVariable(name: "normal_log_message", arg: 1, scope: !7577, file: !570, line: 854, type: !7580)
!7584 = !DILocation(line: 0, scope: !7577)
!7585 = !DILocation(line: 857, column: 46, scope: !7577)
!7586 = !DILocation(line: 858, column: 32, scope: !7577)
!7587 = !DILocation(line: 859, column: 12, scope: !7577)
!7588 = !DILocation(line: 860, column: 32, scope: !7577)
!7589 = !DILocation(line: 861, column: 32, scope: !7577)
!7590 = !DILocation(line: 856, column: 5, scope: !7577)
!7591 = !DILocation(line: 862, column: 30, scope: !7577)
!7592 = !DILocation(line: 862, column: 5, scope: !7577)
!7593 = !DILocation(line: 863, column: 1, scope: !7577)
!7594 = distinct !DISubprogram(name: "print_hex_dump", scope: !570, file: !570, line: 883, type: !7595, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7599)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{null, !7597}
!7597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7598, size: 32)
!7598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !683)
!7599 = !{!7600}
!7600 = !DILocalVariable(name: "hex_dump_message", arg: 1, scope: !7594, file: !570, line: 883, type: !7597)
!7601 = !DILocation(line: 0, scope: !7594)
!7602 = !DILocation(line: 886, column: 44, scope: !7594)
!7603 = !DILocation(line: 887, column: 30, scope: !7594)
!7604 = !DILocation(line: 888, column: 12, scope: !7594)
!7605 = !DILocation(line: 889, column: 30, scope: !7594)
!7606 = !DILocation(line: 890, column: 30, scope: !7594)
!7607 = !DILocation(line: 885, column: 5, scope: !7594)
!7608 = !DILocation(line: 891, column: 30, scope: !7594)
!7609 = !DILocation(line: 891, column: 5, scope: !7594)
!7610 = !DILocation(line: 892, column: 27, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7594, file: !570, line: 892, column: 9)
!7612 = !DILocation(line: 892, column: 39, scope: !7611)
!7613 = !DILocation(line: 0, scope: !7611)
!7614 = !DILocation(line: 892, column: 9, scope: !7594)
!7615 = !DILocation(line: 893, column: 9, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7611, file: !570, line: 892, column: 61)
!7617 = !DILocation(line: 894, column: 41, scope: !7616)
!7618 = !DILocation(line: 894, column: 76, scope: !7616)
!7619 = !DILocation(line: 894, column: 88, scope: !7616)
!7620 = !DILocation(line: 894, column: 9, scope: !7616)
!7621 = !DILocation(line: 895, column: 5, scope: !7616)
!7622 = !DILocation(line: 896, column: 9, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7611, file: !570, line: 895, column: 12)
!7624 = !DILocation(line: 898, column: 1, scope: !7594)
!7625 = distinct !DISubprogram(name: "process_log_message", scope: !570, file: !570, line: 900, type: !7626, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7630)
!7626 = !DISubroutineType(types: !7627)
!7627 = !{null, !7628}
!7628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7629, size: 32)
!7629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !660)
!7630 = !{!7631, !7632}
!7631 = !DILocalVariable(name: "log_message", arg: 1, scope: !7625, file: !570, line: 900, type: !7628)
!7632 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !7633, file: !570, line: 903, type: !27)
!7633 = distinct !DILexicalBlock(scope: !7634, file: !570, line: 902, column: 28)
!7634 = distinct !DILexicalBlock(scope: !7625, file: !570, line: 902, column: 9)
!7635 = !DILocation(line: 0, scope: !7625)
!7636 = !DILocation(line: 902, column: 9, scope: !7634)
!7637 = !DILocation(line: 902, column: 9, scope: !7625)
!7638 = !DILocation(line: 231, column: 2, scope: !7187, inlinedAt: !7639)
!7639 = distinct !DILocation(line: 903, column: 46, scope: !7633)
!7640 = !DILocation(line: 0, scope: !7187, inlinedAt: !7639)
!7641 = !DILocation(line: 0, scope: !7633)
!7642 = !DILocation(line: 904, column: 67, scope: !7633)
!7643 = !DILocation(line: 904, column: 9, scope: !7633)
!7644 = !DILocation(line: 905, column: 27, scope: !7633)
!7645 = !DILocation(line: 0, scope: !7209, inlinedAt: !7646)
!7646 = distinct !DILocation(line: 906, column: 9, scope: !7633)
!7647 = !DILocation(line: 249, column: 2, scope: !7209, inlinedAt: !7646)
!7648 = !DILocation(line: 907, column: 5, scope: !7633)
!7649 = !DILocation(line: 909, column: 49, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7625, file: !570, line: 909, column: 9)
!7651 = !DILocation(line: 909, column: 33, scope: !7650)
!7652 = !DILocation(line: 909, column: 9, scope: !7625)
!7653 = !DILocation(line: 910, column: 40, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7650, file: !570, line: 909, column: 63)
!7655 = !DILocation(line: 910, column: 42, scope: !7654)
!7656 = !DILocation(line: 910, column: 9, scope: !7654)
!7657 = !DILocation(line: 911, column: 5, scope: !7654)
!7658 = !DILocation(line: 912, column: 40, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7650, file: !570, line: 911, column: 12)
!7660 = !DILocation(line: 912, column: 9, scope: !7659)
!7661 = !DILocation(line: 914, column: 1, scope: !7625)
!7662 = distinct !DISubprogram(name: "syslog_task_entry", scope: !570, file: !570, line: 966, type: !1337, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7663)
!7663 = !{!7664, !7665}
!7664 = !DILocalVariable(name: "args", arg: 1, scope: !7662, file: !570, line: 966, type: !30)
!7665 = !DILocalVariable(name: "log_buffer", scope: !7666, file: !570, line: 983, type: !722)
!7666 = distinct !DILexicalBlock(scope: !7667, file: !570, line: 982, column: 14)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !570, line: 982, column: 5)
!7668 = distinct !DILexicalBlock(scope: !7662, file: !570, line: 982, column: 5)
!7669 = !DILocation(line: 0, scope: !7662)
!7670 = !DILocation(line: 979, column: 23, scope: !7662)
!7671 = !DILocation(line: 980, column: 5, scope: !7662)
!7672 = !DILocation(line: 982, column: 5, scope: !7662)
!7673 = !DILocation(line: 983, column: 9, scope: !7666)
!7674 = !DILocation(line: 0, scope: !7666)
!7675 = !DILocation(line: 983, column: 26, scope: !7666)
!7676 = !DILocation(line: 984, column: 18, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7666, file: !570, line: 984, column: 13)
!7678 = !DILocation(line: 984, column: 15, scope: !7677)
!7679 = !DILocation(line: 984, column: 13, scope: !7666)
!7680 = !DILocation(line: 993, column: 42, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7677, file: !570, line: 984, column: 50)
!7682 = !DILocation(line: 993, column: 41, scope: !7681)
!7683 = !DILocation(line: 993, column: 24, scope: !7681)
!7684 = !DILocation(line: 993, column: 4, scope: !7681)
!7685 = !DILocation(line: 995, column: 33, scope: !7681)
!7686 = !DILocation(line: 995, column: 13, scope: !7681)
!7687 = !DILocation(line: 996, column: 9, scope: !7681)
!7688 = !DILocation(line: 997, column: 5, scope: !7667)
!7689 = !DILocation(line: 982, column: 5, scope: !7667)
!7690 = distinct !{!7690, !7691, !7692}
!7691 = !DILocation(line: 982, column: 5, scope: !7668)
!7692 = !DILocation(line: 997, column: 5, scope: !7668)
!7693 = distinct !DISubprogram(name: "log_init", scope: !570, file: !570, line: 1000, type: !7694, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7701)
!7694 = !DISubroutineType(types: !7695)
!7695 = !{null, !750, !7696, !757}
!7696 = !DIDerivedType(tag: DW_TAG_typedef, name: "syslog_load_fn", file: !573, line: 117, baseType: !7697)
!7697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7698, size: 32)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!38, !7700}
!7700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!7701 = !{!7702, !7703, !7704, !7705}
!7702 = !DILocalVariable(name: "save", arg: 1, scope: !7693, file: !570, line: 1000, type: !750)
!7703 = !DILocalVariable(name: "load", arg: 2, scope: !7693, file: !570, line: 1001, type: !7696)
!7704 = !DILocalVariable(name: "entries", arg: 3, scope: !7693, file: !570, line: 1002, type: !757)
!7705 = !DILocalVariable(name: "exception_config", scope: !7693, file: !570, line: 1004, type: !7706)
!7706 = !DIDerivedType(tag: DW_TAG_typedef, name: "exception_config_type", file: !551, line: 99, baseType: !7707)
!7707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !551, line: 95, size: 64, elements: !7708)
!7708 = !{!7709, !7710}
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "init_cb", scope: !7707, file: !551, line: 97, baseType: !555, size: 32)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "dump_cb", scope: !7707, file: !551, line: 98, baseType: !555, size: 32, offset: 32)
!7711 = !DILocation(line: 0, scope: !7693)
!7712 = !DILocation(line: 1004, column: 5, scope: !7693)
!7713 = !DILocation(line: 1004, column: 27, scope: !7693)
!7714 = !DILocation(line: 1006, column: 9, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7693, file: !570, line: 1006, column: 9)
!7716 = !DILocation(line: 1006, column: 26, scope: !7715)
!7717 = !DILocation(line: 1006, column: 9, scope: !7693)
!7718 = !DILocation(line: 1011, column: 22, scope: !7693)
!7719 = !DILocation(line: 1012, column: 5, scope: !7693)
!7720 = !DILocation(line: 1013, column: 5, scope: !7693)
!7721 = !DILocation(line: 1014, column: 23, scope: !7693)
!7722 = !DILocation(line: 1016, column: 22, scope: !7693)
!7723 = !DILocation(line: 1016, column: 30, scope: !7693)
!7724 = !DILocation(line: 1017, column: 22, scope: !7693)
!7725 = !DILocation(line: 1017, column: 30, scope: !7693)
!7726 = !DILocation(line: 1018, column: 5, scope: !7693)
!7727 = !DILocation(line: 1021, column: 19, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7693, file: !570, line: 1021, column: 9)
!7729 = !DILocation(line: 1021, column: 16, scope: !7728)
!7730 = !DILocation(line: 1021, column: 9, scope: !7693)
!7731 = !DILocation(line: 1027, column: 9, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7728, file: !570, line: 1026, column: 53)
!7733 = !DILocation(line: 1028, column: 5, scope: !7732)
!7734 = !DILocation(line: 1030, column: 24, scope: !7693)
!7735 = !DILocation(line: 1031, column: 22, scope: !7693)
!7736 = !DILocation(line: 1034, column: 27, scope: !7693)
!7737 = !DILocation(line: 1035, column: 27, scope: !7693)
!7738 = !DILocation(line: 1037, column: 9, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7693, file: !570, line: 1037, column: 9)
!7740 = !DILocation(line: 1037, column: 9, scope: !7693)
!7741 = !DILocation(line: 1039, column: 13, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7743, file: !570, line: 1039, column: 13)
!7743 = distinct !DILexicalBlock(scope: !7739, file: !570, line: 1037, column: 15)
!7744 = !DILocation(line: 1039, column: 34, scope: !7742)
!7745 = !DILocation(line: 1039, column: 13, scope: !7743)
!7746 = !DILocation(line: 1040, column: 13, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7748, file: !570, line: 1040, column: 13)
!7748 = distinct !DILexicalBlock(scope: !7742, file: !570, line: 1039, column: 40)
!7749 = !DILocation(line: 1041, column: 9, scope: !7748)
!7750 = !DILocation(line: 1043, column: 22, scope: !7693)
!7751 = !DILocation(line: 1044, column: 1, scope: !7693)
!7752 = distinct !DISubprogram(name: "syslog_exception_cb", scope: !570, file: !570, line: 513, type: !110, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !2013)
!7753 = !DILocation(line: 518, column: 5, scope: !7752)
!7754 = !DILocation(line: 519, column: 1, scope: !7752)
!7755 = distinct !DISubprogram(name: "syslog_buffer_dump", scope: !570, file: !570, line: 483, type: !110, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7756)
!7756 = !{!7757, !7758, !7759}
!7757 = !DILocalVariable(name: "index", scope: !7755, file: !570, line: 485, type: !38)
!7758 = !DILocalVariable(name: "pHead", scope: !7755, file: !570, line: 486, type: !722)
!7759 = !DILocalVariable(name: "pCurr", scope: !7755, file: !570, line: 486, type: !722)
!7760 = !DILocation(line: 0, scope: !7755)
!7761 = !DILocation(line: 489, column: 5, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7755, file: !570, line: 489, column: 5)
!7763 = !DILocation(line: 491, column: 13, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7765, file: !570, line: 491, column: 13)
!7765 = distinct !DILexicalBlock(scope: !7766, file: !570, line: 489, column: 54)
!7766 = distinct !DILexicalBlock(scope: !7762, file: !570, line: 489, column: 5)
!7767 = !DILocation(line: 491, column: 39, scope: !7764)
!7768 = !DILocation(line: 491, column: 13, scope: !7765)
!7769 = !DILocation(line: 492, column: 50, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7764, file: !570, line: 491, column: 49)
!7771 = !DILocation(line: 492, column: 48, scope: !7770)
!7772 = !DILocation(line: 494, column: 9, scope: !7770)
!7773 = !DILocation(line: 489, column: 50, scope: !7766)
!7774 = !DILocation(line: 489, column: 27, scope: !7766)
!7775 = distinct !{!7775, !7761, !7776}
!7776 = !DILocation(line: 495, column: 5, scope: !7762)
!7777 = !DILocation(line: 498, column: 13, scope: !7755)
!7778 = !DILocation(line: 500, column: 5, scope: !7755)
!7779 = !DILocation(line: 503, column: 5, scope: !7755)
!7780 = !DILocation(line: 505, column: 43, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7755, file: !570, line: 503, column: 19)
!7782 = !DILocation(line: 505, column: 17, scope: !7781)
!7783 = !DILocation(line: 506, column: 25, scope: !7781)
!7784 = !DILocation(line: 507, column: 46, scope: !7781)
!7785 = !DILocation(line: 507, column: 29, scope: !7781)
!7786 = !DILocation(line: 507, column: 9, scope: !7781)
!7787 = distinct !{!7787, !7779, !7788}
!7788 = !DILocation(line: 508, column: 5, scope: !7755)
!7789 = !DILocation(line: 509, column: 1, scope: !7755)
!7790 = distinct !DISubprogram(name: "sort_syslog_buffer", scope: !570, file: !570, line: 338, type: !7791, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7793)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{!722, !722}
!7793 = !{!7794, !7795, !7796, !7797}
!7794 = !DILocalVariable(name: "pList", arg: 1, scope: !7790, file: !570, line: 338, type: !722)
!7795 = !DILocalVariable(name: "pHead", scope: !7790, file: !570, line: 340, type: !722)
!7796 = !DILocalVariable(name: "pCurr", scope: !7790, file: !570, line: 340, type: !722)
!7797 = !DILocalVariable(name: "p", scope: !7790, file: !570, line: 340, type: !722)
!7798 = !DILocation(line: 0, scope: !7790)
!7799 = !DILocation(line: 342, column: 15, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7790, file: !570, line: 342, column: 9)
!7801 = !DILocation(line: 342, column: 23, scope: !7800)
!7802 = !DILocation(line: 342, column: 33, scope: !7800)
!7803 = !DILocation(line: 342, column: 42, scope: !7800)
!7804 = !DILocation(line: 342, column: 9, scope: !7790)
!7805 = !DILocation(line: 348, column: 43, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7790, file: !570, line: 346, column: 27)
!7807 = !DILocation(line: 348, column: 17, scope: !7806)
!7808 = !DILocation(line: 349, column: 20, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7806, file: !570, line: 349, column: 13)
!7810 = !DILocation(line: 349, column: 29, scope: !7809)
!7811 = !DILocation(line: 349, column: 32, scope: !7809)
!7812 = !DILocation(line: 349, column: 48, scope: !7809)
!7813 = !DILocation(line: 349, column: 46, scope: !7809)
!7814 = !DILocation(line: 349, column: 13, scope: !7806)
!7815 = !DILocation(line: 0, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7809, file: !570, line: 353, column: 14)
!7817 = !DILocation(line: 356, column: 23, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7819, file: !570, line: 356, column: 19)
!7819 = distinct !DILexicalBlock(scope: !7816, file: !570, line: 355, column: 30)
!7820 = !DILocation(line: 356, column: 32, scope: !7818)
!7821 = !DILocation(line: 356, column: 38, scope: !7818)
!7822 = !DILocation(line: 357, column: 35, scope: !7818)
!7823 = !DILocation(line: 357, column: 33, scope: !7818)
!7824 = !DILocation(line: 356, column: 19, scope: !7819)
!7825 = distinct !{!7825, !7826, !7827}
!7826 = !DILocation(line: 355, column: 12, scope: !7816)
!7827 = !DILocation(line: 363, column: 12, scope: !7816)
!7828 = !DILocation(line: 358, column: 35, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7818, file: !570, line: 357, column: 76)
!7830 = !DILocation(line: 360, column: 19, scope: !7829)
!7831 = !DILocation(line: 0, scope: !7809)
!7832 = !DILocation(line: 346, column: 18, scope: !7790)
!7833 = !DILocation(line: 346, column: 5, scope: !7790)
!7834 = distinct !{!7834, !7833, !7835}
!7835 = !DILocation(line: 365, column: 5, scope: !7790)
!7836 = !DILocation(line: 367, column: 1, scope: !7790)
!7837 = distinct !DISubprogram(name: "syslog_get_config", scope: !570, file: !570, line: 1215, type: !7838, scopeLine: 1216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7840)
!7838 = !DISubroutineType(types: !7839)
!7839 = !{null, !7700}
!7840 = !{!7841}
!7841 = !DILocalVariable(name: "config", arg: 1, scope: !7837, file: !570, line: 1215, type: !7700)
!7842 = !DILocation(line: 0, scope: !7837)
!7843 = !DILocation(line: 1217, column: 15, scope: !7837)
!7844 = !DILocation(line: 1218, column: 1, scope: !7837)
!7845 = distinct !DISubprogram(name: "syslog_set_filter", scope: !570, file: !570, line: 1271, type: !7846, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7848)
!7846 = !DISubroutineType(types: !7847)
!7847 = !{!103, !701, !701, !701, !103}
!7848 = !{!7849, !7850, !7851, !7852, !7853, !7854, !7855}
!7849 = !DILocalVariable(name: "module_name", arg: 1, scope: !7845, file: !570, line: 1271, type: !701)
!7850 = !DILocalVariable(name: "log_switch_str", arg: 2, scope: !7845, file: !570, line: 1271, type: !701)
!7851 = !DILocalVariable(name: "print_level_str", arg: 3, scope: !7845, file: !570, line: 1271, type: !701)
!7852 = !DILocalVariable(name: "save", arg: 4, scope: !7845, file: !570, line: 1271, type: !103)
!7853 = !DILocalVariable(name: "i", scope: !7845, file: !570, line: 1273, type: !103)
!7854 = !DILocalVariable(name: "log_switch", scope: !7845, file: !570, line: 1274, type: !103)
!7855 = !DILocalVariable(name: "print_level", scope: !7845, file: !570, line: 1275, type: !103)
!7856 = !DILocation(line: 0, scope: !7845)
!7857 = !DILocation(line: 1277, column: 18, scope: !7845)
!7858 = !DILocation(line: 1278, column: 20, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7845, file: !570, line: 1278, column: 9)
!7860 = !DILocation(line: 1278, column: 9, scope: !7845)
!7861 = !DILocation(line: 1282, column: 19, scope: !7845)
!7862 = !DILocation(line: 1283, column: 21, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7845, file: !570, line: 1283, column: 9)
!7864 = !DILocation(line: 1283, column: 9, scope: !7845)
!7865 = !DILocation(line: 1287, column: 9, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7845, file: !570, line: 1287, column: 9)
!7867 = !DILocation(line: 1287, column: 34, scope: !7866)
!7868 = !DILocation(line: 0, scope: !7866)
!7869 = !DILocation(line: 1287, column: 9, scope: !7845)
!7870 = !DILocation(line: 1289, column: 35, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7872, file: !570, line: 1289, column: 13)
!7872 = distinct !DILexicalBlock(scope: !7866, file: !570, line: 1287, column: 40)
!7873 = !DILocation(line: 1289, column: 13, scope: !7872)
!7874 = !DILocation(line: 1294, column: 16, scope: !7872)
!7875 = !DILocation(line: 1294, column: 9, scope: !7872)
!7876 = !DILocation(line: 1295, column: 39, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7872, file: !570, line: 1294, column: 42)
!7878 = !DILocation(line: 1295, column: 50, scope: !7877)
!7879 = !DILocation(line: 1296, column: 27, scope: !7877)
!7880 = !DILocation(line: 1296, column: 13, scope: !7877)
!7881 = !DILocation(line: 1296, column: 39, scope: !7877)
!7882 = !DILocation(line: 1296, column: 51, scope: !7877)
!7883 = !DILocation(line: 1297, column: 14, scope: !7877)
!7884 = distinct !{!7884, !7875, !7885}
!7885 = !DILocation(line: 1298, column: 9, scope: !7872)
!7886 = !DILocation(line: 1302, column: 13, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7866, file: !570, line: 1300, column: 12)
!7888 = !DILocation(line: 1304, column: 15, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7887, file: !570, line: 1304, column: 13)
!7890 = !DILocation(line: 1304, column: 13, scope: !7887)
!7891 = !DILocation(line: 1307, column: 23, scope: !7887)
!7892 = !DILocation(line: 1307, column: 9, scope: !7887)
!7893 = !DILocation(line: 1307, column: 35, scope: !7887)
!7894 = !DILocation(line: 1307, column: 46, scope: !7887)
!7895 = !DILocation(line: 1308, column: 23, scope: !7887)
!7896 = !DILocation(line: 1308, column: 9, scope: !7887)
!7897 = !DILocation(line: 1308, column: 35, scope: !7887)
!7898 = !DILocation(line: 1308, column: 47, scope: !7887)
!7899 = !DILocation(line: 1312, column: 9, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7845, file: !570, line: 1312, column: 9)
!7901 = !DILocation(line: 1312, column: 9, scope: !7845)
!7902 = !DILocation(line: 1313, column: 23, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7900, file: !570, line: 1312, column: 15)
!7904 = !DILocation(line: 1313, column: 9, scope: !7903)
!7905 = !DILocation(line: 1314, column: 5, scope: !7903)
!7906 = !DILocation(line: 1317, column: 1, scope: !7845)
!7907 = distinct !DISubprogram(name: "str_to_log_switch", scope: !570, file: !570, line: 1484, type: !7908, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7910)
!7908 = !DISubroutineType(types: !7909)
!7909 = !{!103, !104}
!7910 = !{!7911, !7912}
!7911 = !DILocalVariable(name: "log_switch_str", arg: 1, scope: !7907, file: !570, line: 1484, type: !104)
!7912 = !DILocalVariable(name: "i", scope: !7907, file: !570, line: 1486, type: !103)
!7913 = !DILocation(line: 0, scope: !7907)
!7914 = !DILocation(line: 1488, column: 5, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7907, file: !570, line: 1488, column: 5)
!7916 = !DILocation(line: 1489, column: 37, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7918, file: !570, line: 1489, column: 13)
!7918 = distinct !DILexicalBlock(scope: !7919, file: !570, line: 1488, column: 69)
!7919 = distinct !DILexicalBlock(scope: !7915, file: !570, line: 1488, column: 5)
!7920 = !DILocation(line: 1489, column: 14, scope: !7917)
!7921 = !DILocation(line: 1489, column: 13, scope: !7918)
!7922 = !DILocation(line: 1494, column: 1, scope: !7907)
!7923 = distinct !DISubprogram(name: "str_to_print_level", scope: !570, file: !570, line: 1496, type: !7908, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7924)
!7924 = !{!7925, !7926}
!7925 = !DILocalVariable(name: "print_level_str", arg: 1, scope: !7923, file: !570, line: 1496, type: !104)
!7926 = !DILocalVariable(name: "i", scope: !7923, file: !570, line: 1498, type: !103)
!7927 = !DILocation(line: 0, scope: !7923)
!7928 = !DILocation(line: 1500, column: 5, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7923, file: !570, line: 1500, column: 5)
!7930 = !DILocation(line: 1501, column: 38, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !570, line: 1501, column: 13)
!7932 = distinct !DILexicalBlock(scope: !7933, file: !570, line: 1500, column: 70)
!7933 = distinct !DILexicalBlock(scope: !7929, file: !570, line: 1500, column: 5)
!7934 = !DILocation(line: 1501, column: 14, scope: !7931)
!7935 = !DILocation(line: 1501, column: 13, scope: !7932)
!7936 = !DILocation(line: 1500, column: 66, scope: !7933)
!7937 = !DILocation(line: 1500, column: 19, scope: !7933)
!7938 = distinct !{!7938, !7928, !7939}
!7939 = !DILocation(line: 1504, column: 5, scope: !7929)
!7940 = !DILocation(line: 1506, column: 1, scope: !7923)
!7941 = distinct !DISubprogram(name: "syslog_get_index_from_module_name", scope: !570, file: !570, line: 1252, type: !7942, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7944)
!7942 = !DISubroutineType(types: !7943)
!7943 = !{!103, !757, !104}
!7944 = !{!7945, !7946, !7947}
!7945 = !DILocalVariable(name: "filters", arg: 1, scope: !7941, file: !570, line: 1252, type: !757)
!7946 = !DILocalVariable(name: "module_name", arg: 2, scope: !7941, file: !570, line: 1252, type: !104)
!7947 = !DILocalVariable(name: "i", scope: !7941, file: !570, line: 1254, type: !103)
!7948 = !DILocation(line: 0, scope: !7941)
!7949 = !DILocation(line: 1256, column: 17, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7941, file: !570, line: 1256, column: 9)
!7951 = !DILocation(line: 1256, column: 9, scope: !7941)
!7952 = !DILocation(line: 1260, column: 12, scope: !7941)
!7953 = !DILocation(line: 1260, column: 5, scope: !7941)
!7954 = !DILocation(line: 1261, column: 33, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7956, file: !570, line: 1261, column: 13)
!7956 = distinct !DILexicalBlock(scope: !7941, file: !570, line: 1260, column: 24)
!7957 = !DILocation(line: 1261, column: 14, scope: !7955)
!7958 = !DILocation(line: 1261, column: 13, scope: !7956)
!7959 = !DILocation(line: 1264, column: 10, scope: !7956)
!7960 = distinct !{!7960, !7953, !7961}
!7961 = !DILocation(line: 1265, column: 5, scope: !7941)
!7962 = !DILocation(line: 1269, column: 1, scope: !7941)
!7963 = distinct !DISubprogram(name: "syslog_at_set_filter", scope: !570, file: !570, line: 1319, type: !7964, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !7966)
!7964 = !DISubroutineType(types: !7965)
!7965 = !{!103, !701, !103, !103, !103}
!7966 = !{!7967, !7968, !7969, !7970, !7971}
!7967 = !DILocalVariable(name: "module_name", arg: 1, scope: !7963, file: !570, line: 1319, type: !701)
!7968 = !DILocalVariable(name: "log_switch", arg: 2, scope: !7963, file: !570, line: 1319, type: !103)
!7969 = !DILocalVariable(name: "print_level", arg: 3, scope: !7963, file: !570, line: 1319, type: !103)
!7970 = !DILocalVariable(name: "save", arg: 4, scope: !7963, file: !570, line: 1319, type: !103)
!7971 = !DILocalVariable(name: "i", scope: !7963, file: !570, line: 1321, type: !103)
!7972 = !DILocation(line: 0, scope: !7963)
!7973 = !DILocation(line: 1323, column: 9, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7963, file: !570, line: 1323, column: 9)
!7975 = !DILocation(line: 1323, column: 34, scope: !7974)
!7976 = !DILocation(line: 0, scope: !7974)
!7977 = !DILocation(line: 1323, column: 9, scope: !7963)
!7978 = !DILocation(line: 1325, column: 35, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7980, file: !570, line: 1325, column: 13)
!7980 = distinct !DILexicalBlock(scope: !7974, file: !570, line: 1323, column: 40)
!7981 = !DILocation(line: 1325, column: 13, scope: !7980)
!7982 = !DILocation(line: 1330, column: 16, scope: !7980)
!7983 = !DILocation(line: 1330, column: 9, scope: !7980)
!7984 = !DILocation(line: 1331, column: 39, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7980, file: !570, line: 1330, column: 42)
!7986 = !DILocation(line: 1331, column: 50, scope: !7985)
!7987 = !DILocation(line: 1332, column: 27, scope: !7985)
!7988 = !DILocation(line: 1332, column: 13, scope: !7985)
!7989 = !DILocation(line: 1332, column: 39, scope: !7985)
!7990 = !DILocation(line: 1332, column: 51, scope: !7985)
!7991 = !DILocation(line: 1333, column: 14, scope: !7985)
!7992 = distinct !{!7992, !7983, !7993}
!7993 = !DILocation(line: 1334, column: 9, scope: !7980)
!7994 = !DILocation(line: 1338, column: 13, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7974, file: !570, line: 1336, column: 12)
!7996 = !DILocation(line: 1340, column: 15, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7995, file: !570, line: 1340, column: 13)
!7998 = !DILocation(line: 1340, column: 13, scope: !7995)
!7999 = !DILocation(line: 1343, column: 23, scope: !7995)
!8000 = !DILocation(line: 1343, column: 9, scope: !7995)
!8001 = !DILocation(line: 1343, column: 35, scope: !7995)
!8002 = !DILocation(line: 1343, column: 46, scope: !7995)
!8003 = !DILocation(line: 1344, column: 23, scope: !7995)
!8004 = !DILocation(line: 1344, column: 9, scope: !7995)
!8005 = !DILocation(line: 1344, column: 35, scope: !7995)
!8006 = !DILocation(line: 1344, column: 47, scope: !7995)
!8007 = !DILocation(line: 1348, column: 9, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !7963, file: !570, line: 1348, column: 9)
!8009 = !DILocation(line: 1348, column: 9, scope: !7963)
!8010 = !DILocation(line: 1349, column: 23, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8008, file: !570, line: 1348, column: 15)
!8012 = !DILocation(line: 1349, column: 9, scope: !8011)
!8013 = !DILocation(line: 1350, column: 5, scope: !8011)
!8014 = !DILocation(line: 1353, column: 1, scope: !7963)
!8015 = distinct !DISubprogram(name: "syslog_convert_filter_str2val", scope: !570, file: !570, line: 1358, type: !8016, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !8018)
!8016 = !DISubroutineType(types: !8017)
!8017 = !{!103, !757, !701}
!8018 = !{!8019, !8020, !8021, !8022, !8023, !8024, !8025, !8026, !8027, !8028, !8029}
!8019 = !DILocalVariable(name: "filters", arg: 1, scope: !8015, file: !570, line: 1358, type: !757)
!8020 = !DILocalVariable(name: "buff", arg: 2, scope: !8015, file: !570, line: 1358, type: !701)
!8021 = !DILocalVariable(name: "pos", scope: !8015, file: !570, line: 1360, type: !103)
!8022 = !DILocalVariable(name: "i", scope: !8015, file: !570, line: 1361, type: !103)
!8023 = !DILocalVariable(name: "module_name", scope: !8015, file: !570, line: 1362, type: !701)
!8024 = !DILocalVariable(name: "log_switch_str", scope: !8015, file: !570, line: 1363, type: !701)
!8025 = !DILocalVariable(name: "print_level_str", scope: !8015, file: !570, line: 1364, type: !701)
!8026 = !DILocalVariable(name: "done", scope: !8015, file: !570, line: 1365, type: !536)
!8027 = !DILocalVariable(name: "log_switch", scope: !8015, file: !570, line: 1366, type: !38)
!8028 = !DILocalVariable(name: "print_level", scope: !8015, file: !570, line: 1367, type: !38)
!8029 = !DILocalVariable(name: "type", scope: !8015, file: !570, line: 1368, type: !96)
!8030 = !DILocation(line: 0, scope: !8015)
!8031 = !DILocation(line: 1362, column: 5, scope: !8015)
!8032 = !DILocation(line: 1363, column: 5, scope: !8015)
!8033 = !DILocation(line: 1364, column: 5, scope: !8015)
!8034 = !DILocation(line: 1368, column: 5, scope: !8015)
!8035 = !DILocation(line: 1370, column: 5, scope: !8015)
!8036 = !DILocation(line: 1376, column: 34, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8015, file: !570, line: 1370, column: 19)
!8038 = !DILocation(line: 1376, column: 13, scope: !8037)
!8039 = !DILocation(line: 1377, column: 15, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8037, file: !570, line: 1377, column: 13)
!8041 = !DILocation(line: 1377, column: 20, scope: !8040)
!8042 = !DILocation(line: 1377, column: 32, scope: !8040)
!8043 = !DILocation(line: 1377, column: 23, scope: !8040)
!8044 = !DILocation(line: 1377, column: 37, scope: !8040)
!8045 = !DILocation(line: 1377, column: 13, scope: !8037)
!8046 = !DILocation(line: 1382, column: 24, scope: !8037)
!8047 = !DILocation(line: 1383, column: 23, scope: !8037)
!8048 = !DILocation(line: 1389, column: 34, scope: !8037)
!8049 = !DILocation(line: 1389, column: 13, scope: !8037)
!8050 = !DILocation(line: 1390, column: 15, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8037, file: !570, line: 1390, column: 13)
!8052 = !DILocation(line: 1390, column: 13, scope: !8037)
!8053 = !DILocation(line: 1395, column: 24, scope: !8037)
!8054 = !DILocation(line: 1395, column: 17, scope: !8037)
!8055 = !DILocation(line: 1397, column: 24, scope: !8037)
!8056 = !DILocation(line: 1398, column: 23, scope: !8037)
!8057 = !DILocation(line: 1404, column: 34, scope: !8037)
!8058 = !DILocation(line: 1404, column: 13, scope: !8037)
!8059 = !DILocation(line: 1405, column: 15, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8037, file: !570, line: 1405, column: 13)
!8061 = !DILocation(line: 1405, column: 13, scope: !8037)
!8062 = !DILocation(line: 1410, column: 24, scope: !8037)
!8063 = !DILocation(line: 1410, column: 17, scope: !8037)
!8064 = !DILocation(line: 1410, column: 31, scope: !8037)
!8065 = !DILocation(line: 1412, column: 24, scope: !8037)
!8066 = !DILocation(line: 1413, column: 23, scope: !8037)
!8067 = !DILocation(line: 1417, column: 56, scope: !8037)
!8068 = !DILocation(line: 1417, column: 13, scope: !8037)
!8069 = !DILocation(line: 1420, column: 15, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8037, file: !570, line: 1420, column: 13)
!8071 = !DILocation(line: 1420, column: 13, scope: !8037)
!8072 = !DILocation(line: 1424, column: 26, scope: !8037)
!8073 = !DILocation(line: 1424, column: 22, scope: !8037)
!8074 = !DILocation(line: 1427, column: 13, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8037, file: !570, line: 1427, column: 13)
!8076 = !DILocation(line: 1427, column: 18, scope: !8075)
!8077 = !DILocation(line: 1427, column: 13, scope: !8037)
!8078 = !DILocation(line: 1434, column: 27, scope: !8037)
!8079 = !DILocation(line: 1434, column: 23, scope: !8037)
!8080 = !DILocation(line: 1437, column: 13, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8037, file: !570, line: 1437, column: 13)
!8082 = !DILocation(line: 1437, column: 18, scope: !8081)
!8083 = !DILocation(line: 1437, column: 13, scope: !8037)
!8084 = !DILocation(line: 1432, column: 22, scope: !8037)
!8085 = !DILocation(line: 1442, column: 23, scope: !8037)
!8086 = !DILocation(line: 1444, column: 9, scope: !8037)
!8087 = !DILocation(line: 1444, column: 21, scope: !8037)
!8088 = !DILocation(line: 1444, column: 32, scope: !8037)
!8089 = !DILocation(line: 1445, column: 9, scope: !8037)
!8090 = !DILocation(line: 1445, column: 21, scope: !8037)
!8091 = !DILocation(line: 1445, column: 33, scope: !8037)
!8092 = distinct !{!8092, !8035, !8093}
!8093 = !DILocation(line: 1446, column: 5, scope: !8015)
!8094 = !DILocation(line: 1449, column: 1, scope: !8015)
!8095 = distinct !DISubprogram(name: "syslog_get_a_string", scope: !570, file: !570, line: 1227, type: !8096, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !8099)
!8096 = !DISubroutineType(types: !8097)
!8097 = !{!103, !104, !8098}
!8098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 32)
!8099 = !{!8100, !8101, !8102}
!8100 = !DILocalVariable(name: "p", arg: 1, scope: !8095, file: !570, line: 1227, type: !104)
!8101 = !DILocalVariable(name: "pp", arg: 2, scope: !8095, file: !570, line: 1227, type: !8098)
!8102 = !DILocalVariable(name: "start", scope: !8095, file: !570, line: 1229, type: !104)
!8103 = !DILocation(line: 0, scope: !8095)
!8104 = !DILocation(line: 1231, column: 5, scope: !8095)
!8105 = !DILocation(line: 1231, column: 12, scope: !8095)
!8106 = !DILocation(line: 1232, column: 10, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8095, file: !570, line: 1231, column: 23)
!8108 = distinct !{!8108, !8104, !8109}
!8109 = !DILocation(line: 1233, column: 5, scope: !8095)
!8110 = !DILocation(line: 1239, column: 13, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !570, line: 1238, column: 21)
!8112 = distinct !DILexicalBlock(scope: !8095, file: !570, line: 1238, column: 9)
!8113 = !DILocation(line: 1240, column: 9, scope: !8111)
!8114 = !DILocation(line: 1243, column: 9, scope: !8095)
!8115 = !DILocation(line: 1245, column: 5, scope: !8095)
!8116 = !DILocation(line: 1245, column: 12, scope: !8095)
!8117 = !DILocation(line: 1245, column: 22, scope: !8095)
!8118 = !DILocation(line: 1246, column: 10, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8095, file: !570, line: 1245, column: 37)
!8120 = distinct !{!8120, !8115, !8121}
!8121 = !DILocation(line: 1247, column: 5, scope: !8095)
!8122 = !DILocation(line: 1249, column: 15, scope: !8095)
!8123 = !DILocation(line: 1249, column: 5, scope: !8095)
!8124 = !DILocation(line: 1250, column: 1, scope: !8095)
!8125 = distinct !DISubprogram(name: "syslog_convert_filter_val2str", scope: !570, file: !570, line: 1451, type: !8126, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !8131)
!8126 = !DISubroutineType(types: !8127)
!8127 = !{!103, !8128, !701}
!8128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8129, size: 32)
!8129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8130, size: 32)
!8130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !703)
!8131 = !{!8132, !8133, !8134, !8135, !8136}
!8132 = !DILocalVariable(name: "filters", arg: 1, scope: !8125, file: !570, line: 1451, type: !8128)
!8133 = !DILocalVariable(name: "buff", arg: 2, scope: !8125, file: !570, line: 1451, type: !701)
!8134 = !DILocalVariable(name: "i", scope: !8125, file: !570, line: 1453, type: !103)
!8135 = !DILocalVariable(name: "pos", scope: !8125, file: !570, line: 1454, type: !103)
!8136 = !DILocalVariable(name: "n", scope: !8125, file: !570, line: 1455, type: !103)
!8137 = !DILocation(line: 0, scope: !8125)
!8138 = !DILocation(line: 1457, column: 20, scope: !8125)
!8139 = !DILocation(line: 1457, column: 23, scope: !8125)
!8140 = !DILocation(line: 1457, column: 5, scope: !8125)
!8141 = !DILocation(line: 1458, column: 23, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8125, file: !570, line: 1457, column: 35)
!8143 = !DILocation(line: 1458, column: 52, scope: !8142)
!8144 = !DILocation(line: 1459, column: 24, scope: !8142)
!8145 = !DILocation(line: 1459, column: 21, scope: !8142)
!8146 = !DILocation(line: 1460, column: 33, scope: !8142)
!8147 = !DILocation(line: 1461, column: 33, scope: !8142)
!8148 = !DILocation(line: 1462, column: 33, scope: !8142)
!8149 = !DILocation(line: 1458, column: 13, scope: !8142)
!8150 = !DILocation(line: 1463, column: 13, scope: !8142)
!8151 = !DILocation(line: 1464, column: 10, scope: !8142)
!8152 = distinct !{!8152, !8140, !8153}
!8153 = !DILocation(line: 1465, column: 5, scope: !8125)
!8154 = !DILocation(line: 1467, column: 5, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8125, file: !570, line: 1467, column: 5)
!8156 = !DILocation(line: 1467, column: 5, scope: !8125)
!8157 = !DILocation(line: 1467, column: 5, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8155, file: !570, line: 1467, column: 5)
!8159 = !DILocation(line: 1469, column: 5, scope: !8125)
!8160 = distinct !DISubprogram(name: "log_switch_to_str", scope: !570, file: !570, line: 1472, type: !8161, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !8163)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{!104, !708}
!8163 = !{!8164}
!8164 = !DILocalVariable(name: "log_switch", arg: 1, scope: !8160, file: !570, line: 1472, type: !708)
!8165 = !DILocation(line: 0, scope: !8160)
!8166 = !DILocation(line: 1474, column: 5, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8160, file: !570, line: 1474, column: 5)
!8168 = !DILocation(line: 1474, column: 5, scope: !8160)
!8169 = !DILocation(line: 1474, column: 5, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8167, file: !570, line: 1474, column: 5)
!8171 = !DILocation(line: 1475, column: 13, scope: !8160)
!8172 = !DILocation(line: 1475, column: 5, scope: !8160)
!8173 = distinct !DISubprogram(name: "print_level_to_str", scope: !570, file: !570, line: 1478, type: !8174, scopeLine: 1479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !8176)
!8174 = !DISubroutineType(types: !8175)
!8175 = !{!104, !674}
!8176 = !{!8177}
!8177 = !DILocalVariable(name: "print_level", arg: 1, scope: !8173, file: !570, line: 1478, type: !674)
!8178 = !DILocation(line: 0, scope: !8173)
!8179 = !DILocation(line: 1480, column: 5, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8173, file: !570, line: 1480, column: 5)
!8181 = !DILocation(line: 1480, column: 5, scope: !8173)
!8182 = !DILocation(line: 1480, column: 5, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8180, file: !570, line: 1480, column: 5)
!8184 = !DILocation(line: 1481, column: 13, scope: !8173)
!8185 = !DILocation(line: 1481, column: 5, scope: !8173)
!8186 = distinct !DISubprogram(name: "__wrap_printf", scope: !570, file: !570, line: 1508, type: !8187, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !569, retainedNodes: !8189)
!8187 = !DISubroutineType(types: !8188)
!8188 = !{!103, !104, null}
!8189 = !{!8190, !8191, !8192, !8193}
!8190 = !DILocalVariable(name: "format", arg: 1, scope: !8186, file: !570, line: 1508, type: !104)
!8191 = !DILocalVariable(name: "ap", scope: !8186, file: !570, line: 1510, type: !7109)
!8192 = !DILocalVariable(name: "ret", scope: !8186, file: !570, line: 1511, type: !103)
!8193 = !DILocalVariable(name: "uxSavedInterruptStatus", scope: !8186, file: !570, line: 1512, type: !27)
!8194 = !DILocation(line: 0, scope: !8186)
!8195 = !DILocation(line: 1510, column: 5, scope: !8186)
!8196 = !DILocation(line: 1510, column: 13, scope: !8186)
!8197 = !DILocation(line: 1514, column: 11, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8186, file: !570, line: 1514, column: 10)
!8199 = !DILocation(line: 1514, column: 10, scope: !8186)
!8200 = !DILocation(line: 231, column: 2, scope: !7187, inlinedAt: !8201)
!8201 = distinct !DILocation(line: 1518, column: 30, scope: !8186)
!8202 = !DILocation(line: 0, scope: !7187, inlinedAt: !8201)
!8203 = !DILocation(line: 1520, column: 5, scope: !8186)
!8204 = !DILocation(line: 1521, column: 11, scope: !8186)
!8205 = !DILocation(line: 1522, column: 5, scope: !8186)
!8206 = !DILocation(line: 0, scope: !7209, inlinedAt: !8207)
!8207 = distinct !DILocation(line: 1524, column: 5, scope: !8186)
!8208 = !DILocation(line: 249, column: 2, scope: !7209, inlinedAt: !8207)
!8209 = !DILocation(line: 1526, column: 5, scope: !8186)
!8210 = !DILocation(line: 1527, column: 1, scope: !8186)
!8211 = distinct !DISubprogram(name: "gpt_get_current_time", scope: !779, file: !779, line: 86, type: !2643, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8212)
!8212 = !{!8213, !8214}
!8213 = !DILocalVariable(name: "counter", scope: !8211, file: !779, line: 88, type: !38)
!8214 = !DILocalVariable(name: "ret", scope: !8211, file: !779, line: 89, type: !8215)
!8215 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !796, line: 393, baseType: !795)
!8216 = !DILocation(line: 88, column: 5, scope: !8211)
!8217 = !DILocation(line: 0, scope: !8211)
!8218 = !DILocation(line: 88, column: 14, scope: !8211)
!8219 = !DILocation(line: 90, column: 11, scope: !8211)
!8220 = !DILocation(line: 91, column: 13, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8211, file: !779, line: 91, column: 9)
!8222 = !DILocation(line: 91, column: 9, scope: !8211)
!8223 = !DILocation(line: 92, column: 9, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8221, file: !779, line: 91, column: 35)
!8225 = !DILocation(line: 94, column: 12, scope: !8211)
!8226 = !DILocation(line: 95, column: 1, scope: !8211)
!8227 = !DILocation(line: 94, column: 5, scope: !8211)
!8228 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !779, file: !779, line: 97, type: !110, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !2013)
!8229 = !DILocation(line: 99, column: 20, scope: !8228)
!8230 = !DILocation(line: 100, column: 1, scope: !8228)
!8231 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !779, file: !779, line: 101, type: !110, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !2013)
!8232 = !DILocation(line: 103, column: 20, scope: !8231)
!8233 = !DILocation(line: 104, column: 1, scope: !8231)
!8234 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !779, file: !779, line: 105, type: !110, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !2013)
!8235 = !DILocation(line: 107, column: 25, scope: !8234)
!8236 = !DILocation(line: 108, column: 1, scope: !8234)
!8237 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !779, file: !779, line: 109, type: !110, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !2013)
!8238 = !DILocation(line: 111, column: 25, scope: !8237)
!8239 = !DILocation(line: 112, column: 1, scope: !8237)
!8240 = distinct !DISubprogram(name: "get_sf_lock", scope: !779, file: !779, line: 114, type: !8241, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8243)
!8241 = !DISubroutineType(types: !8242)
!8242 = !{!1233}
!8243 = !{!8244}
!8244 = !DILocalVariable(name: "savedMask", scope: !8240, file: !779, line: 116, type: !38)
!8245 = !DILocation(line: 117, column: 17, scope: !8240)
!8246 = !DILocation(line: 0, scope: !8240)
!8247 = !DILocation(line: 118, column: 9, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8240, file: !779, line: 118, column: 9)
!8249 = !DILocation(line: 118, column: 9, scope: !8240)
!8250 = !DILocation(line: 119, column: 17, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8248, file: !779, line: 118, column: 24)
!8252 = !DILocation(line: 121, column: 9, scope: !8251)
!8253 = !DILocation(line: 0, scope: !8248)
!8254 = !DILocation(line: 130, column: 1, scope: !8240)
!8255 = distinct !DISubprogram(name: "free_sf_lock", scope: !779, file: !779, line: 132, type: !110, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8256)
!8256 = !{!8257}
!8257 = !DILocalVariable(name: "savedMask", scope: !8255, file: !779, line: 134, type: !38)
!8258 = !DILocation(line: 135, column: 17, scope: !8255)
!8259 = !DILocation(line: 0, scope: !8255)
!8260 = !DILocation(line: 136, column: 9, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8255, file: !779, line: 136, column: 9)
!8262 = !DILocation(line: 136, column: 9, scope: !8255)
!8263 = !DILocation(line: 137, column: 17, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8261, file: !779, line: 136, column: 24)
!8265 = !DILocation(line: 138, column: 9, scope: !8264)
!8266 = !DILocation(line: 143, column: 1, scope: !8255)
!8267 = !DILocation(line: 140, column: 9, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8261, file: !779, line: 139, column: 12)
!8269 = !DILocation(line: 141, column: 9, scope: !8268)
!8270 = distinct !DISubprogram(name: "retrieve_sf_lock", scope: !779, file: !779, line: 145, type: !110, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8271)
!8271 = !{!8272}
!8272 = !DILocalVariable(name: "Result", scope: !8270, file: !779, line: 147, type: !1233)
!8273 = !DILocation(line: 148, column: 5, scope: !8270)
!8274 = !DILocation(line: 149, column: 18, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8270, file: !779, line: 148, column: 8)
!8276 = !DILocation(line: 0, scope: !8270)
!8277 = !DILocation(line: 150, column: 21, scope: !8270)
!8278 = !DILocation(line: 150, column: 5, scope: !8275)
!8279 = distinct !{!8279, !8273, !8280}
!8280 = !DILocation(line: 150, column: 25, scope: !8270)
!8281 = !DILocation(line: 151, column: 1, scope: !8270)
!8282 = distinct !DISubprogram(name: "release_sf_lock", scope: !779, file: !779, line: 158, type: !110, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !2013)
!8283 = !DILocation(line: 160, column: 5, scope: !8282)
!8284 = !DILocation(line: 161, column: 1, scope: !8282)
!8285 = distinct !DISubprogram(name: "flash_sfc_config", scope: !779, file: !779, line: 186, type: !8286, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8288)
!8286 = !DISubroutineType(types: !8287)
!8287 = !{!1233, !96}
!8288 = !{!8289, !8290}
!8289 = !DILocalVariable(name: "mode", arg: 1, scope: !8285, file: !779, line: 186, type: !96)
!8290 = !DILocalVariable(name: "ret", scope: !8285, file: !779, line: 188, type: !8291)
!8291 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT32", file: !842, line: 56, baseType: !103)
!8292 = !DILocation(line: 0, scope: !8285)
!8293 = !DILocation(line: 189, column: 5, scope: !8285)
!8294 = !DILocation(line: 190, column: 5, scope: !8285)
!8295 = !DILocation(line: 191, column: 9, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8285, file: !779, line: 191, column: 9)
!8297 = !DILocation(line: 191, column: 35, scope: !8296)
!8298 = !DILocation(line: 191, column: 9, scope: !8285)
!8299 = !DILocation(line: 193, column: 26, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8296, file: !779, line: 191, column: 44)
!8301 = !DILocation(line: 194, column: 5, scope: !8300)
!8302 = !DILocation(line: 195, column: 5, scope: !8285)
!8303 = !DILocation(line: 197, column: 5, scope: !8285)
!8304 = distinct !DISubprogram(name: "sfc_pad_config", scope: !779, file: !779, line: 163, type: !110, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8305)
!8305 = !{!8306}
!8306 = !DILocalVariable(name: "pad_io_setting", scope: !8304, file: !779, line: 173, type: !38)
!8307 = !DILocation(line: 0, scope: !8304)
!8308 = !DILocation(line: 181, column: 22, scope: !8304)
!8309 = !DILocation(line: 182, column: 20, scope: !8304)
!8310 = !DILocation(line: 183, column: 39, scope: !8304)
!8311 = !DILocation(line: 185, column: 1, scope: !8304)
!8312 = distinct !DISubprogram(name: "hal_flash_direct_read", scope: !779, file: !779, line: 200, type: !8313, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8315)
!8313 = !DISubroutineType(types: !8314)
!8314 = !{null, !30, !95, !38}
!8315 = !{!8316, !8317, !8318}
!8316 = !DILocalVariable(name: "absolute_address", arg: 1, scope: !8312, file: !779, line: 200, type: !30)
!8317 = !DILocalVariable(name: "buffer", arg: 2, scope: !8312, file: !779, line: 200, type: !95)
!8318 = !DILocalVariable(name: "length", arg: 3, scope: !8312, file: !779, line: 200, type: !38)
!8319 = !DILocation(line: 0, scope: !8312)
!8320 = !DILocation(line: 202, column: 5, scope: !8312)
!8321 = !DILocation(line: 203, column: 5, scope: !8312)
!8322 = !DILocation(line: 204, column: 5, scope: !8312)
!8323 = !DILocation(line: 205, column: 1, scope: !8312)
!8324 = distinct !DISubprogram(name: "flash_sfc_read", scope: !779, file: !779, line: 207, type: !8325, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8327)
!8325 = !DISubroutineType(types: !8326)
!8326 = !{!1233, !38, !38, !95}
!8327 = !{!8328, !8329, !8330, !8331, !8332, !8333}
!8328 = !DILocalVariable(name: "address", arg: 1, scope: !8324, file: !779, line: 207, type: !38)
!8329 = !DILocalVariable(name: "length", arg: 2, scope: !8324, file: !779, line: 207, type: !38)
!8330 = !DILocalVariable(name: "buffer", arg: 3, scope: !8324, file: !779, line: 207, type: !95)
!8331 = !DILocalVariable(name: "ret", scope: !8324, file: !779, line: 209, type: !8291)
!8332 = !DILocalVariable(name: "u4Redidual", scope: !8324, file: !779, line: 210, type: !911)
!8333 = !DILocalVariable(name: "u4ReadLen", scope: !8324, file: !779, line: 211, type: !911)
!8334 = !DILocation(line: 0, scope: !8324)
!8335 = !DILocation(line: 213, column: 5, scope: !8324)
!8336 = !DILocation(line: 214, column: 31, scope: !8324)
!8337 = !DILocation(line: 214, column: 5, scope: !8324)
!8338 = !DILocation(line: 216, column: 31, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !779, line: 216, column: 13)
!8340 = distinct !DILexicalBlock(scope: !8324, file: !779, line: 214, column: 46)
!8341 = !DILocation(line: 216, column: 13, scope: !8340)
!8342 = !DILocation(line: 217, column: 13, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8339, file: !779, line: 216, column: 48)
!8344 = !DILocation(line: 218, column: 9, scope: !8343)
!8345 = !DILocation(line: 219, column: 13, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8347, file: !779, line: 218, column: 55)
!8347 = distinct !DILexicalBlock(scope: !8339, file: !779, line: 218, column: 20)
!8348 = !DILocation(line: 220, column: 9, scope: !8346)
!8349 = !DILocation(line: 222, column: 25, scope: !8340)
!8350 = !DILocation(line: 223, column: 27, scope: !8340)
!8351 = !DILocation(line: 224, column: 33, scope: !8340)
!8352 = distinct !{!8352, !8337, !8353}
!8353 = !DILocation(line: 225, column: 5, scope: !8324)
!8354 = !DILocation(line: 227, column: 27, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8324, file: !779, line: 227, column: 9)
!8356 = !DILocation(line: 227, column: 9, scope: !8324)
!8357 = !DILocation(line: 228, column: 9, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8355, file: !779, line: 227, column: 44)
!8359 = !DILocation(line: 229, column: 5, scope: !8358)
!8360 = !DILocation(line: 230, column: 9, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8362, file: !779, line: 229, column: 51)
!8362 = distinct !DILexicalBlock(scope: !8355, file: !779, line: 229, column: 16)
!8363 = !DILocation(line: 231, column: 5, scope: !8361)
!8364 = !DILocation(line: 232, column: 22, scope: !8324)
!8365 = !DILocation(line: 233, column: 5, scope: !8324)
!8366 = !DILocation(line: 234, column: 5, scope: !8324)
!8367 = distinct !DISubprogram(name: "flash_sfc_write", scope: !779, file: !779, line: 238, type: !8368, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8370)
!8368 = !DISubroutineType(types: !8369)
!8369 = !{!1233, !38, !38, !3267}
!8370 = !{!8371, !8372, !8373, !8374}
!8371 = !DILocalVariable(name: "address", arg: 1, scope: !8367, file: !779, line: 238, type: !38)
!8372 = !DILocalVariable(name: "length", arg: 2, scope: !8367, file: !779, line: 238, type: !38)
!8373 = !DILocalVariable(name: "buffer", arg: 3, scope: !8367, file: !779, line: 238, type: !3267)
!8374 = !DILocalVariable(name: "ret", scope: !8367, file: !779, line: 240, type: !8291)
!8375 = !DILocation(line: 0, scope: !8367)
!8376 = !DILocation(line: 242, column: 5, scope: !8367)
!8377 = !DILocation(line: 244, column: 5, scope: !8367)
!8378 = !DILocation(line: 245, column: 5, scope: !8367)
!8379 = !DILocation(line: 247, column: 11, scope: !8367)
!8380 = !DILocation(line: 248, column: 22, scope: !8367)
!8381 = !DILocation(line: 250, column: 5, scope: !8367)
!8382 = !DILocation(line: 252, column: 5, scope: !8367)
!8383 = !DILocation(line: 253, column: 5, scope: !8367)
!8384 = distinct !DISubprogram(name: "flash_sfc_erase", scope: !779, file: !779, line: 256, type: !8385, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8387)
!8385 = !DISubroutineType(types: !8386)
!8386 = !{!1233, !38, !38}
!8387 = !{!8388, !8389, !8390}
!8388 = !DILocalVariable(name: "address", arg: 1, scope: !8384, file: !779, line: 256, type: !38)
!8389 = !DILocalVariable(name: "type", arg: 2, scope: !8384, file: !779, line: 256, type: !38)
!8390 = !DILocalVariable(name: "ret", scope: !8384, file: !779, line: 258, type: !8291)
!8391 = !DILocation(line: 0, scope: !8384)
!8392 = !DILocation(line: 259, column: 5, scope: !8384)
!8393 = !DILocation(line: 261, column: 5, scope: !8384)
!8394 = !DILocation(line: 262, column: 5, scope: !8384)
!8395 = !DILocation(line: 264, column: 5, scope: !8384)
!8396 = !DILocation(line: 265, column: 5, scope: !8384)
!8397 = !DILocation(line: 267, column: 9, scope: !8384)
!8398 = !DILocation(line: 268, column: 22, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !779, line: 268, column: 13)
!8400 = distinct !DILexicalBlock(scope: !8401, file: !779, line: 267, column: 37)
!8401 = distinct !DILexicalBlock(scope: !8384, file: !779, line: 267, column: 9)
!8402 = !DILocation(line: 268, column: 31, scope: !8399)
!8403 = !DILocation(line: 268, column: 13, scope: !8400)
!8404 = !DILocation(line: 275, column: 15, scope: !8400)
!8405 = !DILocation(line: 276, column: 5, scope: !8400)
!8406 = !DILocation(line: 277, column: 22, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !779, line: 277, column: 13)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !779, line: 276, column: 45)
!8409 = distinct !DILexicalBlock(scope: !8401, file: !779, line: 276, column: 16)
!8410 = !DILocation(line: 277, column: 32, scope: !8407)
!8411 = !DILocation(line: 277, column: 13, scope: !8408)
!8412 = !DILocation(line: 284, column: 15, scope: !8408)
!8413 = !DILocation(line: 285, column: 5, scope: !8408)
!8414 = !DILocation(line: 286, column: 22, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8416, file: !779, line: 286, column: 13)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !779, line: 285, column: 45)
!8417 = distinct !DILexicalBlock(scope: !8409, file: !779, line: 285, column: 16)
!8418 = !DILocation(line: 286, column: 32, scope: !8415)
!8419 = !DILocation(line: 286, column: 13, scope: !8416)
!8420 = !DILocation(line: 293, column: 15, scope: !8416)
!8421 = !DILocation(line: 294, column: 5, scope: !8416)
!8422 = !DILocation(line: 301, column: 1, scope: !8384)
!8423 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !779, file: !779, line: 304, type: !110, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8424)
!8424 = !{!8425, !8426}
!8425 = !DILocalVariable(name: "sr", scope: !8423, file: !779, line: 306, type: !96)
!8426 = !DILocalVariable(name: "savedMask", scope: !8423, file: !779, line: 307, type: !38)
!8427 = !DILocation(line: 306, column: 5, scope: !8423)
!8428 = !DILocation(line: 0, scope: !8423)
!8429 = !DILocation(line: 306, column: 13, scope: !8423)
!8430 = !DILocation(line: 329, column: 17, scope: !8423)
!8431 = !DILocation(line: 330, column: 11, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8423, file: !779, line: 330, column: 9)
!8433 = !{i8 0, i8 2}
!8434 = !DILocation(line: 330, column: 30, scope: !8432)
!8435 = !DILocation(line: 331, column: 13, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8437, file: !779, line: 331, column: 13)
!8437 = distinct !DILexicalBlock(scope: !8432, file: !779, line: 330, column: 53)
!8438 = !DILocation(line: 331, column: 32, scope: !8436)
!8439 = !DILocation(line: 331, column: 13, scope: !8437)
!8440 = !DILocation(line: 333, column: 13, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8436, file: !779, line: 331, column: 37)
!8442 = !DILocation(line: 337, column: 19, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8437, file: !779, line: 337, column: 13)
!8444 = !DILocation(line: 337, column: 22, scope: !8443)
!8445 = !DILocation(line: 337, column: 15, scope: !8443)
!8446 = !DILocation(line: 337, column: 13, scope: !8437)
!8447 = !DILocation(line: 339, column: 13, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8443, file: !779, line: 337, column: 44)
!8449 = !DILocation(line: 341, column: 13, scope: !8448)
!8450 = !DILocation(line: 342, column: 21, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8452, file: !779, line: 342, column: 21)
!8452 = distinct !DILexicalBlock(scope: !8448, file: !779, line: 341, column: 23)
!8453 = !DILocation(line: 342, column: 40, scope: !8451)
!8454 = !DILocation(line: 342, column: 21, scope: !8452)
!8455 = !DILocation(line: 344, column: 21, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8451, file: !779, line: 342, column: 45)
!8457 = !DILocation(line: 346, column: 27, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8452, file: !779, line: 346, column: 21)
!8459 = !DILocation(line: 346, column: 30, scope: !8458)
!8460 = !DILocation(line: 346, column: 23, scope: !8458)
!8461 = !DILocation(line: 346, column: 21, scope: !8452)
!8462 = distinct !{!8462, !8449, !8463}
!8463 = !DILocation(line: 349, column: 13, scope: !8448)
!8464 = !DILocation(line: 350, column: 13, scope: !8448)
!8465 = !DILocation(line: 352, column: 9, scope: !8448)
!8466 = !DILocation(line: 353, column: 13, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8443, file: !779, line: 352, column: 16)
!8468 = !DILocation(line: 356, column: 5, scope: !8423)
!8469 = !DILocation(line: 357, column: 1, scope: !8423)
!8470 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !779, file: !779, line: 359, type: !8471, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8473)
!8471 = !DISubroutineType(types: !8472)
!8472 = !{!1233, !30, !38}
!8473 = !{!8474, !8475, !8476, !8477, !8478, !8479, !8480, !8481, !8482}
!8474 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8470, file: !779, line: 359, type: !30)
!8475 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8470, file: !779, line: 359, type: !38)
!8476 = !DILocalVariable(name: "result", scope: !8470, file: !779, line: 361, type: !1233)
!8477 = !DILocalVariable(name: "savedMask", scope: !8470, file: !779, line: 362, type: !38)
!8478 = !DILocalVariable(name: "status_busy", scope: !8470, file: !779, line: 363, type: !96)
!8479 = !DILocalVariable(name: "status_suspend", scope: !8470, file: !779, line: 363, type: !96)
!8480 = !DILocalVariable(name: "sr", scope: !8470, file: !779, line: 364, type: !96)
!8481 = !DILocalVariable(name: "sr1", scope: !8470, file: !779, line: 365, type: !96)
!8482 = !DILocalVariable(name: "check_status", scope: !8483, file: !779, line: 383, type: !96)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !779, line: 382, column: 49)
!8484 = distinct !DILexicalBlock(scope: !8470, file: !779, line: 382, column: 9)
!8485 = !DILocation(line: 0, scope: !8470)
!8486 = !DILocation(line: 364, column: 5, scope: !8470)
!8487 = !DILocation(line: 364, column: 13, scope: !8470)
!8488 = !DILocation(line: 365, column: 5, scope: !8470)
!8489 = !DILocation(line: 365, column: 13, scope: !8470)
!8490 = !DILocation(line: 367, column: 9, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8470, file: !779, line: 367, column: 9)
!8492 = !DILocation(line: 367, column: 28, scope: !8491)
!8493 = !DILocation(line: 367, column: 9, scope: !8470)
!8494 = !DILocation(line: 368, column: 9, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8491, file: !779, line: 367, column: 33)
!8496 = !DILocation(line: 370, column: 23, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8491, file: !779, line: 369, column: 12)
!8498 = !DILocation(line: 373, column: 9, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8470, file: !779, line: 373, column: 9)
!8500 = !DILocation(line: 373, column: 30, scope: !8499)
!8501 = !DILocation(line: 373, column: 9, scope: !8470)
!8502 = !DILocation(line: 374, column: 9, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8499, file: !779, line: 373, column: 35)
!8504 = !DILocation(line: 376, column: 26, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8499, file: !779, line: 375, column: 12)
!8506 = !DILocation(line: 380, column: 17, scope: !8470)
!8507 = !DILocation(line: 382, column: 27, scope: !8484)
!8508 = !DILocation(line: 382, column: 11, scope: !8484)
!8509 = !DILocation(line: 382, column: 9, scope: !8470)
!8510 = !DILocation(line: 0, scope: !8483)
!8511 = !DILocation(line: 385, column: 13, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8483, file: !779, line: 385, column: 13)
!8513 = !DILocation(line: 385, column: 49, scope: !8512)
!8514 = !DILocation(line: 388, column: 17, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8516, file: !779, line: 388, column: 17)
!8516 = distinct !DILexicalBlock(scope: !8512, file: !779, line: 385, column: 84)
!8517 = !DILocation(line: 388, column: 32, scope: !8515)
!8518 = !DILocation(line: 388, column: 17, scope: !8516)
!8519 = !DILocation(line: 399, column: 9, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8521, file: !779, line: 396, column: 56)
!8521 = distinct !DILexicalBlock(scope: !8522, file: !779, line: 396, column: 20)
!8522 = distinct !DILexicalBlock(scope: !8512, file: !779, line: 393, column: 20)
!8523 = !DILocation(line: 401, column: 28, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !779, line: 399, column: 58)
!8525 = distinct !DILexicalBlock(scope: !8521, file: !779, line: 399, column: 20)
!8526 = !DILocation(line: 402, column: 9, scope: !8524)
!8527 = !DILocation(line: 405, column: 20, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8483, file: !779, line: 405, column: 13)
!8529 = !DILocation(line: 405, column: 35, scope: !8528)
!8530 = !DILocation(line: 405, column: 16, scope: !8528)
!8531 = !DILocation(line: 405, column: 52, scope: !8528)
!8532 = !DILocation(line: 406, column: 21, scope: !8528)
!8533 = !DILocation(line: 406, column: 38, scope: !8528)
!8534 = !DILocation(line: 407, column: 13, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8528, file: !779, line: 406, column: 61)
!8536 = !DILocation(line: 410, column: 13, scope: !8535)
!8537 = !DILocation(line: 413, column: 9, scope: !8535)
!8538 = !DILocation(line: 414, column: 13, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8528, file: !779, line: 413, column: 16)
!8540 = !DILocation(line: 0, scope: !8528)
!8541 = !DILocation(line: 434, column: 5, scope: !8470)
!8542 = !DILocation(line: 0, scope: !8484)
!8543 = !DILocation(line: 436, column: 1, scope: !8470)
!8544 = !DILocation(line: 435, column: 5, scope: !8470)
!8545 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !779, file: !779, line: 439, type: !8546, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !778, retainedNodes: !8548)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{!1233, !30, !38, !96}
!8548 = !{!8549, !8550, !8551, !8552, !8553, !8554, !8555, !8556}
!8549 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8545, file: !779, line: 439, type: !30)
!8550 = !DILocalVariable(name: "addr", arg: 2, scope: !8545, file: !779, line: 439, type: !38)
!8551 = !DILocalVariable(name: "data", arg: 3, scope: !8545, file: !779, line: 439, type: !96)
!8552 = !DILocalVariable(name: "savedMask", scope: !8545, file: !779, line: 441, type: !38)
!8553 = !DILocalVariable(name: "result", scope: !8545, file: !779, line: 442, type: !1233)
!8554 = !DILocalVariable(name: "check_data", scope: !8545, file: !779, line: 443, type: !96)
!8555 = !DILocalVariable(name: "status_busy", scope: !8545, file: !779, line: 444, type: !31)
!8556 = !DILocalVariable(name: "sr", scope: !8545, file: !779, line: 445, type: !96)
!8557 = !DILocation(line: 0, scope: !8545)
!8558 = !DILocation(line: 445, column: 5, scope: !8545)
!8559 = !DILocation(line: 445, column: 23, scope: !8545)
!8560 = !DILocation(line: 448, column: 9, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8545, file: !779, line: 448, column: 9)
!8562 = !DILocation(line: 448, column: 28, scope: !8561)
!8563 = !DILocation(line: 448, column: 9, scope: !8545)
!8564 = !DILocation(line: 449, column: 9, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8561, file: !779, line: 448, column: 33)
!8566 = !DILocation(line: 451, column: 23, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8561, file: !779, line: 450, column: 12)
!8568 = !DILocation(line: 454, column: 17, scope: !8545)
!8569 = !DILocation(line: 457, column: 9, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8545, file: !779, line: 457, column: 9)
!8571 = !DILocation(line: 457, column: 9, scope: !8545)
!8572 = !DILocation(line: 458, column: 9, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8570, file: !779, line: 457, column: 28)
!8574 = !DILocation(line: 459, column: 9, scope: !8573)
!8575 = !DILocation(line: 460, column: 9, scope: !8573)
!8576 = !DILocation(line: 461, column: 9, scope: !8573)
!8577 = !DILocation(line: 462, column: 5, scope: !8573)
!8578 = !DILocation(line: 464, column: 33, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8570, file: !779, line: 464, column: 15)
!8580 = !DILocation(line: 464, column: 17, scope: !8579)
!8581 = !DILocation(line: 464, column: 15, scope: !8570)
!8582 = !DILocation(line: 465, column: 9, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8579, file: !779, line: 464, column: 55)
!8584 = !DILocation(line: 467, column: 23, scope: !8583)
!8585 = !DILocation(line: 467, column: 22, scope: !8583)
!8586 = !DILocation(line: 468, column: 24, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8583, file: !779, line: 468, column: 13)
!8588 = !DILocation(line: 474, column: 5, scope: !8545)
!8589 = !DILocation(line: 477, column: 1, scope: !8545)
!8590 = !DILocation(line: 476, column: 5, scope: !8545)
!8591 = distinct !DISubprogram(name: "GPT_ResetTimer", scope: !839, file: !839, line: 73, type: !8592, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8594)
!8592 = !DISubroutineType(types: !8593)
!8593 = !{null, !894, !894, !536}
!8594 = !{!8595, !8596, !8597}
!8595 = !DILocalVariable(name: "timerNum", arg: 1, scope: !8591, file: !839, line: 73, type: !894)
!8596 = !DILocalVariable(name: "countValue", arg: 2, scope: !8591, file: !839, line: 73, type: !894)
!8597 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !8591, file: !839, line: 73, type: !536)
!8598 = !DILocation(line: 0, scope: !8591)
!8599 = !DILocation(line: 75, column: 5, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8591, file: !839, line: 75, column: 5)
!8601 = !DILocation(line: 75, column: 5, scope: !8591)
!8602 = !DILocation(line: 75, column: 5, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8600, file: !839, line: 75, column: 5)
!8604 = distinct !{!8604, !8602, !8602}
!8605 = !DILocation(line: 77, column: 9, scope: !8591)
!8606 = !DILocation(line: 78, column: 30, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !839, line: 77, column: 24)
!8608 = distinct !DILexicalBlock(scope: !8591, file: !839, line: 77, column: 9)
!8609 = !DILocation(line: 0, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8607, file: !839, line: 79, column: 13)
!8611 = !DILocation(line: 79, column: 13, scope: !8607)
!8612 = !DILocation(line: 80, column: 34, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8610, file: !839, line: 79, column: 37)
!8614 = !DILocation(line: 81, column: 9, scope: !8613)
!8615 = !DILocation(line: 82, column: 34, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8610, file: !839, line: 81, column: 16)
!8617 = !DILocation(line: 85, column: 30, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !839, line: 84, column: 31)
!8619 = distinct !DILexicalBlock(scope: !8608, file: !839, line: 84, column: 16)
!8620 = !DILocation(line: 0, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8618, file: !839, line: 86, column: 13)
!8622 = !DILocation(line: 86, column: 13, scope: !8618)
!8623 = !DILocation(line: 87, column: 34, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8621, file: !839, line: 86, column: 37)
!8625 = !DILocation(line: 88, column: 9, scope: !8624)
!8626 = !DILocation(line: 89, column: 34, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8621, file: !839, line: 88, column: 16)
!8628 = !DILocation(line: 92, column: 1, scope: !8591)
!8629 = distinct !DISubprogram(name: "GPT_Start", scope: !839, file: !839, line: 94, type: !8630, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8632)
!8630 = !DISubroutineType(types: !8631)
!8631 = !{null, !894}
!8632 = !{!8633}
!8633 = !DILocalVariable(name: "timerNum", arg: 1, scope: !8629, file: !839, line: 94, type: !894)
!8634 = !DILocation(line: 0, scope: !8629)
!8635 = !DILocation(line: 96, column: 5, scope: !8629)
!8636 = !DILocation(line: 96, column: 5, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8638, file: !839, line: 96, column: 5)
!8638 = distinct !DILexicalBlock(scope: !8629, file: !839, line: 96, column: 5)
!8639 = distinct !{!8639, !8636, !8636}
!8640 = !DILocation(line: 99, column: 30, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8642, file: !839, line: 98, column: 24)
!8642 = distinct !DILexicalBlock(scope: !8629, file: !839, line: 98, column: 9)
!8643 = !DILocation(line: 100, column: 9, scope: !8641)
!8644 = !DILocation(line: 101, column: 5, scope: !8641)
!8645 = !DILocation(line: 102, column: 30, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8647, file: !839, line: 101, column: 31)
!8647 = distinct !DILexicalBlock(scope: !8642, file: !839, line: 101, column: 16)
!8648 = !DILocation(line: 103, column: 9, scope: !8646)
!8649 = !DILocation(line: 104, column: 5, scope: !8646)
!8650 = !DILocation(line: 105, column: 30, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8652, file: !839, line: 104, column: 31)
!8652 = distinct !DILexicalBlock(scope: !8647, file: !839, line: 104, column: 16)
!8653 = !DILocation(line: 106, column: 5, scope: !8651)
!8654 = !DILocation(line: 108, column: 1, scope: !8629)
!8655 = distinct !DISubprogram(name: "GPT_Stop", scope: !839, file: !839, line: 110, type: !8630, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8656)
!8656 = !{!8657}
!8657 = !DILocalVariable(name: "timerNum", arg: 1, scope: !8655, file: !839, line: 110, type: !894)
!8658 = !DILocation(line: 0, scope: !8655)
!8659 = !DILocation(line: 112, column: 9, scope: !8655)
!8660 = !DILocation(line: 113, column: 30, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8662, file: !839, line: 112, column: 24)
!8662 = distinct !DILexicalBlock(scope: !8655, file: !839, line: 112, column: 9)
!8663 = !DILocation(line: 114, column: 30, scope: !8661)
!8664 = !DILocation(line: 115, column: 31, scope: !8661)
!8665 = !DILocation(line: 117, column: 5, scope: !8661)
!8666 = !DILocation(line: 118, column: 30, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8668, file: !839, line: 117, column: 31)
!8668 = distinct !DILexicalBlock(scope: !8662, file: !839, line: 117, column: 16)
!8669 = !DILocation(line: 119, column: 30, scope: !8667)
!8670 = !DILocation(line: 120, column: 31, scope: !8667)
!8671 = !DILocation(line: 121, column: 5, scope: !8667)
!8672 = !DILocation(line: 122, column: 30, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8674, file: !839, line: 121, column: 31)
!8674 = distinct !DILexicalBlock(scope: !8668, file: !839, line: 121, column: 16)
!8675 = !DILocation(line: 123, column: 5, scope: !8673)
!8676 = !DILocation(line: 124, column: 30, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8678, file: !839, line: 123, column: 31)
!8678 = distinct !DILexicalBlock(scope: !8674, file: !839, line: 123, column: 16)
!8679 = !DILocation(line: 125, column: 5, scope: !8677)
!8680 = !DILocation(line: 128, column: 1, scope: !8655)
!8681 = distinct !DISubprogram(name: "GPT_INT_Handler", scope: !839, file: !839, line: 130, type: !1297, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8682)
!8682 = !{!8683, !8684}
!8683 = !DILocalVariable(name: "irq_number", arg: 1, scope: !8681, file: !839, line: 130, type: !1073)
!8684 = !DILocalVariable(name: "GPT_Status", scope: !8681, file: !839, line: 132, type: !1060)
!8685 = !DILocation(line: 0, scope: !8681)
!8686 = !DILocation(line: 135, column: 18, scope: !8681)
!8687 = !DILocation(line: 136, column: 26, scope: !8681)
!8688 = !DILocation(line: 136, column: 24, scope: !8681)
!8689 = !DILocation(line: 138, column: 20, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8681, file: !839, line: 138, column: 9)
!8691 = !DILocation(line: 138, column: 9, scope: !8681)
!8692 = !DILocation(line: 141, column: 27, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8690, file: !839, line: 141, column: 16)
!8694 = !DILocation(line: 141, column: 16, scope: !8690)
!8695 = !DILocation(line: 0, scope: !8690)
!8696 = !DILocation(line: 145, column: 1, scope: !8681)
!8697 = distinct !DISubprogram(name: "GPT_init", scope: !839, file: !839, line: 147, type: !8698, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8700)
!8698 = !DISubroutineType(types: !8699)
!8699 = !{null, !894, !894, !556}
!8700 = !{!8701, !8702, !8703}
!8701 = !DILocalVariable(name: "timerNum", arg: 1, scope: !8697, file: !839, line: 147, type: !894)
!8702 = !DILocalVariable(name: "speed_32us", arg: 2, scope: !8697, file: !839, line: 147, type: !894)
!8703 = !DILocalVariable(name: "GPT_Callback", arg: 3, scope: !8697, file: !839, line: 147, type: !556)
!8704 = !DILocation(line: 0, scope: !8697)
!8705 = !DILocation(line: 149, column: 5, scope: !8697)
!8706 = !DILocation(line: 149, column: 5, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !839, line: 149, column: 5)
!8708 = distinct !DILexicalBlock(scope: !8697, file: !839, line: 149, column: 5)
!8709 = distinct !{!8709, !8706, !8706}
!8710 = !DILocation(line: 149, column: 5, scope: !8708)
!8711 = !DILocation(line: 151, column: 23, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8697, file: !839, line: 151, column: 9)
!8713 = !DILocation(line: 152, column: 9, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8712, file: !839, line: 151, column: 41)
!8715 = !DILocation(line: 153, column: 9, scope: !8714)
!8716 = !DILocation(line: 154, column: 9, scope: !8714)
!8717 = !DILocation(line: 155, column: 5, scope: !8714)
!8718 = !DILocation(line: 157, column: 9, scope: !8697)
!8719 = !DILocation(line: 158, column: 37, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !839, line: 157, column: 24)
!8721 = distinct !DILexicalBlock(scope: !8697, file: !839, line: 157, column: 9)
!8722 = !DILocation(line: 159, column: 30, scope: !8720)
!8723 = !DILocation(line: 160, column: 45, scope: !8720)
!8724 = !DILocation(line: 160, column: 30, scope: !8720)
!8725 = !DILocation(line: 161, column: 5, scope: !8720)
!8726 = !DILocation(line: 162, column: 37, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8728, file: !839, line: 161, column: 31)
!8728 = distinct !DILexicalBlock(scope: !8721, file: !839, line: 161, column: 16)
!8729 = !DILocation(line: 163, column: 30, scope: !8727)
!8730 = !DILocation(line: 164, column: 45, scope: !8727)
!8731 = !DILocation(line: 164, column: 30, scope: !8727)
!8732 = !DILocation(line: 165, column: 5, scope: !8727)
!8733 = !DILocation(line: 166, column: 59, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !839, line: 165, column: 31)
!8735 = distinct !DILexicalBlock(scope: !8728, file: !839, line: 165, column: 16)
!8736 = !DILocation(line: 166, column: 45, scope: !8734)
!8737 = !DILocation(line: 166, column: 30, scope: !8734)
!8738 = !DILocation(line: 167, column: 5, scope: !8734)
!8739 = !DILocation(line: 168, column: 59, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8741, file: !839, line: 167, column: 31)
!8741 = distinct !DILexicalBlock(scope: !8735, file: !839, line: 167, column: 16)
!8742 = !DILocation(line: 168, column: 45, scope: !8740)
!8743 = !DILocation(line: 168, column: 30, scope: !8740)
!8744 = !DILocation(line: 169, column: 30, scope: !8740)
!8745 = !DILocation(line: 170, column: 5, scope: !8740)
!8746 = !DILocation(line: 171, column: 1, scope: !8697)
!8747 = distinct !DISubprogram(name: "GPT_return_current_count", scope: !839, file: !839, line: 173, type: !8748, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !8750)
!8748 = !DISubroutineType(types: !8749)
!8749 = !{!894, !894}
!8750 = !{!8751, !8752}
!8751 = !DILocalVariable(name: "timerNum", arg: 1, scope: !8747, file: !839, line: 173, type: !894)
!8752 = !DILocalVariable(name: "current_count", scope: !8747, file: !839, line: 175, type: !894)
!8753 = !DILocation(line: 0, scope: !8747)
!8754 = !DILocation(line: 177, column: 5, scope: !8747)
!8755 = !DILocation(line: 177, column: 5, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !839, line: 177, column: 5)
!8757 = distinct !DILexicalBlock(scope: !8747, file: !839, line: 177, column: 5)
!8758 = distinct !{!8758, !8755, !8755}
!8759 = !DILocation(line: 183, column: 5, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8761, file: !839, line: 181, column: 31)
!8761 = distinct !DILexicalBlock(scope: !8762, file: !839, line: 181, column: 16)
!8762 = distinct !DILexicalBlock(scope: !8747, file: !839, line: 179, column: 9)
!8763 = !DILocation(line: 185, column: 5, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !839, line: 183, column: 31)
!8765 = distinct !DILexicalBlock(scope: !8761, file: !839, line: 183, column: 16)
!8766 = !DILocation(line: 187, column: 5, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8768, file: !839, line: 185, column: 31)
!8768 = distinct !DILexicalBlock(scope: !8765, file: !839, line: 185, column: 16)
!8769 = !DILocation(line: 0, scope: !8762)
!8770 = !DILocation(line: 189, column: 5, scope: !8747)
!8771 = distinct !DISubprogram(name: "CM4_GPT2Init", scope: !839, file: !839, line: 193, type: !110, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !2013)
!8772 = !DILocation(line: 195, column: 5, scope: !8771)
!8773 = !DILocation(line: 196, column: 1, scope: !8771)
!8774 = distinct !DISubprogram(name: "CM4_GPT4Init", scope: !839, file: !839, line: 198, type: !110, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !838, retainedNodes: !2013)
!8775 = !DILocation(line: 200, column: 5, scope: !8774)
!8776 = !DILocation(line: 201, column: 1, scope: !8774)
!8777 = distinct !DISubprogram(name: "hal_trng_init", scope: !1832, file: !1832, line: 59, type: !8778, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !2013)
!8778 = !DISubroutineType(types: !8779)
!8779 = !{!8780}
!8780 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_trng_status_t", file: !1835, line: 96, baseType: !1834)
!8781 = !DILocation(line: 61, column: 5, scope: !8777)
!8782 = distinct !DISubprogram(name: "hal_trng_deinit", scope: !1832, file: !1832, line: 71, type: !8778, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !2013)
!8783 = !DILocation(line: 73, column: 5, scope: !8782)
!8784 = distinct !DISubprogram(name: "hal_trng_get_generated_random_number", scope: !1832, file: !1832, line: 85, type: !8785, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !8787)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{!8780, !3134}
!8787 = !{!8788, !8789, !8791, !8793, !8795}
!8788 = !DILocalVariable(name: "random_number", arg: 1, scope: !8784, file: !1832, line: 85, type: !3134)
!8789 = !DILocalVariable(name: "cnt", scope: !8784, file: !1832, line: 87, type: !8790)
!8790 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT16", file: !842, line: 60, baseType: !35)
!8791 = !DILocalVariable(name: "addr", scope: !8792, file: !1832, line: 89, type: !1023)
!8792 = distinct !DILexicalBlock(scope: !8784, file: !1832, line: 89, column: 5)
!8793 = !DILocalVariable(name: "addr", scope: !8794, file: !1832, line: 100, type: !1023)
!8794 = distinct !DILexicalBlock(scope: !8784, file: !1832, line: 100, column: 5)
!8795 = !DILocalVariable(name: "addr", scope: !8796, file: !1832, line: 101, type: !1023)
!8796 = distinct !DILexicalBlock(scope: !8784, file: !1832, line: 101, column: 5)
!8797 = !DILocation(line: 0, scope: !8784)
!8798 = !DILocation(line: 0, scope: !8792)
!8799 = !DILocation(line: 89, column: 5, scope: !8792)
!8800 = !DILocation(line: 91, column: 5, scope: !8784)
!8801 = !DILocation(line: 92, column: 13, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8803, file: !1832, line: 92, column: 13)
!8803 = distinct !DILexicalBlock(scope: !8784, file: !1832, line: 91, column: 23)
!8804 = !DILocation(line: 92, column: 50, scope: !8802)
!8805 = !DILocation(line: 92, column: 13, scope: !8803)
!8806 = !DILocation(line: 95, column: 9, scope: !8803)
!8807 = !DILocation(line: 96, column: 12, scope: !8803)
!8808 = !DILocation(line: 91, column: 16, scope: !8784)
!8809 = distinct !{!8809, !8800, !8810}
!8810 = !DILocation(line: 97, column: 5, scope: !8784)
!8811 = !DILocation(line: 99, column: 22, scope: !8784)
!8812 = !DILocation(line: 99, column: 20, scope: !8784)
!8813 = !DILocation(line: 0, scope: !8794)
!8814 = !DILocation(line: 100, column: 5, scope: !8794)
!8815 = !DILocation(line: 0, scope: !8796)
!8816 = !DILocation(line: 101, column: 5, scope: !8796)
!8817 = !DILocation(line: 103, column: 13, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8784, file: !1832, line: 103, column: 9)
!8819 = !DILocation(line: 103, column: 9, scope: !8784)
!8820 = !DILocation(line: 104, column: 24, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8818, file: !1832, line: 103, column: 21)
!8822 = !DILocation(line: 105, column: 9, scope: !8821)
!8823 = !DILocation(line: 0, scope: !8818)
!8824 = !DILocation(line: 109, column: 1, scope: !8784)
!8825 = distinct !DISubprogram(name: "NVIC_SetupVectorTable", scope: !1842, file: !1842, line: 47, type: !2656, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !8826)
!8826 = !{!8827}
!8827 = !DILocalVariable(name: "addr", arg: 1, scope: !8825, file: !1842, line: 47, type: !38)
!8828 = !DILocation(line: 0, scope: !8825)
!8829 = !DILocation(line: 49, column: 15, scope: !8825)
!8830 = !DILocation(line: 51, column: 5, scope: !8825)
!8831 = !{i64 2624}
!8832 = !DILocation(line: 52, column: 5, scope: !8825)
!8833 = !{i64 2651}
!8834 = !DILocation(line: 53, column: 1, scope: !8825)
!8835 = distinct !DISubprogram(name: "NVIC_SWInt", scope: !1842, file: !1842, line: 56, type: !8836, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !8838)
!8836 = !DISubroutineType(types: !8837)
!8837 = !{null, !6}
!8838 = !{!8839}
!8839 = !DILocalVariable(name: "source", arg: 1, scope: !8835, file: !1842, line: 56, type: !6)
!8840 = !DILocation(line: 0, scope: !8835)
!8841 = !DILocation(line: 58, column: 16, scope: !8835)
!8842 = !DILocation(line: 59, column: 1, scope: !8835)
!8843 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !1842, file: !1842, line: 61, type: !2643, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !8844)
!8844 = !{!8845}
!8845 = !DILocalVariable(name: "mask", scope: !8843, file: !1842, line: 63, type: !38)
!8846 = !DILocation(line: 470, column: 3, scope: !8847, inlinedAt: !8851)
!8847 = distinct !DISubprogram(name: "__get_PRIMASK", scope: !8848, file: !8848, line: 466, type: !2643, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !8849)
!8848 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!8849 = !{!8850}
!8850 = !DILocalVariable(name: "result", scope: !8847, file: !8848, line: 468, type: !38)
!8851 = distinct !DILocation(line: 64, column: 5, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8843, file: !1842, line: 64, column: 5)
!8853 = !{i64 302129}
!8854 = !DILocation(line: 0, scope: !8847, inlinedAt: !8851)
!8855 = !DILocation(line: 0, scope: !8843)
!8856 = !DILocation(line: 330, column: 3, scope: !8857, inlinedAt: !8858)
!8857 = distinct !DISubprogram(name: "__disable_irq", scope: !8848, file: !8848, line: 328, type: !110, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !2013)
!8858 = distinct !DILocation(line: 64, column: 5, scope: !8852)
!8859 = !{i64 298793}
!8860 = !DILocation(line: 65, column: 5, scope: !8843)
!8861 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !1842, file: !1842, line: 68, type: !2656, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !8862)
!8862 = !{!8863}
!8863 = !DILocalVariable(name: "mask", arg: 1, scope: !8861, file: !1842, line: 68, type: !38)
!8864 = !DILocation(line: 0, scope: !8861)
!8865 = !DILocalVariable(name: "priMask", arg: 1, scope: !8866, file: !8848, line: 481, type: !38)
!8866 = distinct !DISubprogram(name: "__set_PRIMASK", scope: !8848, file: !8848, line: 481, type: !2656, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !8867)
!8867 = !{!8865}
!8868 = !DILocation(line: 0, scope: !8866, inlinedAt: !8869)
!8869 = distinct !DILocation(line: 70, column: 5, scope: !8870)
!8870 = distinct !DILexicalBlock(scope: !8861, file: !1842, line: 70, column: 5)
!8871 = !DILocation(line: 483, column: 3, scope: !8866, inlinedAt: !8869)
!8872 = !{i64 302447}
!8873 = !DILocation(line: 71, column: 1, scope: !8861)
!8874 = distinct !DISubprogram(name: "sfc_GPT_return_current_count", scope: !917, file: !917, line: 60, type: !8875, scopeLine: 61, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !8877)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{!894}
!8877 = !{!8878}
!8878 = !DILocalVariable(name: "current_count", scope: !8874, file: !917, line: 62, type: !894)
!8879 = !DILocation(line: 64, column: 21, scope: !8874)
!8880 = !DILocation(line: 0, scope: !8874)
!8881 = !DILocation(line: 66, column: 5, scope: !8874)
!8882 = distinct !DISubprogram(name: "sfc_get_systime", scope: !917, file: !917, line: 69, type: !8875, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !2013)
!8883 = !DILocation(line: 71, column: 12, scope: !8882)
!8884 = !DILocation(line: 71, column: 5, scope: !8882)
!8885 = distinct !DISubprogram(name: "sfc_delay_time", scope: !917, file: !917, line: 74, type: !8630, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !8886)
!8886 = !{!8887, !8888, !8889}
!8887 = !DILocalVariable(name: "count", arg: 1, scope: !8885, file: !917, line: 74, type: !894)
!8888 = !DILocalVariable(name: "end_count", scope: !8885, file: !917, line: 76, type: !894)
!8889 = !DILocalVariable(name: "current", scope: !8885, file: !917, line: 76, type: !894)
!8890 = !DILocation(line: 0, scope: !8885)
!8891 = !DILocation(line: 78, column: 17, scope: !8885)
!8892 = !DILocation(line: 78, column: 35, scope: !8885)
!8893 = !DILocation(line: 78, column: 43, scope: !8885)
!8894 = !DILocation(line: 79, column: 15, scope: !8885)
!8895 = !DILocation(line: 80, column: 12, scope: !8885)
!8896 = !DILocation(line: 80, column: 5, scope: !8885)
!8897 = !DILocation(line: 81, column: 19, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8885, file: !917, line: 80, column: 49)
!8899 = distinct !{!8899, !8896, !8900}
!8900 = !DILocation(line: 82, column: 5, scope: !8885)
!8901 = !DILocation(line: 83, column: 1, scope: !8885)
!8902 = distinct !DISubprogram(name: "sfc_delay_ms", scope: !917, file: !917, line: 85, type: !8836, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !8903)
!8903 = !{!8904}
!8904 = !DILocalVariable(name: "ms", arg: 1, scope: !8902, file: !917, line: 85, type: !6)
!8905 = !DILocation(line: 0, scope: !8902)
!8906 = !DILocation(line: 87, column: 23, scope: !8902)
!8907 = !DILocation(line: 87, column: 5, scope: !8902)
!8908 = !DILocation(line: 88, column: 1, scope: !8902)
!8909 = distinct !DISubprogram(name: "sfc_getMaxGPRamSize", scope: !917, file: !917, line: 90, type: !8910, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !2013)
!8910 = !DISubroutineType(types: !8911)
!8911 = !{!103}
!8912 = !DILocation(line: 92, column: 5, scope: !8909)
!8913 = distinct !DISubprogram(name: "sfc_Init", scope: !917, file: !917, line: 121, type: !1712, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !8914)
!8914 = !{!8915, !8916}
!8915 = !DILocalVariable(name: "security_enable", arg: 1, scope: !8913, file: !917, line: 121, type: !103)
!8916 = !DILocalVariable(name: "reg", scope: !8913, file: !917, line: 123, type: !6)
!8917 = !DILocation(line: 0, scope: !8913)
!8918 = !DILocation(line: 125, column: 27, scope: !8913)
!8919 = !DILocation(line: 141, column: 5, scope: !8913)
!8920 = !DILocation(line: 142, column: 5, scope: !8913)
!8921 = !DILocation(line: 143, column: 5, scope: !8913)
!8922 = !DILocation(line: 144, column: 5, scope: !8913)
!8923 = !DILocation(line: 145, column: 5, scope: !8913)
!8924 = !DILocation(line: 147, column: 5, scope: !8913)
!8925 = !DILocation(line: 150, column: 11, scope: !8913)
!8926 = !DILocation(line: 151, column: 9, scope: !8913)
!8927 = !DILocation(line: 152, column: 5, scope: !8913)
!8928 = !DILocation(line: 153, column: 5, scope: !8913)
!8929 = !DILocation(line: 155, column: 11, scope: !8913)
!8930 = !DILocation(line: 156, column: 9, scope: !8913)
!8931 = !DILocation(line: 157, column: 5, scope: !8913)
!8932 = !DILocation(line: 158, column: 5, scope: !8913)
!8933 = !DILocation(line: 160, column: 11, scope: !8913)
!8934 = !DILocation(line: 161, column: 9, scope: !8913)
!8935 = !DILocation(line: 162, column: 5, scope: !8913)
!8936 = !DILocation(line: 163, column: 5, scope: !8913)
!8937 = !DILocation(line: 165, column: 11, scope: !8913)
!8938 = !DILocation(line: 166, column: 9, scope: !8913)
!8939 = !DILocation(line: 167, column: 5, scope: !8913)
!8940 = !DILocation(line: 168, column: 5, scope: !8913)
!8941 = !DILocation(line: 173, column: 9, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8913, file: !917, line: 173, column: 9)
!8943 = !DILocation(line: 173, column: 9, scope: !8913)
!8944 = !DILocation(line: 174, column: 31, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8942, file: !917, line: 173, column: 26)
!8946 = !DILocation(line: 184, column: 9, scope: !8945)
!8947 = !DILocation(line: 185, column: 9, scope: !8945)
!8948 = !DILocation(line: 187, column: 9, scope: !8945)
!8949 = !DILocation(line: 188, column: 9, scope: !8945)
!8950 = !DILocation(line: 189, column: 9, scope: !8945)
!8951 = !DILocation(line: 190, column: 9, scope: !8945)
!8952 = !DILocation(line: 192, column: 9, scope: !8945)
!8953 = !DILocation(line: 193, column: 5, scope: !8945)
!8954 = !DILocation(line: 194, column: 1, scope: !8913)
!8955 = distinct !DISubprogram(name: "sfc_GetDirectMode", scope: !917, file: !917, line: 196, type: !8910, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !8956)
!8956 = !{!8957, !8958}
!8957 = !DILocalVariable(name: "qpi_en", scope: !8955, file: !917, line: 198, type: !29)
!8958 = !DILocalVariable(name: "sfc_read_mode", scope: !8955, file: !917, line: 199, type: !29)
!8959 = !DILocation(line: 198, column: 29, scope: !8955)
!8960 = !DILocation(line: 0, scope: !8955)
!8961 = !DILocation(line: 199, column: 36, scope: !8955)
!8962 = !DILocation(line: 199, column: 89, scope: !8955)
!8963 = !DILocation(line: 204, column: 23, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8955, file: !917, line: 204, column: 9)
!8965 = !DILocation(line: 204, column: 9, scope: !8955)
!8966 = !DILocation(line: 218, column: 1, scope: !8955)
!8967 = distinct !DISubprogram(name: "sfc_direct_read_setup", scope: !917, file: !917, line: 221, type: !8968, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !8970)
!8968 = !DISubroutineType(types: !8969)
!8969 = !{null, !29, !103}
!8970 = !{!8971, !8972, !8973}
!8971 = !DILocalVariable(name: "reg", arg: 1, scope: !8967, file: !917, line: 221, type: !29)
!8972 = !DILocalVariable(name: "mode", arg: 2, scope: !8967, file: !917, line: 221, type: !103)
!8973 = !DILocalVariable(name: "tmp", scope: !8967, file: !917, line: 223, type: !29)
!8974 = !DILocation(line: 0, scope: !8967)
!8975 = !DILocation(line: 224, column: 5, scope: !8967)
!8976 = !DILocation(line: 236, column: 9, scope: !8967)
!8977 = !DILocation(line: 237, column: 5, scope: !8967)
!8978 = !DILocation(line: 238, column: 1, scope: !8967)
!8979 = distinct !DISubprogram(name: "sfc_Command_List", scope: !917, file: !917, line: 296, type: !8980, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !8982)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{null, !942}
!8982 = !{!8983, !8984, !8985, !8986}
!8983 = !DILocalVariable(name: "cmdlist", arg: 1, scope: !8979, file: !917, line: 296, type: !942)
!8984 = !DILocalVariable(name: "i", scope: !8979, file: !917, line: 298, type: !6)
!8985 = !DILocalVariable(name: "val", scope: !8979, file: !917, line: 299, type: !6)
!8986 = !DILocalVariable(name: "force_qpi", scope: !8979, file: !917, line: 299, type: !6)
!8987 = !DILocation(line: 0, scope: !8979)
!8988 = !DILocation(line: 301, column: 10, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8979, file: !917, line: 301, column: 9)
!8990 = !DILocation(line: 301, column: 9, scope: !8979)
!8991 = !DILocation(line: 305, column: 11, scope: !8979)
!8992 = !DILocation(line: 310, column: 5, scope: !8979)
!8993 = !DILocation(line: 311, column: 17, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8979, file: !917, line: 310, column: 17)
!8995 = !DILocation(line: 311, column: 9, scope: !8994)
!8996 = !DILocation(line: 319, column: 17, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8994, file: !917, line: 311, column: 29)
!8998 = !DILocation(line: 321, column: 17, scope: !8997)
!8999 = !DILocation(line: 322, column: 17, scope: !8997)
!9000 = !DILocation(line: 325, column: 33, scope: !8994)
!9001 = !DILocation(line: 325, column: 23, scope: !8994)
!9002 = !DILocation(line: 325, column: 49, scope: !8994)
!9003 = !DILocation(line: 325, column: 39, scope: !8994)
!9004 = !DILocation(line: 325, column: 9, scope: !8994)
!9005 = !DILocation(line: 327, column: 15, scope: !8994)
!9006 = !DILocation(line: 327, column: 11, scope: !8994)
!9007 = !DILocation(line: 329, column: 9, scope: !8994)
!9008 = distinct !{!9008, !8992, !9009}
!9009 = !DILocation(line: 330, column: 5, scope: !8979)
!9010 = !DILocation(line: 331, column: 1, scope: !8979)
!9011 = distinct !DISubprogram(name: "sfc_transfer", scope: !917, file: !917, line: 417, type: !9012, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !9015)
!9012 = !DISubroutineType(types: !9013)
!9013 = !{!103, !942, !9014, !926, !9014, !6}
!9014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !29)
!9015 = !{!9016, !9017, !9018, !9019, !9020, !9021, !9022, !9023, !9024, !9025, !9026}
!9016 = !DILocalVariable(name: "cmd", arg: 1, scope: !9011, file: !917, line: 417, type: !942)
!9017 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !9011, file: !917, line: 417, type: !9014)
!9018 = !DILocalVariable(name: "data", arg: 3, scope: !9011, file: !917, line: 417, type: !926)
!9019 = !DILocalVariable(name: "data_len", arg: 4, scope: !9011, file: !917, line: 417, type: !9014)
!9020 = !DILocalVariable(name: "force_qpi", arg: 5, scope: !9011, file: !917, line: 417, type: !6)
!9021 = !DILocalVariable(name: "tmp", scope: !9011, file: !917, line: 419, type: !6)
!9022 = !DILocalVariable(name: "i", scope: !9011, file: !917, line: 419, type: !6)
!9023 = !DILocalVariable(name: "j", scope: !9011, file: !917, line: 419, type: !6)
!9024 = !DILocalVariable(name: "p_data", scope: !9011, file: !917, line: 420, type: !926)
!9025 = !DILocalVariable(name: "p_tmp", scope: !9011, file: !917, line: 420, type: !926)
!9026 = !DILocalVariable(name: "savedMask", scope: !9011, file: !917, line: 421, type: !6)
!9027 = !DILocation(line: 0, scope: !9011)
!9028 = !DILocation(line: 419, column: 5, scope: !9011)
!9029 = !DILocation(line: 423, column: 18, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9011, file: !917, line: 423, column: 9)
!9031 = !DILocation(line: 423, column: 30, scope: !9030)
!9032 = !DILocation(line: 423, column: 9, scope: !9011)
!9033 = !DILocation(line: 430, column: 19, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9035, file: !917, line: 430, column: 5)
!9035 = distinct !DILexicalBlock(scope: !9011, file: !917, line: 430, column: 5)
!9036 = !DILocation(line: 430, column: 5, scope: !9035)
!9037 = !DILocation(line: 431, column: 25, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !917, line: 431, column: 9)
!9039 = distinct !DILexicalBlock(scope: !9034, file: !917, line: 430, column: 43)
!9040 = !DILocation(line: 431, column: 32, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9038, file: !917, line: 431, column: 9)
!9042 = !DILocation(line: 431, column: 9, scope: !9038)
!9043 = !DILocation(line: 432, column: 24, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9041, file: !917, line: 431, column: 62)
!9045 = !DILocation(line: 432, column: 13, scope: !9044)
!9046 = !DILocation(line: 432, column: 22, scope: !9044)
!9047 = !DILocation(line: 431, column: 53, scope: !9041)
!9048 = !DILocation(line: 431, column: 58, scope: !9041)
!9049 = !DILocation(line: 431, column: 42, scope: !9041)
!9050 = distinct !{!9050, !9042, !9051}
!9051 = !DILocation(line: 433, column: 9, scope: !9038)
!9052 = !DILocation(line: 434, column: 9, scope: !9039)
!9053 = !DILocation(line: 0, scope: !9035)
!9054 = !DILocation(line: 436, column: 15, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9039, file: !917, line: 436, column: 13)
!9056 = !DILocation(line: 436, column: 20, scope: !9055)
!9057 = !DILocation(line: 437, column: 13, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9055, file: !917, line: 436, column: 46)
!9059 = !DILocation(line: 438, column: 13, scope: !9058)
!9060 = !DILocation(line: 440, column: 9, scope: !9058)
!9061 = !DILocation(line: 430, column: 37, scope: !9034)
!9062 = distinct !{!9062, !9036, !9063}
!9063 = !DILocation(line: 441, column: 5, scope: !9035)
!9064 = !DILocation(line: 443, column: 17, scope: !9011)
!9065 = !DILocation(line: 444, column: 9, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9011, file: !917, line: 444, column: 9)
!9067 = !DILocation(line: 444, column: 9, scope: !9011)
!9068 = !DILocation(line: 445, column: 9, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9066, file: !917, line: 444, column: 32)
!9070 = !DILocation(line: 446, column: 9, scope: !9069)
!9071 = !DILocation(line: 447, column: 5, scope: !9069)
!9072 = !DILocation(line: 449, column: 5, scope: !9011)
!9073 = !DILocation(line: 450, column: 5, scope: !9011)
!9074 = !DILocation(line: 452, column: 5, scope: !9011)
!9075 = !DILocation(line: 453, column: 5, scope: !9011)
!9076 = !DILocation(line: 454, column: 5, scope: !9011)
!9077 = !DILocation(line: 456, column: 76, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !917, line: 456, column: 5)
!9079 = distinct !DILexicalBlock(scope: !9011, file: !917, line: 456, column: 5)
!9080 = !DILocation(line: 456, column: 5, scope: !9079)
!9081 = !DILocation(line: 456, column: 62, scope: !9079)
!9082 = !DILocation(line: 457, column: 17, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9078, file: !917, line: 456, column: 111)
!9084 = !DILocation(line: 457, column: 15, scope: !9083)
!9085 = !DILocation(line: 456, column: 88, scope: !9078)
!9086 = !DILocation(line: 456, column: 93, scope: !9078)
!9087 = !DILocation(line: 456, column: 101, scope: !9078)
!9088 = distinct !{!9088, !9080, !9089}
!9089 = !DILocation(line: 458, column: 5, scope: !9079)
!9090 = !DILocation(line: 461, column: 1, scope: !9011)
!9091 = distinct !DISubprogram(name: "sfc_MacEnable", scope: !917, file: !917, line: 402, type: !1712, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !9092)
!9092 = !{!9093, !9094}
!9093 = !DILocalVariable(name: "force_qpi", arg: 1, scope: !9091, file: !917, line: 402, type: !103)
!9094 = !DILocalVariable(name: "val", scope: !9091, file: !917, line: 404, type: !29)
!9095 = !DILocation(line: 0, scope: !9091)
!9096 = !DILocation(line: 406, column: 11, scope: !9091)
!9097 = !DILocation(line: 408, column: 9, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9091, file: !917, line: 408, column: 9)
!9099 = !DILocation(line: 408, column: 25, scope: !9098)
!9100 = !DILocation(line: 412, column: 9, scope: !9091)
!9101 = !DILocation(line: 414, column: 5, scope: !9091)
!9102 = !DILocation(line: 415, column: 1, scope: !9091)
!9103 = distinct !DISubprogram(name: "sfc_MacWaitReady", scope: !917, file: !917, line: 384, type: !110, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !2013)
!9104 = !DILocation(line: 396, column: 5, scope: !9103)
!9105 = !DILocation(line: 397, column: 5, scope: !9103)
!9106 = !DILocation(line: 399, column: 1, scope: !9103)
!9107 = distinct !DISubprogram(name: "sfc_MacTrigger", scope: !917, file: !917, line: 339, type: !9108, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !9110)
!9108 = !DISubroutineType(types: !9109)
!9109 = !{!29}
!9110 = !{!9111, !9112}
!9111 = !DILocalVariable(name: "val", scope: !9107, file: !917, line: 341, type: !29)
!9112 = !DILocalVariable(name: "misc_ctl", scope: !9107, file: !917, line: 342, type: !29)
!9113 = !DILocation(line: 0, scope: !9107)
!9114 = !DILocation(line: 344, column: 11, scope: !9107)
!9115 = !DILocation(line: 347, column: 9, scope: !9107)
!9116 = !DILocation(line: 349, column: 5, scope: !9107)
!9117 = !DILocation(line: 352, column: 5, scope: !9107)
!9118 = !DILocation(line: 352, column: 14, scope: !9107)
!9119 = !DILocation(line: 352, column: 44, scope: !9107)
!9120 = !DILocation(line: 352, column: 12, scope: !9107)
!9121 = distinct !{!9121, !9117, !9122}
!9122 = !DILocation(line: 353, column: 9, scope: !9107)
!9123 = !DILocation(line: 354, column: 13, scope: !9107)
!9124 = !DILocation(line: 354, column: 43, scope: !9107)
!9125 = !DILocation(line: 354, column: 5, scope: !9107)
!9126 = distinct !{!9126, !9125, !9127}
!9127 = !DILocation(line: 355, column: 9, scope: !9107)
!9128 = !DILocation(line: 357, column: 5, scope: !9107)
!9129 = distinct !DISubprogram(name: "sfc_MacLeave", scope: !917, file: !917, line: 366, type: !110, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !9130)
!9130 = !{!9131}
!9131 = !DILocalVariable(name: "val", scope: !9129, file: !917, line: 368, type: !29)
!9132 = !DILocation(line: 371, column: 11, scope: !9129)
!9133 = !DILocation(line: 0, scope: !9129)
!9134 = !DILocation(line: 372, column: 9, scope: !9129)
!9135 = !DILocation(line: 373, column: 5, scope: !9129)
!9136 = !DILocation(line: 378, column: 11, scope: !9129)
!9137 = !DILocation(line: 379, column: 9, scope: !9129)
!9138 = !DILocation(line: 380, column: 5, scope: !9129)
!9139 = !DILocation(line: 381, column: 1, scope: !9129)
!9140 = distinct !DISubprogram(name: "sfc_clear_gpram", scope: !917, file: !917, line: 463, type: !110, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !9141)
!9141 = !{!9142, !9143}
!9142 = !DILocalVariable(name: "i", scope: !9140, file: !917, line: 465, type: !6)
!9143 = !DILocalVariable(name: "p_data", scope: !9140, file: !917, line: 466, type: !926)
!9144 = !DILocation(line: 0, scope: !9140)
!9145 = !DILocation(line: 470, column: 5, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9140, file: !917, line: 470, column: 5)
!9147 = !DILocation(line: 471, column: 9, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9149, file: !917, line: 470, column: 63)
!9149 = distinct !DILexicalBlock(scope: !9146, file: !917, line: 470, column: 5)
!9150 = !DILocation(line: 470, column: 52, scope: !9149)
!9151 = !DILocation(line: 470, column: 59, scope: !9149)
!9152 = !DILocation(line: 470, column: 19, scope: !9149)
!9153 = distinct !{!9153, !9145, !9154}
!9154 = !DILocation(line: 472, column: 5, scope: !9146)
!9155 = !DILocation(line: 475, column: 1, scope: !9140)
!9156 = distinct !DISubprogram(name: "sfc_read", scope: !917, file: !917, line: 478, type: !9157, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !9159)
!9157 = !DISubroutineType(types: !9158)
!9158 = !{!103, !942, !9014, !926, !9014}
!9159 = !{!9160, !9161, !9162, !9163}
!9160 = !DILocalVariable(name: "cmd", arg: 1, scope: !9156, file: !917, line: 478, type: !942)
!9161 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !9156, file: !917, line: 478, type: !9014)
!9162 = !DILocalVariable(name: "data", arg: 3, scope: !9156, file: !917, line: 478, type: !926)
!9163 = !DILocalVariable(name: "data_len", arg: 4, scope: !9156, file: !917, line: 478, type: !9014)
!9164 = !DILocation(line: 0, scope: !9156)
!9165 = !DILocation(line: 480, column: 12, scope: !9156)
!9166 = !DILocation(line: 480, column: 5, scope: !9156)
!9167 = distinct !DISubprogram(name: "sfc_write", scope: !917, file: !917, line: 490, type: !9168, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !9170)
!9168 = !DISubroutineType(types: !9169)
!9169 = !{!103, !942, !9014, !942, !9014}
!9170 = !{!9171, !9172, !9173, !9174, !9175, !9179}
!9171 = !DILocalVariable(name: "cmd", arg: 1, scope: !9167, file: !917, line: 490, type: !942)
!9172 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !9167, file: !917, line: 490, type: !9014)
!9173 = !DILocalVariable(name: "data", arg: 3, scope: !9167, file: !917, line: 490, type: !942)
!9174 = !DILocalVariable(name: "data_len", arg: 4, scope: !9167, file: !917, line: 490, type: !9014)
!9175 = !DILocalVariable(name: "tmp", scope: !9167, file: !917, line: 492, type: !9176)
!9176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 1280, elements: !9177)
!9177 = !{!9178}
!9178 = !DISubrange(count: 160)
!9179 = !DILocalVariable(name: "total", scope: !9167, file: !917, line: 493, type: !103)
!9180 = !DILocation(line: 0, scope: !9167)
!9181 = !DILocation(line: 492, column: 5, scope: !9167)
!9182 = !DILocation(line: 492, column: 19, scope: !9167)
!9183 = !DILocation(line: 493, column: 25, scope: !9167)
!9184 = !DILocation(line: 495, column: 15, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9167, file: !917, line: 495, column: 9)
!9186 = !DILocation(line: 495, column: 9, scope: !9167)
!9187 = !DILocation(line: 496, column: 9, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9189, file: !917, line: 496, column: 9)
!9189 = distinct !DILexicalBlock(scope: !9190, file: !917, line: 496, column: 9)
!9190 = distinct !DILexicalBlock(scope: !9185, file: !917, line: 495, column: 31)
!9191 = distinct !{!9191, !9187, !9187}
!9192 = !DILocation(line: 498, column: 5, scope: !9167)
!9193 = !DILocation(line: 500, column: 9, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9167, file: !917, line: 500, column: 9)
!9195 = !DILocation(line: 500, column: 14, scope: !9194)
!9196 = !DILocation(line: 501, column: 17, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9194, file: !917, line: 500, column: 27)
!9198 = !DILocation(line: 501, column: 9, scope: !9197)
!9199 = !DILocation(line: 502, column: 5, scope: !9197)
!9200 = !DILocation(line: 503, column: 12, scope: !9167)
!9201 = !DILocation(line: 504, column: 1, scope: !9167)
!9202 = !DILocation(line: 503, column: 5, scope: !9167)
!9203 = distinct !DISubprogram(name: "sfc_security_write_crc", scope: !917, file: !917, line: 506, type: !9204, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !9206)
!9204 = !DISubroutineType(types: !9205)
!9205 = !{!103, !942, !9014}
!9206 = !{!9207, !9208, !9209, !9210, !9211}
!9207 = !DILocalVariable(name: "cmd", arg: 1, scope: !9203, file: !917, line: 506, type: !942)
!9208 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !9203, file: !917, line: 506, type: !9014)
!9209 = !DILocalVariable(name: "tmp", scope: !9203, file: !917, line: 508, type: !9176)
!9210 = !DILocalVariable(name: "crc", scope: !9203, file: !917, line: 509, type: !29)
!9211 = !DILocalVariable(name: "total", scope: !9203, file: !917, line: 510, type: !103)
!9212 = !DILocation(line: 0, scope: !9203)
!9213 = !DILocation(line: 508, column: 5, scope: !9203)
!9214 = !DILocation(line: 508, column: 19, scope: !9203)
!9215 = !DILocation(line: 509, column: 5, scope: !9203)
!9216 = !DILocation(line: 509, column: 25, scope: !9203)
!9217 = !DILocation(line: 509, column: 19, scope: !9203)
!9218 = !DILocation(line: 510, column: 25, scope: !9203)
!9219 = !DILocation(line: 514, column: 5, scope: !9203)
!9220 = !DILocation(line: 515, column: 13, scope: !9203)
!9221 = !DILocation(line: 515, column: 5, scope: !9203)
!9222 = !DILocation(line: 517, column: 12, scope: !9203)
!9223 = !DILocation(line: 518, column: 1, scope: !9203)
!9224 = !DILocation(line: 517, column: 5, scope: !9203)
!9225 = distinct !DISubprogram(name: "__sfc_write", scope: !917, file: !917, line: 538, type: !9012, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !916, retainedNodes: !9226)
!9226 = !{!9227, !9228, !9229, !9230, !9231, !9232, !9233}
!9227 = !DILocalVariable(name: "cmd", arg: 1, scope: !9225, file: !917, line: 538, type: !942)
!9228 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !9225, file: !917, line: 538, type: !9014)
!9229 = !DILocalVariable(name: "data", arg: 3, scope: !9225, file: !917, line: 538, type: !926)
!9230 = !DILocalVariable(name: "data_len", arg: 4, scope: !9225, file: !917, line: 538, type: !9014)
!9231 = !DILocalVariable(name: "security_enable", arg: 5, scope: !9225, file: !917, line: 538, type: !6)
!9232 = !DILocalVariable(name: "tmp", scope: !9225, file: !917, line: 540, type: !9176)
!9233 = !DILocalVariable(name: "total", scope: !9225, file: !917, line: 541, type: !103)
!9234 = !DILocation(line: 0, scope: !9225)
!9235 = !DILocation(line: 540, column: 5, scope: !9225)
!9236 = !DILocation(line: 540, column: 19, scope: !9225)
!9237 = !DILocation(line: 541, column: 25, scope: !9225)
!9238 = !DILocation(line: 543, column: 15, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9225, file: !917, line: 543, column: 9)
!9240 = !DILocation(line: 543, column: 9, scope: !9225)
!9241 = !DILocation(line: 544, column: 9, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9243, file: !917, line: 544, column: 9)
!9243 = distinct !DILexicalBlock(scope: !9244, file: !917, line: 544, column: 9)
!9244 = distinct !DILexicalBlock(scope: !9239, file: !917, line: 543, column: 30)
!9245 = distinct !{!9245, !9241, !9241}
!9246 = !DILocation(line: 546, column: 5, scope: !9225)
!9247 = !DILocation(line: 548, column: 9, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9225, file: !917, line: 548, column: 9)
!9249 = !DILocation(line: 548, column: 14, scope: !9248)
!9250 = !DILocation(line: 549, column: 17, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9248, file: !917, line: 548, column: 27)
!9252 = !DILocation(line: 549, column: 9, scope: !9251)
!9253 = !DILocation(line: 550, column: 5, scope: !9251)
!9254 = !DILocation(line: 551, column: 12, scope: !9225)
!9255 = !DILocation(line: 552, column: 1, scope: !9225)
!9256 = !DILocation(line: 551, column: 5, scope: !9225)
!9257 = distinct !DISubprogram(name: "flash_suspend_Winbond", scope: !933, file: !933, line: 186, type: !110, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !2013)
!9258 = !DILocation(line: 188, column: 5, scope: !9257)
!9259 = !DILocation(line: 189, column: 5, scope: !9257)
!9260 = distinct !DISubprogram(name: "flash_resume_Winbond", scope: !933, file: !933, line: 195, type: !110, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !2013)
!9261 = !DILocation(line: 197, column: 5, scope: !9260)
!9262 = !DILocation(line: 198, column: 5, scope: !9260)
!9263 = distinct !DISubprogram(name: "flash_check_device", scope: !933, file: !933, line: 276, type: !8910, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9264)
!9264 = !{!9265, !9266, !9267, !9269}
!9265 = !DILocalVariable(name: "i", scope: !9263, file: !933, line: 278, type: !103)
!9266 = !DILocalVariable(name: "jedec", scope: !9263, file: !933, line: 279, type: !29)
!9267 = !DILocalVariable(name: "buf", scope: !9263, file: !933, line: 280, type: !9268)
!9268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 40, elements: !429)
!9269 = !DILocalVariable(name: "info", scope: !9263, file: !933, line: 281, type: !944)
!9270 = !DILocation(line: 280, column: 5, scope: !9263)
!9271 = !DILocation(line: 280, column: 19, scope: !9263)
!9272 = !DILocation(line: 283, column: 5, scope: !9263)
!9273 = !DILocation(line: 284, column: 45, scope: !9263)
!9274 = !DILocation(line: 284, column: 30, scope: !9263)
!9275 = !DILocation(line: 284, column: 52, scope: !9263)
!9276 = !DILocation(line: 284, column: 77, scope: !9263)
!9277 = !DILocation(line: 284, column: 62, scope: !9263)
!9278 = !DILocation(line: 284, column: 84, scope: !9263)
!9279 = !DILocation(line: 284, column: 59, scope: !9263)
!9280 = !DILocation(line: 0, scope: !9263)
!9281 = !DILocation(line: 286, column: 23, scope: !9263)
!9282 = !DILocation(line: 286, column: 21, scope: !9263)
!9283 = !DILocation(line: 288, column: 5, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9263, file: !933, line: 288, column: 5)
!9285 = !DILocation(line: 290, column: 19, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !933, line: 290, column: 13)
!9287 = distinct !DILexicalBlock(scope: !9288, file: !933, line: 288, column: 70)
!9288 = distinct !DILexicalBlock(scope: !9284, file: !933, line: 288, column: 5)
!9289 = !DILocation(line: 290, column: 22, scope: !9286)
!9290 = !DILocation(line: 290, column: 32, scope: !9286)
!9291 = !DILocation(line: 290, column: 41, scope: !9286)
!9292 = !DILocation(line: 290, column: 50, scope: !9286)
!9293 = !DILocation(line: 290, column: 13, scope: !9287)
!9294 = !DILocation(line: 289, column: 17, scope: !9287)
!9295 = !DILocation(line: 291, column: 27, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9286, file: !933, line: 290, column: 60)
!9297 = !DILocation(line: 292, column: 26, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9296, file: !933, line: 292, column: 17)
!9299 = !DILocation(line: 292, column: 17, scope: !9296)
!9300 = !DILocation(line: 294, column: 33, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9298, file: !933, line: 294, column: 24)
!9302 = !DILocation(line: 294, column: 24, scope: !9298)
!9303 = !DILocation(line: 296, column: 33, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9301, file: !933, line: 296, column: 24)
!9305 = !DILocation(line: 296, column: 24, scope: !9301)
!9306 = !DILocation(line: 298, column: 31, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9308, file: !933, line: 298, column: 20)
!9308 = distinct !DILexicalBlock(scope: !9304, file: !933, line: 296, column: 48)
!9309 = !DILocation(line: 298, column: 49, scope: !9307)
!9310 = !DILocation(line: 0, scope: !9307)
!9311 = !DILocation(line: 303, column: 13, scope: !9308)
!9312 = !DILocation(line: 303, column: 33, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9304, file: !933, line: 303, column: 24)
!9314 = !DILocation(line: 303, column: 24, scope: !9304)
!9315 = !DILocation(line: 0, scope: !9298)
!9316 = !DILocation(line: 308, column: 30, scope: !9296)
!9317 = !DILocation(line: 288, column: 66, scope: !9288)
!9318 = !DILocation(line: 288, column: 19, scope: !9288)
!9319 = distinct !{!9319, !9283, !9320}
!9320 = !DILocation(line: 311, column: 5, scope: !9284)
!9321 = !DILocation(line: 313, column: 19, scope: !9263)
!9322 = !DILocation(line: 315, column: 9, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9263, file: !933, line: 315, column: 9)
!9324 = !DILocation(line: 315, column: 26, scope: !9323)
!9325 = !DILocation(line: 315, column: 9, scope: !9263)
!9326 = !DILocation(line: 316, column: 51, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9323, file: !933, line: 315, column: 47)
!9328 = !DILocation(line: 316, column: 23, scope: !9327)
!9329 = !DILocation(line: 318, column: 19, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9327, file: !933, line: 318, column: 13)
!9331 = !DILocation(line: 318, column: 25, scope: !9330)
!9332 = !DILocation(line: 318, column: 22, scope: !9330)
!9333 = !DILocation(line: 318, column: 32, scope: !9330)
!9334 = !DILocation(line: 318, column: 41, scope: !9330)
!9335 = !DILocation(line: 318, column: 50, scope: !9330)
!9336 = !DILocation(line: 318, column: 13, scope: !9327)
!9337 = !DILocation(line: 322, column: 13, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9330, file: !933, line: 321, column: 16)
!9339 = !DILocation(line: 323, column: 13, scope: !9338)
!9340 = !DILocation(line: 325, column: 5, scope: !9327)
!9341 = !DILocation(line: 329, column: 1, scope: !9263)
!9342 = distinct !DISubprogram(name: "flash_read_jedec_id", scope: !933, file: !933, line: 495, type: !9343, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9345)
!9343 = !DISubroutineType(types: !9344)
!9344 = !{!103, !926, !103}
!9345 = !{!9346, !9347, !9348, !9349}
!9346 = !DILocalVariable(name: "buf", arg: 1, scope: !9342, file: !933, line: 495, type: !926)
!9347 = !DILocalVariable(name: "buf_size", arg: 2, scope: !9342, file: !933, line: 495, type: !103)
!9348 = !DILocalVariable(name: "code", scope: !9342, file: !933, line: 497, type: !98)
!9349 = !DILocalVariable(name: "rc", scope: !9342, file: !933, line: 498, type: !103)
!9350 = !DILocation(line: 0, scope: !9342)
!9351 = !DILocation(line: 497, column: 5, scope: !9342)
!9352 = !DILocation(line: 499, column: 10, scope: !9342)
!9353 = !DILocation(line: 500, column: 10, scope: !9342)
!9354 = !DILocation(line: 503, column: 1, scope: !9342)
!9355 = !DILocation(line: 502, column: 5, scope: !9342)
!9356 = distinct !DISubprogram(name: "flash_switch_mode", scope: !933, file: !933, line: 331, type: !9357, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9359)
!9357 = !DISubroutineType(types: !9358)
!9358 = !{null, !29}
!9359 = !{!9360}
!9360 = !DILocalVariable(name: "mode", arg: 1, scope: !9356, file: !933, line: 331, type: !29)
!9361 = !DILocation(line: 0, scope: !9356)
!9362 = !DILocation(line: 333, column: 9, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9356, file: !933, line: 333, column: 9)
!9364 = !DILocation(line: 333, column: 34, scope: !9363)
!9365 = !DILocation(line: 333, column: 9, scope: !9356)
!9366 = !DILocation(line: 335, column: 26, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9363, file: !933, line: 333, column: 43)
!9368 = !DILocation(line: 336, column: 5, scope: !9367)
!9369 = !DILocation(line: 338, column: 5, scope: !9356)
!9370 = !DILocation(line: 339, column: 5, scope: !9356)
!9371 = !DILocation(line: 341, column: 9, scope: !9356)
!9372 = !DILocation(line: 342, column: 9, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9374, file: !933, line: 341, column: 22)
!9374 = distinct !DILexicalBlock(scope: !9356, file: !933, line: 341, column: 9)
!9375 = !DILocation(line: 343, column: 5, scope: !9373)
!9376 = !DILocation(line: 344, column: 12, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9378, file: !933, line: 344, column: 12)
!9378 = distinct !DILexicalBlock(scope: !9379, file: !933, line: 343, column: 30)
!9379 = distinct !DILexicalBlock(scope: !9374, file: !933, line: 343, column: 16)
!9380 = !DILocation(line: 344, column: 29, scope: !9377)
!9381 = !DILocation(line: 344, column: 12, scope: !9378)
!9382 = !DILocation(line: 345, column: 13, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9377, file: !933, line: 344, column: 48)
!9384 = !DILocation(line: 346, column: 9, scope: !9383)
!9385 = !DILocation(line: 347, column: 13, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9377, file: !933, line: 346, column: 16)
!9387 = !DILocation(line: 350, column: 9, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9389, file: !933, line: 349, column: 29)
!9389 = distinct !DILexicalBlock(scope: !9379, file: !933, line: 349, column: 16)
!9390 = !DILocation(line: 352, column: 9, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9392, file: !933, line: 352, column: 9)
!9392 = distinct !DILexicalBlock(scope: !9393, file: !933, line: 352, column: 9)
!9393 = distinct !DILexicalBlock(scope: !9389, file: !933, line: 351, column: 12)
!9394 = distinct !{!9394, !9390, !9390}
!9395 = !DILocation(line: 354, column: 21, scope: !9356)
!9396 = !DILocation(line: 355, column: 1, scope: !9356)
!9397 = distinct !DISubprogram(name: "flash_Switch_Device_Mode", scope: !933, file: !933, line: 215, type: !2656, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9398)
!9398 = !{!9399, !9400}
!9399 = !DILocalVariable(name: "mode", arg: 1, scope: !9397, file: !933, line: 215, type: !38)
!9400 = !DILocalVariable(name: "ptr", scope: !9397, file: !933, line: 217, type: !942)
!9401 = !DILocation(line: 0, scope: !9397)
!9402 = !DILocation(line: 220, column: 5, scope: !9397)
!9403 = !DILocation(line: 223, column: 17, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9405, file: !933, line: 223, column: 17)
!9405 = distinct !DILexicalBlock(scope: !9397, file: !933, line: 220, column: 19)
!9406 = !DILocation(line: 223, column: 17, scope: !9405)
!9407 = !DILocation(line: 227, column: 22, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9409, file: !933, line: 227, column: 22)
!9409 = distinct !DILexicalBlock(scope: !9410, file: !933, line: 225, column: 55)
!9410 = distinct !DILexicalBlock(scope: !9404, file: !933, line: 225, column: 23)
!9411 = !DILocation(line: 227, column: 37, scope: !9408)
!9412 = !DILocation(line: 227, column: 22, scope: !9409)
!9413 = !DILocation(line: 230, column: 13, scope: !9409)
!9414 = !DILocation(line: 232, column: 13, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9416, file: !933, line: 230, column: 59)
!9416 = distinct !DILexicalBlock(scope: !9410, file: !933, line: 230, column: 24)
!9417 = !DILocation(line: 233, column: 23, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9419, file: !933, line: 232, column: 61)
!9419 = distinct !DILexicalBlock(scope: !9416, file: !933, line: 232, column: 24)
!9420 = !DILocation(line: 234, column: 13, scope: !9418)
!9421 = !DILocation(line: 239, column: 17, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9405, file: !933, line: 239, column: 17)
!9423 = !DILocation(line: 239, column: 17, scope: !9405)
!9424 = !DILocation(line: 243, column: 22, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9426, file: !933, line: 243, column: 22)
!9426 = distinct !DILexicalBlock(scope: !9427, file: !933, line: 241, column: 55)
!9427 = distinct !DILexicalBlock(scope: !9422, file: !933, line: 241, column: 23)
!9428 = !DILocation(line: 243, column: 37, scope: !9425)
!9429 = !DILocation(line: 243, column: 22, scope: !9426)
!9430 = !DILocation(line: 246, column: 13, scope: !9426)
!9431 = !DILocation(line: 248, column: 13, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9433, file: !933, line: 246, column: 59)
!9433 = distinct !DILexicalBlock(scope: !9427, file: !933, line: 246, column: 24)
!9434 = !DILocation(line: 249, column: 23, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9436, file: !933, line: 248, column: 61)
!9436 = distinct !DILexicalBlock(scope: !9433, file: !933, line: 248, column: 24)
!9437 = !DILocation(line: 250, column: 13, scope: !9435)
!9438 = !DILocation(line: 254, column: 17, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9405, file: !933, line: 254, column: 17)
!9440 = !DILocation(line: 254, column: 17, scope: !9405)
!9441 = !DILocation(line: 258, column: 22, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9443, file: !933, line: 258, column: 22)
!9443 = distinct !DILexicalBlock(scope: !9444, file: !933, line: 256, column: 55)
!9444 = distinct !DILexicalBlock(scope: !9439, file: !933, line: 256, column: 23)
!9445 = !DILocation(line: 258, column: 37, scope: !9442)
!9446 = !DILocation(line: 258, column: 22, scope: !9443)
!9447 = !DILocation(line: 261, column: 13, scope: !9443)
!9448 = !DILocation(line: 263, column: 13, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9450, file: !933, line: 261, column: 59)
!9450 = distinct !DILexicalBlock(scope: !9444, file: !933, line: 261, column: 24)
!9451 = !DILocation(line: 264, column: 23, scope: !9452)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !933, line: 263, column: 61)
!9453 = distinct !DILexicalBlock(scope: !9450, file: !933, line: 263, column: 24)
!9454 = !DILocation(line: 265, column: 13, scope: !9452)
!9455 = !DILocation(line: 268, column: 13, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9457, file: !933, line: 268, column: 13)
!9457 = distinct !DILexicalBlock(scope: !9405, file: !933, line: 268, column: 13)
!9458 = distinct !{!9458, !9455, !9455}
!9459 = !DILocation(line: 272, column: 5, scope: !9397)
!9460 = !DILocation(line: 0, scope: !9405)
!9461 = !DILocation(line: 273, column: 1, scope: !9397)
!9462 = distinct !DISubprogram(name: "flash_config", scope: !933, file: !933, line: 357, type: !110, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9463)
!9463 = !{!9464, !9465, !9466, !9467}
!9464 = !DILocalVariable(name: "i", scope: !9462, file: !933, line: 360, type: !103)
!9465 = !DILocalVariable(name: "jedec", scope: !9462, file: !933, line: 361, type: !29)
!9466 = !DILocalVariable(name: "buf", scope: !9462, file: !933, line: 362, type: !9268)
!9467 = !DILocalVariable(name: "info", scope: !9462, file: !933, line: 363, type: !944)
!9468 = !DILocation(line: 362, column: 5, scope: !9462)
!9469 = !DILocation(line: 362, column: 19, scope: !9462)
!9470 = !DILocation(line: 377, column: 26, scope: !9462)
!9471 = !DILocation(line: 377, column: 24, scope: !9462)
!9472 = !DILocation(line: 380, column: 19, scope: !9462)
!9473 = !DILocation(line: 382, column: 5, scope: !9462)
!9474 = !DILocation(line: 383, column: 45, scope: !9462)
!9475 = !DILocation(line: 383, column: 30, scope: !9462)
!9476 = !DILocation(line: 383, column: 52, scope: !9462)
!9477 = !DILocation(line: 383, column: 77, scope: !9462)
!9478 = !DILocation(line: 383, column: 62, scope: !9462)
!9479 = !DILocation(line: 383, column: 84, scope: !9462)
!9480 = !DILocation(line: 383, column: 59, scope: !9462)
!9481 = !DILocation(line: 0, scope: !9462)
!9482 = !DILocation(line: 385, column: 5, scope: !9462)
!9483 = !DILocation(line: 387, column: 5, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9462, file: !933, line: 387, column: 5)
!9485 = !DILocation(line: 388, column: 17, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9487, file: !933, line: 387, column: 70)
!9487 = distinct !DILexicalBlock(scope: !9484, file: !933, line: 387, column: 5)
!9488 = !DILocation(line: 389, column: 19, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9486, file: !933, line: 389, column: 13)
!9490 = !DILocation(line: 389, column: 25, scope: !9489)
!9491 = !DILocation(line: 389, column: 22, scope: !9489)
!9492 = !DILocation(line: 389, column: 32, scope: !9489)
!9493 = !DILocation(line: 389, column: 41, scope: !9489)
!9494 = !DILocation(line: 389, column: 50, scope: !9489)
!9495 = !DILocation(line: 389, column: 13, scope: !9486)
!9496 = !DILocation(line: 390, column: 13, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9489, file: !933, line: 389, column: 60)
!9498 = !DILocation(line: 391, column: 27, scope: !9497)
!9499 = !DILocation(line: 392, column: 26, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9497, file: !933, line: 392, column: 17)
!9501 = !DILocation(line: 392, column: 17, scope: !9497)
!9502 = !DILocation(line: 394, column: 33, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9500, file: !933, line: 394, column: 24)
!9504 = !DILocation(line: 394, column: 24, scope: !9500)
!9505 = !DILocation(line: 396, column: 33, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9503, file: !933, line: 396, column: 24)
!9507 = !DILocation(line: 396, column: 24, scope: !9503)
!9508 = !DILocation(line: 398, column: 33, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9506, file: !933, line: 398, column: 24)
!9510 = !DILocation(line: 398, column: 24, scope: !9506)
!9511 = !DILocation(line: 399, column: 34, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9509, file: !933, line: 398, column: 52)
!9513 = !DILocation(line: 404, column: 9, scope: !9462)
!9514 = !DILocation(line: 0, scope: !9500)
!9515 = !DILocation(line: 387, column: 66, scope: !9487)
!9516 = !DILocation(line: 387, column: 19, scope: !9487)
!9517 = distinct !{!9517, !9483, !9518}
!9518 = !DILocation(line: 402, column: 5, scope: !9484)
!9519 = !DILocation(line: 404, column: 9, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9462, file: !933, line: 404, column: 9)
!9521 = !DILocation(line: 404, column: 26, scope: !9520)
!9522 = !DILocation(line: 405, column: 51, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9520, file: !933, line: 404, column: 47)
!9524 = !DILocation(line: 405, column: 23, scope: !9523)
!9525 = !DILocation(line: 407, column: 19, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9523, file: !933, line: 407, column: 13)
!9527 = !DILocation(line: 407, column: 25, scope: !9526)
!9528 = !DILocation(line: 407, column: 22, scope: !9526)
!9529 = !DILocation(line: 407, column: 32, scope: !9526)
!9530 = !DILocation(line: 407, column: 41, scope: !9526)
!9531 = !DILocation(line: 407, column: 50, scope: !9526)
!9532 = !DILocation(line: 407, column: 13, scope: !9523)
!9533 = !DILocation(line: 411, column: 13, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9526, file: !933, line: 410, column: 16)
!9535 = !DILocation(line: 412, column: 13, scope: !9534)
!9536 = !DILocation(line: 414, column: 5, scope: !9523)
!9537 = !DILocation(line: 416, column: 10, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9462, file: !933, line: 416, column: 9)
!9539 = !DILocation(line: 416, column: 9, scope: !9462)
!9540 = !DILocation(line: 417, column: 9, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9538, file: !933, line: 416, column: 25)
!9542 = !DILocation(line: 419, column: 23, scope: !9541)
!9543 = !DILocation(line: 420, column: 5, scope: !9541)
!9544 = !DILocation(line: 422, column: 1, scope: !9462)
!9545 = distinct !DISubprogram(name: "flash_init", scope: !933, file: !933, line: 425, type: !1712, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9546)
!9546 = !{!9547, !9548, !9549, !9550, !9551}
!9547 = !DILocalVariable(name: "security_enable", arg: 1, scope: !9545, file: !933, line: 425, type: !103)
!9548 = !DILocalVariable(name: "i", scope: !9545, file: !933, line: 427, type: !103)
!9549 = !DILocalVariable(name: "jedec", scope: !9545, file: !933, line: 428, type: !29)
!9550 = !DILocalVariable(name: "buf", scope: !9545, file: !933, line: 429, type: !9268)
!9551 = !DILocalVariable(name: "info", scope: !9545, file: !933, line: 430, type: !944)
!9552 = !DILocation(line: 0, scope: !9545)
!9553 = !DILocation(line: 429, column: 5, scope: !9545)
!9554 = !DILocation(line: 429, column: 19, scope: !9545)
!9555 = !DILocation(line: 436, column: 5, scope: !9545)
!9556 = !DILocation(line: 438, column: 26, scope: !9545)
!9557 = !DILocation(line: 438, column: 24, scope: !9545)
!9558 = !DILocation(line: 440, column: 5, scope: !9545)
!9559 = !DILocation(line: 442, column: 19, scope: !9545)
!9560 = !DILocation(line: 444, column: 5, scope: !9545)
!9561 = !DILocation(line: 445, column: 45, scope: !9545)
!9562 = !DILocation(line: 445, column: 30, scope: !9545)
!9563 = !DILocation(line: 445, column: 52, scope: !9545)
!9564 = !DILocation(line: 445, column: 77, scope: !9545)
!9565 = !DILocation(line: 445, column: 62, scope: !9545)
!9566 = !DILocation(line: 445, column: 84, scope: !9545)
!9567 = !DILocation(line: 445, column: 59, scope: !9545)
!9568 = !DILocation(line: 447, column: 5, scope: !9545)
!9569 = !DILocation(line: 449, column: 5, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9545, file: !933, line: 449, column: 5)
!9571 = !DILocation(line: 450, column: 17, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9573, file: !933, line: 449, column: 70)
!9573 = distinct !DILexicalBlock(scope: !9570, file: !933, line: 449, column: 5)
!9574 = !DILocation(line: 451, column: 19, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9572, file: !933, line: 451, column: 13)
!9576 = !DILocation(line: 451, column: 25, scope: !9575)
!9577 = !DILocation(line: 451, column: 22, scope: !9575)
!9578 = !DILocation(line: 451, column: 32, scope: !9575)
!9579 = !DILocation(line: 451, column: 41, scope: !9575)
!9580 = !DILocation(line: 451, column: 50, scope: !9575)
!9581 = !DILocation(line: 451, column: 13, scope: !9572)
!9582 = !DILocation(line: 452, column: 13, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9575, file: !933, line: 451, column: 60)
!9584 = !DILocation(line: 453, column: 27, scope: !9583)
!9585 = !DILocation(line: 454, column: 9, scope: !9583)
!9586 = !DILocation(line: 449, column: 66, scope: !9573)
!9587 = !DILocation(line: 449, column: 19, scope: !9573)
!9588 = distinct !{!9588, !9569, !9589}
!9589 = !DILocation(line: 455, column: 5, scope: !9570)
!9590 = !DILocation(line: 457, column: 10, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9545, file: !933, line: 457, column: 9)
!9592 = !DILocation(line: 457, column: 9, scope: !9545)
!9593 = !DILocation(line: 458, column: 9, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9591, file: !933, line: 457, column: 25)
!9595 = !DILocation(line: 460, column: 23, scope: !9594)
!9596 = !DILocation(line: 461, column: 5, scope: !9594)
!9597 = !DILocation(line: 462, column: 1, scope: !9545)
!9598 = distinct !DISubprogram(name: "flash_reset", scope: !933, file: !933, line: 170, type: !110, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !2013)
!9599 = !DILocation(line: 172, column: 5, scope: !9598)
!9600 = !DILocation(line: 173, column: 5, scope: !9598)
!9601 = !DILocation(line: 176, column: 5, scope: !9598)
!9602 = !DILocation(line: 177, column: 5, scope: !9598)
!9603 = !DILocation(line: 179, column: 5, scope: !9598)
!9604 = distinct !DISubprogram(name: "flash_wait_ready", scope: !933, file: !933, line: 469, type: !9605, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9607)
!9605 = !DISubroutineType(types: !9606)
!9606 = !{!103, !103}
!9607 = !{!9608, !9609, !9610}
!9608 = !DILocalVariable(name: "sleep_ms", arg: 1, scope: !9604, file: !933, line: 469, type: !103)
!9609 = !DILocalVariable(name: "count", scope: !9604, file: !933, line: 471, type: !103)
!9610 = !DILocalVariable(name: "sr", scope: !9604, file: !933, line: 472, type: !98)
!9611 = !DILocation(line: 0, scope: !9604)
!9612 = !DILocation(line: 472, column: 5, scope: !9604)
!9613 = !DILocation(line: 472, column: 19, scope: !9604)
!9614 = !DILocation(line: 479, column: 28, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9616, file: !933, line: 479, column: 5)
!9616 = distinct !DILexicalBlock(scope: !9604, file: !933, line: 479, column: 5)
!9617 = !DILocation(line: 479, column: 5, scope: !9616)
!9618 = !DILocation(line: 480, column: 14, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !933, line: 480, column: 13)
!9620 = distinct !DILexicalBlock(scope: !9615, file: !933, line: 479, column: 64)
!9621 = !DILocation(line: 480, column: 34, scope: !9619)
!9622 = !DILocation(line: 480, column: 13, scope: !9620)
!9623 = !DILocation(line: 482, column: 22, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9619, file: !933, line: 482, column: 20)
!9625 = !DILocation(line: 482, column: 25, scope: !9624)
!9626 = !DILocation(line: 482, column: 20, scope: !9619)
!9627 = !DILocation(line: 493, column: 1, scope: !9604)
!9628 = !DILocation(line: 483, column: 13, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9624, file: !933, line: 482, column: 36)
!9630 = !DILocation(line: 486, column: 9, scope: !9620)
!9631 = !DILocation(line: 479, column: 60, scope: !9615)
!9632 = distinct !{!9632, !9617, !9633}
!9633 = !DILocation(line: 488, column: 5, scope: !9616)
!9634 = !DILocation(line: 491, column: 5, scope: !9604)
!9635 = distinct !DISubprogram(name: "flash_read_sr", scope: !933, file: !933, line: 623, type: !9636, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9638)
!9636 = !DISubroutineType(types: !9637)
!9637 = !{!103, !926}
!9638 = !{!9639, !9640, !9641}
!9639 = !DILocalVariable(name: "val", arg: 1, scope: !9635, file: !933, line: 623, type: !926)
!9640 = !DILocalVariable(name: "retval", scope: !9635, file: !933, line: 625, type: !103)
!9641 = !DILocalVariable(name: "code", scope: !9635, file: !933, line: 626, type: !98)
!9642 = !DILocation(line: 0, scope: !9635)
!9643 = !DILocation(line: 626, column: 5, scope: !9635)
!9644 = !DILocation(line: 626, column: 19, scope: !9635)
!9645 = !DILocation(line: 628, column: 14, scope: !9635)
!9646 = !DILocation(line: 629, column: 16, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9635, file: !933, line: 629, column: 9)
!9648 = !DILocation(line: 634, column: 1, scope: !9635)
!9649 = distinct !DISubprogram(name: "flash_read_manu_id", scope: !933, file: !933, line: 505, type: !9343, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9650)
!9650 = !{!9651, !9652, !9653, !9654}
!9651 = !DILocalVariable(name: "buf", arg: 1, scope: !9649, file: !933, line: 505, type: !926)
!9652 = !DILocalVariable(name: "buf_size", arg: 2, scope: !9649, file: !933, line: 505, type: !103)
!9653 = !DILocalVariable(name: "code", scope: !9649, file: !933, line: 507, type: !970)
!9654 = !DILocalVariable(name: "rc", scope: !9649, file: !933, line: 508, type: !103)
!9655 = !DILocation(line: 0, scope: !9649)
!9656 = !DILocation(line: 507, column: 5, scope: !9649)
!9657 = !DILocation(line: 507, column: 19, scope: !9649)
!9658 = !DILocation(line: 510, column: 10, scope: !9649)
!9659 = !DILocation(line: 513, column: 1, scope: !9649)
!9660 = !DILocation(line: 512, column: 5, scope: !9649)
!9661 = distinct !DISubprogram(name: "flash_read_manu_id_quad", scope: !933, file: !933, line: 515, type: !9343, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9662)
!9662 = !{!9663, !9664, !9665, !9666}
!9663 = !DILocalVariable(name: "buf", arg: 1, scope: !9661, file: !933, line: 515, type: !926)
!9664 = !DILocalVariable(name: "buf_size", arg: 2, scope: !9661, file: !933, line: 515, type: !103)
!9665 = !DILocalVariable(name: "code", scope: !9661, file: !933, line: 517, type: !970)
!9666 = !DILocalVariable(name: "rc", scope: !9661, file: !933, line: 518, type: !103)
!9667 = !DILocation(line: 0, scope: !9661)
!9668 = !DILocation(line: 517, column: 5, scope: !9661)
!9669 = !DILocation(line: 517, column: 19, scope: !9661)
!9670 = !DILocation(line: 520, column: 10, scope: !9661)
!9671 = !DILocation(line: 523, column: 1, scope: !9661)
!9672 = !DILocation(line: 522, column: 5, scope: !9661)
!9673 = distinct !DISubprogram(name: "flash_read", scope: !933, file: !933, line: 526, type: !9674, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9676)
!9674 = !DISubroutineType(types: !9675)
!9675 = !{!103, !926, !6, !103}
!9676 = !{!9677, !9678, !9679, !9680, !9681}
!9677 = !DILocalVariable(name: "buf", arg: 1, scope: !9673, file: !933, line: 526, type: !926)
!9678 = !DILocalVariable(name: "from", arg: 2, scope: !9673, file: !933, line: 526, type: !6)
!9679 = !DILocalVariable(name: "len", arg: 3, scope: !9673, file: !933, line: 526, type: !103)
!9680 = !DILocalVariable(name: "cmd", scope: !9673, file: !933, line: 528, type: !970)
!9681 = !DILocalVariable(name: "rdlen", scope: !9673, file: !933, line: 529, type: !103)
!9682 = !DILocation(line: 0, scope: !9673)
!9683 = !DILocation(line: 528, column: 5, scope: !9673)
!9684 = !DILocation(line: 528, column: 19, scope: !9673)
!9685 = !DILocation(line: 532, column: 13, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9673, file: !933, line: 532, column: 9)
!9687 = !DILocation(line: 532, column: 9, scope: !9673)
!9688 = !DILocation(line: 537, column: 9, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9673, file: !933, line: 537, column: 9)
!9690 = !DILocation(line: 542, column: 22, scope: !9673)
!9691 = !DILocation(line: 543, column: 12, scope: !9673)
!9692 = !DILocation(line: 544, column: 19, scope: !9673)
!9693 = !DILocation(line: 544, column: 14, scope: !9673)
!9694 = !DILocation(line: 544, column: 5, scope: !9673)
!9695 = !DILocation(line: 544, column: 12, scope: !9673)
!9696 = !DILocation(line: 545, column: 19, scope: !9673)
!9697 = !DILocation(line: 545, column: 14, scope: !9673)
!9698 = !DILocation(line: 545, column: 5, scope: !9673)
!9699 = !DILocation(line: 545, column: 12, scope: !9673)
!9700 = !DILocation(line: 546, column: 14, scope: !9673)
!9701 = !DILocation(line: 546, column: 5, scope: !9673)
!9702 = !DILocation(line: 546, column: 12, scope: !9673)
!9703 = !DILocation(line: 548, column: 13, scope: !9673)
!9704 = !DILocation(line: 553, column: 5, scope: !9673)
!9705 = !DILocation(line: 554, column: 1, scope: !9673)
!9706 = distinct !DISubprogram(name: "flash_fast_read", scope: !933, file: !933, line: 557, type: !9707, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9709)
!9707 = !DISubroutineType(types: !9708)
!9708 = !{!103, !926, !6, !103, !103}
!9709 = !{!9710, !9711, !9712, !9713, !9714, !9716, !9717, !9718}
!9710 = !DILocalVariable(name: "buf", arg: 1, scope: !9706, file: !933, line: 557, type: !926)
!9711 = !DILocalVariable(name: "from", arg: 2, scope: !9706, file: !933, line: 557, type: !6)
!9712 = !DILocalVariable(name: "len", arg: 3, scope: !9706, file: !933, line: 557, type: !103)
!9713 = !DILocalVariable(name: "dummy_cycle", arg: 4, scope: !9706, file: !933, line: 557, type: !103)
!9714 = !DILocalVariable(name: "cmd", scope: !9706, file: !933, line: 559, type: !9715)
!9715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 256, elements: !1722)
!9716 = !DILocalVariable(name: "cmd_len", scope: !9706, file: !933, line: 560, type: !103)
!9717 = !DILocalVariable(name: "rdlen", scope: !9706, file: !933, line: 561, type: !103)
!9718 = !DILocalVariable(name: "i", scope: !9706, file: !933, line: 561, type: !103)
!9719 = !DILocation(line: 0, scope: !9706)
!9720 = !DILocation(line: 559, column: 5, scope: !9706)
!9721 = !DILocation(line: 559, column: 19, scope: !9706)
!9722 = !DILocation(line: 564, column: 13, scope: !9723)
!9723 = distinct !DILexicalBlock(scope: !9706, file: !933, line: 564, column: 9)
!9724 = !DILocation(line: 564, column: 9, scope: !9706)
!9725 = !DILocation(line: 569, column: 9, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9706, file: !933, line: 569, column: 9)
!9727 = !DILocation(line: 574, column: 12, scope: !9706)
!9728 = !DILocation(line: 575, column: 19, scope: !9706)
!9729 = !DILocation(line: 575, column: 14, scope: !9706)
!9730 = !DILocation(line: 575, column: 5, scope: !9706)
!9731 = !DILocation(line: 575, column: 12, scope: !9706)
!9732 = !DILocation(line: 576, column: 19, scope: !9706)
!9733 = !DILocation(line: 576, column: 14, scope: !9706)
!9734 = !DILocation(line: 576, column: 5, scope: !9706)
!9735 = !DILocation(line: 576, column: 12, scope: !9706)
!9736 = !DILocation(line: 577, column: 14, scope: !9706)
!9737 = !DILocation(line: 577, column: 5, scope: !9706)
!9738 = !DILocation(line: 577, column: 12, scope: !9706)
!9739 = !DILocation(line: 580, column: 19, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !933, line: 580, column: 5)
!9741 = distinct !DILexicalBlock(scope: !9706, file: !933, line: 580, column: 5)
!9742 = !DILocation(line: 580, column: 5, scope: !9741)
!9743 = !DILocation(line: 581, column: 15, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9740, file: !933, line: 580, column: 62)
!9745 = !DILocation(line: 581, column: 9, scope: !9744)
!9746 = !DILocation(line: 581, column: 20, scope: !9744)
!9747 = !DILocation(line: 580, column: 58, scope: !9740)
!9748 = !DILocation(line: 580, column: 33, scope: !9740)
!9749 = distinct !{!9749, !9742, !9750}
!9750 = !DILocation(line: 583, column: 5, scope: !9741)
!9751 = !DILocation(line: 585, column: 13, scope: !9706)
!9752 = !DILocation(line: 590, column: 5, scope: !9706)
!9753 = !DILocation(line: 591, column: 1, scope: !9706)
!9754 = distinct !DISubprogram(name: "flash_read_sr2", scope: !933, file: !933, line: 636, type: !9636, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9755)
!9755 = !{!9756, !9757, !9758}
!9756 = !DILocalVariable(name: "val", arg: 1, scope: !9754, file: !933, line: 636, type: !926)
!9757 = !DILocalVariable(name: "retval", scope: !9754, file: !933, line: 638, type: !103)
!9758 = !DILocalVariable(name: "code", scope: !9754, file: !933, line: 639, type: !98)
!9759 = !DILocation(line: 0, scope: !9754)
!9760 = !DILocation(line: 639, column: 5, scope: !9754)
!9761 = !DILocation(line: 641, column: 9, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9754, file: !933, line: 641, column: 9)
!9763 = !DILocation(line: 641, column: 45, scope: !9762)
!9764 = !DILocation(line: 643, column: 14, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9762, file: !933, line: 641, column: 80)
!9766 = !DILocation(line: 644, column: 5, scope: !9765)
!9767 = !DILocation(line: 646, column: 14, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !933, line: 644, column: 50)
!9769 = distinct !DILexicalBlock(scope: !9762, file: !933, line: 644, column: 16)
!9770 = !DILocation(line: 647, column: 5, scope: !9768)
!9771 = !DILocation(line: 649, column: 14, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9773, file: !933, line: 647, column: 52)
!9773 = distinct !DILexicalBlock(scope: !9769, file: !933, line: 647, column: 16)
!9774 = !DILocation(line: 650, column: 5, scope: !9772)
!9775 = !DILocation(line: 652, column: 16, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !933, line: 650, column: 54)
!9777 = distinct !DILexicalBlock(scope: !9773, file: !933, line: 650, column: 16)
!9778 = !DILocation(line: 652, column: 14, scope: !9776)
!9779 = !DILocation(line: 653, column: 5, scope: !9776)
!9780 = !DILocation(line: 655, column: 9, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9777, file: !933, line: 654, column: 10)
!9782 = !DILocation(line: 656, column: 14, scope: !9781)
!9783 = !DILocation(line: 659, column: 14, scope: !9754)
!9784 = !DILocation(line: 660, column: 16, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9754, file: !933, line: 660, column: 9)
!9786 = !DILocation(line: 665, column: 1, scope: !9754)
!9787 = distinct !DISubprogram(name: "flash_unprotect", scope: !933, file: !933, line: 667, type: !8910, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9788)
!9788 = !{!9789}
!9789 = !DILocalVariable(name: "sr", scope: !9787, file: !933, line: 669, type: !98)
!9790 = !DILocation(line: 669, column: 5, scope: !9787)
!9791 = !DILocation(line: 0, scope: !9787)
!9792 = !DILocation(line: 669, column: 19, scope: !9787)
!9793 = !DILocation(line: 671, column: 9, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9787, file: !933, line: 671, column: 9)
!9795 = !DILocation(line: 671, column: 28, scope: !9794)
!9796 = !DILocation(line: 671, column: 9, scope: !9787)
!9797 = !DILocation(line: 676, column: 10, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9787, file: !933, line: 676, column: 9)
!9799 = !DILocation(line: 676, column: 13, scope: !9798)
!9800 = !DILocation(line: 676, column: 43, scope: !9798)
!9801 = !DILocation(line: 676, column: 9, scope: !9787)
!9802 = !DILocation(line: 677, column: 12, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9798, file: !933, line: 676, column: 49)
!9804 = !DILocation(line: 678, column: 9, scope: !9803)
!9805 = !DILocation(line: 679, column: 5, scope: !9803)
!9806 = !DILocation(line: 681, column: 1, scope: !9787)
!9807 = distinct !DISubprogram(name: "flash_write_sr", scope: !933, file: !933, line: 609, type: !9636, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9808)
!9808 = !{!9809, !9810, !9811}
!9809 = !DILocalVariable(name: "val", arg: 1, scope: !9807, file: !933, line: 609, type: !926)
!9810 = !DILocalVariable(name: "retval", scope: !9807, file: !933, line: 611, type: !103)
!9811 = !DILocalVariable(name: "code", scope: !9807, file: !933, line: 612, type: !98)
!9812 = !DILocation(line: 0, scope: !9807)
!9813 = !DILocation(line: 612, column: 5, scope: !9807)
!9814 = !DILocation(line: 612, column: 20, scope: !9807)
!9815 = !DILocation(line: 614, column: 14, scope: !9807)
!9816 = !DILocation(line: 621, column: 1, scope: !9807)
!9817 = distinct !DISubprogram(name: "flash_protect", scope: !933, file: !933, line: 686, type: !8910, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9818)
!9818 = !{!9819}
!9819 = !DILocalVariable(name: "sr", scope: !9817, file: !933, line: 688, type: !98)
!9820 = !DILocation(line: 688, column: 5, scope: !9817)
!9821 = !DILocation(line: 0, scope: !9817)
!9822 = !DILocation(line: 688, column: 19, scope: !9817)
!9823 = !DILocation(line: 690, column: 9, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9817, file: !933, line: 690, column: 9)
!9825 = !DILocation(line: 690, column: 28, scope: !9824)
!9826 = !DILocation(line: 690, column: 9, scope: !9817)
!9827 = !DILocation(line: 695, column: 8, scope: !9817)
!9828 = !DILocation(line: 696, column: 5, scope: !9817)
!9829 = !DILocation(line: 697, column: 5, scope: !9817)
!9830 = !DILocation(line: 698, column: 1, scope: !9817)
!9831 = distinct !DISubprogram(name: "flash_write_enable", scope: !933, file: !933, line: 701, type: !8910, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9832)
!9832 = !{!9833}
!9833 = !DILocalVariable(name: "code", scope: !9831, file: !933, line: 703, type: !98)
!9834 = !DILocation(line: 703, column: 5, scope: !9831)
!9835 = !DILocation(line: 0, scope: !9831)
!9836 = !DILocation(line: 703, column: 19, scope: !9831)
!9837 = !DILocation(line: 704, column: 12, scope: !9831)
!9838 = !DILocation(line: 705, column: 1, scope: !9831)
!9839 = !DILocation(line: 704, column: 5, scope: !9831)
!9840 = distinct !DISubprogram(name: "flash_write_disable", scope: !933, file: !933, line: 707, type: !8910, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9841)
!9841 = !{!9842}
!9842 = !DILocalVariable(name: "code", scope: !9840, file: !933, line: 709, type: !98)
!9843 = !DILocation(line: 709, column: 5, scope: !9840)
!9844 = !DILocation(line: 0, scope: !9840)
!9845 = !DILocation(line: 709, column: 19, scope: !9840)
!9846 = !DILocation(line: 710, column: 12, scope: !9840)
!9847 = !DILocation(line: 711, column: 1, scope: !9840)
!9848 = !DILocation(line: 710, column: 5, scope: !9840)
!9849 = distinct !DISubprogram(name: "flash_erase_sector", scope: !933, file: !933, line: 713, type: !9850, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9852)
!9850 = !DISubroutineType(types: !9851)
!9851 = !{!103, !6}
!9852 = !{!9853, !9854, !9855, !9856}
!9853 = !DILocalVariable(name: "offset", arg: 1, scope: !9849, file: !933, line: 713, type: !6)
!9854 = !DILocalVariable(name: "buf", scope: !9849, file: !933, line: 715, type: !9268)
!9855 = !DILocalVariable(name: "savedMask", scope: !9849, file: !933, line: 716, type: !38)
!9856 = !DILocalVariable(name: "result", scope: !9849, file: !933, line: 717, type: !1233)
!9857 = !DILocation(line: 0, scope: !9849)
!9858 = !DILocation(line: 715, column: 5, scope: !9849)
!9859 = !DILocation(line: 715, column: 19, scope: !9849)
!9860 = !DILocation(line: 720, column: 9, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9849, file: !933, line: 720, column: 9)
!9862 = !DILocation(line: 724, column: 22, scope: !9849)
!9863 = !DILocation(line: 725, column: 5, scope: !9849)
!9864 = !DILocation(line: 726, column: 18, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9849, file: !933, line: 725, column: 8)
!9866 = !DILocation(line: 727, column: 19, scope: !9849)
!9867 = !DILocation(line: 727, column: 5, scope: !9865)
!9868 = distinct !{!9868, !9863, !9869}
!9869 = !DILocation(line: 727, column: 28, scope: !9849)
!9870 = !DILocation(line: 729, column: 17, scope: !9849)
!9871 = !DILocation(line: 732, column: 12, scope: !9849)
!9872 = !DILocation(line: 733, column: 21, scope: !9849)
!9873 = !DILocation(line: 733, column: 14, scope: !9849)
!9874 = !DILocation(line: 733, column: 5, scope: !9849)
!9875 = !DILocation(line: 733, column: 12, scope: !9849)
!9876 = !DILocation(line: 734, column: 21, scope: !9849)
!9877 = !DILocation(line: 734, column: 14, scope: !9849)
!9878 = !DILocation(line: 734, column: 5, scope: !9849)
!9879 = !DILocation(line: 734, column: 12, scope: !9849)
!9880 = !DILocation(line: 735, column: 14, scope: !9849)
!9881 = !DILocation(line: 735, column: 5, scope: !9849)
!9882 = !DILocation(line: 735, column: 12, scope: !9849)
!9883 = !DILocation(line: 736, column: 5, scope: !9849)
!9884 = !DILocation(line: 737, column: 5, scope: !9849)
!9885 = !DILocation(line: 738, column: 5, scope: !9849)
!9886 = !DILocation(line: 740, column: 5, scope: !9849)
!9887 = !DILocation(line: 741, column: 18, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9849, file: !933, line: 740, column: 8)
!9889 = !DILocation(line: 742, column: 19, scope: !9849)
!9890 = !DILocation(line: 742, column: 5, scope: !9888)
!9891 = distinct !{!9891, !9886, !9892}
!9892 = !DILocation(line: 742, column: 28, scope: !9849)
!9893 = !DILocation(line: 744, column: 5, scope: !9849)
!9894 = !DILocation(line: 746, column: 1, scope: !9849)
!9895 = distinct !DISubprogram(name: "flash_erase_sector_32k", scope: !933, file: !933, line: 748, type: !9850, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9896)
!9896 = !{!9897, !9898, !9899, !9900}
!9897 = !DILocalVariable(name: "offset", arg: 1, scope: !9895, file: !933, line: 748, type: !6)
!9898 = !DILocalVariable(name: "buf", scope: !9895, file: !933, line: 750, type: !9268)
!9899 = !DILocalVariable(name: "savedMask", scope: !9895, file: !933, line: 751, type: !38)
!9900 = !DILocalVariable(name: "result", scope: !9895, file: !933, line: 752, type: !1233)
!9901 = !DILocation(line: 0, scope: !9895)
!9902 = !DILocation(line: 750, column: 5, scope: !9895)
!9903 = !DILocation(line: 750, column: 19, scope: !9895)
!9904 = !DILocation(line: 755, column: 9, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9895, file: !933, line: 755, column: 9)
!9906 = !DILocation(line: 759, column: 22, scope: !9895)
!9907 = !DILocation(line: 760, column: 5, scope: !9895)
!9908 = !DILocation(line: 761, column: 18, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9895, file: !933, line: 760, column: 8)
!9910 = !DILocation(line: 762, column: 19, scope: !9895)
!9911 = !DILocation(line: 762, column: 5, scope: !9909)
!9912 = distinct !{!9912, !9907, !9913}
!9913 = !DILocation(line: 762, column: 28, scope: !9895)
!9914 = !DILocation(line: 764, column: 17, scope: !9895)
!9915 = !DILocation(line: 765, column: 12, scope: !9895)
!9916 = !DILocation(line: 766, column: 21, scope: !9895)
!9917 = !DILocation(line: 766, column: 14, scope: !9895)
!9918 = !DILocation(line: 766, column: 5, scope: !9895)
!9919 = !DILocation(line: 766, column: 12, scope: !9895)
!9920 = !DILocation(line: 767, column: 21, scope: !9895)
!9921 = !DILocation(line: 767, column: 14, scope: !9895)
!9922 = !DILocation(line: 767, column: 5, scope: !9895)
!9923 = !DILocation(line: 767, column: 12, scope: !9895)
!9924 = !DILocation(line: 768, column: 14, scope: !9895)
!9925 = !DILocation(line: 768, column: 5, scope: !9895)
!9926 = !DILocation(line: 768, column: 12, scope: !9895)
!9927 = !DILocation(line: 769, column: 5, scope: !9895)
!9928 = !DILocation(line: 770, column: 5, scope: !9895)
!9929 = !DILocation(line: 771, column: 5, scope: !9895)
!9930 = !DILocation(line: 772, column: 18, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9895, file: !933, line: 771, column: 8)
!9932 = !DILocation(line: 773, column: 19, scope: !9895)
!9933 = !DILocation(line: 773, column: 5, scope: !9931)
!9934 = distinct !{!9934, !9929, !9935}
!9935 = !DILocation(line: 773, column: 28, scope: !9895)
!9936 = !DILocation(line: 775, column: 5, scope: !9895)
!9937 = !DILocation(line: 777, column: 5, scope: !9895)
!9938 = !DILocation(line: 779, column: 1, scope: !9895)
!9939 = distinct !DISubprogram(name: "flash_erase_page", scope: !933, file: !933, line: 781, type: !9850, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9940)
!9940 = !{!9941, !9942, !9943, !9944}
!9941 = !DILocalVariable(name: "offset", arg: 1, scope: !9939, file: !933, line: 781, type: !6)
!9942 = !DILocalVariable(name: "buf", scope: !9939, file: !933, line: 783, type: !9268)
!9943 = !DILocalVariable(name: "savedMask", scope: !9939, file: !933, line: 784, type: !38)
!9944 = !DILocalVariable(name: "result", scope: !9939, file: !933, line: 785, type: !1233)
!9945 = !DILocation(line: 0, scope: !9939)
!9946 = !DILocation(line: 783, column: 5, scope: !9939)
!9947 = !DILocation(line: 783, column: 19, scope: !9939)
!9948 = !DILocation(line: 788, column: 9, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9939, file: !933, line: 788, column: 9)
!9950 = !DILocation(line: 792, column: 22, scope: !9939)
!9951 = !DILocation(line: 793, column: 5, scope: !9939)
!9952 = !DILocation(line: 794, column: 18, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9939, file: !933, line: 793, column: 8)
!9954 = !DILocation(line: 795, column: 19, scope: !9939)
!9955 = !DILocation(line: 795, column: 5, scope: !9953)
!9956 = distinct !{!9956, !9951, !9957}
!9957 = !DILocation(line: 795, column: 28, scope: !9939)
!9958 = !DILocation(line: 798, column: 17, scope: !9939)
!9959 = !DILocation(line: 799, column: 12, scope: !9939)
!9960 = !DILocation(line: 800, column: 21, scope: !9939)
!9961 = !DILocation(line: 800, column: 14, scope: !9939)
!9962 = !DILocation(line: 800, column: 5, scope: !9939)
!9963 = !DILocation(line: 800, column: 12, scope: !9939)
!9964 = !DILocation(line: 801, column: 21, scope: !9939)
!9965 = !DILocation(line: 801, column: 14, scope: !9939)
!9966 = !DILocation(line: 801, column: 5, scope: !9939)
!9967 = !DILocation(line: 801, column: 12, scope: !9939)
!9968 = !DILocation(line: 802, column: 14, scope: !9939)
!9969 = !DILocation(line: 802, column: 5, scope: !9939)
!9970 = !DILocation(line: 802, column: 12, scope: !9939)
!9971 = !DILocation(line: 803, column: 5, scope: !9939)
!9972 = !DILocation(line: 805, column: 5, scope: !9939)
!9973 = !DILocation(line: 806, column: 5, scope: !9939)
!9974 = !DILocation(line: 808, column: 5, scope: !9939)
!9975 = !DILocation(line: 809, column: 18, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9939, file: !933, line: 808, column: 8)
!9977 = !DILocation(line: 810, column: 19, scope: !9939)
!9978 = !DILocation(line: 810, column: 5, scope: !9976)
!9979 = distinct !{!9979, !9974, !9980}
!9980 = !DILocation(line: 810, column: 28, scope: !9939)
!9981 = !DILocation(line: 812, column: 5, scope: !9939)
!9982 = !DILocation(line: 814, column: 1, scope: !9939)
!9983 = distinct !DISubprogram(name: "flash_erase_chip", scope: !933, file: !933, line: 816, type: !8910, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !9984)
!9984 = !{!9985}
!9985 = !DILocalVariable(name: "buf", scope: !9983, file: !933, line: 818, type: !9268)
!9986 = !DILocation(line: 818, column: 5, scope: !9983)
!9987 = !DILocation(line: 818, column: 19, scope: !9983)
!9988 = !DILocation(line: 821, column: 9, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9983, file: !933, line: 821, column: 9)
!9990 = !DILocation(line: 825, column: 22, scope: !9983)
!9991 = !DILocation(line: 827, column: 5, scope: !9983)
!9992 = !DILocation(line: 828, column: 5, scope: !9983)
!9993 = !DILocation(line: 830, column: 12, scope: !9983)
!9994 = !DILocation(line: 832, column: 5, scope: !9983)
!9995 = !DILocation(line: 834, column: 9, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9983, file: !933, line: 834, column: 9)
!9997 = !DILocation(line: 838, column: 5, scope: !9983)
!9998 = !DILocation(line: 839, column: 22, scope: !9983)
!9999 = !DILocation(line: 841, column: 1, scope: !9983)
!10000 = distinct !DISubprogram(name: "flash_erase", scope: !933, file: !933, line: 844, type: !10001, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !10003)
!10001 = !DISubroutineType(types: !10002)
!10002 = !{!103, !6, !103}
!10003 = !{!10004, !10005}
!10004 = !DILocalVariable(name: "offs", arg: 1, scope: !10000, file: !933, line: 844, type: !6)
!10005 = !DILocalVariable(name: "len", arg: 2, scope: !10000, file: !933, line: 844, type: !103)
!10006 = !DILocation(line: 0, scope: !10000)
!10007 = !DILocation(line: 849, column: 9, scope: !10000)
!10008 = !DILocation(line: 855, column: 13, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10010, file: !933, line: 855, column: 13)
!10010 = distinct !DILexicalBlock(scope: !10000, file: !933, line: 854, column: 21)
!10011 = !DILocation(line: 859, column: 17, scope: !10010)
!10012 = !DILocation(line: 859, column: 32, scope: !10010)
!10013 = !DILocation(line: 859, column: 14, scope: !10010)
!10014 = !DILocation(line: 860, column: 13, scope: !10010)
!10015 = !DILocation(line: 854, column: 16, scope: !10000)
!10016 = !DILocation(line: 854, column: 5, scope: !10000)
!10017 = distinct !{!10017, !10016, !10018}
!10018 = !DILocation(line: 861, column: 5, scope: !10000)
!10019 = !DILocation(line: 864, column: 1, scope: !10000)
!10020 = distinct !DISubprogram(name: "flash_write", scope: !933, file: !933, line: 868, type: !10021, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !10023)
!10021 = !DISubroutineType(types: !10022)
!10022 = !{!103, !942, !6, !103}
!10023 = !{!10024, !10025, !10026, !10027, !10028, !10029, !10030, !10031, !10032, !10033, !10034, !10035, !10036, !10037}
!10024 = !DILocalVariable(name: "buf", arg: 1, scope: !10020, file: !933, line: 868, type: !942)
!10025 = !DILocalVariable(name: "to", arg: 2, scope: !10020, file: !933, line: 868, type: !6)
!10026 = !DILocalVariable(name: "len", arg: 3, scope: !10020, file: !933, line: 868, type: !103)
!10027 = !DILocalVariable(name: "page_offset", scope: !10020, file: !933, line: 870, type: !29)
!10028 = !DILocalVariable(name: "page_size", scope: !10020, file: !933, line: 870, type: !29)
!10029 = !DILocalVariable(name: "rc", scope: !10020, file: !933, line: 871, type: !103)
!10030 = !DILocalVariable(name: "retlen", scope: !10020, file: !933, line: 871, type: !103)
!10031 = !DILocalVariable(name: "mode", scope: !10020, file: !933, line: 872, type: !103)
!10032 = !DILocalVariable(name: "cmd", scope: !10020, file: !933, line: 873, type: !9268)
!10033 = !DILocalVariable(name: "result", scope: !10020, file: !933, line: 874, type: !1233)
!10034 = !DILocalVariable(name: "savedMask", scope: !10020, file: !933, line: 875, type: !38)
!10035 = !DILocalVariable(name: "To", scope: !10020, file: !933, line: 877, type: !38)
!10036 = !DILocalVariable(name: "Buf", scope: !10020, file: !933, line: 878, type: !3267)
!10037 = !DILocalVariable(name: "p_data_first", scope: !10020, file: !933, line: 879, type: !3267)
!10038 = !DILocation(line: 0, scope: !10020)
!10039 = !DILocation(line: 873, column: 5, scope: !10020)
!10040 = !DILocation(line: 873, column: 19, scope: !10020)
!10041 = !DILocation(line: 882, column: 13, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10020, file: !933, line: 882, column: 9)
!10043 = !DILocation(line: 882, column: 9, scope: !10020)
!10044 = !DILocation(line: 886, column: 12, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10020, file: !933, line: 886, column: 9)
!10046 = !DILocation(line: 886, column: 20, scope: !10045)
!10047 = !DILocation(line: 886, column: 35, scope: !10045)
!10048 = !DILocation(line: 886, column: 62, scope: !10045)
!10049 = !DILocation(line: 886, column: 45, scope: !10045)
!10050 = !DILocation(line: 886, column: 18, scope: !10045)
!10051 = !DILocation(line: 886, column: 9, scope: !10020)
!10052 = !DILocation(line: 891, column: 9, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10020, file: !933, line: 891, column: 9)
!10054 = !DILocation(line: 896, column: 18, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10020, file: !933, line: 895, column: 8)
!10056 = !DILocation(line: 897, column: 19, scope: !10020)
!10057 = !DILocation(line: 897, column: 5, scope: !10055)
!10058 = distinct !{!10058, !10059, !10060}
!10059 = !DILocation(line: 895, column: 5, scope: !10020)
!10060 = !DILocation(line: 897, column: 28, scope: !10020)
!10061 = !DILocation(line: 899, column: 22, scope: !10020)
!10062 = !DILocation(line: 901, column: 12, scope: !10020)
!10063 = !DILocation(line: 903, column: 15, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10020, file: !933, line: 903, column: 9)
!10065 = !DILocation(line: 903, column: 24, scope: !10064)
!10066 = !DILocation(line: 903, column: 27, scope: !10064)
!10067 = !DILocation(line: 903, column: 43, scope: !10064)
!10068 = !DILocation(line: 903, column: 9, scope: !10020)
!10069 = !DILocation(line: 0, scope: !10064)
!10070 = !DILocation(line: 913, column: 16, scope: !10020)
!10071 = !DILocation(line: 913, column: 5, scope: !10020)
!10072 = !DILocation(line: 910, column: 24, scope: !10020)
!10073 = !DILocation(line: 910, column: 22, scope: !10020)
!10074 = !DILocation(line: 952, column: 5, scope: !10020)
!10075 = !DILocation(line: 914, column: 21, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10020, file: !933, line: 913, column: 21)
!10077 = !DILocation(line: 919, column: 21, scope: !10076)
!10078 = !DILocation(line: 919, column: 18, scope: !10076)
!10079 = !DILocation(line: 919, column: 16, scope: !10076)
!10080 = !DILocation(line: 920, column: 21, scope: !10076)
!10081 = !DILocation(line: 920, column: 18, scope: !10076)
!10082 = !DILocation(line: 920, column: 16, scope: !10076)
!10083 = !DILocation(line: 921, column: 18, scope: !10076)
!10084 = !DILocation(line: 921, column: 16, scope: !10076)
!10085 = !DILocation(line: 923, column: 13, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10076, file: !933, line: 923, column: 13)
!10087 = !DILocation(line: 927, column: 9, scope: !10076)
!10088 = !DILocation(line: 928, column: 21, scope: !10076)
!10089 = !DILocation(line: 929, column: 9, scope: !10076)
!10090 = !DILocation(line: 930, column: 14, scope: !10076)
!10091 = !DILocation(line: 931, column: 9, scope: !10076)
!10092 = !DILocation(line: 933, column: 9, scope: !10076)
!10093 = !DILocation(line: 934, column: 86, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10076, file: !933, line: 933, column: 12)
!10095 = !DILocation(line: 934, column: 22, scope: !10094)
!10096 = !DILocation(line: 935, column: 20, scope: !10076)
!10097 = !DILocation(line: 935, column: 9, scope: !10094)
!10098 = distinct !{!10098, !10092, !10099}
!10099 = !DILocation(line: 935, column: 29, scope: !10076)
!10100 = !DILocation(line: 937, column: 16, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10076, file: !933, line: 937, column: 13)
!10102 = !DILocation(line: 937, column: 13, scope: !10076)
!10103 = !DILocation(line: 938, column: 20, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10101, file: !933, line: 937, column: 21)
!10105 = !DILocation(line: 939, column: 20, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10104, file: !933, line: 939, column: 17)
!10107 = !DILocation(line: 939, column: 17, scope: !10104)
!10108 = !DILocation(line: 941, column: 17, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10106, file: !933, line: 939, column: 33)
!10110 = !DILocation(line: 942, column: 17, scope: !10109)
!10111 = !DILocation(line: 947, column: 13, scope: !10076)
!10112 = distinct !{!10112, !10071, !10113}
!10113 = !DILocation(line: 950, column: 5, scope: !10020)
!10114 = !DILocation(line: 949, column: 13, scope: !10076)
!10115 = !DILocation(line: 948, column: 12, scope: !10076)
!10116 = !DILocation(line: 953, column: 18, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10020, file: !933, line: 952, column: 8)
!10118 = !DILocation(line: 954, column: 19, scope: !10020)
!10119 = !DILocation(line: 954, column: 5, scope: !10117)
!10120 = distinct !{!10120, !10074, !10121}
!10121 = !DILocation(line: 954, column: 28, scope: !10020)
!10122 = !DILocation(line: 956, column: 5, scope: !10020)
!10123 = !DILocation(line: 957, column: 5, scope: !10020)
!10124 = !DILocation(line: 958, column: 1, scope: !10020)
!10125 = distinct !DISubprogram(name: "flash_erase_write_security_crc", scope: !933, file: !933, line: 963, type: !9850, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !10126)
!10126 = !{!10127, !10128, !10129, !10130}
!10127 = !DILocalVariable(name: "to", arg: 1, scope: !10125, file: !933, line: 963, type: !6)
!10128 = !DILocalVariable(name: "len", scope: !10125, file: !933, line: 965, type: !103)
!10129 = !DILocalVariable(name: "rc", scope: !10125, file: !933, line: 965, type: !103)
!10130 = !DILocalVariable(name: "cmd", scope: !10125, file: !933, line: 966, type: !9268)
!10131 = !DILocation(line: 0, scope: !10125)
!10132 = !DILocation(line: 966, column: 5, scope: !10125)
!10133 = !DILocation(line: 966, column: 19, scope: !10125)
!10134 = !DILocation(line: 968, column: 12, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10125, file: !933, line: 968, column: 9)
!10136 = !DILocation(line: 968, column: 9, scope: !10125)
!10137 = !DILocation(line: 972, column: 12, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10125, file: !933, line: 972, column: 9)
!10139 = !DILocation(line: 972, column: 20, scope: !10138)
!10140 = !DILocation(line: 972, column: 35, scope: !10138)
!10141 = !DILocation(line: 972, column: 62, scope: !10138)
!10142 = !DILocation(line: 972, column: 45, scope: !10138)
!10143 = !DILocation(line: 972, column: 18, scope: !10138)
!10144 = !DILocation(line: 972, column: 9, scope: !10125)
!10145 = !DILocation(line: 976, column: 22, scope: !10125)
!10146 = !DILocation(line: 979, column: 9, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10125, file: !933, line: 979, column: 9)
!10148 = !DILocation(line: 983, column: 5, scope: !10125)
!10149 = !DILocation(line: 985, column: 12, scope: !10125)
!10150 = !DILocation(line: 986, column: 17, scope: !10125)
!10151 = !DILocation(line: 986, column: 14, scope: !10125)
!10152 = !DILocation(line: 986, column: 5, scope: !10125)
!10153 = !DILocation(line: 986, column: 12, scope: !10125)
!10154 = !DILocation(line: 987, column: 17, scope: !10125)
!10155 = !DILocation(line: 987, column: 14, scope: !10125)
!10156 = !DILocation(line: 987, column: 5, scope: !10125)
!10157 = !DILocation(line: 987, column: 12, scope: !10125)
!10158 = !DILocation(line: 988, column: 14, scope: !10125)
!10159 = !DILocation(line: 988, column: 5, scope: !10125)
!10160 = !DILocation(line: 988, column: 12, scope: !10125)
!10161 = !DILocation(line: 990, column: 5, scope: !10125)
!10162 = !DILocation(line: 991, column: 5, scope: !10125)
!10163 = !DILocation(line: 993, column: 10, scope: !10125)
!10164 = !DILocation(line: 994, column: 22, scope: !10125)
!10165 = !DILocation(line: 995, column: 5, scope: !10125)
!10166 = !DILocation(line: 996, column: 1, scope: !10125)
!10167 = distinct !DISubprogram(name: "flash_erase_write", scope: !933, file: !933, line: 998, type: !10021, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !10168)
!10168 = !{!10169, !10170, !10171, !10172, !10176, !10177, !10178, !10182, !10183, !10184}
!10169 = !DILocalVariable(name: "buf", arg: 1, scope: !10167, file: !933, line: 998, type: !942)
!10170 = !DILocalVariable(name: "offs", arg: 2, scope: !10167, file: !933, line: 998, type: !6)
!10171 = !DILocalVariable(name: "count", arg: 3, scope: !10167, file: !933, line: 998, type: !103)
!10172 = !DILocalVariable(name: "block", scope: !10167, file: !933, line: 1000, type: !10173)
!10173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 32768, elements: !10174)
!10174 = !{!10175}
!10175 = !DISubrange(count: 4096)
!10176 = !DILocalVariable(name: "blocksize", scope: !10167, file: !933, line: 1002, type: !103)
!10177 = !DILocalVariable(name: "blockmask", scope: !10167, file: !933, line: 1003, type: !103)
!10178 = !DILocalVariable(name: "piece", scope: !10179, file: !933, line: 1008, type: !6)
!10179 = distinct !DILexicalBlock(scope: !10180, file: !933, line: 1007, column: 56)
!10180 = distinct !DILexicalBlock(scope: !10181, file: !933, line: 1007, column: 13)
!10181 = distinct !DILexicalBlock(scope: !10167, file: !933, line: 1005, column: 23)
!10182 = !DILocalVariable(name: "blockaddr", scope: !10179, file: !933, line: 1008, type: !6)
!10183 = !DILocalVariable(name: "piece_size", scope: !10179, file: !933, line: 1009, type: !103)
!10184 = !DILocalVariable(name: "aligned_size", scope: !10185, file: !933, line: 1034, type: !6)
!10185 = distinct !DILexicalBlock(scope: !10180, file: !933, line: 1033, column: 16)
!10186 = !DILocation(line: 0, scope: !10167)
!10187 = !DILocation(line: 1000, column: 5, scope: !10167)
!10188 = !DILocation(line: 1000, column: 19, scope: !10167)
!10189 = !DILocation(line: 1005, column: 18, scope: !10167)
!10190 = !DILocation(line: 1005, column: 5, scope: !10167)
!10191 = !DILocation(line: 1007, column: 13, scope: !10180)
!10192 = !DILocation(line: 1007, column: 32, scope: !10180)
!10193 = !DILocation(line: 1011, column: 30, scope: !10179)
!10194 = !DILocation(line: 0, scope: !10179)
!10195 = !DILocation(line: 1013, column: 17, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10179, file: !933, line: 1013, column: 17)
!10197 = !DILocation(line: 1013, column: 72, scope: !10196)
!10198 = !DILocation(line: 1013, column: 17, scope: !10179)
!10199 = !DILocation(line: 1017, column: 30, scope: !10179)
!10200 = !DILocation(line: 1019, column: 26, scope: !10179)
!10201 = !DILocation(line: 1020, column: 26, scope: !10179)
!10202 = !DILocation(line: 1020, column: 13, scope: !10179)
!10203 = !DILocation(line: 1022, column: 17, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10179, file: !933, line: 1022, column: 17)
!10205 = !DILocation(line: 1026, column: 17, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10179, file: !933, line: 1026, column: 17)
!10207 = !DILocation(line: 1026, column: 58, scope: !10206)
!10208 = !DILocation(line: 1026, column: 17, scope: !10179)
!10209 = !DILocation(line: 1032, column: 19, scope: !10179)
!10210 = !DILocation(line: 1034, column: 47, scope: !10185)
!10211 = !DILocation(line: 0, scope: !10185)
!10212 = !DILocation(line: 1036, column: 17, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10185, file: !933, line: 1036, column: 17)
!10214 = !DILocation(line: 1040, column: 17, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10185, file: !933, line: 1040, column: 17)
!10216 = !DILocation(line: 1040, column: 54, scope: !10215)
!10217 = !DILocation(line: 1040, column: 17, scope: !10185)
!10218 = !DILocation(line: 1047, column: 19, scope: !10185)
!10219 = !DILocation(line: 0, scope: !10180)
!10220 = distinct !{!10220, !10190, !10221}
!10221 = !DILocation(line: 1049, column: 5, scope: !10167)
!10222 = !DILocation(line: 1052, column: 1, scope: !10167)
!10223 = distinct !DISubprogram(name: "query_spi_flash_status", scope: !933, file: !933, line: 1055, type: !10224, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !932, retainedNodes: !2013)
!10224 = !DISubroutineType(types: !10225)
!10225 = !{!10226}
!10226 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_DRV_STATE", file: !782, line: 71, baseType: !935)
!10227 = !DILocation(line: 1057, column: 9, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10223, file: !933, line: 1057, column: 9)
!10229 = !DILocation(line: 1057, column: 9, scope: !10223)
!10230 = !DILocation(line: 1062, column: 9, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !933, line: 1061, column: 43)
!10232 = distinct !DILexicalBlock(scope: !10223, file: !933, line: 1061, column: 9)
!10233 = !DILocation(line: 1065, column: 48, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10223, file: !933, line: 1065, column: 9)
!10235 = !DILocation(line: 0, scope: !10234)
!10236 = !DILocation(line: 0, scope: !10223)
!10237 = !DILocation(line: 1072, column: 1, scope: !10223)
!10238 = distinct !DISubprogram(name: "get_current_count", scope: !1887, file: !1887, line: 56, type: !2643, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !2013)
!10239 = !DILocation(line: 58, column: 12, scope: !10238)
!10240 = !DILocation(line: 58, column: 5, scope: !10238)
!10241 = distinct !DISubprogram(name: "delay_time", scope: !1887, file: !1887, line: 62, type: !8630, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !10242)
!10242 = !{!10243, !10244, !10245}
!10243 = !DILocalVariable(name: "count", arg: 1, scope: !10241, file: !1887, line: 62, type: !894)
!10244 = !DILocalVariable(name: "end_count", scope: !10241, file: !1887, line: 64, type: !894)
!10245 = !DILocalVariable(name: "current", scope: !10241, file: !1887, line: 64, type: !894)
!10246 = !DILocation(line: 0, scope: !10241)
!10247 = !DILocation(line: 66, column: 17, scope: !10241)
!10248 = !DILocation(line: 66, column: 37, scope: !10241)
!10249 = !DILocation(line: 66, column: 45, scope: !10241)
!10250 = !DILocation(line: 67, column: 15, scope: !10241)
!10251 = !DILocation(line: 68, column: 12, scope: !10241)
!10252 = !DILocation(line: 68, column: 5, scope: !10241)
!10253 = !DILocation(line: 69, column: 19, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10241, file: !1887, line: 68, column: 45)
!10255 = distinct !{!10255, !10252, !10256}
!10256 = !DILocation(line: 70, column: 5, scope: !10241)
!10257 = !DILocation(line: 72, column: 1, scope: !10241)
!10258 = distinct !DISubprogram(name: "delay_time_for_gpt4", scope: !1887, file: !1887, line: 75, type: !8630, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !10259)
!10259 = !{!10260, !10261, !10262}
!10260 = !DILocalVariable(name: "count", arg: 1, scope: !10258, file: !1887, line: 75, type: !894)
!10261 = !DILocalVariable(name: "end_count", scope: !10258, file: !1887, line: 77, type: !894)
!10262 = !DILocalVariable(name: "current", scope: !10258, file: !1887, line: 77, type: !894)
!10263 = !DILocation(line: 0, scope: !10258)
!10264 = !DILocation(line: 79, column: 17, scope: !10258)
!10265 = !DILocation(line: 79, column: 42, scope: !10258)
!10266 = !DILocation(line: 79, column: 50, scope: !10258)
!10267 = !DILocation(line: 80, column: 15, scope: !10258)
!10268 = !DILocation(line: 81, column: 12, scope: !10258)
!10269 = !DILocation(line: 81, column: 5, scope: !10258)
!10270 = !DILocation(line: 82, column: 19, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10258, file: !1887, line: 81, column: 45)
!10272 = distinct !{!10272, !10269, !10273}
!10273 = !DILocation(line: 83, column: 5, scope: !10258)
!10274 = !DILocation(line: 85, column: 1, scope: !10258)
!10275 = distinct !DISubprogram(name: "get_current_gpt4_count", scope: !1887, file: !1887, line: 95, type: !2643, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !2013)
!10276 = !DILocation(line: 97, column: 13, scope: !10275)
!10277 = !DILocation(line: 97, column: 5, scope: !10275)
!10278 = distinct !DISubprogram(name: "delay_ms", scope: !1887, file: !1887, line: 107, type: !2656, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !10279)
!10279 = !{!10280, !10281}
!10280 = !DILocalVariable(name: "ms", arg: 1, scope: !10278, file: !1887, line: 107, type: !38)
!10281 = !DILocalVariable(name: "count", scope: !10278, file: !1887, line: 109, type: !38)
!10282 = !DILocation(line: 0, scope: !10278)
!10283 = !DILocation(line: 111, column: 17, scope: !10278)
!10284 = !DILocation(line: 112, column: 17, scope: !10278)
!10285 = !DILocation(line: 112, column: 23, scope: !10278)
!10286 = !DILocation(line: 112, column: 11, scope: !10278)
!10287 = !DILocation(line: 113, column: 17, scope: !10278)
!10288 = !DILocation(line: 113, column: 23, scope: !10278)
!10289 = !DILocation(line: 113, column: 11, scope: !10278)
!10290 = !DILocation(line: 114, column: 17, scope: !10278)
!10291 = !DILocation(line: 114, column: 23, scope: !10278)
!10292 = !DILocation(line: 114, column: 11, scope: !10278)
!10293 = !DILocation(line: 115, column: 5, scope: !10278)
!10294 = !DILocation(line: 116, column: 1, scope: !10278)
!10295 = distinct !DISubprogram(name: "delay_us", scope: !1887, file: !1887, line: 120, type: !2656, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !10296)
!10296 = !{!10297, !10298, !10299}
!10297 = !DILocalVariable(name: "us", arg: 1, scope: !10295, file: !1887, line: 120, type: !38)
!10298 = !DILocalVariable(name: "count", scope: !10295, file: !1887, line: 122, type: !38)
!10299 = !DILocalVariable(name: "ticks_per_us", scope: !10295, file: !1887, line: 123, type: !38)
!10300 = !DILocation(line: 0, scope: !10295)
!10301 = !DILocation(line: 125, column: 20, scope: !10295)
!10302 = !DILocation(line: 125, column: 39, scope: !10295)
!10303 = !DILocation(line: 126, column: 26, scope: !10295)
!10304 = !DILocation(line: 128, column: 5, scope: !10295)
!10305 = !DILocation(line: 129, column: 1, scope: !10295)
!10306 = distinct !DISubprogram(name: "drvTMR_init", scope: !1887, file: !1887, line: 133, type: !10307, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !10309)
!10307 = !DISubroutineType(types: !10308)
!10308 = !{null, !38, !38, !536, !556}
!10309 = !{!10310, !10311, !10312, !10313}
!10310 = !DILocalVariable(name: "timerNum", arg: 1, scope: !10306, file: !1887, line: 133, type: !38)
!10311 = !DILocalVariable(name: "countValue", arg: 2, scope: !10306, file: !1887, line: 133, type: !38)
!10312 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !10306, file: !1887, line: 133, type: !536)
!10313 = !DILocalVariable(name: "TMR_Callback", arg: 4, scope: !10306, file: !1887, line: 133, type: !556)
!10314 = !DILocation(line: 0, scope: !10306)
!10315 = !DILocation(line: 136, column: 5, scope: !10306)
!10316 = !DILocation(line: 138, column: 18, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10306, file: !1887, line: 138, column: 9)
!10318 = !DILocation(line: 138, column: 9, scope: !10306)
!10319 = !DILocation(line: 139, column: 30, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10317, file: !1887, line: 138, column: 27)
!10321 = !DILocation(line: 141, column: 5, scope: !10320)
!10322 = !DILocation(line: 142, column: 30, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10317, file: !1887, line: 141, column: 12)
!10324 = !DILocation(line: 0, scope: !10317)
!10325 = !DILocation(line: 146, column: 5, scope: !10306)
!10326 = !DILocation(line: 147, column: 1, scope: !10306)
!10327 = distinct !DISubprogram(name: "TMR_Start", scope: !1887, file: !1887, line: 149, type: !2656, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !10328)
!10328 = !{!10329}
!10329 = !DILocalVariable(name: "timerNum", arg: 1, scope: !10327, file: !1887, line: 149, type: !38)
!10330 = !DILocation(line: 0, scope: !10327)
!10331 = !DILocation(line: 151, column: 5, scope: !10327)
!10332 = !DILocation(line: 152, column: 1, scope: !10327)
!10333 = distinct !DISubprogram(name: "TMR_Stop", scope: !1887, file: !1887, line: 154, type: !2656, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !10334)
!10334 = !{!10335}
!10335 = !DILocalVariable(name: "timerNum", arg: 1, scope: !10333, file: !1887, line: 154, type: !38)
!10336 = !DILocation(line: 0, scope: !10333)
!10337 = !DILocation(line: 156, column: 5, scope: !10333)
!10338 = !DILocation(line: 157, column: 1, scope: !10333)
!10339 = distinct !DISubprogram(name: "drvGPT2Init", scope: !1887, file: !1887, line: 160, type: !110, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !2013)
!10340 = !DILocation(line: 162, column: 5, scope: !10339)
!10341 = !DILocation(line: 163, column: 1, scope: !10339)
!10342 = distinct !DISubprogram(name: "drvGPT4Init", scope: !1887, file: !1887, line: 165, type: !110, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !2013)
!10343 = !DILocation(line: 167, column: 5, scope: !10342)
!10344 = !DILocation(line: 168, column: 1, scope: !10342)
!10345 = distinct !DISubprogram(name: "clear_TMR_INT_status_bit", scope: !1887, file: !1887, line: 170, type: !2656, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !10346)
!10346 = !{!10347}
!10347 = !DILocalVariable(name: "timerNum", arg: 1, scope: !10345, file: !1887, line: 170, type: !38)
!10348 = !DILocation(line: 0, scope: !10345)
!10349 = !DILocation(line: 172, column: 9, scope: !10345)
!10350 = !DILocation(line: 177, column: 5, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10352, file: !1887, line: 175, column: 27)
!10352 = distinct !DILexicalBlock(scope: !10345, file: !1887, line: 175, column: 9)
!10353 = !DILocation(line: 178, column: 1, scope: !10345)
!10354 = distinct !DISubprogram(name: "top_xtal_init", scope: !1020, file: !1020, line: 52, type: !110, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10355)
!10355 = !{!10356, !10357}
!10356 = !DILocalVariable(name: "u4RegVal", scope: !10354, file: !1020, line: 54, type: !38)
!10357 = !DILocalVariable(name: "reg", scope: !10354, file: !1020, line: 55, type: !29)
!10358 = !DILocation(line: 0, scope: !10354)
!10359 = !DILocation(line: 55, column: 25, scope: !10354)
!10360 = !DILocation(line: 56, column: 16, scope: !10354)
!10361 = !DILocation(line: 56, column: 23, scope: !10354)
!10362 = !DILocation(line: 58, column: 16, scope: !10354)
!10363 = !DILocation(line: 61, column: 5, scope: !10354)
!10364 = !DILocation(line: 59, column: 14, scope: !10354)
!10365 = !DILocation(line: 0, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10354, file: !1020, line: 61, column: 18)
!10367 = !DILocation(line: 87, column: 38, scope: !10354)
!10368 = !DILocation(line: 88, column: 21, scope: !10354)
!10369 = !DILocation(line: 88, column: 19, scope: !10354)
!10370 = !DILocation(line: 89, column: 5, scope: !10354)
!10371 = !DILocation(line: 90, column: 17, scope: !10354)
!10372 = !DILocation(line: 90, column: 33, scope: !10354)
!10373 = !DILocation(line: 90, column: 5, scope: !10354)
!10374 = !DILocation(line: 91, column: 1, scope: !10354)
!10375 = distinct !DISubprogram(name: "top_xtal_freq_get", scope: !1020, file: !1020, line: 98, type: !2643, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !2013)
!10376 = !DILocation(line: 100, column: 12, scope: !10375)
!10377 = !DILocation(line: 100, column: 5, scope: !10375)
!10378 = distinct !DISubprogram(name: "top_mcu_freq_get", scope: !1020, file: !1020, line: 108, type: !2643, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !2013)
!10379 = !DILocation(line: 110, column: 12, scope: !10378)
!10380 = !DILocation(line: 110, column: 5, scope: !10378)
!10381 = distinct !DISubprogram(name: "cmnPLL1ON", scope: !1020, file: !1020, line: 118, type: !110, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10382)
!10382 = !{!10383, !10384}
!10383 = !DILocalVariable(name: "reg", scope: !10381, file: !1020, line: 120, type: !44)
!10384 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !10381, file: !1020, line: 121, type: !43)
!10385 = !DILocation(line: 120, column: 5, scope: !10381)
!10386 = !DILocation(line: 120, column: 23, scope: !10381)
!10387 = !DILocation(line: 0, scope: !10381)
!10388 = !DILocation(line: 123, column: 11, scope: !10381)
!10389 = !DILocation(line: 123, column: 9, scope: !10381)
!10390 = !DILocation(line: 124, column: 12, scope: !10381)
!10391 = !DILocation(line: 124, column: 16, scope: !10381)
!10392 = !DILocation(line: 124, column: 39, scope: !10381)
!10393 = !DILocation(line: 124, column: 9, scope: !10381)
!10394 = !DILocation(line: 126, column: 9, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10381, file: !1020, line: 126, column: 9)
!10396 = !DILocation(line: 126, column: 13, scope: !10395)
!10397 = !DILocation(line: 126, column: 9, scope: !10381)
!10398 = !DILocation(line: 127, column: 15, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10395, file: !1020, line: 126, column: 47)
!10400 = !DILocation(line: 127, column: 13, scope: !10399)
!10401 = !DILocation(line: 128, column: 15, scope: !10399)
!10402 = !DILocation(line: 128, column: 19, scope: !10399)
!10403 = !DILocation(line: 128, column: 13, scope: !10399)
!10404 = !DILocation(line: 129, column: 15, scope: !10399)
!10405 = !DILocation(line: 129, column: 19, scope: !10399)
!10406 = !DILocation(line: 129, column: 13, scope: !10399)
!10407 = !DILocation(line: 130, column: 46, scope: !10399)
!10408 = !DILocation(line: 130, column: 9, scope: !10399)
!10409 = !DILocation(line: 132, column: 9, scope: !10399)
!10410 = !DILocation(line: 133, column: 19, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10399, file: !1020, line: 132, column: 12)
!10412 = !DILocation(line: 133, column: 17, scope: !10411)
!10413 = !DILocation(line: 134, column: 19, scope: !10411)
!10414 = !DILocation(line: 134, column: 23, scope: !10411)
!10415 = !DILocation(line: 134, column: 17, scope: !10411)
!10416 = !DILocation(line: 135, column: 19, scope: !10399)
!10417 = !DILocation(line: 135, column: 18, scope: !10399)
!10418 = !DILocation(line: 135, column: 9, scope: !10411)
!10419 = distinct !{!10419, !10409, !10420}
!10420 = !DILocation(line: 135, column: 22, scope: !10399)
!10421 = !DILocation(line: 138, column: 1, scope: !10381)
!10422 = distinct !DISubprogram(name: "cmnReadRegister32", scope: !10423, file: !10423, line: 176, type: !10424, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10428)
!10423 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/system_mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!10424 = !DISubroutineType(types: !10425)
!10425 = !{!38, !10426}
!10426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10427, size: 32)
!10427 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!10428 = !{!10429}
!10429 = !DILocalVariable(name: "Register", arg: 1, scope: !10422, file: !10423, line: 176, type: !10426)
!10430 = !DILocation(line: 0, scope: !10422)
!10431 = !DILocation(line: 178, column: 13, scope: !10422)
!10432 = !DILocation(line: 178, column: 12, scope: !10422)
!10433 = !DILocation(line: 178, column: 5, scope: !10422)
!10434 = distinct !DISubprogram(name: "cmnWriteRegister32", scope: !10423, file: !10423, line: 171, type: !10435, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10437)
!10435 = !DISubroutineType(types: !10436)
!10436 = !{null, !10426, !38}
!10437 = !{!10438, !10439}
!10438 = !DILocalVariable(name: "Register", arg: 1, scope: !10434, file: !10423, line: 171, type: !10426)
!10439 = !DILocalVariable(name: "Value", arg: 2, scope: !10434, file: !10423, line: 171, type: !38)
!10440 = !DILocation(line: 0, scope: !10434)
!10441 = !DILocation(line: 173, column: 6, scope: !10434)
!10442 = !DILocation(line: 173, column: 36, scope: !10434)
!10443 = !DILocation(line: 174, column: 1, scope: !10434)
!10444 = distinct !DISubprogram(name: "cmnPLL1ON_PLL2ON", scope: !1020, file: !1020, line: 145, type: !10445, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10447)
!10445 = !DISubroutineType(types: !10446)
!10446 = !{null, !96}
!10447 = !{!10448, !10449, !10450}
!10448 = !DILocalVariable(name: "fg960M", arg: 1, scope: !10444, file: !1020, line: 145, type: !96)
!10449 = !DILocalVariable(name: "reg", scope: !10444, file: !1020, line: 147, type: !44)
!10450 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !10444, file: !1020, line: 148, type: !43)
!10451 = !DILocation(line: 0, scope: !10444)
!10452 = !DILocation(line: 147, column: 5, scope: !10444)
!10453 = !DILocation(line: 147, column: 23, scope: !10444)
!10454 = !DILocation(line: 150, column: 11, scope: !10444)
!10455 = !DILocation(line: 150, column: 9, scope: !10444)
!10456 = !DILocation(line: 151, column: 12, scope: !10444)
!10457 = !DILocation(line: 151, column: 16, scope: !10444)
!10458 = !DILocation(line: 151, column: 39, scope: !10444)
!10459 = !DILocation(line: 151, column: 9, scope: !10444)
!10460 = !DILocation(line: 153, column: 9, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10444, file: !1020, line: 153, column: 9)
!10462 = !DILocation(line: 153, column: 13, scope: !10461)
!10463 = !DILocation(line: 153, column: 9, scope: !10444)
!10464 = !DILocation(line: 154, column: 15, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10461, file: !1020, line: 153, column: 45)
!10466 = !DILocation(line: 154, column: 13, scope: !10465)
!10467 = !DILocation(line: 155, column: 15, scope: !10465)
!10468 = !DILocation(line: 155, column: 19, scope: !10465)
!10469 = !DILocation(line: 155, column: 13, scope: !10465)
!10470 = !DILocation(line: 156, column: 15, scope: !10465)
!10471 = !DILocation(line: 156, column: 19, scope: !10465)
!10472 = !DILocation(line: 156, column: 13, scope: !10465)
!10473 = !DILocation(line: 157, column: 15, scope: !10465)
!10474 = !DILocation(line: 157, column: 13, scope: !10465)
!10475 = !DILocation(line: 158, column: 46, scope: !10465)
!10476 = !DILocation(line: 158, column: 9, scope: !10465)
!10477 = !DILocation(line: 160, column: 15, scope: !10465)
!10478 = !DILocation(line: 160, column: 13, scope: !10465)
!10479 = !DILocation(line: 161, column: 15, scope: !10465)
!10480 = !DILocation(line: 161, column: 19, scope: !10465)
!10481 = !DILocation(line: 161, column: 13, scope: !10465)
!10482 = !DILocation(line: 162, column: 15, scope: !10465)
!10483 = !DILocation(line: 162, column: 19, scope: !10465)
!10484 = !DILocation(line: 162, column: 13, scope: !10465)
!10485 = !DILocation(line: 163, column: 15, scope: !10465)
!10486 = !DILocation(line: 163, column: 19, scope: !10465)
!10487 = !DILocation(line: 163, column: 13, scope: !10465)
!10488 = !DILocation(line: 164, column: 46, scope: !10465)
!10489 = !DILocation(line: 164, column: 9, scope: !10465)
!10490 = !DILocation(line: 166, column: 9, scope: !10465)
!10491 = !DILocation(line: 167, column: 19, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10465, file: !1020, line: 166, column: 12)
!10493 = !DILocation(line: 167, column: 17, scope: !10492)
!10494 = !DILocation(line: 168, column: 19, scope: !10492)
!10495 = !DILocation(line: 168, column: 23, scope: !10492)
!10496 = !DILocation(line: 168, column: 17, scope: !10492)
!10497 = !DILocation(line: 169, column: 19, scope: !10465)
!10498 = !DILocation(line: 169, column: 18, scope: !10465)
!10499 = !DILocation(line: 169, column: 9, scope: !10492)
!10500 = distinct !{!10500, !10490, !10501}
!10501 = !DILocation(line: 169, column: 22, scope: !10465)
!10502 = !DILocation(line: 171, column: 15, scope: !10465)
!10503 = !DILocation(line: 171, column: 13, scope: !10465)
!10504 = !DILocation(line: 172, column: 15, scope: !10465)
!10505 = !DILocation(line: 172, column: 19, scope: !10465)
!10506 = !DILocation(line: 172, column: 13, scope: !10465)
!10507 = !DILocation(line: 173, column: 15, scope: !10465)
!10508 = !DILocation(line: 173, column: 19, scope: !10465)
!10509 = !DILocation(line: 173, column: 13, scope: !10465)
!10510 = !DILocation(line: 174, column: 5, scope: !10465)
!10511 = !DILocation(line: 176, column: 11, scope: !10444)
!10512 = !DILocation(line: 176, column: 9, scope: !10444)
!10513 = !DILocation(line: 177, column: 9, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10444, file: !1020, line: 177, column: 9)
!10515 = !DILocation(line: 0, scope: !10514)
!10516 = !DILocation(line: 177, column: 9, scope: !10444)
!10517 = !DILocation(line: 178, column: 19, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10514, file: !1020, line: 177, column: 17)
!10519 = !DILocation(line: 178, column: 13, scope: !10518)
!10520 = !DILocation(line: 179, column: 5, scope: !10518)
!10521 = !DILocation(line: 180, column: 13, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10514, file: !1020, line: 179, column: 12)
!10523 = !DILocation(line: 182, column: 42, scope: !10444)
!10524 = !DILocation(line: 182, column: 5, scope: !10444)
!10525 = !DILocation(line: 184, column: 1, scope: !10444)
!10526 = distinct !DISubprogram(name: "cmnPLL1OFF_PLL2OFF", scope: !1020, file: !1020, line: 191, type: !110, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10527)
!10527 = !{!10528, !10529}
!10528 = !DILocalVariable(name: "reg", scope: !10526, file: !1020, line: 193, type: !44)
!10529 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !10526, file: !1020, line: 194, type: !43)
!10530 = !DILocation(line: 193, column: 5, scope: !10526)
!10531 = !DILocation(line: 193, column: 23, scope: !10526)
!10532 = !DILocation(line: 0, scope: !10526)
!10533 = !DILocation(line: 196, column: 11, scope: !10526)
!10534 = !DILocation(line: 196, column: 9, scope: !10526)
!10535 = !DILocation(line: 197, column: 11, scope: !10526)
!10536 = !DILocation(line: 197, column: 15, scope: !10526)
!10537 = !DILocation(line: 197, column: 9, scope: !10526)
!10538 = !DILocation(line: 198, column: 11, scope: !10526)
!10539 = !DILocation(line: 198, column: 15, scope: !10526)
!10540 = !DILocation(line: 198, column: 9, scope: !10526)
!10541 = !DILocation(line: 199, column: 11, scope: !10526)
!10542 = !DILocation(line: 199, column: 9, scope: !10526)
!10543 = !DILocation(line: 200, column: 42, scope: !10526)
!10544 = !DILocation(line: 200, column: 5, scope: !10526)
!10545 = !DILocation(line: 202, column: 11, scope: !10526)
!10546 = !DILocation(line: 202, column: 9, scope: !10526)
!10547 = !DILocation(line: 203, column: 11, scope: !10526)
!10548 = !DILocation(line: 203, column: 15, scope: !10526)
!10549 = !DILocation(line: 203, column: 9, scope: !10526)
!10550 = !DILocation(line: 204, column: 11, scope: !10526)
!10551 = !DILocation(line: 204, column: 15, scope: !10526)
!10552 = !DILocation(line: 204, column: 9, scope: !10526)
!10553 = !DILocation(line: 205, column: 11, scope: !10526)
!10554 = !DILocation(line: 205, column: 9, scope: !10526)
!10555 = !DILocation(line: 206, column: 42, scope: !10526)
!10556 = !DILocation(line: 206, column: 5, scope: !10526)
!10557 = !DILocation(line: 209, column: 1, scope: !10526)
!10558 = distinct !DISubprogram(name: "cmnCpuClkConfigureToXtal", scope: !1020, file: !1020, line: 216, type: !110, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10559)
!10559 = !{!10560, !10561}
!10560 = !DILocalVariable(name: "reg", scope: !10558, file: !1020, line: 218, type: !44)
!10561 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !10558, file: !1020, line: 219, type: !43)
!10562 = !DILocation(line: 218, column: 5, scope: !10558)
!10563 = !DILocation(line: 218, column: 23, scope: !10558)
!10564 = !DILocation(line: 0, scope: !10558)
!10565 = !DILocation(line: 222, column: 11, scope: !10558)
!10566 = !DILocation(line: 222, column: 9, scope: !10558)
!10567 = !DILocation(line: 223, column: 11, scope: !10558)
!10568 = !DILocation(line: 223, column: 15, scope: !10558)
!10569 = !DILocation(line: 223, column: 9, scope: !10558)
!10570 = !DILocation(line: 224, column: 11, scope: !10558)
!10571 = !DILocation(line: 224, column: 9, scope: !10558)
!10572 = !DILocation(line: 225, column: 39, scope: !10558)
!10573 = !DILocation(line: 225, column: 5, scope: !10558)
!10574 = !DILocation(line: 228, column: 11, scope: !10558)
!10575 = !DILocation(line: 228, column: 9, scope: !10558)
!10576 = !DILocation(line: 229, column: 11, scope: !10558)
!10577 = !DILocation(line: 229, column: 15, scope: !10558)
!10578 = !DILocation(line: 229, column: 9, scope: !10558)
!10579 = !DILocation(line: 230, column: 11, scope: !10558)
!10580 = !DILocation(line: 230, column: 9, scope: !10558)
!10581 = !DILocation(line: 231, column: 39, scope: !10558)
!10582 = !DILocation(line: 231, column: 5, scope: !10558)
!10583 = !DILocation(line: 233, column: 5, scope: !10558)
!10584 = !DILocation(line: 233, column: 12, scope: !10558)
!10585 = !DILocation(line: 233, column: 19, scope: !10558)
!10586 = !DILocation(line: 233, column: 16, scope: !10558)
!10587 = distinct !{!10587, !10583, !10588}
!10588 = !DILocation(line: 233, column: 52, scope: !10558)
!10589 = !DILocation(line: 235, column: 21, scope: !10558)
!10590 = !DILocation(line: 235, column: 19, scope: !10558)
!10591 = !DILocation(line: 236, column: 5, scope: !10558)
!10592 = !DILocation(line: 237, column: 17, scope: !10558)
!10593 = !DILocation(line: 237, column: 33, scope: !10558)
!10594 = !DILocation(line: 237, column: 5, scope: !10558)
!10595 = !DILocation(line: 239, column: 1, scope: !10558)
!10596 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo192M", scope: !1020, file: !1020, line: 246, type: !110, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10597)
!10597 = !{!10598, !10599}
!10598 = !DILocalVariable(name: "reg", scope: !10596, file: !1020, line: 248, type: !44)
!10599 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !10596, file: !1020, line: 249, type: !43)
!10600 = !DILocation(line: 248, column: 5, scope: !10596)
!10601 = !DILocation(line: 248, column: 23, scope: !10596)
!10602 = !DILocation(line: 0, scope: !10596)
!10603 = !DILocation(line: 252, column: 5, scope: !10596)
!10604 = !DILocation(line: 255, column: 11, scope: !10596)
!10605 = !DILocation(line: 255, column: 9, scope: !10596)
!10606 = !DILocation(line: 256, column: 11, scope: !10596)
!10607 = !DILocation(line: 256, column: 15, scope: !10596)
!10608 = !DILocation(line: 256, column: 9, scope: !10596)
!10609 = !DILocation(line: 257, column: 11, scope: !10596)
!10610 = !DILocation(line: 257, column: 15, scope: !10596)
!10611 = !DILocation(line: 257, column: 9, scope: !10596)
!10612 = !DILocation(line: 258, column: 39, scope: !10596)
!10613 = !DILocation(line: 258, column: 5, scope: !10596)
!10614 = !DILocation(line: 260, column: 5, scope: !10596)
!10615 = !DILocation(line: 260, column: 12, scope: !10596)
!10616 = !DILocation(line: 260, column: 19, scope: !10596)
!10617 = !DILocation(line: 260, column: 16, scope: !10596)
!10618 = distinct !{!10618, !10614, !10619}
!10619 = !DILocation(line: 260, column: 52, scope: !10596)
!10620 = !DILocation(line: 263, column: 11, scope: !10596)
!10621 = !DILocation(line: 263, column: 9, scope: !10596)
!10622 = !DILocation(line: 264, column: 11, scope: !10596)
!10623 = !DILocation(line: 264, column: 15, scope: !10596)
!10624 = !DILocation(line: 264, column: 9, scope: !10596)
!10625 = !DILocation(line: 265, column: 11, scope: !10596)
!10626 = !DILocation(line: 265, column: 15, scope: !10596)
!10627 = !DILocation(line: 265, column: 9, scope: !10596)
!10628 = !DILocation(line: 266, column: 39, scope: !10596)
!10629 = !DILocation(line: 266, column: 5, scope: !10596)
!10630 = !DILocation(line: 269, column: 11, scope: !10596)
!10631 = !DILocation(line: 269, column: 9, scope: !10596)
!10632 = !DILocation(line: 270, column: 11, scope: !10596)
!10633 = !DILocation(line: 270, column: 15, scope: !10596)
!10634 = !DILocation(line: 270, column: 9, scope: !10596)
!10635 = !DILocation(line: 271, column: 11, scope: !10596)
!10636 = !DILocation(line: 271, column: 15, scope: !10596)
!10637 = !DILocation(line: 271, column: 9, scope: !10596)
!10638 = !DILocation(line: 272, column: 39, scope: !10596)
!10639 = !DILocation(line: 272, column: 5, scope: !10596)
!10640 = !DILocation(line: 273, column: 19, scope: !10596)
!10641 = !DILocation(line: 274, column: 5, scope: !10596)
!10642 = !DILocation(line: 275, column: 17, scope: !10596)
!10643 = !DILocation(line: 275, column: 33, scope: !10596)
!10644 = !DILocation(line: 275, column: 5, scope: !10596)
!10645 = !DILocation(line: 277, column: 1, scope: !10596)
!10646 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo160M", scope: !1020, file: !1020, line: 284, type: !110, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10647)
!10647 = !{!10648, !10649}
!10648 = !DILocalVariable(name: "reg", scope: !10646, file: !1020, line: 286, type: !44)
!10649 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !10646, file: !1020, line: 287, type: !43)
!10650 = !DILocation(line: 286, column: 5, scope: !10646)
!10651 = !DILocation(line: 286, column: 23, scope: !10646)
!10652 = !DILocation(line: 0, scope: !10646)
!10653 = !DILocation(line: 290, column: 5, scope: !10646)
!10654 = !DILocation(line: 293, column: 11, scope: !10646)
!10655 = !DILocation(line: 293, column: 9, scope: !10646)
!10656 = !DILocation(line: 294, column: 11, scope: !10646)
!10657 = !DILocation(line: 294, column: 15, scope: !10646)
!10658 = !DILocation(line: 294, column: 9, scope: !10646)
!10659 = !DILocation(line: 295, column: 11, scope: !10646)
!10660 = !DILocation(line: 295, column: 15, scope: !10646)
!10661 = !DILocation(line: 295, column: 9, scope: !10646)
!10662 = !DILocation(line: 296, column: 39, scope: !10646)
!10663 = !DILocation(line: 296, column: 5, scope: !10646)
!10664 = !DILocation(line: 298, column: 5, scope: !10646)
!10665 = !DILocation(line: 298, column: 12, scope: !10646)
!10666 = !DILocation(line: 298, column: 19, scope: !10646)
!10667 = !DILocation(line: 298, column: 16, scope: !10646)
!10668 = distinct !{!10668, !10664, !10669}
!10669 = !DILocation(line: 298, column: 52, scope: !10646)
!10670 = !DILocation(line: 301, column: 11, scope: !10646)
!10671 = !DILocation(line: 301, column: 9, scope: !10646)
!10672 = !DILocation(line: 302, column: 11, scope: !10646)
!10673 = !DILocation(line: 302, column: 15, scope: !10646)
!10674 = !DILocation(line: 302, column: 9, scope: !10646)
!10675 = !DILocation(line: 303, column: 11, scope: !10646)
!10676 = !DILocation(line: 303, column: 15, scope: !10646)
!10677 = !DILocation(line: 303, column: 9, scope: !10646)
!10678 = !DILocation(line: 304, column: 39, scope: !10646)
!10679 = !DILocation(line: 304, column: 5, scope: !10646)
!10680 = !DILocation(line: 307, column: 11, scope: !10646)
!10681 = !DILocation(line: 307, column: 9, scope: !10646)
!10682 = !DILocation(line: 308, column: 11, scope: !10646)
!10683 = !DILocation(line: 308, column: 15, scope: !10646)
!10684 = !DILocation(line: 308, column: 9, scope: !10646)
!10685 = !DILocation(line: 309, column: 11, scope: !10646)
!10686 = !DILocation(line: 309, column: 15, scope: !10646)
!10687 = !DILocation(line: 309, column: 9, scope: !10646)
!10688 = !DILocation(line: 310, column: 39, scope: !10646)
!10689 = !DILocation(line: 310, column: 5, scope: !10646)
!10690 = !DILocation(line: 311, column: 19, scope: !10646)
!10691 = !DILocation(line: 312, column: 5, scope: !10646)
!10692 = !DILocation(line: 313, column: 17, scope: !10646)
!10693 = !DILocation(line: 313, column: 33, scope: !10646)
!10694 = !DILocation(line: 313, column: 5, scope: !10646)
!10695 = !DILocation(line: 315, column: 1, scope: !10646)
!10696 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo64M", scope: !1020, file: !1020, line: 323, type: !110, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10697)
!10697 = !{!10698, !10699}
!10698 = !DILocalVariable(name: "reg", scope: !10696, file: !1020, line: 325, type: !44)
!10699 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !10696, file: !1020, line: 326, type: !43)
!10700 = !DILocation(line: 325, column: 5, scope: !10696)
!10701 = !DILocation(line: 325, column: 23, scope: !10696)
!10702 = !DILocation(line: 0, scope: !10696)
!10703 = !DILocation(line: 329, column: 5, scope: !10696)
!10704 = !DILocation(line: 332, column: 11, scope: !10696)
!10705 = !DILocation(line: 332, column: 9, scope: !10696)
!10706 = !DILocation(line: 333, column: 11, scope: !10696)
!10707 = !DILocation(line: 333, column: 15, scope: !10696)
!10708 = !DILocation(line: 333, column: 9, scope: !10696)
!10709 = !DILocation(line: 334, column: 11, scope: !10696)
!10710 = !DILocation(line: 334, column: 9, scope: !10696)
!10711 = !DILocation(line: 335, column: 39, scope: !10696)
!10712 = !DILocation(line: 335, column: 5, scope: !10696)
!10713 = !DILocation(line: 337, column: 5, scope: !10696)
!10714 = !DILocation(line: 337, column: 12, scope: !10696)
!10715 = !DILocation(line: 337, column: 19, scope: !10696)
!10716 = !DILocation(line: 337, column: 16, scope: !10696)
!10717 = distinct !{!10717, !10713, !10718}
!10718 = !DILocation(line: 337, column: 52, scope: !10696)
!10719 = !DILocation(line: 340, column: 11, scope: !10696)
!10720 = !DILocation(line: 340, column: 9, scope: !10696)
!10721 = !DILocation(line: 341, column: 11, scope: !10696)
!10722 = !DILocation(line: 341, column: 15, scope: !10696)
!10723 = !DILocation(line: 341, column: 9, scope: !10696)
!10724 = !DILocation(line: 342, column: 11, scope: !10696)
!10725 = !DILocation(line: 342, column: 15, scope: !10696)
!10726 = !DILocation(line: 342, column: 9, scope: !10696)
!10727 = !DILocation(line: 343, column: 39, scope: !10696)
!10728 = !DILocation(line: 343, column: 5, scope: !10696)
!10729 = !DILocation(line: 344, column: 19, scope: !10696)
!10730 = !DILocation(line: 345, column: 5, scope: !10696)
!10731 = !DILocation(line: 346, column: 17, scope: !10696)
!10732 = !DILocation(line: 346, column: 33, scope: !10696)
!10733 = !DILocation(line: 346, column: 5, scope: !10696)
!10734 = !DILocation(line: 348, column: 1, scope: !10696)
!10735 = distinct !DISubprogram(name: "cmnSerialFlashClkConfToXtal", scope: !1020, file: !1020, line: 353, type: !110, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10736)
!10736 = !{!10737, !10738}
!10737 = !DILocalVariable(name: "reg", scope: !10735, file: !1020, line: 355, type: !910)
!10738 = !DILocalVariable(name: "pTopCfgHclk", scope: !10735, file: !1020, line: 356, type: !1022)
!10739 = !DILocation(line: 355, column: 5, scope: !10735)
!10740 = !DILocation(line: 355, column: 21, scope: !10735)
!10741 = !DILocation(line: 0, scope: !10735)
!10742 = !DILocation(line: 358, column: 11, scope: !10735)
!10743 = !DILocation(line: 358, column: 9, scope: !10735)
!10744 = !DILocation(line: 359, column: 11, scope: !10735)
!10745 = !DILocation(line: 359, column: 15, scope: !10735)
!10746 = !DILocation(line: 359, column: 9, scope: !10735)
!10747 = !DILocation(line: 360, column: 11, scope: !10735)
!10748 = !DILocation(line: 360, column: 9, scope: !10735)
!10749 = !DILocation(line: 361, column: 37, scope: !10735)
!10750 = !DILocation(line: 361, column: 5, scope: !10735)
!10751 = !DILocation(line: 362, column: 1, scope: !10735)
!10752 = distinct !DISubprogram(name: "cmnSerialFlashClkConfTo64M", scope: !1020, file: !1020, line: 368, type: !110, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !10753)
!10753 = !{!10754, !10755, !10756, !10758, !10760}
!10754 = !DILocalVariable(name: "reg", scope: !10752, file: !1020, line: 370, type: !910)
!10755 = !DILocalVariable(name: "pTopCfgHclk", scope: !10752, file: !1020, line: 371, type: !1022)
!10756 = !DILocalVariable(name: "addr", scope: !10757, file: !1020, line: 383, type: !1023)
!10757 = distinct !DILexicalBlock(scope: !10752, file: !1020, line: 383, column: 5)
!10758 = !DILocalVariable(name: "addr", scope: !10759, file: !1020, line: 384, type: !1023)
!10759 = distinct !DILexicalBlock(scope: !10752, file: !1020, line: 384, column: 5)
!10760 = !DILocalVariable(name: "addr", scope: !10761, file: !1020, line: 385, type: !1023)
!10761 = distinct !DILexicalBlock(scope: !10752, file: !1020, line: 385, column: 5)
!10762 = !DILocation(line: 370, column: 5, scope: !10752)
!10763 = !DILocation(line: 370, column: 21, scope: !10752)
!10764 = !DILocation(line: 0, scope: !10752)
!10765 = !DILocation(line: 374, column: 5, scope: !10752)
!10766 = !DILocation(line: 377, column: 11, scope: !10752)
!10767 = !DILocation(line: 377, column: 9, scope: !10752)
!10768 = !DILocation(line: 378, column: 11, scope: !10752)
!10769 = !DILocation(line: 378, column: 15, scope: !10752)
!10770 = !DILocation(line: 378, column: 9, scope: !10752)
!10771 = !DILocation(line: 379, column: 11, scope: !10752)
!10772 = !DILocation(line: 379, column: 15, scope: !10752)
!10773 = !DILocation(line: 379, column: 9, scope: !10752)
!10774 = !DILocation(line: 380, column: 37, scope: !10752)
!10775 = !DILocation(line: 380, column: 5, scope: !10752)
!10776 = !DILocation(line: 0, scope: !10757)
!10777 = !DILocation(line: 383, column: 5, scope: !10757)
!10778 = !DILocation(line: 0, scope: !10759)
!10779 = !DILocation(line: 384, column: 5, scope: !10759)
!10780 = !DILocation(line: 0, scope: !10761)
!10781 = !DILocation(line: 385, column: 5, scope: !10761)
!10782 = !DILocation(line: 388, column: 1, scope: !10752)
!10783 = distinct !DISubprogram(name: "getc", scope: !1032, file: !1032, line: 68, type: !8910, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !10784)
!10784 = !{!10785}
!10785 = !DILocalVariable(name: "rc", scope: !10783, file: !1032, line: 71, type: !103)
!10786 = !DILocation(line: 71, column: 14, scope: !10783)
!10787 = !DILocation(line: 0, scope: !10783)
!10788 = !DILocation(line: 72, column: 5, scope: !10783)
!10789 = distinct !DISubprogram(name: "getc_nowait", scope: !1032, file: !1032, line: 80, type: !8910, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !10790)
!10790 = !{!10791}
!10791 = !DILocalVariable(name: "c", scope: !10789, file: !1032, line: 82, type: !70)
!10792 = !DILocation(line: 84, column: 9, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10789, file: !1032, line: 84, column: 9)
!10794 = !DILocation(line: 84, column: 40, scope: !10793)
!10795 = !DILocation(line: 84, column: 9, scope: !10789)
!10796 = !DILocation(line: 85, column: 13, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10793, file: !1032, line: 84, column: 47)
!10798 = !DILocation(line: 86, column: 16, scope: !10797)
!10799 = !DILocation(line: 0, scope: !10789)
!10800 = !DILocation(line: 86, column: 9, scope: !10797)
!10801 = !DILocation(line: 0, scope: !10793)
!10802 = !DILocation(line: 90, column: 1, scope: !10789)
!10803 = distinct !DISubprogram(name: "uart_output_char", scope: !1032, file: !1032, line: 93, type: !10804, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !10807)
!10804 = !DISubroutineType(types: !10805)
!10805 = !{null, !10806, !98}
!10806 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_PORT", file: !1035, line: 75, baseType: !1034)
!10807 = !{!10808, !10809, !10810}
!10808 = !DILocalVariable(name: "port_no", arg: 1, scope: !10803, file: !1032, line: 93, type: !10806)
!10809 = !DILocalVariable(name: "c", arg: 2, scope: !10803, file: !1032, line: 93, type: !98)
!10810 = !DILocalVariable(name: "base", scope: !10803, file: !1032, line: 95, type: !6)
!10811 = !DILocation(line: 0, scope: !10803)
!10812 = !DILocation(line: 95, column: 25, scope: !10803)
!10813 = !DILocation(line: 97, column: 5, scope: !10803)
!10814 = !DILocation(line: 97, column: 14, scope: !10803)
!10815 = !DILocation(line: 97, column: 42, scope: !10803)
!10816 = !DILocation(line: 97, column: 12, scope: !10803)
!10817 = distinct !{!10817, !10813, !10818}
!10818 = !DILocation(line: 98, column: 9, scope: !10803)
!10819 = !DILocation(line: 99, column: 35, scope: !10803)
!10820 = !DILocation(line: 99, column: 5, scope: !10803)
!10821 = !DILocation(line: 99, column: 33, scope: !10803)
!10822 = !DILocation(line: 102, column: 1, scope: !10803)
!10823 = distinct !DISubprogram(name: "uart_input_char", scope: !1032, file: !1032, line: 106, type: !10824, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !10826)
!10824 = !DISubroutineType(types: !10825)
!10825 = !{!96, !10806}
!10826 = !{!10827, !10828, !10829}
!10827 = !DILocalVariable(name: "port_no", arg: 1, scope: !10823, file: !1032, line: 106, type: !10806)
!10828 = !DILocalVariable(name: "base", scope: !10823, file: !1032, line: 108, type: !6)
!10829 = !DILocalVariable(name: "c", scope: !10823, file: !1032, line: 109, type: !70)
!10830 = !DILocation(line: 0, scope: !10823)
!10831 = !DILocation(line: 108, column: 25, scope: !10823)
!10832 = !DILocation(line: 111, column: 5, scope: !10823)
!10833 = !DILocation(line: 111, column: 14, scope: !10823)
!10834 = !DILocation(line: 111, column: 42, scope: !10823)
!10835 = !DILocation(line: 111, column: 12, scope: !10823)
!10836 = distinct !{!10836, !10832, !10837}
!10837 = !DILocation(line: 112, column: 9, scope: !10823)
!10838 = !DILocation(line: 114, column: 9, scope: !10823)
!10839 = !DILocation(line: 116, column: 5, scope: !10823)
!10840 = distinct !DISubprogram(name: "uart_input_char_unblocking", scope: !1032, file: !1032, line: 120, type: !10841, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !10843)
!10841 = !DISubroutineType(types: !10842)
!10842 = !{!38, !10806}
!10843 = !{!10844, !10845, !10846}
!10844 = !DILocalVariable(name: "port_no", arg: 1, scope: !10840, file: !1032, line: 120, type: !10806)
!10845 = !DILocalVariable(name: "base", scope: !10840, file: !1032, line: 122, type: !6)
!10846 = !DILocalVariable(name: "c", scope: !10840, file: !1032, line: 123, type: !70)
!10847 = !DILocation(line: 0, scope: !10840)
!10848 = !DILocation(line: 122, column: 25, scope: !10840)
!10849 = !DILocation(line: 125, column: 9, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10840, file: !1032, line: 125, column: 9)
!10851 = !DILocation(line: 125, column: 37, scope: !10850)
!10852 = !DILocation(line: 125, column: 9, scope: !10840)
!10853 = !DILocation(line: 126, column: 13, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10850, file: !1032, line: 125, column: 44)
!10855 = !DILocation(line: 127, column: 16, scope: !10854)
!10856 = !DILocation(line: 127, column: 9, scope: !10854)
!10857 = !DILocation(line: 0, scope: !10850)
!10858 = !DILocation(line: 131, column: 1, scope: !10840)
!10859 = distinct !DISubprogram(name: "halUART_HWInit", scope: !1032, file: !1032, line: 136, type: !10860, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !10862)
!10860 = !DISubroutineType(types: !10861)
!10861 = !{null, !10806}
!10862 = !{!10863}
!10863 = !DILocalVariable(name: "u_port", arg: 1, scope: !10859, file: !1032, line: 136, type: !10806)
!10864 = !DILocation(line: 0, scope: !10859)
!10865 = !DILocation(line: 139, column: 5, scope: !10859)
!10866 = !DILocation(line: 140, column: 9, scope: !10859)
!10867 = !DILocation(line: 153, column: 5, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10869, file: !1032, line: 147, column: 38)
!10869 = distinct !DILexicalBlock(scope: !10870, file: !1032, line: 147, column: 16)
!10870 = distinct !DILexicalBlock(scope: !10859, file: !1032, line: 140, column: 9)
!10871 = !DILocation(line: 0, scope: !10870)
!10872 = !DILocation(line: 155, column: 1, scope: !10859)
!10873 = distinct !DISubprogram(name: "halUART_SetFormat", scope: !1032, file: !1032, line: 158, type: !10874, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !10876)
!10874 = !DISubroutineType(types: !10875)
!10875 = !{null, !10806, !38, !31, !31, !31}
!10876 = !{!10877, !10878, !10879, !10880, !10881, !10882, !10883, !10884, !10885, !10886, !10887, !10888, !10889, !10890, !10892, !10893}
!10877 = !DILocalVariable(name: "u_port", arg: 1, scope: !10873, file: !1032, line: 158, type: !10806)
!10878 = !DILocalVariable(name: "baudrate", arg: 2, scope: !10873, file: !1032, line: 158, type: !38)
!10879 = !DILocalVariable(name: "databit", arg: 3, scope: !10873, file: !1032, line: 158, type: !31)
!10880 = !DILocalVariable(name: "parity", arg: 4, scope: !10873, file: !1032, line: 158, type: !31)
!10881 = !DILocalVariable(name: "stopbit", arg: 5, scope: !10873, file: !1032, line: 158, type: !31)
!10882 = !DILocalVariable(name: "control_word", scope: !10873, file: !1032, line: 160, type: !31)
!10883 = !DILocalVariable(name: "UART_BASE", scope: !10873, file: !1032, line: 161, type: !38)
!10884 = !DILocalVariable(name: "data", scope: !10873, file: !1032, line: 162, type: !38)
!10885 = !DILocalVariable(name: "uart_lcr", scope: !10873, file: !1032, line: 162, type: !38)
!10886 = !DILocalVariable(name: "high_speed_div", scope: !10873, file: !1032, line: 162, type: !38)
!10887 = !DILocalVariable(name: "sample_count", scope: !10873, file: !1032, line: 162, type: !38)
!10888 = !DILocalVariable(name: "sample_point", scope: !10873, file: !1032, line: 162, type: !38)
!10889 = !DILocalVariable(name: "fraction", scope: !10873, file: !1032, line: 162, type: !38)
!10890 = !DILocalVariable(name: "fraction_L_mapping", scope: !10873, file: !1032, line: 163, type: !10891)
!10891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 176, elements: !1778)
!10892 = !DILocalVariable(name: "fraction_M_mapping", scope: !10873, file: !1032, line: 164, type: !10891)
!10893 = !DILocalVariable(name: "status", scope: !10873, file: !1032, line: 165, type: !1233)
!10894 = !DILocation(line: 0, scope: !10873)
!10895 = !DILocation(line: 163, column: 15, scope: !10873)
!10896 = !DILocation(line: 164, column: 15, scope: !10873)
!10897 = !DILocation(line: 166, column: 20, scope: !10873)
!10898 = !DILocation(line: 166, column: 18, scope: !10873)
!10899 = !DILocation(line: 168, column: 9, scope: !10873)
!10900 = !DILocation(line: 176, column: 5, scope: !10873)
!10901 = !DILocation(line: 176, column: 44, scope: !10873)
!10902 = !DILocation(line: 177, column: 16, scope: !10873)
!10903 = !DILocation(line: 178, column: 50, scope: !10873)
!10904 = !DILocation(line: 178, column: 38, scope: !10873)
!10905 = !DILocation(line: 179, column: 12, scope: !10873)
!10906 = !DILocation(line: 179, column: 25, scope: !10873)
!10907 = !DILocation(line: 180, column: 28, scope: !10873)
!10908 = !DILocation(line: 180, column: 34, scope: !10873)
!10909 = !DILocation(line: 182, column: 29, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10873, file: !1032, line: 181, column: 5)
!10911 = !DILocation(line: 182, column: 46, scope: !10910)
!10912 = !DILocation(line: 183, column: 26, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10910, file: !1032, line: 183, column: 13)
!10914 = !DILocation(line: 183, column: 13, scope: !10910)
!10915 = !DILocation(line: 192, column: 30, scope: !10873)
!10916 = !DILocation(line: 192, column: 35, scope: !10873)
!10917 = !DILocation(line: 192, column: 46, scope: !10873)
!10918 = !DILocation(line: 192, column: 74, scope: !10873)
!10919 = !DILocation(line: 192, column: 53, scope: !10873)
!10920 = !DILocation(line: 192, column: 80, scope: !10873)
!10921 = !DILocation(line: 193, column: 56, scope: !10873)
!10922 = !DILocation(line: 193, column: 5, scope: !10873)
!10923 = !DILocation(line: 193, column: 38, scope: !10873)
!10924 = !DILocation(line: 194, column: 57, scope: !10873)
!10925 = !DILocation(line: 194, column: 63, scope: !10873)
!10926 = !DILocation(line: 194, column: 5, scope: !10873)
!10927 = !DILocation(line: 194, column: 38, scope: !10873)
!10928 = !DILocation(line: 195, column: 5, scope: !10873)
!10929 = !DILocation(line: 195, column: 45, scope: !10873)
!10930 = !DILocation(line: 196, column: 5, scope: !10873)
!10931 = !DILocation(line: 196, column: 47, scope: !10873)
!10932 = !DILocation(line: 197, column: 46, scope: !10873)
!10933 = !DILocation(line: 197, column: 5, scope: !10873)
!10934 = !DILocation(line: 197, column: 44, scope: !10873)
!10935 = !DILocation(line: 198, column: 46, scope: !10873)
!10936 = !DILocation(line: 198, column: 5, scope: !10873)
!10937 = !DILocation(line: 198, column: 44, scope: !10873)
!10938 = !DILocation(line: 199, column: 38, scope: !10873)
!10939 = !DILocation(line: 200, column: 5, scope: !10873)
!10940 = !DILocation(line: 200, column: 38, scope: !10873)
!10941 = !DILocation(line: 202, column: 20, scope: !10873)
!10942 = !DILocation(line: 203, column: 18, scope: !10873)
!10943 = !DILocation(line: 205, column: 18, scope: !10873)
!10944 = !DILocation(line: 207, column: 18, scope: !10873)
!10945 = !DILocation(line: 208, column: 18, scope: !10873)
!10946 = !DILocation(line: 209, column: 5, scope: !10873)
!10947 = !DILocation(line: 213, column: 1, scope: !10873)
!10948 = distinct !DISubprogram(name: "halUART_Get_VFIFO_Length", scope: !1032, file: !1032, line: 215, type: !10949, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !10951)
!10949 = !DISubroutineType(types: !10950)
!10950 = !{null, !10806, !1233, !3134}
!10951 = !{!10952, !10953, !10954}
!10952 = !DILocalVariable(name: "u_port", arg: 1, scope: !10948, file: !1032, line: 215, type: !10806)
!10953 = !DILocalVariable(name: "is_rx", arg: 2, scope: !10948, file: !1032, line: 215, type: !1233)
!10954 = !DILocalVariable(name: "length", arg: 3, scope: !10948, file: !1032, line: 215, type: !3134)
!10955 = !DILocation(line: 0, scope: !10948)
!10956 = !DILocation(line: 217, column: 16, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10948, file: !1032, line: 217, column: 9)
!10958 = !DILocation(line: 0, scope: !10957)
!10959 = !DILocation(line: 217, column: 9, scope: !10948)
!10960 = !DILocation(line: 218, column: 13, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10957, file: !1032, line: 217, column: 31)
!10962 = !DILocation(line: 219, column: 23, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10964, file: !1032, line: 218, column: 20)
!10964 = distinct !DILexicalBlock(scope: !10961, file: !1032, line: 218, column: 13)
!10965 = !DILocation(line: 220, column: 9, scope: !10963)
!10966 = !DILocation(line: 221, column: 23, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10964, file: !1032, line: 220, column: 16)
!10968 = !DILocation(line: 221, column: 21, scope: !10967)
!10969 = !DILocation(line: 222, column: 24, scope: !10967)
!10970 = !DILocation(line: 222, column: 21, scope: !10967)
!10971 = !DILocation(line: 225, column: 13, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10957, file: !1032, line: 224, column: 12)
!10973 = !DILocation(line: 226, column: 23, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !1032, line: 225, column: 20)
!10975 = distinct !DILexicalBlock(scope: !10972, file: !1032, line: 225, column: 13)
!10976 = !DILocation(line: 227, column: 9, scope: !10974)
!10977 = !DILocation(line: 228, column: 23, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10975, file: !1032, line: 227, column: 16)
!10979 = !DILocation(line: 228, column: 21, scope: !10978)
!10980 = !DILocation(line: 229, column: 24, scope: !10978)
!10981 = !DILocation(line: 229, column: 21, scope: !10978)
!10982 = !DILocation(line: 233, column: 5, scope: !10948)
!10983 = distinct !DISubprogram(name: "halUART_Read_VFIFO_Data", scope: !1032, file: !1032, line: 236, type: !10984, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !10986)
!10984 = !DISubroutineType(types: !10985)
!10985 = !{null, !10806, !95, !38}
!10986 = !{!10987, !10988, !10989, !10990}
!10987 = !DILocalVariable(name: "u_port", arg: 1, scope: !10983, file: !1032, line: 236, type: !10806)
!10988 = !DILocalVariable(name: "data", arg: 2, scope: !10983, file: !1032, line: 236, type: !95)
!10989 = !DILocalVariable(name: "length", arg: 3, scope: !10983, file: !1032, line: 236, type: !38)
!10990 = !DILocalVariable(name: "idx", scope: !10983, file: !1032, line: 238, type: !911)
!10991 = !DILocation(line: 0, scope: !10983)
!10992 = !DILocation(line: 239, column: 23, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10994, file: !1032, line: 239, column: 5)
!10994 = distinct !DILexicalBlock(scope: !10983, file: !1032, line: 239, column: 5)
!10995 = !DILocation(line: 239, column: 5, scope: !10994)
!10996 = !DILocation(line: 240, column: 13, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10993, file: !1032, line: 239, column: 40)
!10998 = !DILocation(line: 244, column: 9, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !11000, file: !1032, line: 242, column: 42)
!11000 = distinct !DILexicalBlock(scope: !11001, file: !1032, line: 242, column: 20)
!11001 = distinct !DILexicalBlock(scope: !10997, file: !1032, line: 240, column: 13)
!11002 = !DILocation(line: 0, scope: !11001)
!11003 = !DILocation(line: 239, column: 36, scope: !10993)
!11004 = distinct !{!11004, !10995, !11005}
!11005 = !DILocation(line: 246, column: 5, scope: !10994)
!11006 = !DILocation(line: 249, column: 1, scope: !10983)
!11007 = distinct !DISubprogram(name: "halUART_Write_VFIFO_Data", scope: !1032, file: !1032, line: 251, type: !11008, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11010)
!11008 = !DISubroutineType(types: !11009)
!11009 = !{null, !10806, !3267, !38}
!11010 = !{!11011, !11012, !11013, !11014}
!11011 = !DILocalVariable(name: "u_port", arg: 1, scope: !11007, file: !1032, line: 251, type: !10806)
!11012 = !DILocalVariable(name: "data", arg: 2, scope: !11007, file: !1032, line: 251, type: !3267)
!11013 = !DILocalVariable(name: "length", arg: 3, scope: !11007, file: !1032, line: 251, type: !38)
!11014 = !DILocalVariable(name: "idx", scope: !11007, file: !1032, line: 253, type: !911)
!11015 = !DILocation(line: 0, scope: !11007)
!11016 = !DILocation(line: 254, column: 23, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !1032, line: 254, column: 5)
!11018 = distinct !DILexicalBlock(scope: !11007, file: !1032, line: 254, column: 5)
!11019 = !DILocation(line: 254, column: 5, scope: !11018)
!11020 = !DILocation(line: 255, column: 13, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11017, file: !1032, line: 254, column: 40)
!11022 = !DILocation(line: 256, column: 61, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !1032, line: 255, column: 35)
!11024 = distinct !DILexicalBlock(scope: !11021, file: !1032, line: 255, column: 13)
!11025 = !DILocation(line: 256, column: 59, scope: !11023)
!11026 = !DILocation(line: 257, column: 9, scope: !11023)
!11027 = !DILocation(line: 258, column: 61, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11029, file: !1032, line: 257, column: 42)
!11029 = distinct !DILexicalBlock(scope: !11024, file: !1032, line: 257, column: 20)
!11030 = !DILocation(line: 258, column: 59, scope: !11028)
!11031 = !DILocation(line: 259, column: 9, scope: !11028)
!11032 = !DILocation(line: 254, column: 36, scope: !11017)
!11033 = distinct !{!11033, !11019, !11034}
!11034 = !DILocation(line: 261, column: 5, scope: !11018)
!11035 = !DILocation(line: 264, column: 1, scope: !11007)
!11036 = distinct !DISubprogram(name: "halUART_Tx_VFIFO_Initialize", scope: !1032, file: !1032, line: 266, type: !11037, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11039)
!11037 = !DISubroutineType(types: !11038)
!11038 = !{null, !10806, !95, !38, !38}
!11039 = !{!11040, !11041, !11042, !11043}
!11040 = !DILocalVariable(name: "u_port", arg: 1, scope: !11036, file: !1032, line: 266, type: !10806)
!11041 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !11036, file: !1032, line: 266, type: !95)
!11042 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !11036, file: !1032, line: 266, type: !38)
!11043 = !DILocalVariable(name: "threshold", arg: 4, scope: !11036, file: !1032, line: 266, type: !38)
!11044 = !DILocation(line: 0, scope: !11036)
!11045 = !DILocation(line: 268, column: 9, scope: !11036)
!11046 = !DILocation(line: 274, column: 5, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11048, file: !1032, line: 271, column: 38)
!11048 = distinct !DILexicalBlock(scope: !11049, file: !1032, line: 271, column: 16)
!11049 = distinct !DILexicalBlock(scope: !11036, file: !1032, line: 268, column: 9)
!11050 = !DILocation(line: 0, scope: !11049)
!11051 = !DILocation(line: 276, column: 1, scope: !11036)
!11052 = distinct !DISubprogram(name: "halUART_Rx_VFIFO_Initialize", scope: !1032, file: !1032, line: 278, type: !11053, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11055)
!11053 = !DISubroutineType(types: !11054)
!11054 = !{null, !10806, !95, !38, !38, !38, !38}
!11055 = !{!11056, !11057, !11058, !11059, !11060, !11061}
!11056 = !DILocalVariable(name: "u_port", arg: 1, scope: !11052, file: !1032, line: 278, type: !10806)
!11057 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !11052, file: !1032, line: 278, type: !95)
!11058 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !11052, file: !1032, line: 278, type: !38)
!11059 = !DILocalVariable(name: "alert_length", arg: 4, scope: !11052, file: !1032, line: 278, type: !38)
!11060 = !DILocalVariable(name: "threshold", arg: 5, scope: !11052, file: !1032, line: 278, type: !38)
!11061 = !DILocalVariable(name: "timeout", arg: 6, scope: !11052, file: !1032, line: 278, type: !38)
!11062 = !DILocation(line: 0, scope: !11052)
!11063 = !DILocation(line: 280, column: 9, scope: !11052)
!11064 = !DILocation(line: 286, column: 5, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !1032, line: 283, column: 38)
!11066 = distinct !DILexicalBlock(scope: !11067, file: !1032, line: 283, column: 16)
!11067 = distinct !DILexicalBlock(scope: !11052, file: !1032, line: 280, column: 9)
!11068 = !DILocation(line: 0, scope: !11067)
!11069 = !DILocation(line: 288, column: 1, scope: !11052)
!11070 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_Callback", scope: !1032, file: !1032, line: 290, type: !11071, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11073)
!11071 = !DISubroutineType(types: !11072)
!11072 = !{null, !10806, !1407}
!11073 = !{!11074, !11075}
!11074 = !DILocalVariable(name: "u_port", arg: 1, scope: !11070, file: !1032, line: 290, type: !10806)
!11075 = !DILocalVariable(name: "func", arg: 2, scope: !11070, file: !1032, line: 290, type: !1407)
!11076 = !DILocation(line: 0, scope: !11070)
!11077 = !DILocation(line: 292, column: 9, scope: !11070)
!11078 = !DILocation(line: 296, column: 5, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11080, file: !1032, line: 294, column: 38)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !1032, line: 294, column: 16)
!11081 = distinct !DILexicalBlock(scope: !11070, file: !1032, line: 292, column: 9)
!11082 = !DILocation(line: 0, scope: !11081)
!11083 = !DILocation(line: 298, column: 1, scope: !11070)
!11084 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_TO_Callback", scope: !1032, file: !1032, line: 300, type: !11071, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11085)
!11085 = !{!11086, !11087}
!11086 = !DILocalVariable(name: "u_port", arg: 1, scope: !11084, file: !1032, line: 300, type: !10806)
!11087 = !DILocalVariable(name: "func", arg: 2, scope: !11084, file: !1032, line: 300, type: !1407)
!11088 = !DILocation(line: 0, scope: !11084)
!11089 = !DILocation(line: 302, column: 9, scope: !11084)
!11090 = !DILocation(line: 306, column: 5, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11092, file: !1032, line: 304, column: 38)
!11092 = distinct !DILexicalBlock(scope: !11093, file: !1032, line: 304, column: 16)
!11093 = distinct !DILexicalBlock(scope: !11084, file: !1032, line: 302, column: 9)
!11094 = !DILocation(line: 0, scope: !11093)
!11095 = !DILocation(line: 308, column: 1, scope: !11084)
!11096 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !1032, file: !1032, line: 310, type: !10860, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11097)
!11097 = !{!11098, !11099, !11100, !11101}
!11098 = !DILocalVariable(name: "u_port", arg: 1, scope: !11096, file: !1032, line: 310, type: !10806)
!11099 = !DILocalVariable(name: "base", scope: !11096, file: !1032, line: 312, type: !6)
!11100 = !DILocalVariable(name: "EFR", scope: !11096, file: !1032, line: 313, type: !31)
!11101 = !DILocalVariable(name: "LCR", scope: !11096, file: !1032, line: 313, type: !31)
!11102 = !DILocation(line: 0, scope: !11096)
!11103 = !DILocation(line: 312, column: 25, scope: !11096)
!11104 = !DILocation(line: 315, column: 11, scope: !11096)
!11105 = !DILocation(line: 317, column: 33, scope: !11096)
!11106 = !DILocation(line: 318, column: 11, scope: !11096)
!11107 = !DILocation(line: 320, column: 35, scope: !11096)
!11108 = !DILocation(line: 320, column: 33, scope: !11096)
!11109 = !DILocation(line: 322, column: 5, scope: !11096)
!11110 = !DILocation(line: 322, column: 39, scope: !11096)
!11111 = !DILocation(line: 324, column: 33, scope: !11096)
!11112 = !DILocation(line: 325, column: 5, scope: !11096)
!11113 = !DILocation(line: 325, column: 33, scope: !11096)
!11114 = !DILocation(line: 327, column: 35, scope: !11096)
!11115 = !DILocation(line: 327, column: 33, scope: !11096)
!11116 = !DILocation(line: 328, column: 1, scope: !11096)
!11117 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !1032, file: !1032, line: 330, type: !11118, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11120)
!11118 = !DISubroutineType(types: !11119)
!11119 = !{null, !10806, !96, !96, !96}
!11120 = !{!11121, !11122, !11123, !11124, !11125, !11126, !11127}
!11121 = !DILocalVariable(name: "u_port", arg: 1, scope: !11117, file: !1032, line: 330, type: !10806)
!11122 = !DILocalVariable(name: "xon", arg: 2, scope: !11117, file: !1032, line: 330, type: !96)
!11123 = !DILocalVariable(name: "xoff", arg: 3, scope: !11117, file: !1032, line: 330, type: !96)
!11124 = !DILocalVariable(name: "escape_character", arg: 4, scope: !11117, file: !1032, line: 330, type: !96)
!11125 = !DILocalVariable(name: "base", scope: !11117, file: !1032, line: 332, type: !6)
!11126 = !DILocalVariable(name: "EFR", scope: !11117, file: !1032, line: 333, type: !31)
!11127 = !DILocalVariable(name: "LCR", scope: !11117, file: !1032, line: 333, type: !31)
!11128 = !DILocation(line: 0, scope: !11117)
!11129 = !DILocation(line: 332, column: 25, scope: !11117)
!11130 = !DILocation(line: 335, column: 11, scope: !11117)
!11131 = !DILocation(line: 337, column: 33, scope: !11117)
!11132 = !DILocation(line: 338, column: 36, scope: !11117)
!11133 = !DILocation(line: 338, column: 5, scope: !11117)
!11134 = !DILocation(line: 338, column: 34, scope: !11117)
!11135 = !DILocation(line: 339, column: 5, scope: !11117)
!11136 = !DILocation(line: 339, column: 34, scope: !11117)
!11137 = !DILocation(line: 340, column: 37, scope: !11117)
!11138 = !DILocation(line: 340, column: 5, scope: !11117)
!11139 = !DILocation(line: 340, column: 35, scope: !11117)
!11140 = !DILocation(line: 341, column: 5, scope: !11117)
!11141 = !DILocation(line: 341, column: 35, scope: !11117)
!11142 = !DILocation(line: 343, column: 11, scope: !11117)
!11143 = !DILocation(line: 345, column: 35, scope: !11117)
!11144 = !DILocation(line: 345, column: 33, scope: !11117)
!11145 = !DILocation(line: 347, column: 35, scope: !11117)
!11146 = !DILocation(line: 347, column: 33, scope: !11117)
!11147 = !DILocation(line: 349, column: 43, scope: !11117)
!11148 = !DILocation(line: 349, column: 5, scope: !11117)
!11149 = !DILocation(line: 349, column: 41, scope: !11117)
!11150 = !DILocation(line: 350, column: 5, scope: !11117)
!11151 = !DILocation(line: 350, column: 39, scope: !11117)
!11152 = !DILocation(line: 351, column: 1, scope: !11117)
!11153 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !1032, file: !1032, line: 353, type: !10860, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11154)
!11154 = !{!11155, !11156, !11157}
!11155 = !DILocalVariable(name: "u_port", arg: 1, scope: !11153, file: !1032, line: 353, type: !10806)
!11156 = !DILocalVariable(name: "base", scope: !11153, file: !1032, line: 355, type: !6)
!11157 = !DILocalVariable(name: "LCR", scope: !11153, file: !1032, line: 356, type: !31)
!11158 = !DILocation(line: 0, scope: !11153)
!11159 = !DILocation(line: 355, column: 25, scope: !11153)
!11160 = !DILocation(line: 358, column: 11, scope: !11153)
!11161 = !DILocation(line: 360, column: 33, scope: !11153)
!11162 = !DILocation(line: 362, column: 5, scope: !11153)
!11163 = !DILocation(line: 362, column: 33, scope: !11153)
!11164 = !DILocation(line: 364, column: 33, scope: !11153)
!11165 = !DILocation(line: 366, column: 35, scope: !11153)
!11166 = !DILocation(line: 366, column: 33, scope: !11153)
!11167 = !DILocation(line: 367, column: 1, scope: !11153)
!11168 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !1032, file: !1032, line: 370, type: !10860, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11169)
!11169 = !{!11170, !11171}
!11170 = !DILocalVariable(name: "u_port", arg: 1, scope: !11168, file: !1032, line: 370, type: !10806)
!11171 = !DILocalVariable(name: "base", scope: !11168, file: !1032, line: 372, type: !6)
!11172 = !DILocation(line: 0, scope: !11168)
!11173 = !DILocation(line: 372, column: 25, scope: !11168)
!11174 = !DILocation(line: 374, column: 5, scope: !11168)
!11175 = !DILocation(line: 374, column: 38, scope: !11168)
!11176 = !DILocation(line: 375, column: 1, scope: !11168)
!11177 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !1032, file: !1032, line: 377, type: !10860, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11178)
!11178 = !{!11179, !11180, !11181, !11182}
!11179 = !DILocalVariable(name: "u_port", arg: 1, scope: !11177, file: !1032, line: 377, type: !10806)
!11180 = !DILocalVariable(name: "base", scope: !11177, file: !1032, line: 379, type: !6)
!11181 = !DILocalVariable(name: "IER", scope: !11177, file: !1032, line: 380, type: !31)
!11182 = !DILocalVariable(name: "LCR", scope: !11177, file: !1032, line: 380, type: !31)
!11183 = !DILocation(line: 0, scope: !11177)
!11184 = !DILocation(line: 379, column: 25, scope: !11177)
!11185 = !DILocation(line: 382, column: 11, scope: !11177)
!11186 = !DILocation(line: 383, column: 33, scope: !11177)
!11187 = !DILocation(line: 385, column: 11, scope: !11177)
!11188 = !DILocation(line: 387, column: 35, scope: !11177)
!11189 = !DILocation(line: 387, column: 33, scope: !11177)
!11190 = !DILocation(line: 389, column: 35, scope: !11177)
!11191 = !DILocation(line: 389, column: 33, scope: !11177)
!11192 = !DILocation(line: 391, column: 5, scope: !11177)
!11193 = !DILocation(line: 391, column: 38, scope: !11177)
!11194 = !DILocation(line: 392, column: 1, scope: !11177)
!11195 = distinct !DISubprogram(name: "uart_mask_send_interrupt", scope: !1032, file: !1032, line: 394, type: !10860, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11196)
!11196 = !{!11197, !11198, !11199, !11200}
!11197 = !DILocalVariable(name: "u_port", arg: 1, scope: !11195, file: !1032, line: 394, type: !10806)
!11198 = !DILocalVariable(name: "base", scope: !11195, file: !1032, line: 396, type: !6)
!11199 = !DILocalVariable(name: "IER", scope: !11195, file: !1032, line: 397, type: !31)
!11200 = !DILocalVariable(name: "LCR", scope: !11195, file: !1032, line: 397, type: !31)
!11201 = !DILocation(line: 0, scope: !11195)
!11202 = !DILocation(line: 396, column: 25, scope: !11195)
!11203 = !DILocation(line: 399, column: 11, scope: !11195)
!11204 = !DILocation(line: 400, column: 33, scope: !11195)
!11205 = !DILocation(line: 402, column: 11, scope: !11195)
!11206 = !DILocation(line: 403, column: 9, scope: !11195)
!11207 = !DILocation(line: 404, column: 33, scope: !11195)
!11208 = !DILocation(line: 406, column: 35, scope: !11195)
!11209 = !DILocation(line: 406, column: 33, scope: !11195)
!11210 = !DILocation(line: 408, column: 5, scope: !11195)
!11211 = !DILocation(line: 408, column: 38, scope: !11195)
!11212 = !DILocation(line: 409, column: 1, scope: !11195)
!11213 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !1032, file: !1032, line: 411, type: !1297, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11214)
!11214 = !{!11215, !11216, !11217, !11218}
!11215 = !DILocalVariable(name: "irq_number", arg: 1, scope: !11213, file: !1032, line: 411, type: !1073)
!11216 = !DILocalVariable(name: "u_port", scope: !11213, file: !1032, line: 413, type: !10806)
!11217 = !DILocalVariable(name: "base", scope: !11213, file: !1032, line: 414, type: !6)
!11218 = !DILocalVariable(name: "IIR", scope: !11213, file: !1032, line: 415, type: !31)
!11219 = !DILocation(line: 0, scope: !11213)
!11220 = !DILocation(line: 417, column: 20, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11213, file: !1032, line: 417, column: 9)
!11222 = !DILocation(line: 425, column: 11, scope: !11213)
!11223 = !DILocation(line: 426, column: 17, scope: !11213)
!11224 = !DILocation(line: 426, column: 5, scope: !11213)
!11225 = !DILocation(line: 428, column: 13, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11213, file: !1032, line: 426, column: 25)
!11227 = !DILocation(line: 429, column: 13, scope: !11226)
!11228 = !DILocation(line: 433, column: 1, scope: !11213)
!11229 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !1032, file: !1032, line: 436, type: !10860, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11230)
!11230 = !{!11231, !11232}
!11231 = !DILocalVariable(name: "u_port", arg: 1, scope: !11229, file: !1032, line: 436, type: !10806)
!11232 = !DILocalVariable(name: "base", scope: !11229, file: !1032, line: 438, type: !6)
!11233 = !DILocation(line: 0, scope: !11229)
!11234 = !DILocation(line: 438, column: 25, scope: !11229)
!11235 = !DILocation(line: 440, column: 5, scope: !11229)
!11236 = !DILocation(line: 440, column: 33, scope: !11229)
!11237 = !DILocation(line: 441, column: 5, scope: !11229)
!11238 = !DILocation(line: 441, column: 33, scope: !11229)
!11239 = !DILocation(line: 442, column: 5, scope: !11229)
!11240 = !DILocation(line: 442, column: 34, scope: !11229)
!11241 = !DILocation(line: 443, column: 5, scope: !11229)
!11242 = !DILocation(line: 443, column: 35, scope: !11229)
!11243 = !DILocation(line: 445, column: 33, scope: !11229)
!11244 = !DILocation(line: 446, column: 5, scope: !11229)
!11245 = !DILocation(line: 446, column: 33, scope: !11229)
!11246 = !DILocation(line: 447, column: 5, scope: !11229)
!11247 = !DILocation(line: 447, column: 33, scope: !11229)
!11248 = !DILocation(line: 449, column: 33, scope: !11229)
!11249 = !DILocation(line: 450, column: 33, scope: !11229)
!11250 = !DILocation(line: 451, column: 33, scope: !11229)
!11251 = !DILocation(line: 453, column: 33, scope: !11229)
!11252 = !DILocation(line: 454, column: 33, scope: !11229)
!11253 = !DILocation(line: 455, column: 33, scope: !11229)
!11254 = !DILocation(line: 457, column: 33, scope: !11229)
!11255 = !DILocation(line: 458, column: 5, scope: !11229)
!11256 = !DILocation(line: 458, column: 33, scope: !11229)
!11257 = !DILocation(line: 459, column: 5, scope: !11229)
!11258 = !DILocation(line: 459, column: 39, scope: !11229)
!11259 = !DILocation(line: 460, column: 5, scope: !11229)
!11260 = !DILocation(line: 460, column: 40, scope: !11229)
!11261 = !DILocation(line: 461, column: 5, scope: !11229)
!11262 = !DILocation(line: 461, column: 42, scope: !11229)
!11263 = !DILocation(line: 462, column: 5, scope: !11229)
!11264 = !DILocation(line: 462, column: 42, scope: !11229)
!11265 = !DILocation(line: 463, column: 5, scope: !11229)
!11266 = !DILocation(line: 463, column: 35, scope: !11229)
!11267 = !DILocation(line: 464, column: 5, scope: !11229)
!11268 = !DILocation(line: 464, column: 41, scope: !11229)
!11269 = !DILocation(line: 465, column: 5, scope: !11229)
!11270 = !DILocation(line: 465, column: 39, scope: !11229)
!11271 = !DILocation(line: 466, column: 5, scope: !11229)
!11272 = !DILocation(line: 466, column: 38, scope: !11229)
!11273 = !DILocation(line: 467, column: 5, scope: !11229)
!11274 = !DILocation(line: 467, column: 42, scope: !11229)
!11275 = !DILocation(line: 468, column: 5, scope: !11229)
!11276 = !DILocation(line: 468, column: 45, scope: !11229)
!11277 = !DILocation(line: 469, column: 5, scope: !11229)
!11278 = !DILocation(line: 469, column: 39, scope: !11229)
!11279 = !DILocation(line: 470, column: 5, scope: !11229)
!11280 = !DILocation(line: 470, column: 39, scope: !11229)
!11281 = !DILocation(line: 471, column: 5, scope: !11229)
!11282 = !DILocation(line: 471, column: 42, scope: !11229)
!11283 = !DILocation(line: 472, column: 1, scope: !11229)
!11284 = distinct !DISubprogram(name: "uart_query_empty", scope: !1032, file: !1032, line: 474, type: !10860, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1031, retainedNodes: !11285)
!11285 = !{!11286, !11287}
!11286 = !DILocalVariable(name: "u_port", arg: 1, scope: !11284, file: !1032, line: 474, type: !10806)
!11287 = !DILocalVariable(name: "base", scope: !11284, file: !1032, line: 476, type: !6)
!11288 = !DILocation(line: 0, scope: !11284)
!11289 = !DILocation(line: 476, column: 25, scope: !11284)
!11290 = !DILocation(line: 478, column: 5, scope: !11284)
!11291 = !DILocation(line: 478, column: 14, scope: !11284)
!11292 = !DILocation(line: 478, column: 42, scope: !11284)
!11293 = !DILocation(line: 478, column: 12, scope: !11284)
!11294 = distinct !{!11294, !11290, !11295}
!11295 = !DILocation(line: 478, column: 50, scope: !11284)
!11296 = !DILocation(line: 479, column: 1, scope: !11284)
!11297 = distinct !DISubprogram(name: "log_hal_fatal_internal", scope: !1077, file: !1077, line: 129, type: !11298, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1076, retainedNodes: !11300)
!11298 = !DISubroutineType(types: !11299)
!11299 = !{null, !104, !103, !104, null}
!11300 = !{!11301, !11302, !11303, !11304}
!11301 = !DILocalVariable(name: "func", arg: 1, scope: !11297, file: !1077, line: 129, type: !104)
!11302 = !DILocalVariable(name: "line", arg: 2, scope: !11297, file: !1077, line: 129, type: !103)
!11303 = !DILocalVariable(name: "message", arg: 3, scope: !11297, file: !1077, line: 129, type: !104)
!11304 = !DILocalVariable(name: "ap", scope: !11297, file: !1077, line: 131, type: !11305)
!11305 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !7110, line: 46, baseType: !11306)
!11306 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !7112, line: 32, baseType: !11307)
!11307 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1077, baseType: !11308)
!11308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !11309)
!11309 = !{!11310}
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !11308, file: !1077, line: 131, baseType: !30, size: 32)
!11311 = !DILocation(line: 0, scope: !11297)
!11312 = !DILocation(line: 131, column: 5, scope: !11297)
!11313 = !DILocation(line: 131, column: 13, scope: !11297)
!11314 = !DILocation(line: 132, column: 5, scope: !11297)
!11315 = !DILocation(line: 133, column: 5, scope: !11297)
!11316 = !DILocation(line: 134, column: 5, scope: !11297)
!11317 = !DILocation(line: 135, column: 1, scope: !11297)
!11318 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !1077, file: !1077, line: 138, type: !11298, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1076, retainedNodes: !11319)
!11319 = !{!11320, !11321, !11322, !11323}
!11320 = !DILocalVariable(name: "func", arg: 1, scope: !11318, file: !1077, line: 138, type: !104)
!11321 = !DILocalVariable(name: "line", arg: 2, scope: !11318, file: !1077, line: 138, type: !103)
!11322 = !DILocalVariable(name: "message", arg: 3, scope: !11318, file: !1077, line: 138, type: !104)
!11323 = !DILocalVariable(name: "ap", scope: !11318, file: !1077, line: 140, type: !11305)
!11324 = !DILocation(line: 0, scope: !11318)
!11325 = !DILocation(line: 140, column: 5, scope: !11318)
!11326 = !DILocation(line: 140, column: 13, scope: !11318)
!11327 = !DILocation(line: 141, column: 5, scope: !11318)
!11328 = !DILocation(line: 142, column: 5, scope: !11318)
!11329 = !DILocation(line: 143, column: 5, scope: !11318)
!11330 = !DILocation(line: 144, column: 1, scope: !11318)
!11331 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !1077, file: !1077, line: 146, type: !11298, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1076, retainedNodes: !11332)
!11332 = !{!11333, !11334, !11335, !11336}
!11333 = !DILocalVariable(name: "func", arg: 1, scope: !11331, file: !1077, line: 146, type: !104)
!11334 = !DILocalVariable(name: "line", arg: 2, scope: !11331, file: !1077, line: 146, type: !103)
!11335 = !DILocalVariable(name: "message", arg: 3, scope: !11331, file: !1077, line: 146, type: !104)
!11336 = !DILocalVariable(name: "ap", scope: !11331, file: !1077, line: 148, type: !11305)
!11337 = !DILocation(line: 0, scope: !11331)
!11338 = !DILocation(line: 148, column: 5, scope: !11331)
!11339 = !DILocation(line: 148, column: 13, scope: !11331)
!11340 = !DILocation(line: 149, column: 5, scope: !11331)
!11341 = !DILocation(line: 150, column: 5, scope: !11331)
!11342 = !DILocation(line: 151, column: 5, scope: !11331)
!11343 = !DILocation(line: 152, column: 1, scope: !11331)
!11344 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !1077, file: !1077, line: 154, type: !11298, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1076, retainedNodes: !11345)
!11345 = !{!11346, !11347, !11348, !11349}
!11346 = !DILocalVariable(name: "func", arg: 1, scope: !11344, file: !1077, line: 154, type: !104)
!11347 = !DILocalVariable(name: "line", arg: 2, scope: !11344, file: !1077, line: 154, type: !103)
!11348 = !DILocalVariable(name: "message", arg: 3, scope: !11344, file: !1077, line: 154, type: !104)
!11349 = !DILocalVariable(name: "ap", scope: !11344, file: !1077, line: 156, type: !11305)
!11350 = !DILocation(line: 0, scope: !11344)
!11351 = !DILocation(line: 156, column: 5, scope: !11344)
!11352 = !DILocation(line: 156, column: 13, scope: !11344)
!11353 = !DILocation(line: 157, column: 5, scope: !11344)
!11354 = !DILocation(line: 158, column: 5, scope: !11344)
!11355 = !DILocation(line: 159, column: 5, scope: !11344)
!11356 = !DILocation(line: 160, column: 1, scope: !11344)
!11357 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !1077, file: !1077, line: 162, type: !11358, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1076, retainedNodes: !11360)
!11358 = !DISubroutineType(types: !11359)
!11359 = !{null, !104, !103, !104, !720, !103, null}
!11360 = !{!11361, !11362, !11363, !11364, !11365, !11366}
!11361 = !DILocalVariable(name: "func", arg: 1, scope: !11357, file: !1077, line: 162, type: !104)
!11362 = !DILocalVariable(name: "line", arg: 2, scope: !11357, file: !1077, line: 162, type: !103)
!11363 = !DILocalVariable(name: "message", arg: 3, scope: !11357, file: !1077, line: 162, type: !104)
!11364 = !DILocalVariable(name: "data", arg: 4, scope: !11357, file: !1077, line: 162, type: !720)
!11365 = !DILocalVariable(name: "length", arg: 5, scope: !11357, file: !1077, line: 162, type: !103)
!11366 = !DILocalVariable(name: "ap", scope: !11357, file: !1077, line: 164, type: !11305)
!11367 = !DILocation(line: 0, scope: !11357)
!11368 = !DILocation(line: 164, column: 5, scope: !11357)
!11369 = !DILocation(line: 164, column: 13, scope: !11357)
!11370 = !DILocation(line: 165, column: 5, scope: !11357)
!11371 = !DILocation(line: 166, column: 5, scope: !11357)
!11372 = !DILocation(line: 167, column: 5, scope: !11357)
!11373 = !DILocation(line: 168, column: 1, scope: !11357)
!11374 = distinct !DISubprogram(name: "hal_cache_init", scope: !1091, file: !1091, line: 53, type: !11375, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11378)
!11375 = !DISubroutineType(types: !11376)
!11376 = !{!11377}
!11377 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !1094, line: 172, baseType: !1093)
!11378 = !{!11379, !11380}
!11379 = !DILocalVariable(name: "region", scope: !11374, file: !1091, line: 55, type: !1907)
!11380 = !DILocalVariable(name: "irq_flag", scope: !11374, file: !1091, line: 56, type: !38)
!11381 = !DILocation(line: 59, column: 16, scope: !11374)
!11382 = !DILocation(line: 0, scope: !11374)
!11383 = !DILocation(line: 62, column: 9, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11374, file: !1091, line: 62, column: 9)
!11385 = !DILocation(line: 62, column: 9, scope: !11374)
!11386 = !DILocation(line: 64, column: 9, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11384, file: !1091, line: 62, column: 39)
!11388 = !DILocation(line: 66, column: 9, scope: !11387)
!11389 = !DILocation(line: 69, column: 24, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11384, file: !1091, line: 67, column: 12)
!11391 = !DILocation(line: 72, column: 9, scope: !11390)
!11392 = !DILocation(line: 77, column: 5, scope: !11374)
!11393 = !DILocation(line: 80, column: 22, scope: !11374)
!11394 = !DILocation(line: 81, column: 28, scope: !11374)
!11395 = !DILocation(line: 84, column: 19, scope: !11374)
!11396 = !DILocation(line: 85, column: 23, scope: !11374)
!11397 = !DILocation(line: 88, column: 5, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11374, file: !1091, line: 88, column: 5)
!11399 = !DILocation(line: 90, column: 9, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !1091, line: 88, column: 81)
!11401 = distinct !DILexicalBlock(scope: !11398, file: !1091, line: 88, column: 5)
!11402 = !DILocation(line: 90, column: 38, scope: !11400)
!11403 = !DILocation(line: 91, column: 9, scope: !11400)
!11404 = !DILocation(line: 91, column: 42, scope: !11400)
!11405 = !DILocation(line: 94, column: 45, scope: !11400)
!11406 = !DILocation(line: 94, column: 47, scope: !11400)
!11407 = !DILocation(line: 95, column: 49, scope: !11400)
!11408 = !DILocation(line: 95, column: 51, scope: !11400)
!11409 = !DILocation(line: 88, column: 77, scope: !11401)
!11410 = !DILocation(line: 88, column: 46, scope: !11401)
!11411 = distinct !{!11411, !11397, !11412}
!11412 = !DILocation(line: 96, column: 5, scope: !11398)
!11413 = !DILocation(line: 99, column: 1, scope: !11374)
!11414 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !1091, file: !1091, line: 327, type: !11375, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11415)
!11415 = !{!11416}
!11416 = !DILocalVariable(name: "irq_flag", scope: !11414, file: !1091, line: 329, type: !38)
!11417 = !DILocation(line: 332, column: 16, scope: !11414)
!11418 = !DILocation(line: 0, scope: !11414)
!11419 = !DILocation(line: 335, column: 21, scope: !11414)
!11420 = !DILocation(line: 336, column: 21, scope: !11414)
!11421 = !DILocation(line: 339, column: 21, scope: !11414)
!11422 = !DILocation(line: 340, column: 21, scope: !11414)
!11423 = !DILocation(line: 434, column: 3, scope: !11424, inlinedAt: !11426)
!11424 = distinct !DISubprogram(name: "__ISB", scope: !11425, file: !11425, line: 432, type: !110, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !2013)
!11425 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/templates/freertos_create_thread/GCC")
!11426 = distinct !DILocation(line: 343, column: 5, scope: !11414)
!11427 = !{i64 296542}
!11428 = !DILocation(line: 346, column: 5, scope: !11414)
!11429 = !DILocation(line: 348, column: 5, scope: !11414)
!11430 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !1091, file: !1091, line: 101, type: !11375, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11431)
!11431 = !{!11432}
!11432 = !DILocalVariable(name: "region", scope: !11430, file: !1091, line: 103, type: !1907)
!11433 = !DILocation(line: 107, column: 5, scope: !11430)
!11434 = !DILocation(line: 110, column: 22, scope: !11430)
!11435 = !DILocation(line: 111, column: 28, scope: !11430)
!11436 = !DILocation(line: 114, column: 19, scope: !11430)
!11437 = !DILocation(line: 115, column: 23, scope: !11430)
!11438 = !DILocation(line: 0, scope: !11430)
!11439 = !DILocation(line: 118, column: 5, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11430, file: !1091, line: 118, column: 5)
!11441 = !DILocation(line: 120, column: 9, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !1091, line: 118, column: 81)
!11443 = distinct !DILexicalBlock(scope: !11440, file: !1091, line: 118, column: 5)
!11444 = !DILocation(line: 120, column: 38, scope: !11442)
!11445 = !DILocation(line: 121, column: 9, scope: !11442)
!11446 = !DILocation(line: 121, column: 42, scope: !11442)
!11447 = !DILocation(line: 124, column: 45, scope: !11442)
!11448 = !DILocation(line: 124, column: 47, scope: !11442)
!11449 = !DILocation(line: 125, column: 49, scope: !11442)
!11450 = !DILocation(line: 125, column: 51, scope: !11442)
!11451 = !DILocation(line: 118, column: 77, scope: !11443)
!11452 = !DILocation(line: 118, column: 46, scope: !11443)
!11453 = distinct !{!11453, !11439, !11454}
!11454 = !DILocation(line: 126, column: 5, scope: !11440)
!11455 = !DILocation(line: 129, column: 20, scope: !11430)
!11456 = !DILocation(line: 131, column: 5, scope: !11430)
!11457 = distinct !DISubprogram(name: "hal_cache_enable", scope: !1091, file: !1091, line: 134, type: !11375, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !2013)
!11458 = !DILocation(line: 137, column: 45, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11457, file: !1091, line: 137, column: 9)
!11460 = !DILocation(line: 137, column: 28, scope: !11459)
!11461 = !DILocation(line: 137, column: 9, scope: !11457)
!11462 = !DILocation(line: 142, column: 22, scope: !11457)
!11463 = !DILocation(line: 145, column: 28, scope: !11457)
!11464 = !DILocation(line: 145, column: 19, scope: !11457)
!11465 = !DILocation(line: 147, column: 5, scope: !11457)
!11466 = !DILocation(line: 0, scope: !11457)
!11467 = !DILocation(line: 148, column: 1, scope: !11457)
!11468 = distinct !DISubprogram(name: "hal_cache_disable", scope: !1091, file: !1091, line: 150, type: !11375, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11469)
!11469 = !{!11470}
!11470 = !DILocalVariable(name: "irq_flag", scope: !11468, file: !1091, line: 152, type: !38)
!11471 = !DILocation(line: 155, column: 16, scope: !11468)
!11472 = !DILocation(line: 0, scope: !11468)
!11473 = !DILocation(line: 158, column: 16, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11468, file: !1091, line: 158, column: 9)
!11475 = !DILocation(line: 158, column: 26, scope: !11474)
!11476 = !DILocation(line: 158, column: 9, scope: !11468)
!11477 = !DILocation(line: 160, column: 9, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11474, file: !1091, line: 158, column: 49)
!11479 = !DILocation(line: 161, column: 5, scope: !11478)
!11480 = !DILocation(line: 164, column: 22, scope: !11468)
!11481 = !DILocation(line: 167, column: 28, scope: !11468)
!11482 = !DILocation(line: 167, column: 19, scope: !11468)
!11483 = !DILocation(line: 170, column: 5, scope: !11468)
!11484 = !DILocation(line: 172, column: 5, scope: !11468)
!11485 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !1091, file: !1091, line: 175, type: !11486, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11488)
!11486 = !DISubroutineType(types: !11487)
!11487 = !{!11377, !1907}
!11488 = !{!11489}
!11489 = !DILocalVariable(name: "region", arg: 1, scope: !11485, file: !1091, line: 175, type: !1907)
!11490 = !DILocation(line: 0, scope: !11485)
!11491 = !DILocation(line: 178, column: 16, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11485, file: !1091, line: 178, column: 9)
!11493 = !DILocation(line: 178, column: 9, scope: !11485)
!11494 = !DILocation(line: 183, column: 9, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11485, file: !1091, line: 183, column: 9)
!11496 = !DILocation(line: 183, column: 38, scope: !11495)
!11497 = !DILocation(line: 183, column: 9, scope: !11485)
!11498 = !DILocation(line: 184, column: 38, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11495, file: !1091, line: 183, column: 62)
!11500 = !DILocation(line: 184, column: 32, scope: !11499)
!11501 = !DILocation(line: 190, column: 32, scope: !11485)
!11502 = !DILocation(line: 190, column: 23, scope: !11485)
!11503 = !DILocation(line: 192, column: 5, scope: !11485)
!11504 = !DILocation(line: 193, column: 1, scope: !11485)
!11505 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !1091, file: !1091, line: 195, type: !11486, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11506)
!11506 = !{!11507}
!11507 = !DILocalVariable(name: "region", arg: 1, scope: !11505, file: !1091, line: 195, type: !1907)
!11508 = !DILocation(line: 0, scope: !11505)
!11509 = !DILocation(line: 198, column: 16, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11505, file: !1091, line: 198, column: 9)
!11511 = !DILocation(line: 198, column: 9, scope: !11505)
!11512 = !DILocation(line: 203, column: 35, scope: !11505)
!11513 = !DILocation(line: 203, column: 31, scope: !11505)
!11514 = !DILocation(line: 203, column: 28, scope: !11505)
!11515 = !DILocation(line: 206, column: 32, scope: !11505)
!11516 = !DILocation(line: 206, column: 23, scope: !11505)
!11517 = !DILocation(line: 209, column: 41, scope: !11505)
!11518 = !DILocation(line: 209, column: 43, scope: !11505)
!11519 = !DILocation(line: 210, column: 45, scope: !11505)
!11520 = !DILocation(line: 210, column: 47, scope: !11505)
!11521 = !DILocation(line: 212, column: 5, scope: !11505)
!11522 = !DILocation(line: 213, column: 1, scope: !11505)
!11523 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !1091, file: !1091, line: 215, type: !11524, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11527)
!11524 = !DISubroutineType(types: !11525)
!11525 = !{!11377, !11526}
!11526 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !1094, line: 182, baseType: !1123)
!11527 = !{!11528}
!11528 = !DILocalVariable(name: "cache_size", arg: 1, scope: !11523, file: !1091, line: 215, type: !11526)
!11529 = !DILocation(line: 0, scope: !11523)
!11530 = !DILocation(line: 218, column: 20, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11523, file: !1091, line: 218, column: 9)
!11532 = !DILocation(line: 218, column: 9, scope: !11523)
!11533 = !DILocation(line: 223, column: 22, scope: !11523)
!11534 = !DILocation(line: 224, column: 37, scope: !11523)
!11535 = !DILocation(line: 224, column: 22, scope: !11523)
!11536 = !DILocation(line: 227, column: 20, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11523, file: !1091, line: 227, column: 9)
!11538 = !DILocation(line: 227, column: 9, scope: !11523)
!11539 = !DILocation(line: 228, column: 26, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11537, file: !1091, line: 227, column: 43)
!11541 = !DILocation(line: 229, column: 5, scope: !11540)
!11542 = !DILocation(line: 232, column: 28, scope: !11523)
!11543 = !DILocation(line: 232, column: 19, scope: !11523)
!11544 = !DILocation(line: 234, column: 5, scope: !11523)
!11545 = !DILocation(line: 235, column: 1, scope: !11523)
!11546 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !1091, file: !1091, line: 237, type: !11547, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11556)
!11547 = !DISubroutineType(types: !11548)
!11548 = !{!11377, !1907, !11549}
!11549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11550, size: 32)
!11550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11551)
!11551 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !1094, line: 222, baseType: !11552)
!11552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 219, size: 64, elements: !11553)
!11553 = !{!11554, !11555}
!11554 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !11552, file: !1094, line: 220, baseType: !38, size: 32)
!11555 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !11552, file: !1094, line: 221, baseType: !38, size: 32, offset: 32)
!11556 = !{!11557, !11558}
!11557 = !DILocalVariable(name: "region", arg: 1, scope: !11546, file: !1091, line: 237, type: !1907)
!11558 = !DILocalVariable(name: "region_config", arg: 2, scope: !11546, file: !1091, line: 237, type: !11549)
!11559 = !DILocation(line: 0, scope: !11546)
!11560 = !DILocation(line: 240, column: 16, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11546, file: !1091, line: 240, column: 9)
!11562 = !DILocation(line: 240, column: 9, scope: !11546)
!11563 = !DILocation(line: 245, column: 23, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11546, file: !1091, line: 245, column: 9)
!11565 = !DILocation(line: 245, column: 9, scope: !11546)
!11566 = !DILocation(line: 250, column: 24, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11546, file: !1091, line: 250, column: 9)
!11568 = !DILocation(line: 250, column: 45, scope: !11567)
!11569 = !DILocation(line: 250, column: 9, scope: !11546)
!11570 = !DILocation(line: 251, column: 9, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11567, file: !1091, line: 250, column: 81)
!11572 = !DILocation(line: 256, column: 24, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11546, file: !1091, line: 256, column: 9)
!11574 = !DILocation(line: 256, column: 42, scope: !11573)
!11575 = !DILocation(line: 256, column: 9, scope: !11546)
!11576 = !DILocation(line: 257, column: 9, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11573, file: !1091, line: 256, column: 78)
!11578 = !DILocation(line: 262, column: 5, scope: !11546)
!11579 = !DILocation(line: 262, column: 34, scope: !11546)
!11580 = !DILocation(line: 263, column: 55, scope: !11546)
!11581 = !DILocation(line: 263, column: 93, scope: !11546)
!11582 = !DILocation(line: 263, column: 76, scope: !11546)
!11583 = !DILocation(line: 263, column: 5, scope: !11546)
!11584 = !DILocation(line: 263, column: 38, scope: !11546)
!11585 = !DILocation(line: 266, column: 34, scope: !11546)
!11586 = !DILocation(line: 269, column: 45, scope: !11546)
!11587 = !DILocation(line: 269, column: 41, scope: !11546)
!11588 = !DILocation(line: 269, column: 43, scope: !11546)
!11589 = !DILocation(line: 270, column: 49, scope: !11546)
!11590 = !DILocation(line: 270, column: 45, scope: !11546)
!11591 = !DILocation(line: 270, column: 47, scope: !11546)
!11592 = !DILocation(line: 272, column: 5, scope: !11546)
!11593 = !DILocation(line: 273, column: 1, scope: !11546)
!11594 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !1091, file: !1091, line: 275, type: !11595, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11597)
!11595 = !DISubroutineType(types: !11596)
!11596 = !{!11377, !38}
!11597 = !{!11598, !11599}
!11598 = !DILocalVariable(name: "address", arg: 1, scope: !11594, file: !1091, line: 275, type: !38)
!11599 = !DILocalVariable(name: "irq_flag", scope: !11594, file: !1091, line: 277, type: !38)
!11600 = !DILocation(line: 0, scope: !11594)
!11601 = !DILocation(line: 280, column: 17, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11594, file: !1091, line: 280, column: 9)
!11603 = !DILocation(line: 280, column: 9, scope: !11594)
!11604 = !DILocation(line: 284, column: 16, scope: !11594)
!11605 = !DILocation(line: 287, column: 32, scope: !11594)
!11606 = !DILocation(line: 287, column: 21, scope: !11594)
!11607 = !DILocation(line: 288, column: 21, scope: !11594)
!11608 = !DILocation(line: 434, column: 3, scope: !11424, inlinedAt: !11609)
!11609 = distinct !DILocation(line: 291, column: 5, scope: !11594)
!11610 = !DILocation(line: 294, column: 5, scope: !11594)
!11611 = !DILocation(line: 296, column: 5, scope: !11594)
!11612 = !DILocation(line: 297, column: 1, scope: !11594)
!11613 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !1091, file: !1091, line: 299, type: !11614, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11616)
!11614 = !DISubroutineType(types: !11615)
!11615 = !{!11377, !38, !38}
!11616 = !{!11617, !11618, !11619, !11620}
!11617 = !DILocalVariable(name: "address", arg: 1, scope: !11613, file: !1091, line: 299, type: !38)
!11618 = !DILocalVariable(name: "length", arg: 2, scope: !11613, file: !1091, line: 299, type: !38)
!11619 = !DILocalVariable(name: "irq_flag", scope: !11613, file: !1091, line: 301, type: !38)
!11620 = !DILocalVariable(name: "end_address", scope: !11613, file: !1091, line: 302, type: !38)
!11621 = !DILocation(line: 0, scope: !11613)
!11622 = !DILocation(line: 302, column: 36, scope: !11613)
!11623 = !DILocation(line: 305, column: 47, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11613, file: !1091, line: 305, column: 9)
!11625 = !DILocation(line: 310, column: 16, scope: !11613)
!11626 = !DILocation(line: 313, column: 20, scope: !11613)
!11627 = !DILocation(line: 313, column: 5, scope: !11613)
!11628 = !DILocation(line: 314, column: 9, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11613, file: !1091, line: 313, column: 35)
!11630 = !DILocation(line: 315, column: 17, scope: !11629)
!11631 = distinct !{!11631, !11627, !11632}
!11632 = !DILocation(line: 316, column: 5, scope: !11613)
!11633 = !DILocation(line: 434, column: 3, scope: !11424, inlinedAt: !11634)
!11634 = distinct !DILocation(line: 319, column: 5, scope: !11613)
!11635 = !DILocation(line: 322, column: 5, scope: !11613)
!11636 = !DILocation(line: 324, column: 5, scope: !11613)
!11637 = !DILocation(line: 325, column: 1, scope: !11613)
!11638 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !1091, file: !1091, line: 351, type: !11595, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11639)
!11639 = !{!11640, !11641}
!11640 = !DILocalVariable(name: "address", arg: 1, scope: !11638, file: !1091, line: 351, type: !38)
!11641 = !DILocalVariable(name: "irq_flag", scope: !11638, file: !1091, line: 353, type: !38)
!11642 = !DILocation(line: 0, scope: !11638)
!11643 = !DILocation(line: 356, column: 17, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11638, file: !1091, line: 356, column: 9)
!11645 = !DILocation(line: 356, column: 9, scope: !11638)
!11646 = !DILocation(line: 361, column: 16, scope: !11638)
!11647 = !DILocation(line: 364, column: 32, scope: !11638)
!11648 = !DILocation(line: 364, column: 21, scope: !11638)
!11649 = !DILocation(line: 365, column: 21, scope: !11638)
!11650 = !DILocation(line: 434, column: 3, scope: !11424, inlinedAt: !11651)
!11651 = distinct !DILocation(line: 368, column: 5, scope: !11638)
!11652 = !DILocation(line: 371, column: 5, scope: !11638)
!11653 = !DILocation(line: 373, column: 5, scope: !11638)
!11654 = !DILocation(line: 374, column: 1, scope: !11638)
!11655 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !1091, file: !1091, line: 376, type: !11614, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11656)
!11656 = !{!11657, !11658, !11659, !11660}
!11657 = !DILocalVariable(name: "address", arg: 1, scope: !11655, file: !1091, line: 376, type: !38)
!11658 = !DILocalVariable(name: "length", arg: 2, scope: !11655, file: !1091, line: 376, type: !38)
!11659 = !DILocalVariable(name: "irq_flag", scope: !11655, file: !1091, line: 378, type: !38)
!11660 = !DILocalVariable(name: "end_address", scope: !11655, file: !1091, line: 379, type: !38)
!11661 = !DILocation(line: 0, scope: !11655)
!11662 = !DILocation(line: 379, column: 36, scope: !11655)
!11663 = !DILocation(line: 382, column: 47, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11655, file: !1091, line: 382, column: 9)
!11665 = !DILocation(line: 387, column: 16, scope: !11655)
!11666 = !DILocation(line: 390, column: 20, scope: !11655)
!11667 = !DILocation(line: 390, column: 5, scope: !11655)
!11668 = !DILocation(line: 391, column: 9, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11655, file: !1091, line: 390, column: 35)
!11670 = !DILocation(line: 392, column: 17, scope: !11669)
!11671 = distinct !{!11671, !11667, !11672}
!11672 = !DILocation(line: 393, column: 5, scope: !11655)
!11673 = !DILocation(line: 434, column: 3, scope: !11424, inlinedAt: !11674)
!11674 = distinct !DILocation(line: 396, column: 5, scope: !11655)
!11675 = !DILocation(line: 399, column: 5, scope: !11655)
!11676 = !DILocation(line: 401, column: 5, scope: !11655)
!11677 = !DILocation(line: 402, column: 1, scope: !11655)
!11678 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !1091, file: !1091, line: 404, type: !11375, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11679)
!11679 = !{!11680}
!11680 = !DILocalVariable(name: "irq_flag", scope: !11678, file: !1091, line: 406, type: !38)
!11681 = !DILocation(line: 409, column: 16, scope: !11678)
!11682 = !DILocation(line: 0, scope: !11678)
!11683 = !DILocation(line: 412, column: 21, scope: !11678)
!11684 = !DILocation(line: 413, column: 21, scope: !11678)
!11685 = !DILocation(line: 434, column: 3, scope: !11424, inlinedAt: !11686)
!11686 = distinct !DILocation(line: 416, column: 5, scope: !11678)
!11687 = !DILocation(line: 419, column: 5, scope: !11678)
!11688 = !DILocation(line: 421, column: 5, scope: !11678)
!11689 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !1091, file: !1091, line: 424, type: !11690, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1090, retainedNodes: !11692)
!11690 = !DISubroutineType(types: !11691)
!11691 = !{!536, !38}
!11692 = !{!11693, !11694}
!11693 = !DILocalVariable(name: "address", arg: 1, scope: !11689, file: !1091, line: 424, type: !38)
!11694 = !DILocalVariable(name: "region", scope: !11689, file: !1091, line: 426, type: !1907)
!11695 = !DILocation(line: 0, scope: !11689)
!11696 = !DILocation(line: 429, column: 18, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11689, file: !1091, line: 429, column: 9)
!11698 = !DILocation(line: 429, column: 28, scope: !11697)
!11699 = !DILocation(line: 429, column: 9, scope: !11689)
!11700 = !DILocation(line: 435, column: 20, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11702, file: !1091, line: 435, column: 13)
!11702 = distinct !DILexicalBlock(scope: !11703, file: !1091, line: 433, column: 81)
!11703 = distinct !DILexicalBlock(scope: !11704, file: !1091, line: 433, column: 5)
!11704 = distinct !DILexicalBlock(scope: !11689, file: !1091, line: 433, column: 5)
!11705 = !DILocation(line: 435, column: 41, scope: !11701)
!11706 = !DILocation(line: 435, column: 36, scope: !11701)
!11707 = !DILocation(line: 435, column: 13, scope: !11702)
!11708 = !DILocation(line: 436, column: 30, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11710, file: !1091, line: 436, column: 17)
!11710 = distinct !DILexicalBlock(scope: !11701, file: !1091, line: 435, column: 53)
!11711 = !DILocation(line: 436, column: 59, scope: !11709)
!11712 = !DILocation(line: 436, column: 26, scope: !11709)
!11713 = !DILocation(line: 436, column: 85, scope: !11709)
!11714 = !DILocation(line: 436, column: 99, scope: !11709)
!11715 = !DILocation(line: 436, column: 97, scope: !11709)
!11716 = !DILocation(line: 436, column: 17, scope: !11710)
!11717 = !DILocation(line: 433, column: 77, scope: !11703)
!11718 = !DILocation(line: 433, column: 46, scope: !11703)
!11719 = !DILocation(line: 433, column: 5, scope: !11704)
!11720 = distinct !{!11720, !11719, !11721}
!11721 = !DILocation(line: 440, column: 5, scope: !11704)
!11722 = !DILocation(line: 442, column: 1, scope: !11689)
!11723 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1222, file: !1222, line: 60, type: !11724, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !2013)
!11724 = !DISubroutineType(types: !11725)
!11725 = !{!11726}
!11726 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !1225, line: 158, baseType: !1224)
!11727 = !DILocation(line: 62, column: 5, scope: !11723)
!11728 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1222, file: !1222, line: 65, type: !11729, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11731)
!11729 = !DISubroutineType(types: !11730)
!11730 = !{!11726, !1073}
!11731 = !{!11732, !11733}
!11732 = !DILocalVariable(name: "irq_number", arg: 1, scope: !11728, file: !1222, line: 65, type: !1073)
!11733 = !DILocalVariable(name: "status", scope: !11728, file: !1222, line: 67, type: !11726)
!11734 = !DILocation(line: 0, scope: !11728)
!11735 = !DILocation(line: 69, column: 40, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11728, file: !1222, line: 69, column: 9)
!11737 = !DILocation(line: 73, column: 9, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11736, file: !1222, line: 72, column: 12)
!11739 = !DILocation(line: 77, column: 5, scope: !11728)
!11740 = !DILocation(line: 78, column: 1, scope: !11728)
!11741 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !396, file: !396, line: 1494, type: !11742, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11744)
!11742 = !DISubroutineType(types: !11743)
!11743 = !{null, !895}
!11744 = !{!11745}
!11745 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11741, file: !396, line: 1494, type: !895)
!11746 = !DILocation(line: 0, scope: !11741)
!11747 = !DILocation(line: 1497, column: 91, scope: !11741)
!11748 = !DILocation(line: 1497, column: 61, scope: !11741)
!11749 = !DILocation(line: 1497, column: 40, scope: !11741)
!11750 = !DILocation(line: 1497, column: 3, scope: !11741)
!11751 = !DILocation(line: 1497, column: 46, scope: !11741)
!11752 = !DILocation(line: 1498, column: 1, scope: !11741)
!11753 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1222, file: !1222, line: 80, type: !11729, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11754)
!11754 = !{!11755, !11756}
!11755 = !DILocalVariable(name: "irq_number", arg: 1, scope: !11753, file: !1222, line: 80, type: !1073)
!11756 = !DILocalVariable(name: "status", scope: !11753, file: !1222, line: 82, type: !11726)
!11757 = !DILocation(line: 0, scope: !11753)
!11758 = !DILocation(line: 84, column: 40, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11753, file: !1222, line: 84, column: 9)
!11760 = !DILocation(line: 88, column: 9, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11759, file: !1222, line: 87, column: 12)
!11762 = !DILocation(line: 92, column: 5, scope: !11753)
!11763 = !DILocation(line: 93, column: 1, scope: !11753)
!11764 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !396, file: !396, line: 1507, type: !11742, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11765)
!11765 = !{!11766}
!11766 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11764, file: !396, line: 1507, type: !895)
!11767 = !DILocation(line: 0, scope: !11764)
!11768 = !DILocation(line: 1509, column: 65, scope: !11764)
!11769 = !DILocation(line: 1509, column: 44, scope: !11764)
!11770 = !DILocation(line: 1509, column: 32, scope: !11764)
!11771 = !DILocation(line: 1509, column: 3, scope: !11764)
!11772 = !DILocation(line: 1509, column: 39, scope: !11764)
!11773 = !DILocation(line: 1510, column: 1, scope: !11764)
!11774 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1222, file: !1222, line: 95, type: !11775, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11777)
!11775 = !DISubroutineType(types: !11776)
!11776 = !{!38, !1073}
!11777 = !{!11778, !11779}
!11778 = !DILocalVariable(name: "irq_number", arg: 1, scope: !11774, file: !1222, line: 95, type: !1073)
!11779 = !DILocalVariable(name: "ret", scope: !11774, file: !1222, line: 97, type: !38)
!11780 = !DILocation(line: 0, scope: !11774)
!11781 = !DILocation(line: 99, column: 40, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11774, file: !1222, line: 99, column: 9)
!11783 = !DILocation(line: 102, column: 15, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11782, file: !1222, line: 101, column: 12)
!11785 = !DILocation(line: 105, column: 5, scope: !11774)
!11786 = !DILocation(line: 106, column: 1, scope: !11774)
!11787 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !396, file: !396, line: 1523, type: !11788, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11790)
!11788 = !DISubroutineType(types: !11789)
!11789 = !{!38, !895}
!11790 = !{!11791}
!11791 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11787, file: !396, line: 1523, type: !895)
!11792 = !DILocation(line: 0, scope: !11787)
!11793 = !DILocation(line: 1525, column: 51, scope: !11787)
!11794 = !DILocation(line: 1525, column: 23, scope: !11787)
!11795 = !DILocation(line: 1525, column: 83, scope: !11787)
!11796 = !DILocation(line: 1525, column: 22, scope: !11787)
!11797 = !DILocation(line: 1525, column: 3, scope: !11787)
!11798 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1222, file: !1222, line: 108, type: !11729, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11799)
!11799 = !{!11800, !11801}
!11800 = !DILocalVariable(name: "irq_number", arg: 1, scope: !11798, file: !1222, line: 108, type: !1073)
!11801 = !DILocalVariable(name: "status", scope: !11798, file: !1222, line: 110, type: !11726)
!11802 = !DILocation(line: 0, scope: !11798)
!11803 = !DILocation(line: 112, column: 40, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11798, file: !1222, line: 112, column: 9)
!11805 = !DILocation(line: 116, column: 9, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11804, file: !1222, line: 115, column: 12)
!11807 = !DILocation(line: 120, column: 5, scope: !11798)
!11808 = !DILocation(line: 121, column: 1, scope: !11798)
!11809 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !396, file: !396, line: 1535, type: !11742, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11810)
!11810 = !{!11811}
!11811 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11809, file: !396, line: 1535, type: !895)
!11812 = !DILocation(line: 0, scope: !11809)
!11813 = !DILocation(line: 1537, column: 65, scope: !11809)
!11814 = !DILocation(line: 1537, column: 44, scope: !11809)
!11815 = !DILocation(line: 1537, column: 32, scope: !11809)
!11816 = !DILocation(line: 1537, column: 3, scope: !11809)
!11817 = !DILocation(line: 1537, column: 39, scope: !11809)
!11818 = !DILocation(line: 1538, column: 1, scope: !11809)
!11819 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1222, file: !1222, line: 123, type: !11729, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11820)
!11820 = !{!11821, !11822}
!11821 = !DILocalVariable(name: "irq_number", arg: 1, scope: !11819, file: !1222, line: 123, type: !1073)
!11822 = !DILocalVariable(name: "status", scope: !11819, file: !1222, line: 125, type: !11726)
!11823 = !DILocation(line: 0, scope: !11819)
!11824 = !DILocation(line: 127, column: 40, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11819, file: !1222, line: 127, column: 9)
!11826 = !DILocation(line: 131, column: 9, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11825, file: !1222, line: 130, column: 12)
!11828 = !DILocation(line: 135, column: 5, scope: !11819)
!11829 = !DILocation(line: 136, column: 1, scope: !11819)
!11830 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !396, file: !396, line: 1547, type: !11742, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11831)
!11831 = !{!11832}
!11832 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11830, file: !396, line: 1547, type: !895)
!11833 = !DILocation(line: 0, scope: !11830)
!11834 = !DILocation(line: 1549, column: 65, scope: !11830)
!11835 = !DILocation(line: 1549, column: 44, scope: !11830)
!11836 = !DILocation(line: 1549, column: 32, scope: !11830)
!11837 = !DILocation(line: 1549, column: 3, scope: !11830)
!11838 = !DILocation(line: 1549, column: 39, scope: !11830)
!11839 = !DILocation(line: 1550, column: 1, scope: !11830)
!11840 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1222, file: !1222, line: 138, type: !11841, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11843)
!11841 = !DISubroutineType(types: !11842)
!11842 = !{!11726, !1073, !38}
!11843 = !{!11844, !11845, !11846}
!11844 = !DILocalVariable(name: "irq_number", arg: 1, scope: !11840, file: !1222, line: 138, type: !1073)
!11845 = !DILocalVariable(name: "priority", arg: 2, scope: !11840, file: !1222, line: 138, type: !38)
!11846 = !DILocalVariable(name: "status", scope: !11840, file: !1222, line: 140, type: !11726)
!11847 = !DILocation(line: 0, scope: !11840)
!11848 = !DILocation(line: 142, column: 40, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11840, file: !1222, line: 142, column: 9)
!11850 = !DILocation(line: 146, column: 9, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11849, file: !1222, line: 145, column: 12)
!11852 = !DILocation(line: 150, column: 5, scope: !11840)
!11853 = !DILocation(line: 151, column: 1, scope: !11840)
!11854 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !396, file: !396, line: 1577, type: !11855, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11857)
!11855 = !DISubroutineType(types: !11856)
!11856 = !{null, !895, !38}
!11857 = !{!11858, !11859}
!11858 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11854, file: !396, line: 1577, type: !895)
!11859 = !DILocalVariable(name: "priority", arg: 2, scope: !11854, file: !396, line: 1577, type: !38)
!11860 = !DILocation(line: 0, scope: !11854)
!11861 = !DILocation(line: 1582, column: 34, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11863, file: !396, line: 1581, column: 8)
!11863 = distinct !DILexicalBlock(scope: !11854, file: !396, line: 1579, column: 6)
!11864 = !DILocation(line: 1582, column: 5, scope: !11862)
!11865 = !DILocation(line: 1582, column: 32, scope: !11862)
!11866 = !DILocation(line: 1583, column: 1, scope: !11854)
!11867 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1222, file: !1222, line: 153, type: !11775, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11868)
!11868 = !{!11869, !11870}
!11869 = !DILocalVariable(name: "irq_number", arg: 1, scope: !11867, file: !1222, line: 153, type: !1073)
!11870 = !DILocalVariable(name: "ret", scope: !11867, file: !1222, line: 155, type: !38)
!11871 = !DILocation(line: 0, scope: !11867)
!11872 = !DILocation(line: 157, column: 40, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11867, file: !1222, line: 157, column: 9)
!11874 = !DILocation(line: 160, column: 15, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11873, file: !1222, line: 159, column: 12)
!11876 = !DILocation(line: 163, column: 5, scope: !11867)
!11877 = !DILocation(line: 164, column: 1, scope: !11867)
!11878 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !396, file: !396, line: 1597, type: !11788, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11879)
!11879 = !{!11880}
!11880 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11878, file: !396, line: 1597, type: !895)
!11881 = !DILocation(line: 0, scope: !11878)
!11882 = !DILocation(line: 1603, column: 23, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11884, file: !396, line: 1602, column: 8)
!11884 = distinct !DILexicalBlock(scope: !11878, file: !396, line: 1600, column: 6)
!11885 = !DILocation(line: 1603, column: 60, scope: !11883)
!11886 = !DILocation(line: 1604, column: 1, scope: !11878)
!11887 = distinct !DISubprogram(name: "isrC_main", scope: !1222, file: !1222, line: 178, type: !11724, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11888)
!11888 = !{!11889, !11890}
!11889 = !DILocalVariable(name: "status", scope: !11887, file: !1222, line: 180, type: !11726)
!11890 = !DILocalVariable(name: "irq_number", scope: !11887, file: !1222, line: 181, type: !1073)
!11891 = !DILocation(line: 0, scope: !11887)
!11892 = !DILocation(line: 185, column: 5, scope: !11887)
!11893 = !DILocation(line: 188, column: 34, scope: !11887)
!11894 = !DILocation(line: 189, column: 24, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11887, file: !1222, line: 189, column: 9)
!11896 = !DILocation(line: 192, column: 48, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11895, file: !1222, line: 192, column: 16)
!11898 = !DILocation(line: 192, column: 62, scope: !11897)
!11899 = !DILocation(line: 192, column: 16, scope: !11895)
!11900 = !DILocation(line: 194, column: 9, scope: !11901)
!11901 = distinct !DILexicalBlock(scope: !11897, file: !1222, line: 192, column: 71)
!11902 = !DILocation(line: 195, column: 9, scope: !11901)
!11903 = !DILocation(line: 197, column: 55, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11897, file: !1222, line: 196, column: 12)
!11905 = !DILocation(line: 197, column: 41, scope: !11904)
!11906 = !DILocation(line: 197, column: 53, scope: !11904)
!11907 = !DILocation(line: 198, column: 41, scope: !11904)
!11908 = !DILocation(line: 198, column: 9, scope: !11904)
!11909 = !DILocation(line: 202, column: 5, scope: !11887)
!11910 = !DILocation(line: 203, column: 1, scope: !11887)
!11911 = distinct !DISubprogram(name: "get_current_irq", scope: !1222, file: !1222, line: 166, type: !2643, scopeLine: 167, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11912)
!11912 = !{!11913}
!11913 = !DILocalVariable(name: "irq_num", scope: !11911, file: !1222, line: 168, type: !38)
!11914 = !DILocation(line: 168, column: 31, scope: !11911)
!11915 = !DILocation(line: 168, column: 36, scope: !11911)
!11916 = !DILocation(line: 0, scope: !11911)
!11917 = !DILocation(line: 169, column: 21, scope: !11911)
!11918 = !DILocation(line: 169, column: 5, scope: !11911)
!11919 = distinct !DISubprogram(name: "get_pending_irq", scope: !1222, file: !1222, line: 55, type: !2643, scopeLine: 56, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !2013)
!11920 = !DILocation(line: 57, column: 19, scope: !11919)
!11921 = !DILocation(line: 57, column: 51, scope: !11919)
!11922 = !DILocation(line: 57, column: 5, scope: !11919)
!11923 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1222, file: !1222, line: 205, type: !11924, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11927)
!11924 = !DISubroutineType(types: !11925)
!11925 = !{!11726, !1073, !11926}
!11926 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !1225, line: 175, baseType: !1296)
!11927 = !{!11928, !11929, !11930}
!11928 = !DILocalVariable(name: "irq_number", arg: 1, scope: !11923, file: !1222, line: 205, type: !1073)
!11929 = !DILocalVariable(name: "callback", arg: 2, scope: !11923, file: !1222, line: 205, type: !11926)
!11930 = !DILocalVariable(name: "mask", scope: !11923, file: !1222, line: 207, type: !38)
!11931 = !DILocation(line: 0, scope: !11923)
!11932 = !DILocation(line: 209, column: 24, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11923, file: !1222, line: 209, column: 9)
!11934 = !DILocation(line: 213, column: 12, scope: !11923)
!11935 = !DILocation(line: 214, column: 5, scope: !11923)
!11936 = !DILocation(line: 215, column: 37, scope: !11923)
!11937 = !DILocation(line: 215, column: 51, scope: !11923)
!11938 = !DILocation(line: 216, column: 37, scope: !11923)
!11939 = !DILocation(line: 216, column: 49, scope: !11923)
!11940 = !DILocation(line: 217, column: 5, scope: !11923)
!11941 = !DILocation(line: 219, column: 5, scope: !11923)
!11942 = !DILocation(line: 220, column: 1, scope: !11923)
!11943 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1222, file: !1222, line: 222, type: !11944, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11946)
!11944 = !DISubroutineType(types: !11945)
!11945 = !{!11726, !3134}
!11946 = !{!11947}
!11947 = !DILocalVariable(name: "mask", arg: 1, scope: !11943, file: !1222, line: 222, type: !3134)
!11948 = !DILocation(line: 0, scope: !11943)
!11949 = !DILocation(line: 224, column: 13, scope: !11943)
!11950 = !DILocation(line: 224, column: 11, scope: !11943)
!11951 = !DILocation(line: 225, column: 5, scope: !11943)
!11952 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1222, file: !1222, line: 228, type: !11953, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1221, retainedNodes: !11955)
!11953 = !DISubroutineType(types: !11954)
!11954 = !{!11726, !38}
!11955 = !{!11956}
!11956 = !DILocalVariable(name: "mask", arg: 1, scope: !11952, file: !1222, line: 228, type: !38)
!11957 = !DILocation(line: 0, scope: !11952)
!11958 = !DILocation(line: 230, column: 5, scope: !11952)
!11959 = !DILocation(line: 231, column: 5, scope: !11952)
!11960 = distinct !DISubprogram(name: "hal_flash_init", scope: !1890, file: !1890, line: 42, type: !11961, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1889, retainedNodes: !11964)
!11961 = !DISubroutineType(types: !11962)
!11962 = !{!11963}
!11963 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !813, line: 119, baseType: !1892)
!11964 = !{!11965}
!11965 = !DILocalVariable(name: "ret_value", scope: !11960, file: !1890, line: 44, type: !1233)
!11966 = !DILocation(line: 0, scope: !11960)
!11967 = !DILocation(line: 45, column: 17, scope: !11960)
!11968 = !DILocation(line: 46, column: 12, scope: !11960)
!11969 = !DILocation(line: 46, column: 5, scope: !11960)
!11970 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1890, file: !1890, line: 49, type: !11961, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1889, retainedNodes: !2013)
!11971 = !DILocation(line: 51, column: 5, scope: !11970)
!11972 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1890, file: !1890, line: 54, type: !11973, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1889, retainedNodes: !11976)
!11973 = !DISubroutineType(types: !11974)
!11974 = !{!11963, !38, !11975}
!11975 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !813, line: 127, baseType: !812)
!11976 = !{!11977, !11978, !11979}
!11977 = !DILocalVariable(name: "start_address", arg: 1, scope: !11972, file: !1890, line: 54, type: !38)
!11978 = !DILocalVariable(name: "block", arg: 2, scope: !11972, file: !1890, line: 54, type: !11975)
!11979 = !DILocalVariable(name: "ret_value", scope: !11972, file: !1890, line: 56, type: !1233)
!11980 = !DILocation(line: 0, scope: !11972)
!11981 = !DILocation(line: 57, column: 17, scope: !11972)
!11982 = !DILocation(line: 58, column: 12, scope: !11972)
!11983 = !DILocation(line: 58, column: 5, scope: !11972)
!11984 = distinct !DISubprogram(name: "hal_flash_read", scope: !1890, file: !1890, line: 62, type: !11985, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1889, retainedNodes: !11987)
!11985 = !DISubroutineType(types: !11986)
!11986 = !{!11963, !38, !95, !38}
!11987 = !{!11988, !11989, !11990}
!11988 = !DILocalVariable(name: "start_address", arg: 1, scope: !11984, file: !1890, line: 62, type: !38)
!11989 = !DILocalVariable(name: "buffer", arg: 2, scope: !11984, file: !1890, line: 62, type: !95)
!11990 = !DILocalVariable(name: "length", arg: 3, scope: !11984, file: !1890, line: 62, type: !38)
!11991 = !DILocation(line: 0, scope: !11984)
!11992 = !DILocation(line: 64, column: 50, scope: !11984)
!11993 = !DILocation(line: 64, column: 27, scope: !11984)
!11994 = !DILocation(line: 64, column: 5, scope: !11984)
!11995 = !DILocation(line: 65, column: 5, scope: !11984)
!11996 = distinct !DISubprogram(name: "hal_flash_write", scope: !1890, file: !1890, line: 68, type: !11997, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1889, retainedNodes: !11999)
!11997 = !DISubroutineType(types: !11998)
!11998 = !{!11963, !38, !3267, !38}
!11999 = !{!12000, !12001, !12002, !12003}
!12000 = !DILocalVariable(name: "address", arg: 1, scope: !11996, file: !1890, line: 68, type: !38)
!12001 = !DILocalVariable(name: "data", arg: 2, scope: !11996, file: !1890, line: 68, type: !3267)
!12002 = !DILocalVariable(name: "length", arg: 3, scope: !11996, file: !1890, line: 68, type: !38)
!12003 = !DILocalVariable(name: "ret_value", scope: !11996, file: !1890, line: 70, type: !1233)
!12004 = !DILocation(line: 0, scope: !11996)
!12005 = !DILocation(line: 70, column: 25, scope: !11996)
!12006 = !DILocation(line: 71, column: 12, scope: !11996)
!12007 = !DILocation(line: 71, column: 5, scope: !11996)
!12008 = distinct !DISubprogram(name: "hal_gpt_init", scope: !1305, file: !1305, line: 82, type: !12009, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12012)
!12009 = !DISubroutineType(types: !12010)
!12010 = !{!8215, !12011}
!12011 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !592, line: 663, baseType: !1307)
!12012 = !{!12013}
!12013 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !12008, file: !1305, line: 82, type: !12011)
!12014 = !DILocation(line: 0, scope: !12008)
!12015 = !DILocation(line: 84, column: 9, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12008, file: !1305, line: 84, column: 9)
!12017 = !DILocation(line: 84, column: 33, scope: !12016)
!12018 = !DILocation(line: 84, column: 9, scope: !12008)
!12019 = !DILocation(line: 88, column: 9, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12008, file: !1305, line: 88, column: 9)
!12021 = !DILocation(line: 88, column: 9, scope: !12008)
!12022 = !DILocation(line: 89, column: 9, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12020, file: !1305, line: 88, column: 50)
!12024 = !DILocation(line: 90, column: 9, scope: !12023)
!12025 = !DILocation(line: 92, column: 12, scope: !12008)
!12026 = !DILocation(line: 92, column: 5, scope: !12008)
!12027 = !DILocation(line: 96, column: 43, scope: !12008)
!12028 = !DILocation(line: 98, column: 5, scope: !12008)
!12029 = !DILocation(line: 99, column: 1, scope: !12008)
!12030 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !1305, file: !1305, line: 63, type: !12031, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12033)
!12031 = !DISubroutineType(types: !12032)
!12032 = !{!536, !12011}
!12033 = !{!12034}
!12034 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !12030, file: !1305, line: 63, type: !12011)
!12035 = !DILocation(line: 0, scope: !12030)
!12036 = !DILocation(line: 65, column: 19, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12030, file: !1305, line: 65, column: 9)
!12038 = !DILocation(line: 65, column: 34, scope: !12037)
!12039 = !DILocation(line: 70, column: 1, scope: !12030)
!12040 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !1305, file: !1305, line: 101, type: !12009, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12041)
!12041 = !{!12042}
!12042 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !12040, file: !1305, line: 101, type: !12011)
!12043 = !DILocation(line: 0, scope: !12040)
!12044 = !DILocation(line: 103, column: 9, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12040, file: !1305, line: 103, column: 9)
!12046 = !DILocation(line: 103, column: 9, scope: !12040)
!12047 = !DILocation(line: 104, column: 9, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12045, file: !1305, line: 103, column: 50)
!12049 = !DILocation(line: 105, column: 9, scope: !12048)
!12050 = !DILocation(line: 108, column: 9, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12040, file: !1305, line: 108, column: 9)
!12052 = !DILocation(line: 108, column: 33, scope: !12051)
!12053 = !DILocation(line: 108, column: 48, scope: !12051)
!12054 = !DILocation(line: 108, column: 9, scope: !12040)
!12055 = !DILocation(line: 109, column: 9, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12051, file: !1305, line: 108, column: 68)
!12057 = !DILocation(line: 110, column: 9, scope: !12056)
!12058 = !DILocation(line: 113, column: 12, scope: !12040)
!12059 = !DILocation(line: 113, column: 5, scope: !12040)
!12060 = !DILocation(line: 116, column: 29, scope: !12040)
!12061 = !DILocation(line: 116, column: 43, scope: !12040)
!12062 = !DILocation(line: 117, column: 5, scope: !12040)
!12063 = !DILocation(line: 118, column: 1, scope: !12040)
!12064 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !1305, file: !1305, line: 120, type: !12065, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12068)
!12065 = !DISubroutineType(types: !12066)
!12066 = !{!8215, !12067, !3134}
!12067 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !592, line: 674, baseType: !653)
!12068 = !{!12069, !12070}
!12069 = !DILocalVariable(name: "clock_source", arg: 1, scope: !12064, file: !1305, line: 120, type: !12067)
!12070 = !DILocalVariable(name: "count", arg: 2, scope: !12064, file: !1305, line: 120, type: !3134)
!12071 = !DILocation(line: 0, scope: !12064)
!12072 = !DILocation(line: 122, column: 9, scope: !12064)
!12073 = !DILocation(line: 123, column: 50, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12075, file: !1305, line: 123, column: 13)
!12075 = distinct !DILexicalBlock(scope: !12076, file: !1305, line: 122, column: 51)
!12076 = distinct !DILexicalBlock(scope: !12064, file: !1305, line: 122, column: 9)
!12077 = !DILocation(line: 123, column: 65, scope: !12074)
!12078 = !DILocation(line: 123, column: 13, scope: !12075)
!12079 = !DILocation(line: 124, column: 13, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12074, file: !1305, line: 123, column: 86)
!12081 = !DILocation(line: 125, column: 9, scope: !12080)
!12082 = !DILocation(line: 126, column: 18, scope: !12075)
!12083 = !DILocation(line: 126, column: 16, scope: !12075)
!12084 = !DILocation(line: 127, column: 49, scope: !12075)
!12085 = !DILocation(line: 128, column: 5, scope: !12075)
!12086 = !DILocation(line: 129, column: 50, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12088, file: !1305, line: 129, column: 13)
!12088 = distinct !DILexicalBlock(scope: !12089, file: !1305, line: 128, column: 57)
!12089 = distinct !DILexicalBlock(scope: !12076, file: !1305, line: 128, column: 16)
!12090 = !DILocation(line: 129, column: 65, scope: !12087)
!12091 = !DILocation(line: 129, column: 13, scope: !12088)
!12092 = !DILocation(line: 130, column: 13, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12087, file: !1305, line: 129, column: 86)
!12094 = !DILocation(line: 131, column: 9, scope: !12093)
!12095 = !DILocation(line: 132, column: 18, scope: !12088)
!12096 = !DILocation(line: 132, column: 46, scope: !12088)
!12097 = !DILocation(line: 132, column: 65, scope: !12088)
!12098 = !DILocation(line: 132, column: 43, scope: !12088)
!12099 = !DILocation(line: 132, column: 16, scope: !12088)
!12100 = !DILocation(line: 133, column: 49, scope: !12088)
!12101 = !DILocation(line: 134, column: 5, scope: !12088)
!12102 = !DILocation(line: 135, column: 50, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12104, file: !1305, line: 135, column: 13)
!12104 = distinct !DILexicalBlock(scope: !12105, file: !1305, line: 134, column: 58)
!12105 = distinct !DILexicalBlock(scope: !12089, file: !1305, line: 134, column: 16)
!12106 = !DILocation(line: 135, column: 65, scope: !12103)
!12107 = !DILocation(line: 135, column: 13, scope: !12104)
!12108 = !DILocation(line: 136, column: 13, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12103, file: !1305, line: 135, column: 86)
!12110 = !DILocation(line: 137, column: 9, scope: !12109)
!12111 = !DILocation(line: 138, column: 18, scope: !12104)
!12112 = !DILocation(line: 138, column: 16, scope: !12104)
!12113 = !DILocation(line: 139, column: 49, scope: !12104)
!12114 = !DILocation(line: 141, column: 9, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12105, file: !1305, line: 140, column: 11)
!12116 = !DILocation(line: 142, column: 9, scope: !12115)
!12117 = !DILocation(line: 146, column: 1, scope: !12064)
!12118 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !1305, file: !1305, line: 148, type: !12119, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12121)
!12119 = !DISubroutineType(types: !12120)
!12120 = !{!8215, !38, !38, !3134}
!12121 = !{!12122, !12123, !12124}
!12122 = !DILocalVariable(name: "start_count", arg: 1, scope: !12118, file: !1305, line: 148, type: !38)
!12123 = !DILocalVariable(name: "end_count", arg: 2, scope: !12118, file: !1305, line: 148, type: !38)
!12124 = !DILocalVariable(name: "duration_count", arg: 3, scope: !12118, file: !1305, line: 148, type: !3134)
!12125 = !DILocation(line: 0, scope: !12118)
!12126 = !DILocation(line: 150, column: 24, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12118, file: !1305, line: 150, column: 9)
!12128 = !DILocation(line: 150, column: 9, scope: !12118)
!12129 = !DILocation(line: 0, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12118, file: !1305, line: 154, column: 9)
!12131 = !DILocation(line: 160, column: 5, scope: !12118)
!12132 = !DILocation(line: 161, column: 1, scope: !12118)
!12133 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !1305, file: !1305, line: 163, type: !12134, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12137)
!12134 = !DISubroutineType(types: !12135)
!12135 = !{!8215, !12011, !12136}
!12136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!12137 = !{!12138, !12139}
!12138 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !12133, file: !1305, line: 163, type: !12011)
!12139 = !DILocalVariable(name: "running_status", arg: 2, scope: !12133, file: !1305, line: 164, type: !12136)
!12140 = !DILocation(line: 0, scope: !12133)
!12141 = !DILocation(line: 166, column: 18, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12133, file: !1305, line: 166, column: 9)
!12143 = !DILocation(line: 166, column: 9, scope: !12133)
!12144 = !DILocation(line: 167, column: 9, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12142, file: !1305, line: 166, column: 34)
!12146 = !DILocation(line: 168, column: 9, scope: !12145)
!12147 = !DILocation(line: 170, column: 47, scope: !12133)
!12148 = !DILocation(line: 170, column: 21, scope: !12133)
!12149 = !DILocation(line: 171, column: 5, scope: !12133)
!12150 = !DILocation(line: 172, column: 1, scope: !12133)
!12151 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !1305, file: !1305, line: 174, type: !12152, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12154)
!12152 = !DISubroutineType(types: !12153)
!12153 = !{!8215, !12011, !1335, !30}
!12154 = !{!12155, !12156, !12157}
!12155 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !12151, file: !1305, line: 174, type: !12011)
!12156 = !DILocalVariable(name: "callback", arg: 2, scope: !12151, file: !1305, line: 175, type: !1335)
!12157 = !DILocalVariable(name: "user_data", arg: 3, scope: !12151, file: !1305, line: 176, type: !30)
!12158 = !DILocation(line: 0, scope: !12151)
!12159 = !DILocation(line: 178, column: 9, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12151, file: !1305, line: 178, column: 9)
!12161 = !DILocation(line: 178, column: 9, scope: !12151)
!12162 = !DILocation(line: 179, column: 9, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12160, file: !1305, line: 178, column: 50)
!12164 = !DILocation(line: 180, column: 9, scope: !12163)
!12165 = !DILocation(line: 182, column: 33, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12151, file: !1305, line: 182, column: 9)
!12167 = !DILocation(line: 182, column: 47, scope: !12166)
!12168 = !DILocation(line: 182, column: 9, scope: !12151)
!12169 = !DILocation(line: 185, column: 18, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12151, file: !1305, line: 185, column: 9)
!12171 = !DILocation(line: 185, column: 9, scope: !12151)
!12172 = !DILocation(line: 188, column: 46, scope: !12151)
!12173 = !DILocation(line: 188, column: 56, scope: !12151)
!12174 = !DILocation(line: 189, column: 46, scope: !12151)
!12175 = !DILocation(line: 189, column: 56, scope: !12151)
!12176 = !DILocation(line: 190, column: 5, scope: !12151)
!12177 = !DILocation(line: 191, column: 1, scope: !12151)
!12178 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !1305, file: !1305, line: 218, type: !12179, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12182)
!12179 = !DISubroutineType(types: !12180)
!12180 = !{!8215, !12011, !38, !12181}
!12181 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !796, line: 383, baseType: !1318)
!12182 = !{!12183, !12184, !12185}
!12183 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !12178, file: !1305, line: 218, type: !12011)
!12184 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !12178, file: !1305, line: 218, type: !38)
!12185 = !DILocalVariable(name: "timer_type", arg: 3, scope: !12178, file: !1305, line: 218, type: !12181)
!12186 = !DILocation(line: 0, scope: !12178)
!12187 = !DILocation(line: 220, column: 9, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12178, file: !1305, line: 220, column: 9)
!12189 = !DILocation(line: 220, column: 9, scope: !12178)
!12190 = !DILocation(line: 221, column: 9, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12188, file: !1305, line: 220, column: 50)
!12192 = !DILocation(line: 222, column: 9, scope: !12191)
!12193 = !DILocation(line: 225, column: 33, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12178, file: !1305, line: 225, column: 9)
!12195 = !DILocation(line: 225, column: 47, scope: !12194)
!12196 = !DILocation(line: 225, column: 9, scope: !12178)
!12197 = !DILocation(line: 229, column: 25, scope: !12198)
!12198 = distinct !DILexicalBlock(scope: !12178, file: !1305, line: 229, column: 9)
!12199 = !DILocation(line: 229, column: 9, scope: !12178)
!12200 = !DILocation(line: 234, column: 17, scope: !12178)
!12201 = !DILocation(line: 235, column: 17, scope: !12178)
!12202 = !DILocation(line: 236, column: 17, scope: !12178)
!12203 = !DILocation(line: 233, column: 5, scope: !12178)
!12204 = !DILocation(line: 237, column: 5, scope: !12178)
!12205 = !DILocation(line: 238, column: 29, scope: !12178)
!12206 = !DILocation(line: 238, column: 44, scope: !12178)
!12207 = !DILocation(line: 239, column: 5, scope: !12178)
!12208 = !DILocation(line: 240, column: 1, scope: !12178)
!12209 = distinct !DISubprogram(name: "hal_gpt_translate_timeout_time", scope: !1305, file: !1305, line: 72, type: !12210, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12212)
!12210 = !DISubroutineType(types: !12211)
!12211 = !{!38, !38}
!12212 = !{!12213}
!12213 = !DILocalVariable(name: "mili_seconds", arg: 1, scope: !12209, file: !1305, line: 72, type: !38)
!12214 = !DILocation(line: 0, scope: !12209)
!12215 = !DILocation(line: 74, column: 37, scope: !12209)
!12216 = !DILocation(line: 74, column: 47, scope: !12209)
!12217 = !DILocation(line: 74, column: 63, scope: !12209)
!12218 = !DILocation(line: 74, column: 42, scope: !12209)
!12219 = !DILocation(line: 74, column: 73, scope: !12209)
!12220 = !DILocation(line: 74, column: 89, scope: !12209)
!12221 = !DILocation(line: 74, column: 68, scope: !12209)
!12222 = !DILocation(line: 74, column: 100, scope: !12209)
!12223 = !DILocation(line: 74, column: 116, scope: !12209)
!12224 = !DILocation(line: 74, column: 95, scope: !12209)
!12225 = !DILocation(line: 74, column: 5, scope: !12209)
!12226 = distinct !DISubprogram(name: "hal_gpt_translate_type", scope: !1305, file: !1305, line: 77, type: !12227, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12229)
!12227 = !DISubroutineType(types: !12228)
!12228 = !{!536, !12181}
!12229 = !{!12230}
!12230 = !DILocalVariable(name: "type", arg: 1, scope: !12226, file: !1305, line: 77, type: !12181)
!12231 = !DILocation(line: 0, scope: !12226)
!12232 = !DILocation(line: 79, column: 38, scope: !12226)
!12233 = !DILocation(line: 79, column: 5, scope: !12226)
!12234 = distinct !DISubprogram(name: "hal_gpt_map_callback", scope: !1305, file: !1305, line: 213, type: !12235, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12238)
!12235 = !DISubroutineType(types: !12236)
!12236 = !{!12237, !12011}
!12237 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_internal_callback_t", file: !1305, line: 211, baseType: !556)
!12238 = !{!12239}
!12239 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !12234, file: !1305, line: 213, type: !12011)
!12240 = !DILocation(line: 0, scope: !12234)
!12241 = !DILocation(line: 215, column: 23, scope: !12234)
!12242 = !DILocation(line: 215, column: 12, scope: !12234)
!12243 = !DILocation(line: 215, column: 5, scope: !12234)
!12244 = distinct !DISubprogram(name: "hal_gpt_callback0", scope: !1305, file: !1305, line: 193, type: !110, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12245)
!12245 = !{!12246}
!12246 = !DILocalVariable(name: "context", scope: !12244, file: !1305, line: 195, type: !12247)
!12247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 32)
!12248 = !DILocation(line: 196, column: 26, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12244, file: !1305, line: 196, column: 9)
!12250 = !DILocation(line: 196, column: 14, scope: !12249)
!12251 = !DILocation(line: 196, column: 9, scope: !12244)
!12252 = !DILocation(line: 197, column: 36, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12249, file: !1305, line: 196, column: 36)
!12254 = !DILocation(line: 197, column: 9, scope: !12253)
!12255 = !DILocation(line: 198, column: 5, scope: !12253)
!12256 = !DILocation(line: 199, column: 45, scope: !12244)
!12257 = !DILocation(line: 200, column: 1, scope: !12244)
!12258 = distinct !DISubprogram(name: "hal_gpt_callback1", scope: !1305, file: !1305, line: 202, type: !110, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12259)
!12259 = !{!12260}
!12260 = !DILocalVariable(name: "context", scope: !12258, file: !1305, line: 204, type: !12247)
!12261 = !DILocation(line: 205, column: 26, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12258, file: !1305, line: 205, column: 9)
!12263 = !DILocation(line: 205, column: 14, scope: !12262)
!12264 = !DILocation(line: 205, column: 9, scope: !12258)
!12265 = !DILocation(line: 206, column: 36, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12262, file: !1305, line: 205, column: 36)
!12267 = !DILocation(line: 206, column: 9, scope: !12266)
!12268 = !DILocation(line: 207, column: 5, scope: !12266)
!12269 = !DILocation(line: 208, column: 45, scope: !12258)
!12270 = !DILocation(line: 209, column: 1, scope: !12258)
!12271 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !1305, file: !1305, line: 242, type: !12009, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12272)
!12272 = !{!12273}
!12273 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !12271, file: !1305, line: 242, type: !12011)
!12274 = !DILocation(line: 0, scope: !12271)
!12275 = !DILocation(line: 244, column: 9, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12271, file: !1305, line: 244, column: 9)
!12277 = !DILocation(line: 244, column: 9, scope: !12271)
!12278 = !DILocation(line: 245, column: 9, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12276, file: !1305, line: 244, column: 50)
!12280 = !DILocation(line: 246, column: 9, scope: !12279)
!12281 = !DILocation(line: 248, column: 5, scope: !12271)
!12282 = !DILocation(line: 249, column: 29, scope: !12271)
!12283 = !DILocation(line: 249, column: 44, scope: !12271)
!12284 = !DILocation(line: 250, column: 5, scope: !12271)
!12285 = !DILocation(line: 251, column: 1, scope: !12271)
!12286 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !1305, file: !1305, line: 253, type: !12287, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12289)
!12287 = !DISubroutineType(types: !12288)
!12288 = !{!8215, !38}
!12289 = !{!12290}
!12290 = !DILocalVariable(name: "ms", arg: 1, scope: !12286, file: !1305, line: 253, type: !38)
!12291 = !DILocation(line: 0, scope: !12286)
!12292 = !DILocation(line: 255, column: 46, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12286, file: !1305, line: 255, column: 9)
!12294 = !DILocation(line: 255, column: 61, scope: !12293)
!12295 = !DILocation(line: 255, column: 9, scope: !12286)
!12296 = !DILocation(line: 256, column: 9, scope: !12297)
!12297 = distinct !DILexicalBlock(scope: !12293, file: !1305, line: 255, column: 82)
!12298 = !DILocation(line: 257, column: 5, scope: !12297)
!12299 = !DILocation(line: 258, column: 5, scope: !12286)
!12300 = !DILocation(line: 259, column: 57, scope: !12286)
!12301 = !DILocation(line: 260, column: 5, scope: !12286)
!12302 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !1305, file: !1305, line: 264, type: !12287, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1304, retainedNodes: !12303)
!12303 = !{!12304}
!12304 = !DILocalVariable(name: "us", arg: 1, scope: !12302, file: !1305, line: 264, type: !38)
!12305 = !DILocation(line: 0, scope: !12302)
!12306 = !DILocation(line: 266, column: 46, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12302, file: !1305, line: 266, column: 9)
!12308 = !DILocation(line: 266, column: 61, scope: !12307)
!12309 = !DILocation(line: 266, column: 9, scope: !12302)
!12310 = !DILocation(line: 267, column: 9, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12307, file: !1305, line: 266, column: 82)
!12312 = !DILocation(line: 268, column: 5, scope: !12311)
!12313 = !DILocation(line: 269, column: 5, scope: !12302)
!12314 = !DILocation(line: 270, column: 57, scope: !12302)
!12315 = !DILocation(line: 271, column: 5, scope: !12302)
!12316 = distinct !DISubprogram(name: "uart_send_handler", scope: !1344, file: !1344, line: 213, type: !10860, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12317)
!12317 = !{!12318, !12319, !12320}
!12318 = !DILocalVariable(name: "u_port", arg: 1, scope: !12316, file: !1344, line: 213, type: !10806)
!12319 = !DILocalVariable(name: "length", scope: !12316, file: !1344, line: 215, type: !38)
!12320 = !DILocalVariable(name: "irq_status", scope: !12316, file: !1344, line: 216, type: !38)
!12321 = !DILocation(line: 0, scope: !12316)
!12322 = !DILocation(line: 215, column: 5, scope: !12316)
!12323 = !DILocation(line: 216, column: 5, scope: !12316)
!12324 = !DILocation(line: 218, column: 9, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12316, file: !1344, line: 218, column: 9)
!12326 = !DILocation(line: 218, column: 54, scope: !12325)
!12327 = !DILocation(line: 218, column: 9, scope: !12316)
!12328 = !DILocation(line: 219, column: 9, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12325, file: !1344, line: 218, column: 64)
!12330 = !DILocation(line: 220, column: 9, scope: !12329)
!12331 = !DILocation(line: 221, column: 53, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !12329, file: !1344, line: 221, column: 13)
!12333 = !DILocation(line: 221, column: 78, scope: !12332)
!12334 = !DILocation(line: 221, column: 85, scope: !12332)
!12335 = !DILocation(line: 221, column: 13, scope: !12329)
!12336 = !DILocation(line: 222, column: 17, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12338, file: !1344, line: 222, column: 17)
!12338 = distinct !DILexicalBlock(scope: !12332, file: !1344, line: 221, column: 91)
!12339 = !DILocation(line: 222, column: 17, scope: !12338)
!12340 = !DILocation(line: 223, column: 48, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12337, file: !1344, line: 222, column: 58)
!12342 = !DILocation(line: 223, column: 17, scope: !12341)
!12343 = !DILocation(line: 224, column: 49, scope: !12341)
!12344 = !DILocation(line: 225, column: 13, scope: !12341)
!12345 = !DILocation(line: 227, column: 41, scope: !12329)
!12346 = !DILocation(line: 227, column: 9, scope: !12329)
!12347 = !DILocation(line: 228, column: 5, scope: !12329)
!12348 = !DILocation(line: 229, column: 54, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12325, file: !1344, line: 228, column: 12)
!12350 = !DILocation(line: 231, column: 1, scope: !12316)
!12351 = distinct !DISubprogram(name: "hal_uart_init", scope: !1344, file: !1344, line: 234, type: !12352, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12355)
!12352 = !DISubroutineType(types: !12353)
!12353 = !{!7516, !774, !12354}
!12354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 32)
!12355 = !{!12356, !12357}
!12356 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12351, file: !1344, line: 234, type: !774)
!12357 = !DILocalVariable(name: "uart_config", arg: 2, scope: !12351, file: !1344, line: 234, type: !12354)
!12358 = !DILocation(line: 0, scope: !12351)
!12359 = !DILocation(line: 236, column: 10, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12351, file: !1344, line: 236, column: 9)
!12361 = !DILocation(line: 236, column: 9, scope: !12351)
!12362 = !DILocation(line: 239, column: 41, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12351, file: !1344, line: 239, column: 9)
!12364 = !DILocation(line: 239, column: 9, scope: !12351)
!12365 = !DILocation(line: 242, column: 5, scope: !12351)
!12366 = !DILocation(line: 243, column: 45, scope: !12351)
!12367 = !DILocation(line: 243, column: 12, scope: !12351)
!12368 = !DILocation(line: 244, column: 12, scope: !12351)
!12369 = !DILocation(line: 243, column: 5, scope: !12351)
!12370 = !DILocation(line: 245, column: 58, scope: !12351)
!12371 = !DILocation(line: 246, column: 30, scope: !12351)
!12372 = !{i32 0, i32 2}
!12373 = !DILocation(line: 246, column: 5, scope: !12351)
!12374 = !DILocation(line: 247, column: 5, scope: !12351)
!12375 = !DILocation(line: 249, column: 31, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12351, file: !1344, line: 249, column: 9)
!12377 = !DILocation(line: 249, column: 28, scope: !12376)
!12378 = !DILocation(line: 249, column: 9, scope: !12351)
!12379 = !DILocation(line: 254, column: 5, scope: !12351)
!12380 = !DILocation(line: 255, column: 5, scope: !12351)
!12381 = !DILocation(line: 255, column: 53, scope: !12351)
!12382 = !DILocation(line: 256, column: 5, scope: !12351)
!12383 = !DILocation(line: 256, column: 40, scope: !12351)
!12384 = !DILocation(line: 257, column: 82, scope: !12351)
!12385 = !DILocation(line: 257, column: 39, scope: !12351)
!12386 = !DILocation(line: 257, column: 5, scope: !12351)
!12387 = !DILocation(line: 257, column: 37, scope: !12351)
!12388 = !DILocation(line: 260, column: 5, scope: !12351)
!12389 = !DILocation(line: 261, column: 1, scope: !12351)
!12390 = distinct !DISubprogram(name: "hal_uart_is_config_valid", scope: !1344, file: !1344, line: 93, type: !12391, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12395)
!12391 = !DISubroutineType(types: !12392)
!12392 = !{!536, !774, !12393}
!12393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12394, size: 32)
!12394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!12395 = !{!12396, !12397}
!12396 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12390, file: !1344, line: 93, type: !774)
!12397 = !DILocalVariable(name: "uart_config", arg: 2, scope: !12390, file: !1344, line: 93, type: !12393)
!12398 = !DILocation(line: 0, scope: !12390)
!12399 = !DILocation(line: 95, column: 10, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12390, file: !1344, line: 95, column: 9)
!12401 = !DILocation(line: 95, column: 9, scope: !12390)
!12402 = !DILocation(line: 101, column: 23, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12390, file: !1344, line: 101, column: 9)
!12404 = !DILocation(line: 101, column: 32, scope: !12403)
!12405 = !DILocation(line: 101, column: 60, scope: !12403)
!12406 = !DILocation(line: 102, column: 27, scope: !12403)
!12407 = !DILocation(line: 102, column: 34, scope: !12403)
!12408 = !DILocation(line: 102, column: 58, scope: !12403)
!12409 = !DILocation(line: 103, column: 27, scope: !12403)
!12410 = !DILocation(line: 103, column: 36, scope: !12403)
!12411 = !DILocation(line: 103, column: 59, scope: !12403)
!12412 = !DILocation(line: 104, column: 27, scope: !12403)
!12413 = !DILocation(line: 104, column: 39, scope: !12403)
!12414 = !DILocation(line: 101, column: 9, scope: !12390)
!12415 = !DILocation(line: 109, column: 1, scope: !12390)
!12416 = distinct !DISubprogram(name: "hal_uart_translate_port", scope: !1344, file: !1344, line: 139, type: !12417, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12419)
!12417 = !DISubroutineType(types: !12418)
!12418 = !{!10806, !774}
!12419 = !{!12420}
!12420 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12416, file: !1344, line: 139, type: !774)
!12421 = !DILocation(line: 0, scope: !12416)
!12422 = !DILocation(line: 141, column: 24, scope: !12416)
!12423 = !DILocation(line: 141, column: 12, scope: !12416)
!12424 = !DILocation(line: 141, column: 5, scope: !12416)
!12425 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !1344, file: !1344, line: 593, type: !12426, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12428)
!12426 = !DISubroutineType(types: !12427)
!12427 = !{!7516, !774, !12393}
!12428 = !{!12429, !12430}
!12429 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12425, file: !1344, line: 593, type: !774)
!12430 = !DILocalVariable(name: "config", arg: 2, scope: !12425, file: !1344, line: 593, type: !12393)
!12431 = !DILocation(line: 0, scope: !12425)
!12432 = !DILocation(line: 595, column: 10, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12425, file: !1344, line: 595, column: 9)
!12434 = !DILocation(line: 595, column: 9, scope: !12425)
!12435 = !DILocation(line: 598, column: 45, scope: !12425)
!12436 = !DILocation(line: 598, column: 12, scope: !12425)
!12437 = !DILocation(line: 598, column: 59, scope: !12425)
!12438 = !DILocation(line: 598, column: 5, scope: !12425)
!12439 = !DILocation(line: 599, column: 23, scope: !12425)
!12440 = !DILocation(line: 600, column: 59, scope: !12425)
!12441 = !DILocation(line: 600, column: 23, scope: !12425)
!12442 = !DILocation(line: 601, column: 62, scope: !12425)
!12443 = !DILocation(line: 601, column: 23, scope: !12425)
!12444 = !DILocation(line: 602, column: 57, scope: !12425)
!12445 = !DILocation(line: 602, column: 23, scope: !12425)
!12446 = !DILocation(line: 603, column: 58, scope: !12425)
!12447 = !DILocation(line: 603, column: 23, scope: !12425)
!12448 = !DILocation(line: 599, column: 5, scope: !12425)
!12449 = !DILocation(line: 604, column: 5, scope: !12425)
!12450 = !DILocation(line: 605, column: 1, scope: !12425)
!12451 = distinct !DISubprogram(name: "hal_uart_translate_baudrate", scope: !1344, file: !1344, line: 145, type: !12452, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12454)
!12452 = !DISubroutineType(types: !12453)
!12453 = !{!38, !1365}
!12454 = !{!12455, !12456}
!12455 = !DILocalVariable(name: "bandrate", arg: 1, scope: !12451, file: !1344, line: 145, type: !1365)
!12456 = !DILocalVariable(name: "baudrate_tbl", scope: !12451, file: !1344, line: 147, type: !12457)
!12457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !38, size: 416, elements: !1015)
!12458 = !DILocation(line: 0, scope: !12451)
!12459 = !DILocation(line: 147, column: 14, scope: !12451)
!12460 = !DILocation(line: 151, column: 12, scope: !12451)
!12461 = !DILocation(line: 151, column: 5, scope: !12451)
!12462 = distinct !DISubprogram(name: "hal_uart_translate_word_length", scope: !1344, file: !1344, line: 155, type: !12463, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12465)
!12463 = !DISubroutineType(types: !12464)
!12464 = !{!31, !1367}
!12465 = !{!12466, !12467}
!12466 = !DILocalVariable(name: "word_length", arg: 1, scope: !12462, file: !1344, line: 155, type: !1367)
!12467 = !DILocalVariable(name: "databit_tbl", scope: !12462, file: !1344, line: 157, type: !12468)
!12468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 64, elements: !425)
!12469 = !DILocation(line: 0, scope: !12462)
!12470 = !DILocation(line: 157, column: 14, scope: !12462)
!12471 = !DILocation(line: 160, column: 12, scope: !12462)
!12472 = !DILocation(line: 160, column: 5, scope: !12462)
!12473 = distinct !DISubprogram(name: "hal_uart_translate_parity", scope: !1344, file: !1344, line: 164, type: !12474, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12476)
!12474 = !DISubroutineType(types: !12475)
!12475 = !{!31, !1371}
!12476 = !{!12477, !12478}
!12477 = !DILocalVariable(name: "parity", arg: 1, scope: !12473, file: !1344, line: 164, type: !1371)
!12478 = !DILocalVariable(name: "parity_tbl", scope: !12473, file: !1344, line: 166, type: !12479)
!12479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 80, elements: !429)
!12480 = !DILocation(line: 0, scope: !12473)
!12481 = !DILocation(line: 166, column: 14, scope: !12473)
!12482 = !DILocation(line: 169, column: 12, scope: !12473)
!12483 = !DILocation(line: 169, column: 5, scope: !12473)
!12484 = distinct !DISubprogram(name: "hal_uart_translate_stopbit", scope: !1344, file: !1344, line: 173, type: !12485, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12487)
!12485 = !DISubroutineType(types: !12486)
!12486 = !{!31, !1369}
!12487 = !{!12488, !12489}
!12488 = !DILocalVariable(name: "stopbit", arg: 1, scope: !12484, file: !1344, line: 173, type: !1369)
!12489 = !DILocalVariable(name: "stopbit_tbl", scope: !12484, file: !1344, line: 175, type: !12490)
!12490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 48, elements: !1623)
!12491 = !DILocation(line: 0, scope: !12484)
!12492 = !DILocation(line: 175, column: 14, scope: !12484)
!12493 = !DILocation(line: 178, column: 12, scope: !12484)
!12494 = !DILocation(line: 178, column: 5, scope: !12484)
!12495 = distinct !DISubprogram(name: "hal_uart_is_port_valid", scope: !1344, file: !1344, line: 87, type: !12496, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12498)
!12496 = !DISubroutineType(types: !12497)
!12497 = !{!536, !774}
!12498 = !{!12499}
!12499 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12495, file: !1344, line: 87, type: !774)
!12500 = !DILocation(line: 0, scope: !12495)
!12501 = !DILocation(line: 89, column: 23, scope: !12495)
!12502 = !DILocation(line: 89, column: 5, scope: !12495)
!12503 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !1344, file: !1344, line: 264, type: !7514, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12504)
!12504 = !{!12505}
!12505 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12503, file: !1344, line: 264, type: !774)
!12506 = !DILocation(line: 0, scope: !12503)
!12507 = !DILocation(line: 266, column: 10, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12503, file: !1344, line: 266, column: 9)
!12509 = !DILocation(line: 266, column: 9, scope: !12503)
!12510 = !DILocation(line: 269, column: 41, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12503, file: !1344, line: 269, column: 9)
!12512 = !DILocation(line: 269, column: 62, scope: !12511)
!12513 = !DILocation(line: 269, column: 9, scope: !12503)
!12514 = !DILocation(line: 272, column: 5, scope: !12503)
!12515 = !DILocation(line: 275, column: 22, scope: !12503)
!12516 = !DILocation(line: 275, column: 5, scope: !12503)
!12517 = !DILocation(line: 278, column: 26, scope: !12503)
!12518 = !DILocation(line: 278, column: 5, scope: !12503)
!12519 = !DILocation(line: 279, column: 5, scope: !12503)
!12520 = !DILocation(line: 279, column: 53, scope: !12503)
!12521 = !DILocation(line: 280, column: 5, scope: !12503)
!12522 = !DILocation(line: 280, column: 40, scope: !12503)
!12523 = !DILocation(line: 281, column: 5, scope: !12503)
!12524 = !DILocation(line: 282, column: 44, scope: !12503)
!12525 = !DILocation(line: 282, column: 5, scope: !12503)
!12526 = !DILocation(line: 284, column: 5, scope: !12503)
!12527 = !DILocation(line: 286, column: 5, scope: !12503)
!12528 = !DILocation(line: 287, column: 1, scope: !12503)
!12529 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !1344, file: !1344, line: 290, type: !12530, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12532)
!12530 = !DISubroutineType(types: !12531)
!12531 = !{null, !774, !70}
!12532 = !{!12533, !12534, !12535}
!12533 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12529, file: !1344, line: 290, type: !774)
!12534 = !DILocalVariable(name: "byte", arg: 2, scope: !12529, file: !1344, line: 290, type: !70)
!12535 = !DILocalVariable(name: "int_no", scope: !12529, file: !1344, line: 292, type: !10806)
!12536 = !DILocation(line: 0, scope: !12529)
!12537 = !DILocation(line: 292, column: 26, scope: !12529)
!12538 = !DILocation(line: 294, column: 16, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12529, file: !1344, line: 294, column: 9)
!12540 = !DILocation(line: 294, column: 9, scope: !12529)
!12541 = !DILocation(line: 295, column: 9, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12539, file: !1344, line: 294, column: 34)
!12543 = !DILocation(line: 296, column: 5, scope: !12542)
!12544 = !DILocation(line: 299, column: 1, scope: !12529)
!12545 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !1344, file: !1344, line: 302, type: !12546, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12548)
!12546 = !DISubroutineType(types: !12547)
!12547 = !{!38, !774, !3267, !38}
!12548 = !{!12549, !12550, !12551, !12552, !12553}
!12549 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12545, file: !1344, line: 302, type: !774)
!12550 = !DILocalVariable(name: "data", arg: 2, scope: !12545, file: !1344, line: 302, type: !3267)
!12551 = !DILocalVariable(name: "size", arg: 3, scope: !12545, file: !1344, line: 302, type: !38)
!12552 = !DILocalVariable(name: "int_no", scope: !12545, file: !1344, line: 304, type: !10806)
!12553 = !DILocalVariable(name: "index", scope: !12545, file: !1344, line: 305, type: !38)
!12554 = !DILocation(line: 0, scope: !12545)
!12555 = !DILocation(line: 304, column: 26, scope: !12545)
!12556 = !DILocation(line: 307, column: 14, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12545, file: !1344, line: 307, column: 9)
!12558 = !DILocation(line: 307, column: 9, scope: !12545)
!12559 = !DILocation(line: 313, column: 53, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12561, file: !1344, line: 312, column: 48)
!12561 = distinct !DILexicalBlock(scope: !12562, file: !1344, line: 312, column: 9)
!12562 = distinct !DILexicalBlock(scope: !12563, file: !1344, line: 312, column: 9)
!12563 = distinct !DILexicalBlock(scope: !12564, file: !1344, line: 311, column: 33)
!12564 = distinct !DILexicalBlock(scope: !12545, file: !1344, line: 311, column: 9)
!12565 = !DILocation(line: 313, column: 13, scope: !12560)
!12566 = !DILocation(line: 312, column: 44, scope: !12561)
!12567 = !DILocation(line: 312, column: 31, scope: !12561)
!12568 = !DILocation(line: 312, column: 9, scope: !12562)
!12569 = distinct !{!12569, !12568, !12570}
!12570 = !DILocation(line: 314, column: 9, scope: !12562)
!12571 = !DILocation(line: 318, column: 1, scope: !12545)
!12572 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !1344, file: !1344, line: 320, type: !12546, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12573)
!12573 = !{!12574, !12575, !12576, !12577, !12578, !12579, !12581}
!12574 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12572, file: !1344, line: 320, type: !774)
!12575 = !DILocalVariable(name: "data", arg: 2, scope: !12572, file: !1344, line: 320, type: !3267)
!12576 = !DILocalVariable(name: "size", arg: 3, scope: !12572, file: !1344, line: 320, type: !38)
!12577 = !DILocalVariable(name: "actual_space", scope: !12572, file: !1344, line: 322, type: !38)
!12578 = !DILocalVariable(name: "send_size", scope: !12572, file: !1344, line: 322, type: !38)
!12579 = !DILocalVariable(name: "ch", scope: !12572, file: !1344, line: 323, type: !12580)
!12580 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_VFIFO_CHANNEL", file: !1041, line: 144, baseType: !1040)
!12581 = !DILocalVariable(name: "irq_status", scope: !12572, file: !1344, line: 325, type: !38)
!12582 = !DILocation(line: 0, scope: !12572)
!12583 = !DILocation(line: 322, column: 5, scope: !12572)
!12584 = !DILocation(line: 325, column: 5, scope: !12572)
!12585 = !DILocation(line: 328, column: 10, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12572, file: !1344, line: 328, column: 9)
!12587 = !DILocation(line: 328, column: 9, scope: !12572)
!12588 = !DILocation(line: 332, column: 15, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12572, file: !1344, line: 332, column: 9)
!12590 = !DILocation(line: 332, column: 24, scope: !12589)
!12591 = !DILocation(line: 335, column: 42, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12572, file: !1344, line: 335, column: 9)
!12593 = !DILocation(line: 335, column: 9, scope: !12572)
!12594 = !DILocation(line: 341, column: 5, scope: !12572)
!12595 = !DILocation(line: 342, column: 9, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12572, file: !1344, line: 342, column: 9)
!12597 = !DILocation(line: 342, column: 44, scope: !12596)
!12598 = !DILocation(line: 342, column: 9, scope: !12572)
!12599 = !DILocation(line: 343, column: 38, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12596, file: !1344, line: 342, column: 54)
!12601 = !DILocation(line: 343, column: 9, scope: !12600)
!12602 = !DILocation(line: 344, column: 44, scope: !12600)
!12603 = !DILocation(line: 345, column: 5, scope: !12600)
!12604 = !DILocation(line: 346, column: 37, scope: !12572)
!12605 = !DILocation(line: 346, column: 5, scope: !12572)
!12606 = !DILocation(line: 349, column: 30, scope: !12572)
!12607 = !DILocation(line: 349, column: 5, scope: !12572)
!12608 = !DILocation(line: 350, column: 9, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12572, file: !1344, line: 350, column: 9)
!12610 = !DILocation(line: 350, column: 22, scope: !12609)
!12611 = !DILocation(line: 355, column: 5, scope: !12572)
!12612 = !DILocation(line: 357, column: 22, scope: !12613)
!12613 = distinct !DILexicalBlock(scope: !12572, file: !1344, line: 357, column: 9)
!12614 = !DILocation(line: 357, column: 19, scope: !12613)
!12615 = !DILocation(line: 357, column: 9, scope: !12572)
!12616 = !DILocation(line: 358, column: 14, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12613, file: !1344, line: 357, column: 36)
!12618 = !{i32 14, i32 18}
!12619 = !DILocation(line: 359, column: 9, scope: !12617)
!12620 = !DILocation(line: 360, column: 5, scope: !12617)
!12621 = !DILocation(line: 362, column: 1, scope: !12572)
!12622 = distinct !DISubprogram(name: "uart_channel_to_dma_channel", scope: !1344, file: !1344, line: 191, type: !12623, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12625)
!12623 = !DISubroutineType(types: !12624)
!12624 = !{!12580, !10806, !536}
!12625 = !{!12626, !12627, !12628}
!12626 = !DILocalVariable(name: "port", arg: 1, scope: !12622, file: !1344, line: 191, type: !10806)
!12627 = !DILocalVariable(name: "is_rx", arg: 2, scope: !12622, file: !1344, line: 191, type: !536)
!12628 = !DILocalVariable(name: "ch", scope: !12622, file: !1344, line: 193, type: !12580)
!12629 = !DILocation(line: 0, scope: !12622)
!12630 = !DILocation(line: 195, column: 14, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12622, file: !1344, line: 195, column: 9)
!12632 = !DILocation(line: 195, column: 9, scope: !12622)
!12633 = !DILocation(line: 209, column: 5, scope: !12622)
!12634 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !1344, file: !1344, line: 365, type: !12635, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12637)
!12635 = !DISubroutineType(types: !12636)
!12636 = !{!70, !774}
!12637 = !{!12638, !12639}
!12638 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12634, file: !1344, line: 365, type: !774)
!12639 = !DILocalVariable(name: "int_no", scope: !12634, file: !1344, line: 367, type: !10806)
!12640 = !DILocation(line: 0, scope: !12634)
!12641 = !DILocation(line: 367, column: 26, scope: !12634)
!12642 = !DILocation(line: 369, column: 16, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12634, file: !1344, line: 369, column: 9)
!12644 = !DILocation(line: 369, column: 9, scope: !12634)
!12645 = !DILocation(line: 370, column: 22, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12643, file: !1344, line: 369, column: 33)
!12647 = !DILocation(line: 370, column: 9, scope: !12646)
!12648 = !DILocation(line: 0, scope: !12643)
!12649 = !DILocation(line: 375, column: 1, scope: !12634)
!12650 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !1344, file: !1344, line: 377, type: !12651, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12653)
!12651 = !DISubroutineType(types: !12652)
!12652 = !{!38, !774}
!12653 = !{!12654, !12655}
!12654 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12650, file: !1344, line: 377, type: !774)
!12655 = !DILocalVariable(name: "int_no", scope: !12650, file: !1344, line: 379, type: !10806)
!12656 = !DILocation(line: 0, scope: !12650)
!12657 = !DILocation(line: 379, column: 26, scope: !12650)
!12658 = !DILocation(line: 381, column: 16, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12650, file: !1344, line: 381, column: 9)
!12660 = !DILocation(line: 381, column: 9, scope: !12650)
!12661 = !DILocation(line: 382, column: 16, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12659, file: !1344, line: 381, column: 33)
!12663 = !DILocation(line: 382, column: 9, scope: !12662)
!12664 = !DILocation(line: 0, scope: !12659)
!12665 = !DILocation(line: 387, column: 1, scope: !12650)
!12666 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !1344, file: !1344, line: 390, type: !12667, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12669)
!12667 = !DISubroutineType(types: !12668)
!12668 = !{!38, !774, !95, !38}
!12669 = !{!12670, !12671, !12672, !12673, !12674}
!12670 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12666, file: !1344, line: 390, type: !774)
!12671 = !DILocalVariable(name: "buffer", arg: 2, scope: !12666, file: !1344, line: 390, type: !95)
!12672 = !DILocalVariable(name: "size", arg: 3, scope: !12666, file: !1344, line: 390, type: !38)
!12673 = !DILocalVariable(name: "int_no", scope: !12666, file: !1344, line: 392, type: !10806)
!12674 = !DILocalVariable(name: "index", scope: !12666, file: !1344, line: 393, type: !38)
!12675 = !DILocation(line: 0, scope: !12666)
!12676 = !DILocation(line: 392, column: 26, scope: !12666)
!12677 = !DILocation(line: 395, column: 16, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12666, file: !1344, line: 395, column: 9)
!12679 = !DILocation(line: 395, column: 9, scope: !12666)
!12680 = !DILocation(line: 401, column: 38, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12682, file: !1344, line: 400, column: 48)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !1344, line: 400, column: 9)
!12683 = distinct !DILexicalBlock(scope: !12684, file: !1344, line: 400, column: 9)
!12684 = distinct !DILexicalBlock(scope: !12685, file: !1344, line: 399, column: 33)
!12685 = distinct !DILexicalBlock(scope: !12666, file: !1344, line: 399, column: 9)
!12686 = !DILocation(line: 401, column: 13, scope: !12681)
!12687 = !DILocation(line: 401, column: 27, scope: !12681)
!12688 = !DILocation(line: 400, column: 44, scope: !12682)
!12689 = !DILocation(line: 400, column: 31, scope: !12682)
!12690 = !DILocation(line: 400, column: 9, scope: !12683)
!12691 = distinct !{!12691, !12690, !12692}
!12692 = !DILocation(line: 402, column: 9, scope: !12683)
!12693 = !DILocation(line: 406, column: 1, scope: !12666)
!12694 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !1344, file: !1344, line: 408, type: !12667, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12695)
!12695 = !{!12696, !12697, !12698, !12699, !12700, !12701}
!12696 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12694, file: !1344, line: 408, type: !774)
!12697 = !DILocalVariable(name: "buffer", arg: 2, scope: !12694, file: !1344, line: 408, type: !95)
!12698 = !DILocalVariable(name: "size", arg: 3, scope: !12694, file: !1344, line: 408, type: !38)
!12699 = !DILocalVariable(name: "actual_size", scope: !12694, file: !1344, line: 410, type: !38)
!12700 = !DILocalVariable(name: "receive_size", scope: !12694, file: !1344, line: 410, type: !38)
!12701 = !DILocalVariable(name: "ch", scope: !12694, file: !1344, line: 411, type: !12580)
!12702 = !DILocation(line: 0, scope: !12694)
!12703 = !DILocation(line: 410, column: 5, scope: !12694)
!12704 = !DILocation(line: 413, column: 10, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12694, file: !1344, line: 413, column: 9)
!12706 = !DILocation(line: 413, column: 9, scope: !12694)
!12707 = !DILocation(line: 417, column: 17, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12694, file: !1344, line: 417, column: 9)
!12709 = !DILocation(line: 417, column: 26, scope: !12708)
!12710 = !DILocation(line: 421, column: 30, scope: !12694)
!12711 = !DILocation(line: 421, column: 5, scope: !12694)
!12712 = !DILocation(line: 422, column: 9, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12694, file: !1344, line: 422, column: 9)
!12714 = !DILocation(line: 422, column: 21, scope: !12713)
!12715 = !DILocation(line: 427, column: 5, scope: !12694)
!12716 = !DILocation(line: 429, column: 25, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12694, file: !1344, line: 429, column: 9)
!12718 = !DILocation(line: 429, column: 22, scope: !12717)
!12719 = !DILocation(line: 429, column: 9, scope: !12694)
!12720 = !DILocation(line: 430, column: 14, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12717, file: !1344, line: 429, column: 38)
!12722 = !DILocation(line: 431, column: 9, scope: !12721)
!12723 = !DILocation(line: 432, column: 5, scope: !12721)
!12724 = !DILocation(line: 435, column: 1, scope: !12694)
!12725 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !1344, file: !1344, line: 438, type: !12651, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12726)
!12726 = !{!12727, !12728}
!12727 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12725, file: !1344, line: 438, type: !774)
!12728 = !DILocalVariable(name: "length", scope: !12725, file: !1344, line: 440, type: !38)
!12729 = !DILocation(line: 0, scope: !12725)
!12730 = !DILocation(line: 440, column: 5, scope: !12725)
!12731 = !DILocation(line: 440, column: 14, scope: !12725)
!12732 = !DILocation(line: 442, column: 10, scope: !12733)
!12733 = distinct !DILexicalBlock(scope: !12725, file: !1344, line: 442, column: 9)
!12734 = !DILocation(line: 442, column: 9, scope: !12725)
!12735 = !DILocation(line: 446, column: 30, scope: !12725)
!12736 = !DILocation(line: 446, column: 5, scope: !12725)
!12737 = !DILocation(line: 447, column: 12, scope: !12725)
!12738 = !DILocation(line: 447, column: 5, scope: !12725)
!12739 = !DILocation(line: 448, column: 1, scope: !12725)
!12740 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !1344, file: !1344, line: 451, type: !12651, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12741)
!12741 = !{!12742, !12743}
!12742 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12740, file: !1344, line: 451, type: !774)
!12743 = !DILocalVariable(name: "length", scope: !12740, file: !1344, line: 453, type: !38)
!12744 = !DILocation(line: 0, scope: !12740)
!12745 = !DILocation(line: 453, column: 5, scope: !12740)
!12746 = !DILocation(line: 453, column: 14, scope: !12740)
!12747 = !DILocation(line: 455, column: 10, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12740, file: !1344, line: 455, column: 9)
!12749 = !DILocation(line: 455, column: 9, scope: !12740)
!12750 = !DILocation(line: 459, column: 30, scope: !12740)
!12751 = !DILocation(line: 459, column: 5, scope: !12740)
!12752 = !DILocation(line: 461, column: 12, scope: !12740)
!12753 = !DILocation(line: 461, column: 5, scope: !12740)
!12754 = !DILocation(line: 462, column: 1, scope: !12740)
!12755 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !1344, file: !1344, line: 543, type: !12756, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12758)
!12756 = !DISubroutineType(types: !12757)
!12757 = !{!7516, !774, !1378, !30}
!12758 = !{!12759, !12760, !12761, !12762}
!12759 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12755, file: !1344, line: 543, type: !774)
!12760 = !DILocalVariable(name: "user_callback", arg: 2, scope: !12755, file: !1344, line: 544, type: !1378)
!12761 = !DILocalVariable(name: "user_data", arg: 3, scope: !12755, file: !1344, line: 545, type: !30)
!12762 = !DILocalVariable(name: "ch", scope: !12755, file: !1344, line: 547, type: !12580)
!12763 = !DILocation(line: 0, scope: !12755)
!12764 = !DILocation(line: 549, column: 10, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12755, file: !1344, line: 549, column: 9)
!12766 = !DILocation(line: 549, column: 9, scope: !12755)
!12767 = !DILocation(line: 556, column: 53, scope: !12755)
!12768 = !DILocation(line: 556, column: 62, scope: !12755)
!12769 = !DILocation(line: 557, column: 53, scope: !12755)
!12770 = !DILocation(line: 557, column: 63, scope: !12755)
!12771 = !DILocation(line: 558, column: 37, scope: !12755)
!12772 = !DILocation(line: 558, column: 54, scope: !12755)
!12773 = !DILocation(line: 560, column: 39, scope: !12755)
!12774 = !DILocation(line: 561, column: 39, scope: !12755)
!12775 = !DILocation(line: 560, column: 5, scope: !12755)
!12776 = !DILocation(line: 562, column: 5, scope: !12755)
!12777 = !DILocation(line: 564, column: 44, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12755, file: !1344, line: 564, column: 9)
!12779 = !DILocation(line: 564, column: 9, scope: !12755)
!12780 = !DILocation(line: 565, column: 9, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12778, file: !1344, line: 564, column: 59)
!12782 = !DILocation(line: 566, column: 5, scope: !12781)
!12783 = !DILocation(line: 567, column: 9, scope: !12784)
!12784 = distinct !DILexicalBlock(scope: !12778, file: !1344, line: 566, column: 12)
!12785 = !DILocation(line: 569, column: 10, scope: !12755)
!12786 = !DILocation(line: 570, column: 5, scope: !12755)
!12787 = !DILocation(line: 572, column: 5, scope: !12755)
!12788 = !DILocation(line: 572, column: 53, scope: !12755)
!12789 = !DILocation(line: 573, column: 35, scope: !12755)
!12790 = !DILocation(line: 573, column: 5, scope: !12755)
!12791 = !DILocation(line: 574, column: 5, scope: !12755)
!12792 = !DILocation(line: 575, column: 25, scope: !12755)
!12793 = !DILocation(line: 575, column: 5, scope: !12755)
!12794 = !DILocation(line: 578, column: 5, scope: !12755)
!12795 = !DILocation(line: 579, column: 1, scope: !12755)
!12796 = !DILocation(line: 0, scope: !1404)
!12797 = !DILocation(line: 539, column: 12, scope: !1404)
!12798 = !DILocation(line: 539, column: 5, scope: !1404)
!12799 = distinct !DISubprogram(name: "hal_uart_send_callback0", scope: !1344, file: !1344, line: 511, type: !110, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12800)
!12800 = !{!12801}
!12801 = !DILocalVariable(name: "callback_context", scope: !12802, file: !1344, line: 514, type: !12804)
!12802 = distinct !DILexicalBlock(scope: !12803, file: !1344, line: 513, column: 60)
!12803 = distinct !DILexicalBlock(scope: !12799, file: !1344, line: 513, column: 9)
!12804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 32)
!12805 = !DILocation(line: 513, column: 42, scope: !12803)
!12806 = !DILocation(line: 513, column: 9, scope: !12799)
!12807 = !DILocation(line: 515, column: 39, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12802, file: !1344, line: 515, column: 13)
!12809 = !DILocation(line: 515, column: 18, scope: !12808)
!12810 = !DILocation(line: 515, column: 13, scope: !12802)
!12811 = !DILocation(line: 516, column: 89, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12808, file: !1344, line: 515, column: 49)
!12813 = !DILocation(line: 516, column: 13, scope: !12812)
!12814 = !DILocation(line: 517, column: 9, scope: !12812)
!12815 = !DILocation(line: 519, column: 32, scope: !12799)
!12816 = !DILocation(line: 519, column: 5, scope: !12799)
!12817 = !DILocation(line: 520, column: 1, scope: !12799)
!12818 = distinct !DISubprogram(name: "hal_uart_send_callback1", scope: !1344, file: !1344, line: 523, type: !110, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12819)
!12819 = !{!12820}
!12820 = !DILocalVariable(name: "callback_context", scope: !12821, file: !1344, line: 526, type: !12804)
!12821 = distinct !DILexicalBlock(scope: !12822, file: !1344, line: 525, column: 60)
!12822 = distinct !DILexicalBlock(scope: !12818, file: !1344, line: 525, column: 9)
!12823 = !DILocation(line: 525, column: 42, scope: !12822)
!12824 = !DILocation(line: 525, column: 9, scope: !12818)
!12825 = !DILocation(line: 527, column: 39, scope: !12826)
!12826 = distinct !DILexicalBlock(scope: !12821, file: !1344, line: 527, column: 13)
!12827 = !DILocation(line: 527, column: 18, scope: !12826)
!12828 = !DILocation(line: 527, column: 13, scope: !12821)
!12829 = !DILocation(line: 528, column: 89, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12826, file: !1344, line: 527, column: 49)
!12831 = !DILocation(line: 528, column: 13, scope: !12830)
!12832 = !DILocation(line: 529, column: 9, scope: !12830)
!12833 = !DILocation(line: 531, column: 32, scope: !12818)
!12834 = !DILocation(line: 531, column: 5, scope: !12818)
!12835 = !DILocation(line: 532, column: 1, scope: !12818)
!12836 = distinct !DISubprogram(name: "hal_uart_check_irq_disable", scope: !1344, file: !1344, line: 464, type: !12837, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12839)
!12837 = !DISubroutineType(types: !12838)
!12838 = !{null, !10806, !536}
!12839 = !{!12840, !12841, !12842, !12843, !12844, !12846}
!12840 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12836, file: !1344, line: 464, type: !10806)
!12841 = !DILocalVariable(name: "is_rx", arg: 2, scope: !12836, file: !1344, line: 464, type: !536)
!12842 = !DILocalVariable(name: "avail_size", scope: !12836, file: !1344, line: 466, type: !38)
!12843 = !DILocalVariable(name: "avail_space", scope: !12836, file: !1344, line: 466, type: !38)
!12844 = !DILocalVariable(name: "dma_config", scope: !12836, file: !1344, line: 467, type: !12845)
!12845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!12846 = !DILocalVariable(name: "ch", scope: !12836, file: !1344, line: 468, type: !12580)
!12847 = !DILocation(line: 0, scope: !12836)
!12848 = !DILocation(line: 466, column: 5, scope: !12836)
!12849 = !DILocation(line: 471, column: 9, scope: !12836)
!12850 = !DILocation(line: 472, column: 9, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12852, file: !1344, line: 471, column: 16)
!12852 = distinct !DILexicalBlock(scope: !12836, file: !1344, line: 471, column: 9)
!12853 = !DILocation(line: 473, column: 13, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12851, file: !1344, line: 473, column: 13)
!12855 = !DILocation(line: 473, column: 39, scope: !12854)
!12856 = !DILocation(line: 473, column: 24, scope: !12854)
!12857 = !DILocation(line: 473, column: 13, scope: !12851)
!12858 = !DILocation(line: 478, column: 9, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12852, file: !1344, line: 477, column: 12)
!12860 = !DILocation(line: 479, column: 13, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12859, file: !1344, line: 479, column: 13)
!12862 = !DILocation(line: 479, column: 40, scope: !12861)
!12863 = !DILocation(line: 479, column: 77, scope: !12861)
!12864 = !DILocation(line: 479, column: 63, scope: !12861)
!12865 = !DILocation(line: 479, column: 25, scope: !12861)
!12866 = !DILocation(line: 479, column: 13, scope: !12859)
!12867 = !DILocation(line: 0, scope: !12852)
!12868 = !DILocation(line: 484, column: 1, scope: !12836)
!12869 = distinct !DISubprogram(name: "hal_uart_receive_callback0", scope: !1344, file: !1344, line: 486, type: !110, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12870)
!12870 = !{!12871}
!12871 = !DILocalVariable(name: "callback_context", scope: !12872, file: !1344, line: 490, type: !12804)
!12872 = distinct !DILexicalBlock(scope: !12873, file: !1344, line: 489, column: 70)
!12873 = distinct !DILexicalBlock(scope: !12869, file: !1344, line: 488, column: 9)
!12874 = !DILocation(line: 488, column: 43, scope: !12873)
!12875 = !DILocation(line: 488, column: 61, scope: !12873)
!12876 = !DILocation(line: 489, column: 14, scope: !12873)
!12877 = !DILocation(line: 489, column: 63, scope: !12873)
!12878 = !DILocation(line: 488, column: 9, scope: !12869)
!12879 = !DILocation(line: 491, column: 39, scope: !12880)
!12880 = distinct !DILexicalBlock(scope: !12872, file: !1344, line: 491, column: 13)
!12881 = !DILocation(line: 491, column: 18, scope: !12880)
!12882 = !DILocation(line: 491, column: 13, scope: !12872)
!12883 = !DILocation(line: 492, column: 88, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12880, file: !1344, line: 491, column: 49)
!12885 = !DILocation(line: 492, column: 13, scope: !12884)
!12886 = !DILocation(line: 493, column: 9, scope: !12884)
!12887 = !DILocation(line: 495, column: 32, scope: !12869)
!12888 = !DILocation(line: 495, column: 5, scope: !12869)
!12889 = !DILocation(line: 496, column: 1, scope: !12869)
!12890 = distinct !DISubprogram(name: "hal_uart_receive_callback1", scope: !1344, file: !1344, line: 499, type: !110, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12891)
!12891 = !{!12892}
!12892 = !DILocalVariable(name: "callback_context", scope: !12893, file: !1344, line: 503, type: !12804)
!12893 = distinct !DILexicalBlock(scope: !12894, file: !1344, line: 502, column: 70)
!12894 = distinct !DILexicalBlock(scope: !12890, file: !1344, line: 501, column: 9)
!12895 = !DILocation(line: 501, column: 43, scope: !12894)
!12896 = !DILocation(line: 501, column: 61, scope: !12894)
!12897 = !DILocation(line: 502, column: 14, scope: !12894)
!12898 = !DILocation(line: 502, column: 63, scope: !12894)
!12899 = !DILocation(line: 501, column: 9, scope: !12890)
!12900 = !DILocation(line: 504, column: 39, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12893, file: !1344, line: 504, column: 13)
!12902 = !DILocation(line: 504, column: 18, scope: !12901)
!12903 = !DILocation(line: 504, column: 13, scope: !12893)
!12904 = !DILocation(line: 505, column: 88, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12901, file: !1344, line: 504, column: 49)
!12906 = !DILocation(line: 505, column: 13, scope: !12905)
!12907 = !DILocation(line: 506, column: 9, scope: !12905)
!12908 = !DILocation(line: 508, column: 32, scope: !12890)
!12909 = !DILocation(line: 508, column: 5, scope: !12890)
!12910 = !DILocation(line: 509, column: 1, scope: !12890)
!12911 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !1344, file: !1344, line: 582, type: !12912, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12914)
!12912 = !DISubroutineType(types: !12913)
!12913 = !{!7516, !774, !1365}
!12914 = !{!12915, !12916}
!12915 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12911, file: !1344, line: 582, type: !774)
!12916 = !DILocalVariable(name: "baudrate", arg: 2, scope: !12911, file: !1344, line: 582, type: !1365)
!12917 = !DILocation(line: 0, scope: !12911)
!12918 = !DILocation(line: 584, column: 11, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12911, file: !1344, line: 584, column: 9)
!12920 = !DILocation(line: 584, column: 46, scope: !12919)
!12921 = !DILocation(line: 588, column: 37, scope: !12911)
!12922 = !DILocation(line: 588, column: 50, scope: !12911)
!12923 = !DILocation(line: 588, column: 59, scope: !12911)
!12924 = !DILocation(line: 589, column: 12, scope: !12911)
!12925 = !DILocation(line: 589, column: 5, scope: !12911)
!12926 = !DILocation(line: 590, column: 1, scope: !12911)
!12927 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !1344, file: !1344, line: 608, type: !12928, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12932)
!12928 = !DISubroutineType(types: !12929)
!12929 = !{!7516, !774, !12930}
!12930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12931, size: 32)
!12931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1386)
!12932 = !{!12933, !12934}
!12933 = !DILocalVariable(name: "uart_port", arg: 1, scope: !12927, file: !1344, line: 608, type: !774)
!12934 = !DILocalVariable(name: "uart_dma_config", arg: 2, scope: !12927, file: !1344, line: 608, type: !12930)
!12935 = !DILocation(line: 0, scope: !12927)
!12936 = !DILocation(line: 610, column: 10, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12927, file: !1344, line: 610, column: 9)
!12938 = !DILocation(line: 610, column: 9, scope: !12927)
!12939 = !DILocation(line: 614, column: 10, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12927, file: !1344, line: 614, column: 9)
!12941 = !DILocation(line: 614, column: 9, scope: !12927)
!12942 = !DILocation(line: 618, column: 37, scope: !12927)
!12943 = !DILocation(line: 618, column: 56, scope: !12927)
!12944 = !DILocation(line: 619, column: 45, scope: !12927)
!12945 = !DILocation(line: 619, column: 12, scope: !12927)
!12946 = !DILocation(line: 620, column: 12, scope: !12927)
!12947 = !DILocation(line: 619, column: 5, scope: !12927)
!12948 = !DILocation(line: 621, column: 5, scope: !12927)
!12949 = !DILocation(line: 622, column: 5, scope: !12927)
!12950 = !DILocation(line: 623, column: 33, scope: !12927)
!12951 = !DILocation(line: 624, column: 50, scope: !12927)
!12952 = !DILocation(line: 625, column: 50, scope: !12927)
!12953 = !DILocation(line: 626, column: 50, scope: !12927)
!12954 = !DILocation(line: 627, column: 50, scope: !12927)
!12955 = !DILocation(line: 628, column: 33, scope: !12927)
!12956 = !DILocation(line: 623, column: 5, scope: !12927)
!12957 = !DILocation(line: 630, column: 50, scope: !12927)
!12958 = !DILocation(line: 631, column: 50, scope: !12927)
!12959 = !DILocation(line: 632, column: 50, scope: !12927)
!12960 = !DILocation(line: 629, column: 5, scope: !12927)
!12961 = !DILocation(line: 634, column: 5, scope: !12927)
!12962 = !DILocation(line: 635, column: 1, scope: !12927)
!12963 = distinct !DISubprogram(name: "hal_uart_is_dma_config_valid", scope: !1344, file: !1344, line: 112, type: !12964, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12966)
!12964 = !DISubroutineType(types: !12965)
!12965 = !{!536, !12930}
!12966 = !{!12967}
!12967 = !DILocalVariable(name: "dma_config", arg: 1, scope: !12963, file: !1344, line: 112, type: !12930)
!12968 = !DILocation(line: 0, scope: !12963)
!12969 = !DILocation(line: 114, column: 14, scope: !12970)
!12970 = distinct !DILexicalBlock(scope: !12963, file: !1344, line: 114, column: 9)
!12971 = !DILocation(line: 114, column: 9, scope: !12963)
!12972 = !DILocation(line: 117, column: 29, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12963, file: !1344, line: 117, column: 9)
!12974 = !DILocation(line: 117, column: 14, scope: !12973)
!12975 = !DILocation(line: 117, column: 9, scope: !12963)
!12976 = !DILocation(line: 120, column: 21, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12963, file: !1344, line: 120, column: 9)
!12978 = !DILocation(line: 120, column: 61, scope: !12977)
!12979 = !DILocation(line: 120, column: 47, scope: !12977)
!12980 = !DILocation(line: 120, column: 9, scope: !12963)
!12981 = !DILocation(line: 123, column: 61, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12963, file: !1344, line: 123, column: 9)
!12983 = !DILocation(line: 123, column: 47, scope: !12982)
!12984 = !DILocation(line: 123, column: 9, scope: !12963)
!12985 = !DILocation(line: 126, column: 29, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12963, file: !1344, line: 126, column: 9)
!12987 = !DILocation(line: 126, column: 14, scope: !12986)
!12988 = !DILocation(line: 126, column: 9, scope: !12963)
!12989 = !DILocation(line: 129, column: 21, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12963, file: !1344, line: 129, column: 9)
!12991 = !DILocation(line: 129, column: 58, scope: !12990)
!12992 = !DILocation(line: 129, column: 44, scope: !12990)
!12993 = !DILocation(line: 129, column: 9, scope: !12963)
!12994 = !DILocation(line: 136, column: 1, scope: !12963)
!12995 = distinct !DISubprogram(name: "hal_uart_translate_timeout", scope: !1344, file: !1344, line: 182, type: !12210, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !12996)
!12996 = !{!12997, !12998}
!12997 = !DILocalVariable(name: "timeout_us", arg: 1, scope: !12995, file: !1344, line: 182, type: !38)
!12998 = !DILocalVariable(name: "ticks_per_us", scope: !12995, file: !1344, line: 184, type: !38)
!12999 = !DILocation(line: 0, scope: !12995)
!13000 = !DILocation(line: 186, column: 20, scope: !12995)
!13001 = !DILocation(line: 186, column: 39, scope: !12995)
!13002 = !DILocation(line: 188, column: 25, scope: !12995)
!13003 = !DILocation(line: 188, column: 5, scope: !12995)
!13004 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !1344, file: !1344, line: 637, type: !7514, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !13005)
!13005 = !{!13006, !13007}
!13006 = !DILocalVariable(name: "uart_port", arg: 1, scope: !13004, file: !1344, line: 637, type: !774)
!13007 = !DILocalVariable(name: "int_no", scope: !13004, file: !1344, line: 639, type: !10806)
!13008 = !DILocation(line: 0, scope: !13004)
!13009 = !DILocation(line: 641, column: 10, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !13004, file: !1344, line: 641, column: 9)
!13011 = !DILocation(line: 641, column: 9, scope: !13004)
!13012 = !DILocation(line: 645, column: 14, scope: !13004)
!13013 = !DILocation(line: 646, column: 5, scope: !13004)
!13014 = !DILocation(line: 648, column: 5, scope: !13004)
!13015 = !DILocation(line: 649, column: 1, scope: !13004)
!13016 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !1344, file: !1344, line: 651, type: !13017, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !13019)
!13017 = !DISubroutineType(types: !13018)
!13018 = !{!7516, !774, !96, !96, !96}
!13019 = !{!13020, !13021, !13022, !13023, !13024}
!13020 = !DILocalVariable(name: "uart_port", arg: 1, scope: !13016, file: !1344, line: 651, type: !774)
!13021 = !DILocalVariable(name: "xon", arg: 2, scope: !13016, file: !1344, line: 652, type: !96)
!13022 = !DILocalVariable(name: "xoff", arg: 3, scope: !13016, file: !1344, line: 653, type: !96)
!13023 = !DILocalVariable(name: "escape_character", arg: 4, scope: !13016, file: !1344, line: 654, type: !96)
!13024 = !DILocalVariable(name: "int_no", scope: !13016, file: !1344, line: 656, type: !10806)
!13025 = !DILocation(line: 0, scope: !13016)
!13026 = !DILocation(line: 658, column: 10, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13016, file: !1344, line: 658, column: 9)
!13028 = !DILocation(line: 658, column: 9, scope: !13016)
!13029 = !DILocation(line: 662, column: 14, scope: !13016)
!13030 = !DILocation(line: 663, column: 5, scope: !13016)
!13031 = !DILocation(line: 665, column: 5, scope: !13016)
!13032 = !DILocation(line: 666, column: 1, scope: !13016)
!13033 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !1344, file: !1344, line: 668, type: !7514, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !13034)
!13034 = !{!13035, !13036}
!13035 = !DILocalVariable(name: "uart_port", arg: 1, scope: !13033, file: !1344, line: 668, type: !774)
!13036 = !DILocalVariable(name: "int_no", scope: !13033, file: !1344, line: 670, type: !10806)
!13037 = !DILocation(line: 0, scope: !13033)
!13038 = !DILocation(line: 672, column: 10, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13033, file: !1344, line: 672, column: 9)
!13040 = !DILocation(line: 672, column: 9, scope: !13033)
!13041 = !DILocation(line: 676, column: 14, scope: !13033)
!13042 = !DILocation(line: 677, column: 5, scope: !13033)
!13043 = !DILocation(line: 679, column: 5, scope: !13033)
!13044 = !DILocation(line: 680, column: 1, scope: !13033)
!13045 = distinct !DISubprogram(name: "hal_uart_set_dma_timeout", scope: !1344, file: !1344, line: 683, type: !13046, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !13048)
!13046 = !DISubroutineType(types: !13047)
!13047 = !{!7516, !774, !38}
!13048 = !{!13049, !13050}
!13049 = !DILocalVariable(name: "uart_port", arg: 1, scope: !13045, file: !1344, line: 683, type: !774)
!13050 = !DILocalVariable(name: "timeout", arg: 2, scope: !13045, file: !1344, line: 683, type: !38)
!13051 = !DILocation(line: 0, scope: !13045)
!13052 = !DILocation(line: 685, column: 10, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13045, file: !1344, line: 685, column: 9)
!13054 = !DILocation(line: 685, column: 9, scope: !13045)
!13055 = !DILocation(line: 689, column: 19, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13045, file: !1344, line: 689, column: 9)
!13057 = !DILocation(line: 0, scope: !13056)
!13058 = !DILocation(line: 696, column: 1, scope: !13045)
!13059 = distinct !DISubprogram(name: "hal_dwt_reset", scope: !1415, file: !1415, line: 47, type: !110, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1414, retainedNodes: !2013)
!13060 = !DILocation(line: 49, column: 16, scope: !13059)
!13061 = !DILocation(line: 50, column: 16, scope: !13059)
!13062 = !DILocation(line: 51, column: 16, scope: !13059)
!13063 = !DILocation(line: 52, column: 16, scope: !13059)
!13064 = !DILocation(line: 53, column: 16, scope: !13059)
!13065 = !DILocation(line: 54, column: 16, scope: !13059)
!13066 = !DILocation(line: 55, column: 16, scope: !13059)
!13067 = !DILocation(line: 56, column: 16, scope: !13059)
!13068 = !DILocation(line: 57, column: 20, scope: !13059)
!13069 = !DILocation(line: 58, column: 20, scope: !13059)
!13070 = !DILocation(line: 59, column: 20, scope: !13059)
!13071 = !DILocation(line: 60, column: 20, scope: !13059)
!13072 = !DILocation(line: 61, column: 1, scope: !13059)
!13073 = distinct !DISubprogram(name: "hal_dwt_init", scope: !1415, file: !1415, line: 62, type: !110, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1414, retainedNodes: !2013)
!13074 = !DILocation(line: 70, column: 22, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13073, file: !1415, line: 70, column: 9)
!13076 = !DILocation(line: 70, column: 28, scope: !13075)
!13077 = !DILocation(line: 70, column: 9, scope: !13073)
!13078 = !DILocation(line: 72, column: 9, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13075, file: !1415, line: 70, column: 62)
!13080 = !DILocation(line: 75, column: 26, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13079, file: !1415, line: 75, column: 13)
!13082 = !DILocation(line: 75, column: 32, scope: !13081)
!13083 = !DILocation(line: 75, column: 13, scope: !13079)
!13084 = !DILocation(line: 76, column: 30, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13081, file: !1415, line: 75, column: 63)
!13086 = !DILocation(line: 77, column: 9, scope: !13085)
!13087 = !DILocation(line: 79, column: 28, scope: !13079)
!13088 = !DILocation(line: 79, column: 33, scope: !13079)
!13089 = !DILocation(line: 79, column: 21, scope: !13079)
!13090 = !DILocation(line: 83, column: 20, scope: !13079)
!13091 = !DILocation(line: 84, column: 20, scope: !13079)
!13092 = !DILocation(line: 85, column: 20, scope: !13079)
!13093 = !DILocation(line: 86, column: 20, scope: !13079)
!13094 = !DILocation(line: 92, column: 5, scope: !13079)
!13095 = !DILocation(line: 93, column: 1, scope: !13073)
!13096 = distinct !DISubprogram(name: "hal_dwt_request_watchpoint", scope: !1415, file: !1415, line: 120, type: !13097, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1414, retainedNodes: !13100)
!13097 = !DISubroutineType(types: !13098)
!13098 = !{!1233, !38, !38, !38, !13099}
!13099 = !DIDerivedType(tag: DW_TAG_typedef, name: "DWT_FUNC_TYPE", file: !304, line: 48, baseType: !311)
!13100 = !{!13101, !13102, !13103, !13104, !13105}
!13101 = !DILocalVariable(name: "index", arg: 1, scope: !13096, file: !1415, line: 120, type: !38)
!13102 = !DILocalVariable(name: "addr_base", arg: 2, scope: !13096, file: !1415, line: 120, type: !38)
!13103 = !DILocalVariable(name: "addr_mask", arg: 3, scope: !13096, file: !1415, line: 120, type: !38)
!13104 = !DILocalVariable(name: "func", arg: 4, scope: !13096, file: !1415, line: 120, type: !13099)
!13105 = !DILocalVariable(name: "offset", scope: !13096, file: !1415, line: 122, type: !38)
!13106 = !DILocation(line: 0, scope: !13096)
!13107 = !DILocation(line: 129, column: 22, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13096, file: !1415, line: 129, column: 9)
!13109 = !DILocation(line: 129, column: 28, scope: !13108)
!13110 = !DILocation(line: 129, column: 9, scope: !13096)
!13111 = !DILocation(line: 131, column: 23, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13113, file: !1415, line: 131, column: 13)
!13113 = distinct !DILexicalBlock(scope: !13108, file: !1415, line: 129, column: 62)
!13114 = !DILocation(line: 131, column: 20, scope: !13112)
!13115 = !DILocation(line: 131, column: 36, scope: !13112)
!13116 = !DILocation(line: 135, column: 33, scope: !13113)
!13117 = !DILocation(line: 138, column: 23, scope: !13113)
!13118 = !DILocation(line: 138, column: 33, scope: !13113)
!13119 = !DILocation(line: 139, column: 23, scope: !13113)
!13120 = !DILocation(line: 139, column: 33, scope: !13113)
!13121 = !DILocation(line: 140, column: 58, scope: !13113)
!13122 = !DILocation(line: 140, column: 40, scope: !13113)
!13123 = !DILocation(line: 140, column: 68, scope: !13113)
!13124 = !DILocation(line: 140, column: 97, scope: !13113)
!13125 = !DILocation(line: 140, column: 37, scope: !13113)
!13126 = !DILocation(line: 142, column: 9, scope: !13113)
!13127 = !DILocation(line: 0, scope: !13108)
!13128 = !DILocation(line: 146, column: 1, scope: !13096)
!13129 = distinct !DISubprogram(name: "customer_flash_suspend_bit", scope: !1457, file: !1457, line: 178, type: !13130, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !13132)
!13130 = !DISubroutineType(types: !13131)
!13131 = !{!98}
!13132 = !{!13133}
!13133 = !DILocalVariable(name: "suspend_bit", scope: !13129, file: !1457, line: 181, type: !98)
!13134 = !DILocation(line: 0, scope: !13129)
!13135 = !DILocation(line: 182, column: 5, scope: !13129)
!13136 = distinct !DISubprogram(name: "customer_switch_spi_mode_command", scope: !1457, file: !1457, line: 185, type: !13137, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !2013)
!13137 = !DISubroutineType(types: !13138)
!13138 = !{!942}
!13139 = !DILocation(line: 188, column: 4, scope: !13136)
!13140 = distinct !DISubprogram(name: "customer_switch_spiq_mode_command", scope: !1457, file: !1457, line: 191, type: !13137, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !2013)
!13141 = !DILocation(line: 194, column: 5, scope: !13140)
!13142 = distinct !DISubprogram(name: "customer_flash_read_SR2_comand", scope: !1457, file: !1457, line: 197, type: !13130, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !13143)
!13143 = !{!13144}
!13144 = !DILocalVariable(name: "cmd", scope: !13142, file: !1457, line: 201, type: !98)
!13145 = !DILocation(line: 0, scope: !13142)
!13146 = !DILocation(line: 202, column: 5, scope: !13142)
!13147 = distinct !DISubprogram(name: "customer_flash_register", scope: !1457, file: !1457, line: 207, type: !13148, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1456, retainedNodes: !2013)
!13148 = !DISubroutineType(types: !13149)
!13149 = !{!1459}
!13150 = !DILocation(line: 209, column: 5, scope: !13147)
!13151 = distinct !DISubprogram(name: "main", scope: !1483, file: !1483, line: 82, type: !8910, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1482, retainedNodes: !13152)
!13152 = !{!13153}
!13153 = !DILocalVariable(name: "idx", scope: !13151, file: !1483, line: 84, type: !103)
!13154 = !DILocation(line: 87, column: 5, scope: !13151)
!13155 = !DILocation(line: 95, column: 5, scope: !13151)
!13156 = !DILocation(line: 0, scope: !13151)
!13157 = !DILocation(line: 98, column: 5, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13151, file: !1483, line: 98, column: 5)
!13159 = !DILocation(line: 99, column: 9, scope: !13160)
!13160 = distinct !DILexicalBlock(scope: !13161, file: !1483, line: 98, column: 35)
!13161 = distinct !DILexicalBlock(scope: !13158, file: !1483, line: 98, column: 5)
!13162 = !DILocation(line: 98, column: 31, scope: !13161)
!13163 = !DILocation(line: 98, column: 23, scope: !13161)
!13164 = distinct !{!13164, !13157, !13165}
!13165 = !DILocation(line: 100, column: 5, scope: !13158)
!13166 = !DILocation(line: 104, column: 5, scope: !13151)
!13167 = !DILocation(line: 107, column: 5, scope: !13151)
!13168 = !DILocation(line: 114, column: 5, scope: !13151)
!13169 = !DILocation(line: 114, column: 5, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13171, file: !1483, line: 114, column: 5)
!13171 = distinct !DILexicalBlock(scope: !13151, file: !1483, line: 114, column: 5)
!13172 = distinct !{!13172, !13173, !13174}
!13173 = !DILocation(line: 114, column: 5, scope: !13171)
!13174 = !DILocation(line: 114, column: 13, scope: !13171)
!13175 = distinct !DISubprogram(name: "vTestTask", scope: !1483, file: !1483, line: 68, type: !1337, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1482, retainedNodes: !13176)
!13176 = !{!13177, !13178, !13179, !13180}
!13177 = !DILocalVariable(name: "pvParameters", arg: 1, scope: !13175, file: !1483, line: 68, type: !30)
!13178 = !DILocalVariable(name: "idx", scope: !13175, file: !1483, line: 70, type: !38)
!13179 = !DILocalVariable(name: "xLastExecutionTime", scope: !13175, file: !1483, line: 71, type: !59)
!13180 = !DILocalVariable(name: "xDelayTime", scope: !13175, file: !1483, line: 71, type: !59)
!13181 = !DILocation(line: 0, scope: !13175)
!13182 = !DILocation(line: 70, column: 20, scope: !13175)
!13183 = !DILocation(line: 71, column: 5, scope: !13175)
!13184 = !DILocation(line: 73, column: 26, scope: !13175)
!13185 = !DILocation(line: 73, column: 24, scope: !13175)
!13186 = !DILocation(line: 74, column: 29, scope: !13175)
!13187 = !DILocation(line: 76, column: 5, scope: !13175)
!13188 = !DILocation(line: 77, column: 9, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13175, file: !1483, line: 76, column: 15)
!13190 = !DILocation(line: 78, column: 9, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13189, file: !1483, line: 78, column: 9)
!13192 = distinct !{!13192, !13187, !13193}
!13193 = !DILocation(line: 79, column: 5, scope: !13175)
!13194 = distinct !DISubprogram(name: "SysTick_Set", scope: !1498, file: !1498, line: 70, type: !12210, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !13195)
!13195 = !{!13196, !13197}
!13196 = !DILocalVariable(name: "ticks", arg: 1, scope: !13194, file: !1498, line: 70, type: !38)
!13197 = !DILocalVariable(name: "val", scope: !13194, file: !1498, line: 72, type: !38)
!13198 = !DILocation(line: 0, scope: !13194)
!13199 = !DILocation(line: 74, column: 16, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13194, file: !1498, line: 74, column: 9)
!13201 = !DILocation(line: 74, column: 21, scope: !13200)
!13202 = !DILocation(line: 74, column: 9, scope: !13194)
!13203 = !DILocation(line: 78, column: 20, scope: !13194)
!13204 = !DILocation(line: 80, column: 19, scope: !13194)
!13205 = !DILocation(line: 83, column: 20, scope: !13194)
!13206 = !DILocation(line: 84, column: 20, scope: !13194)
!13207 = !DILocation(line: 86, column: 19, scope: !13194)
!13208 = !DILocation(line: 88, column: 5, scope: !13194)
!13209 = !DILocation(line: 89, column: 1, scope: !13194)
!13210 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !1498, file: !1498, line: 98, type: !110, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !2013)
!13211 = !DILocation(line: 100, column: 28, scope: !13210)
!13212 = !DILocation(line: 101, column: 1, scope: !13210)
!13213 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !1498, file: !1498, line: 110, type: !2643, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !2013)
!13214 = !DILocation(line: 112, column: 12, scope: !13213)
!13215 = !DILocation(line: 112, column: 5, scope: !13213)
!13216 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1498, file: !1498, line: 122, type: !110, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !2013)
!13217 = !DILocation(line: 124, column: 23, scope: !13216)
!13218 = !DILocation(line: 124, column: 21, scope: !13216)
!13219 = !DILocation(line: 125, column: 1, scope: !13216)
!13220 = distinct !DISubprogram(name: "SystemInit", scope: !1498, file: !1498, line: 136, type: !110, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !2013)
!13221 = !DILocation(line: 140, column: 16, scope: !13220)
!13222 = !DILocation(line: 144, column: 16, scope: !13220)
!13223 = !DILocation(line: 147, column: 16, scope: !13220)
!13224 = !DILocation(line: 150, column: 1, scope: !13220)
!13225 = distinct !DISubprogram(name: "CachePreInit", scope: !1498, file: !1498, line: 158, type: !110, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1497, retainedNodes: !2013)
!13226 = !DILocation(line: 161, column: 22, scope: !13225)
!13227 = !DILocation(line: 164, column: 21, scope: !13225)
!13228 = !DILocation(line: 167, column: 21, scope: !13225)
!13229 = !DILocation(line: 170, column: 29, scope: !13225)
!13230 = !DILocation(line: 171, column: 33, scope: !13225)
!13231 = !DILocation(line: 173, column: 28, scope: !13225)
!13232 = !DILocation(line: 178, column: 30, scope: !13225)
!13233 = !DILocation(line: 192, column: 1, scope: !13225)
!13234 = distinct !DISubprogram(name: "__io_putchar", scope: !1904, file: !1904, line: 72, type: !9605, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !13235)
!13235 = !{!13236}
!13236 = !DILocalVariable(name: "ch", arg: 1, scope: !13234, file: !1904, line: 72, type: !103)
!13237 = !DILocation(line: 0, scope: !13234)
!13238 = !DILocation(line: 77, column: 35, scope: !13234)
!13239 = !DILocation(line: 77, column: 5, scope: !13234)
!13240 = !DILocation(line: 78, column: 12, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13234, file: !1904, line: 78, column: 9)
!13242 = !DILocation(line: 78, column: 9, scope: !13234)
!13243 = !DILocation(line: 79, column: 9, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13241, file: !1904, line: 78, column: 21)
!13245 = !DILocation(line: 80, column: 5, scope: !13244)
!13246 = !DILocation(line: 81, column: 5, scope: !13234)
!13247 = distinct !DISubprogram(name: "system_init", scope: !1904, file: !1904, line: 213, type: !110, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !2013)
!13248 = !DILocation(line: 216, column: 5, scope: !13247)
!13249 = !DILocation(line: 219, column: 5, scope: !13247)
!13250 = !DILocation(line: 227, column: 5, scope: !13247)
!13251 = !DILocation(line: 228, column: 1, scope: !13247)
!13252 = distinct !DISubprogram(name: "SystemClock_Config", scope: !1904, file: !1904, line: 90, type: !110, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !2013)
!13253 = !DILocation(line: 93, column: 5, scope: !13252)
!13254 = !DILocation(line: 96, column: 5, scope: !13252)
!13255 = !DILocation(line: 99, column: 5, scope: !13252)
!13256 = !DILocation(line: 100, column: 1, scope: !13252)
!13257 = distinct !DISubprogram(name: "prvSetupHardware", scope: !1904, file: !1904, line: 149, type: !110, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !2013)
!13258 = !DILocation(line: 152, column: 9, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13257, file: !1904, line: 152, column: 9)
!13260 = !DILocation(line: 160, column: 5, scope: !13257)
!13261 = !DILocation(line: 174, column: 5, scope: !13257)
!13262 = !DILocation(line: 177, column: 5, scope: !13257)
!13263 = !DILocation(line: 178, column: 1, scope: !13257)
!13264 = distinct !DISubprogram(name: "_main_sys_random_init", scope: !1904, file: !1904, line: 185, type: !110, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !13265)
!13265 = !{!13266, !13267}
!13266 = !DILocalVariable(name: "seed", scope: !13264, file: !1904, line: 189, type: !38)
!13267 = !DILocalVariable(name: "s", scope: !13264, file: !1904, line: 190, type: !8780)
!13268 = !DILocation(line: 189, column: 5, scope: !13264)
!13269 = !DILocation(line: 192, column: 9, scope: !13264)
!13270 = !DILocation(line: 0, scope: !13264)
!13271 = !DILocation(line: 194, column: 11, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13264, file: !1904, line: 194, column: 9)
!13273 = !DILocation(line: 194, column: 9, scope: !13264)
!13274 = !DILocation(line: 195, column: 13, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13272, file: !1904, line: 194, column: 34)
!13276 = !DILocation(line: 198, column: 9, scope: !13264)
!13277 = !DILocation(line: 199, column: 29, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13279, file: !1904, line: 198, column: 34)
!13279 = distinct !DILexicalBlock(scope: !13264, file: !1904, line: 198, column: 9)
!13280 = !DILocation(line: 199, column: 9, scope: !13278)
!13281 = !DILocation(line: 202, column: 9, scope: !13264)
!13282 = !DILocation(line: 203, column: 9, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13284, file: !1904, line: 203, column: 9)
!13284 = distinct !DILexicalBlock(scope: !13285, file: !1904, line: 202, column: 34)
!13285 = distinct !DILexicalBlock(scope: !13264, file: !1904, line: 202, column: 9)
!13286 = !DILocation(line: 204, column: 5, scope: !13284)
!13287 = !DILocation(line: 206, column: 1, scope: !13264)
!13288 = distinct !DISubprogram(name: "cache_enable", scope: !1904, file: !1904, line: 111, type: !13289, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1903, retainedNodes: !13291)
!13289 = !DISubroutineType(types: !13290)
!13290 = !{!1233, !11526}
!13291 = !{!13292, !13293, !13294, !13295}
!13292 = !DILocalVariable(name: "cache_size", arg: 1, scope: !13288, file: !1904, line: 111, type: !11526)
!13293 = !DILocalVariable(name: "region", scope: !13288, file: !1904, line: 113, type: !1907)
!13294 = !DILocalVariable(name: "region_number", scope: !13288, file: !1904, line: 113, type: !1907)
!13295 = !DILocalVariable(name: "region_cfg_tbl", scope: !13288, file: !1904, line: 115, type: !13296)
!13296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13297, size: 64, elements: !453)
!13297 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !1094, line: 222, baseType: !13298)
!13298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 219, size: 64, elements: !13299)
!13299 = !{!13300, !13301}
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !13298, file: !1094, line: 220, baseType: !38, size: 32)
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !13298, file: !1094, line: 221, baseType: !38, size: 32, offset: 32)
!13302 = !DILocation(line: 0, scope: !13288)
!13303 = !DILocation(line: 115, column: 5, scope: !13288)
!13304 = !DILocation(line: 115, column: 31, scope: !13288)
!13305 = !DILocation(line: 129, column: 5, scope: !13288)
!13306 = !DILocation(line: 132, column: 5, scope: !13288)
!13307 = !DILocation(line: 134, column: 42, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13309, file: !1904, line: 133, column: 73)
!13309 = distinct !DILexicalBlock(scope: !13310, file: !1904, line: 133, column: 5)
!13310 = distinct !DILexicalBlock(scope: !13288, file: !1904, line: 133, column: 5)
!13311 = !DILocation(line: 134, column: 9, scope: !13308)
!13312 = !DILocation(line: 135, column: 9, scope: !13308)
!13313 = !DILocation(line: 137, column: 5, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13288, file: !1904, line: 137, column: 5)
!13315 = !DILocation(line: 138, column: 9, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13317, file: !1904, line: 137, column: 53)
!13317 = distinct !DILexicalBlock(scope: !13314, file: !1904, line: 137, column: 5)
!13318 = !DILocation(line: 137, column: 49, scope: !13317)
!13319 = !DILocation(line: 137, column: 19, scope: !13317)
!13320 = distinct !{!13320, !13313, !13321}
!13321 = !DILocation(line: 139, column: 5, scope: !13314)
!13322 = !DILocation(line: 140, column: 5, scope: !13288)
!13323 = !DILocation(line: 142, column: 1, scope: !13288)
!13324 = distinct !DISubprogram(name: "_close", scope: !1572, file: !1572, line: 45, type: !9605, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !13325)
!13325 = !{!13326}
!13326 = !DILocalVariable(name: "file", arg: 1, scope: !13324, file: !1572, line: 45, type: !103)
!13327 = !DILocation(line: 0, scope: !13324)
!13328 = !DILocation(line: 47, column: 5, scope: !13324)
!13329 = distinct !DISubprogram(name: "_fstat", scope: !1572, file: !1572, line: 50, type: !13330, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !13378)
!13330 = !DISubroutineType(types: !13331)
!13331 = !{!103, !103, !13332}
!13332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13333, size: 32)
!13333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !13334, line: 27, size: 704, elements: !13335)
!13334 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!13335 = !{!13336, !13339, !13342, !13345, !13348, !13351, !13354, !13355, !13358, !13368, !13369, !13370, !13373, !13376}
!13336 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !13333, file: !13334, line: 29, baseType: !13337, size: 16)
!13337 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !1576, line: 161, baseType: !13338)
!13338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !102, line: 56, baseType: !1591)
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !13333, file: !13334, line: 30, baseType: !13340, size: 16, offset: 16)
!13340 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !1576, line: 139, baseType: !13341)
!13341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !102, line: 75, baseType: !35)
!13342 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !13333, file: !13334, line: 31, baseType: !13343, size: 32, offset: 32)
!13343 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !1576, line: 189, baseType: !13344)
!13344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !102, line: 90, baseType: !39)
!13345 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !13333, file: !13334, line: 32, baseType: !13346, size: 16, offset: 64)
!13346 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !1576, line: 194, baseType: !13347)
!13347 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !102, line: 209, baseType: !35)
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !13333, file: !13334, line: 33, baseType: !13349, size: 16, offset: 80)
!13349 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !1576, line: 165, baseType: !13350)
!13350 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !102, line: 60, baseType: !35)
!13351 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !13333, file: !13334, line: 34, baseType: !13352, size: 16, offset: 96)
!13352 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !1576, line: 169, baseType: !13353)
!13353 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !102, line: 63, baseType: !35)
!13354 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !13333, file: !13334, line: 35, baseType: !13337, size: 16, offset: 112)
!13355 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !13333, file: !13334, line: 36, baseType: !13356, size: 32, offset: 128)
!13356 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !1576, line: 157, baseType: !13357)
!13357 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !102, line: 102, baseType: !1630)
!13358 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !13333, file: !13334, line: 42, baseType: !13359, size: 128, offset: 192)
!13359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !13360, line: 47, size: 128, elements: !13361)
!13360 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!13361 = !{!13362, !13367}
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !13359, file: !13360, line: 48, baseType: !13363, size: 64)
!13363 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !13364, line: 42, baseType: !13365)
!13364 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!13365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !34, line: 200, baseType: !13366)
!13366 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!13367 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !13359, file: !13360, line: 49, baseType: !42, size: 32, offset: 64)
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !13333, file: !13334, line: 43, baseType: !13359, size: 128, offset: 320)
!13369 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !13333, file: !13334, line: 44, baseType: !13359, size: 128, offset: 448)
!13370 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !13333, file: !13334, line: 45, baseType: !13371, size: 32, offset: 576)
!13371 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !1576, line: 102, baseType: !13372)
!13372 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !102, line: 34, baseType: !42)
!13373 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !13333, file: !13334, line: 46, baseType: !13374, size: 32, offset: 608)
!13374 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !1576, line: 97, baseType: !13375)
!13375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !102, line: 30, baseType: !42)
!13376 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !13333, file: !13334, line: 48, baseType: !13377, size: 64, offset: 640)
!13377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !42, size: 64, elements: !419)
!13378 = !{!13379, !13380}
!13379 = !DILocalVariable(name: "file", arg: 1, scope: !13329, file: !1572, line: 50, type: !103)
!13380 = !DILocalVariable(name: "st", arg: 2, scope: !13329, file: !1572, line: 50, type: !13332)
!13381 = !DILocation(line: 0, scope: !13329)
!13382 = !DILocation(line: 52, column: 5, scope: !13329)
!13383 = distinct !DISubprogram(name: "_isatty", scope: !1572, file: !1572, line: 56, type: !9605, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !13384)
!13384 = !{!13385}
!13385 = !DILocalVariable(name: "file", arg: 1, scope: !13383, file: !1572, line: 56, type: !103)
!13386 = !DILocation(line: 0, scope: !13383)
!13387 = !DILocation(line: 58, column: 5, scope: !13383)
!13388 = distinct !DISubprogram(name: "_lseek", scope: !1572, file: !1572, line: 61, type: !13389, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !13391)
!13389 = !DISubroutineType(types: !13390)
!13390 = !{!103, !103, !103, !103}
!13391 = !{!13392, !13393, !13394}
!13392 = !DILocalVariable(name: "file", arg: 1, scope: !13388, file: !1572, line: 61, type: !103)
!13393 = !DILocalVariable(name: "ptr", arg: 2, scope: !13388, file: !1572, line: 61, type: !103)
!13394 = !DILocalVariable(name: "dir", arg: 3, scope: !13388, file: !1572, line: 61, type: !103)
!13395 = !DILocation(line: 0, scope: !13388)
!13396 = !DILocation(line: 63, column: 5, scope: !13388)
!13397 = distinct !DISubprogram(name: "_open", scope: !1572, file: !1572, line: 66, type: !13398, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !13400)
!13398 = !DISubroutineType(types: !13399)
!13399 = !{!103, !104, !103, !103}
!13400 = !{!13401, !13402, !13403}
!13401 = !DILocalVariable(name: "name", arg: 1, scope: !13397, file: !1572, line: 66, type: !104)
!13402 = !DILocalVariable(name: "flags", arg: 2, scope: !13397, file: !1572, line: 66, type: !103)
!13403 = !DILocalVariable(name: "mode", arg: 3, scope: !13397, file: !1572, line: 66, type: !103)
!13404 = !DILocation(line: 0, scope: !13397)
!13405 = !DILocation(line: 68, column: 5, scope: !13397)
!13406 = distinct !DISubprogram(name: "_read", scope: !1572, file: !1572, line: 71, type: !13407, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !13409)
!13407 = !DISubroutineType(types: !13408)
!13408 = !{!103, !103, !701, !103}
!13409 = !{!13410, !13411, !13412}
!13410 = !DILocalVariable(name: "file", arg: 1, scope: !13406, file: !1572, line: 71, type: !103)
!13411 = !DILocalVariable(name: "ptr", arg: 2, scope: !13406, file: !1572, line: 71, type: !701)
!13412 = !DILocalVariable(name: "len", arg: 3, scope: !13406, file: !1572, line: 71, type: !103)
!13413 = !DILocation(line: 0, scope: !13406)
!13414 = !DILocation(line: 73, column: 5, scope: !13406)
!13415 = distinct !DISubprogram(name: "_write", scope: !1572, file: !1572, line: 86, type: !13407, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !13416)
!13416 = !{!13417, !13418, !13419, !13420}
!13417 = !DILocalVariable(name: "file", arg: 1, scope: !13415, file: !1572, line: 86, type: !103)
!13418 = !DILocalVariable(name: "ptr", arg: 2, scope: !13415, file: !1572, line: 86, type: !701)
!13419 = !DILocalVariable(name: "len", arg: 3, scope: !13415, file: !1572, line: 86, type: !103)
!13420 = !DILocalVariable(name: "i", scope: !13415, file: !1572, line: 88, type: !103)
!13421 = !DILocation(line: 0, scope: !13415)
!13422 = !DILocation(line: 90, column: 19, scope: !13423)
!13423 = distinct !DILexicalBlock(scope: !13424, file: !1572, line: 90, column: 5)
!13424 = distinct !DILexicalBlock(scope: !13415, file: !1572, line: 90, column: 5)
!13425 = !DILocation(line: 90, column: 5, scope: !13424)
!13426 = !DILocation(line: 91, column: 26, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13423, file: !1572, line: 90, column: 31)
!13428 = !DILocation(line: 91, column: 22, scope: !13427)
!13429 = !DILocation(line: 91, column: 9, scope: !13427)
!13430 = !DILocation(line: 90, column: 27, scope: !13423)
!13431 = distinct !{!13431, !13425, !13432}
!13432 = !DILocation(line: 92, column: 5, scope: !13424)
!13433 = !DILocation(line: 94, column: 5, scope: !13415)
!13434 = !DILocation(line: 0, scope: !1571)
!13435 = !DILocation(line: 105, column: 5, scope: !1571)
!13436 = !{i64 3455}
!13437 = !DILocation(line: 107, column: 14, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !1571, file: !1572, line: 107, column: 9)
!13439 = !DILocation(line: 107, column: 11, scope: !13438)
!13440 = !DILocation(line: 107, column: 9, scope: !1571)
!13441 = !DILocation(line: 113, column: 32, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !1571, file: !1572, line: 113, column: 9)
!13443 = !DILocation(line: 113, column: 15, scope: !13442)
!13444 = !DILocation(line: 124, column: 1, scope: !1571)
!13445 = !DILocation(line: 113, column: 9, scope: !1571)
!13446 = distinct !DISubprogram(name: "_exit", scope: !1572, file: !1572, line: 126, type: !1712, scopeLine: 127, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !13447)
!13447 = !{!13448}
!13448 = !DILocalVariable(name: "__status", arg: 1, scope: !13446, file: !1572, line: 126, type: !103)
!13449 = !DILocation(line: 0, scope: !13446)
!13450 = !DILocation(line: 128, column: 5, scope: !13446)
!13451 = !DILocation(line: 129, column: 5, scope: !13446)
!13452 = distinct !{!13452, !13451, !13453}
!13453 = !DILocation(line: 131, column: 5, scope: !13446)
!13454 = distinct !DISubprogram(name: "_kill", scope: !1572, file: !1572, line: 135, type: !13455, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !13457)
!13455 = !DISubroutineType(types: !13456)
!13456 = !{!103, !103, !103}
!13457 = !{!13458, !13459}
!13458 = !DILocalVariable(name: "pid", arg: 1, scope: !13454, file: !1572, line: 135, type: !103)
!13459 = !DILocalVariable(name: "sig", arg: 2, scope: !13454, file: !1572, line: 135, type: !103)
!13460 = !DILocation(line: 0, scope: !13454)
!13461 = !DILocation(line: 137, column: 5, scope: !13454)
!13462 = !DILocation(line: 138, column: 5, scope: !13454)
!13463 = distinct !DISubprogram(name: "_getpid", scope: !1572, file: !1572, line: 142, type: !13464, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1760, retainedNodes: !2013)
!13464 = !DISubroutineType(types: !13465)
!13465 = !{!13466}
!13466 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !1576, line: 174, baseType: !13467)
!13467 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !102, line: 52, baseType: !103)
!13468 = !DILocation(line: 144, column: 5, scope: !13463)
!13469 = !DILocation(line: 145, column: 5, scope: !13463)
