; ModuleID = './build/sleep_manager_power_mode.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.flash_info_t = type { i8*, i8, i32, i32, i32, i8, i8, i8 }
%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.hal_gpt_context_t = type { i32, %struct.hal_gpt_callback_context, i8 }
%struct.hal_gpt_callback_context = type { void (i8*)*, i8* }
%struct.uart_context_t = type { i8, %struct.hal_uart_config_t, i8, %struct.hal_uart_callback_config_t, i8, %struct.hal_uart_dma_config_t }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.hal_uart_callback_config_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct._IOT_CM4_RGU_MEM_CTRL_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__va_list = type { i8* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.gpio_status = type { i32, i8, i8, i8 }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.__tm*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct.__tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !0
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !67
@.str = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/flash_sfc.c\00", align 1
@__func__.gpt_get_current_time = private unnamed_addr constant [21 x i8] c"gpt_get_current_time\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@sf_Mutex = internal unnamed_addr global i1 false, align 4, !dbg !80
@__func__.free_sf_lock = private unnamed_addr constant [13 x i8] c"free_sf_lock\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"SF_DAL_FLAG_BUSY()\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@suspend_time = dso_local local_unnamed_addr global i32 0, align 4, !dbg !72
@resume_suspend_on_ready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !74
@resume_suspend_on_checkready = dso_local local_unnamed_addr global i32 0, align 4, !dbg !76
@g_u4ClkCnt1ms = dso_local local_unnamed_addr global i32 0, align 4, !dbg !81
@.str.3 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.4 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/gpt.c\00", align 1
@GPTTimer.0 = internal unnamed_addr global void ()* null, align 4, !dbg !160
@GPTTimer.1 = internal unnamed_addr global void ()* null, align 4, !dbg !161
@ptr_lp_connsys_get_own_enable_int = dso_local local_unnamed_addr global i8 ()* null, align 4, !dbg !162
@ptr_lp_connsys_give_n9_own = dso_local local_unnamed_addr global i8 ()* null, align 4, !dbg !212
@ptr_connsys_get_ownership = dso_local local_unnamed_addr global i8 ()* null, align 4, !dbg !220
@hal_lp_wic_wakeup = internal unnamed_addr global i1 false, align 1, !dbg !227
@g_sfc_security_enable = dso_local local_unnamed_addr global i32 0, align 4, !dbg !228
@.str.9 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.1.10 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt7687/src/common/sfc.c\00", align 1
@switch.table.sfc_direct_read_setup = private unnamed_addr constant [3 x i32] [i32 16, i32 112, i32 113], align 4
@gSFC_max_data_size = dso_local local_unnamed_addr global i32 128, align 4, !dbg !245
@cmdlist_switchqpi_winbond = dso_local constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !276
@cmdlist_switchspi_winbond = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !281
@cmdlist_switchspiq_winbond = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !286
@cmdlist_suspend_winbond = dso_local global [4 x i8] c"\01\01u\00", align 1, !dbg !291
@cmdlist_resume_winbond = dso_local global [4 x i8] c"\01\01z\00", align 1, !dbg !294
@cmdlist_switchspiq_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !296
@cmdlist_switchqpi_mxic = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\01@\00", align 1, !dbg !301
@cmdlist_switchspi_mxic = dso_local constant [8 x i8] c"\01\01\06\01\02\01\00\00", align 1, !dbg !303
@cmdlist_switchspiq_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !305
@cmdlist_switchqpi_gd = dso_local local_unnamed_addr constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !307
@cmdlist_switchspi_gd = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\00\00", align 1, !dbg !309
@cmdlist_switchspi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\00\00", align 1, !dbg !311
@cmdlist_switchspiq_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !313
@cmdlist_switchqpi_gd25q32c = dso_local constant [8 x i8] c"\01\01\06\01\021\02\00", align 1, !dbg !315
@cmdlist_switchspi_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\01\00", align 1, !dbg !317
@cmdlist_switchspiq_micron = dso_local constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !319
@cmdlist_switchqpi_micron = dso_local local_unnamed_addr constant [8 x i8] c"\01\01\06\01\02\B1\00\00", align 1, !dbg !321
@cmdlist_flash_reset_spimode = dso_local constant [7 x i8] c"\01\01f\01\01\99\00", align 1, !dbg !323
@cmdlist_flash_reset_qpimode = dso_local constant [7 x i8] c"\03\01f\03\01\99\00", align 1, !dbg !328
@spi_chip_info = dso_local local_unnamed_addr global %struct.flash_info_t* null, align 4, !dbg !330
@gd_write_sr2_1 = dso_local local_unnamed_addr global i32 0, align 4, !dbg !332
@support_flash_id = dso_local local_unnamed_addr global i32 0, align 4, !dbg !334
@gucFlashSFCMode = dso_local local_unnamed_addr global i32 0, align 4, !dbg !70
@chips_data = internal constant [13 x %struct.flash_info_t] [%struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9.23, i32 0, i32 0), i8 -1, i32 -1, i32 4096, i32 256, i8 0, i8 0, i8 0 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), i8 -17, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8 -17, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8 -17, i32 1075052544, i32 4096, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i8 -62, i32 538312704, i32 16384, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8 -62, i32 538247168, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8 -62, i32 538181632, i32 4096, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8 -62, i32 588578816, i32 8192, i32 256, i8 56, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i32 0, i32 0), i8 -56, i32 1075183616, i32 16384, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i8 -56, i32 1075118080, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8 -56, i32 1108738048, i32 8192, i32 256, i8 50, i8 107, i8 -21 }, %struct.flash_info_t { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21.24, i32 0, i32 0), i8 32, i32 -1172832256, i32 65536, i32 256, i8 50, i8 107, i8 -21 }], align 4, !dbg !337
@sf_drvier_status = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !64
@__FUNCTION__.flash_check_device = private unnamed_addr constant [19 x i8] c"flash_check_device\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c" Check flash device Failed !! \0A\0D\00", align 1
@.str.1.22 = private unnamed_addr constant [31 x i8] c"spi device id: %x %x %x (%x)\0A\0D\00", align 1
@.str.2.25 = private unnamed_addr constant [37 x i8] c"ASSERT, __FILE__ = %s, __LINE__ = %u\00", align 1
@.str.3.26 = private unnamed_addr constant [57 x i8] c"../../../../../driver/chip/mt7687/src/common/spi_flash.c\00", align 1
@__FUNCTION__.flash_config = private unnamed_addr constant [13 x i8] c"flash_config\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"spi device id: %x %x %x (%x)\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"find flash: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Don't support flash: %s\0A\00", align 1
@__FUNCTION__.flash_init = private unnamed_addr constant [11 x i8] c"flash_init\00", align 1
@__func__.flash_wait_ready = private unnamed_addr constant [17 x i8] c"flash_wait_ready\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__FUNCTION__.flash_read_sr2 = private unnamed_addr constant [15 x i8] c"flash_read_sr2\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"flash_read_sr2: no init flash !\0A\00", align 1
@__func__.flash_write = private unnamed_addr constant [12 x i8] c"flash_write\00", align 1
@.str.9.23 = private unnamed_addr constant [10 x i8] c"DEF_FLASH\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"W25Q32JV\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"W25Q16DV\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"W25Q80DV\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"MX25L3233F\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"MX25L1635F\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"MX25V1635F\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"MX25V8035F\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"KH25V1635F\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"GD25Q32CSIG\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"GD25Q16CSIG\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"GD25VE32C\00", align 1
@.str.21.24 = private unnamed_addr constant [9 x i8] c"N25Q128A\00", align 1
@gXtalFreq = internal unnamed_addr global i32 0, align 4, !dbg !342
@gCpuFrequency = internal unnamed_addr global i32 0, align 4, !dbg !352
@switch.table.top_xtal_init = private unnamed_addr constant [8 x i32] [i32 20000000, i32 40000000, i32 26000000, i32 52000000, i32 40000000, i32 40000000, i32 40000000, i32 40000000], align 4
@switch.table.top_xtal_init.1 = private unnamed_addr constant [8 x i32] [i32 16, i32 512, i32 64, i32 1024, i32 512, i32 512, i32 512, i32 512], align 4
@.str.53 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.54 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@__const.halUART_SetFormat.fraction_L_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 16, i16 68, i16 146, i16 41, i16 170, i16 182, i16 219, i16 173, i16 255, i16 255], align 2
@__const.halUART_SetFormat.fraction_M_mapping = private unnamed_addr constant [11 x i16] [i16 0, i16 0, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 3], align 2
@gUartClkFreq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !354
@g_cache_status = dso_local global i8 0, align 1, !dbg !403
@.str.63 = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt7687/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1.64 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_cache_con = dso_local local_unnamed_addr global %union.CACHE_CON_Type zeroinitializer, align 4, !dbg !486
@g_cache_region_en = dso_local local_unnamed_addr global i32 0, align 4, !dbg !491
@g_cache_entry = dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type] zeroinitializer, align 4, !dbg !494
@nvic_function_table = dso_local local_unnamed_addr global [96 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !539
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.75 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@g_gpt_context = internal global [5 x %struct.hal_gpt_context_t] zeroinitializer, align 4, !dbg !631
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.82 = private unnamed_addr constant [18 x i8] c"Invalid port: %d.\00", align 1
@__FUNCTION__.hal_gpt_deinit = private unnamed_addr constant [15 x i8] c"hal_gpt_deinit\00", align 1
@.str.1.83 = private unnamed_addr constant [23 x i8] c"Should call  port: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_free_run_count = private unnamed_addr constant [27 x i8] c"hal_gpt_get_free_run_count\00", align 1
@.str.2.86 = private unnamed_addr constant [23 x i8] c"Invalid parameter: %d.\00", align 1
@__FUNCTION__.hal_gpt_get_running_status = private unnamed_addr constant [27 x i8] c"hal_gpt_get_running_status\00", align 1
@.str.3.87 = private unnamed_addr constant [45 x i8] c"Invalid hal_gpt_stop_timer to stop port: %d.\00", align 1
@__FUNCTION__.hal_gpt_register_callback = private unnamed_addr constant [26 x i8] c"hal_gpt_register_callback\00", align 1
@.str.4.88 = private unnamed_addr constant [51 x i8] c"Invalid port: %d. Only port 0 or 1 works as timer.\00", align 1
@__FUNCTION__.hal_gpt_start_timer_ms = private unnamed_addr constant [23 x i8] c"hal_gpt_start_timer_ms\00", align 1
@__FUNCTION__.hal_gpt_stop_timer = private unnamed_addr constant [19 x i8] c"hal_gpt_stop_timer\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !670
@g_uart_context_table = internal global [2 x %struct.uart_context_t] zeroinitializer, align 4, !dbg !726
@g_uart_send_lock_status = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !772
@g_uart_sleep_handler = internal unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !769
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.54, i32 0, i32 0)], align 4, !dbg !391
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [2 x i32] [i32 0, i32 5], align 4, !dbg !399
@hal_uart_map_receive_callback.func_tbl = internal unnamed_addr constant [2 x void ()*] [void ()* @hal_uart_receive_callback0, void ()* @hal_uart_receive_callback1], align 4, !dbg !775
@__const.hal_uart_translate_baudrate.baudrate_tbl = private unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4
@__const.hal_uart_translate_word_length.databit_tbl = private unnamed_addr constant [4 x i16] [i16 0, i16 1, i16 2, i16 3], align 2
@__const.hal_uart_translate_parity.parity_tbl = private unnamed_addr constant [5 x i16] [i16 0, i16 8, i16 24, i16 0, i16 0], align 2
@__const.hal_uart_translate_stopbit.stopbit_tbl = private unnamed_addr constant [3 x i16] [i16 0, i16 4, i16 4], align 2
@cmdlist_switchqpi_default = dso_local local_unnamed_addr constant [12 x i8] c"\01\01\06\01\03\01\00\02\01\018\00", align 1, !dbg !786
@cmdlist_switchspi_default = dso_local constant [4 x i8] c"\03\01\FF\00", align 1, !dbg !806
@cmdlist_switchspiq_default = dso_local constant [9 x i8] c"\01\01\06\01\03\01\00\02\00", align 1, !dbg !808
@customer_flash_info = dso_local local_unnamed_addr constant %struct.flash_info_t zeroinitializer, align 4, !dbg !810
@.str.101 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.102 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2.103 = private unnamed_addr constant [25 x i8] c"sleep manager example:\0D\0A\00", align 1
@.str.3.104 = private unnamed_addr constant [29 x i8] c"enter sleep mode for 3 sec\0D\0A\00", align 1
@.str.4.105 = private unnamed_addr constant [23 x i8] c"exit from sleep mode\0D\0A\00", align 1
@.str.5.106 = private unnamed_addr constant [36 x i8] c"enter legacy sleep mode for 3 sec\0D\0A\00", align 1
@.str.6.107 = private unnamed_addr constant [30 x i8] c"exit from legacy sleep mode\0D\0A\00", align 1
@SystemCoreClock = dso_local local_unnamed_addr global i32 40000000, align 4, !dbg !812
@System_Initialize_Done = internal global i32 0, align 4, !dbg !870
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !872
@end = external dso_local global i8, align 1
@.str.114 = private unnamed_addr constant [7 x i8] c"_exit\0A\00", align 1
@.str.1.115 = private unnamed_addr constant [10 x i8] c"_kill %d\0A\00", align 1
@.str.2.116 = private unnamed_addr constant [9 x i8] c"_getpid\0A\00", align 1
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:06:59 GMT +00:00\00", align 1, !dbg !1074
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !1079
@hw_verno_str = dso_local local_unnamed_addr global [15 x i8] c"linkit7697_hdk\00", align 1, !dbg !1085

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_get_current_time() local_unnamed_addr #0 section ".ramTEXT" !dbg !1367 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !1374
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #13, !dbg !1374
  call void @llvm.dbg.value(metadata i32 0, metadata !1371, metadata !DIExpression()), !dbg !1375
  store i32 0, i32* %1, align 4, !dbg !1376
  call void @llvm.dbg.value(metadata i32* %1, metadata !1371, metadata !DIExpression(DW_OP_deref)), !dbg !1375
  %3 = call i32 @hal_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #14, !dbg !1377
  call void @llvm.dbg.value(metadata i32 %3, metadata !1372, metadata !DIExpression()), !dbg !1375
  %4 = icmp eq i32 %3, 0, !dbg !1378
  br i1 %4, label %6, label %5, !dbg !1380

5:                                                ; preds = %0
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 92, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.gpt_get_current_time, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #15, !dbg !1381
  unreachable, !dbg !1381

6:                                                ; preds = %0
  %7 = load i32, i32* %1, align 4, !dbg !1383
  call void @llvm.dbg.value(metadata i32 %7, metadata !1371, metadata !DIExpression()), !dbg !1375
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #13, !dbg !1384
  ret i32 %7, !dbg !1385
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !1386 {
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !1388
  ret void, !dbg !1389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !1390 {
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !1391
  ret void, !dbg !1392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #4 section ".ramTEXT" !dbg !1393 {
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !1394
  ret void, !dbg !1395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #4 section ".ramTEXT" !dbg !1396 {
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !1397
  ret void, !dbg !1398
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_sf_lock() local_unnamed_addr #0 !dbg !1399 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !1404
  call void @llvm.dbg.value(metadata i32 %1, metadata !1403, metadata !DIExpression()), !dbg !1405
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !1406
  br i1 %2, label %4, label %3, !dbg !1408

3:                                                ; preds = %0
  store i1 true, i1* @sf_Mutex, align 4, !dbg !1409
  br label %4, !dbg !1411

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !1412
  tail call void @restore_interrupt_mask(i32 noundef %1) #14, !dbg !1412
  ret i32 %5, !dbg !1413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @free_sf_lock() local_unnamed_addr #0 !dbg !1414 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !1417
  call void @llvm.dbg.value(metadata i32 %1, metadata !1416, metadata !DIExpression()), !dbg !1418
  %2 = load i1, i1* @sf_Mutex, align 4, !dbg !1419
  br i1 %2, label %3, label %4, !dbg !1421

3:                                                ; preds = %0
  store i1 false, i1* @sf_Mutex, align 4, !dbg !1422
  tail call void @restore_interrupt_mask(i32 noundef %1) #14, !dbg !1424
  ret void, !dbg !1425

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #14, !dbg !1426
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.free_sf_lock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #15, !dbg !1428
  unreachable, !dbg !1428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_sf_lock() local_unnamed_addr #0 !dbg !1429 {
  br label %1, !dbg !1432

1:                                                ; preds = %1, %0
  %2 = tail call i32 @get_sf_lock() #16, !dbg !1433
  call void @llvm.dbg.value(metadata i32 %2, metadata !1431, metadata !DIExpression()), !dbg !1435
  %3 = icmp eq i32 %2, 0, !dbg !1436
  br i1 %3, label %4, label %1, !dbg !1437, !llvm.loop !1438

4:                                                ; preds = %1
  ret void, !dbg !1440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_sf_lock() local_unnamed_addr #0 !dbg !1441 {
  tail call void @free_sf_lock() #16, !dbg !1442
  ret void, !dbg !1443
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_config(i8 noundef zeroext %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !1444 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !1448, metadata !DIExpression()), !dbg !1451
  call void @llvm.dbg.value(metadata i32 0, metadata !1449, metadata !DIExpression()), !dbg !1451
  tail call fastcc void @sfc_pad_config() #16, !dbg !1452
  %2 = tail call i32 @gpt_get_current_time() #16, !dbg !1453
  %3 = tail call %struct.flash_info_t* @customer_flash_register() #14, !dbg !1454
  %4 = icmp eq %struct.flash_info_t* %3, null, !dbg !1456
  br i1 %4, label %6, label %5, !dbg !1457

5:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !1458
  br label %6, !dbg !1460

6:                                                ; preds = %5, %1
  %7 = tail call i32 @flash_check_device() #14, !dbg !1461
  ret i32 0, !dbg !1462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_pad_config() unnamed_addr #5 !dbg !1463 {
  call void @llvm.dbg.value(metadata i32 0, metadata !1465, metadata !DIExpression()), !dbg !1466
  %1 = load volatile i32, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !1467
  call void @llvm.dbg.value(metadata i32 %1, metadata !1465, metadata !DIExpression()), !dbg !1466
  %2 = or i32 %1, 117440688, !dbg !1468
  call void @llvm.dbg.value(metadata i32 %2, metadata !1465, metadata !DIExpression()), !dbg !1466
  store volatile i32 %2, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !1469
  ret void, !dbg !1470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_flash_direct_read(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !1471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1475, metadata !DIExpression()), !dbg !1478
  call void @llvm.dbg.value(metadata i8* %1, metadata !1476, metadata !DIExpression()), !dbg !1478
  call void @llvm.dbg.value(metadata i32 %2, metadata !1477, metadata !DIExpression()), !dbg !1478
  tail call void @retrieve_sf_lock() #16, !dbg !1479
  %4 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %0, i32 noundef %2) #14, !dbg !1480
  tail call void @release_sf_lock() #16, !dbg !1481
  ret void, !dbg !1482
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_read(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !1483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1487, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.value(metadata i32 %1, metadata !1488, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.value(metadata i8* %2, metadata !1489, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.value(metadata i32 0, metadata !1490, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.value(metadata i32 %1, metadata !1491, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.value(metadata i32 0, metadata !1492, metadata !DIExpression()), !dbg !1493
  tail call void @retrieve_sf_lock() #16, !dbg !1494
  call void @llvm.dbg.value(metadata i32 %1, metadata !1491, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.value(metadata i32 %0, metadata !1487, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.value(metadata i8* %2, metadata !1489, metadata !DIExpression()), !dbg !1493
  %4 = icmp ugt i32 %1, 127, !dbg !1495
  br i1 %4, label %5, label %19, !dbg !1496

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %1, %3 ]
  %7 = phi i32 [ %16, %14 ], [ %0, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !1491, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.value(metadata i32 %7, metadata !1487, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.value(metadata i8* %8, metadata !1489, metadata !DIExpression()), !dbg !1493
  call void @llvm.dbg.value(metadata i32 128, metadata !1492, metadata !DIExpression()), !dbg !1493
  %9 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !1497
  switch i32 %9, label %14 [
    i32 0, label %10
    i32 1, label %12
  ], !dbg !1500

10:                                               ; preds = %5
  %11 = tail call i32 @flash_read(i8* noundef %8, i32 noundef %7, i32 noundef 128) #14, !dbg !1501
  br label %14, !dbg !1503

12:                                               ; preds = %5
  %13 = tail call i32 @flash_fast_read(i8* noundef %8, i32 noundef %7, i32 noundef 128, i32 noundef 1) #14, !dbg !1504
  br label %14, !dbg !1507

14:                                               ; preds = %5, %12, %10
  %15 = getelementptr inbounds i8, i8* %8, i32 128, !dbg !1508
  call void @llvm.dbg.value(metadata i8* %15, metadata !1489, metadata !DIExpression()), !dbg !1493
  %16 = add i32 %7, 128, !dbg !1509
  call void @llvm.dbg.value(metadata i32 %16, metadata !1487, metadata !DIExpression()), !dbg !1493
  %17 = add i32 %6, -128, !dbg !1510
  call void @llvm.dbg.value(metadata i32 %17, metadata !1491, metadata !DIExpression()), !dbg !1493
  %18 = icmp ugt i32 %17, 127, !dbg !1495
  br i1 %18, label %5, label %19, !dbg !1496, !llvm.loop !1511

19:                                               ; preds = %14, %3
  %20 = phi i8* [ %2, %3 ], [ %15, %14 ]
  %21 = phi i32 [ %0, %3 ], [ %16, %14 ]
  %22 = phi i32 [ %1, %3 ], [ %17, %14 ], !dbg !1493
  %23 = load i32, i32* @gucFlashSFCMode, align 4, !dbg !1513
  switch i32 %23, label %28 [
    i32 0, label %24
    i32 1, label %26
  ], !dbg !1515

24:                                               ; preds = %19
  %25 = tail call i32 @flash_read(i8* noundef %20, i32 noundef %21, i32 noundef %22) #14, !dbg !1516
  br label %28, !dbg !1518

26:                                               ; preds = %19
  %27 = tail call i32 @flash_fast_read(i8* noundef %20, i32 noundef %21, i32 noundef %22, i32 noundef 1) #14, !dbg !1519
  br label %28, !dbg !1522

28:                                               ; preds = %19, %26, %24
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !1523
  tail call void @release_sf_lock() #16, !dbg !1524
  ret i32 0, !dbg !1525
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_write(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !1526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1532, metadata !DIExpression()), !dbg !1536
  call void @llvm.dbg.value(metadata i32 %1, metadata !1533, metadata !DIExpression()), !dbg !1536
  call void @llvm.dbg.value(metadata i8* %2, metadata !1534, metadata !DIExpression()), !dbg !1536
  call void @llvm.dbg.value(metadata i32 0, metadata !1535, metadata !DIExpression()), !dbg !1536
  tail call void @retrieve_sf_lock() #16, !dbg !1537
  %4 = tail call i32 @hal_cache_invalidate_all_cache_lines() #14, !dbg !1538
  %5 = tail call i32 @hal_cache_disable() #14, !dbg !1539
  %6 = tail call i32 @flash_write(i8* noundef %2, i32 noundef %0, i32 noundef %1) #14, !dbg !1540
  call void @llvm.dbg.value(metadata i32 %6, metadata !1535, metadata !DIExpression()), !dbg !1536
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !1541
  %7 = tail call i32 @hal_cache_enable() #14, !dbg !1542
  tail call void @release_sf_lock() #16, !dbg !1543
  ret i32 %6, !dbg !1544
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_sfc_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !1545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1549, metadata !DIExpression()), !dbg !1552
  call void @llvm.dbg.value(metadata i32 %1, metadata !1550, metadata !DIExpression()), !dbg !1552
  call void @llvm.dbg.value(metadata i32 0, metadata !1551, metadata !DIExpression()), !dbg !1552
  tail call void @retrieve_sf_lock() #16, !dbg !1553
  %3 = tail call i32 @hal_cache_invalidate_all_cache_lines() #14, !dbg !1554
  %4 = tail call i32 @hal_cache_disable() #14, !dbg !1555
  %5 = tail call i32 @flash_write_enable() #14, !dbg !1556
  %6 = tail call i32 @flash_unprotect() #14, !dbg !1557
  switch i32 %1, label %22 [
    i32 0, label %7
    i32 1, label %12
    i32 2, label %17
  ], !dbg !1558

7:                                                ; preds = %2
  %8 = and i32 %0, 4095, !dbg !1559
  %9 = icmp eq i32 %8, 0, !dbg !1563
  br i1 %9, label %10, label %22, !dbg !1564

10:                                               ; preds = %7
  %11 = tail call i32 @flash_erase_page(i32 noundef %0) #14, !dbg !1565
  call void @llvm.dbg.value(metadata i32 %11, metadata !1551, metadata !DIExpression()), !dbg !1552
  br label %22, !dbg !1566

12:                                               ; preds = %2
  %13 = and i32 %0, 32767, !dbg !1567
  %14 = icmp eq i32 %13, 0, !dbg !1571
  br i1 %14, label %15, label %22, !dbg !1572

15:                                               ; preds = %12
  %16 = tail call i32 @flash_erase_sector_32k(i32 noundef %0) #14, !dbg !1573
  call void @llvm.dbg.value(metadata i32 %16, metadata !1551, metadata !DIExpression()), !dbg !1552
  br label %22, !dbg !1574

17:                                               ; preds = %2
  %18 = and i32 %0, 65535, !dbg !1575
  %19 = icmp eq i32 %18, 0, !dbg !1579
  br i1 %19, label %20, label %22, !dbg !1580

20:                                               ; preds = %17
  %21 = tail call i32 @flash_erase_sector(i32 noundef %0) #14, !dbg !1581
  call void @llvm.dbg.value(metadata i32 %21, metadata !1551, metadata !DIExpression()), !dbg !1552
  br label %22, !dbg !1582

22:                                               ; preds = %10, %20, %15, %2, %17, %12, %7
  %23 = phi i32 [ -3, %7 ], [ -3, %12 ], [ -3, %17 ], [ %11, %10 ], [ %16, %15 ], [ %21, %20 ], [ 0, %2 ], !dbg !1552
  %24 = tail call i32 @hal_cache_enable() #14, !dbg !1552
  tail call void @release_sf_lock() #16, !dbg !1552
  ret i32 %23, !dbg !1583
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ramTEXT" !dbg !1584 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #13, !dbg !1588
  call void @llvm.dbg.value(metadata i8 0, metadata !1586, metadata !DIExpression()), !dbg !1589
  store i8 0, i8* %1, align 1, !dbg !1590
  call void @llvm.dbg.value(metadata i32 0, metadata !1587, metadata !DIExpression()), !dbg !1589
  %2 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !1591
  call void @llvm.dbg.value(metadata i32 %2, metadata !1587, metadata !DIExpression()), !dbg !1589
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !1592, !range !1594
  %4 = icmp ne i8 %3, 0, !dbg !1592
  %5 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %4, i1 true, i1 %6, !dbg !1595
  br i1 %7, label %27, label %8, !dbg !1595

8:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i8* %1, metadata !1586, metadata !DIExpression(DW_OP_deref)), !dbg !1589
  %9 = call i32 @flash_read_sr(i8* noundef nonnull %1) #14, !dbg !1596
  %10 = icmp slt i32 %9, 0, !dbg !1599
  br i1 %10, label %11, label %12, !dbg !1600

11:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 333, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #15, !dbg !1601
  unreachable, !dbg !1601

12:                                               ; preds = %8
  %13 = load i8, i8* %1, align 1, !dbg !1603
  call void @llvm.dbg.value(metadata i8 %13, metadata !1586, metadata !DIExpression()), !dbg !1589
  %14 = and i8 %13, 1, !dbg !1605
  %15 = icmp eq i8 %14, 0, !dbg !1606
  br i1 %15, label %26, label %16, !dbg !1607

16:                                               ; preds = %12
  call void @flash_suspend_Winbond() #14, !dbg !1608
  br label %17, !dbg !1610

17:                                               ; preds = %21, %16
  call void @llvm.dbg.value(metadata i8* %1, metadata !1586, metadata !DIExpression(DW_OP_deref)), !dbg !1589
  %18 = call i32 @flash_read_sr(i8* noundef nonnull %1) #14, !dbg !1611
  %19 = icmp slt i32 %18, 0, !dbg !1614
  br i1 %19, label %20, label %21, !dbg !1615

20:                                               ; preds = %17
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 344, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #15, !dbg !1616
  unreachable, !dbg !1616

21:                                               ; preds = %17
  %22 = load i8, i8* %1, align 1, !dbg !1618
  call void @llvm.dbg.value(metadata i8 %22, metadata !1586, metadata !DIExpression()), !dbg !1589
  %23 = and i8 %22, 1, !dbg !1620
  %24 = icmp eq i8 %23, 0, !dbg !1621
  br i1 %24, label %25, label %17, !dbg !1622, !llvm.loop !1623

25:                                               ; preds = %21
  call void @SF_DAL_FLAG_SUS_SET() #16, !dbg !1625
  br label %27, !dbg !1626

26:                                               ; preds = %12
  call void @SF_DAL_FLAG_BUSY_CLR() #16, !dbg !1627
  br label %27

27:                                               ; preds = %25, %26, %0
  call void @restore_interrupt_mask(i32 noundef %2) #14, !dbg !1629
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #13, !dbg !1630
  ret void, !dbg !1630
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !1631 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !1635, metadata !DIExpression()), !dbg !1646
  call void @llvm.dbg.value(metadata i32 %1, metadata !1636, metadata !DIExpression()), !dbg !1646
  call void @llvm.dbg.value(metadata i32 0, metadata !1638, metadata !DIExpression()), !dbg !1646
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #13, !dbg !1647
  call void @llvm.dbg.value(metadata i8 0, metadata !1641, metadata !DIExpression()), !dbg !1646
  store i8 0, i8* %3, align 1, !dbg !1648
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13, !dbg !1649
  call void @llvm.dbg.value(metadata i8 0, metadata !1642, metadata !DIExpression()), !dbg !1646
  store i8 0, i8* %4, align 1, !dbg !1650
  call void @llvm.dbg.value(metadata i8* %3, metadata !1641, metadata !DIExpression(DW_OP_deref)), !dbg !1646
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %3) #14, !dbg !1651
  %6 = icmp slt i32 %5, 0, !dbg !1653
  br i1 %6, label %7, label %8, !dbg !1654

7:                                                ; preds = %2
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 368, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #15, !dbg !1655
  unreachable, !dbg !1655

8:                                                ; preds = %2
  %9 = load i8, i8* %3, align 1, !dbg !1657
  call void @llvm.dbg.value(metadata i8 %9, metadata !1641, metadata !DIExpression()), !dbg !1646
  call void @llvm.dbg.value(metadata i8 %9, metadata !1639, metadata !DIExpression()), !dbg !1646
  call void @llvm.dbg.value(metadata i8* %4, metadata !1642, metadata !DIExpression(DW_OP_deref)), !dbg !1646
  %10 = call i32 @flash_read_sr2(i8* noundef nonnull %4) #14, !dbg !1659
  %11 = icmp slt i32 %10, 0, !dbg !1661
  br i1 %11, label %12, label %13, !dbg !1662

12:                                               ; preds = %8
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 374, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #15, !dbg !1663
  unreachable, !dbg !1663

13:                                               ; preds = %8
  %14 = load i8, i8* %4, align 1, !dbg !1665
  call void @llvm.dbg.value(metadata i8 %14, metadata !1642, metadata !DIExpression()), !dbg !1646
  call void @llvm.dbg.value(metadata i8 %14, metadata !1640, metadata !DIExpression()), !dbg !1646
  %15 = call i32 @save_and_set_interrupt_mask() #14, !dbg !1667
  call void @llvm.dbg.value(metadata i32 %15, metadata !1638, metadata !DIExpression()), !dbg !1646
  %16 = and i8 %9, 1, !dbg !1668
  %17 = icmp eq i8 %16, 0, !dbg !1669
  br i1 %17, label %18, label %46, !dbg !1670

18:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i8 12, metadata !1643, metadata !DIExpression()), !dbg !1671
  %19 = load i32, i32* @support_flash_id, align 4, !dbg !1672
  switch i32 %19, label %28 [
    i32 239, label %20
    i32 200, label %20
    i32 255, label %25
    i32 32, label %24
  ], !dbg !1674

20:                                               ; preds = %18, %18
  call void @llvm.dbg.value(metadata i8 -128, metadata !1643, metadata !DIExpression()), !dbg !1671
  %21 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !1675
  %22 = icmp eq i32 %21, 49, !dbg !1678
  %23 = select i1 %22, i32 132, i32 128, !dbg !1679
  br label %28, !dbg !1679

24:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i8 66, metadata !1643, metadata !DIExpression()), !dbg !1671
  br label %28, !dbg !1680

25:                                               ; preds = %18
  %26 = call zeroext i8 @customer_flash_suspend_bit() #14, !dbg !1684
  call void @llvm.dbg.value(metadata i8 %26, metadata !1643, metadata !DIExpression()), !dbg !1671
  %27 = zext i8 %26 to i32, !dbg !1687
  br label %28, !dbg !1687

28:                                               ; preds = %20, %18, %25, %24
  %29 = phi i32 [ 66, %24 ], [ %27, %25 ], [ %23, %20 ], [ 12, %18 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !1643, metadata !DIExpression()), !dbg !1671
  %30 = zext i8 %14 to i32, !dbg !1688
  %31 = and i32 %29, %30, !dbg !1690
  %32 = icmp eq i32 %31, 0, !dbg !1691
  br i1 %32, label %33, label %38, !dbg !1692

33:                                               ; preds = %28
  %34 = icmp ne i32 %29, 0, !dbg !1693
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %34, i1 true, i1 %36, !dbg !1694
  br i1 %37, label %43, label %38, !dbg !1694

38:                                               ; preds = %33, %28
  %39 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !1695, !range !1594
  %40 = icmp eq i8 %39, 0, !dbg !1695
  br i1 %40, label %41, label %42, !dbg !1695

41:                                               ; preds = %38
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 407, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #15, !dbg !1695
  unreachable, !dbg !1695

42:                                               ; preds = %38
  call void @flash_resume_Winbond() #14, !dbg !1697
  call void @llvm.dbg.value(metadata i32 -121, metadata !1637, metadata !DIExpression()), !dbg !1646
  br label %44, !dbg !1698

43:                                               ; preds = %33
  call void @SF_DAL_FLAG_BUSY_CLR() #16, !dbg !1699
  call void @llvm.dbg.value(metadata i32 0, metadata !1637, metadata !DIExpression()), !dbg !1646
  br label %44

44:                                               ; preds = %43, %42
  %45 = phi i32 [ 0, %43 ], [ -121, %42 ]
  call void @SF_DAL_FLAG_SUS_CLR() #16, !dbg !1701
  br label %46, !dbg !1702

46:                                               ; preds = %44, %13
  %47 = phi i32 [ -121, %13 ], [ %45, %44 ], !dbg !1703
  call void @llvm.dbg.value(metadata i32 %47, metadata !1637, metadata !DIExpression()), !dbg !1646
  call void @restore_interrupt_mask(i32 noundef %15) #14, !dbg !1702
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13, !dbg !1704
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #13, !dbg !1704
  ret i32 %47, !dbg !1705
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readnone %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !1706 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !1710, metadata !DIExpression()), !dbg !1720
  call void @llvm.dbg.value(metadata i32 %1, metadata !1711, metadata !DIExpression()), !dbg !1720
  call void @llvm.dbg.value(metadata i8 %2, metadata !1712, metadata !DIExpression()), !dbg !1720
  call void @llvm.dbg.value(metadata i32 0, metadata !1714, metadata !DIExpression()), !dbg !1720
  call void @llvm.dbg.value(metadata i16 0, metadata !1716, metadata !DIExpression()), !dbg !1720
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13, !dbg !1721
  call void @llvm.dbg.value(metadata i8 0, metadata !1719, metadata !DIExpression()), !dbg !1720
  store i8 0, i8* %4, align 1, !dbg !1722
  call void @llvm.dbg.value(metadata i8* %4, metadata !1719, metadata !DIExpression(DW_OP_deref)), !dbg !1720
  %5 = call i32 @flash_read_sr(i8* noundef nonnull %4) #14, !dbg !1723
  %6 = icmp slt i32 %5, 0, !dbg !1725
  br i1 %6, label %7, label %8, !dbg !1726

7:                                                ; preds = %3
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 449, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #15, !dbg !1727
  unreachable, !dbg !1727

8:                                                ; preds = %3
  %9 = load i8, i8* %4, align 1, !dbg !1729
  call void @llvm.dbg.value(metadata i8 %9, metadata !1719, metadata !DIExpression()), !dbg !1720
  call void @llvm.dbg.value(metadata i8 %9, metadata !1716, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1720
  %10 = call i32 @save_and_set_interrupt_mask() #14, !dbg !1731
  call void @llvm.dbg.value(metadata i32 %10, metadata !1713, metadata !DIExpression()), !dbg !1720
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !1732, !range !1594
  %12 = icmp eq i8 %11, 0, !dbg !1732
  br i1 %12, label %18, label %13, !dbg !1734

13:                                               ; preds = %8
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !1735, !range !1594
  %15 = icmp eq i8 %14, 0, !dbg !1735
  br i1 %15, label %16, label %17, !dbg !1735

16:                                               ; preds = %13
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0)) #15, !dbg !1735
  unreachable, !dbg !1735

17:                                               ; preds = %13
  call void @flash_resume_Winbond() #14, !dbg !1737
  call void @SF_DAL_FLAG_SUS_CLR() #16, !dbg !1738
  call void @restore_interrupt_mask(i32 noundef %10) #14, !dbg !1739
  br label %26, !dbg !1740

18:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i8 %9, metadata !1716, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1720
  %19 = and i8 %9, 1, !dbg !1741
  %20 = icmp eq i8 %19, 0, !dbg !1743
  br i1 %20, label %21, label %26, !dbg !1744

21:                                               ; preds = %18
  call void @SF_DAL_FLAG_BUSY_CLR() #16, !dbg !1745
  %22 = inttoptr i32 %1 to i8*, !dbg !1747
  %23 = load volatile i8, i8* %22, align 1, !dbg !1748
  call void @llvm.dbg.value(metadata i8 %23, metadata !1715, metadata !DIExpression()), !dbg !1720
  %24 = icmp eq i8 %23, %2, !dbg !1749
  %25 = select i1 %24, i32 1, i32 -1
  br label %26

26:                                               ; preds = %21, %18, %17
  %27 = phi i32 [ 0, %17 ], [ 0, %18 ], [ %25, %21 ], !dbg !1720
  call void @llvm.dbg.value(metadata i32 %27, metadata !1714, metadata !DIExpression()), !dbg !1720
  call void @restore_interrupt_mask(i32 noundef %10) #14, !dbg !1751
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13, !dbg !1752
  ret i32 %27, !dbg !1753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #0 !dbg !1754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1758, metadata !DIExpression()), !dbg !1761
  call void @llvm.dbg.value(metadata i32 %1, metadata !1759, metadata !DIExpression()), !dbg !1761
  call void @llvm.dbg.value(metadata i1 %2, metadata !1760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1761
  %4 = icmp ugt i32 %0, 1, !dbg !1762
  br i1 %4, label %5, label %8, !dbg !1764

5:                                                ; preds = %3
  %6 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 75) #14, !dbg !1765
  br label %7, !dbg !1765

7:                                                ; preds = %5, %7
  br label %7, !dbg !1765, !llvm.loop !1767

8:                                                ; preds = %3
  switch i32 %0, label %21 [
    i32 0, label %9
    i32 1, label %15
  ], !dbg !1768

9:                                                ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824300 to i32*), align 4, !dbg !1769
  %10 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1772
  br i1 %2, label %11, label %13, !dbg !1774

11:                                               ; preds = %9
  %12 = or i32 %10, 2, !dbg !1775
  store volatile i32 %12, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1775
  br label %21, !dbg !1777

13:                                               ; preds = %9
  %14 = and i32 %10, -3, !dbg !1778
  store volatile i32 %14, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1778
  br label %21

15:                                               ; preds = %8
  store volatile i32 %1, i32* inttoptr (i32 -2096824284 to i32*), align 4, !dbg !1780
  %16 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1783
  br i1 %2, label %17, label %19, !dbg !1785

17:                                               ; preds = %15
  %18 = or i32 %16, 2, !dbg !1786
  store volatile i32 %18, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1786
  br label %21, !dbg !1788

19:                                               ; preds = %15
  %20 = and i32 %16, -3, !dbg !1789
  store volatile i32 %20, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1789
  br label %21

21:                                               ; preds = %8, %19, %17, %11, %13
  ret void, !dbg !1791
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !1792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1796, metadata !DIExpression()), !dbg !1797
  switch i32 %0, label %2 [
    i32 0, label %5
    i32 1, label %9
    i32 4, label %13
  ], !dbg !1798

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 96) #14, !dbg !1799
  br label %4, !dbg !1799

4:                                                ; preds = %2, %4
  br label %4, !dbg !1799, !llvm.loop !1802

5:                                                ; preds = %1
  %6 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1803
  %7 = or i32 %6, 1, !dbg !1803
  store volatile i32 %7, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1803
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #14, !dbg !1806
  br label %16, !dbg !1807

9:                                                ; preds = %1
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1808
  %11 = or i32 %10, 1, !dbg !1808
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1808
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #14, !dbg !1811
  br label %16, !dbg !1812

13:                                               ; preds = %1
  %14 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1813
  %15 = or i32 %14, 1, !dbg !1813
  store volatile i32 %15, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1813
  br label %16, !dbg !1816

16:                                               ; preds = %9, %13, %5
  ret void, !dbg !1817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPT_Stop(i32 noundef %0) local_unnamed_addr #5 !dbg !1818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1820, metadata !DIExpression()), !dbg !1821
  switch i32 %0, label %18 [
    i32 0, label %2
    i32 1, label %7
    i32 2, label %12
    i32 4, label %15
  ], !dbg !1822

2:                                                ; preds = %1
  %3 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1823
  %4 = and i32 %3, -2, !dbg !1823
  store volatile i32 %4, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1823
  %5 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1826
  %6 = and i32 %5, -2, !dbg !1826
  store volatile i32 %6, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1826
  store volatile i32 1, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !1827
  br label %18, !dbg !1828

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1829
  %9 = and i32 %8, -3, !dbg !1829
  store volatile i32 %9, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1829
  %10 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1832
  %11 = and i32 %10, -2, !dbg !1832
  store volatile i32 %11, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1832
  store volatile i32 2, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !1833
  br label %18, !dbg !1834

12:                                               ; preds = %1
  %13 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !1835
  %14 = and i32 %13, -2, !dbg !1835
  store volatile i32 %14, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !1835
  br label %18, !dbg !1838

15:                                               ; preds = %1
  %16 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1839
  %17 = and i32 %16, -2, !dbg !1839
  store volatile i32 %17, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1839
  br label %18, !dbg !1842

18:                                               ; preds = %1, %7, %15, %12, %2
  ret void, !dbg !1843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_INT_Handler(i32 %0) #0 !dbg !1844 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !1846, metadata !DIExpression()), !dbg !1848
  call void @llvm.dbg.value(metadata i32 undef, metadata !1846, metadata !DIExpression()), !dbg !1848
  %2 = load volatile i32, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !1849
  %3 = and i32 %2, 65535, !dbg !1850
  call void @llvm.dbg.value(metadata i32 %2, metadata !1847, metadata !DIExpression()), !dbg !1848
  store volatile i32 %3, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !1851
  %4 = and i32 %2, 1, !dbg !1852
  %5 = icmp eq i32 %4, 0, !dbg !1852
  br i1 %5, label %6, label %9, !dbg !1854

6:                                                ; preds = %1
  %7 = and i32 %2, 2, !dbg !1855
  %8 = icmp eq i32 %7, 0, !dbg !1855
  br i1 %8, label %13, label %9, !dbg !1857

9:                                                ; preds = %6, %1
  %10 = phi i32 [ 0, %1 ], [ 1, %6 ]
  %11 = phi void ()** [ @GPTTimer.0, %1 ], [ @GPTTimer.1, %6 ]
  tail call void @clear_TMR_INT_status_bit(i32 noundef %10) #14, !dbg !1858
  %12 = load void ()*, void ()** %11, align 4, !dbg !1858
  tail call void %12() #14, !dbg !1858
  br label %13, !dbg !1859

13:                                               ; preds = %9, %6
  ret void, !dbg !1859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPT_init(i32 noundef %0, i32 noundef %1, void ()* noundef %2) local_unnamed_addr #0 !dbg !1860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1864, metadata !DIExpression()), !dbg !1867
  call void @llvm.dbg.value(metadata i32 %1, metadata !1865, metadata !DIExpression()), !dbg !1867
  call void @llvm.dbg.value(metadata void ()* %2, metadata !1866, metadata !DIExpression()), !dbg !1867
  switch i32 %0, label %4 [
    i32 4, label %7
    i32 2, label %7
    i32 1, label %7
    i32 0, label %7
  ], !dbg !1868

4:                                                ; preds = %3
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 149) #14, !dbg !1869
  br label %6, !dbg !1869

6:                                                ; preds = %4, %6
  br label %6, !dbg !1869, !llvm.loop !1872

7:                                                ; preds = %3, %3, %3, %3
  %8 = icmp ult i32 %0, 2, !dbg !1873
  br i1 %8, label %9, label %13, !dbg !1874

9:                                                ; preds = %7
  %10 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 24, void (i32)* noundef nonnull @GPT_INT_Handler) #14, !dbg !1876
  %11 = tail call i32 @hal_nvic_set_priority(i32 noundef 24, i32 noundef 5) #14, !dbg !1878
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 24) #14, !dbg !1879
  br label %13, !dbg !1880

13:                                               ; preds = %7, %9
  switch i32 %0, label %36 [
    i32 0, label %14
    i32 1, label %20
    i32 2, label %26
    i32 4, label %31
  ], !dbg !1881

14:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.0, align 4, !dbg !1882
  %15 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1885
  %16 = or i32 %15, 1, !dbg !1885
  store volatile i32 %16, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1885
  %17 = shl i32 %1, 2, !dbg !1886
  %18 = load volatile i32, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1887
  %19 = or i32 %18, %17, !dbg !1887
  store volatile i32 %19, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !1887
  br label %36, !dbg !1888

20:                                               ; preds = %13
  store void ()* %2, void ()** @GPTTimer.1, align 4, !dbg !1889
  %21 = load volatile i32, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1892
  %22 = or i32 %21, 2, !dbg !1892
  store volatile i32 %22, i32* inttoptr (i32 -2096824316 to i32*), align 4, !dbg !1892
  %23 = shl i32 %1, 2, !dbg !1893
  %24 = load volatile i32, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1894
  %25 = or i32 %24, %23, !dbg !1894
  store volatile i32 %25, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !1894
  br label %36, !dbg !1895

26:                                               ; preds = %13
  %27 = shl i32 %1, 1, !dbg !1896
  %28 = or i32 %27, 1, !dbg !1899
  %29 = load volatile i32, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !1900
  %30 = or i32 %29, %28, !dbg !1900
  store volatile i32 %30, i32* inttoptr (i32 -2096824272 to i32*), align 16, !dbg !1900
  br label %36, !dbg !1901

31:                                               ; preds = %13
  %32 = shl i32 %1, 1, !dbg !1902
  %33 = or i32 %32, 1, !dbg !1905
  %34 = load volatile i32, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1906
  %35 = or i32 %34, %33, !dbg !1906
  store volatile i32 %35, i32* inttoptr (i32 -2096824224 to i32*), align 32, !dbg !1906
  store volatile i32 0, i32* inttoptr (i32 -2096824220 to i32*), align 4, !dbg !1907
  br label %36, !dbg !1908

36:                                               ; preds = %13, %20, %31, %26, %14
  ret void, !dbg !1909
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GPT_return_current_count(i32 noundef %0) local_unnamed_addr #0 !dbg !1910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1914, metadata !DIExpression()), !dbg !1916
  switch i32 %0, label %2 [
    i32 0, label %8
    i32 1, label %5
    i32 2, label %6
    i32 4, label %7
  ], !dbg !1917

2:                                                ; preds = %1
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.4, i32 0, i32 0), i32 noundef 177) #14, !dbg !1918
  br label %4, !dbg !1918

4:                                                ; preds = %4, %2
  br label %4, !dbg !1918, !llvm.loop !1921

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !1915, metadata !DIExpression()), !dbg !1916
  br label %8, !dbg !1922

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !1915, metadata !DIExpression()), !dbg !1916
  br label %8, !dbg !1926

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !1915, metadata !DIExpression()), !dbg !1916
  br label %8, !dbg !1929

8:                                                ; preds = %1, %5, %7, %6
  %9 = phi i32* [ inttoptr (i32 -2096824252 to i32*), %5 ], [ inttoptr (i32 -2096824268 to i32*), %6 ], [ inttoptr (i32 -2096824216 to i32*), %7 ], [ inttoptr (i32 -2096824256 to i32*), %1 ]
  %10 = load volatile i32, i32* %9, align 4, !dbg !1932
  call void @llvm.dbg.value(metadata i32 %10, metadata !1915, metadata !DIExpression()), !dbg !1916
  ret i32 %10, !dbg !1933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT2Init() local_unnamed_addr #0 !dbg !1934 {
  tail call void @GPT_init(i32 noundef 2, i32 noundef 1, void ()* noundef null) #16, !dbg !1935
  ret void, !dbg !1936
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CM4_GPT4Init() local_unnamed_addr #0 !dbg !1937 {
  tail call void @GPT_init(i32 noundef 4, i32 noundef 1, void ()* noundef null) #16, !dbg !1938
  ret void, !dbg !1939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_ConfDirection(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !1940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1944, metadata !DIExpression()), !dbg !1949
  call void @llvm.dbg.value(metadata i8 %1, metadata !1945, metadata !DIExpression()), !dbg !1949
  %3 = lshr i32 %0, 5, !dbg !1950
  call void @llvm.dbg.value(metadata i32 %3, metadata !1946, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !1949
  %4 = trunc i32 %0 to i16, !dbg !1951
  %5 = and i16 %4, 31, !dbg !1951
  call void @llvm.dbg.value(metadata i16 %4, metadata !1948, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !1949
  %6 = trunc i32 %3 to i16, !dbg !1952
  switch i16 %6, label %97 [
    i16 0, label %7
    i16 1, label %70
  ], !dbg !1952

7:                                                ; preds = %2
  %8 = icmp eq i8 %1, 1, !dbg !1953
  %9 = zext i16 %5 to i32, !dbg !1956
  %10 = icmp ult i16 %5, 27, !dbg !1956
  br i1 %8, label %11, label %46, !dbg !1957

11:                                               ; preds = %7
  br i1 %10, label %12, label %17, !dbg !1958

12:                                               ; preds = %11
  %13 = shl nuw i32 1, %9, !dbg !1960
  %14 = xor i32 %13, -1, !dbg !1963
  %15 = load volatile i32, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !1964
  %16 = and i32 %15, %14, !dbg !1964
  store volatile i32 %16, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !1964
  br label %44, !dbg !1965

17:                                               ; preds = %11
  %18 = trunc i32 %0 to i5, !dbg !1966
  switch i5 %18, label %39 [
    i5 -5, label %19
    i5 -4, label %24
    i5 -3, label %29
    i5 -2, label %34
  ], !dbg !1966

19:                                               ; preds = %17
  %20 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1967
  %21 = and i32 %20, -3, !dbg !1967
  store volatile i32 %21, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1967
  %22 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1970
  %23 = or i32 %22, 2048, !dbg !1970
  store volatile i32 %23, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !1970
  br label %44, !dbg !1971

24:                                               ; preds = %17
  %25 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1972
  %26 = and i32 %25, -3, !dbg !1972
  store volatile i32 %26, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1972
  %27 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1975
  %28 = or i32 %27, 2048, !dbg !1975
  store volatile i32 %28, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !1975
  br label %44, !dbg !1976

29:                                               ; preds = %17
  %30 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1977
  %31 = and i32 %30, -3, !dbg !1977
  store volatile i32 %31, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1977
  %32 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1980
  %33 = or i32 %32, 2048, !dbg !1980
  store volatile i32 %33, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !1980
  br label %44, !dbg !1981

34:                                               ; preds = %17
  %35 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1982
  %36 = and i32 %35, -3, !dbg !1982
  store volatile i32 %36, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1982
  %37 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1985
  %38 = or i32 %37, 2048, !dbg !1985
  store volatile i32 %38, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !1985
  br label %44, !dbg !1986

39:                                               ; preds = %17
  %40 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1987
  %41 = and i32 %40, -3, !dbg !1987
  store volatile i32 %41, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1987
  %42 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1990
  %43 = or i32 %42, 2048, !dbg !1990
  store volatile i32 %43, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !1990
  br label %44, !dbg !1991

44:                                               ; preds = %19, %29, %39, %34, %24, %12
  %45 = shl nuw i32 1, %9, !dbg !1992
  store volatile i32 %45, i32* inttoptr (i32 -2097106796 to i32*), align 4, !dbg !1992
  br label %97, !dbg !1993

46:                                               ; preds = %7
  br i1 %10, label %47, label %51, !dbg !1994

47:                                               ; preds = %46
  %48 = shl nuw i32 1, %9, !dbg !1996
  %49 = load volatile i32, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !1999
  %50 = or i32 %49, %48, !dbg !1999
  store volatile i32 %50, i32* inttoptr (i32 -2097106688 to i32*), align 256, !dbg !1999
  br label %68, !dbg !2000

51:                                               ; preds = %46
  %52 = trunc i32 %0 to i5, !dbg !2001
  switch i5 %52, label %65 [
    i5 -5, label %53
    i5 -4, label %56
    i5 -3, label %59
    i5 -2, label %62
  ], !dbg !2001

53:                                               ; preds = %51
  %54 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2002
  %55 = or i32 %54, 2050, !dbg !2002
  store volatile i32 %55, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2002
  br label %68, !dbg !2005

56:                                               ; preds = %51
  %57 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2006
  %58 = or i32 %57, 2050, !dbg !2006
  store volatile i32 %58, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2006
  br label %68, !dbg !2009

59:                                               ; preds = %51
  %60 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2010
  %61 = or i32 %60, 2050, !dbg !2010
  store volatile i32 %61, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2010
  br label %68, !dbg !2013

62:                                               ; preds = %51
  %63 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2014
  %64 = or i32 %63, 2050, !dbg !2014
  store volatile i32 %64, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2014
  br label %68, !dbg !2017

65:                                               ; preds = %51
  %66 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2018
  %67 = or i32 %66, 2050, !dbg !2018
  store volatile i32 %67, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2018
  br label %68, !dbg !2021

68:                                               ; preds = %53, %59, %65, %62, %56, %47
  %69 = shl nuw i32 1, %9, !dbg !2022
  store volatile i32 %69, i32* inttoptr (i32 -2097106792 to i32*), align 8, !dbg !2022
  br label %97

70:                                               ; preds = %2
  %71 = icmp eq i8 %1, 1, !dbg !2023
  %72 = zext i16 %5 to i32, !dbg !2025
  %73 = icmp eq i16 %5, 0, !dbg !2025
  br i1 %71, label %74, label %87, !dbg !2026

74:                                               ; preds = %70
  br i1 %73, label %80, label %75, !dbg !2027

75:                                               ; preds = %74
  %76 = shl nuw i32 1, %72, !dbg !2029
  %77 = xor i32 %76, -1, !dbg !2032
  %78 = load volatile i32, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !2033
  %79 = and i32 %78, %77, !dbg !2033
  store volatile i32 %79, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !2033
  br label %85, !dbg !2034

80:                                               ; preds = %74
  %81 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2035
  %82 = and i32 %81, -3, !dbg !2035
  store volatile i32 %82, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2035
  %83 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2037
  %84 = or i32 %83, 2048, !dbg !2037
  store volatile i32 %84, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2037
  br label %85

85:                                               ; preds = %80, %75
  %86 = phi i32 [ 1, %80 ], [ %76, %75 ], !dbg !2038
  store volatile i32 %86, i32* inttoptr (i32 -2097106780 to i32*), align 4, !dbg !2038
  br label %97, !dbg !2039

87:                                               ; preds = %70
  br i1 %73, label %92, label %88, !dbg !2040

88:                                               ; preds = %87
  %89 = shl nuw i32 1, %72, !dbg !2042
  %90 = load volatile i32, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !2045
  %91 = or i32 %90, %89, !dbg !2045
  store volatile i32 %91, i32* inttoptr (i32 -2097106684 to i32*), align 4, !dbg !2045
  br label %95, !dbg !2046

92:                                               ; preds = %87
  %93 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2047
  %94 = or i32 %93, 2050, !dbg !2047
  store volatile i32 %94, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2047
  br label %95

95:                                               ; preds = %92, %88
  %96 = phi i32 [ 1, %92 ], [ %89, %88 ], !dbg !2049
  store volatile i32 %96, i32* inttoptr (i32 -2097106776 to i32*), align 8, !dbg !2049
  br label %97

97:                                               ; preds = %68, %44, %95, %85, %2
  %98 = phi i32 [ -1, %2 ], [ 0, %85 ], [ 0, %95 ], [ 0, %44 ], [ 0, %68 ], !dbg !1949
  ret i32 %98, !dbg !2050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPO_Write(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !2051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2053, metadata !DIExpression()), !dbg !2057
  call void @llvm.dbg.value(metadata i8 %1, metadata !2054, metadata !DIExpression()), !dbg !2057
  %3 = lshr i32 %0, 5, !dbg !2058
  call void @llvm.dbg.value(metadata i32 %3, metadata !2055, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2057
  %4 = trunc i32 %0 to i16, !dbg !2059
  %5 = and i16 %4, 31, !dbg !2059
  call void @llvm.dbg.value(metadata i16 %5, metadata !2056, metadata !DIExpression()), !dbg !2057
  %6 = trunc i32 %3 to i16, !dbg !2060
  switch i16 %6, label %19 [
    i16 0, label %7
    i16 1, label %13
  ], !dbg !2060

7:                                                ; preds = %2
  %8 = icmp eq i8 %1, 0, !dbg !2061
  %9 = zext i16 %5 to i32, !dbg !2064
  %10 = shl nuw i32 1, %9, !dbg !2064
  br i1 %8, label %12, label %11, !dbg !2065

11:                                               ; preds = %7
  store volatile i32 %10, i32* inttoptr (i32 -2097106844 to i32*), align 4, !dbg !2066
  br label %19, !dbg !2068

12:                                               ; preds = %7
  store volatile i32 %10, i32* inttoptr (i32 -2097106840 to i32*), align 8, !dbg !2069
  br label %19

13:                                               ; preds = %2
  %14 = icmp eq i8 %1, 0, !dbg !2071
  %15 = zext i16 %5 to i32, !dbg !2073
  %16 = shl nuw i32 1, %15, !dbg !2073
  br i1 %14, label %18, label %17, !dbg !2074

17:                                               ; preds = %13
  store volatile i32 %16, i32* inttoptr (i32 -2097106828 to i32*), align 4, !dbg !2075
  br label %19, !dbg !2077

18:                                               ; preds = %13
  store volatile i32 %16, i32* inttoptr (i32 -2097106824 to i32*), align 8, !dbg !2078
  br label %19

19:                                               ; preds = %12, %11, %18, %17, %2
  %20 = phi i32 [ -1, %2 ], [ 0, %17 ], [ 0, %18 ], [ 0, %11 ], [ 0, %12 ], !dbg !2057
  ret i32 %20, !dbg !2080
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i8 @halgetGPIO_DOUT(i32 noundef %0) local_unnamed_addr #7 !dbg !2081 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2085, metadata !DIExpression()), !dbg !2089
  %2 = lshr i32 %0, 5, !dbg !2090
  call void @llvm.dbg.value(metadata i32 %2, metadata !2086, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2089
  %3 = and i32 %0, 31, !dbg !2091
  call void @llvm.dbg.value(metadata i32 %0, metadata !2087, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2089
  call void @llvm.dbg.value(metadata i8 0, metadata !2088, metadata !DIExpression()), !dbg !2089
  %4 = trunc i32 %2 to i16, !dbg !2092
  switch i16 %4, label %12 [
    i16 0, label %6
    i16 1, label %5
  ], !dbg !2092

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %9, metadata !2088, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !2089
  br label %6, !dbg !2093

6:                                                ; preds = %1, %5
  %7 = phi i32* [ inttoptr (i32 -2097106832 to i32*), %5 ], [ inttoptr (i32 -2097106848 to i32*), %1 ]
  %8 = load volatile i32, i32* %7, align 16, !dbg !2095
  %9 = lshr i32 %8, %3, !dbg !2095
  %10 = trunc i32 %9 to i8, !dbg !2095
  %11 = and i8 %10, 1, !dbg !2095
  call void @llvm.dbg.value(metadata i8 %11, metadata !2088, metadata !DIExpression()), !dbg !2089
  br label %12, !dbg !2096

12:                                               ; preds = %1, %6
  %13 = phi i8 [ %11, %6 ], [ 0, %1 ], !dbg !2089
  ret i8 %13, !dbg !2097
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i8 @halgetGPIO_DIN(i32 noundef %0) local_unnamed_addr #7 !dbg !2098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2100, metadata !DIExpression()), !dbg !2104
  %2 = lshr i32 %0, 5, !dbg !2105
  call void @llvm.dbg.value(metadata i32 %2, metadata !2101, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2104
  %3 = and i32 %0, 31, !dbg !2106
  call void @llvm.dbg.value(metadata i32 %0, metadata !2102, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2104
  call void @llvm.dbg.value(metadata i8 0, metadata !2103, metadata !DIExpression()), !dbg !2104
  %4 = trunc i32 %2 to i16, !dbg !2107
  switch i16 %4, label %12 [
    i16 0, label %6
    i16 1, label %5
  ], !dbg !2107

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %9, metadata !2103, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !2104
  br label %6, !dbg !2108

6:                                                ; preds = %1, %5
  %7 = phi i32* [ inttoptr (i32 -2097106748 to i32*), %5 ], [ inttoptr (i32 -2097106752 to i32*), %1 ]
  %8 = load volatile i32, i32* %7, align 4, !dbg !2110
  %9 = lshr i32 %8, %3, !dbg !2110
  %10 = trunc i32 %9 to i8, !dbg !2110
  %11 = and i8 %10, 1, !dbg !2110
  call void @llvm.dbg.value(metadata i8 %11, metadata !2103, metadata !DIExpression()), !dbg !2104
  br label %12, !dbg !2111

12:                                               ; preds = %1, %6
  %13 = phi i8 [ %11, %6 ], [ 0, %1 ], !dbg !2104
  ret i8 %13, !dbg !2112
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i8 @halgetGPIO_OutEnable(i32 noundef %0) local_unnamed_addr #7 !dbg !2113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2115, metadata !DIExpression()), !dbg !2119
  %2 = lshr i32 %0, 5, !dbg !2120
  call void @llvm.dbg.value(metadata i32 %2, metadata !2116, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2119
  %3 = and i32 %0, 31, !dbg !2121
  call void @llvm.dbg.value(metadata i32 %0, metadata !2117, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2119
  call void @llvm.dbg.value(metadata i8 0, metadata !2118, metadata !DIExpression()), !dbg !2119
  %4 = trunc i32 %2 to i16, !dbg !2122
  switch i16 %4, label %12 [
    i16 0, label %6
    i16 1, label %5
  ], !dbg !2122

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %9, metadata !2118, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !2119
  br label %6, !dbg !2123

6:                                                ; preds = %1, %5
  %7 = phi i32* [ inttoptr (i32 -2097106784 to i32*), %5 ], [ inttoptr (i32 -2097106800 to i32*), %1 ]
  %8 = load volatile i32, i32* %7, align 16, !dbg !2125
  %9 = lshr i32 %8, %3, !dbg !2125
  %10 = trunc i32 %9 to i8, !dbg !2125
  %11 = and i8 %10, 1, !dbg !2125
  call void @llvm.dbg.value(metadata i8 %11, metadata !2118, metadata !DIExpression()), !dbg !2119
  br label %12, !dbg !2126

12:                                               ; preds = %1, %6
  %13 = phi i8 [ %11, %6 ], [ 0, %1 ], !dbg !2119
  ret i8 %13, !dbg !2127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullUp_SET(i32 noundef %0) local_unnamed_addr #5 !dbg !2128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2132, metadata !DIExpression()), !dbg !2135
  %2 = lshr i32 %0, 5, !dbg !2136
  call void @llvm.dbg.value(metadata i32 %2, metadata !2133, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2135
  %3 = trunc i32 %0 to i16, !dbg !2137
  %4 = and i16 %3, 31, !dbg !2137
  call void @llvm.dbg.value(metadata i16 %3, metadata !2134, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2135
  %5 = tail call i32 @halGPIO_PullDown_RESET(i32 noundef %0) #16, !dbg !2138
  %6 = trunc i32 %2 to i16, !dbg !2139
  switch i16 %6, label %49 [
    i16 0, label %7
    i16 1, label %39
  ], !dbg !2139

7:                                                ; preds = %1
  %8 = icmp ult i16 %4, 27, !dbg !2140
  br i1 %8, label %9, label %12, !dbg !2143

9:                                                ; preds = %7
  %10 = zext i16 %4 to i32, !dbg !2144
  %11 = shl nuw nsw i32 1, %10, !dbg !2145
  store volatile i32 %11, i32* inttoptr (i32 -2097106940 to i32*), align 4, !dbg !2145
  br label %49, !dbg !2147

12:                                               ; preds = %7
  %13 = trunc i32 %0 to i5, !dbg !2148
  switch i5 %13, label %34 [
    i5 -5, label %14
    i5 -4, label %19
    i5 -3, label %24
    i5 -2, label %29
  ], !dbg !2148

14:                                               ; preds = %12
  %15 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2149
  %16 = and i32 %15, -29, !dbg !2149
  store volatile i32 %16, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2149
  %17 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2152
  %18 = or i32 %17, 2052, !dbg !2152
  store volatile i32 %18, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2152
  br label %49, !dbg !2153

19:                                               ; preds = %12
  %20 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2154
  %21 = and i32 %20, -29, !dbg !2154
  store volatile i32 %21, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2154
  %22 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2157
  %23 = or i32 %22, 2052, !dbg !2157
  store volatile i32 %23, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2157
  br label %49, !dbg !2158

24:                                               ; preds = %12
  %25 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2159
  %26 = and i32 %25, -29, !dbg !2159
  store volatile i32 %26, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2159
  %27 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2162
  %28 = or i32 %27, 2052, !dbg !2162
  store volatile i32 %28, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2162
  br label %49, !dbg !2163

29:                                               ; preds = %12
  %30 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2164
  %31 = and i32 %30, -29, !dbg !2164
  store volatile i32 %31, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2164
  %32 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2167
  %33 = or i32 %32, 2052, !dbg !2167
  store volatile i32 %33, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2167
  br label %49, !dbg !2168

34:                                               ; preds = %12
  %35 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2169
  %36 = and i32 %35, -29, !dbg !2169
  store volatile i32 %36, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2169
  %37 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2172
  %38 = or i32 %37, 2052, !dbg !2172
  store volatile i32 %38, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2172
  br label %49, !dbg !2173

39:                                               ; preds = %1
  %40 = icmp eq i16 %4, 0, !dbg !2174
  br i1 %40, label %41, label %46, !dbg !2176

41:                                               ; preds = %39
  %42 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2177
  %43 = and i32 %42, -29, !dbg !2177
  store volatile i32 %43, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2177
  %44 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2179
  %45 = or i32 %44, 2052, !dbg !2179
  store volatile i32 %45, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2179
  br label %49, !dbg !2180

46:                                               ; preds = %39
  %47 = zext i16 %4 to i32, !dbg !2181
  %48 = shl nuw i32 1, %47, !dbg !2181
  store volatile i32 %48, i32* inttoptr (i32 -2097106924 to i32*), align 4, !dbg !2181
  br label %49

49:                                               ; preds = %14, %24, %34, %29, %19, %9, %46, %41, %1
  %50 = phi i32 [ -1, %1 ], [ 0, %41 ], [ 0, %46 ], [ 0, %9 ], [ 0, %19 ], [ 0, %29 ], [ 0, %34 ], [ 0, %24 ], [ 0, %14 ], !dbg !2135
  ret i32 %50, !dbg !2183
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullDown_RESET(i32 noundef %0) local_unnamed_addr #5 !dbg !2184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2186, metadata !DIExpression()), !dbg !2189
  %2 = lshr i32 %0, 5, !dbg !2190
  call void @llvm.dbg.value(metadata i32 %2, metadata !2187, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2189
  %3 = trunc i32 %0 to i16, !dbg !2191
  %4 = and i16 %3, 31, !dbg !2191
  call void @llvm.dbg.value(metadata i16 %3, metadata !2188, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2189
  %5 = trunc i32 %2 to i16, !dbg !2192
  switch i16 %5, label %48 [
    i16 0, label %6
    i16 1, label %38
  ], !dbg !2192

6:                                                ; preds = %1
  %7 = icmp ult i16 %4, 27, !dbg !2193
  br i1 %7, label %8, label %11, !dbg !2196

8:                                                ; preds = %6
  %9 = zext i16 %4 to i32, !dbg !2197
  %10 = shl nuw nsw i32 1, %9, !dbg !2198
  store volatile i32 %10, i32* inttoptr (i32 -2097106888 to i32*), align 8, !dbg !2198
  br label %48, !dbg !2200

11:                                               ; preds = %6
  %12 = trunc i32 %0 to i5, !dbg !2201
  switch i5 %12, label %33 [
    i5 -5, label %13
    i5 -4, label %18
    i5 -3, label %23
    i5 -2, label %28
  ], !dbg !2201

13:                                               ; preds = %11
  %14 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2202
  %15 = and i32 %14, -29, !dbg !2202
  store volatile i32 %15, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2202
  %16 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2205
  %17 = or i32 %16, 2048, !dbg !2205
  store volatile i32 %17, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2205
  br label %48, !dbg !2206

18:                                               ; preds = %11
  %19 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2207
  %20 = and i32 %19, -29, !dbg !2207
  store volatile i32 %20, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2207
  %21 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2210
  %22 = or i32 %21, 2048, !dbg !2210
  store volatile i32 %22, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2210
  br label %48, !dbg !2211

23:                                               ; preds = %11
  %24 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2212
  %25 = and i32 %24, -29, !dbg !2212
  store volatile i32 %25, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2212
  %26 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2215
  %27 = or i32 %26, 2048, !dbg !2215
  store volatile i32 %27, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2215
  br label %48, !dbg !2216

28:                                               ; preds = %11
  %29 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2217
  %30 = and i32 %29, -29, !dbg !2217
  store volatile i32 %30, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2217
  %31 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2220
  %32 = or i32 %31, 2048, !dbg !2220
  store volatile i32 %32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2220
  br label %48, !dbg !2221

33:                                               ; preds = %11
  %34 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2222
  %35 = and i32 %34, -29, !dbg !2222
  store volatile i32 %35, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2222
  %36 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2225
  %37 = or i32 %36, 2048, !dbg !2225
  store volatile i32 %37, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2225
  br label %48, !dbg !2226

38:                                               ; preds = %1
  %39 = icmp eq i16 %4, 0, !dbg !2227
  br i1 %39, label %40, label %45, !dbg !2229

40:                                               ; preds = %38
  %41 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2230
  %42 = and i32 %41, -29, !dbg !2230
  store volatile i32 %42, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2230
  %43 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2232
  %44 = or i32 %43, 2048, !dbg !2232
  store volatile i32 %44, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2232
  br label %48, !dbg !2233

45:                                               ; preds = %38
  %46 = zext i16 %4 to i32, !dbg !2234
  %47 = shl nuw i32 1, %46, !dbg !2234
  store volatile i32 %47, i32* inttoptr (i32 -2097106872 to i32*), align 8, !dbg !2234
  br label %48

48:                                               ; preds = %13, %23, %33, %28, %18, %8, %45, %40, %1
  %49 = phi i32 [ -1, %1 ], [ 0, %40 ], [ 0, %45 ], [ 0, %8 ], [ 0, %18 ], [ 0, %28 ], [ 0, %33 ], [ 0, %23 ], [ 0, %13 ], !dbg !2189
  ret i32 %49, !dbg !2236
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullUp_RESET(i32 noundef %0) local_unnamed_addr #5 !dbg !2237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2239, metadata !DIExpression()), !dbg !2242
  %2 = lshr i32 %0, 5, !dbg !2243
  call void @llvm.dbg.value(metadata i32 %2, metadata !2240, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2242
  %3 = trunc i32 %0 to i16, !dbg !2244
  %4 = and i16 %3, 31, !dbg !2244
  call void @llvm.dbg.value(metadata i16 %3, metadata !2241, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2242
  %5 = trunc i32 %2 to i16, !dbg !2245
  switch i16 %5, label %48 [
    i16 0, label %6
    i16 1, label %38
  ], !dbg !2245

6:                                                ; preds = %1
  %7 = icmp ult i16 %4, 27, !dbg !2246
  br i1 %7, label %8, label %11, !dbg !2249

8:                                                ; preds = %6
  %9 = zext i16 %4 to i32, !dbg !2250
  %10 = shl nuw nsw i32 1, %9, !dbg !2251
  store volatile i32 %10, i32* inttoptr (i32 -2097106936 to i32*), align 8, !dbg !2251
  br label %48, !dbg !2253

11:                                               ; preds = %6
  %12 = trunc i32 %0 to i5, !dbg !2254
  switch i5 %12, label %33 [
    i5 -5, label %13
    i5 -4, label %18
    i5 -3, label %23
    i5 -2, label %28
  ], !dbg !2254

13:                                               ; preds = %11
  %14 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2255
  %15 = and i32 %14, -29, !dbg !2255
  store volatile i32 %15, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2255
  %16 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2258
  %17 = or i32 %16, 2048, !dbg !2258
  store volatile i32 %17, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2258
  br label %48, !dbg !2259

18:                                               ; preds = %11
  %19 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2260
  %20 = and i32 %19, -29, !dbg !2260
  store volatile i32 %20, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2260
  %21 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2263
  %22 = or i32 %21, 2048, !dbg !2263
  store volatile i32 %22, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2263
  br label %48, !dbg !2264

23:                                               ; preds = %11
  %24 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2265
  %25 = and i32 %24, -29, !dbg !2265
  store volatile i32 %25, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2265
  %26 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2268
  %27 = or i32 %26, 2048, !dbg !2268
  store volatile i32 %27, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2268
  br label %48, !dbg !2269

28:                                               ; preds = %11
  %29 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2270
  %30 = and i32 %29, -29, !dbg !2270
  store volatile i32 %30, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2270
  %31 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2273
  %32 = or i32 %31, 2048, !dbg !2273
  store volatile i32 %32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2273
  br label %48, !dbg !2274

33:                                               ; preds = %11
  %34 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2275
  %35 = and i32 %34, -29, !dbg !2275
  store volatile i32 %35, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2275
  %36 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2278
  %37 = or i32 %36, 2048, !dbg !2278
  store volatile i32 %37, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2278
  br label %48, !dbg !2279

38:                                               ; preds = %1
  %39 = icmp eq i16 %4, 0, !dbg !2280
  br i1 %39, label %40, label %45, !dbg !2282

40:                                               ; preds = %38
  %41 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2283
  %42 = and i32 %41, -29, !dbg !2283
  store volatile i32 %42, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2283
  %43 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2285
  %44 = or i32 %43, 2048, !dbg !2285
  store volatile i32 %44, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2285
  br label %48, !dbg !2286

45:                                               ; preds = %38
  %46 = zext i16 %4 to i32, !dbg !2287
  %47 = shl nuw i32 1, %46, !dbg !2287
  store volatile i32 %47, i32* inttoptr (i32 -2097106920 to i32*), align 8, !dbg !2287
  br label %48

48:                                               ; preds = %13, %23, %33, %28, %18, %8, %45, %40, %1
  %49 = phi i32 [ -1, %1 ], [ 0, %40 ], [ 0, %45 ], [ 0, %8 ], [ 0, %18 ], [ 0, %28 ], [ 0, %33 ], [ 0, %23 ], [ 0, %13 ], !dbg !2242
  ret i32 %49, !dbg !2289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_PullDown_SET(i32 noundef %0) local_unnamed_addr #5 !dbg !2290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2292, metadata !DIExpression()), !dbg !2295
  %2 = lshr i32 %0, 5, !dbg !2296
  call void @llvm.dbg.value(metadata i32 %2, metadata !2293, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2295
  %3 = trunc i32 %0 to i16, !dbg !2297
  %4 = and i16 %3, 31, !dbg !2297
  call void @llvm.dbg.value(metadata i16 %3, metadata !2294, metadata !DIExpression(DW_OP_constu, 31, DW_OP_and, DW_OP_stack_value)), !dbg !2295
  %5 = tail call i32 @halGPIO_PullUp_RESET(i32 noundef %0) #16, !dbg !2298
  %6 = trunc i32 %2 to i16, !dbg !2299
  switch i16 %6, label %49 [
    i16 0, label %7
    i16 1, label %39
  ], !dbg !2299

7:                                                ; preds = %1
  %8 = icmp ult i16 %4, 27, !dbg !2300
  br i1 %8, label %9, label %12, !dbg !2303

9:                                                ; preds = %7
  %10 = zext i16 %4 to i32, !dbg !2304
  %11 = shl nuw nsw i32 1, %10, !dbg !2305
  store volatile i32 %11, i32* inttoptr (i32 -2097106892 to i32*), align 4, !dbg !2305
  br label %49, !dbg !2307

12:                                               ; preds = %7
  %13 = trunc i32 %0 to i5, !dbg !2308
  switch i5 %13, label %34 [
    i5 -5, label %14
    i5 -4, label %19
    i5 -3, label %24
    i5 -2, label %29
  ], !dbg !2308

14:                                               ; preds = %12
  %15 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2309
  %16 = and i32 %15, -29, !dbg !2309
  store volatile i32 %16, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2309
  %17 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2312
  %18 = or i32 %17, 2068, !dbg !2312
  store volatile i32 %18, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2312
  br label %49, !dbg !2313

19:                                               ; preds = %12
  %20 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2314
  %21 = and i32 %20, -29, !dbg !2314
  store volatile i32 %21, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2314
  %22 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2317
  %23 = or i32 %22, 2068, !dbg !2317
  store volatile i32 %23, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2317
  br label %49, !dbg !2318

24:                                               ; preds = %12
  %25 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2319
  %26 = and i32 %25, -29, !dbg !2319
  store volatile i32 %26, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2319
  %27 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2322
  %28 = or i32 %27, 2068, !dbg !2322
  store volatile i32 %28, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2322
  br label %49, !dbg !2323

29:                                               ; preds = %12
  %30 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2324
  %31 = and i32 %30, -29, !dbg !2324
  store volatile i32 %31, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2324
  %32 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2327
  %33 = or i32 %32, 2068, !dbg !2327
  store volatile i32 %33, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2327
  br label %49, !dbg !2328

34:                                               ; preds = %12
  %35 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2329
  %36 = and i32 %35, -29, !dbg !2329
  store volatile i32 %36, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2329
  %37 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2332
  %38 = or i32 %37, 2068, !dbg !2332
  store volatile i32 %38, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2332
  br label %49, !dbg !2333

39:                                               ; preds = %1
  %40 = icmp eq i16 %4, 0, !dbg !2334
  br i1 %40, label %41, label %46, !dbg !2336

41:                                               ; preds = %39
  %42 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2337
  %43 = and i32 %42, -29, !dbg !2337
  store volatile i32 %43, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2337
  %44 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2339
  %45 = or i32 %44, 2068, !dbg !2339
  store volatile i32 %45, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2339
  br label %49, !dbg !2340

46:                                               ; preds = %39
  %47 = zext i16 %4 to i32, !dbg !2341
  %48 = shl nuw i32 1, %47, !dbg !2341
  store volatile i32 %48, i32* inttoptr (i32 -2097106876 to i32*), align 4, !dbg !2341
  br label %49

49:                                               ; preds = %14, %24, %34, %29, %19, %9, %46, %41, %1
  %50 = phi i32 [ -1, %1 ], [ 0, %41 ], [ 0, %46 ], [ 0, %9 ], [ 0, %19 ], [ 0, %29 ], [ 0, %34 ], [ 0, %24 ], [ 0, %14 ], !dbg !2295
  ret i32 %50, !dbg !2343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @halGPIO_SetDriving(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !2344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2346, metadata !DIExpression()), !dbg !2350
  call void @llvm.dbg.value(metadata i8 %1, metadata !2347, metadata !DIExpression()), !dbg !2350
  %3 = lshr i32 %0, 4, !dbg !2351
  call void @llvm.dbg.value(metadata i32 %3, metadata !2348, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2350
  %4 = trunc i32 %0 to i16, !dbg !2352
  %5 = and i16 %4, 15, !dbg !2352
  call void @llvm.dbg.value(metadata i16 %4, metadata !2349, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !2350
  %6 = trunc i32 %3 to i16, !dbg !2353
  switch i16 %6, label %131 [
    i16 0, label %7
    i16 1, label %20
    i16 2, label %92
    i16 3, label %118
  ], !dbg !2353

7:                                                ; preds = %2
  %8 = shl nuw nsw i16 %5, 1, !dbg !2354
  %9 = zext i16 %8 to i32, !dbg !2354
  %10 = shl nuw i32 3, %9, !dbg !2356
  %11 = xor i32 %10, -1, !dbg !2357
  %12 = load volatile i32, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !2358
  %13 = and i32 %12, %11, !dbg !2358
  store volatile i32 %13, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !2358
  %14 = lshr i8 %1, 2, !dbg !2359
  %15 = zext i8 %14 to i32, !dbg !2359
  %16 = add nsw i32 %15, -1, !dbg !2360
  %17 = shl i32 %16, %9, !dbg !2361
  %18 = load volatile i32, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !2362
  %19 = or i32 %18, %17, !dbg !2362
  store volatile i32 %19, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !2362
  br label %131, !dbg !2363

20:                                               ; preds = %2
  %21 = icmp ult i16 %5, 11, !dbg !2364
  br i1 %21, label %22, label %35, !dbg !2366

22:                                               ; preds = %20
  %23 = shl nuw nsw i16 %5, 1, !dbg !2367
  %24 = zext i16 %23 to i32, !dbg !2367
  %25 = shl nuw nsw i32 3, %24, !dbg !2369
  %26 = xor i32 %25, -1, !dbg !2370
  %27 = load volatile i32, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !2371
  %28 = and i32 %27, %26, !dbg !2371
  store volatile i32 %28, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !2371
  %29 = lshr i8 %1, 2, !dbg !2372
  %30 = zext i8 %29 to i32, !dbg !2372
  %31 = add nsw i32 %30, -1, !dbg !2373
  %32 = shl nsw i32 %31, %24, !dbg !2374
  %33 = load volatile i32, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !2375
  %34 = or i32 %33, %32, !dbg !2375
  store volatile i32 %34, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !2375
  br label %131, !dbg !2376

35:                                               ; preds = %20
  %36 = trunc i32 %0 to i4, !dbg !2377
  switch i4 %36, label %81 [
    i4 -5, label %37
    i4 -4, label %48
    i4 -3, label %59
    i4 -2, label %70
  ], !dbg !2377

37:                                               ; preds = %35
  %38 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2378
  %39 = and i32 %38, -449, !dbg !2378
  store volatile i32 %39, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2378
  %40 = lshr i8 %1, 1, !dbg !2381
  %41 = zext i8 %40 to i32, !dbg !2381
  %42 = shl nuw nsw i32 %41, 6, !dbg !2382
  %43 = add nsw i32 %42, -64, !dbg !2382
  %44 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2383
  %45 = or i32 %44, %43, !dbg !2383
  store volatile i32 %45, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2383
  %46 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2384
  %47 = or i32 %46, 2048, !dbg !2384
  store volatile i32 %47, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2384
  br label %131, !dbg !2385

48:                                               ; preds = %35
  %49 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2386
  %50 = and i32 %49, -449, !dbg !2386
  store volatile i32 %50, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2386
  %51 = lshr i8 %1, 1, !dbg !2389
  %52 = zext i8 %51 to i32, !dbg !2389
  %53 = shl nuw nsw i32 %52, 6, !dbg !2390
  %54 = add nsw i32 %53, -64, !dbg !2390
  %55 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2391
  %56 = or i32 %55, %54, !dbg !2391
  store volatile i32 %56, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2391
  %57 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2392
  %58 = or i32 %57, 2048, !dbg !2392
  store volatile i32 %58, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2392
  br label %131, !dbg !2393

59:                                               ; preds = %35
  %60 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2394
  %61 = and i32 %60, -449, !dbg !2394
  store volatile i32 %61, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2394
  %62 = lshr i8 %1, 1, !dbg !2397
  %63 = zext i8 %62 to i32, !dbg !2397
  %64 = shl nuw nsw i32 %63, 6, !dbg !2398
  %65 = add nsw i32 %64, -64, !dbg !2398
  %66 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2399
  %67 = or i32 %66, %65, !dbg !2399
  store volatile i32 %67, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2399
  %68 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2400
  %69 = or i32 %68, 2048, !dbg !2400
  store volatile i32 %69, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2400
  br label %131, !dbg !2401

70:                                               ; preds = %35
  %71 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2402
  %72 = and i32 %71, -449, !dbg !2402
  store volatile i32 %72, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2402
  %73 = lshr i8 %1, 1, !dbg !2405
  %74 = zext i8 %73 to i32, !dbg !2405
  %75 = shl nuw nsw i32 %74, 6, !dbg !2406
  %76 = add nsw i32 %75, -64, !dbg !2406
  %77 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2407
  %78 = or i32 %77, %76, !dbg !2407
  store volatile i32 %78, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2407
  %79 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2408
  %80 = or i32 %79, 2048, !dbg !2408
  store volatile i32 %80, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2408
  br label %131, !dbg !2409

81:                                               ; preds = %35
  %82 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2410
  %83 = and i32 %82, -449, !dbg !2410
  store volatile i32 %83, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2410
  %84 = lshr i8 %1, 1, !dbg !2413
  %85 = zext i8 %84 to i32, !dbg !2413
  %86 = shl nuw nsw i32 %85, 6, !dbg !2414
  %87 = add nsw i32 %86, -64, !dbg !2414
  %88 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2415
  %89 = or i32 %88, %87, !dbg !2415
  store volatile i32 %89, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2415
  %90 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2416
  %91 = or i32 %90, 2048, !dbg !2416
  store volatile i32 %91, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2416
  br label %131, !dbg !2417

92:                                               ; preds = %2
  %93 = icmp eq i16 %5, 0, !dbg !2418
  br i1 %93, label %94, label %105, !dbg !2420

94:                                               ; preds = %92
  %95 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2421
  %96 = and i32 %95, -449, !dbg !2421
  store volatile i32 %96, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2421
  %97 = lshr i8 %1, 1, !dbg !2423
  %98 = zext i8 %97 to i32, !dbg !2423
  %99 = shl nuw nsw i32 %98, 6, !dbg !2424
  %100 = add nsw i32 %99, -64, !dbg !2424
  %101 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2425
  %102 = or i32 %101, %100, !dbg !2425
  store volatile i32 %102, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2425
  %103 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2426
  %104 = or i32 %103, 2048, !dbg !2426
  store volatile i32 %104, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2426
  br label %131, !dbg !2427

105:                                              ; preds = %92
  %106 = shl nuw nsw i16 %5, 1, !dbg !2428
  %107 = zext i16 %106 to i32, !dbg !2428
  %108 = shl nuw i32 3, %107, !dbg !2430
  %109 = xor i32 %108, -1, !dbg !2431
  %110 = load volatile i32, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !2432
  %111 = and i32 %110, %109, !dbg !2432
  store volatile i32 %111, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !2432
  %112 = lshr i8 %1, 2, !dbg !2433
  %113 = zext i8 %112 to i32, !dbg !2433
  %114 = add nsw i32 %113, -1, !dbg !2434
  %115 = shl i32 %114, %107, !dbg !2435
  %116 = load volatile i32, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !2436
  %117 = or i32 %116, %115, !dbg !2436
  store volatile i32 %117, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !2436
  br label %131

118:                                              ; preds = %2
  %119 = shl nuw nsw i16 %5, 1, !dbg !2437
  %120 = zext i16 %119 to i32, !dbg !2437
  %121 = shl nuw i32 3, %120, !dbg !2438
  %122 = xor i32 %121, -1, !dbg !2439
  %123 = load volatile i32, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !2440
  %124 = and i32 %123, %122, !dbg !2440
  store volatile i32 %124, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !2440
  %125 = lshr i8 %1, 2, !dbg !2441
  %126 = zext i8 %125 to i32, !dbg !2441
  %127 = add nsw i32 %126, -1, !dbg !2442
  %128 = shl i32 %127, %120, !dbg !2443
  %129 = load volatile i32, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !2444
  %130 = or i32 %129, %128, !dbg !2444
  store volatile i32 %130, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !2444
  br label %131, !dbg !2445

131:                                              ; preds = %7, %118, %37, %59, %81, %70, %48, %22, %105, %94, %2
  %132 = phi i32 [ -1, %2 ], [ 0, %94 ], [ 0, %105 ], [ 0, %22 ], [ 0, %48 ], [ 0, %70 ], [ 0, %81 ], [ 0, %59 ], [ 0, %37 ], [ 0, %118 ], [ 0, %7 ], !dbg !2350
  ret i32 %132, !dbg !2446
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @halGPIO_GetDriving(i32 noundef %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !2447 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2452, metadata !DIExpression()), !dbg !2457
  call void @llvm.dbg.value(metadata i8* %1, metadata !2453, metadata !DIExpression()), !dbg !2457
  %3 = lshr i32 %0, 4, !dbg !2458
  call void @llvm.dbg.value(metadata i32 %3, metadata !2454, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2457
  %4 = trunc i32 %0 to i16, !dbg !2459
  %5 = and i16 %4, 15, !dbg !2459
  call void @llvm.dbg.value(metadata i16 %4, metadata !2455, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !2457
  %6 = trunc i32 %3 to i16, !dbg !2460
  switch i16 %6, label %91 [
    i16 0, label %7
    i16 1, label %17
    i16 2, label %61
    i16 3, label %79
  ], !dbg !2460

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -2097106736 to i32*), align 16, !dbg !2461
  call void @llvm.dbg.value(metadata i32 %8, metadata !2456, metadata !DIExpression()), !dbg !2457
  %9 = shl nuw nsw i16 %5, 1, !dbg !2463
  %10 = zext i16 %9 to i32, !dbg !2463
  %11 = shl nuw i32 3, %10, !dbg !2464
  %12 = and i32 %8, %11, !dbg !2465
  call void @llvm.dbg.value(metadata i32 %12, metadata !2456, metadata !DIExpression()), !dbg !2457
  %13 = lshr i32 %12, %10, !dbg !2466
  %14 = trunc i32 %13 to i8, !dbg !2467
  %15 = shl i8 %14, 2, !dbg !2467
  %16 = add i8 %15, 4, !dbg !2467
  br label %89, !dbg !2468

17:                                               ; preds = %2
  %18 = icmp ult i16 %5, 11, !dbg !2469
  br i1 %18, label %19, label %29, !dbg !2471

19:                                               ; preds = %17
  %20 = load volatile i32, i32* inttoptr (i32 -2097106732 to i32*), align 4, !dbg !2472
  call void @llvm.dbg.value(metadata i32 %20, metadata !2456, metadata !DIExpression()), !dbg !2457
  %21 = shl nuw nsw i16 %5, 1, !dbg !2474
  %22 = zext i16 %21 to i32, !dbg !2474
  %23 = shl nuw nsw i32 3, %22, !dbg !2475
  %24 = and i32 %20, %23, !dbg !2476
  call void @llvm.dbg.value(metadata i32 %24, metadata !2456, metadata !DIExpression()), !dbg !2457
  %25 = lshr i32 %24, %22, !dbg !2477
  %26 = trunc i32 %25 to i8, !dbg !2478
  %27 = shl i8 %26, 2, !dbg !2478
  %28 = add i8 %27, 4, !dbg !2478
  br label %89, !dbg !2479

29:                                               ; preds = %17
  %30 = trunc i32 %0 to i4, !dbg !2480
  switch i4 %30, label %55 [
    i4 -5, label %31
    i4 -4, label %37
    i4 -3, label %43
    i4 -2, label %49
  ], !dbg !2480

31:                                               ; preds = %29
  %32 = load volatile i32, i32* inttoptr (i32 -2130563000 to i32*), align 8, !dbg !2481
  call void @llvm.dbg.value(metadata i32 %32, metadata !2456, metadata !DIExpression()), !dbg !2457
  call void @llvm.dbg.value(metadata i32 %32, metadata !2456, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2457
  %33 = lshr i32 %32, 5, !dbg !2484
  %34 = trunc i32 %33 to i8, !dbg !2485
  %35 = and i8 %34, 14, !dbg !2485
  %36 = add nuw nsw i8 %35, 2, !dbg !2485
  br label %89, !dbg !2486

37:                                               ; preds = %29
  %38 = load volatile i32, i32* inttoptr (i32 -2130562996 to i32*), align 4, !dbg !2487
  call void @llvm.dbg.value(metadata i32 %38, metadata !2456, metadata !DIExpression()), !dbg !2457
  call void @llvm.dbg.value(metadata i32 %38, metadata !2456, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2457
  %39 = lshr i32 %38, 5, !dbg !2490
  %40 = trunc i32 %39 to i8, !dbg !2491
  %41 = and i8 %40, 14, !dbg !2491
  %42 = add nuw nsw i8 %41, 2, !dbg !2491
  br label %89, !dbg !2492

43:                                               ; preds = %29
  %44 = load volatile i32, i32* inttoptr (i32 -2130562980 to i32*), align 4, !dbg !2493
  call void @llvm.dbg.value(metadata i32 %44, metadata !2456, metadata !DIExpression()), !dbg !2457
  call void @llvm.dbg.value(metadata i32 %44, metadata !2456, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2457
  %45 = lshr i32 %44, 5, !dbg !2496
  %46 = trunc i32 %45 to i8, !dbg !2497
  %47 = and i8 %46, 14, !dbg !2497
  %48 = add nuw nsw i8 %47, 2, !dbg !2497
  br label %89, !dbg !2498

49:                                               ; preds = %29
  %50 = load volatile i32, i32* inttoptr (i32 -2130562984 to i32*), align 8, !dbg !2499
  call void @llvm.dbg.value(metadata i32 %50, metadata !2456, metadata !DIExpression()), !dbg !2457
  call void @llvm.dbg.value(metadata i32 %50, metadata !2456, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2457
  %51 = lshr i32 %50, 5, !dbg !2502
  %52 = trunc i32 %51 to i8, !dbg !2503
  %53 = and i8 %52, 14, !dbg !2503
  %54 = add nuw nsw i8 %53, 2, !dbg !2503
  br label %89, !dbg !2504

55:                                               ; preds = %29
  %56 = load volatile i32, i32* inttoptr (i32 -2130562988 to i32*), align 4, !dbg !2505
  call void @llvm.dbg.value(metadata i32 %56, metadata !2456, metadata !DIExpression()), !dbg !2457
  call void @llvm.dbg.value(metadata i32 %56, metadata !2456, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2457
  %57 = lshr i32 %56, 5, !dbg !2508
  %58 = trunc i32 %57 to i8, !dbg !2509
  %59 = and i8 %58, 14, !dbg !2509
  %60 = add nuw nsw i8 %59, 2, !dbg !2509
  br label %89, !dbg !2510

61:                                               ; preds = %2
  %62 = icmp eq i16 %5, 0, !dbg !2511
  br i1 %62, label %63, label %69, !dbg !2513

63:                                               ; preds = %61
  %64 = load volatile i32, i32* inttoptr (i32 -2130562992 to i32*), align 16, !dbg !2514
  call void @llvm.dbg.value(metadata i32 %64, metadata !2456, metadata !DIExpression()), !dbg !2457
  call void @llvm.dbg.value(metadata i32 %64, metadata !2456, metadata !DIExpression(DW_OP_constu, 448, DW_OP_and, DW_OP_stack_value)), !dbg !2457
  %65 = lshr i32 %64, 5, !dbg !2516
  %66 = trunc i32 %65 to i8, !dbg !2517
  %67 = and i8 %66, 14, !dbg !2517
  %68 = add nuw nsw i8 %67, 2, !dbg !2517
  br label %89, !dbg !2518

69:                                               ; preds = %61
  %70 = load volatile i32, i32* inttoptr (i32 -2097106728 to i32*), align 8, !dbg !2519
  call void @llvm.dbg.value(metadata i32 %70, metadata !2456, metadata !DIExpression()), !dbg !2457
  %71 = shl nuw nsw i16 %5, 1, !dbg !2521
  %72 = zext i16 %71 to i32, !dbg !2521
  %73 = shl nuw i32 3, %72, !dbg !2522
  %74 = and i32 %70, %73, !dbg !2523
  call void @llvm.dbg.value(metadata i32 %74, metadata !2456, metadata !DIExpression()), !dbg !2457
  %75 = lshr i32 %74, %72, !dbg !2524
  %76 = trunc i32 %75 to i8, !dbg !2525
  %77 = shl i8 %76, 2, !dbg !2525
  %78 = add i8 %77, 4, !dbg !2525
  br label %89

79:                                               ; preds = %2
  %80 = load volatile i32, i32* inttoptr (i32 -2097106724 to i32*), align 4, !dbg !2526
  call void @llvm.dbg.value(metadata i32 %80, metadata !2456, metadata !DIExpression()), !dbg !2457
  %81 = shl nuw nsw i16 %5, 1, !dbg !2527
  %82 = zext i16 %81 to i32, !dbg !2527
  %83 = shl nuw i32 3, %82, !dbg !2528
  %84 = and i32 %80, %83, !dbg !2529
  call void @llvm.dbg.value(metadata i32 %84, metadata !2456, metadata !DIExpression()), !dbg !2457
  %85 = lshr i32 %84, %82, !dbg !2530
  %86 = trunc i32 %85 to i8, !dbg !2531
  %87 = shl i8 %86, 2, !dbg !2531
  %88 = add i8 %87, 4, !dbg !2531
  br label %89, !dbg !2532

89:                                               ; preds = %63, %69, %19, %37, %49, %55, %43, %31, %79, %7
  %90 = phi i8 [ %16, %7 ], [ %88, %79 ], [ %36, %31 ], [ %48, %43 ], [ %60, %55 ], [ %54, %49 ], [ %42, %37 ], [ %28, %19 ], [ %78, %69 ], [ %68, %63 ]
  store i8 %90, i8* %1, align 1, !dbg !2533
  br label %91, !dbg !2534

91:                                               ; preds = %89, %2
  %92 = phi i32 [ -1, %2 ], [ 0, %89 ], !dbg !2457
  ret i32 %92, !dbg !2534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @topPAD_Control_GPIO(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !2535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2540, metadata !DIExpression()), !dbg !2544
  call void @llvm.dbg.value(metadata i32 %1, metadata !2541, metadata !DIExpression()), !dbg !2544
  %3 = lshr i32 %0, 5, !dbg !2545
  call void @llvm.dbg.value(metadata i32 %3, metadata !2542, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2544
  %4 = trunc i32 %0 to i16, !dbg !2546
  %5 = and i16 %4, 31, !dbg !2546
  call void @llvm.dbg.value(metadata i16 %5, metadata !2543, metadata !DIExpression()), !dbg !2544
  switch i32 %1, label %32 [
    i32 1, label %6
    i32 0, label %18
  ], !dbg !2547

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !2542, metadata !DIExpression()), !dbg !2544
  %7 = trunc i32 %3 to i16, !dbg !2548
  switch i16 %7, label %32 [
    i16 0, label %8
    i16 1, label %13
  ], !dbg !2548

8:                                                ; preds = %6
  %9 = zext i16 %5 to i32, !dbg !2551
  %10 = shl nuw i32 1, %9, !dbg !2553
  %11 = load volatile i32, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !2554
  %12 = or i32 %11, %10, !dbg !2554
  store volatile i32 %12, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !2554
  br label %32, !dbg !2555

13:                                               ; preds = %6
  %14 = zext i16 %5 to i32, !dbg !2556
  %15 = shl nuw i32 1, %14, !dbg !2557
  %16 = load volatile i32, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !2558
  %17 = or i32 %16, %15, !dbg !2558
  store volatile i32 %17, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !2558
  br label %32, !dbg !2559

18:                                               ; preds = %2
  %19 = trunc i32 %3 to i16, !dbg !2560
  switch i16 %19, label %32 [
    i16 0, label %20
    i16 1, label %26
  ], !dbg !2560

20:                                               ; preds = %18
  %21 = zext i16 %5 to i32, !dbg !2563
  %22 = shl nuw i32 1, %21, !dbg !2565
  %23 = xor i32 %22, -1, !dbg !2566
  %24 = load volatile i32, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !2567
  %25 = and i32 %24, %23, !dbg !2567
  store volatile i32 %25, i32* inttoptr (i32 -2130571136 to i32*), align 128, !dbg !2567
  br label %32, !dbg !2568

26:                                               ; preds = %18
  %27 = zext i16 %5 to i32, !dbg !2569
  %28 = shl nuw i32 1, %27, !dbg !2570
  %29 = xor i32 %28, -1, !dbg !2571
  %30 = load volatile i32, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !2572
  %31 = and i32 %30, %29, !dbg !2572
  store volatile i32 %31, i32* inttoptr (i32 -2130571132 to i32*), align 4, !dbg !2572
  br label %32, !dbg !2573

32:                                               ; preds = %2, %18, %26, %20, %8, %13, %6
  ret void, !dbg !2574
}

; Function Attrs: noinline nounwind optsize
define dso_local signext i8 @hal_lp_connsys_get_own_enable_int() local_unnamed_addr #0 !dbg !2575 {
  %1 = load i8 ()*, i8 ()** @ptr_lp_connsys_get_own_enable_int, align 4, !dbg !2576
  %2 = icmp eq i8 ()* %1, null, !dbg !2578
  br i1 %2, label %5, label %3, !dbg !2579

3:                                                ; preds = %0
  %4 = tail call signext i8 %1() #14, !dbg !2580
  br label %5, !dbg !2582

5:                                                ; preds = %0, %3
  %6 = phi i8 [ %4, %3 ], [ 0, %0 ], !dbg !2583
  ret i8 %6, !dbg !2584
}

; Function Attrs: noinline nounwind optsize
define dso_local signext i8 @hal_lp_connsys_give_n9_own() local_unnamed_addr #0 !dbg !2585 {
  %1 = load i8 ()*, i8 ()** @ptr_lp_connsys_give_n9_own, align 4, !dbg !2586
  %2 = icmp eq i8 ()* %1, null, !dbg !2588
  br i1 %2, label %5, label %3, !dbg !2589

3:                                                ; preds = %0
  %4 = tail call signext i8 %1() #14, !dbg !2590
  br label %5, !dbg !2592

5:                                                ; preds = %0, %3
  %6 = phi i8 [ %4, %3 ], [ 0, %0 ], !dbg !2593
  ret i8 %6, !dbg !2594
}

; Function Attrs: noinline nounwind optsize
define dso_local signext i8 @hal_lp_connsys_get_ownership() local_unnamed_addr #0 !dbg !2595 {
  %1 = load i8 ()*, i8 ()** @ptr_connsys_get_ownership, align 4, !dbg !2596
  %2 = icmp eq i8 ()* %1, null, !dbg !2598
  br i1 %2, label %5, label %3, !dbg !2599

3:                                                ; preds = %0
  %4 = tail call zeroext i8 %1() #14, !dbg !2600
  br label %5, !dbg !2602

5:                                                ; preds = %0, %3
  %6 = phi i8 [ %4, %3 ], [ 1, %0 ], !dbg !2603
  ret i8 %6, !dbg !2604
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_lp_deep_sleep_set_rgu() local_unnamed_addr #5 !dbg !2605 {
  call void @llvm.dbg.value(metadata %struct._IOT_CM4_RGU_MEM_CTRL_TypeDef* inttoptr (i32 -2097114756 to %struct._IOT_CM4_RGU_MEM_CTRL_TypeDef*), metadata !2607, metadata !DIExpression()), !dbg !2608
  store volatile i32 15, i32* inttoptr (i32 -2097114688 to i32*), align 64, !dbg !2609
  store volatile i32 2147483647, i32* inttoptr (i32 -2097114736 to i32*), align 16, !dbg !2610
  store volatile i32 255, i32* inttoptr (i32 -2097114732 to i32*), align 4, !dbg !2611
  store volatile i32 -2147483648, i32* inttoptr (i32 -2097114728 to i32*), align 8, !dbg !2612
  store volatile i32 0, i32* inttoptr (i32 -2097114724 to i32*), align 4, !dbg !2613
  ret void, !dbg !2614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @hal_lp_legacy_sleep_set_rgu() local_unnamed_addr #5 !dbg !2615 {
  call void @llvm.dbg.value(metadata %struct._IOT_CM4_RGU_MEM_CTRL_TypeDef* inttoptr (i32 -2097114756 to %struct._IOT_CM4_RGU_MEM_CTRL_TypeDef*), metadata !2617, metadata !DIExpression()), !dbg !2618
  store volatile i32 15, i32* inttoptr (i32 -2097114688 to i32*), align 64, !dbg !2619
  store volatile i32 0, i32* inttoptr (i32 -2097114736 to i32*), align 16, !dbg !2620
  store volatile i32 0, i32* inttoptr (i32 -2097114732 to i32*), align 4, !dbg !2621
  store volatile i32 -1, i32* inttoptr (i32 -2097114728 to i32*), align 8, !dbg !2622
  store volatile i32 255, i32* inttoptr (i32 -2097114724 to i32*), align 4, !dbg !2623
  ret void, !dbg !2624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_lp_deep_sleep() local_unnamed_addr #0 !dbg !2625 {
  call void @llvm.dbg.value(metadata %struct._IOT_CM4_RGU_MEM_CTRL_TypeDef* inttoptr (i32 -2097114756 to %struct._IOT_CM4_RGU_MEM_CTRL_TypeDef*), metadata !2627, metadata !DIExpression()), !dbg !2628
  %1 = load volatile i32, i32* inttoptr (i32 -2097114752 to i32*), align 128, !dbg !2629
  %2 = or i32 %1, -2147483648, !dbg !2629
  store volatile i32 %2, i32* inttoptr (i32 -2097114752 to i32*), align 128, !dbg !2629
  tail call fastcc void @hal_lp_cm4_hclk_switch() #16, !dbg !2630
  tail call void @hal_lp_deep_sleep_set_rgu() #16, !dbg !2631
  %3 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !2632
  %4 = or i32 %3, -1073741824, !dbg !2632
  store volatile i32 %4, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !2632
  %5 = load volatile i32, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !2633
  %6 = or i32 %5, 4, !dbg !2633
  store volatile i32 %6, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !2633
  tail call void asm sideeffect "dsb", ""() #13, !dbg !2634, !srcloc !2635
  tail call void asm sideeffect "nop", ""() #13, !dbg !2636, !srcloc !2637
  tail call void asm sideeffect "nop", ""() #13, !dbg !2638, !srcloc !2639
  tail call void asm sideeffect "nop", ""() #13, !dbg !2640, !srcloc !2641
  tail call void asm sideeffect "nop", ""() #13, !dbg !2642, !srcloc !2643
  tail call void asm sideeffect "nop", ""() #13, !dbg !2644, !srcloc !2645
  tail call void asm sideeffect "nop", ""() #13, !dbg !2646, !srcloc !2647
  tail call void asm sideeffect "nop", ""() #13, !dbg !2648, !srcloc !2649
  tail call void asm sideeffect "nop", ""() #13, !dbg !2650, !srcloc !2651
  tail call void asm sideeffect "nop", ""() #13, !dbg !2652, !srcloc !2653
  tail call void asm sideeffect "nop", ""() #13, !dbg !2654, !srcloc !2655
  tail call void asm sideeffect "nop", ""() #13, !dbg !2656, !srcloc !2657
  tail call void asm sideeffect "nop", ""() #13, !dbg !2658, !srcloc !2659
  tail call void asm sideeffect "nop", ""() #13, !dbg !2660, !srcloc !2661
  tail call void asm sideeffect "nop", ""() #13, !dbg !2662, !srcloc !2663
  tail call void asm sideeffect "nop", ""() #13, !dbg !2664, !srcloc !2665
  tail call void asm sideeffect "nop", ""() #13, !dbg !2666, !srcloc !2667
  tail call void asm sideeffect "nop", ""() #13, !dbg !2668, !srcloc !2669
  tail call void asm sideeffect "nop", ""() #13, !dbg !2670, !srcloc !2671
  tail call void asm sideeffect "nop", ""() #13, !dbg !2672, !srcloc !2673
  tail call void asm sideeffect "nop", ""() #13, !dbg !2674, !srcloc !2675
  tail call void asm sideeffect "nop", ""() #13, !dbg !2676, !srcloc !2677
  tail call void asm sideeffect "nop", ""() #13, !dbg !2678, !srcloc !2679
  tail call void asm sideeffect "nop", ""() #13, !dbg !2680, !srcloc !2681
  tail call void asm sideeffect "nop", ""() #13, !dbg !2682, !srcloc !2683
  tail call void asm sideeffect "nop", ""() #13, !dbg !2684, !srcloc !2685
  tail call void asm sideeffect "nop", ""() #13, !dbg !2686, !srcloc !2687
  tail call void asm sideeffect "nop", ""() #13, !dbg !2688, !srcloc !2689
  tail call void asm sideeffect "nop", ""() #13, !dbg !2690, !srcloc !2691
  tail call void asm sideeffect "nop", ""() #13, !dbg !2692, !srcloc !2693
  tail call void asm sideeffect "nop", ""() #13, !dbg !2694, !srcloc !2695
  tail call void asm sideeffect "nop", ""() #13, !dbg !2696, !srcloc !2697
  tail call void asm sideeffect "nop", ""() #13, !dbg !2698, !srcloc !2699
  tail call void asm sideeffect "wfi", ""() #13, !dbg !2700, !srcloc !2701
  tail call void asm sideeffect "nop", ""() #13, !dbg !2702, !srcloc !2703
  tail call void asm sideeffect "nop", ""() #13, !dbg !2704, !srcloc !2705
  tail call void asm sideeffect "nop", ""() #13, !dbg !2706, !srcloc !2707
  tail call void asm sideeffect "nop", ""() #13, !dbg !2708, !srcloc !2709
  tail call void asm sideeffect "nop", ""() #13, !dbg !2710, !srcloc !2711
  tail call void asm sideeffect "nop", ""() #13, !dbg !2712, !srcloc !2713
  tail call void asm sideeffect "nop", ""() #13, !dbg !2714, !srcloc !2715
  tail call void asm sideeffect "nop", ""() #13, !dbg !2716, !srcloc !2717
  tail call void asm sideeffect "nop", ""() #13, !dbg !2718, !srcloc !2719
  tail call void asm sideeffect "nop", ""() #13, !dbg !2720, !srcloc !2721
  tail call void asm sideeffect "nop", ""() #13, !dbg !2722, !srcloc !2723
  tail call void asm sideeffect "nop", ""() #13, !dbg !2724, !srcloc !2725
  tail call void asm sideeffect "nop", ""() #13, !dbg !2726, !srcloc !2727
  tail call void asm sideeffect "nop", ""() #13, !dbg !2728, !srcloc !2729
  tail call void asm sideeffect "nop", ""() #13, !dbg !2730, !srcloc !2731
  tail call void asm sideeffect "nop", ""() #13, !dbg !2732, !srcloc !2733
  tail call void asm sideeffect "nop", ""() #13, !dbg !2734, !srcloc !2735
  tail call void asm sideeffect "nop", ""() #13, !dbg !2736, !srcloc !2737
  tail call void asm sideeffect "nop", ""() #13, !dbg !2738, !srcloc !2739
  tail call void asm sideeffect "nop", ""() #13, !dbg !2740, !srcloc !2741
  tail call void asm sideeffect "nop", ""() #13, !dbg !2742, !srcloc !2743
  tail call void asm sideeffect "nop", ""() #13, !dbg !2744, !srcloc !2745
  tail call void asm sideeffect "nop", ""() #13, !dbg !2746, !srcloc !2747
  tail call void asm sideeffect "nop", ""() #13, !dbg !2748, !srcloc !2749
  tail call void asm sideeffect "nop", ""() #13, !dbg !2750, !srcloc !2751
  tail call void asm sideeffect "nop", ""() #13, !dbg !2752, !srcloc !2753
  tail call void asm sideeffect "nop", ""() #13, !dbg !2754, !srcloc !2755
  tail call void asm sideeffect "nop", ""() #13, !dbg !2756, !srcloc !2757
  tail call void asm sideeffect "nop", ""() #13, !dbg !2758, !srcloc !2759
  tail call void asm sideeffect "nop", ""() #13, !dbg !2760, !srcloc !2761
  tail call void asm sideeffect "nop", ""() #13, !dbg !2762, !srcloc !2763
  tail call void asm sideeffect "nop", ""() #13, !dbg !2764, !srcloc !2765
  tail call void asm sideeffect "isb", ""() #13, !dbg !2766, !srcloc !2767
  %7 = load volatile i32, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !2768
  %8 = and i32 %7, -5, !dbg !2768
  store volatile i32 %8, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !2768
  %9 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !2769
  %10 = and i32 %9, -1073741825, !dbg !2769
  store volatile i32 %10, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !2769
  ret void, !dbg !2770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @hal_lp_cm4_hclk_switch() unnamed_addr #5 !dbg !2771 {
  call void @llvm.dbg.value(metadata i32 0, metadata !2776, metadata !DIExpression()), !dbg !2779
  call void @llvm.dbg.value(metadata i32 0, metadata !2777, metadata !DIExpression()), !dbg !2779
  call void @llvm.dbg.value(metadata i8 0, metadata !2778, metadata !DIExpression()), !dbg !2779
  call void @llvm.dbg.value(metadata i8 0, metadata !2778, metadata !DIExpression()), !dbg !2779
  call void @llvm.dbg.value(metadata i8 0, metadata !2778, metadata !DIExpression()), !dbg !2779
  %1 = load volatile i32, i32* inttoptr (i32 -2097118800 to i32*), align 16, !dbg !2780
  %2 = and i32 %1, -8, !dbg !2781
  call void @llvm.dbg.value(metadata i32 %2, metadata !2777, metadata !DIExpression()), !dbg !2779
  call void @llvm.dbg.value(metadata i32 %2, metadata !2777, metadata !DIExpression()), !dbg !2779
  store volatile i32 %2, i32* inttoptr (i32 -2097118800 to i32*), align 16, !dbg !2782
  ret void, !dbg !2783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_lp_legacy_sleep() local_unnamed_addr #0 !dbg !2784 {
  call void @llvm.dbg.value(metadata %struct._IOT_CM4_RGU_MEM_CTRL_TypeDef* inttoptr (i32 -2097114756 to %struct._IOT_CM4_RGU_MEM_CTRL_TypeDef*), metadata !2786, metadata !DIExpression()), !dbg !2787
  %1 = load volatile i32, i32* inttoptr (i32 -2097114752 to i32*), align 128, !dbg !2788
  %2 = and i32 %1, 2147483647, !dbg !2788
  store volatile i32 %2, i32* inttoptr (i32 -2097114752 to i32*), align 128, !dbg !2788
  tail call fastcc void @hal_lp_cm4_hclk_switch() #16, !dbg !2789
  tail call void @hal_lp_legacy_sleep_set_rgu() #16, !dbg !2790
  %3 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !2791
  %4 = or i32 %3, -1073741824, !dbg !2791
  store volatile i32 %4, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !2791
  %5 = load volatile i32, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !2792
  %6 = or i32 %5, 4, !dbg !2792
  store volatile i32 %6, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !2792
  tail call void asm sideeffect "dsb", ""() #13, !dbg !2793, !srcloc !2794
  tail call void asm sideeffect "nop", ""() #13, !dbg !2795, !srcloc !2796
  tail call void asm sideeffect "nop", ""() #13, !dbg !2797, !srcloc !2798
  tail call void asm sideeffect "nop", ""() #13, !dbg !2799, !srcloc !2800
  tail call void asm sideeffect "nop", ""() #13, !dbg !2801, !srcloc !2802
  tail call void asm sideeffect "nop", ""() #13, !dbg !2803, !srcloc !2804
  tail call void asm sideeffect "nop", ""() #13, !dbg !2805, !srcloc !2806
  tail call void asm sideeffect "nop", ""() #13, !dbg !2807, !srcloc !2808
  tail call void asm sideeffect "nop", ""() #13, !dbg !2809, !srcloc !2810
  tail call void asm sideeffect "nop", ""() #13, !dbg !2811, !srcloc !2812
  tail call void asm sideeffect "nop", ""() #13, !dbg !2813, !srcloc !2814
  tail call void asm sideeffect "nop", ""() #13, !dbg !2815, !srcloc !2816
  tail call void asm sideeffect "nop", ""() #13, !dbg !2817, !srcloc !2818
  tail call void asm sideeffect "nop", ""() #13, !dbg !2819, !srcloc !2820
  tail call void asm sideeffect "nop", ""() #13, !dbg !2821, !srcloc !2822
  tail call void asm sideeffect "nop", ""() #13, !dbg !2823, !srcloc !2824
  tail call void asm sideeffect "nop", ""() #13, !dbg !2825, !srcloc !2826
  tail call void asm sideeffect "nop", ""() #13, !dbg !2827, !srcloc !2828
  tail call void asm sideeffect "nop", ""() #13, !dbg !2829, !srcloc !2830
  tail call void asm sideeffect "nop", ""() #13, !dbg !2831, !srcloc !2832
  tail call void asm sideeffect "nop", ""() #13, !dbg !2833, !srcloc !2834
  tail call void asm sideeffect "nop", ""() #13, !dbg !2835, !srcloc !2836
  tail call void asm sideeffect "nop", ""() #13, !dbg !2837, !srcloc !2838
  tail call void asm sideeffect "nop", ""() #13, !dbg !2839, !srcloc !2840
  tail call void asm sideeffect "nop", ""() #13, !dbg !2841, !srcloc !2842
  tail call void asm sideeffect "nop", ""() #13, !dbg !2843, !srcloc !2844
  tail call void asm sideeffect "nop", ""() #13, !dbg !2845, !srcloc !2846
  tail call void asm sideeffect "nop", ""() #13, !dbg !2847, !srcloc !2848
  tail call void asm sideeffect "nop", ""() #13, !dbg !2849, !srcloc !2850
  tail call void asm sideeffect "nop", ""() #13, !dbg !2851, !srcloc !2852
  tail call void asm sideeffect "nop", ""() #13, !dbg !2853, !srcloc !2854
  tail call void asm sideeffect "nop", ""() #13, !dbg !2855, !srcloc !2856
  tail call void asm sideeffect "nop", ""() #13, !dbg !2857, !srcloc !2858
  tail call void asm sideeffect "wfi", ""() #13, !dbg !2859, !srcloc !2860
  tail call void asm sideeffect "nop", ""() #13, !dbg !2861, !srcloc !2862
  tail call void asm sideeffect "nop", ""() #13, !dbg !2863, !srcloc !2864
  tail call void asm sideeffect "nop", ""() #13, !dbg !2865, !srcloc !2866
  tail call void asm sideeffect "nop", ""() #13, !dbg !2867, !srcloc !2868
  tail call void asm sideeffect "nop", ""() #13, !dbg !2869, !srcloc !2870
  tail call void asm sideeffect "nop", ""() #13, !dbg !2871, !srcloc !2872
  tail call void asm sideeffect "nop", ""() #13, !dbg !2873, !srcloc !2874
  tail call void asm sideeffect "nop", ""() #13, !dbg !2875, !srcloc !2876
  tail call void asm sideeffect "nop", ""() #13, !dbg !2877, !srcloc !2878
  tail call void asm sideeffect "nop", ""() #13, !dbg !2879, !srcloc !2880
  tail call void asm sideeffect "nop", ""() #13, !dbg !2881, !srcloc !2882
  tail call void asm sideeffect "nop", ""() #13, !dbg !2883, !srcloc !2884
  tail call void asm sideeffect "nop", ""() #13, !dbg !2885, !srcloc !2886
  tail call void asm sideeffect "nop", ""() #13, !dbg !2887, !srcloc !2888
  tail call void asm sideeffect "nop", ""() #13, !dbg !2889, !srcloc !2890
  tail call void asm sideeffect "nop", ""() #13, !dbg !2891, !srcloc !2892
  tail call void asm sideeffect "nop", ""() #13, !dbg !2893, !srcloc !2894
  tail call void asm sideeffect "nop", ""() #13, !dbg !2895, !srcloc !2896
  tail call void asm sideeffect "nop", ""() #13, !dbg !2897, !srcloc !2898
  tail call void asm sideeffect "nop", ""() #13, !dbg !2899, !srcloc !2900
  tail call void asm sideeffect "nop", ""() #13, !dbg !2901, !srcloc !2902
  tail call void asm sideeffect "nop", ""() #13, !dbg !2903, !srcloc !2904
  tail call void asm sideeffect "nop", ""() #13, !dbg !2905, !srcloc !2906
  tail call void asm sideeffect "nop", ""() #13, !dbg !2907, !srcloc !2908
  tail call void asm sideeffect "nop", ""() #13, !dbg !2909, !srcloc !2910
  tail call void asm sideeffect "nop", ""() #13, !dbg !2911, !srcloc !2912
  tail call void asm sideeffect "nop", ""() #13, !dbg !2913, !srcloc !2914
  tail call void asm sideeffect "nop", ""() #13, !dbg !2915, !srcloc !2916
  tail call void asm sideeffect "nop", ""() #13, !dbg !2917, !srcloc !2918
  tail call void asm sideeffect "nop", ""() #13, !dbg !2919, !srcloc !2920
  tail call void asm sideeffect "nop", ""() #13, !dbg !2921, !srcloc !2922
  tail call void asm sideeffect "nop", ""() #13, !dbg !2923, !srcloc !2924
  tail call void asm sideeffect "isb", ""() #13, !dbg !2925, !srcloc !2926
  %7 = load volatile i32, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !2927
  %8 = and i32 %7, -5, !dbg !2927
  store volatile i32 %8, i32* inttoptr (i32 -536810224 to i32*), align 16, !dbg !2927
  %9 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !2928
  %10 = and i32 %9, -1073741825, !dbg !2928
  store volatile i32 %10, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !2928
  ret void, !dbg !2929
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_lp_handle_intr() local_unnamed_addr #0 !dbg !2930 {
  %1 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 31, void (i32)* noundef nonnull @hal_lp_wic_isr) #14, !dbg !2931
  %2 = tail call i32 @hal_nvic_set_priority(i32 noundef 31, i32 noundef 9) #14, !dbg !2932
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 31) #14, !dbg !2933
  ret void, !dbg !2934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @hal_lp_wic_isr(i32 noundef %0) #5 !dbg !2935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2937, metadata !DIExpression()), !dbg !2938
  store volatile i32 1, i32* inttoptr (i32 -2097102036 to i32*), align 4, !dbg !2939
  store i1 true, i1* @hal_lp_wic_wakeup, align 1, !dbg !2940
  ret void, !dbg !2941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i8 @hal_lp_get_wic_wakeup() local_unnamed_addr #8 !dbg !2942 {
  %1 = load i1, i1* @hal_lp_wic_wakeup, align 1, !dbg !2943
  %2 = zext i1 %1 to i8, !dbg !2943
  ret i8 %2, !dbg !2944
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_lp_get_wic_status() local_unnamed_addr #7 !dbg !2945 {
  %1 = load volatile i32, i32* inttoptr (i32 -2097102028 to i32*), align 4, !dbg !2946
  %2 = and i32 %1, -2147483648, !dbg !2947
  ret i32 %2, !dbg !2948
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halPinmuxTopOnPadFunc(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !2949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2955, metadata !DIExpression()), !dbg !2958
  call void @llvm.dbg.value(metadata i8 %1, metadata !2956, metadata !DIExpression()), !dbg !2958
  switch i32 %0, label %187 [
    i32 0, label %3
    i32 1, label %8
    i32 2, label %14
    i32 3, label %20
    i32 4, label %26
    i32 5, label %32
    i32 6, label %38
    i32 7, label %44
    i32 24, label %50
    i32 25, label %55
    i32 26, label %61
    i32 27, label %67
    i32 28, label %75
    i32 29, label %85
    i32 30, label %94
    i32 31, label %102
    i32 32, label %112
    i32 33, label %121
    i32 34, label %127
    i32 35, label %133
    i32 36, label %139
    i32 37, label %145
    i32 38, label %151
    i32 39, label %157
    i32 57, label %163
    i32 58, label %169
    i32 59, label %175
    i32 60, label %181
  ], !dbg !2959

3:                                                ; preds = %2
  %4 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2960
  call void @llvm.dbg.value(metadata i32 %4, metadata !2957, metadata !DIExpression()), !dbg !2958
  %5 = and i32 %4, -16, !dbg !2962
  call void @llvm.dbg.value(metadata i32 %5, metadata !2957, metadata !DIExpression()), !dbg !2958
  %6 = zext i8 %1 to i32, !dbg !2963
  %7 = or i32 %5, %6, !dbg !2964
  store volatile i32 %7, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2965
  br label %187, !dbg !2966

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2967
  call void @llvm.dbg.value(metadata i32 %9, metadata !2957, metadata !DIExpression()), !dbg !2958
  %10 = and i32 %9, -241, !dbg !2968
  call void @llvm.dbg.value(metadata i32 %10, metadata !2957, metadata !DIExpression()), !dbg !2958
  %11 = zext i8 %1 to i32, !dbg !2969
  %12 = shl nuw nsw i32 %11, 4, !dbg !2970
  %13 = or i32 %10, %12, !dbg !2971
  store volatile i32 %13, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2972
  br label %187, !dbg !2973

14:                                               ; preds = %2
  %15 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2974
  call void @llvm.dbg.value(metadata i32 %15, metadata !2957, metadata !DIExpression()), !dbg !2958
  %16 = and i32 %15, -3841, !dbg !2975
  call void @llvm.dbg.value(metadata i32 %16, metadata !2957, metadata !DIExpression()), !dbg !2958
  %17 = zext i8 %1 to i32, !dbg !2976
  %18 = shl nuw nsw i32 %17, 8, !dbg !2977
  %19 = or i32 %16, %18, !dbg !2978
  store volatile i32 %19, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2979
  br label %187, !dbg !2980

20:                                               ; preds = %2
  %21 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2981
  call void @llvm.dbg.value(metadata i32 %21, metadata !2957, metadata !DIExpression()), !dbg !2958
  %22 = and i32 %21, -61441, !dbg !2982
  call void @llvm.dbg.value(metadata i32 %22, metadata !2957, metadata !DIExpression()), !dbg !2958
  %23 = zext i8 %1 to i32, !dbg !2983
  %24 = shl nuw nsw i32 %23, 12, !dbg !2984
  %25 = or i32 %22, %24, !dbg !2985
  store volatile i32 %25, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2986
  br label %187, !dbg !2987

26:                                               ; preds = %2
  %27 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2988
  call void @llvm.dbg.value(metadata i32 %27, metadata !2957, metadata !DIExpression()), !dbg !2958
  %28 = and i32 %27, -983041, !dbg !2989
  call void @llvm.dbg.value(metadata i32 %28, metadata !2957, metadata !DIExpression()), !dbg !2958
  %29 = zext i8 %1 to i32, !dbg !2990
  %30 = shl nuw nsw i32 %29, 16, !dbg !2991
  %31 = or i32 %28, %30, !dbg !2992
  store volatile i32 %31, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2993
  br label %187, !dbg !2994

32:                                               ; preds = %2
  %33 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !2995
  call void @llvm.dbg.value(metadata i32 %33, metadata !2957, metadata !DIExpression()), !dbg !2958
  %34 = and i32 %33, -15728641, !dbg !2996
  call void @llvm.dbg.value(metadata i32 %34, metadata !2957, metadata !DIExpression()), !dbg !2958
  %35 = zext i8 %1 to i32, !dbg !2997
  %36 = shl nuw nsw i32 %35, 20, !dbg !2998
  %37 = or i32 %34, %36, !dbg !2999
  store volatile i32 %37, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !3000
  br label %187, !dbg !3001

38:                                               ; preds = %2
  %39 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !3002
  call void @llvm.dbg.value(metadata i32 %39, metadata !2957, metadata !DIExpression()), !dbg !2958
  %40 = and i32 %39, -251658241, !dbg !3003
  call void @llvm.dbg.value(metadata i32 %40, metadata !2957, metadata !DIExpression()), !dbg !2958
  %41 = zext i8 %1 to i32, !dbg !3004
  %42 = shl nuw i32 %41, 24, !dbg !3005
  %43 = or i32 %40, %42, !dbg !3006
  store volatile i32 %43, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !3007
  br label %187, !dbg !3008

44:                                               ; preds = %2
  %45 = load volatile i32, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !3009
  call void @llvm.dbg.value(metadata i32 %45, metadata !2957, metadata !DIExpression()), !dbg !2958
  %46 = and i32 %45, 268435455, !dbg !3010
  call void @llvm.dbg.value(metadata i32 %46, metadata !2957, metadata !DIExpression()), !dbg !2958
  %47 = zext i8 %1 to i32, !dbg !3011
  %48 = shl i32 %47, 28, !dbg !3012
  %49 = or i32 %46, %48, !dbg !3013
  store volatile i32 %49, i32* inttoptr (i32 -2130563040 to i32*), align 32, !dbg !3014
  br label %187, !dbg !3015

50:                                               ; preds = %2
  %51 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3016
  call void @llvm.dbg.value(metadata i32 %51, metadata !2957, metadata !DIExpression()), !dbg !2958
  %52 = and i32 %51, -16, !dbg !3017
  call void @llvm.dbg.value(metadata i32 %52, metadata !2957, metadata !DIExpression()), !dbg !2958
  %53 = zext i8 %1 to i32, !dbg !3018
  %54 = or i32 %52, %53, !dbg !3019
  store volatile i32 %54, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3020
  br label %187, !dbg !3021

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3022
  call void @llvm.dbg.value(metadata i32 %56, metadata !2957, metadata !DIExpression()), !dbg !2958
  %57 = and i32 %56, -241, !dbg !3023
  call void @llvm.dbg.value(metadata i32 %57, metadata !2957, metadata !DIExpression()), !dbg !2958
  %58 = zext i8 %1 to i32, !dbg !3024
  %59 = shl nuw nsw i32 %58, 4, !dbg !3025
  %60 = or i32 %57, %59, !dbg !3026
  store volatile i32 %60, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3027
  br label %187, !dbg !3028

61:                                               ; preds = %2
  %62 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3029
  call void @llvm.dbg.value(metadata i32 %62, metadata !2957, metadata !DIExpression()), !dbg !2958
  %63 = and i32 %62, -3841, !dbg !3030
  call void @llvm.dbg.value(metadata i32 %63, metadata !2957, metadata !DIExpression()), !dbg !2958
  %64 = zext i8 %1 to i32, !dbg !3031
  %65 = shl nuw nsw i32 %64, 8, !dbg !3032
  %66 = or i32 %63, %65, !dbg !3033
  store volatile i32 %66, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3034
  br label %187, !dbg !3035

67:                                               ; preds = %2
  %68 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3036
  call void @llvm.dbg.value(metadata i32 %68, metadata !2957, metadata !DIExpression()), !dbg !2958
  %69 = and i32 %68, -61441, !dbg !3037
  call void @llvm.dbg.value(metadata i32 %69, metadata !2957, metadata !DIExpression()), !dbg !2958
  %70 = zext i8 %1 to i32, !dbg !3038
  %71 = shl nuw nsw i32 %70, 12, !dbg !3039
  %72 = or i32 %69, %71, !dbg !3040
  store volatile i32 %72, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3041
  switch i8 %1, label %187 [
    i8 5, label %73
    i8 4, label %73
    i8 2, label %73
  ], !dbg !3042

73:                                               ; preds = %67, %67, %67
  %74 = tail call i32 @halGPIO_ConfDirection(i32 noundef 27, i8 noundef zeroext 0) #14, !dbg !3044
  br label %187, !dbg !3046

75:                                               ; preds = %2
  %76 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3047
  call void @llvm.dbg.value(metadata i32 %76, metadata !2957, metadata !DIExpression()), !dbg !2958
  %77 = and i32 %76, -983041, !dbg !3048
  call void @llvm.dbg.value(metadata i32 %77, metadata !2957, metadata !DIExpression()), !dbg !2958
  %78 = zext i8 %1 to i32, !dbg !3049
  %79 = shl nuw nsw i32 %78, 16, !dbg !3050
  %80 = or i32 %77, %79, !dbg !3051
  store volatile i32 %80, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3052
  %81 = and i8 %1, -2, !dbg !3053
  %82 = icmp eq i8 %81, 4, !dbg !3053
  br i1 %82, label %83, label %187, !dbg !3053

83:                                               ; preds = %75
  %84 = tail call i32 @halGPIO_ConfDirection(i32 noundef 28, i8 noundef zeroext 0) #14, !dbg !3055
  br label %187, !dbg !3057

85:                                               ; preds = %2
  %86 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3058
  call void @llvm.dbg.value(metadata i32 %86, metadata !2957, metadata !DIExpression()), !dbg !2958
  %87 = and i32 %86, -15728641, !dbg !3059
  call void @llvm.dbg.value(metadata i32 %87, metadata !2957, metadata !DIExpression()), !dbg !2958
  %88 = zext i8 %1 to i32, !dbg !3060
  %89 = shl nuw nsw i32 %88, 20, !dbg !3061
  %90 = or i32 %87, %89, !dbg !3062
  store volatile i32 %90, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3063
  %91 = icmp eq i8 %1, 6, !dbg !3064
  br i1 %91, label %92, label %187, !dbg !3066

92:                                               ; preds = %85
  %93 = tail call i32 @halGPIO_ConfDirection(i32 noundef 29, i8 noundef zeroext 0) #14, !dbg !3067
  br label %187, !dbg !3069

94:                                               ; preds = %2
  %95 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3070
  call void @llvm.dbg.value(metadata i32 %95, metadata !2957, metadata !DIExpression()), !dbg !2958
  %96 = and i32 %95, -251658241, !dbg !3071
  call void @llvm.dbg.value(metadata i32 %96, metadata !2957, metadata !DIExpression()), !dbg !2958
  %97 = zext i8 %1 to i32, !dbg !3072
  %98 = shl nuw i32 %97, 24, !dbg !3073
  %99 = or i32 %96, %98, !dbg !3074
  store volatile i32 %99, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3075
  switch i8 %1, label %187 [
    i8 7, label %100
    i8 4, label %100
  ], !dbg !3076

100:                                              ; preds = %94, %94
  %101 = tail call i32 @halGPIO_ConfDirection(i32 noundef 30, i8 noundef zeroext 0) #14, !dbg !3078
  br label %187, !dbg !3080

102:                                              ; preds = %2
  %103 = load volatile i32, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3081
  call void @llvm.dbg.value(metadata i32 %103, metadata !2957, metadata !DIExpression()), !dbg !2958
  %104 = and i32 %103, 268435455, !dbg !3082
  call void @llvm.dbg.value(metadata i32 %104, metadata !2957, metadata !DIExpression()), !dbg !2958
  %105 = zext i8 %1 to i32, !dbg !3083
  %106 = shl i32 %105, 28, !dbg !3084
  %107 = or i32 %104, %106, !dbg !3085
  store volatile i32 %107, i32* inttoptr (i32 -2130563028 to i32*), align 4, !dbg !3086
  %108 = and i8 %1, -3, !dbg !3087
  %109 = icmp eq i8 %108, 4, !dbg !3087
  br i1 %109, label %110, label %187, !dbg !3087

110:                                              ; preds = %102
  %111 = tail call i32 @halGPIO_ConfDirection(i32 noundef 31, i8 noundef zeroext 0) #14, !dbg !3089
  br label %187, !dbg !3091

112:                                              ; preds = %2
  %113 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3092
  call void @llvm.dbg.value(metadata i32 %113, metadata !2957, metadata !DIExpression()), !dbg !2958
  %114 = and i32 %113, -16, !dbg !3093
  call void @llvm.dbg.value(metadata i32 %114, metadata !2957, metadata !DIExpression()), !dbg !2958
  %115 = zext i8 %1 to i32, !dbg !3094
  %116 = or i32 %114, %115, !dbg !3095
  store volatile i32 %116, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3096
  %117 = and i8 %1, -3, !dbg !3097
  %118 = icmp eq i8 %117, 4, !dbg !3097
  br i1 %118, label %119, label %187, !dbg !3097

119:                                              ; preds = %112
  %120 = tail call i32 @halGPIO_ConfDirection(i32 noundef 32, i8 noundef zeroext 0) #14, !dbg !3099
  br label %187, !dbg !3101

121:                                              ; preds = %2
  %122 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3102
  call void @llvm.dbg.value(metadata i32 %122, metadata !2957, metadata !DIExpression()), !dbg !2958
  %123 = and i32 %122, -241, !dbg !3103
  call void @llvm.dbg.value(metadata i32 %123, metadata !2957, metadata !DIExpression()), !dbg !2958
  %124 = zext i8 %1 to i32, !dbg !3104
  %125 = shl nuw nsw i32 %124, 4, !dbg !3105
  %126 = or i32 %123, %125, !dbg !3106
  store volatile i32 %126, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3107
  br label %187, !dbg !3108

127:                                              ; preds = %2
  %128 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3109
  call void @llvm.dbg.value(metadata i32 %128, metadata !2957, metadata !DIExpression()), !dbg !2958
  %129 = and i32 %128, -3841, !dbg !3110
  call void @llvm.dbg.value(metadata i32 %129, metadata !2957, metadata !DIExpression()), !dbg !2958
  %130 = zext i8 %1 to i32, !dbg !3111
  %131 = shl nuw nsw i32 %130, 8, !dbg !3112
  %132 = or i32 %129, %131, !dbg !3113
  store volatile i32 %132, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3114
  br label %187, !dbg !3115

133:                                              ; preds = %2
  %134 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3116
  call void @llvm.dbg.value(metadata i32 %134, metadata !2957, metadata !DIExpression()), !dbg !2958
  %135 = and i32 %134, -61441, !dbg !3117
  call void @llvm.dbg.value(metadata i32 %135, metadata !2957, metadata !DIExpression()), !dbg !2958
  %136 = zext i8 %1 to i32, !dbg !3118
  %137 = shl nuw nsw i32 %136, 12, !dbg !3119
  %138 = or i32 %135, %137, !dbg !3120
  store volatile i32 %138, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3121
  br label %187, !dbg !3122

139:                                              ; preds = %2
  %140 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3123
  call void @llvm.dbg.value(metadata i32 %140, metadata !2957, metadata !DIExpression()), !dbg !2958
  %141 = and i32 %140, -983041, !dbg !3124
  call void @llvm.dbg.value(metadata i32 %141, metadata !2957, metadata !DIExpression()), !dbg !2958
  %142 = zext i8 %1 to i32, !dbg !3125
  %143 = shl nuw nsw i32 %142, 16, !dbg !3126
  %144 = or i32 %141, %143, !dbg !3127
  store volatile i32 %144, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3128
  br label %187, !dbg !3129

145:                                              ; preds = %2
  %146 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3130
  call void @llvm.dbg.value(metadata i32 %146, metadata !2957, metadata !DIExpression()), !dbg !2958
  %147 = and i32 %146, -15728641, !dbg !3131
  call void @llvm.dbg.value(metadata i32 %147, metadata !2957, metadata !DIExpression()), !dbg !2958
  %148 = zext i8 %1 to i32, !dbg !3132
  %149 = shl nuw nsw i32 %148, 20, !dbg !3133
  %150 = or i32 %147, %149, !dbg !3134
  store volatile i32 %150, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3135
  br label %187, !dbg !3136

151:                                              ; preds = %2
  %152 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3137
  call void @llvm.dbg.value(metadata i32 %152, metadata !2957, metadata !DIExpression()), !dbg !2958
  %153 = and i32 %152, -251658241, !dbg !3138
  call void @llvm.dbg.value(metadata i32 %153, metadata !2957, metadata !DIExpression()), !dbg !2958
  %154 = zext i8 %1 to i32, !dbg !3139
  %155 = shl nuw i32 %154, 24, !dbg !3140
  %156 = or i32 %153, %155, !dbg !3141
  store volatile i32 %156, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3142
  br label %187, !dbg !3143

157:                                              ; preds = %2
  %158 = load volatile i32, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3144
  call void @llvm.dbg.value(metadata i32 %158, metadata !2957, metadata !DIExpression()), !dbg !2958
  %159 = and i32 %158, 268435455, !dbg !3145
  call void @llvm.dbg.value(metadata i32 %159, metadata !2957, metadata !DIExpression()), !dbg !2958
  %160 = zext i8 %1 to i32, !dbg !3146
  %161 = shl i32 %160, 28, !dbg !3147
  %162 = or i32 %159, %161, !dbg !3148
  store volatile i32 %162, i32* inttoptr (i32 -2130563024 to i32*), align 16, !dbg !3149
  br label %187, !dbg !3150

163:                                              ; preds = %2
  %164 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !3151
  call void @llvm.dbg.value(metadata i32 %164, metadata !2957, metadata !DIExpression()), !dbg !2958
  %165 = and i32 %164, -241, !dbg !3152
  call void @llvm.dbg.value(metadata i32 %165, metadata !2957, metadata !DIExpression()), !dbg !2958
  %166 = zext i8 %1 to i32, !dbg !3153
  %167 = shl nuw nsw i32 %166, 4, !dbg !3154
  %168 = or i32 %165, %167, !dbg !3155
  store volatile i32 %168, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !3156
  br label %187, !dbg !3157

169:                                              ; preds = %2
  %170 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !3158
  call void @llvm.dbg.value(metadata i32 %170, metadata !2957, metadata !DIExpression()), !dbg !2958
  %171 = and i32 %170, -3841, !dbg !3159
  call void @llvm.dbg.value(metadata i32 %171, metadata !2957, metadata !DIExpression()), !dbg !2958
  %172 = zext i8 %1 to i32, !dbg !3160
  %173 = shl nuw nsw i32 %172, 8, !dbg !3161
  %174 = or i32 %171, %173, !dbg !3162
  store volatile i32 %174, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !3163
  br label %187, !dbg !3164

175:                                              ; preds = %2
  %176 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !3165
  call void @llvm.dbg.value(metadata i32 %176, metadata !2957, metadata !DIExpression()), !dbg !2958
  %177 = and i32 %176, -61441, !dbg !3166
  call void @llvm.dbg.value(metadata i32 %177, metadata !2957, metadata !DIExpression()), !dbg !2958
  %178 = zext i8 %1 to i32, !dbg !3167
  %179 = shl nuw nsw i32 %178, 12, !dbg !3168
  %180 = or i32 %177, %179, !dbg !3169
  store volatile i32 %180, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !3170
  br label %187, !dbg !3171

181:                                              ; preds = %2
  %182 = load volatile i32, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !3172
  call void @llvm.dbg.value(metadata i32 %182, metadata !2957, metadata !DIExpression()), !dbg !2958
  %183 = and i32 %182, -983041, !dbg !3173
  call void @llvm.dbg.value(metadata i32 %183, metadata !2957, metadata !DIExpression()), !dbg !2958
  %184 = zext i8 %1 to i32, !dbg !3174
  %185 = shl nuw nsw i32 %184, 16, !dbg !3175
  %186 = or i32 %183, %185, !dbg !3176
  store volatile i32 %186, i32* inttoptr (i32 -2130563012 to i32*), align 4, !dbg !3177
  br label %187, !dbg !3178

187:                                              ; preds = %94, %67, %2, %119, %112, %110, %102, %100, %85, %92, %83, %75, %73, %181, %175, %169, %163, %157, %151, %145, %139, %133, %127, %121, %61, %55, %50, %44, %38, %32, %26, %20, %14, %8, %3
  ret void, !dbg !3179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NVIC_SetupVectorTable(i32 noundef %0) local_unnamed_addr #0 !dbg !3180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3184, metadata !DIExpression()), !dbg !3185
  store volatile i32 %0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !3186
  tail call void asm sideeffect "dsb", ""() #13, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect "isb", ""() #13, !dbg !3189, !srcloc !3190
  ret void, !dbg !3191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @NVIC_SWInt(i32 noundef %0) local_unnamed_addr #5 !dbg !3192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3196, metadata !DIExpression()), !dbg !3197
  store volatile i32 %0, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !3198
  ret void, !dbg !3199
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".ramTEXT" !dbg !3200 {
  %1 = tail call i32 asm sideeffect "MRS $0, primask", "=r"() #13, !dbg !3203, !srcloc !3210
  call void @llvm.dbg.value(metadata i32 %1, metadata !3207, metadata !DIExpression()) #13, !dbg !3211
  call void @llvm.dbg.value(metadata i32 %1, metadata !3202, metadata !DIExpression()), !dbg !3212
  tail call void asm sideeffect "cpsid i", "~{memory}"() #13, !dbg !3213, !srcloc !3216
  ret i32 %1, !dbg !3217
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3220, metadata !DIExpression()), !dbg !3221
  call void @llvm.dbg.value(metadata i32 %0, metadata !3222, metadata !DIExpression()) #13, !dbg !3225
  tail call void asm sideeffect "MSR primask, $0", "r,~{memory}"(i32 %0) #13, !dbg !3228, !srcloc !3229
  ret void, !dbg !3230
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinmux_config(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !3231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3235, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.value(metadata i32 %1, metadata !3236, metadata !DIExpression()), !dbg !3238
  switch i32 %0, label %5 [
    i32 0, label %3
    i32 1, label %3
    i32 2, label %3
    i32 3, label %3
    i32 4, label %3
    i32 5, label %3
    i32 6, label %3
    i32 7, label %3
    i32 24, label %3
    i32 25, label %3
    i32 26, label %3
    i32 27, label %3
    i32 28, label %3
    i32 29, label %3
    i32 30, label %3
    i32 31, label %3
    i32 32, label %3
    i32 33, label %3
    i32 34, label %3
    i32 35, label %3
    i32 36, label %3
    i32 37, label %3
    i32 38, label %3
    i32 39, label %3
    i32 57, label %3
    i32 58, label %3
    i32 59, label %3
    i32 60, label %3
  ], !dbg !3239

3:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  call void @llvm.dbg.value(metadata i32 %0, metadata !3237, metadata !DIExpression()), !dbg !3238
  %4 = trunc i32 %1 to i8, !dbg !3240
  tail call void @halPinmuxTopOnPadFunc(i32 noundef %0, i8 noundef zeroext %4) #14, !dbg !3241
  br label %5, !dbg !3242

5:                                                ; preds = %2, %3
  %6 = phi i32 [ 0, %3 ], [ -1, %2 ], !dbg !3238
  ret i32 %6, !dbg !3243
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GPT_return_current_count() local_unnamed_addr #7 section ".ramTEXT" !dbg !3244 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096824268 to i32*), align 4, !dbg !3249
  call void @llvm.dbg.value(metadata i32 %1, metadata !3248, metadata !DIExpression()), !dbg !3250
  ret i32 %1, !dbg !3251
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_get_systime() local_unnamed_addr #7 section ".ramTEXT" !dbg !3252 {
  %1 = tail call i32 @sfc_GPT_return_current_count() #16, !dbg !3253
  ret i32 %1, !dbg !3254
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_time(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !3255 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3257, metadata !DIExpression()), !dbg !3260
  %2 = tail call i32 @sfc_get_systime() #16, !dbg !3261
  %3 = add i32 %2, %0, !dbg !3262
  %4 = xor i32 %3, -1, !dbg !3263
  call void @llvm.dbg.value(metadata i32 %3, metadata !3258, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3260
  %5 = tail call i32 @sfc_get_systime() #16, !dbg !3264
  call void @llvm.dbg.value(metadata i32 %5, metadata !3259, metadata !DIExpression()), !dbg !3260
  %6 = add i32 %5, %4, !dbg !3265
  %7 = icmp slt i32 %6, 0, !dbg !3265
  br i1 %7, label %8, label %12, !dbg !3266

8:                                                ; preds = %1, %8
  %9 = tail call i32 @sfc_get_systime() #16, !dbg !3267
  call void @llvm.dbg.value(metadata i32 %9, metadata !3259, metadata !DIExpression()), !dbg !3260
  %10 = add i32 %9, %4, !dbg !3265
  %11 = icmp slt i32 %10, 0, !dbg !3265
  br i1 %11, label %8, label %12, !dbg !3266, !llvm.loop !3269

12:                                               ; preds = %8, %1
  ret void, !dbg !3271
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_delay_ms(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !3272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3274, metadata !DIExpression()), !dbg !3275
  %2 = shl i32 %0, 5, !dbg !3276
  tail call void @sfc_delay_time(i32 noundef %2) #16, !dbg !3277
  ret void, !dbg !3278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfc_getMaxGPRamSize() local_unnamed_addr #9 section ".ramTEXT" !dbg !3279 {
  ret i32 128, !dbg !3282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_Init(i32 noundef %0) local_unnamed_addr #5 section ".ramTEXT" !dbg !3283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3285, metadata !DIExpression()), !dbg !3287
  store i32 0, i32* @g_sfc_security_enable, align 4, !dbg !3288
  store volatile i32 65536, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3289
  store volatile i32 185300880, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3290
  store volatile i32 -1296039920, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3291
  store volatile i32 0, i32* inttoptr (i32 -2096693236 to i32*), align 4, !dbg !3292
  store volatile i32 0, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !3293
  store volatile i32 0, i32* inttoptr (i32 -2096693220 to i32*), align 4, !dbg !3294
  %2 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3295
  call void @llvm.dbg.value(metadata i32 %2, metadata !3286, metadata !DIExpression()), !dbg !3287
  %3 = and i32 %2, -4194305, !dbg !3296
  call void @llvm.dbg.value(metadata i32 %3, metadata !3286, metadata !DIExpression()), !dbg !3287
  store volatile i32 %3, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3297
  tail call void @sfc_delay_ms(i32 noundef 1) #16, !dbg !3298
  %4 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3299
  call void @llvm.dbg.value(metadata i32 %4, metadata !3286, metadata !DIExpression()), !dbg !3287
  %5 = or i32 %4, 4194304, !dbg !3300
  call void @llvm.dbg.value(metadata i32 %5, metadata !3286, metadata !DIExpression()), !dbg !3287
  store volatile i32 %5, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3301
  tail call void @sfc_delay_ms(i32 noundef 1) #16, !dbg !3302
  %6 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3303
  call void @llvm.dbg.value(metadata i32 %6, metadata !3286, metadata !DIExpression()), !dbg !3287
  %7 = and i32 %6, -4194305, !dbg !3304
  call void @llvm.dbg.value(metadata i32 %7, metadata !3286, metadata !DIExpression()), !dbg !3287
  store volatile i32 %7, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3305
  tail call void @sfc_delay_ms(i32 noundef 1) #16, !dbg !3306
  %8 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3307
  call void @llvm.dbg.value(metadata i32 %8, metadata !3286, metadata !DIExpression()), !dbg !3287
  %9 = or i32 %8, 4194304, !dbg !3308
  call void @llvm.dbg.value(metadata i32 %9, metadata !3286, metadata !DIExpression()), !dbg !3287
  store volatile i32 %9, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !3309
  tail call void @sfc_delay_ms(i32 noundef 1) #16, !dbg !3310
  %10 = icmp eq i32 %0, 0, !dbg !3311
  br i1 %10, label %12, label %11, !dbg !3313

11:                                               ; preds = %1
  store i32 1, i32* @g_sfc_security_enable, align 4, !dbg !3314
  store volatile i32 268435456, i32* inttoptr (i32 -2096660480 to i32*), align 32768, !dbg !3316
  store volatile i32 268435456, i32* inttoptr (i32 -2096660476 to i32*), align 4, !dbg !3317
  store volatile i32 3, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !3318
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !3319
  store volatile i32 135, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !3320
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !3321
  store volatile i32 69632, i32* inttoptr (i32 -2096660460 to i32*), align 4, !dbg !3322
  br label %12, !dbg !3323

12:                                               ; preds = %11, %1
  ret void, !dbg !3324
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @sfc_GetDirectMode() local_unnamed_addr #7 section ".ramTEXT" !dbg !3325 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3329
  call void @llvm.dbg.value(metadata i32 %1, metadata !3327, metadata !DIExpression(DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !3330
  %2 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3331
  %3 = lshr i32 %2, 4, !dbg !3332
  %4 = and i32 %3, 7, !dbg !3332
  call void @llvm.dbg.value(metadata i32 %4, metadata !3328, metadata !DIExpression()), !dbg !3330
  %5 = icmp ne i32 %4, 7, !dbg !3333
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  %8 = select i1 %5, i1 %7, i1 false, !dbg !3335
  call void @llvm.dbg.value(metadata i32 %6, metadata !3327, metadata !DIExpression()), !dbg !3330
  %9 = icmp ult i32 %4, 2, !dbg !3335
  %10 = zext i1 %9 to i32, !dbg !3335
  %11 = select i1 %8, i32 %10, i32 3, !dbg !3335
  ret i32 %11, !dbg !3336
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_direct_read_setup(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 section ".ramTEXT" !dbg !3337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3341, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i32 %1, metadata !3342, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.value(metadata i32 0, metadata !3343, metadata !DIExpression()), !dbg !3344
  %3 = add i32 %1, -1, !dbg !3345
  %4 = icmp ult i32 %3, 3, !dbg !3345
  br i1 %4, label %5, label %8, !dbg !3345

5:                                                ; preds = %2
  %6 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.sfc_direct_read_setup, i32 0, i32 %3, !dbg !3345
  %7 = load i32, i32* %6, align 4, !dbg !3345
  br label %8, !dbg !3345

8:                                                ; preds = %5, %2
  %9 = phi i32 [ 0, %2 ], [ %7, %5 ], !dbg !3344
  call void @llvm.dbg.value(metadata i32 %9, metadata !3343, metadata !DIExpression()), !dbg !3344
  %10 = or i32 %9, %0, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %10, metadata !3343, metadata !DIExpression()), !dbg !3344
  store volatile i32 %10, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3347
  ret void, !dbg !3348
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sfc_Command_List(i8* noundef readonly %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3349 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3353, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i32 0, metadata !3354, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i32 0, metadata !3356, metadata !DIExpression()), !dbg !3357
  %2 = icmp eq i8* %0, null, !dbg !3358
  br i1 %2, label %25, label %3, !dbg !3360

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3361
  call void @llvm.dbg.value(metadata i32 %4, metadata !3355, metadata !DIExpression()), !dbg !3357
  br label %5, !dbg !3362

5:                                                ; preds = %12, %3
  %6 = phi i32 [ 0, %3 ], [ %23, %12 ], !dbg !3357
  %7 = phi i32 [ 0, %3 ], [ %13, %12 ], !dbg !3357
  call void @llvm.dbg.value(metadata i32 %7, metadata !3356, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.value(metadata i32 %6, metadata !3354, metadata !DIExpression()), !dbg !3357
  %8 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !3363
  %9 = load i8, i8* %8, align 1, !dbg !3363
  switch i8 %9, label %11 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %10
  ], !dbg !3365

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 1, metadata !3356, metadata !DIExpression()), !dbg !3357
  br label %12, !dbg !3366

11:                                               ; preds = %5
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3368
  br label %25, !dbg !3369

12:                                               ; preds = %5, %5, %10
  %13 = phi i32 [ 1, %10 ], [ %7, %5 ], [ %7, %5 ], !dbg !3357
  call void @llvm.dbg.value(metadata i32 %13, metadata !3356, metadata !DIExpression()), !dbg !3357
  %14 = add i32 %6, 2, !dbg !3370
  %15 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !3371
  %16 = add i32 %6, 1, !dbg !3372
  %17 = getelementptr inbounds i8, i8* %0, i32 %16, !dbg !3373
  %18 = load i8, i8* %17, align 1, !dbg !3373
  %19 = zext i8 %18 to i32, !dbg !3373
  %20 = tail call i32 @sfc_transfer(i8* noundef nonnull %15, i32 noundef %19, i8* noundef null, i32 noundef 0, i32 noundef %13) #16, !dbg !3374
  %21 = load i8, i8* %17, align 1, !dbg !3375
  %22 = zext i8 %21 to i32, !dbg !3375
  %23 = add i32 %14, %22, !dbg !3376
  call void @llvm.dbg.value(metadata i32 %23, metadata !3354, metadata !DIExpression()), !dbg !3357
  %24 = tail call i32 @flash_wait_ready(i32 noundef 1) #14, !dbg !3377
  br label %5, !dbg !3362, !llvm.loop !3378

25:                                               ; preds = %1, %11
  ret void, !dbg !3380
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_transfer(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !3381 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3386, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 %1, metadata !3387, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i8* %2, metadata !3388, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 %3, metadata !3389, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 %4, metadata !3390, metadata !DIExpression()), !dbg !3397
  %7 = bitcast i32* %6 to i8*, !dbg !3398
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13, !dbg !3398
  %8 = add i32 %3, %1, !dbg !3399
  %9 = icmp ugt i32 %8, 160, !dbg !3401
  br i1 %9, label %59, label %10, !dbg !3402

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !3394, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 0, metadata !3392, metadata !DIExpression()), !dbg !3397
  %11 = icmp eq i32 %1, 0, !dbg !3403
  br i1 %11, label %41, label %12, !dbg !3406

12:                                               ; preds = %10, %38
  %13 = phi i8* [ %39, %38 ], [ inttoptr (i32 -2096691200 to i8*), %10 ]
  %14 = phi i32 [ %31, %38 ], [ 0, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !3394, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 %14, metadata !3392, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 0, metadata !3393, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 0, metadata !3391, metadata !DIExpression()), !dbg !3397
  store i32 0, i32* %6, align 4, !dbg !3407
  call void @llvm.dbg.value(metadata i32 0, metadata !3393, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 %14, metadata !3392, metadata !DIExpression()), !dbg !3397
  %15 = icmp ult i32 %14, %1, !dbg !3410
  br i1 %15, label %16, label %29, !dbg !3412

16:                                               ; preds = %12, %16
  %17 = phi i32 [ %23, %16 ], [ 0, %12 ]
  %18 = phi i32 [ %22, %16 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !3393, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 %18, metadata !3392, metadata !DIExpression()), !dbg !3397
  %19 = getelementptr inbounds i8, i8* %0, i32 %18, !dbg !3413
  %20 = load i8, i8* %19, align 1, !dbg !3413
  %21 = getelementptr inbounds i8, i8* %7, i32 %17, !dbg !3415
  store i8 %20, i8* %21, align 1, !dbg !3416
  %22 = add nuw i32 %18, 1, !dbg !3417
  call void @llvm.dbg.value(metadata i32 %22, metadata !3392, metadata !DIExpression()), !dbg !3397
  %23 = add nuw nsw i32 %17, 1, !dbg !3418
  call void @llvm.dbg.value(metadata i32 %23, metadata !3393, metadata !DIExpression()), !dbg !3397
  %24 = icmp ult i32 %22, %1, !dbg !3410
  %25 = icmp ult i32 %17, 3, !dbg !3419
  %26 = select i1 %24, i1 %25, i1 false, !dbg !3419
  br i1 %26, label %16, label %27, !dbg !3412, !llvm.loop !3420

27:                                               ; preds = %16
  %28 = load i32, i32* %6, align 4, !dbg !3422
  br label %29, !dbg !3422

29:                                               ; preds = %27, %12
  %30 = phi i32 [ 0, %12 ], [ %28, %27 ], !dbg !3422
  %31 = phi i32 [ %14, %12 ], [ %22, %27 ], !dbg !3423
  call void @llvm.dbg.value(metadata i32 %30, metadata !3391, metadata !DIExpression()), !dbg !3397
  %32 = bitcast i8* %13 to i32*, !dbg !3422
  store volatile i32 %30, i32* %32, align 4, !dbg !3422
  %33 = icmp eq i32 %31, 4, !dbg !3424
  %34 = load i32, i32* @g_sfc_security_enable, align 4
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %33, i1 %35, i1 false, !dbg !3426
  br i1 %36, label %37, label %38, !dbg !3426

37:                                               ; preds = %29
  store volatile i32 64, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !3427
  store volatile i32 256, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !3429
  br label %38, !dbg !3430

38:                                               ; preds = %29, %37
  %39 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !3431
  call void @llvm.dbg.value(metadata i8* %39, metadata !3394, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 %31, metadata !3392, metadata !DIExpression()), !dbg !3397
  %40 = icmp ult i32 %31, %1, !dbg !3403
  br i1 %40, label %12, label %41, !dbg !3406, !llvm.loop !3432

41:                                               ; preds = %38, %10
  %42 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !3434
  call void @llvm.dbg.value(metadata i32 %42, metadata !3396, metadata !DIExpression()), !dbg !3397
  %43 = load i32, i32* @g_sfc_security_enable, align 4, !dbg !3435
  %44 = icmp eq i32 %43, 0, !dbg !3435
  br i1 %44, label %46, label %45, !dbg !3437

45:                                               ; preds = %41
  store volatile i32 0, i32* inttoptr (i32 -2096660472 to i32*), align 8, !dbg !3438
  store volatile i32 0, i32* inttoptr (i32 -2096660468 to i32*), align 4, !dbg !3440
  br label %46, !dbg !3441

46:                                               ; preds = %45, %41
  store volatile i32 %1, i32* inttoptr (i32 -2096693232 to i32*), align 16, !dbg !3442
  store volatile i32 %3, i32* inttoptr (i32 -2096693228 to i32*), align 4, !dbg !3443
  tail call fastcc void @sfc_MacEnable(i32 noundef %4) #16, !dbg !3444
  tail call fastcc void @sfc_MacWaitReady() #16, !dbg !3445
  tail call void @restore_interrupt_mask(i32 noundef %42) #14, !dbg !3446
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -2096691200 to i8*), i32 %1), metadata !3394, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3397
  call void @llvm.dbg.value(metadata i8* %2, metadata !3388, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 0, metadata !3392, metadata !DIExpression()), !dbg !3397
  %47 = icmp eq i32 %3, 0, !dbg !3447
  br i1 %47, label %59, label %48, !dbg !3450

48:                                               ; preds = %46
  %49 = getelementptr inbounds i8, i8* inttoptr (i32 -2096691200 to i8*), i32 %1, !dbg !3451
  call void @llvm.dbg.value(metadata i8* %49, metadata !3394, metadata !DIExpression()), !dbg !3397
  br label %50, !dbg !3450

50:                                               ; preds = %48, %50
  %51 = phi i8* [ %56, %50 ], [ %2, %48 ]
  %52 = phi i8* [ %57, %50 ], [ %49, %48 ]
  %53 = phi i32 [ %55, %50 ], [ 0, %48 ]
  call void @llvm.dbg.value(metadata i8* %51, metadata !3388, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i8* %52, metadata !3394, metadata !DIExpression()), !dbg !3397
  call void @llvm.dbg.value(metadata i32 %53, metadata !3392, metadata !DIExpression()), !dbg !3397
  %54 = load volatile i8, i8* %52, align 1, !dbg !3452
  store i8 %54, i8* %51, align 1, !dbg !3454
  %55 = add nuw i32 %53, 1, !dbg !3455
  call void @llvm.dbg.value(metadata i32 %55, metadata !3392, metadata !DIExpression()), !dbg !3397
  %56 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !3456
  call void @llvm.dbg.value(metadata i8* %56, metadata !3388, metadata !DIExpression()), !dbg !3397
  %57 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !3457
  call void @llvm.dbg.value(metadata i8* %57, metadata !3394, metadata !DIExpression()), !dbg !3397
  %58 = icmp eq i32 %55, %3, !dbg !3447
  br i1 %58, label %59, label %50, !dbg !3450, !llvm.loop !3458

59:                                               ; preds = %50, %46, %5
  %60 = phi i32 [ -1, %5 ], [ 0, %46 ], [ %3, %50 ], !dbg !3397
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13, !dbg !3460
  ret i32 %60, !dbg !3460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacEnable(i32 noundef %0) unnamed_addr #5 section ".ramTEXT" !dbg !3461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3463, metadata !DIExpression()), !dbg !3465
  %2 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3466
  call void @llvm.dbg.value(metadata i32 %2, metadata !3464, metadata !DIExpression()), !dbg !3465
  %3 = load volatile i32, i32* inttoptr (i32 -2096693244 to i32*), align 4, !dbg !3467
  %4 = and i32 %3, 1, !dbg !3467
  %5 = or i32 %4, %0, !dbg !3469
  %6 = icmp eq i32 %5, 0, !dbg !3469
  %7 = or i32 %2, 16
  %8 = select i1 %6, i32 %2, i32 %7, !dbg !3469
  call void @llvm.dbg.value(metadata i32 %8, metadata !3464, metadata !DIExpression()), !dbg !3465
  %9 = or i32 %8, 8, !dbg !3470
  call void @llvm.dbg.value(metadata i32 %9, metadata !3464, metadata !DIExpression()), !dbg !3465
  store volatile i32 %9, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3471
  ret void, !dbg !3472
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacWaitReady() unnamed_addr #5 section ".ramTEXT" !dbg !3473 {
  tail call fastcc void @sfc_MacTrigger() #16, !dbg !3474
  tail call fastcc void @sfc_MacLeave() #16, !dbg !3475
  ret void, !dbg !3476
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacTrigger() unnamed_addr #5 section ".ramTEXT" !dbg !3477 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3481, metadata !DIExpression()), !dbg !3483
  call void @llvm.dbg.value(metadata i32 0, metadata !3482, metadata !DIExpression()), !dbg !3483
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3484
  call void @llvm.dbg.value(metadata i32 %1, metadata !3481, metadata !DIExpression()), !dbg !3483
  %2 = or i32 %1, 12, !dbg !3485
  call void @llvm.dbg.value(metadata i32 %2, metadata !3481, metadata !DIExpression()), !dbg !3483
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3486
  br label %3, !dbg !3487

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3488
  %5 = and i32 %4, 2, !dbg !3489
  %6 = icmp eq i32 %5, 0, !dbg !3490
  br i1 %6, label %3, label %7, !dbg !3487, !llvm.loop !3491

7:                                                ; preds = %3, %7
  %8 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3493
  %9 = and i32 %8, 1, !dbg !3494
  %10 = icmp eq i32 %9, 0, !dbg !3495
  br i1 %10, label %11, label %7, !dbg !3495, !llvm.loop !3496

11:                                               ; preds = %7
  ret void, !dbg !3498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @sfc_MacLeave() unnamed_addr #5 section ".ramTEXT" !dbg !3499 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3502
  call void @llvm.dbg.value(metadata i32 %1, metadata !3501, metadata !DIExpression()), !dbg !3503
  %2 = and i32 %1, -268435477, !dbg !3504
  call void @llvm.dbg.value(metadata i32 %2, metadata !3501, metadata !DIExpression()), !dbg !3503
  store volatile i32 %2, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3505
  %3 = load volatile i32, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3506
  call void @llvm.dbg.value(metadata i32 %3, metadata !3501, metadata !DIExpression()), !dbg !3503
  %4 = and i32 %3, -9, !dbg !3507
  call void @llvm.dbg.value(metadata i32 %4, metadata !3501, metadata !DIExpression()), !dbg !3503
  store volatile i32 %4, i32* inttoptr (i32 -2096693248 to i32*), align 65536, !dbg !3508
  ret void, !dbg !3509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sfc_clear_gpram() local_unnamed_addr #5 section ".ramTEXT" !dbg !3510 {
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -2096691200 to i8*), metadata !3513, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32 0, metadata !3512, metadata !DIExpression()), !dbg !3514
  br label %1, !dbg !3515

1:                                                ; preds = %0, %1
  %2 = phi i8* [ inttoptr (i32 -2096691200 to i8*), %0 ], [ %5, %1 ]
  %3 = phi i32 [ 0, %0 ], [ %6, %1 ]
  call void @llvm.dbg.value(metadata i8* %2, metadata !3513, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32 %3, metadata !3512, metadata !DIExpression()), !dbg !3514
  %4 = bitcast i8* %2 to i32*, !dbg !3517
  store volatile i32 0, i32* %4, align 4, !dbg !3517
  %5 = getelementptr inbounds i8, i8* %2, i32 4, !dbg !3520
  call void @llvm.dbg.value(metadata i8* %5, metadata !3513, metadata !DIExpression()), !dbg !3514
  %6 = add nuw nsw i32 %3, 1, !dbg !3521
  call void @llvm.dbg.value(metadata i32 %6, metadata !3512, metadata !DIExpression()), !dbg !3514
  %7 = icmp eq i32 %6, 40, !dbg !3522
  br i1 %7, label %8, label %1, !dbg !3515, !llvm.loop !3523

8:                                                ; preds = %1
  ret void, !dbg !3525
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_read(i8* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef writeonly %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !3526 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3530, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.value(metadata i32 %1, metadata !3531, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.value(metadata i8* %2, metadata !3532, metadata !DIExpression()), !dbg !3534
  call void @llvm.dbg.value(metadata i32 %3, metadata !3533, metadata !DIExpression()), !dbg !3534
  %5 = tail call i32 @sfc_transfer(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef 0) #16, !dbg !3535
  ret i32 %5, !dbg !3536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !3537 {
  %5 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3541, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.value(metadata i32 %1, metadata !3542, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.value(metadata i8* %2, metadata !3543, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.value(metadata i32 %3, metadata !3544, metadata !DIExpression()), !dbg !3550
  %6 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 0, !dbg !3551
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #13, !dbg !3551
  call void @llvm.dbg.declare(metadata [160 x i8]* %5, metadata !3545, metadata !DIExpression()), !dbg !3552
  %7 = add i32 %3, %1, !dbg !3553
  call void @llvm.dbg.value(metadata i32 %7, metadata !3549, metadata !DIExpression()), !dbg !3550
  %8 = icmp ugt i32 %7, 159, !dbg !3554
  br i1 %8, label %9, label %12, !dbg !3556

9:                                                ; preds = %4
  %10 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 496) #14, !dbg !3557
  br label %11, !dbg !3557

11:                                               ; preds = %11, %9
  br label %11, !dbg !3557, !llvm.loop !3561

12:                                               ; preds = %4
  %13 = call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %0, i32 noundef %1) #14, !dbg !3562
  %14 = icmp ne i8* %2, null, !dbg !3563
  %15 = icmp ne i32 %3, 0
  %16 = and i1 %14, %15, !dbg !3565
  br i1 %16, label %17, label %20, !dbg !3565

17:                                               ; preds = %12
  %18 = getelementptr inbounds [160 x i8], [160 x i8]* %5, i32 0, i32 %1, !dbg !3566
  %19 = call i8* @memcpy(i8* noundef nonnull %18, i8* noundef nonnull %2, i32 noundef %3) #14, !dbg !3568
  br label %20, !dbg !3569

20:                                               ; preds = %17, %12
  %21 = call i32 @sfc_transfer(i8* noundef nonnull %6, i32 noundef %7, i8* noundef null, i32 noundef 0, i32 noundef 0) #16, !dbg !3570
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #13, !dbg !3571
  ret i32 %21, !dbg !3572
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sfc_security_write_crc(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3573 {
  %3 = alloca [160 x i8], align 1
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3577, metadata !DIExpression()), !dbg !3582
  call void @llvm.dbg.value(metadata i32 %1, metadata !3578, metadata !DIExpression()), !dbg !3582
  %5 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 0, !dbg !3583
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %5) #13, !dbg !3583
  call void @llvm.dbg.declare(metadata [160 x i8]* %3, metadata !3579, metadata !DIExpression()), !dbg !3584
  %6 = bitcast i32* %4 to i8*, !dbg !3585
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #13, !dbg !3585
  %7 = load volatile i32, i32* inttoptr (i32 -2096660420 to i32*), align 4, !dbg !3586
  call void @llvm.dbg.value(metadata i32 %7, metadata !3580, metadata !DIExpression()), !dbg !3582
  store i32 %7, i32* %4, align 4, !dbg !3587
  %8 = add i32 %1, 4, !dbg !3588
  call void @llvm.dbg.value(metadata i32 %8, metadata !3581, metadata !DIExpression()), !dbg !3582
  %9 = call i8* @memcpy(i8* noundef nonnull %5, i8* noundef %0, i32 noundef %1) #14, !dbg !3589
  %10 = getelementptr inbounds [160 x i8], [160 x i8]* %3, i32 0, i32 %1, !dbg !3590
  call void @llvm.dbg.value(metadata i32* %4, metadata !3580, metadata !DIExpression(DW_OP_deref)), !dbg !3582
  %11 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef nonnull %6, i32 noundef 4) #14, !dbg !3591
  %12 = call i32 @sfc_transfer(i8* noundef nonnull %5, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #16, !dbg !3592
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #13, !dbg !3593
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %5) #13, !dbg !3593
  ret i32 %12, !dbg !3594
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__sfc_write(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #0 section ".ramTEXT" !dbg !3595 {
  %6 = alloca [160 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3597, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i32 %1, metadata !3598, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i8* %2, metadata !3599, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i32 %3, metadata !3600, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i32 %4, metadata !3601, metadata !DIExpression()), !dbg !3604
  %7 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 0, !dbg !3605
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %7) #13, !dbg !3605
  call void @llvm.dbg.declare(metadata [160 x i8]* %6, metadata !3602, metadata !DIExpression()), !dbg !3606
  %8 = add i32 %3, %1, !dbg !3607
  call void @llvm.dbg.value(metadata i32 %8, metadata !3603, metadata !DIExpression()), !dbg !3604
  %9 = icmp ugt i32 %8, 160, !dbg !3608
  br i1 %9, label %10, label %13, !dbg !3610

10:                                               ; preds = %5
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.10, i32 0, i32 0), i32 noundef 544) #14, !dbg !3611
  br label %12, !dbg !3611

12:                                               ; preds = %12, %10
  br label %12, !dbg !3611, !llvm.loop !3615

13:                                               ; preds = %5
  %14 = call i8* @memcpy(i8* noundef nonnull %7, i8* noundef %0, i32 noundef %1) #14, !dbg !3616
  %15 = icmp ne i8* %2, null, !dbg !3617
  %16 = icmp ne i32 %3, 0
  %17 = and i1 %15, %16, !dbg !3619
  br i1 %17, label %18, label %21, !dbg !3619

18:                                               ; preds = %13
  %19 = getelementptr inbounds [160 x i8], [160 x i8]* %6, i32 0, i32 %1, !dbg !3620
  %20 = call i8* @memcpy(i8* noundef nonnull %19, i8* noundef nonnull %2, i32 noundef %3) #14, !dbg !3622
  br label %21, !dbg !3623

21:                                               ; preds = %18, %13
  %22 = call i32 @sfc_transfer(i8* noundef nonnull %7, i32 noundef %8, i8* noundef null, i32 noundef 0, i32 noundef 0) #16, !dbg !3624
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %7) #13, !dbg !3625
  ret i32 %22, !dbg !3626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_suspend_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !3627 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_suspend_winbond, i32 0, i32 0)) #14, !dbg !3628
  ret void, !dbg !3629
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_resume_Winbond() local_unnamed_addr #0 section ".ramTEXT" !dbg !3630 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_resume_winbond, i32 0, i32 0)) #14, !dbg !3631
  ret void, !dbg !3632
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_check_device() local_unnamed_addr #0 section ".ramTEXT" !dbg !3633 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3640
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #13, !dbg !3640
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3637, metadata !DIExpression()), !dbg !3641
  %3 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #16, !dbg !3642
  %4 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !3643
  %5 = load i8, i8* %4, align 1, !dbg !3643
  %6 = zext i8 %5 to i32, !dbg !3644
  %7 = shl nuw i32 %6, 24, !dbg !3645
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !3646
  %9 = load i8, i8* %8, align 1, !dbg !3646
  %10 = zext i8 %9 to i32, !dbg !3647
  %11 = shl nuw nsw i32 %10, 16, !dbg !3648
  %12 = or i32 %11, %7, !dbg !3649
  call void @llvm.dbg.value(metadata i32 %12, metadata !3636, metadata !DIExpression()), !dbg !3650
  %13 = call i32 @sfc_GetDirectMode() #14, !dbg !3651
  store i32 %13, i32* @gucFlashSFCMode, align 4, !dbg !3652
  call void @llvm.dbg.value(metadata i32 1, metadata !3635, metadata !DIExpression()), !dbg !3650
  %14 = load i8, i8* %2, align 1
  call void @llvm.dbg.value(metadata i32 1, metadata !3635, metadata !DIExpression()), !dbg !3650
  br label %15, !dbg !3653

15:                                               ; preds = %0, %44
  %16 = phi i32 [ 1, %0 ], [ %45, %44 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3635, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.value(metadata !DIArgList([13 x %struct.flash_info_t]* @chips_data, i32 %16), metadata !3639, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 24, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3650
  %17 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 1, !dbg !3655
  %18 = load i8, i8* %17, align 4, !dbg !3655
  %19 = icmp eq i8 %18, %14, !dbg !3659
  br i1 %19, label %20, label %44, !dbg !3660

20:                                               ; preds = %15
  %21 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, i32 2, !dbg !3661
  %22 = load i32, i32* %21, align 4, !dbg !3661
  %23 = icmp eq i32 %22, %12, !dbg !3662
  br i1 %23, label %24, label %44, !dbg !3663

24:                                               ; preds = %20
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %16, !dbg !3664
  store %struct.flash_info_t* %25, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3665
  %26 = add nsw i32 %16, -4, !dbg !3667
  %27 = icmp ult i32 %26, 5, !dbg !3667
  br i1 %27, label %42, label %28, !dbg !3669

28:                                               ; preds = %24
  %29 = add nsw i32 %16, -1, !dbg !3670
  %30 = icmp ult i32 %29, 3, !dbg !3670
  br i1 %30, label %42, label %31, !dbg !3672

31:                                               ; preds = %28
  %32 = add nsw i32 %16, -9, !dbg !3673
  %33 = icmp ult i32 %32, 3, !dbg !3673
  br i1 %33, label %34, label %40, !dbg !3675

34:                                               ; preds = %31
  %35 = and i32 %16, 2147483639, !dbg !3676
  %36 = icmp eq i32 %35, 1, !dbg !3676
  %37 = icmp eq i32 %16, 11
  %38 = or i1 %37, %36, !dbg !3679
  %39 = select i1 %38, i32 49, i32 1, !dbg !3679
  store i32 %39, i32* @gd_write_sr2_1, align 4, !dbg !3680
  br label %42, !dbg !3681

40:                                               ; preds = %31
  %41 = icmp eq i32 %16, 12, !dbg !3682
  br i1 %41, label %42, label %67, !dbg !3684

42:                                               ; preds = %40, %28, %24, %34
  %43 = phi i32 [ 200, %34 ], [ 194, %24 ], [ 239, %28 ], [ 32, %40 ]
  store i32 %43, i32* @support_flash_id, align 4, !dbg !3685
  br label %67, !dbg !3686

44:                                               ; preds = %15, %20
  %45 = add nuw nsw i32 %16, 1, !dbg !3687
  call void @llvm.dbg.value(metadata i32 %45, metadata !3635, metadata !DIExpression()), !dbg !3650
  %46 = icmp eq i32 %45, 13, !dbg !3688
  br i1 %46, label %47, label %15, !dbg !3653, !llvm.loop !3689

47:                                               ; preds = %44
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3691
  %48 = load i32, i32* @support_flash_id, align 4, !dbg !3692
  %49 = icmp eq i32 %48, 255, !dbg !3694
  br i1 %49, label %50, label %67, !dbg !3695

50:                                               ; preds = %47
  %51 = call %struct.flash_info_t* @customer_flash_register() #14, !dbg !3696
  store %struct.flash_info_t* %51, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3698
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !3639, metadata !DIExpression()), !dbg !3650
  %52 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 1, !dbg !3699
  %53 = load i8, i8* %52, align 4, !dbg !3699
  %54 = load i8, i8* %2, align 1, !dbg !3701
  %55 = icmp eq i8 %53, %54, !dbg !3702
  br i1 %55, label %56, label %60, !dbg !3703

56:                                               ; preds = %50
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %51, metadata !3639, metadata !DIExpression()), !dbg !3650
  %57 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %51, i32 0, i32 2, !dbg !3704
  %58 = load i32, i32* %57, align 4, !dbg !3704
  %59 = icmp eq i32 %58, %12, !dbg !3705
  br i1 %59, label %67, label %60, !dbg !3706

60:                                               ; preds = %56, %50
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 322, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0)) #14, !dbg !3707
  %61 = load i8, i8* %2, align 1, !dbg !3709
  %62 = zext i8 %61 to i32, !dbg !3709
  %63 = load i8, i8* %4, align 1, !dbg !3709
  %64 = zext i8 %63 to i32, !dbg !3709
  %65 = load i8, i8* %8, align 1, !dbg !3709
  %66 = zext i8 %65 to i32, !dbg !3709
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.flash_check_device, i32 0, i32 0), i32 noundef 323, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef %62, i32 noundef %64, i32 noundef %66, i32 noundef %12) #14, !dbg !3709
  br label %67, !dbg !3710

67:                                               ; preds = %47, %60, %56, %40, %42
  %68 = phi i32 [ 0, %42 ], [ 0, %40 ], [ 0, %56 ], [ -1, %60 ], [ -1, %47 ]
  %69 = phi i32 [ 1, %42 ], [ 1, %40 ], [ 1, %56 ], [ 0, %60 ], [ 0, %47 ], !dbg !3650
  store i32 %68, i32* @sf_drvier_status, align 4, !dbg !3650
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #13, !dbg !3711
  ret i32 %69, !dbg !3711
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_jedec_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !3712 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3716, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.value(metadata i32 %1, metadata !3717, metadata !DIExpression()), !dbg !3720
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #13, !dbg !3721
  call void @llvm.dbg.value(metadata i8 -97, metadata !3718, metadata !DIExpression()), !dbg !3720
  store i8 -97, i8* %3, align 1, !dbg !3722
  call void @llvm.dbg.value(metadata i8* %3, metadata !3718, metadata !DIExpression(DW_OP_deref)), !dbg !3720
  %4 = call i32 @sfc_read(i8* noundef nonnull %3, i32 noundef 1, i8* noundef %0, i32 noundef %1) #14, !dbg !3723
  call void @llvm.dbg.value(metadata i32 %4, metadata !3719, metadata !DIExpression()), !dbg !3720
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #13, !dbg !3724
  ret i32 %4, !dbg !3725
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_switch_mode(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3730, metadata !DIExpression()), !dbg !3731
  %2 = tail call %struct.flash_info_t* @customer_flash_register() #14, !dbg !3732
  %3 = icmp eq %struct.flash_info_t* %2, null, !dbg !3734
  br i1 %3, label %5, label %4, !dbg !3735

4:                                                ; preds = %1
  store i32 255, i32* @support_flash_id, align 4, !dbg !3736
  br label %5, !dbg !3738

5:                                                ; preds = %4, %1
  %6 = tail call i32 @flash_check_device() #16, !dbg !3739
  tail call fastcc void @flash_Switch_Device_Mode(i32 noundef %0) #16, !dbg !3740
  switch i32 %0, label %14 [
    i32 1, label %7
    i32 2, label %8
    i32 3, label %13
  ], !dbg !3741

7:                                                ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 185298944, i32 noundef 1) #14, !dbg !3742
  br label %17, !dbg !3745

8:                                                ; preds = %5
  %9 = load i32, i32* @support_flash_id, align 4, !dbg !3746
  %10 = icmp eq i32 %9, 32, !dbg !3750
  br i1 %10, label %11, label %12, !dbg !3751

11:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335572992, i32 noundef 2) #14, !dbg !3752
  br label %17, !dbg !3754

12:                                               ; preds = %8
  tail call void @sfc_direct_read_setup(i32 noundef -335589376, i32 noundef 2) #14, !dbg !3755
  br label %17

13:                                               ; preds = %5
  tail call void @sfc_direct_read_setup(i32 noundef 201265152, i32 noundef 3) #14, !dbg !3757
  br label %17

14:                                               ; preds = %5
  %15 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 352) #14, !dbg !3760
  br label %16, !dbg !3760

16:                                               ; preds = %14, %16
  br label %16, !dbg !3760, !llvm.loop !3764

17:                                               ; preds = %13, %12, %11, %7
  store i32 %0, i32* @gucFlashSFCMode, align 4, !dbg !3765
  ret void, !dbg !3766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_Switch_Device_Mode(i32 noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !3767 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3769, metadata !DIExpression()), !dbg !3771
  switch i32 %0, label %29 [
    i32 1, label %2
    i32 2, label %11
    i32 3, label %20
  ], !dbg !3772

2:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), metadata !3770, metadata !DIExpression()), !dbg !3771
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !3773
  switch i32 %3, label %32 [
    i32 194, label %35
    i32 200, label %4
    i32 32, label %8
    i32 255, label %9
  ], !dbg !3776

4:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), metadata !3770, metadata !DIExpression()), !dbg !3771
  %5 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3777
  %6 = icmp eq i32 %5, 49, !dbg !3781
  %7 = select i1 %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspi_gd, i32 0, i32 0), !dbg !3782
  call void @llvm.dbg.value(metadata i8* %7, metadata !3770, metadata !DIExpression()), !dbg !3771
  br label %35, !dbg !3783

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), metadata !3770, metadata !DIExpression()), !dbg !3771
  br label %35, !dbg !3784

9:                                                ; preds = %2
  %10 = tail call i8* @customer_switch_spi_mode_command() #14, !dbg !3787
  call void @llvm.dbg.value(metadata i8* %10, metadata !3770, metadata !DIExpression()), !dbg !3771
  br label %35, !dbg !3790

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), metadata !3770, metadata !DIExpression()), !dbg !3771
  %12 = load i32, i32* @support_flash_id, align 4, !dbg !3791
  switch i32 %12, label %33 [
    i32 194, label %35
    i32 200, label %13
    i32 32, label %17
    i32 255, label %18
  ], !dbg !3793

13:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !3770, metadata !DIExpression()), !dbg !3771
  %14 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3794
  %15 = icmp eq i32 %14, 49, !dbg !3798
  %16 = select i1 %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !3799
  call void @llvm.dbg.value(metadata i8* %16, metadata !3770, metadata !DIExpression()), !dbg !3771
  br label %35, !dbg !3800

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !3770, metadata !DIExpression()), !dbg !3771
  br label %35, !dbg !3801

18:                                               ; preds = %11
  %19 = tail call i8* @customer_switch_spiq_mode_command() #14, !dbg !3804
  call void @llvm.dbg.value(metadata i8* %19, metadata !3770, metadata !DIExpression()), !dbg !3771
  br label %35, !dbg !3807

20:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), metadata !3770, metadata !DIExpression()), !dbg !3771
  %21 = load i32, i32* @support_flash_id, align 4, !dbg !3808
  switch i32 %21, label %34 [
    i32 194, label %35
    i32 200, label %22
    i32 32, label %26
    i32 255, label %27
  ], !dbg !3810

22:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), metadata !3770, metadata !DIExpression()), !dbg !3771
  %23 = load i32, i32* @gd_write_sr2_1, align 4, !dbg !3811
  %24 = icmp eq i32 %23, 49, !dbg !3815
  %25 = select i1 %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchqpi_gd25q32c, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_gd, i32 0, i32 0), !dbg !3816
  call void @llvm.dbg.value(metadata i8* %25, metadata !3770, metadata !DIExpression()), !dbg !3771
  br label %35, !dbg !3817

26:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), metadata !3770, metadata !DIExpression()), !dbg !3771
  br label %35, !dbg !3818

27:                                               ; preds = %20
  %28 = tail call i8* @customer_switch_spiq_mode_command() #14, !dbg !3821
  call void @llvm.dbg.value(metadata i8* %28, metadata !3770, metadata !DIExpression()), !dbg !3771
  br label %35, !dbg !3824

29:                                               ; preds = %1
  %30 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2.25, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 268) #14, !dbg !3825
  br label %31, !dbg !3825

31:                                               ; preds = %31, %29
  br label %31, !dbg !3825, !llvm.loop !3828

32:                                               ; preds = %2
  br label %35, !dbg !3829

33:                                               ; preds = %11
  br label %35, !dbg !3829

34:                                               ; preds = %20
  br label %35, !dbg !3829

35:                                               ; preds = %20, %34, %11, %33, %2, %32, %26, %27, %22, %17, %18, %13, %8, %9, %4
  %36 = phi i8* [ %25, %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %26 ], [ %28, %27 ], [ %16, %13 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_micron, i32 0, i32 0), %17 ], [ %19, %18 ], [ %7, %4 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_micron, i32 0, i32 0), %8 ], [ %10, %9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspi_mxic, i32 0, i32 0), %2 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_winbond, i32 0, i32 0), %32 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %11 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_winbond, i32 0, i32 0), %33 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @cmdlist_switchspiq_mxic, i32 0, i32 0), %20 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @cmdlist_switchqpi_winbond, i32 0, i32 0), %34 ], !dbg !3830
  call void @llvm.dbg.value(metadata i8* %36, metadata !3770, metadata !DIExpression()), !dbg !3771
  tail call void @sfc_Command_List(i8* noundef %36) #14, !dbg !3829
  ret void, !dbg !3831
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_config() local_unnamed_addr #0 section ".ramTEXT" !dbg !3832 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !3838
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #13, !dbg !3838
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !3836, metadata !DIExpression()), !dbg !3839
  %3 = tail call i32 @sfc_getMaxGPRamSize() #14, !dbg !3840
  store i32 %3, i32* @gSFC_max_data_size, align 4, !dbg !3841
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3842
  %4 = call i32 @flash_read_jedec_id(i8* noundef nonnull %2, i32 noundef 3) #16, !dbg !3843
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 1, !dbg !3844
  %6 = load i8, i8* %5, align 1, !dbg !3844
  %7 = zext i8 %6 to i32, !dbg !3845
  %8 = shl nuw i32 %7, 24, !dbg !3846
  %9 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 2, !dbg !3847
  %10 = load i8, i8* %9, align 1, !dbg !3847
  %11 = zext i8 %10 to i32, !dbg !3848
  %12 = shl nuw nsw i32 %11, 16, !dbg !3849
  %13 = or i32 %12, %8, !dbg !3850
  call void @llvm.dbg.value(metadata i32 %13, metadata !3835, metadata !DIExpression()), !dbg !3851
  %14 = load i8, i8* %2, align 1, !dbg !3852
  %15 = zext i8 %14 to i32, !dbg !3852
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 385, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i32 noundef %15, i32 noundef %7, i32 noundef %11, i32 noundef %13) #14, !dbg !3852
  call void @llvm.dbg.value(metadata i32 1, metadata !3834, metadata !DIExpression()), !dbg !3851
  br label %16, !dbg !3853

16:                                               ; preds = %0, %43
  %17 = phi i32 [ 1, %0 ], [ %44, %43 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !3834, metadata !DIExpression()), !dbg !3851
  %18 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, !dbg !3855
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %18, metadata !3837, metadata !DIExpression()), !dbg !3851
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 1, !dbg !3858
  %20 = load i8, i8* %19, align 4, !dbg !3858
  %21 = load i8, i8* %2, align 1, !dbg !3860
  %22 = icmp eq i8 %20, %21, !dbg !3861
  br i1 %22, label %23, label %43, !dbg !3862

23:                                               ; preds = %16
  %24 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %17, i32 2, !dbg !3863
  %25 = load i32, i32* %24, align 4, !dbg !3863
  %26 = icmp eq i32 %25, %13, !dbg !3864
  br i1 %26, label %27, label %43, !dbg !3865

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %18, i32 0, i32 0, !dbg !3866
  %29 = load i8*, i8** %28, align 4, !dbg !3866
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 390, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %29) #14, !dbg !3866
  store %struct.flash_info_t* %18, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3868
  %30 = add nsw i32 %17, -4, !dbg !3869
  %31 = icmp ult i32 %30, 5, !dbg !3869
  br i1 %31, label %41, label %32, !dbg !3871

32:                                               ; preds = %27
  %33 = add nsw i32 %17, -1, !dbg !3872
  %34 = icmp ult i32 %33, 3, !dbg !3872
  br i1 %34, label %41, label %35, !dbg !3874

35:                                               ; preds = %32
  %36 = add nsw i32 %17, -9, !dbg !3875
  %37 = icmp ult i32 %36, 3, !dbg !3875
  br i1 %37, label %41, label %38, !dbg !3877

38:                                               ; preds = %35
  %39 = icmp eq i32 %17, 12, !dbg !3878
  br i1 %39, label %40, label %43, !dbg !3880

40:                                               ; preds = %38
  store i32 32, i32* @support_flash_id, align 4, !dbg !3881
  call void @llvm.dbg.value(metadata i32 %44, metadata !3834, metadata !DIExpression()), !dbg !3851
  br label %66, !dbg !3883

41:                                               ; preds = %35, %32, %27
  %42 = phi i32 [ 194, %27 ], [ 239, %32 ], [ 200, %35 ]
  store i32 %42, i32* @support_flash_id, align 4, !dbg !3884
  br label %43, !dbg !3885

43:                                               ; preds = %41, %16, %23, %38
  %44 = add nuw nsw i32 %17, 1, !dbg !3885
  call void @llvm.dbg.value(metadata i32 %44, metadata !3834, metadata !DIExpression()), !dbg !3851
  %45 = icmp eq i32 %44, 13, !dbg !3886
  br i1 %45, label %46, label %16, !dbg !3853, !llvm.loop !3887

46:                                               ; preds = %43
  %47 = load i32, i32* @support_flash_id, align 4, !dbg !3889
  %48 = icmp eq i32 %47, 255, !dbg !3891
  br i1 %48, label %49, label %66, !dbg !3883

49:                                               ; preds = %46
  %50 = call %struct.flash_info_t* @customer_flash_register() #14, !dbg !3892
  store %struct.flash_info_t* %50, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3894
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !3837, metadata !DIExpression()), !dbg !3851
  %51 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 1, !dbg !3895
  %52 = load i8, i8* %51, align 4, !dbg !3895
  %53 = load i8, i8* %2, align 1, !dbg !3897
  %54 = icmp eq i8 %52, %53, !dbg !3898
  br i1 %54, label %55, label %59, !dbg !3899

55:                                               ; preds = %49
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %50, metadata !3837, metadata !DIExpression()), !dbg !3851
  %56 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %50, i32 0, i32 2, !dbg !3900
  %57 = load i32, i32* %56, align 4, !dbg !3900
  %58 = icmp eq i32 %57, %13, !dbg !3901
  br i1 %58, label %71, label %59, !dbg !3902

59:                                               ; preds = %55, %49
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 411, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i32 0, i32 0)) #14, !dbg !3903
  %60 = load i8, i8* %2, align 1, !dbg !3905
  %61 = zext i8 %60 to i32, !dbg !3905
  %62 = load i8, i8* %5, align 1, !dbg !3905
  %63 = zext i8 %62 to i32, !dbg !3905
  %64 = load i8, i8* %9, align 1, !dbg !3905
  %65 = zext i8 %64 to i32, !dbg !3905
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 412, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1.22, i32 0, i32 0), i32 noundef %61, i32 noundef %63, i32 noundef %65, i32 noundef %13) #14, !dbg !3905
  br label %66, !dbg !3906

66:                                               ; preds = %40, %59, %46
  %67 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3907
  %68 = icmp eq %struct.flash_info_t* %67, null, !dbg !3907
  br i1 %68, label %69, label %71, !dbg !3909

69:                                               ; preds = %66
  %70 = inttoptr i32 %13 to i8*, !dbg !3910
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.flash_config, i32 0, i32 0), i32 noundef 417, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %70) #14, !dbg !3910
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3912
  br label %71, !dbg !3913

71:                                               ; preds = %66, %69, %55
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !3851
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #13, !dbg !3914
  ret void, !dbg !3914
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flash_init(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3915 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3917, metadata !DIExpression()), !dbg !3922
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !3923
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #13, !dbg !3923
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !3920, metadata !DIExpression()), !dbg !3924
  tail call void @sfc_Init(i32 noundef %0) #14, !dbg !3925
  %4 = tail call i32 @sfc_getMaxGPRamSize() #14, !dbg !3926
  store i32 %4, i32* @gSFC_max_data_size, align 4, !dbg !3927
  tail call fastcc void @flash_reset() #16, !dbg !3928
  store %struct.flash_info_t* null, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3929
  %5 = call i32 @flash_read_jedec_id(i8* noundef nonnull %3, i32 noundef 3) #16, !dbg !3930
  %6 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !3931
  %7 = load i8, i8* %6, align 1, !dbg !3931
  %8 = zext i8 %7 to i32, !dbg !3932
  %9 = shl nuw i32 %8, 24, !dbg !3933
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !3934
  %11 = load i8, i8* %10, align 1, !dbg !3934
  %12 = zext i8 %11 to i32, !dbg !3935
  %13 = shl nuw nsw i32 %12, 16, !dbg !3936
  %14 = or i32 %13, %9, !dbg !3937
  call void @llvm.dbg.value(metadata i32 %14, metadata !3919, metadata !DIExpression()), !dbg !3922
  %15 = load i8, i8* %3, align 1, !dbg !3938
  %16 = zext i8 %15 to i32, !dbg !3938
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 447, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i32 noundef %16, i32 noundef %8, i32 noundef %12, i32 noundef %14) #14, !dbg !3938
  call void @llvm.dbg.value(metadata i32 1, metadata !3918, metadata !DIExpression()), !dbg !3922
  br label %17, !dbg !3939

17:                                               ; preds = %1, %31
  %18 = phi i32 [ 1, %1 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !3918, metadata !DIExpression()), !dbg !3922
  %19 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, !dbg !3941
  call void @llvm.dbg.value(metadata %struct.flash_info_t* %19, metadata !3921, metadata !DIExpression()), !dbg !3922
  %20 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 1, !dbg !3944
  %21 = load i8, i8* %20, align 4, !dbg !3944
  %22 = load i8, i8* %3, align 1, !dbg !3946
  %23 = icmp eq i8 %21, %22, !dbg !3947
  br i1 %23, label %24, label %31, !dbg !3948

24:                                               ; preds = %17
  %25 = getelementptr inbounds [13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 %18, i32 2, !dbg !3949
  %26 = load i32, i32* %25, align 4, !dbg !3949
  %27 = icmp eq i32 %26, %14, !dbg !3950
  br i1 %27, label %28, label %31, !dbg !3951

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %19, i32 0, i32 0, !dbg !3952
  %30 = load i8*, i8** %29, align 4, !dbg !3952
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 452, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i8* noundef %30) #14, !dbg !3952
  store %struct.flash_info_t* %19, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3954
  br label %31, !dbg !3955

31:                                               ; preds = %17, %24, %28
  %32 = add nuw nsw i32 %18, 1, !dbg !3956
  call void @llvm.dbg.value(metadata i32 %32, metadata !3918, metadata !DIExpression()), !dbg !3922
  %33 = icmp eq i32 %32, 13, !dbg !3957
  br i1 %33, label %34, label %17, !dbg !3939, !llvm.loop !3958

34:                                               ; preds = %31
  %35 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3960
  %36 = icmp eq %struct.flash_info_t* %35, null, !dbg !3960
  br i1 %36, label %37, label %39, !dbg !3962

37:                                               ; preds = %34
  %38 = inttoptr i32 %14 to i8*, !dbg !3963
  call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @__FUNCTION__.flash_init, i32 0, i32 0), i32 noundef 458, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0), i8* noundef %38) #14, !dbg !3963
  store %struct.flash_info_t* getelementptr inbounds ([13 x %struct.flash_info_t], [13 x %struct.flash_info_t]* @chips_data, i32 0, i32 1), %struct.flash_info_t** @spi_chip_info, align 4, !dbg !3965
  br label %39, !dbg !3966

39:                                               ; preds = %37, %34
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #13, !dbg !3967
  ret void, !dbg !3967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_reset() unnamed_addr #0 section ".ramTEXT" !dbg !3968 {
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_qpimode, i32 0, i32 0)) #14, !dbg !3969
  tail call void @sfc_delay_ms(i32 noundef 1) #14, !dbg !3970
  tail call void @sfc_Command_List(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @cmdlist_flash_reset_spimode, i32 0, i32 0)) #14, !dbg !3971
  tail call void @sfc_delay_ms(i32 noundef 1) #14, !dbg !3972
  ret void, !dbg !3973
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_wait_ready(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !3974 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !3978, metadata !DIExpression()), !dbg !3981
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #13, !dbg !3982
  call void @llvm.dbg.value(metadata i8 0, metadata !3980, metadata !DIExpression()), !dbg !3981
  store i8 0, i8* %2, align 1, !dbg !3983
  call void @llvm.dbg.value(metadata i32 0, metadata !3979, metadata !DIExpression()), !dbg !3981
  %3 = mul i32 %0, 1000
  %4 = add i32 %3, 1000
  call void @llvm.dbg.value(metadata i32 0, metadata !3979, metadata !DIExpression()), !dbg !3981
  %5 = icmp sgt i32 %4, 0, !dbg !3984
  br i1 %5, label %6, label %18, !dbg !3987

6:                                                ; preds = %1, %15
  %7 = phi i32 [ %16, %15 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3979, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8* %2, metadata !3980, metadata !DIExpression(DW_OP_deref)), !dbg !3981
  %8 = call i32 @flash_read_sr(i8* noundef nonnull %2) #16, !dbg !3988
  %9 = icmp slt i32 %8, 0, !dbg !3991
  br i1 %9, label %18, label %10, !dbg !3992

10:                                               ; preds = %6
  %11 = load i8, i8* %2, align 1, !dbg !3993
  call void @llvm.dbg.value(metadata i8 %11, metadata !3980, metadata !DIExpression()), !dbg !3981
  %12 = and i8 %11, 1, !dbg !3995
  %13 = icmp eq i8 %12, 0, !dbg !3995
  br i1 %13, label %14, label %15, !dbg !3996

14:                                               ; preds = %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #13, !dbg !3997
  ret i32 0, !dbg !3998

15:                                               ; preds = %10
  call void @sfc_delay_ms(i32 noundef 1) #14, !dbg !4000
  %16 = add nuw nsw i32 %7, 1, !dbg !4001
  call void @llvm.dbg.value(metadata i32 %16, metadata !3979, metadata !DIExpression()), !dbg !3981
  %17 = icmp eq i32 %16, %4, !dbg !3984
  br i1 %17, label %18, label %6, !dbg !3987, !llvm.loop !4002

18:                                               ; preds = %15, %6, %1
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 491, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.flash_wait_ready, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0)) #15, !dbg !4004
  unreachable, !dbg !4004
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !4005 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4009, metadata !DIExpression()), !dbg !4012
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #13, !dbg !4013
  call void @llvm.dbg.value(metadata i8 5, metadata !4011, metadata !DIExpression()), !dbg !4012
  store i8 5, i8* %2, align 1, !dbg !4014
  call void @llvm.dbg.value(metadata i8* %2, metadata !4011, metadata !DIExpression(DW_OP_deref)), !dbg !4012
  %3 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #14, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %3, metadata !4010, metadata !DIExpression()), !dbg !4012
  %4 = icmp ne i32 %3, 1, !dbg !4016
  %5 = sext i1 %4 to i32, !dbg !4012
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #13, !dbg !4018
  ret i32 %5, !dbg !4018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !4019 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4021, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata i32 %1, metadata !4022, metadata !DIExpression()), !dbg !4025
  %4 = bitcast i32* %3 to i8*, !dbg !4026
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #13, !dbg !4026
  call void @llvm.dbg.value(metadata i32 0, metadata !4023, metadata !DIExpression()), !dbg !4025
  store i32 144, i32* %3, align 4, !dbg !4027
  call void @llvm.dbg.value(metadata i8 undef, metadata !4023, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata i32* %3, metadata !4023, metadata !DIExpression(DW_OP_deref)), !dbg !4025
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #14, !dbg !4028
  call void @llvm.dbg.value(metadata i32 %5, metadata !4024, metadata !DIExpression()), !dbg !4025
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #13, !dbg !4029
  ret i32 %5, !dbg !4030
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_manu_id_quad(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !4031 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4033, metadata !DIExpression()), !dbg !4037
  call void @llvm.dbg.value(metadata i32 %1, metadata !4034, metadata !DIExpression()), !dbg !4037
  %4 = bitcast i32* %3 to i8*, !dbg !4038
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #13, !dbg !4038
  call void @llvm.dbg.value(metadata i32 0, metadata !4035, metadata !DIExpression()), !dbg !4037
  store i32 144, i32* %3, align 4, !dbg !4039
  call void @llvm.dbg.value(metadata i8 undef, metadata !4035, metadata !DIExpression()), !dbg !4037
  call void @llvm.dbg.value(metadata i32* %3, metadata !4035, metadata !DIExpression(DW_OP_deref)), !dbg !4037
  %5 = call i32 @sfc_read(i8* noundef nonnull %4, i32 noundef 4, i8* noundef %0, i32 noundef %1) #14, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %5, metadata !4036, metadata !DIExpression()), !dbg !4037
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #13, !dbg !4041
  ret i32 %5, !dbg !4042
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !4043 {
  %4 = alloca [4 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4047, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 %1, metadata !4048, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 %2, metadata !4049, metadata !DIExpression()), !dbg !4052
  %5 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 0, !dbg !4053
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #13, !dbg !4053
  call void @llvm.dbg.declare(metadata [4 x i8]* %4, metadata !4050, metadata !DIExpression()), !dbg !4054
  %6 = icmp eq i32 %2, 0, !dbg !4055
  br i1 %6, label %18, label %7, !dbg !4057

7:                                                ; preds = %3
  %8 = tail call i32 @flash_wait_ready(i32 noundef 1) #16, !dbg !4058
  store i32 1, i32* @sf_drvier_status, align 4, !dbg !4060
  store i8 3, i8* %5, align 1, !dbg !4061
  %9 = lshr i32 %1, 16, !dbg !4062
  %10 = trunc i32 %9 to i8, !dbg !4063
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 1, !dbg !4064
  store i8 %10, i8* %11, align 1, !dbg !4065
  %12 = lshr i32 %1, 8, !dbg !4066
  %13 = trunc i32 %12 to i8, !dbg !4067
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 2, !dbg !4068
  store i8 %13, i8* %14, align 1, !dbg !4069
  %15 = trunc i32 %1 to i8, !dbg !4070
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i32 0, i32 3, !dbg !4071
  store i8 %15, i8* %16, align 1, !dbg !4072
  %17 = call i32 @sfc_read(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %0, i32 noundef %2) #14, !dbg !4073
  call void @llvm.dbg.value(metadata i32 %17, metadata !4051, metadata !DIExpression()), !dbg !4052
  br label %18, !dbg !4074

18:                                               ; preds = %3, %7
  %19 = phi i32 [ %17, %7 ], [ 0, %3 ], !dbg !4052
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #13, !dbg !4075
  ret i32 %19, !dbg !4075
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_fast_read(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ramTEXT" !dbg !4076 {
  %5 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4080, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i32 %1, metadata !4081, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i32 %2, metadata !4082, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i32 %3, metadata !4083, metadata !DIExpression()), !dbg !4089
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0, !dbg !4090
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #13, !dbg !4090
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !4084, metadata !DIExpression()), !dbg !4091
  %7 = icmp eq i32 %2, 0, !dbg !4092
  br i1 %7, label %33, label %8, !dbg !4094

8:                                                ; preds = %4
  %9 = tail call i32 @flash_wait_ready(i32 noundef 1) #16, !dbg !4095
  store i8 11, i8* %6, align 1, !dbg !4097
  %10 = lshr i32 %1, 16, !dbg !4098
  %11 = trunc i32 %10 to i8, !dbg !4099
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 1, !dbg !4100
  store i8 %11, i8* %12, align 1, !dbg !4101
  %13 = lshr i32 %1, 8, !dbg !4102
  %14 = trunc i32 %13 to i8, !dbg !4103
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 2, !dbg !4104
  store i8 %14, i8* %15, align 1, !dbg !4105
  %16 = trunc i32 %1 to i8, !dbg !4106
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 3, !dbg !4107
  store i8 %16, i8* %17, align 1, !dbg !4108
  call void @llvm.dbg.value(metadata i32 4, metadata !4086, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i32 0, metadata !4088, metadata !DIExpression()), !dbg !4089
  %18 = icmp sgt i32 %3, 0, !dbg !4109
  br i1 %18, label %19, label %30, !dbg !4112

19:                                               ; preds = %8
  %20 = add nsw i32 %3, -1, !dbg !4112
  %21 = call i32 @llvm.umin.i32(i32 %20, i32 27), !dbg !4112
  br label %22, !dbg !4112

22:                                               ; preds = %19, %22
  %23 = phi i32 [ %26, %22 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4088, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.value(metadata i32 undef, metadata !4086, metadata !DIExpression()), !dbg !4089
  %24 = add nuw nsw i32 %23, 4, !dbg !4113
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 %24, !dbg !4115
  store i8 0, i8* %25, align 1, !dbg !4116
  call void @llvm.dbg.value(metadata i32 undef, metadata !4086, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4089
  %26 = add nuw nsw i32 %23, 1, !dbg !4117
  call void @llvm.dbg.value(metadata i32 %26, metadata !4088, metadata !DIExpression()), !dbg !4089
  %27 = icmp eq i32 %23, %21, !dbg !4118
  br i1 %27, label %28, label %22, !dbg !4112, !llvm.loop !4119

28:                                               ; preds = %22
  %29 = add nuw nsw i32 %21, 5, !dbg !4112
  br label %30, !dbg !4121

30:                                               ; preds = %28, %8
  %31 = phi i32 [ 4, %8 ], [ %29, %28 ], !dbg !4089
  %32 = call i32 @sfc_read(i8* noundef nonnull %6, i32 noundef %31, i8* noundef %0, i32 noundef %2) #14, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %32, metadata !4087, metadata !DIExpression()), !dbg !4089
  br label %33, !dbg !4122

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !4089
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #13, !dbg !4123
  ret i32 %34, !dbg !4123
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_read_sr2(i8* noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !4124 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4126, metadata !DIExpression()), !dbg !4129
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #13, !dbg !4130
  call void @llvm.dbg.value(metadata i8 53, metadata !4128, metadata !DIExpression()), !dbg !4129
  %3 = load i32, i32* @support_flash_id, align 4, !dbg !4131
  switch i32 %3, label %9 [
    i32 239, label %4
    i32 200, label %4
    i32 194, label %5
    i32 32, label %6
    i32 255, label %7
  ], !dbg !4133

4:                                                ; preds = %1, %1
  call void @llvm.dbg.value(metadata i8 53, metadata !4128, metadata !DIExpression()), !dbg !4129
  store i8 53, i8* %2, align 1, !dbg !4134
  br label %10, !dbg !4136

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 43, metadata !4128, metadata !DIExpression()), !dbg !4129
  store i8 43, i8* %2, align 1, !dbg !4137
  br label %10, !dbg !4140

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8 112, metadata !4128, metadata !DIExpression()), !dbg !4129
  store i8 112, i8* %2, align 1, !dbg !4141
  br label %10, !dbg !4144

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @customer_flash_read_SR2_comand() #14, !dbg !4145
  call void @llvm.dbg.value(metadata i8 %8, metadata !4128, metadata !DIExpression()), !dbg !4129
  store i8 %8, i8* %2, align 1, !dbg !4148
  br label %10, !dbg !4149

9:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.flash_read_sr2, i32 0, i32 0), i32 noundef 655, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0)) #14, !dbg !4150
  call void @llvm.dbg.value(metadata i8 5, metadata !4128, metadata !DIExpression()), !dbg !4129
  store i8 5, i8* %2, align 1, !dbg !4152
  br label %10

10:                                               ; preds = %5, %7, %9, %6, %4
  call void @llvm.dbg.value(metadata i8* %2, metadata !4128, metadata !DIExpression(DW_OP_deref)), !dbg !4129
  %11 = call i32 @sfc_read(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #14, !dbg !4153
  call void @llvm.dbg.value(metadata i32 %11, metadata !4127, metadata !DIExpression()), !dbg !4129
  %12 = icmp ne i32 %11, 1, !dbg !4154
  %13 = sext i1 %12 to i32, !dbg !4129
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #13, !dbg !4156
  ret i32 %13, !dbg !4156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_unprotect() local_unnamed_addr #0 section ".ramTEXT" !dbg !4157 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #13, !dbg !4160
  call void @llvm.dbg.value(metadata i8 0, metadata !4159, metadata !DIExpression()), !dbg !4161
  store i8 0, i8* %1, align 1, !dbg !4162
  call void @llvm.dbg.value(metadata i8* %1, metadata !4159, metadata !DIExpression(DW_OP_deref)), !dbg !4161
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #16, !dbg !4163
  %3 = icmp slt i32 %2, 0, !dbg !4165
  br i1 %3, label %9, label %4, !dbg !4166

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !4167
  call void @llvm.dbg.value(metadata i8 %5, metadata !4159, metadata !DIExpression()), !dbg !4161
  %6 = and i8 %5, 28, !dbg !4169
  %7 = icmp eq i8 %6, 0, !dbg !4170
  br i1 %7, label %9, label %8, !dbg !4171

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 0, metadata !4159, metadata !DIExpression()), !dbg !4161
  store i8 0, i8* %1, align 1, !dbg !4172
  call void @llvm.dbg.value(metadata i8* %1, metadata !4159, metadata !DIExpression(DW_OP_deref)), !dbg !4161
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #16, !dbg !4174
  br label %9, !dbg !4175

9:                                                ; preds = %4, %8, %0
  %10 = phi i32 [ -1, %0 ], [ 0, %8 ], [ 0, %4 ], !dbg !4161
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #13, !dbg !4176
  ret i32 %10, !dbg !4176
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @flash_write_sr(i8* noundef %0) unnamed_addr #0 section ".ramTEXT" !dbg !4177 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4179, metadata !DIExpression()), !dbg !4182
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #13, !dbg !4183
  call void @llvm.dbg.value(metadata i8 1, metadata !4181, metadata !DIExpression()), !dbg !4182
  store i8 1, i8* %2, align 1, !dbg !4184
  call void @llvm.dbg.value(metadata i8* %2, metadata !4181, metadata !DIExpression(DW_OP_deref)), !dbg !4182
  %3 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef %0, i32 noundef 1) #14, !dbg !4185
  call void @llvm.dbg.value(metadata i32 %3, metadata !4180, metadata !DIExpression()), !dbg !4182
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #13, !dbg !4186
  ret void, !dbg !4186
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_protect() local_unnamed_addr #0 section ".ramTEXT" !dbg !4187 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #13, !dbg !4190
  call void @llvm.dbg.value(metadata i8 0, metadata !4189, metadata !DIExpression()), !dbg !4191
  store i8 0, i8* %1, align 1, !dbg !4192
  call void @llvm.dbg.value(metadata i8* %1, metadata !4189, metadata !DIExpression(DW_OP_deref)), !dbg !4191
  %2 = call i32 @flash_read_sr(i8* noundef nonnull %1) #16, !dbg !4193
  %3 = icmp slt i32 %2, 0, !dbg !4195
  br i1 %3, label %7, label %4, !dbg !4196

4:                                                ; preds = %0
  %5 = load i8, i8* %1, align 1, !dbg !4197
  call void @llvm.dbg.value(metadata i8 %5, metadata !4189, metadata !DIExpression()), !dbg !4191
  %6 = or i8 %5, 28, !dbg !4197
  call void @llvm.dbg.value(metadata i8 %6, metadata !4189, metadata !DIExpression()), !dbg !4191
  store i8 %6, i8* %1, align 1, !dbg !4197
  call void @llvm.dbg.value(metadata i8* %1, metadata !4189, metadata !DIExpression(DW_OP_deref)), !dbg !4191
  call fastcc void @flash_write_sr(i8* noundef nonnull %1) #16, !dbg !4198
  br label %7, !dbg !4199

7:                                                ; preds = %0, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %0 ], !dbg !4191
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #13, !dbg !4200
  ret i32 %8, !dbg !4200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_enable() local_unnamed_addr #0 section ".ramTEXT" !dbg !4201 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #13, !dbg !4204
  call void @llvm.dbg.value(metadata i8 6, metadata !4203, metadata !DIExpression()), !dbg !4205
  store i8 6, i8* %1, align 1, !dbg !4206
  call void @llvm.dbg.value(metadata i8* %1, metadata !4203, metadata !DIExpression(DW_OP_deref)), !dbg !4205
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #14, !dbg !4207
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #13, !dbg !4208
  ret i32 %2, !dbg !4209
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write_disable() local_unnamed_addr #0 section ".ramTEXT" !dbg !4210 {
  %1 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #13, !dbg !4213
  call void @llvm.dbg.value(metadata i8 4, metadata !4212, metadata !DIExpression()), !dbg !4214
  store i8 4, i8* %1, align 1, !dbg !4215
  call void @llvm.dbg.value(metadata i8* %1, metadata !4212, metadata !DIExpression(DW_OP_deref)), !dbg !4214
  %2 = call i32 @sfc_write(i8* noundef nonnull %1, i32 noundef 1, i8* noundef null, i32 noundef 0) #14, !dbg !4216
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #13, !dbg !4217
  ret i32 %2, !dbg !4218
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !4219 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4223, metadata !DIExpression()), !dbg !4227
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !4228
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #13, !dbg !4228
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !4224, metadata !DIExpression()), !dbg !4229
  call void @llvm.dbg.value(metadata i32 0, metadata !4226, metadata !DIExpression()), !dbg !4227
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #16, !dbg !4230
  store i32 8, i32* @sf_drvier_status, align 4, !dbg !4232
  br label %5, !dbg !4233

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #14, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %6, metadata !4226, metadata !DIExpression()), !dbg !4227
  %7 = icmp eq i32 %6, -121, !dbg !4236
  br i1 %7, label %5, label %8, !dbg !4237, !llvm.loop !4238

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !4240
  call void @llvm.dbg.value(metadata i32 %9, metadata !4225, metadata !DIExpression()), !dbg !4227
  store i8 -40, i8* %3, align 1, !dbg !4241
  %10 = lshr i32 %0, 16, !dbg !4242
  %11 = trunc i32 %10 to i8, !dbg !4243
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4244
  store i8 %11, i8* %12, align 1, !dbg !4245
  %13 = lshr i32 %0, 8, !dbg !4246
  %14 = trunc i32 %13 to i8, !dbg !4247
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4248
  store i8 %14, i8* %15, align 1, !dbg !4249
  %16 = trunc i32 %0 to i8, !dbg !4250
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !4251
  store i8 %16, i8* %17, align 1, !dbg !4252
  tail call void @SF_DAL_FLAG_BUSY_SET() #14, !dbg !4253
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #14, !dbg !4254
  call void @restore_interrupt_mask(i32 noundef %9) #14, !dbg !4255
  br label %19, !dbg !4256

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #14, !dbg !4257
  call void @llvm.dbg.value(metadata i32 %20, metadata !4226, metadata !DIExpression()), !dbg !4227
  %21 = icmp eq i32 %20, -121, !dbg !4259
  br i1 %21, label %19, label %22, !dbg !4260, !llvm.loop !4261

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #16, !dbg !4263
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #13, !dbg !4264
  ret i32 0, !dbg !4264
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_sector_32k(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !4265 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4267, metadata !DIExpression()), !dbg !4271
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !4272
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #13, !dbg !4272
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !4268, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.value(metadata i32 0, metadata !4270, metadata !DIExpression()), !dbg !4271
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #16, !dbg !4274
  store i32 7, i32* @sf_drvier_status, align 4, !dbg !4276
  br label %5, !dbg !4277

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #14, !dbg !4278
  call void @llvm.dbg.value(metadata i32 %6, metadata !4270, metadata !DIExpression()), !dbg !4271
  %7 = icmp eq i32 %6, -121, !dbg !4280
  br i1 %7, label %5, label %8, !dbg !4281, !llvm.loop !4282

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %9, metadata !4269, metadata !DIExpression()), !dbg !4271
  store i8 82, i8* %3, align 1, !dbg !4285
  %10 = lshr i32 %0, 16, !dbg !4286
  %11 = trunc i32 %10 to i8, !dbg !4287
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4288
  store i8 %11, i8* %12, align 1, !dbg !4289
  %13 = lshr i32 %0, 8, !dbg !4290
  %14 = trunc i32 %13 to i8, !dbg !4291
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4292
  store i8 %14, i8* %15, align 1, !dbg !4293
  %16 = trunc i32 %0 to i8, !dbg !4294
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !4295
  store i8 %16, i8* %17, align 1, !dbg !4296
  tail call void @SF_DAL_FLAG_BUSY_SET() #14, !dbg !4297
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #14, !dbg !4298
  br label %19, !dbg !4299

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #14, !dbg !4300
  call void @llvm.dbg.value(metadata i32 %20, metadata !4270, metadata !DIExpression()), !dbg !4271
  %21 = icmp eq i32 %20, -121, !dbg !4302
  br i1 %21, label %19, label %22, !dbg !4303, !llvm.loop !4304

22:                                               ; preds = %19
  call void @restore_interrupt_mask(i32 noundef %9) #14, !dbg !4306
  %23 = call i32 @flash_write_disable() #16, !dbg !4307
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #13, !dbg !4308
  ret i32 0, !dbg !4308
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_page(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !4309 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4311, metadata !DIExpression()), !dbg !4315
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !4316
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #13, !dbg !4316
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !4312, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.value(metadata i32 0, metadata !4314, metadata !DIExpression()), !dbg !4315
  %4 = tail call i32 @flash_wait_ready(i32 noundef 3) #16, !dbg !4318
  store i32 6, i32* @sf_drvier_status, align 4, !dbg !4320
  br label %5, !dbg !4321

5:                                                ; preds = %5, %1
  %6 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #14, !dbg !4322
  call void @llvm.dbg.value(metadata i32 %6, metadata !4314, metadata !DIExpression()), !dbg !4315
  %7 = icmp eq i32 %6, -121, !dbg !4324
  br i1 %7, label %5, label %8, !dbg !4325, !llvm.loop !4326

8:                                                ; preds = %5
  %9 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !4328
  call void @llvm.dbg.value(metadata i32 %9, metadata !4313, metadata !DIExpression()), !dbg !4315
  store i8 32, i8* %3, align 1, !dbg !4329
  %10 = lshr i32 %0, 16, !dbg !4330
  %11 = trunc i32 %10 to i8, !dbg !4331
  %12 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4332
  store i8 %11, i8* %12, align 1, !dbg !4333
  %13 = lshr i32 %0, 8, !dbg !4334
  %14 = trunc i32 %13 to i8, !dbg !4335
  %15 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4336
  store i8 %14, i8* %15, align 1, !dbg !4337
  %16 = trunc i32 %0 to i8, !dbg !4338
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !4339
  store i8 %16, i8* %17, align 1, !dbg !4340
  tail call void @SF_DAL_FLAG_BUSY_SET() #14, !dbg !4341
  %18 = call i32 @sfc_write(i8* noundef nonnull %3, i32 noundef 4, i8* noundef null, i32 noundef 0) #14, !dbg !4342
  call void @restore_interrupt_mask(i32 noundef %9) #14, !dbg !4343
  br label %19, !dbg !4344

19:                                               ; preds = %19, %8
  %20 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #14, !dbg !4345
  call void @llvm.dbg.value(metadata i32 %20, metadata !4314, metadata !DIExpression()), !dbg !4315
  %21 = icmp eq i32 %20, -121, !dbg !4347
  br i1 %21, label %19, label %22, !dbg !4348, !llvm.loop !4349

22:                                               ; preds = %19
  %23 = call i32 @flash_write_disable() #16, !dbg !4351
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #13, !dbg !4352
  ret i32 0, !dbg !4352
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_chip() local_unnamed_addr #0 section ".ramTEXT" !dbg !4353 {
  %1 = alloca [5 x i8], align 1
  %2 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i32 0, i32 0, !dbg !4356
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %2) #13, !dbg !4356
  call void @llvm.dbg.declare(metadata [5 x i8]* %1, metadata !4355, metadata !DIExpression()), !dbg !4357
  %3 = tail call i32 @flash_wait_ready(i32 noundef 3) #16, !dbg !4358
  store i32 9, i32* @sf_drvier_status, align 4, !dbg !4360
  %4 = tail call i32 @flash_write_enable() #16, !dbg !4361
  %5 = tail call i32 @flash_unprotect() #16, !dbg !4362
  store i8 96, i8* %2, align 1, !dbg !4363
  %6 = call i32 @sfc_write(i8* noundef nonnull %2, i32 noundef 1, i8* noundef null, i32 noundef 0) #14, !dbg !4364
  %7 = call i32 @flash_wait_ready(i32 noundef 30000) #16, !dbg !4365
  %8 = call i32 @flash_write_disable() #16, !dbg !4367
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4368
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %2) #13, !dbg !4369
  ret i32 0, !dbg !4369
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !4370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4374, metadata !DIExpression()), !dbg !4376
  call void @llvm.dbg.value(metadata i32 %1, metadata !4375, metadata !DIExpression()), !dbg !4376
  %3 = icmp sgt i32 %1, 0
  call void @llvm.dbg.value(metadata i32 %1, metadata !4375, metadata !DIExpression()), !dbg !4376
  call void @llvm.dbg.value(metadata i32 %0, metadata !4374, metadata !DIExpression()), !dbg !4376
  br i1 %3, label %4, label %14, !dbg !4377

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %12, %4 ], [ %1, %2 ]
  %6 = phi i32 [ %11, %4 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4375, metadata !DIExpression()), !dbg !4376
  call void @llvm.dbg.value(metadata i32 %6, metadata !4374, metadata !DIExpression()), !dbg !4376
  %7 = tail call i32 @flash_erase_page(i32 noundef %6) #16, !dbg !4378
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4381
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !4382
  %10 = load i32, i32* %9, align 4, !dbg !4382
  %11 = add i32 %10, %6, !dbg !4383
  call void @llvm.dbg.value(metadata i32 %11, metadata !4374, metadata !DIExpression()), !dbg !4376
  %12 = sub i32 %5, %10, !dbg !4384
  call void @llvm.dbg.value(metadata i32 %12, metadata !4375, metadata !DIExpression()), !dbg !4376
  %13 = icmp sgt i32 %12, 0, !dbg !4385
  br i1 %13, label %4, label %14, !dbg !4386, !llvm.loop !4387

14:                                               ; preds = %4, %2
  ret i32 0, !dbg !4389
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !4390 {
  %4 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4394, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 %1, metadata !4395, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 %2, metadata !4396, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 0, metadata !4399, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 0, metadata !4400, metadata !DIExpression()), !dbg !4408
  %5 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 0, !dbg !4409
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %5) #13, !dbg !4409
  call void @llvm.dbg.declare(metadata [5 x i8]* %4, metadata !4402, metadata !DIExpression()), !dbg !4410
  call void @llvm.dbg.value(metadata i32 %1, metadata !4405, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i8* %0, metadata !4406, metadata !DIExpression()), !dbg !4408
  %6 = icmp eq i32 %2, 0, !dbg !4411
  br i1 %6, label %86, label %7, !dbg !4413

7:                                                ; preds = %3
  %8 = add i32 %2, %1, !dbg !4414
  %9 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4416
  %10 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 3, !dbg !4417
  %11 = load i32, i32* %10, align 4, !dbg !4417
  %12 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %9, i32 0, i32 4, !dbg !4418
  %13 = load i32, i32* %12, align 4, !dbg !4418
  %14 = mul i32 %13, %11, !dbg !4419
  %15 = icmp ugt i32 %8, %14, !dbg !4420
  br i1 %15, label %86, label %16, !dbg !4421

16:                                               ; preds = %7
  %17 = tail call i32 @flash_wait_ready(i32 noundef 2) #16, !dbg !4422
  br label %18

18:                                               ; preds = %16, %18
  %19 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #14, !dbg !4424
  call void @llvm.dbg.value(metadata i32 %19, metadata !4403, metadata !DIExpression()), !dbg !4408
  %20 = icmp eq i32 %19, -121, !dbg !4426
  br i1 %20, label %18, label %21, !dbg !4427, !llvm.loop !4428

21:                                               ; preds = %18
  store i32 3, i32* @sf_drvier_status, align 4, !dbg !4431
  %22 = tail call i32 @sfc_GetDirectMode() #14, !dbg !4432
  call void @llvm.dbg.value(metadata i32 %22, metadata !4401, metadata !DIExpression()), !dbg !4408
  %23 = icmp eq i32 %22, 2, !dbg !4433
  br i1 %23, label %24, label %29, !dbg !4435

24:                                               ; preds = %21
  %25 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4436
  %26 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %25, i32 0, i32 5, !dbg !4437
  %27 = load i8, i8* %26, align 4, !dbg !4437
  %28 = icmp eq i8 %27, 0, !dbg !4436
  br i1 %28, label %29, label %30, !dbg !4438

29:                                               ; preds = %24, %21
  br label %30

30:                                               ; preds = %24, %29
  %31 = phi i8 [ 2, %29 ], [ %27, %24 ], !dbg !4439
  store i8 %31, i8* %5, align 1, !dbg !4439
  call void @llvm.dbg.value(metadata i32 undef, metadata !4397, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i8* %0, metadata !4406, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 %1, metadata !4405, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 %2, metadata !4396, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 0, metadata !4400, metadata !DIExpression()), !dbg !4408
  %32 = icmp sgt i32 %2, 0, !dbg !4440
  br i1 %32, label %33, label %41, !dbg !4441

33:                                               ; preds = %30
  %34 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !4442
  %35 = urem i32 %1, %34, !dbg !4443
  call void @llvm.dbg.value(metadata i32 %35, metadata !4397, metadata !DIExpression()), !dbg !4408
  %36 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 1
  %37 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 2
  %38 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i32 0, i32 3
  %39 = add i32 %1, -1
  %40 = getelementptr inbounds i8, i8* %0, i32 -1
  br label %43, !dbg !4441

41:                                               ; preds = %73, %30
  %42 = phi i32 [ 0, %30 ], [ %74, %73 ], !dbg !4408
  br label %81, !dbg !4444

43:                                               ; preds = %77, %33
  %44 = phi i32 [ %34, %33 ], [ %80, %77 ], !dbg !4445
  %45 = phi i8* [ %0, %33 ], [ %78, %77 ]
  %46 = phi i32 [ %1, %33 ], [ %79, %77 ]
  %47 = phi i32 [ %2, %33 ], [ %75, %77 ]
  %48 = phi i32 [ %35, %33 ], [ 0, %77 ]
  %49 = phi i32 [ 0, %33 ], [ %74, %77 ]
  call void @llvm.dbg.value(metadata i8* %45, metadata !4406, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 %46, metadata !4405, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 %47, metadata !4396, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 %48, metadata !4397, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 %49, metadata !4400, metadata !DIExpression()), !dbg !4408
  %50 = sub i32 %44, %48, !dbg !4445
  %51 = icmp ugt i32 %47, %50, !dbg !4445
  %52 = select i1 %51, i32 %50, i32 %47, !dbg !4445
  call void @llvm.dbg.value(metadata i32 %52, metadata !4398, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 0, metadata !4397, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i8* %45, metadata !4407, metadata !DIExpression()), !dbg !4408
  %53 = lshr i32 %46, 16, !dbg !4447
  %54 = trunc i32 %53 to i8, !dbg !4448
  store i8 %54, i8* %36, align 1, !dbg !4449
  %55 = lshr i32 %46, 8, !dbg !4450
  %56 = trunc i32 %55 to i8, !dbg !4451
  store i8 %56, i8* %37, align 1, !dbg !4452
  %57 = trunc i32 %46 to i8, !dbg !4453
  store i8 %57, i8* %38, align 1, !dbg !4454
  %58 = call i32 @flash_wait_ready(i32 noundef 3) #16, !dbg !4455
  %59 = call i32 @flash_write_enable() #16, !dbg !4457
  %60 = call i32 @save_and_set_interrupt_mask() #14, !dbg !4458
  call void @llvm.dbg.value(metadata i32 %60, metadata !4404, metadata !DIExpression()), !dbg !4408
  call void @SF_DAL_FLAG_BUSY_SET() #14, !dbg !4459
  %61 = call i32 @sfc_write(i8* noundef nonnull %5, i32 noundef 4, i8* noundef %45, i32 noundef %52) #14, !dbg !4460
  call void @llvm.dbg.value(metadata i32 %61, metadata !4399, metadata !DIExpression()), !dbg !4408
  call void @restore_interrupt_mask(i32 noundef %60) #14, !dbg !4461
  br label %62, !dbg !4462

62:                                               ; preds = %62, %43
  %63 = load i8, i8* %40, align 1, !dbg !4463
  %64 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef null, i32 noundef %39, i8 noundef zeroext %63) #14, !dbg !4465
  call void @llvm.dbg.value(metadata i32 %64, metadata !4403, metadata !DIExpression()), !dbg !4408
  %65 = icmp eq i32 %64, 0, !dbg !4466
  br i1 %65, label %62, label %66, !dbg !4467, !llvm.loop !4468

66:                                               ; preds = %62
  %67 = icmp sgt i32 %61, 0, !dbg !4470
  br i1 %67, label %68, label %73, !dbg !4472

68:                                               ; preds = %66
  %69 = add nsw i32 %61, %49, !dbg !4473
  call void @llvm.dbg.value(metadata i32 %69, metadata !4400, metadata !DIExpression()), !dbg !4408
  %70 = icmp ult i32 %61, %52, !dbg !4475
  br i1 %70, label %71, label %73, !dbg !4477

71:                                               ; preds = %68
  %72 = call i32 @flash_write_disable() #16, !dbg !4478
  call void @__assert_func(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3.26, i32 0, i32 0), i32 noundef 942, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.flash_write, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0)) #15, !dbg !4480
  unreachable, !dbg !4480

73:                                               ; preds = %68, %66
  %74 = phi i32 [ %69, %68 ], [ %49, %66 ], !dbg !4408
  call void @llvm.dbg.value(metadata i32 %74, metadata !4400, metadata !DIExpression()), !dbg !4408
  %75 = sub i32 %47, %52, !dbg !4481
  call void @llvm.dbg.value(metadata i32 %75, metadata !4396, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata !DIArgList(i32 %52, i32 %46), metadata !4405, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4408
  call void @llvm.dbg.value(metadata !DIArgList(i8* %45, i32 %52), metadata !4406, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4408
  call void @llvm.dbg.value(metadata i32 0, metadata !4397, metadata !DIExpression()), !dbg !4408
  %76 = icmp sgt i32 %75, 0, !dbg !4440
  br i1 %76, label %77, label %41, !dbg !4441, !llvm.loop !4482

77:                                               ; preds = %73
  %78 = getelementptr inbounds i8, i8* %45, i32 %52, !dbg !4484
  call void @llvm.dbg.value(metadata i8* %78, metadata !4406, metadata !DIExpression()), !dbg !4408
  %79 = add i32 %52, %46, !dbg !4485
  call void @llvm.dbg.value(metadata i32 %79, metadata !4405, metadata !DIExpression()), !dbg !4408
  %80 = load i32, i32* @gSFC_max_data_size, align 4, !dbg !4445
  br label %43, !dbg !4441

81:                                               ; preds = %41, %81
  %82 = call i32 @SF_DAL_CheckDeviceReady(i8* noundef null, i32 noundef 0) #14, !dbg !4486
  call void @llvm.dbg.value(metadata i32 %82, metadata !4403, metadata !DIExpression()), !dbg !4408
  %83 = icmp eq i32 %82, -121, !dbg !4488
  br i1 %83, label %81, label %84, !dbg !4489, !llvm.loop !4490

84:                                               ; preds = %81
  %85 = call i32 @flash_write_disable() #16, !dbg !4492
  br label %86, !dbg !4493

86:                                               ; preds = %7, %3, %84
  %87 = phi i32 [ %42, %84 ], [ 0, %3 ], [ -1, %7 ], !dbg !4408
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %5) #13, !dbg !4494
  ret i32 %87, !dbg !4494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write_security_crc(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !4495 {
  %2 = alloca [5 x i8], align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4497, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.value(metadata i32 4, metadata !4498, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.value(metadata i32 0, metadata !4499, metadata !DIExpression()), !dbg !4501
  %3 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 0, !dbg !4502
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %3) #13, !dbg !4502
  call void @llvm.dbg.declare(metadata [5 x i8]* %2, metadata !4500, metadata !DIExpression()), !dbg !4503
  %4 = and i32 %0, 4095, !dbg !4504
  %5 = icmp eq i32 %4, 0, !dbg !4504
  br i1 %5, label %6, label %29, !dbg !4506

6:                                                ; preds = %1
  %7 = add nuw i32 %0, 4, !dbg !4507
  %8 = load %struct.flash_info_t*, %struct.flash_info_t** @spi_chip_info, align 4, !dbg !4509
  %9 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 3, !dbg !4510
  %10 = load i32, i32* %9, align 4, !dbg !4510
  %11 = getelementptr inbounds %struct.flash_info_t, %struct.flash_info_t* %8, i32 0, i32 4, !dbg !4511
  %12 = load i32, i32* %11, align 4, !dbg !4511
  %13 = mul i32 %12, %10, !dbg !4512
  %14 = icmp ugt i32 %7, %13, !dbg !4513
  br i1 %14, label %29, label %15, !dbg !4514

15:                                               ; preds = %6
  store i32 5, i32* @sf_drvier_status, align 4, !dbg !4515
  %16 = tail call i32 @flash_wait_ready(i32 noundef 2) #16, !dbg !4516
  %17 = tail call i32 @flash_erase_page(i32 noundef %0) #16, !dbg !4518
  store i8 2, i8* %3, align 1, !dbg !4519
  %18 = lshr i32 %0, 16, !dbg !4520
  %19 = trunc i32 %18 to i8, !dbg !4521
  %20 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 1, !dbg !4522
  store i8 %19, i8* %20, align 1, !dbg !4523
  %21 = lshr i32 %0, 8, !dbg !4524
  %22 = trunc i32 %21 to i8, !dbg !4525
  %23 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 2, !dbg !4526
  store i8 %22, i8* %23, align 1, !dbg !4527
  %24 = trunc i32 %0 to i8, !dbg !4528
  %25 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i32 0, i32 3, !dbg !4529
  store i8 %24, i8* %25, align 1, !dbg !4530
  %26 = tail call i32 @flash_write_enable() #16, !dbg !4531
  %27 = tail call i32 @flash_unprotect() #16, !dbg !4532
  %28 = call i32 @sfc_security_write_crc(i8* noundef nonnull %3, i32 noundef 4) #14, !dbg !4533
  call void @llvm.dbg.value(metadata i32 %28, metadata !4499, metadata !DIExpression()), !dbg !4501
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4534
  br label %29, !dbg !4535

29:                                               ; preds = %6, %1, %15
  %30 = phi i32 [ %28, %15 ], [ -1, %1 ], [ -1, %6 ], !dbg !4501
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %3) #13, !dbg !4536
  ret i32 %30, !dbg !4536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @flash_erase_write(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ramTEXT" !dbg !4537 {
  %4 = alloca [4096 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4539, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %1, metadata !4540, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %2, metadata !4541, metadata !DIExpression()), !dbg !4556
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 0, !dbg !4557
  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %5) #13, !dbg !4557
  call void @llvm.dbg.declare(metadata [4096 x i8]* %4, metadata !4542, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i32 4096, metadata !4546, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 4095, metadata !4547, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %0, metadata !4539, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %1, metadata !4540, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %2, metadata !4541, metadata !DIExpression()), !dbg !4556
  %6 = icmp sgt i32 %2, 0, !dbg !4559
  br i1 %6, label %7, label %43, !dbg !4560

7:                                                ; preds = %3, %37
  %8 = phi i8* [ %40, %37 ], [ %0, %3 ]
  %9 = phi i32 [ %41, %37 ], [ %1, %3 ]
  %10 = phi i32 [ %38, %37 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %8, metadata !4539, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %9, metadata !4540, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %10, metadata !4541, metadata !DIExpression()), !dbg !4556
  %11 = and i32 %9, 4095, !dbg !4561
  %12 = icmp ne i32 %11, 0, !dbg !4561
  %13 = icmp ult i32 %10, 4096
  %14 = select i1 %12, i1 true, i1 %13, !dbg !4562
  br i1 %14, label %15, label %30, !dbg !4562

15:                                               ; preds = %7
  %16 = and i32 %9, -4096, !dbg !4563
  call void @llvm.dbg.value(metadata i32 %16, metadata !4552, metadata !DIExpression()), !dbg !4564
  %17 = call i32 @flash_direct_read_nocache(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #16, !dbg !4565
  %18 = icmp eq i32 %17, 4096, !dbg !4567
  br i1 %18, label %19, label %45, !dbg !4568

19:                                               ; preds = %15
  store i32 4, i32* @sf_drvier_status, align 4, !dbg !4569
  call void @llvm.dbg.value(metadata i32 %11, metadata !4548, metadata !DIExpression()), !dbg !4564
  %20 = sub nuw nsw i32 4096, %11, !dbg !4570
  %21 = icmp ugt i32 %10, %20, !dbg !4570
  %22 = select i1 %21, i32 %20, i32 %10, !dbg !4570
  call void @llvm.dbg.value(metadata i32 %22, metadata !4553, metadata !DIExpression()), !dbg !4564
  %23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %4, i32 0, i32 %11, !dbg !4571
  %24 = call i8* @memcpy(i8* noundef nonnull %23, i8* noundef %8, i32 noundef %22) #14, !dbg !4572
  %25 = call i32 @flash_erase(i32 noundef %16, i32 noundef 4096) #16, !dbg !4573
  %26 = call i32 @flash_write(i8* noundef nonnull %5, i32 noundef %16, i32 noundef 4096) #16, !dbg !4575
  %27 = icmp eq i32 %26, 4096, !dbg !4577
  br i1 %27, label %28, label %45, !dbg !4578

28:                                               ; preds = %19
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %22), metadata !4539, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %22), metadata !4540, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  %29 = sub nsw i32 %10, %22, !dbg !4579
  call void @llvm.dbg.value(metadata i32 %29, metadata !4541, metadata !DIExpression()), !dbg !4556
  br label %37

30:                                               ; preds = %7
  %31 = and i32 %10, -4096, !dbg !4580
  call void @llvm.dbg.value(metadata i32 %31, metadata !4554, metadata !DIExpression()), !dbg !4581
  %32 = call i32 @flash_erase(i32 noundef %9, i32 noundef %31) #16, !dbg !4582
  %33 = call i32 @flash_write(i8* noundef %8, i32 noundef %9, i32 noundef %31) #16, !dbg !4584
  %34 = icmp eq i32 %33, %31, !dbg !4586
  br i1 %34, label %35, label %43, !dbg !4587

35:                                               ; preds = %30
  call void @llvm.dbg.value(metadata !DIArgList(i8* %8, i32 %31), metadata !4539, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %31), metadata !4540, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  %36 = and i32 %10, 4095, !dbg !4588
  call void @llvm.dbg.value(metadata i8* %8, metadata !4539, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %9, metadata !4540, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %10, metadata !4541, metadata !DIExpression()), !dbg !4556
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %29, %28 ], [ %36, %35 ]
  %39 = phi i32 [ %22, %28 ], [ %31, %35 ]
  %40 = getelementptr inbounds i8, i8* %8, i32 %39, !dbg !4589
  %41 = add i32 %39, %9, !dbg !4589
  call void @llvm.dbg.value(metadata i8* %40, metadata !4539, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %41, metadata !4540, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %38, metadata !4541, metadata !DIExpression()), !dbg !4556
  %42 = icmp sgt i32 %38, 0, !dbg !4559
  br i1 %42, label %7, label %43, !dbg !4560, !llvm.loop !4590

43:                                               ; preds = %37, %30, %3
  %44 = phi i32 [ 0, %3 ], [ -1, %30 ], [ 0, %37 ]
  store i32 0, i32* @sf_drvier_status, align 4, !dbg !4556
  br label %45, !dbg !4592

45:                                               ; preds = %19, %15, %43
  %46 = phi i32 [ %44, %43 ], [ -2, %15 ], [ -4, %19 ], !dbg !4556
  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %5) #13, !dbg !4592
  ret i32 %46, !dbg !4592
}

; Function Attrs: noinline nounwind optsize
declare dso_local i32 @flash_direct_read_nocache(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #0 section ".ramTEXT"

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @query_spi_flash_status() local_unnamed_addr #8 section ".ramTEXT" !dbg !4593 {
  %1 = load i32, i32* @sf_drvier_status, align 4, !dbg !4597
  switch i32 %1, label %3 [
    i32 -1, label %7
    i32 0, label %2
  ], !dbg !4599

2:                                                ; preds = %0
  br label %7, !dbg !4600

3:                                                ; preds = %0
  %4 = add i32 %1, -3, !dbg !4603
  %5 = icmp ult i32 %4, 3, !dbg !4603
  %6 = select i1 %5, i32 1, i32 2, !dbg !4605
  br label %7, !dbg !4605

7:                                                ; preds = %3, %0, %2
  %8 = phi i32 [ 0, %2 ], [ %1, %0 ], [ %6, %3 ], !dbg !4606
  ret i32 %8, !dbg !4607
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_count() local_unnamed_addr #0 !dbg !4608 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 2) #14, !dbg !4609
  ret i32 %1, !dbg !4610
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time(i32 noundef %0) local_unnamed_addr #0 !dbg !4611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4613, metadata !DIExpression()), !dbg !4616
  %2 = tail call i32 @get_current_count() #16, !dbg !4617
  %3 = add i32 %2, %0, !dbg !4618
  %4 = xor i32 %3, -1, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %3, metadata !4614, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4616
  %5 = tail call i32 @get_current_count() #16, !dbg !4620
  call void @llvm.dbg.value(metadata i32 %5, metadata !4615, metadata !DIExpression()), !dbg !4616
  %6 = add i32 %5, %4, !dbg !4621
  %7 = icmp slt i32 %6, 0, !dbg !4621
  br i1 %7, label %8, label %12, !dbg !4622

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_count() #16, !dbg !4623
  call void @llvm.dbg.value(metadata i32 %9, metadata !4615, metadata !DIExpression()), !dbg !4616
  %10 = add i32 %9, %4, !dbg !4621
  %11 = icmp slt i32 %10, 0, !dbg !4621
  br i1 %11, label %8, label %12, !dbg !4622, !llvm.loop !4625

12:                                               ; preds = %8, %1
  ret void, !dbg !4627
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_time_for_gpt4(i32 noundef %0) local_unnamed_addr #0 !dbg !4628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4630, metadata !DIExpression()), !dbg !4633
  %2 = tail call i32 @get_current_gpt4_count() #16, !dbg !4634
  %3 = add i32 %2, %0, !dbg !4635
  %4 = xor i32 %3, -1, !dbg !4636
  call void @llvm.dbg.value(metadata i32 %3, metadata !4631, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4633
  %5 = tail call i32 @get_current_gpt4_count() #16, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %5, metadata !4632, metadata !DIExpression()), !dbg !4633
  %6 = add i32 %5, %4, !dbg !4638
  %7 = icmp slt i32 %6, 0, !dbg !4638
  br i1 %7, label %8, label %12, !dbg !4639

8:                                                ; preds = %1, %8
  %9 = tail call i32 @get_current_gpt4_count() #16, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %9, metadata !4632, metadata !DIExpression()), !dbg !4633
  %10 = add i32 %9, %4, !dbg !4638
  %11 = icmp slt i32 %10, 0, !dbg !4638
  br i1 %11, label %8, label %12, !dbg !4639, !llvm.loop !4642

12:                                               ; preds = %8, %1
  ret void, !dbg !4644
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_gpt4_count() local_unnamed_addr #0 !dbg !4645 {
  %1 = tail call i32 @GPT_return_current_count(i32 noundef 4) #14, !dbg !4646
  ret i32 %1, !dbg !4647
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !4648 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4650, metadata !DIExpression()), !dbg !4652
  %2 = shl i32 %0, 5, !dbg !4653
  call void @llvm.dbg.value(metadata i32 %2, metadata !4651, metadata !DIExpression()), !dbg !4652
  %3 = mul i32 %0, 7, !dbg !4654
  %4 = udiv i32 %3, 10, !dbg !4655
  %5 = add i32 %4, %2, !dbg !4656
  call void @llvm.dbg.value(metadata i32 %5, metadata !4651, metadata !DIExpression()), !dbg !4652
  %6 = mul i32 %0, 6, !dbg !4657
  %7 = udiv i32 %6, 100, !dbg !4658
  %8 = add i32 %5, %7, !dbg !4659
  call void @llvm.dbg.value(metadata i32 %8, metadata !4651, metadata !DIExpression()), !dbg !4652
  %9 = shl i32 %0, 3, !dbg !4660
  %10 = udiv i32 %9, 1000, !dbg !4661
  %11 = add i32 %8, %10, !dbg !4662
  call void @llvm.dbg.value(metadata i32 %11, metadata !4651, metadata !DIExpression()), !dbg !4652
  tail call void @delay_time(i32 noundef %11) #16, !dbg !4663
  ret void, !dbg !4664
}

; Function Attrs: noinline nounwind optsize
define dso_local void @delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !4665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4667, metadata !DIExpression()), !dbg !4670
  %2 = tail call i32 @top_mcu_freq_get() #14, !dbg !4671
  %3 = udiv i32 %2, 1000000, !dbg !4672
  call void @llvm.dbg.value(metadata i32 %3, metadata !4669, metadata !DIExpression()), !dbg !4670
  %4 = mul i32 %3, %0, !dbg !4673
  call void @llvm.dbg.value(metadata i32 %4, metadata !4668, metadata !DIExpression()), !dbg !4670
  tail call void @delay_time_for_gpt4(i32 noundef %4) #16, !dbg !4674
  ret void, !dbg !4675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvTMR_init(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2, void ()* noundef %3) local_unnamed_addr #0 !dbg !4676 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4680, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i32 %1, metadata !4681, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.value(metadata i1 %2, metadata !4682, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4684
  call void @llvm.dbg.value(metadata void ()* %3, metadata !4683, metadata !DIExpression()), !dbg !4684
  tail call void @GPT_Stop(i32 noundef %0) #14, !dbg !4685
  %5 = icmp eq i32 %0, 0, !dbg !4686
  br i1 %5, label %6, label %7, !dbg !4688

6:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824304 to i32*), align 16, !dbg !4689
  br label %8, !dbg !4691

7:                                                ; preds = %4
  store volatile i32 0, i32* inttoptr (i32 -2096824288 to i32*), align 32, !dbg !4692
  br label %8

8:                                                ; preds = %7, %6
  %9 = phi i32 [ %0, %7 ], [ 0, %6 ]
  tail call void @GPT_init(i32 noundef %9, i32 noundef 1, void ()* noundef %3) #14, !dbg !4694
  tail call void @GPT_ResetTimer(i32 noundef %0, i32 noundef %1, i1 noundef zeroext %2) #14, !dbg !4695
  ret void, !dbg !4696
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Start(i32 noundef %0) local_unnamed_addr #0 !dbg !4697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4699, metadata !DIExpression()), !dbg !4700
  tail call void @GPT_Start(i32 noundef %0) #14, !dbg !4701
  ret void, !dbg !4702
}

; Function Attrs: noinline nounwind optsize
define dso_local void @TMR_Stop(i32 noundef %0) local_unnamed_addr #0 !dbg !4703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4705, metadata !DIExpression()), !dbg !4706
  tail call void @GPT_Stop(i32 noundef %0) #14, !dbg !4707
  ret void, !dbg !4708
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT2Init() local_unnamed_addr #0 !dbg !4709 {
  tail call void @CM4_GPT2Init() #14, !dbg !4710
  ret void, !dbg !4711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drvGPT4Init() local_unnamed_addr #0 !dbg !4712 {
  tail call void @CM4_GPT4Init() #14, !dbg !4713
  ret void, !dbg !4714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @clear_TMR_INT_status_bit(i32 noundef %0) local_unnamed_addr #5 !dbg !4715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4717, metadata !DIExpression()), !dbg !4718
  switch i32 %0, label %5 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !4719

2:                                                ; preds = %1
  br label %3, !dbg !4720

3:                                                ; preds = %1, %2
  %4 = phi i32 [ 2, %2 ], [ 1, %1 ]
  store volatile i32 %4, i32* inttoptr (i32 -2096824320 to i32*), align 65536, !dbg !4718
  br label %5, !dbg !4723

5:                                                ; preds = %3, %1
  ret void, !dbg !4723
}

; Function Attrs: noinline nounwind optsize
define dso_local void @top_xtal_init() local_unnamed_addr #0 !dbg !4724 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4726, metadata !DIExpression()), !dbg !4728
  %1 = load volatile i32, i32* inttoptr (i32 -2097118784 to i32*), align 64, !dbg !4729
  call void @llvm.dbg.value(metadata i32 %1, metadata !4727, metadata !DIExpression()), !dbg !4728
  %2 = lshr i32 %1, 13, !dbg !4730
  %3 = and i32 %2, 7, !dbg !4731
  call void @llvm.dbg.value(metadata i32 %3, metadata !4727, metadata !DIExpression()), !dbg !4728
  %4 = load volatile i32, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !4732
  call void @llvm.dbg.value(metadata i32 %4, metadata !4726, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i32 %4, metadata !4726, metadata !DIExpression(DW_OP_constu, 18446744073709549568, DW_OP_and, DW_OP_stack_value)), !dbg !4728
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init, i32 0, i32 %3, !dbg !4733
  %6 = load i32, i32* %5, align 4, !dbg !4733
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.top_xtal_init.1, i32 0, i32 %3, !dbg !4733
  %8 = load i32, i32* %7, align 4, !dbg !4733
  %9 = and i32 %4, -2048, !dbg !4734
  call void @llvm.dbg.value(metadata i32 %9, metadata !4726, metadata !DIExpression()), !dbg !4728
  store i32 %6, i32* @gXtalFreq, align 4, !dbg !4735
  %10 = or i32 %9, %8, !dbg !4735
  call void @llvm.dbg.value(metadata i32 %10, metadata !4726, metadata !DIExpression()), !dbg !4728
  store volatile i32 %10, i32* inttoptr (i32 -2097118792 to i32*), align 8, !dbg !4737
  %11 = load i32, i32* @gXtalFreq, align 4, !dbg !4738
  store i32 %11, i32* @gCpuFrequency, align 4, !dbg !4739
  tail call void @SystemCoreClockUpdate() #14, !dbg !4740
  %12 = load i32, i32* @SystemCoreClock, align 4, !dbg !4741
  %13 = udiv i32 %12, 1000, !dbg !4742
  %14 = tail call i32 @SysTick_Set(i32 noundef %13) #14, !dbg !4743
  ret void, !dbg !4744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_xtal_freq_get() local_unnamed_addr #8 !dbg !4745 {
  %1 = load i32, i32* @gXtalFreq, align 4, !dbg !4746
  ret i32 %1, !dbg !4747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @top_mcu_freq_get() local_unnamed_addr #8 !dbg !4748 {
  %1 = load i32, i32* @gCpuFrequency, align 4, !dbg !4749
  ret i32 %1, !dbg !4750
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON() local_unnamed_addr #10 !dbg !4751 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4755
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4755
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4753, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4754, metadata !DIExpression()), !dbg !4757
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #16, !dbg !4758
  store volatile i32 %3, i32* %1, align 4, !dbg !4759
  %4 = load volatile i32, i32* %1, align 4, !dbg !4760
  %5 = lshr i32 %4, 28, !dbg !4761
  %6 = and i32 %5, 3, !dbg !4762
  store volatile i32 %6, i32* %1, align 4, !dbg !4763
  %7 = load volatile i32, i32* %1, align 4, !dbg !4764
  %8 = icmp eq i32 %7, 0, !dbg !4766
  br i1 %8, label %9, label %22, !dbg !4767

9:                                                ; preds = %0
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #16, !dbg !4768
  store volatile i32 %10, i32* %1, align 4, !dbg !4770
  %11 = load volatile i32, i32* %1, align 4, !dbg !4771
  %12 = and i32 %11, -16777217, !dbg !4772
  store volatile i32 %12, i32* %1, align 4, !dbg !4773
  %13 = load volatile i32, i32* %1, align 4, !dbg !4774
  %14 = or i32 %13, 536870912, !dbg !4775
  store volatile i32 %14, i32* %1, align 4, !dbg !4776
  %15 = load volatile i32, i32* %1, align 4, !dbg !4777
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %15) #16, !dbg !4778
  br label %16, !dbg !4779

16:                                               ; preds = %16, %9
  %17 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #16, !dbg !4780
  store volatile i32 %17, i32* %1, align 4, !dbg !4782
  %18 = load volatile i32, i32* %1, align 4, !dbg !4783
  %19 = and i32 %18, 134217728, !dbg !4784
  store volatile i32 %19, i32* %1, align 4, !dbg !4785
  %20 = load volatile i32, i32* %1, align 4, !dbg !4786
  %21 = icmp eq i32 %20, 0, !dbg !4787
  br i1 %21, label %16, label %22, !dbg !4788, !llvm.loop !4789

22:                                               ; preds = %16, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4791
  ret void, !dbg !4791
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @cmnReadRegister32(i8* noundef %0) unnamed_addr #7 !dbg !4792 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4799, metadata !DIExpression()), !dbg !4800
  %2 = bitcast i8* %0 to i32*, !dbg !4801
  %3 = load volatile i32, i32* %2, align 4, !dbg !4802
  ret i32 %3, !dbg !4803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @cmnWriteRegister32(i8* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4808, metadata !DIExpression()), !dbg !4810
  call void @llvm.dbg.value(metadata i32 %1, metadata !4809, metadata !DIExpression()), !dbg !4810
  %3 = bitcast i8* %0 to i32*, !dbg !4811
  store volatile i32 %1, i32* %3, align 4, !dbg !4812
  ret void, !dbg !4813
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1ON_PLL2ON(i8 noundef zeroext %0) local_unnamed_addr #10 !dbg !4814 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !4818, metadata !DIExpression()), !dbg !4821
  %3 = bitcast i32* %2 to i8*, !dbg !4822
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4822
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4819, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4820, metadata !DIExpression()), !dbg !4821
  %4 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #16, !dbg !4824
  store volatile i32 %4, i32* %2, align 4, !dbg !4825
  %5 = load volatile i32, i32* %2, align 4, !dbg !4826
  %6 = lshr i32 %5, 28, !dbg !4827
  %7 = and i32 %6, 3, !dbg !4828
  store volatile i32 %7, i32* %2, align 4, !dbg !4829
  %8 = load volatile i32, i32* %2, align 4, !dbg !4830
  %9 = icmp eq i32 %8, 3, !dbg !4832
  br i1 %9, label %38, label %10, !dbg !4833

10:                                               ; preds = %1
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #16, !dbg !4834
  store volatile i32 %11, i32* %2, align 4, !dbg !4836
  %12 = load volatile i32, i32* %2, align 4, !dbg !4837
  %13 = and i32 %12, -262145, !dbg !4838
  store volatile i32 %13, i32* %2, align 4, !dbg !4839
  %14 = load volatile i32, i32* %2, align 4, !dbg !4840
  %15 = and i32 %14, -16777217, !dbg !4841
  store volatile i32 %15, i32* %2, align 4, !dbg !4842
  %16 = load volatile i32, i32* %2, align 4, !dbg !4843
  store volatile i32 %16, i32* %2, align 4, !dbg !4844
  %17 = load volatile i32, i32* %2, align 4, !dbg !4845
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %17) #16, !dbg !4846
  %18 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #16, !dbg !4847
  store volatile i32 %18, i32* %2, align 4, !dbg !4848
  %19 = load volatile i32, i32* %2, align 4, !dbg !4849
  %20 = and i32 %19, -805306369, !dbg !4850
  store volatile i32 %20, i32* %2, align 4, !dbg !4851
  %21 = load volatile i32, i32* %2, align 4, !dbg !4852
  %22 = and i32 %21, -16777217, !dbg !4853
  store volatile i32 %22, i32* %2, align 4, !dbg !4854
  %23 = load volatile i32, i32* %2, align 4, !dbg !4855
  %24 = or i32 %23, 805306368, !dbg !4856
  store volatile i32 %24, i32* %2, align 4, !dbg !4857
  %25 = load volatile i32, i32* %2, align 4, !dbg !4858
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %25) #16, !dbg !4859
  br label %26, !dbg !4860

26:                                               ; preds = %26, %10
  %27 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #16, !dbg !4861
  store volatile i32 %27, i32* %2, align 4, !dbg !4863
  %28 = load volatile i32, i32* %2, align 4, !dbg !4864
  %29 = and i32 %28, 67108864, !dbg !4865
  store volatile i32 %29, i32* %2, align 4, !dbg !4866
  %30 = load volatile i32, i32* %2, align 4, !dbg !4867
  %31 = icmp eq i32 %30, 0, !dbg !4868
  br i1 %31, label %26, label %32, !dbg !4869, !llvm.loop !4870

32:                                               ; preds = %26
  %33 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #16, !dbg !4872
  store volatile i32 %33, i32* %2, align 4, !dbg !4873
  %34 = load volatile i32, i32* %2, align 4, !dbg !4874
  %35 = and i32 %34, -262145, !dbg !4875
  store volatile i32 %35, i32* %2, align 4, !dbg !4876
  %36 = load volatile i32, i32* %2, align 4, !dbg !4877
  %37 = and i32 %36, -16777217, !dbg !4878
  store volatile i32 %37, i32* %2, align 4, !dbg !4879
  br label %38, !dbg !4880

38:                                               ; preds = %32, %1
  %39 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #16, !dbg !4881
  store volatile i32 %39, i32* %2, align 4, !dbg !4882
  %40 = icmp eq i8 %0, 0, !dbg !4883
  %41 = load volatile i32, i32* %2, align 4, !dbg !4885
  br i1 %40, label %44, label %42, !dbg !4886

42:                                               ; preds = %38
  %43 = or i32 %41, 262144, !dbg !4887
  store volatile i32 %43, i32* %2, align 4, !dbg !4889
  br label %45, !dbg !4890

44:                                               ; preds = %38
  store volatile i32 %41, i32* %2, align 4, !dbg !4891
  br label %45

45:                                               ; preds = %44, %42
  %46 = load volatile i32, i32* %2, align 4, !dbg !4893
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %46) #16, !dbg !4894
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4895
  ret void, !dbg !4895
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnPLL1OFF_PLL2OFF() local_unnamed_addr #10 !dbg !4896 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4900
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4900
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4898, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118792 to i32*), metadata !4899, metadata !DIExpression()), !dbg !4902
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #16, !dbg !4903
  store volatile i32 %3, i32* %1, align 4, !dbg !4904
  %4 = load volatile i32, i32* %1, align 4, !dbg !4905
  %5 = and i32 %4, -805306369, !dbg !4906
  store volatile i32 %5, i32* %1, align 4, !dbg !4907
  %6 = load volatile i32, i32* %1, align 4, !dbg !4908
  %7 = and i32 %6, -16777217, !dbg !4909
  store volatile i32 %7, i32* %1, align 4, !dbg !4910
  %8 = load volatile i32, i32* %1, align 4, !dbg !4911
  store volatile i32 %8, i32* %1, align 4, !dbg !4912
  %9 = load volatile i32, i32* %1, align 4, !dbg !4913
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %9) #16, !dbg !4914
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*)) #16, !dbg !4915
  store volatile i32 %10, i32* %1, align 4, !dbg !4916
  %11 = load volatile i32, i32* %1, align 4, !dbg !4917
  %12 = and i32 %11, -262145, !dbg !4918
  store volatile i32 %12, i32* %1, align 4, !dbg !4919
  %13 = load volatile i32, i32* %1, align 4, !dbg !4920
  %14 = and i32 %13, -16777217, !dbg !4921
  store volatile i32 %14, i32* %1, align 4, !dbg !4922
  %15 = load volatile i32, i32* %1, align 4, !dbg !4923
  store volatile i32 %15, i32* %1, align 4, !dbg !4924
  %16 = load volatile i32, i32* %1, align 4, !dbg !4925
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118792 to i8*), i32 noundef %16) #16, !dbg !4926
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4927
  ret void, !dbg !4927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureToXtal() local_unnamed_addr #0 !dbg !4928 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4932
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4932
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4930, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4931, metadata !DIExpression()), !dbg !4934
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !4935
  store volatile i32 %3, i32* %1, align 4, !dbg !4936
  %4 = load volatile i32, i32* %1, align 4, !dbg !4937
  %5 = and i32 %4, -8, !dbg !4938
  store volatile i32 %5, i32* %1, align 4, !dbg !4939
  %6 = load volatile i32, i32* %1, align 4, !dbg !4940
  store volatile i32 %6, i32* %1, align 4, !dbg !4941
  %7 = load volatile i32, i32* %1, align 4, !dbg !4942
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #16, !dbg !4943
  %8 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !4944
  store volatile i32 %8, i32* %1, align 4, !dbg !4945
  %9 = load volatile i32, i32* %1, align 4, !dbg !4946
  %10 = and i32 %9, -49153, !dbg !4947
  store volatile i32 %10, i32* %1, align 4, !dbg !4948
  %11 = load volatile i32, i32* %1, align 4, !dbg !4949
  store volatile i32 %11, i32* %1, align 4, !dbg !4950
  %12 = load volatile i32, i32* %1, align 4, !dbg !4951
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %12) #16, !dbg !4952
  br label %13, !dbg !4953

13:                                               ; preds = %13, %0
  %14 = load volatile i32, i32* %1, align 4, !dbg !4954
  %15 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !4955
  %16 = icmp eq i32 %14, %15, !dbg !4956
  br i1 %16, label %17, label %13, !dbg !4953, !llvm.loop !4957

17:                                               ; preds = %13
  %18 = tail call i32 @top_xtal_freq_get() #16, !dbg !4959
  store i32 %18, i32* @gCpuFrequency, align 4, !dbg !4960
  tail call void @SystemCoreClockUpdate() #14, !dbg !4961
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !4962
  %20 = udiv i32 %19, 1000, !dbg !4963
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #14, !dbg !4964
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4965
  ret void, !dbg !4965
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo192M() local_unnamed_addr #0 !dbg !4966 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !4970
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4970
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4968, metadata !DIExpression()), !dbg !4971
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !4969, metadata !DIExpression()), !dbg !4972
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 1) #16, !dbg !4973
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !4974
  store volatile i32 %3, i32* %1, align 4, !dbg !4975
  %4 = load volatile i32, i32* %1, align 4, !dbg !4976
  %5 = and i32 %4, -49153, !dbg !4977
  store volatile i32 %5, i32* %1, align 4, !dbg !4978
  %6 = load volatile i32, i32* %1, align 4, !dbg !4979
  %7 = or i32 %6, 16384, !dbg !4980
  store volatile i32 %7, i32* %1, align 4, !dbg !4981
  %8 = load volatile i32, i32* %1, align 4, !dbg !4982
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #16, !dbg !4983
  br label %9, !dbg !4984

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !4985
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !4986
  %12 = icmp eq i32 %10, %11, !dbg !4987
  br i1 %12, label %13, label %9, !dbg !4984, !llvm.loop !4988

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !4990
  store volatile i32 %14, i32* %1, align 4, !dbg !4991
  %15 = load volatile i32, i32* %1, align 4, !dbg !4992
  %16 = and i32 %15, -1009, !dbg !4993
  store volatile i32 %16, i32* %1, align 4, !dbg !4994
  %17 = load volatile i32, i32* %1, align 4, !dbg !4995
  %18 = or i32 %17, 128, !dbg !4996
  store volatile i32 %18, i32* %1, align 4, !dbg !4997
  %19 = load volatile i32, i32* %1, align 4, !dbg !4998
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #16, !dbg !4999
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !5000
  store volatile i32 %20, i32* %1, align 4, !dbg !5001
  %21 = load volatile i32, i32* %1, align 4, !dbg !5002
  %22 = and i32 %21, -8, !dbg !5003
  store volatile i32 %22, i32* %1, align 4, !dbg !5004
  %23 = load volatile i32, i32* %1, align 4, !dbg !5005
  %24 = or i32 %23, 4, !dbg !5006
  store volatile i32 %24, i32* %1, align 4, !dbg !5007
  %25 = load volatile i32, i32* %1, align 4, !dbg !5008
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #16, !dbg !5009
  store i32 192000000, i32* @gCpuFrequency, align 4, !dbg !5010
  tail call void @SystemCoreClockUpdate() #14, !dbg !5011
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !5012
  %27 = udiv i32 %26, 1000, !dbg !5013
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #14, !dbg !5014
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5015
  ret void, !dbg !5015
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo160M() local_unnamed_addr #0 !dbg !5016 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5020
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5020
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5018, metadata !DIExpression()), !dbg !5021
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !5019, metadata !DIExpression()), !dbg !5022
  tail call void @cmnPLL1ON_PLL2ON(i8 noundef zeroext 0) #16, !dbg !5023
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !5024
  store volatile i32 %3, i32* %1, align 4, !dbg !5025
  %4 = load volatile i32, i32* %1, align 4, !dbg !5026
  %5 = and i32 %4, -49153, !dbg !5027
  store volatile i32 %5, i32* %1, align 4, !dbg !5028
  %6 = load volatile i32, i32* %1, align 4, !dbg !5029
  %7 = or i32 %6, 32768, !dbg !5030
  store volatile i32 %7, i32* %1, align 4, !dbg !5031
  %8 = load volatile i32, i32* %1, align 4, !dbg !5032
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %8) #16, !dbg !5033
  br label %9, !dbg !5034

9:                                                ; preds = %9, %0
  %10 = load volatile i32, i32* %1, align 4, !dbg !5035
  %11 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !5036
  %12 = icmp eq i32 %10, %11, !dbg !5037
  br i1 %12, label %13, label %9, !dbg !5034, !llvm.loop !5038

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !5040
  store volatile i32 %14, i32* %1, align 4, !dbg !5041
  %15 = load volatile i32, i32* %1, align 4, !dbg !5042
  %16 = and i32 %15, -1009, !dbg !5043
  store volatile i32 %16, i32* %1, align 4, !dbg !5044
  %17 = load volatile i32, i32* %1, align 4, !dbg !5045
  %18 = or i32 %17, 32, !dbg !5046
  store volatile i32 %18, i32* %1, align 4, !dbg !5047
  %19 = load volatile i32, i32* %1, align 4, !dbg !5048
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %19) #16, !dbg !5049
  %20 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !5050
  store volatile i32 %20, i32* %1, align 4, !dbg !5051
  %21 = load volatile i32, i32* %1, align 4, !dbg !5052
  %22 = and i32 %21, -8, !dbg !5053
  store volatile i32 %22, i32* %1, align 4, !dbg !5054
  %23 = load volatile i32, i32* %1, align 4, !dbg !5055
  %24 = or i32 %23, 4, !dbg !5056
  store volatile i32 %24, i32* %1, align 4, !dbg !5057
  %25 = load volatile i32, i32* %1, align 4, !dbg !5058
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %25) #16, !dbg !5059
  store i32 160000000, i32* @gCpuFrequency, align 4, !dbg !5060
  tail call void @SystemCoreClockUpdate() #14, !dbg !5061
  %26 = load i32, i32* @SystemCoreClock, align 4, !dbg !5062
  %27 = udiv i32 %26, 1000, !dbg !5063
  %28 = tail call i32 @SysTick_Set(i32 noundef %27) #14, !dbg !5064
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5065
  ret void, !dbg !5065
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cmnCpuClkConfigureTo64M() local_unnamed_addr #0 !dbg !5066 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5070
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5070
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5068, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118800 to i32*), metadata !5069, metadata !DIExpression()), !dbg !5072
  tail call void @cmnPLL1ON() #16, !dbg !5073
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !5074
  store volatile i32 %3, i32* %1, align 4, !dbg !5075
  %4 = load volatile i32, i32* %1, align 4, !dbg !5076
  %5 = and i32 %4, -49153, !dbg !5077
  store volatile i32 %5, i32* %1, align 4, !dbg !5078
  %6 = load volatile i32, i32* %1, align 4, !dbg !5079
  store volatile i32 %6, i32* %1, align 4, !dbg !5080
  %7 = load volatile i32, i32* %1, align 4, !dbg !5081
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %7) #16, !dbg !5082
  br label %8, !dbg !5083

8:                                                ; preds = %8, %0
  %9 = load volatile i32, i32* %1, align 4, !dbg !5084
  %10 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !5085
  %11 = icmp eq i32 %9, %10, !dbg !5086
  br i1 %11, label %12, label %8, !dbg !5083, !llvm.loop !5087

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*)) #16, !dbg !5089
  store volatile i32 %13, i32* %1, align 4, !dbg !5090
  %14 = load volatile i32, i32* %1, align 4, !dbg !5091
  %15 = and i32 %14, -8, !dbg !5092
  store volatile i32 %15, i32* %1, align 4, !dbg !5093
  %16 = load volatile i32, i32* %1, align 4, !dbg !5094
  %17 = or i32 %16, 2, !dbg !5095
  store volatile i32 %17, i32* %1, align 4, !dbg !5096
  %18 = load volatile i32, i32* %1, align 4, !dbg !5097
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118800 to i8*), i32 noundef %18) #16, !dbg !5098
  store i32 64000000, i32* @gCpuFrequency, align 4, !dbg !5099
  tail call void @SystemCoreClockUpdate() #14, !dbg !5100
  %19 = load i32, i32* @SystemCoreClock, align 4, !dbg !5101
  %20 = udiv i32 %19, 1000, !dbg !5102
  %21 = tail call i32 @SysTick_Set(i32 noundef %20) #14, !dbg !5103
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5104
  ret void, !dbg !5104
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfToXtal() local_unnamed_addr #10 section ".ramTEXT" !dbg !5105 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5109
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5109
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5107, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !5108, metadata !DIExpression()), !dbg !5111
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #16, !dbg !5112
  store volatile i32 %3, i32* %1, align 4, !dbg !5113
  %4 = load volatile i32, i32* %1, align 4, !dbg !5114
  %5 = and i32 %4, -24577, !dbg !5115
  store volatile i32 %5, i32* %1, align 4, !dbg !5116
  %6 = load volatile i32, i32* %1, align 4, !dbg !5117
  store volatile i32 %6, i32* %1, align 4, !dbg !5118
  %7 = load volatile i32, i32* %1, align 4, !dbg !5119
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %7) #16, !dbg !5120
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5121
  ret void, !dbg !5121
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @cmnSerialFlashClkConfTo64M() local_unnamed_addr #10 section ".ramTEXT" !dbg !5122 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5132
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5132
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5124, metadata !DIExpression()), !dbg !5133
  store volatile i32 0, i32* %1, align 4, !dbg !5133
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2097118796 to i32*), metadata !5125, metadata !DIExpression()), !dbg !5134
  tail call void @cmnPLL1ON() #16, !dbg !5135
  %3 = tail call fastcc i32 @cmnReadRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*)) #16, !dbg !5136
  store volatile i32 %3, i32* %1, align 4, !dbg !5137
  %4 = load volatile i32, i32* %1, align 4, !dbg !5138
  %5 = and i32 %4, -24577, !dbg !5139
  store volatile i32 %5, i32* %1, align 4, !dbg !5140
  %6 = load volatile i32, i32* %1, align 4, !dbg !5141
  %7 = or i32 %6, 8192, !dbg !5142
  store volatile i32 %7, i32* %1, align 4, !dbg !5143
  %8 = load volatile i32, i32* %1, align 4, !dbg !5144
  tail call fastcc void @cmnWriteRegister32(i8* noundef nonnull inttoptr (i32 -2097118796 to i8*), i32 noundef %8) #16, !dbg !5145
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !5126, metadata !DIExpression()), !dbg !5146
  %9 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !5147
  %10 = and i32 %9, -4, !dbg !5147
  store volatile i32 %10, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !5147
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693240 to i32*), metadata !5128, metadata !DIExpression()), !dbg !5148
  %11 = load volatile i32, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !5149
  %12 = or i32 %11, 16, !dbg !5149
  store volatile i32 %12, i32* inttoptr (i32 -2096693240 to i32*), align 8, !dbg !5149
  call void @llvm.dbg.value(metadata i32* inttoptr (i32 -2096693208 to i32*), metadata !5130, metadata !DIExpression()), !dbg !5150
  %13 = load volatile i32, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !5151
  %14 = and i32 %13, -64, !dbg !5151
  %15 = or i32 %14, 24, !dbg !5151
  store volatile i32 %15, i32* inttoptr (i32 -2096693208 to i32*), align 8, !dbg !5151
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5152
  ret void, !dbg !5152
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc() local_unnamed_addr #7 !dbg !5153 {
  %1 = tail call i32 @getc_nowait() #16, !dbg !5156
  call void @llvm.dbg.value(metadata i32 %1, metadata !5155, metadata !DIExpression()), !dbg !5157
  ret i32 %1, !dbg !5158
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @getc_nowait() local_unnamed_addr #7 !dbg !5159 {
  %1 = load volatile i32, i32* inttoptr (i32 -2096955372 to i32*), align 4, !dbg !5162
  %2 = and i32 %1, 1, !dbg !5164
  %3 = icmp eq i32 %2, 0, !dbg !5164
  br i1 %3, label %7, label %4, !dbg !5165

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -2096955392 to i32*), align 65536, !dbg !5166
  %6 = and i32 %5, 255, !dbg !5168
  call void @llvm.dbg.value(metadata i32 %5, metadata !5161, metadata !DIExpression()), !dbg !5169
  br label %7, !dbg !5170

7:                                                ; preds = %0, %4
  %8 = phi i32 [ %6, %4 ], [ -1, %0 ], !dbg !5171
  ret i32 %8, !dbg !5172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_output_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #5 !dbg !5173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5178, metadata !DIExpression()), !dbg !5181
  call void @llvm.dbg.value(metadata i8 %1, metadata !5179, metadata !DIExpression()), !dbg !5181
  %3 = icmp eq i32 %0, 0, !dbg !5182
  %4 = select i1 %3, i32 -2096955392, i32 -2096889856, !dbg !5182
  call void @llvm.dbg.value(metadata i32 %4, metadata !5180, metadata !DIExpression()), !dbg !5181
  %5 = or i32 %4, 20
  %6 = inttoptr i32 %5 to i32*
  br label %7, !dbg !5183

7:                                                ; preds = %7, %2
  %8 = load volatile i32, i32* %6, align 4, !dbg !5184
  %9 = and i32 %8, 32, !dbg !5185
  %10 = icmp eq i32 %9, 0, !dbg !5186
  br i1 %10, label %7, label %11, !dbg !5183, !llvm.loop !5187

11:                                               ; preds = %7
  %12 = zext i8 %1 to i32, !dbg !5189
  %13 = inttoptr i32 %4 to i32*, !dbg !5190
  store volatile i32 %12, i32* %13, align 65536, !dbg !5191
  ret void, !dbg !5192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_input_char(i32 noundef %0) local_unnamed_addr #5 !dbg !5193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5197, metadata !DIExpression()), !dbg !5200
  %2 = icmp eq i32 %0, 0, !dbg !5201
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5201
  call void @llvm.dbg.value(metadata i32 %3, metadata !5198, metadata !DIExpression()), !dbg !5200
  %4 = or i32 %3, 20
  %5 = inttoptr i32 %4 to i32*
  br label %6, !dbg !5202

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* %5, align 4, !dbg !5203
  %8 = and i32 %7, 1, !dbg !5204
  %9 = icmp eq i32 %8, 0, !dbg !5205
  br i1 %9, label %6, label %10, !dbg !5202, !llvm.loop !5206

10:                                               ; preds = %6
  %11 = inttoptr i32 %3 to i32*, !dbg !5208
  %12 = load volatile i32, i32* %11, align 65536, !dbg !5208
  %13 = trunc i32 %12 to i8, !dbg !5208
  call void @llvm.dbg.value(metadata i8 %13, metadata !5199, metadata !DIExpression()), !dbg !5200
  ret i8 %13, !dbg !5209
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_input_char_unblocking(i32 noundef %0) local_unnamed_addr #7 !dbg !5210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5214, metadata !DIExpression()), !dbg !5217
  %2 = icmp eq i32 %0, 0, !dbg !5218
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5218
  call void @llvm.dbg.value(metadata i32 %3, metadata !5215, metadata !DIExpression()), !dbg !5217
  %4 = or i32 %3, 20, !dbg !5219
  %5 = inttoptr i32 %4 to i32*, !dbg !5219
  %6 = load volatile i32, i32* %5, align 4, !dbg !5219
  %7 = and i32 %6, 1, !dbg !5221
  %8 = icmp eq i32 %7, 0, !dbg !5221
  br i1 %8, label %13, label %9, !dbg !5222

9:                                                ; preds = %1
  %10 = inttoptr i32 %3 to i32*, !dbg !5223
  %11 = load volatile i32, i32* %10, align 65536, !dbg !5223
  %12 = and i32 %11, 255, !dbg !5225
  call void @llvm.dbg.value(metadata i32 %11, metadata !5216, metadata !DIExpression()), !dbg !5217
  br label %13, !dbg !5226

13:                                               ; preds = %1, %9
  %14 = phi i32 [ %12, %9 ], [ -1, %1 ], !dbg !5227
  ret i32 %14, !dbg !5228
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_HWInit(i32 noundef %0) local_unnamed_addr #0 !dbg !5229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5233, metadata !DIExpression()), !dbg !5234
  tail call void @halUART_SetFormat(i32 noundef %0, i32 noundef 115200, i16 noundef zeroext 3, i16 noundef zeroext 0, i16 noundef zeroext 0) #16, !dbg !5235
  switch i32 %0, label %7 [
    i32 0, label %3
    i32 1, label %2
  ], !dbg !5236

2:                                                ; preds = %1
  br label %3, !dbg !5237

3:                                                ; preds = %1, %2
  %4 = phi i32* [ inttoptr (i32 -2096889780 to i32*), %2 ], [ inttoptr (i32 -2096955316 to i32*), %1 ]
  %5 = load volatile i32, i32* %4, align 4, !dbg !5241
  %6 = or i32 %5, 1, !dbg !5241
  store volatile i32 %6, i32* %4, align 4, !dbg !5241
  br label %7, !dbg !5242

7:                                                ; preds = %3, %1
  ret void, !dbg !5242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_SetFormat(i32 noundef %0, i32 noundef %1, i16 noundef zeroext %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 !dbg !5243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5247, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata i32 %1, metadata !5248, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata i16 %2, metadata !5249, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata i16 %3, metadata !5250, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata i16 %4, metadata !5251, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata i32 -2096955392, metadata !5253, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, metadata !5260, metadata !DIExpression()), !dbg !5265
  call void @llvm.dbg.declare(metadata [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, metadata !5262, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata i32 0, metadata !5263, metadata !DIExpression()), !dbg !5264
  %6 = tail call i32 @top_xtal_freq_get() #14, !dbg !5267
  store i32 %6, i32* @gUartClkFreq, align 4, !dbg !5268
  %7 = icmp eq i32 %0, 1, !dbg !5269
  %8 = select i1 %7, i32 -2096889856, i32 -2096955392, !dbg !5269
  call void @llvm.dbg.value(metadata i32 %8, metadata !5253, metadata !DIExpression()), !dbg !5264
  %9 = or i32 %8, 36, !dbg !5270
  %10 = inttoptr i32 %9 to i32*, !dbg !5270
  store volatile i32 3, i32* %10, align 4, !dbg !5271
  %11 = or i32 %8, 12, !dbg !5272
  %12 = inttoptr i32 %11 to i32*, !dbg !5272
  %13 = load volatile i32, i32* %12, align 4, !dbg !5272
  call void @llvm.dbg.value(metadata i32 %13, metadata !5255, metadata !DIExpression()), !dbg !5264
  %14 = or i32 %13, 128, !dbg !5273
  store volatile i32 %14, i32* %12, align 4, !dbg !5274
  %15 = load i32, i32* @gUartClkFreq, align 4, !dbg !5275
  %16 = udiv i32 %15, %1, !dbg !5276
  call void @llvm.dbg.value(metadata i32 %16, metadata !5254, metadata !DIExpression()), !dbg !5264
  %17 = lshr i32 %16, 8, !dbg !5277
  %18 = add nuw nsw i32 %17, 1, !dbg !5278
  call void @llvm.dbg.value(metadata i32 %18, metadata !5256, metadata !DIExpression()), !dbg !5264
  %19 = udiv i32 %16, %18, !dbg !5279
  %20 = add i32 %19, -1, !dbg !5281
  call void @llvm.dbg.value(metadata i32 %20, metadata !5257, metadata !DIExpression()), !dbg !5264
  %21 = icmp eq i32 %20, 3, !dbg !5282
  %22 = lshr i32 %20, 1, !dbg !5284
  %23 = add nsw i32 %22, -1, !dbg !5284
  %24 = select i1 %21, i32 0, i32 %23, !dbg !5284
  call void @llvm.dbg.value(metadata i32 %24, metadata !5258, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.value(metadata i32 undef, metadata !5263, metadata !DIExpression()), !dbg !5264
  %25 = mul i32 %15, 10, !dbg !5285
  %26 = udiv i32 %25, %1, !dbg !5286
  %27 = udiv i32 %26, %16, !dbg !5287
  %28 = mul i32 %19, -10, !dbg !5288
  %29 = add i32 %27, %28, !dbg !5289
  %30 = urem i32 %29, 10, !dbg !5290
  call void @llvm.dbg.value(metadata i32 %30, metadata !5259, metadata !DIExpression()), !dbg !5264
  %31 = and i32 %18, 255, !dbg !5291
  %32 = inttoptr i32 %8 to i32*, !dbg !5292
  store volatile i32 %31, i32* %32, align 65536, !dbg !5293
  %33 = lshr i32 %18, 8, !dbg !5294
  %34 = and i32 %33, 255, !dbg !5295
  %35 = or i32 %8, 4, !dbg !5296
  %36 = inttoptr i32 %35 to i32*, !dbg !5296
  store volatile i32 %34, i32* %36, align 4, !dbg !5297
  %37 = or i32 %8, 40, !dbg !5298
  %38 = inttoptr i32 %37 to i32*, !dbg !5298
  store volatile i32 %20, i32* %38, align 8, !dbg !5299
  %39 = or i32 %8, 44, !dbg !5300
  %40 = inttoptr i32 %39 to i32*, !dbg !5300
  store volatile i32 %24, i32* %40, align 4, !dbg !5301
  %41 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_M_mapping, i32 0, i32 %30, !dbg !5302
  %42 = load i16, i16* %41, align 2, !dbg !5302
  %43 = zext i16 %42 to i32, !dbg !5302
  %44 = or i32 %8, 88, !dbg !5303
  %45 = inttoptr i32 %44 to i32*, !dbg !5303
  store volatile i32 %43, i32* %45, align 8, !dbg !5304
  %46 = getelementptr inbounds [11 x i16], [11 x i16]* @__const.halUART_SetFormat.fraction_L_mapping, i32 0, i32 %30, !dbg !5305
  %47 = load i16, i16* %46, align 2, !dbg !5305
  %48 = zext i16 %47 to i32, !dbg !5305
  %49 = or i32 %8, 84, !dbg !5306
  %50 = inttoptr i32 %49 to i32*, !dbg !5306
  store volatile i32 %48, i32* %50, align 4, !dbg !5307
  store volatile i32 %13, i32* %12, align 4, !dbg !5308
  %51 = or i32 %8, 8, !dbg !5309
  %52 = inttoptr i32 %51 to i32*, !dbg !5309
  store volatile i32 71, i32* %52, align 8, !dbg !5310
  %53 = inttoptr i32 %11 to i16*, !dbg !5311
  %54 = load volatile i16, i16* %53, align 4, !dbg !5311
  call void @llvm.dbg.value(metadata i16 %54, metadata !5252, metadata !DIExpression()), !dbg !5264
  %55 = and i16 %54, -64, !dbg !5312
  call void @llvm.dbg.value(metadata i16 %54, metadata !5252, metadata !DIExpression(DW_OP_constu, 18446744073709551608, DW_OP_and, DW_OP_stack_value)), !dbg !5264
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %2), metadata !5252, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5264
  %56 = and i16 %2, -61, !dbg !5313
  call void @llvm.dbg.value(metadata !DIArgList(i16 %54, i16 %56), metadata !5252, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 18446744073709551552, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5264
  call void @llvm.dbg.value(metadata !DIArgList(i16 %55, i16 %4, i16 %56), metadata !5252, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5264
  %57 = and i16 %4, -57, !dbg !5314
  call void @llvm.dbg.value(metadata i16 undef, metadata !5252, metadata !DIExpression()), !dbg !5264
  %58 = or i16 %56, %3, !dbg !5313
  %59 = or i16 %58, %57, !dbg !5314
  %60 = or i16 %59, %55, !dbg !5315
  call void @llvm.dbg.value(metadata i16 %60, metadata !5252, metadata !DIExpression()), !dbg !5264
  store volatile i16 %60, i16* %53, align 4, !dbg !5316
  ret void, !dbg !5317
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #7 !dbg !5318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5323, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.value(metadata i32 %1, metadata !5324, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.value(metadata i32* %2, metadata !5325, metadata !DIExpression()), !dbg !5326
  %4 = icmp eq i32 %0, 0, !dbg !5327
  %5 = icmp eq i32 %1, 0, !dbg !5329
  br i1 %4, label %6, label %16, !dbg !5330

6:                                                ; preds = %3
  br i1 %5, label %10, label %7, !dbg !5331

7:                                                ; preds = %6
  %8 = load volatile i16, i16* inttoptr (i32 -2097082568 to i16*), align 8, !dbg !5333
  %9 = zext i16 %8 to i32, !dbg !5333
  br label %26, !dbg !5336

10:                                               ; preds = %6
  %11 = load volatile i16, i16* inttoptr (i32 -2097082812 to i16*), align 4, !dbg !5337
  %12 = zext i16 %11 to i32, !dbg !5337
  store i32 %12, i32* %2, align 4, !dbg !5339
  %13 = load volatile i16, i16* inttoptr (i32 -2097082824 to i16*), align 8, !dbg !5340
  %14 = zext i16 %13 to i32, !dbg !5340
  %15 = sub nsw i32 %12, %14, !dbg !5341
  br label %26

16:                                               ; preds = %3
  br i1 %5, label %20, label %17, !dbg !5342

17:                                               ; preds = %16
  %18 = load volatile i16, i16* inttoptr (i32 -2097082056 to i16*), align 8, !dbg !5344
  %19 = zext i16 %18 to i32, !dbg !5344
  br label %26, !dbg !5347

20:                                               ; preds = %16
  %21 = load volatile i16, i16* inttoptr (i32 -2097082300 to i16*), align 4, !dbg !5348
  %22 = zext i16 %21 to i32, !dbg !5348
  store i32 %22, i32* %2, align 4, !dbg !5350
  %23 = load volatile i16, i16* inttoptr (i32 -2097082312 to i16*), align 8, !dbg !5351
  %24 = zext i16 %23 to i32, !dbg !5351
  %25 = sub nsw i32 %22, %24, !dbg !5352
  br label %26

26:                                               ; preds = %17, %20, %7, %10
  %27 = phi i32 [ %19, %17 ], [ %25, %20 ], [ %9, %7 ], [ %15, %10 ]
  store i32 %27, i32* %2, align 4, !dbg !5329
  ret void, !dbg !5353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Read_VFIFO_Data(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !5354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5358, metadata !DIExpression()), !dbg !5362
  call void @llvm.dbg.value(metadata i8* %1, metadata !5359, metadata !DIExpression()), !dbg !5362
  call void @llvm.dbg.value(metadata i32 %2, metadata !5360, metadata !DIExpression()), !dbg !5362
  call void @llvm.dbg.value(metadata i32 0, metadata !5361, metadata !DIExpression()), !dbg !5362
  call void @llvm.dbg.value(metadata i32 0, metadata !5361, metadata !DIExpression()), !dbg !5362
  %4 = icmp eq i32 %2, 0, !dbg !5363
  br i1 %4, label %15, label %5, !dbg !5366

5:                                                ; preds = %3, %12
  %6 = phi i32 [ %13, %12 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5361, metadata !DIExpression()), !dbg !5362
  switch i32 %0, label %12 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !5367

7:                                                ; preds = %5
  br label %8, !dbg !5369

8:                                                ; preds = %5, %7
  %9 = phi i8* [ inttoptr (i32 2030044416 to i8*), %7 ], [ inttoptr (i32 2030043904 to i8*), %5 ]
  %10 = load volatile i8, i8* %9, align 256, !dbg !5373
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !5373
  store i8 %10, i8* %11, align 1, !dbg !5373
  br label %12, !dbg !5374

12:                                               ; preds = %8, %5
  %13 = add nuw i32 %6, 1, !dbg !5374
  call void @llvm.dbg.value(metadata i32 %13, metadata !5361, metadata !DIExpression()), !dbg !5362
  %14 = icmp eq i32 %13, %2, !dbg !5363
  br i1 %14, label %15, label %5, !dbg !5366, !llvm.loop !5375

15:                                               ; preds = %12, %3
  ret void, !dbg !5377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @halUART_Write_VFIFO_Data(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #5 !dbg !5378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5382, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i8* %1, metadata !5383, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i32 %2, metadata !5384, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i32 0, metadata !5385, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i32 0, metadata !5385, metadata !DIExpression()), !dbg !5386
  %4 = icmp eq i32 %2, 0, !dbg !5387
  br i1 %4, label %16, label %5, !dbg !5390

5:                                                ; preds = %3, %13
  %6 = phi i32 [ %14, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5385, metadata !DIExpression()), !dbg !5386
  switch i32 %0, label %13 [
    i32 0, label %7
    i32 1, label %10
  ], !dbg !5391

7:                                                ; preds = %5
  %8 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !5393
  %9 = load i8, i8* %8, align 1, !dbg !5393
  store volatile i8 %9, i8* inttoptr (i32 2030043648 to i8*), align 512, !dbg !5396
  br label %13, !dbg !5397

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %1, i32 %6, !dbg !5398
  %12 = load i8, i8* %11, align 1, !dbg !5398
  store volatile i8 %12, i8* inttoptr (i32 2030044160 to i8*), align 1024, !dbg !5401
  br label %13, !dbg !5402

13:                                               ; preds = %5, %7, %10
  %14 = add nuw i32 %6, 1, !dbg !5403
  call void @llvm.dbg.value(metadata i32 %14, metadata !5385, metadata !DIExpression()), !dbg !5386
  %15 = icmp eq i32 %14, %2, !dbg !5387
  br i1 %15, label %16, label %5, !dbg !5390, !llvm.loop !5404

16:                                               ; preds = %13, %3
  ret void, !dbg !5406
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Tx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !5407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5411, metadata !DIExpression()), !dbg !5415
  call void @llvm.dbg.value(metadata i8* %1, metadata !5412, metadata !DIExpression()), !dbg !5415
  call void @llvm.dbg.value(metadata i32 %2, metadata !5413, metadata !DIExpression()), !dbg !5415
  call void @llvm.dbg.value(metadata i32 %3, metadata !5414, metadata !DIExpression()), !dbg !5415
  switch i32 %0, label %9 [
    i32 0, label %6
    i32 1, label %5
  ], !dbg !5416

5:                                                ; preds = %4
  br label %6, !dbg !5417

6:                                                ; preds = %4, %5
  %7 = phi i32 [ 16, %5 ], [ 14, %4 ]
  %8 = ptrtoint i8* %1 to i32, !dbg !5421
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %8, i32 noundef %2, i32 noundef %7, i32 noundef 0, i32 noundef %3, i32 noundef 0) #14, !dbg !5421
  tail call void @DMA_Vfifo_Flush(i32 noundef %7) #14, !dbg !5421
  br label %9, !dbg !5422

9:                                                ; preds = %6, %4
  ret void, !dbg !5422
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_SetAdrs(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Flush(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_Rx_VFIFO_Initialize(i32 noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #0 !dbg !5423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5427, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.value(metadata i8* %1, metadata !5428, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.value(metadata i32 %2, metadata !5429, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.value(metadata i32 %3, metadata !5430, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.value(metadata i32 %4, metadata !5431, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.value(metadata i32 %5, metadata !5432, metadata !DIExpression()), !dbg !5433
  switch i32 %0, label %11 [
    i32 0, label %8
    i32 1, label %7
  ], !dbg !5434

7:                                                ; preds = %6
  br label %8, !dbg !5435

8:                                                ; preds = %6, %7
  %9 = phi i32 [ 17, %7 ], [ 15, %6 ]
  %10 = ptrtoint i8* %1 to i32, !dbg !5439
  tail call void @DMA_Vfifo_SetAdrs(i32 noundef %10, i32 noundef %2, i32 noundef %9, i32 noundef %3, i32 noundef %4, i32 noundef %5) #14, !dbg !5439
  tail call void @DMA_Vfifo_Flush(i32 noundef %9) #14, !dbg !5439
  br label %11, !dbg !5440

11:                                               ; preds = %8, %6
  ret void, !dbg !5440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !5441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5445, metadata !DIExpression()), !dbg !5447
  call void @llvm.dbg.value(metadata void ()* %1, metadata !5446, metadata !DIExpression()), !dbg !5447
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !5448

3:                                                ; preds = %2
  br label %4, !dbg !5449

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef %5, void ()* noundef %1) #14, !dbg !5453
  br label %6, !dbg !5454

6:                                                ; preds = %4, %2
  ret void, !dbg !5454
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %0, void ()* noundef %1) local_unnamed_addr #0 !dbg !5455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5457, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.value(metadata void ()* %1, metadata !5458, metadata !DIExpression()), !dbg !5459
  switch i32 %0, label %6 [
    i32 0, label %4
    i32 1, label %3
  ], !dbg !5460

3:                                                ; preds = %2
  br label %4, !dbg !5461

4:                                                ; preds = %2, %3
  %5 = phi i32 [ 17, %3 ], [ 15, %2 ]
  tail call void @DMA_Vfifo_Register_TO_Callback(i32 noundef %5, void ()* noundef %1) #14, !dbg !5465
  br label %6, !dbg !5466

6:                                                ; preds = %4, %2
  ret void, !dbg !5466
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Register_TO_Callback(i32 noundef, void ()* noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !5467 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5469, metadata !DIExpression()), !dbg !5473
  %2 = icmp eq i32 %0, 0, !dbg !5474
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5474
  call void @llvm.dbg.value(metadata i32 %3, metadata !5470, metadata !DIExpression()), !dbg !5473
  %4 = or i32 %3, 12, !dbg !5475
  %5 = inttoptr i32 %4 to i32*, !dbg !5475
  %6 = load volatile i32, i32* %5, align 4, !dbg !5475
  call void @llvm.dbg.value(metadata i32 %6, metadata !5472, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5473
  store volatile i32 191, i32* %5, align 4, !dbg !5476
  %7 = or i32 %3, 8, !dbg !5477
  %8 = inttoptr i32 %7 to i32*, !dbg !5477
  %9 = load volatile i32, i32* %8, align 8, !dbg !5477
  call void @llvm.dbg.value(metadata i32 %9, metadata !5471, metadata !DIExpression()), !dbg !5473
  %10 = and i32 %9, 65327, !dbg !5478
  %11 = or i32 %10, 208, !dbg !5478
  call void @llvm.dbg.value(metadata i32 %9, metadata !5471, metadata !DIExpression(DW_OP_constu, 208, DW_OP_or, DW_OP_stack_value)), !dbg !5473
  store volatile i32 %11, i32* %8, align 8, !dbg !5479
  %12 = or i32 %3, 68, !dbg !5480
  %13 = inttoptr i32 %12 to i32*, !dbg !5480
  store volatile i32 0, i32* %13, align 4, !dbg !5481
  store volatile i32 0, i32* %5, align 4, !dbg !5482
  %14 = or i32 %3, 16, !dbg !5483
  %15 = inttoptr i32 %14 to i32*, !dbg !5483
  store volatile i32 2, i32* %15, align 16, !dbg !5484
  %16 = and i32 %6, 65535, !dbg !5485
  store volatile i32 %16, i32* %5, align 4, !dbg !5486
  ret void, !dbg !5487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #5 !dbg !5488 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5492, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata i8 %1, metadata !5493, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata i8 %2, metadata !5494, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata i8 %3, metadata !5495, metadata !DIExpression()), !dbg !5499
  %5 = icmp eq i32 %0, 0, !dbg !5500
  %6 = select i1 %5, i32 -2096955392, i32 -2096889856, !dbg !5500
  call void @llvm.dbg.value(metadata i32 %6, metadata !5496, metadata !DIExpression()), !dbg !5499
  %7 = or i32 %6, 12, !dbg !5501
  %8 = inttoptr i32 %7 to i32*, !dbg !5501
  %9 = load volatile i32, i32* %8, align 4, !dbg !5501
  call void @llvm.dbg.value(metadata i32 %9, metadata !5498, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5499
  store volatile i32 191, i32* %8, align 4, !dbg !5502
  %10 = zext i8 %1 to i32, !dbg !5503
  %11 = or i32 %6, 16, !dbg !5504
  %12 = inttoptr i32 %11 to i32*, !dbg !5504
  store volatile i32 %10, i32* %12, align 16, !dbg !5505
  %13 = or i32 %6, 20, !dbg !5506
  %14 = inttoptr i32 %13 to i32*, !dbg !5506
  store volatile i32 %10, i32* %14, align 4, !dbg !5507
  %15 = zext i8 %2 to i32, !dbg !5508
  %16 = or i32 %6, 24, !dbg !5509
  %17 = inttoptr i32 %16 to i32*, !dbg !5509
  store volatile i32 %15, i32* %17, align 8, !dbg !5510
  %18 = or i32 %6, 28, !dbg !5511
  %19 = inttoptr i32 %18 to i32*, !dbg !5511
  store volatile i32 %15, i32* %19, align 4, !dbg !5512
  %20 = or i32 %6, 8, !dbg !5513
  %21 = inttoptr i32 %20 to i32*, !dbg !5513
  %22 = load volatile i32, i32* %21, align 8, !dbg !5513
  call void @llvm.dbg.value(metadata i32 %22, metadata !5497, metadata !DIExpression()), !dbg !5499
  %23 = and i32 %22, 65525, !dbg !5514
  %24 = or i32 %23, 10, !dbg !5514
  call void @llvm.dbg.value(metadata i32 %22, metadata !5497, metadata !DIExpression(DW_OP_constu, 10, DW_OP_or, DW_OP_stack_value)), !dbg !5499
  store volatile i32 %24, i32* %21, align 8, !dbg !5515
  %25 = and i32 %9, 65535, !dbg !5516
  store volatile i32 %25, i32* %8, align 4, !dbg !5517
  %26 = zext i8 %3 to i32, !dbg !5518
  %27 = or i32 %6, 64, !dbg !5519
  %28 = inttoptr i32 %27 to i32*, !dbg !5519
  store volatile i32 %26, i32* %28, align 64, !dbg !5520
  %29 = or i32 %6, 68, !dbg !5521
  %30 = inttoptr i32 %29 to i32*, !dbg !5521
  store volatile i32 1, i32* %30, align 4, !dbg !5522
  ret void, !dbg !5523
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #5 !dbg !5524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5526, metadata !DIExpression()), !dbg !5529
  %2 = icmp eq i32 %0, 0, !dbg !5530
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5530
  call void @llvm.dbg.value(metadata i32 %3, metadata !5527, metadata !DIExpression()), !dbg !5529
  %4 = or i32 %3, 12, !dbg !5531
  %5 = inttoptr i32 %4 to i32*, !dbg !5531
  %6 = load volatile i32, i32* %5, align 4, !dbg !5531
  call void @llvm.dbg.value(metadata i32 %6, metadata !5528, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5529
  store volatile i32 191, i32* %5, align 4, !dbg !5532
  %7 = or i32 %3, 8, !dbg !5533
  %8 = inttoptr i32 %7 to i32*, !dbg !5533
  store volatile i32 0, i32* %8, align 8, !dbg !5534
  store volatile i32 0, i32* %5, align 4, !dbg !5535
  %9 = and i32 %6, 65535, !dbg !5536
  store volatile i32 %9, i32* %5, align 4, !dbg !5537
  ret void, !dbg !5538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(i32 noundef %0) local_unnamed_addr #5 !dbg !5539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5541, metadata !DIExpression()), !dbg !5543
  %2 = icmp eq i32 %0, 0, !dbg !5544
  call void @llvm.dbg.value(metadata i32 undef, metadata !5542, metadata !DIExpression()), !dbg !5543
  %3 = select i1 %2, i32 -2096955320, i32 -2096889784, !dbg !5545
  %4 = inttoptr i32 %3 to i32*, !dbg !5545
  store volatile i32 1, i32* %4, align 8, !dbg !5546
  ret void, !dbg !5547
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(i32 noundef %0) local_unnamed_addr #5 !dbg !5548 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5550, metadata !DIExpression()), !dbg !5554
  %2 = icmp eq i32 %0, 0, !dbg !5555
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5555
  call void @llvm.dbg.value(metadata i32 %3, metadata !5551, metadata !DIExpression()), !dbg !5554
  %4 = or i32 %3, 12, !dbg !5556
  %5 = inttoptr i32 %4 to i32*, !dbg !5556
  %6 = load volatile i32, i32* %5, align 4, !dbg !5556
  call void @llvm.dbg.value(metadata i32 %6, metadata !5553, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5554
  store volatile i32 0, i32* %5, align 4, !dbg !5557
  %7 = or i32 %3, 4, !dbg !5558
  %8 = inttoptr i32 %7 to i32*, !dbg !5558
  %9 = load volatile i32, i32* %8, align 4, !dbg !5558
  call void @llvm.dbg.value(metadata i32 %9, metadata !5552, metadata !DIExpression()), !dbg !5554
  %10 = and i32 %9, 65533, !dbg !5559
  %11 = or i32 %10, 2, !dbg !5559
  call void @llvm.dbg.value(metadata i32 %9, metadata !5552, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !5554
  store volatile i32 %11, i32* %8, align 4, !dbg !5560
  %12 = and i32 %6, 65535, !dbg !5561
  store volatile i32 %12, i32* %5, align 4, !dbg !5562
  %13 = or i32 %3, 72, !dbg !5563
  %14 = inttoptr i32 %13 to i32*, !dbg !5563
  store volatile i32 1, i32* %14, align 8, !dbg !5564
  ret void, !dbg !5565
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_mask_send_interrupt(i32 noundef %0) local_unnamed_addr #5 !dbg !5566 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5568, metadata !DIExpression()), !dbg !5572
  %2 = icmp eq i32 %0, 0, !dbg !5573
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5573
  call void @llvm.dbg.value(metadata i32 %3, metadata !5569, metadata !DIExpression()), !dbg !5572
  %4 = or i32 %3, 12, !dbg !5574
  %5 = inttoptr i32 %4 to i32*, !dbg !5574
  %6 = load volatile i32, i32* %5, align 4, !dbg !5574
  call void @llvm.dbg.value(metadata i32 %6, metadata !5571, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5572
  store volatile i32 0, i32* %5, align 4, !dbg !5575
  %7 = or i32 %3, 4, !dbg !5576
  %8 = inttoptr i32 %7 to i32*, !dbg !5576
  %9 = load volatile i32, i32* %8, align 4, !dbg !5576
  call void @llvm.dbg.value(metadata i32 %9, metadata !5570, metadata !DIExpression()), !dbg !5572
  %10 = and i32 %9, 65533, !dbg !5577
  call void @llvm.dbg.value(metadata i32 %10, metadata !5570, metadata !DIExpression()), !dbg !5572
  store volatile i32 %10, i32* %8, align 4, !dbg !5578
  %11 = and i32 %6, 65535, !dbg !5579
  store volatile i32 %11, i32* %5, align 4, !dbg !5580
  %12 = or i32 %3, 72, !dbg !5581
  %13 = inttoptr i32 %12 to i32*, !dbg !5581
  store volatile i32 0, i32* %13, align 8, !dbg !5582
  ret void, !dbg !5583
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !5584 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5586, metadata !DIExpression()), !dbg !5590
  %2 = icmp eq i32 %0, 0, !dbg !5591
  %3 = select i1 %2, i32* inttoptr (i32 -2096955384 to i32*), i32* inttoptr (i32 -2096889848 to i32*)
  call void @llvm.dbg.value(metadata i32 undef, metadata !5587, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.value(metadata i32 undef, metadata !5588, metadata !DIExpression()), !dbg !5590
  %4 = load volatile i32, i32* %3, align 8, !dbg !5593
  call void @llvm.dbg.value(metadata i32 %4, metadata !5589, metadata !DIExpression()), !dbg !5590
  %5 = and i32 %4, 63, !dbg !5594
  %6 = icmp eq i32 %5, 2, !dbg !5595
  br i1 %6, label %7, label %10, !dbg !5595

7:                                                ; preds = %1
  %8 = xor i1 %2, true
  %9 = zext i1 %8 to i32
  call void @llvm.dbg.value(metadata i32 %9, metadata !5587, metadata !DIExpression()), !dbg !5590
  tail call void @uart_send_handler(i32 noundef %9) #14, !dbg !5596
  br label %10, !dbg !5598

10:                                               ; preds = %1, %7
  ret void, !dbg !5599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(i32 noundef %0) local_unnamed_addr #5 !dbg !5600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5602, metadata !DIExpression()), !dbg !5604
  %2 = icmp eq i32 %0, 0, !dbg !5605
  %3 = select i1 %2, i32 -2096955392, i32 -2096889856, !dbg !5605
  call void @llvm.dbg.value(metadata i32 %3, metadata !5603, metadata !DIExpression()), !dbg !5604
  %4 = or i32 %3, 12, !dbg !5606
  %5 = inttoptr i32 %4 to i32*, !dbg !5606
  store volatile i32 191, i32* %5, align 4, !dbg !5607
  %6 = or i32 %3, 8, !dbg !5608
  %7 = inttoptr i32 %6 to i32*, !dbg !5608
  store volatile i32 16, i32* %7, align 8, !dbg !5609
  %8 = or i32 %3, 16, !dbg !5610
  %9 = inttoptr i32 %8 to i32*, !dbg !5610
  store volatile i32 0, i32* %9, align 16, !dbg !5611
  %10 = or i32 %3, 24, !dbg !5612
  %11 = inttoptr i32 %10 to i32*, !dbg !5612
  store volatile i32 0, i32* %11, align 8, !dbg !5613
  store volatile i32 128, i32* %5, align 4, !dbg !5614
  %12 = inttoptr i32 %3 to i32*, !dbg !5615
  store volatile i32 0, i32* %12, align 65536, !dbg !5616
  %13 = or i32 %3, 4, !dbg !5617
  %14 = inttoptr i32 %13 to i32*, !dbg !5617
  store volatile i32 0, i32* %14, align 4, !dbg !5618
  store volatile i32 0, i32* %5, align 4, !dbg !5619
  store volatile i32 0, i32* %14, align 4, !dbg !5620
  store volatile i32 0, i32* %7, align 8, !dbg !5621
  store volatile i32 191, i32* %5, align 4, !dbg !5622
  store volatile i32 0, i32* %7, align 8, !dbg !5623
  store volatile i32 0, i32* %5, align 4, !dbg !5624
  store volatile i32 0, i32* %9, align 16, !dbg !5625
  %15 = or i32 %3, 28, !dbg !5626
  %16 = inttoptr i32 %15 to i32*, !dbg !5626
  store volatile i32 0, i32* %16, align 4, !dbg !5627
  %17 = or i32 %3, 36, !dbg !5628
  %18 = inttoptr i32 %17 to i32*, !dbg !5628
  store volatile i32 0, i32* %18, align 4, !dbg !5629
  %19 = or i32 %3, 40, !dbg !5630
  %20 = inttoptr i32 %19 to i32*, !dbg !5630
  store volatile i32 0, i32* %20, align 8, !dbg !5631
  %21 = or i32 %3, 44, !dbg !5632
  %22 = inttoptr i32 %21 to i32*, !dbg !5632
  store volatile i32 0, i32* %22, align 4, !dbg !5633
  %23 = or i32 %3, 52, !dbg !5634
  %24 = inttoptr i32 %23 to i32*, !dbg !5634
  store volatile i32 0, i32* %24, align 4, !dbg !5635
  %25 = or i32 %3, 60, !dbg !5636
  %26 = inttoptr i32 %25 to i32*, !dbg !5636
  store volatile i32 0, i32* %26, align 4, !dbg !5637
  %27 = or i32 %3, 64, !dbg !5638
  %28 = inttoptr i32 %27 to i32*, !dbg !5638
  store volatile i32 0, i32* %28, align 64, !dbg !5639
  %29 = or i32 %3, 68, !dbg !5640
  %30 = inttoptr i32 %29 to i32*, !dbg !5640
  store volatile i32 0, i32* %30, align 4, !dbg !5641
  %31 = or i32 %3, 72, !dbg !5642
  %32 = inttoptr i32 %31 to i32*, !dbg !5642
  store volatile i32 0, i32* %32, align 8, !dbg !5643
  %33 = or i32 %3, 76, !dbg !5644
  %34 = inttoptr i32 %33 to i32*, !dbg !5644
  store volatile i32 0, i32* %34, align 4, !dbg !5645
  %35 = or i32 %3, 80, !dbg !5646
  %36 = inttoptr i32 %35 to i32*, !dbg !5646
  store volatile i32 0, i32* %36, align 16, !dbg !5647
  %37 = or i32 %3, 84, !dbg !5648
  %38 = inttoptr i32 %37 to i32*, !dbg !5648
  store volatile i32 0, i32* %38, align 4, !dbg !5649
  %39 = or i32 %3, 88, !dbg !5650
  %40 = inttoptr i32 %39 to i32*, !dbg !5650
  store volatile i32 0, i32* %40, align 8, !dbg !5651
  %41 = or i32 %3, 96, !dbg !5652
  %42 = inttoptr i32 %41 to i32*, !dbg !5652
  store volatile i32 0, i32* %42, align 32, !dbg !5653
  ret void, !dbg !5654
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(i32 noundef %0) local_unnamed_addr #5 !dbg !5655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5657, metadata !DIExpression()), !dbg !5659
  %2 = icmp eq i32 %0, 0, !dbg !5660
  call void @llvm.dbg.value(metadata i32 undef, metadata !5658, metadata !DIExpression()), !dbg !5659
  %3 = select i1 %2, i32 -2096955372, i32 -2096889836
  %4 = inttoptr i32 %3 to i32*
  br label %5, !dbg !5661

5:                                                ; preds = %5, %1
  %6 = load volatile i32, i32* %4, align 4, !dbg !5662
  %7 = and i32 %6, 64, !dbg !5663
  %8 = icmp eq i32 %7, 0, !dbg !5664
  br i1 %8, label %5, label %9, !dbg !5661, !llvm.loop !5665

9:                                                ; preds = %5
  ret void, !dbg !5667
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_fatal_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5668 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5672, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i32 %1, metadata !5673, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.value(metadata i8* %2, metadata !5674, metadata !DIExpression()), !dbg !5685
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !5686
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #13, !dbg !5686
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5675, metadata !DIExpression()), !dbg !5687
  %7 = bitcast i32* %5 to i8*, !dbg !5688
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13, !dbg !5688
  call void @llvm.dbg.value(metadata i32* %5, metadata !5684, metadata !DIExpression(DW_OP_deref)), !dbg !5685
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #14, !dbg !5689
  call void @llvm.va_start(i8* nonnull %6), !dbg !5690
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !5691
  %10 = load i32, i32* %9, align 4, !dbg !5691
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !5691
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #14, !dbg !5691
  call void @llvm.va_end(i8* nonnull %6), !dbg !5692
  %13 = load i32, i32* %5, align 4, !dbg !5693
  call void @llvm.dbg.value(metadata i32 %13, metadata !5684, metadata !DIExpression()), !dbg !5685
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #14, !dbg !5694
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13, !dbg !5695
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #13, !dbg !5695
  ret void, !dbg !5695
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #11

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #11

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5696 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5698, metadata !DIExpression()), !dbg !5703
  call void @llvm.dbg.value(metadata i32 %1, metadata !5699, metadata !DIExpression()), !dbg !5703
  call void @llvm.dbg.value(metadata i8* %2, metadata !5700, metadata !DIExpression()), !dbg !5703
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !5704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #13, !dbg !5704
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5701, metadata !DIExpression()), !dbg !5705
  %7 = bitcast i32* %5 to i8*, !dbg !5706
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13, !dbg !5706
  call void @llvm.dbg.value(metadata i32* %5, metadata !5702, metadata !DIExpression(DW_OP_deref)), !dbg !5703
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #14, !dbg !5707
  call void @llvm.va_start(i8* nonnull %6), !dbg !5708
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !5709
  %10 = load i32, i32* %9, align 4, !dbg !5709
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !5709
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #14, !dbg !5709
  call void @llvm.va_end(i8* nonnull %6), !dbg !5710
  %13 = load i32, i32* %5, align 4, !dbg !5711
  call void @llvm.dbg.value(metadata i32 %13, metadata !5702, metadata !DIExpression()), !dbg !5703
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #14, !dbg !5712
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13, !dbg !5713
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #13, !dbg !5713
  ret void, !dbg !5713
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5714 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5716, metadata !DIExpression()), !dbg !5721
  call void @llvm.dbg.value(metadata i32 %1, metadata !5717, metadata !DIExpression()), !dbg !5721
  call void @llvm.dbg.value(metadata i8* %2, metadata !5718, metadata !DIExpression()), !dbg !5721
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !5722
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #13, !dbg !5722
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5719, metadata !DIExpression()), !dbg !5723
  %7 = bitcast i32* %5 to i8*, !dbg !5724
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13, !dbg !5724
  call void @llvm.dbg.value(metadata i32* %5, metadata !5720, metadata !DIExpression(DW_OP_deref)), !dbg !5721
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #14, !dbg !5725
  call void @llvm.va_start(i8* nonnull %6), !dbg !5726
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !5727
  %10 = load i32, i32* %9, align 4, !dbg !5727
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !5727
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #14, !dbg !5727
  call void @llvm.va_end(i8* nonnull %6), !dbg !5728
  %13 = load i32, i32* %5, align 4, !dbg !5729
  call void @llvm.dbg.value(metadata i32 %13, metadata !5720, metadata !DIExpression()), !dbg !5721
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #14, !dbg !5730
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13, !dbg !5731
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #13, !dbg !5731
  ret void, !dbg !5731
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !5732 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5734, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata i32 %1, metadata !5735, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata i8* %2, metadata !5736, metadata !DIExpression()), !dbg !5739
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !5740
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #13, !dbg !5740
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5737, metadata !DIExpression()), !dbg !5741
  %7 = bitcast i32* %5 to i8*, !dbg !5742
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13, !dbg !5742
  call void @llvm.dbg.value(metadata i32* %5, metadata !5738, metadata !DIExpression(DW_OP_deref)), !dbg !5739
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #14, !dbg !5743
  call void @llvm.va_start(i8* nonnull %6), !dbg !5744
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !5745
  %10 = load i32, i32* %9, align 4, !dbg !5745
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !5745
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #14, !dbg !5745
  call void @llvm.va_end(i8* nonnull %6), !dbg !5746
  %13 = load i32, i32* %5, align 4, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %13, metadata !5738, metadata !DIExpression()), !dbg !5739
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #14, !dbg !5748
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13, !dbg !5749
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #13, !dbg !5749
  ret void, !dbg !5749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #9 !dbg !5750 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5756, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %1, metadata !5757, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %2, metadata !5758, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i8* %3, metadata !5759, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.value(metadata i32 %4, metadata !5760, metadata !DIExpression()), !dbg !5761
  ret void, !dbg !5762
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !5763 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !5771
  call void @llvm.dbg.value(metadata i32 %1, metadata !5770, metadata !DIExpression()), !dbg !5772
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !5773, !range !1594
  %3 = icmp eq i8 %2, 0, !dbg !5773
  br i1 %3, label %5, label %4, !dbg !5775

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #14, !dbg !5776
  br label %15, !dbg !5778

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !5779
  tail call void @restore_interrupt_mask(i32 noundef %1) #14, !dbg !5781
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #16, !dbg !5782
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5783
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5784
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5785
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !5786
  call void @llvm.dbg.value(metadata i32 0, metadata !5768, metadata !DIExpression()), !dbg !5772
  br label %7, !dbg !5787

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5768, metadata !DIExpression()), !dbg !5772
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %8, !dbg !5789
  store volatile i32 0, i32* %9, align 4, !dbg !5792
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %8, !dbg !5793
  store volatile i32 0, i32* %10, align 4, !dbg !5794
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !5795
  store i32 0, i32* %11, align 4, !dbg !5796
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !5797
  store i32 0, i32* %12, align 4, !dbg !5798
  %13 = add nuw nsw i32 %8, 1, !dbg !5799
  call void @llvm.dbg.value(metadata i32 %13, metadata !5768, metadata !DIExpression()), !dbg !5772
  %14 = icmp eq i32 %13, 16, !dbg !5800
  br i1 %14, label %15, label %7, !dbg !5787, !llvm.loop !5801

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !5772
  ret i32 %16, !dbg !5803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !5804 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !5807
  call void @llvm.dbg.value(metadata i32 %1, metadata !5806, metadata !DIExpression()), !dbg !5808
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5809
  %3 = and i32 %2, -31, !dbg !5809
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5809
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5810
  %5 = or i32 %4, 19, !dbg !5810
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5810
  %6 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5811
  %7 = and i32 %6, -31, !dbg !5811
  store volatile i32 %7, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5811
  %8 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5812
  %9 = or i32 %8, 3, !dbg !5812
  store volatile i32 %9, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5812
  tail call void asm sideeffect "isb", ""() #13, !dbg !5813, !srcloc !5817
  tail call void @restore_interrupt_mask(i32 noundef %1) #14, !dbg !5818
  ret i32 0, !dbg !5819
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !5820 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #16, !dbg !5823
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5824
  store volatile i32 0, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5825
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5826
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !5827
  call void @llvm.dbg.value(metadata i32 0, metadata !5822, metadata !DIExpression()), !dbg !5828
  br label %2, !dbg !5829

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5822, metadata !DIExpression()), !dbg !5828
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %3, !dbg !5831
  store volatile i32 0, i32* %4, align 4, !dbg !5834
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %3, !dbg !5835
  store volatile i32 0, i32* %5, align 4, !dbg !5836
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !5837
  store i32 0, i32* %6, align 4, !dbg !5838
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !5839
  store i32 0, i32* %7, align 4, !dbg !5840
  %8 = add nuw nsw i32 %3, 1, !dbg !5841
  call void @llvm.dbg.value(metadata i32 %8, metadata !5822, metadata !DIExpression()), !dbg !5828
  %9 = icmp eq i32 %8, 16, !dbg !5842
  br i1 %9, label %10, label %2, !dbg !5829, !llvm.loop !5843

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !5845
  ret i32 0, !dbg !5846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #5 !dbg !5847 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5848
  %2 = and i32 %1, 768, !dbg !5850
  %3 = icmp eq i32 %2, 0, !dbg !5850
  br i1 %3, label %8, label %4, !dbg !5851

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5852
  %6 = or i32 %5, 13, !dbg !5852
  store volatile i32 %6, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5852
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5853
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5854
  br label %8, !dbg !5855

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !5856
  ret i32 %9, !dbg !5857
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !5858 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !5861
  call void @llvm.dbg.value(metadata i32 %1, metadata !5860, metadata !DIExpression()), !dbg !5862
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5863
  %3 = and i32 %2, 1, !dbg !5865
  %4 = icmp eq i32 %3, 0, !dbg !5865
  br i1 %4, label %7, label %5, !dbg !5866

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #16, !dbg !5867
  br label %7, !dbg !5869

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5870
  %9 = and i32 %8, -2, !dbg !5870
  store volatile i32 %9, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5870
  %10 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5871
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5872
  tail call void @restore_interrupt_mask(i32 noundef %1) #14, !dbg !5873
  ret i32 0, !dbg !5874
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #5 !dbg !5875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5879, metadata !DIExpression()), !dbg !5880
  %2 = icmp ugt i32 %0, 15, !dbg !5881
  br i1 %2, label %13, label %3, !dbg !5883

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !5884
  %5 = load volatile i32, i32* %4, align 4, !dbg !5884
  %6 = and i32 %5, 256, !dbg !5886
  %7 = icmp eq i32 %6, 0, !dbg !5886
  br i1 %7, label %13, label %8, !dbg !5887

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !5888
  %10 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5890
  %11 = or i32 %10, %9, !dbg !5890
  store volatile i32 %11, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5890
  %12 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5891
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !5892
  br label %13, !dbg !5893

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !5880
  ret i32 %14, !dbg !5894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #5 !dbg !5895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5897, metadata !DIExpression()), !dbg !5898
  %2 = icmp ugt i32 %0, 15, !dbg !5899
  br i1 %2, label %11, label %3, !dbg !5901

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !5902
  %5 = xor i32 %4, -1, !dbg !5903
  %6 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5904
  %7 = and i32 %6, %5, !dbg !5904
  store volatile i32 %7, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5904
  %8 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !5905
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !5906
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !5907
  store i32 0, i32* %9, align 4, !dbg !5908
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !5909
  store i32 0, i32* %10, align 4, !dbg !5910
  br label %11, !dbg !5911

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !5898
  ret i32 %12, !dbg !5912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #5 !dbg !5913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5918, metadata !DIExpression()), !dbg !5919
  %2 = icmp ugt i32 %0, 3, !dbg !5920
  br i1 %2, label %13, label %3, !dbg !5922

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5923
  %5 = and i32 %4, -769, !dbg !5923
  store volatile i32 %5, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5923
  %6 = shl nuw nsw i32 %0, 8, !dbg !5924
  %7 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5925
  %8 = or i32 %7, %6, !dbg !5925
  store volatile i32 %8, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5925
  %9 = icmp eq i32 %0, 0, !dbg !5926
  br i1 %9, label %10, label %11, !dbg !5928

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5929
  br label %11, !dbg !5931

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !5932
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !5933
  br label %13, !dbg !5934

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !5919
  ret i32 %14, !dbg !5935
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !5936 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5947, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !5948, metadata !DIExpression()), !dbg !5949
  %3 = icmp ugt i32 %0, 15, !dbg !5950
  br i1 %3, label %30, label %4, !dbg !5952

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !5953
  br i1 %5, label %30, label %6, !dbg !5955

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !5956
  %8 = load i32, i32* %7, align 4, !dbg !5956
  %9 = and i32 %8, 4095, !dbg !5958
  %10 = icmp eq i32 %9, 0, !dbg !5958
  br i1 %10, label %12, label %11, !dbg !5959

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.63, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.64, i32 0, i32 0)) #15, !dbg !5960
  unreachable, !dbg !5960

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !5962
  %14 = load i32, i32* %13, align 4, !dbg !5962
  %15 = and i32 %14, 4095, !dbg !5964
  %16 = icmp eq i32 %15, 0, !dbg !5964
  br i1 %16, label %18, label %17, !dbg !5965

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.63, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.64, i32 0, i32 0)) #15, !dbg !5966
  unreachable, !dbg !5966

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %0, !dbg !5968
  store volatile i32 %8, i32* %19, align 4, !dbg !5969
  %20 = load i32, i32* %7, align 4, !dbg !5970
  %21 = load i32, i32* %13, align 4, !dbg !5971
  %22 = add i32 %21, %20, !dbg !5972
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %0, !dbg !5973
  store volatile i32 %22, i32* %23, align 4, !dbg !5974
  %24 = load volatile i32, i32* %19, align 4, !dbg !5975
  %25 = or i32 %24, 256, !dbg !5975
  store volatile i32 %25, i32* %19, align 4, !dbg !5975
  %26 = load volatile i32, i32* %19, align 4, !dbg !5976
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !5977
  store i32 %26, i32* %27, align 4, !dbg !5978
  %28 = load volatile i32, i32* %23, align 4, !dbg !5979
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !5980
  store i32 %28, i32* %29, align 4, !dbg !5981
  br label %30, !dbg !5982

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !5949
  ret i32 %31, !dbg !5983
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !5984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5988, metadata !DIExpression()), !dbg !5990
  %2 = and i32 %0, 31, !dbg !5991
  %3 = icmp eq i32 %2, 0, !dbg !5991
  br i1 %3, label %4, label %9, !dbg !5993

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !5994
  call void @llvm.dbg.value(metadata i32 %5, metadata !5989, metadata !DIExpression()), !dbg !5990
  %6 = and i32 %0, -32, !dbg !5995
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5996
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5997
  %8 = or i32 %7, 5, !dbg !5997
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !5997
  tail call void asm sideeffect "isb", ""() #13, !dbg !5998, !srcloc !5817
  tail call void @restore_interrupt_mask(i32 noundef %5) #14, !dbg !6000
  br label %9, !dbg !6001

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !5990
  ret i32 %10, !dbg !6002
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !6003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6007, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata i32 %1, metadata !6008, metadata !DIExpression()), !dbg !6011
  %3 = add i32 %1, %0, !dbg !6012
  call void @llvm.dbg.value(metadata i32 %3, metadata !6010, metadata !DIExpression()), !dbg !6011
  %4 = or i32 %1, %0, !dbg !6013
  %5 = and i32 %4, 31, !dbg !6013
  %6 = icmp eq i32 %5, 0, !dbg !6013
  br i1 %6, label %7, label %16, !dbg !6013

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !6015
  call void @llvm.dbg.value(metadata i32 %8, metadata !6009, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata i32 %0, metadata !6007, metadata !DIExpression()), !dbg !6011
  %9 = icmp ugt i32 %3, %0, !dbg !6016
  br i1 %9, label %10, label %15, !dbg !6017

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6007, metadata !DIExpression()), !dbg !6011
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #16, !dbg !6018
  %13 = add i32 %11, 32, !dbg !6020
  call void @llvm.dbg.value(metadata i32 %13, metadata !6007, metadata !DIExpression()), !dbg !6011
  %14 = icmp ult i32 %13, %3, !dbg !6016
  br i1 %14, label %10, label %15, !dbg !6017, !llvm.loop !6021

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #13, !dbg !6023, !srcloc !5817
  tail call void @restore_interrupt_mask(i32 noundef %8) #14, !dbg !6025
  br label %16, !dbg !6026

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !6011
  ret i32 %17, !dbg !6027
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".ramTEXT" !dbg !6028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6030, metadata !DIExpression()), !dbg !6032
  %2 = and i32 %0, 31, !dbg !6033
  %3 = icmp eq i32 %2, 0, !dbg !6033
  br i1 %3, label %4, label %9, !dbg !6035

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !6036
  call void @llvm.dbg.value(metadata i32 %5, metadata !6031, metadata !DIExpression()), !dbg !6032
  %6 = and i32 %0, -32, !dbg !6037
  store volatile i32 %6, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6038
  %7 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6039
  %8 = or i32 %7, 21, !dbg !6039
  store volatile i32 %8, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6039
  tail call void asm sideeffect "isb", ""() #13, !dbg !6040, !srcloc !5817
  tail call void @restore_interrupt_mask(i32 noundef %5) #14, !dbg !6042
  br label %9, !dbg !6043

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !6032
  ret i32 %10, !dbg !6044
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ramTEXT" !dbg !6045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6047, metadata !DIExpression()), !dbg !6051
  call void @llvm.dbg.value(metadata i32 %1, metadata !6048, metadata !DIExpression()), !dbg !6051
  %3 = add i32 %1, %0, !dbg !6052
  call void @llvm.dbg.value(metadata i32 %3, metadata !6050, metadata !DIExpression()), !dbg !6051
  %4 = or i32 %1, %0, !dbg !6053
  %5 = and i32 %4, 31, !dbg !6053
  %6 = icmp eq i32 %5, 0, !dbg !6053
  br i1 %6, label %7, label %16, !dbg !6053

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !6055
  call void @llvm.dbg.value(metadata i32 %8, metadata !6049, metadata !DIExpression()), !dbg !6051
  call void @llvm.dbg.value(metadata i32 %0, metadata !6047, metadata !DIExpression()), !dbg !6051
  %9 = icmp ugt i32 %3, %0, !dbg !6056
  br i1 %9, label %10, label %15, !dbg !6057

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6047, metadata !DIExpression()), !dbg !6051
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #16, !dbg !6058
  %13 = add i32 %11, 32, !dbg !6060
  call void @llvm.dbg.value(metadata i32 %13, metadata !6047, metadata !DIExpression()), !dbg !6051
  %14 = icmp ult i32 %13, %3, !dbg !6056
  br i1 %14, label %10, label %15, !dbg !6057, !llvm.loop !6061

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #13, !dbg !6063, !srcloc !5817
  tail call void @restore_interrupt_mask(i32 noundef %8) #14, !dbg !6065
  br label %16, !dbg !6066

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !6051
  ret i32 %17, !dbg !6067
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".ramTEXT" !dbg !6068 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !6071
  call void @llvm.dbg.value(metadata i32 %1, metadata !6070, metadata !DIExpression()), !dbg !6072
  %2 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6073
  %3 = and i32 %2, -31, !dbg !6073
  store volatile i32 %3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6073
  %4 = load volatile i32, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6074
  %5 = or i32 %4, 19, !dbg !6074
  store volatile i32 %5, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !6074
  tail call void asm sideeffect "isb", ""() #13, !dbg !6075, !srcloc !5817
  tail call void @restore_interrupt_mask(i32 noundef %1) #14, !dbg !6077
  ret i32 0, !dbg !6078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #5 !dbg !6079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6083, metadata !DIExpression()), !dbg !6085
  %2 = load volatile i32, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !6086
  %3 = and i32 %2, 8, !dbg !6088
  %4 = icmp eq i32 %3, 0, !dbg !6088
  br i1 %4, label %23, label %5, !dbg !6089

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !6084, metadata !DIExpression()), !dbg !6085
  %7 = load volatile i32, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !6090
  %8 = shl nuw nsw i32 1, %6, !dbg !6095
  %9 = and i32 %7, %8, !dbg !6096
  %10 = icmp eq i32 %9, 0, !dbg !6096
  br i1 %10, label %20, label %11, !dbg !6097

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282240 to [16 x i32]*), i32 0, i32 %6, !dbg !6098
  %13 = load volatile i32, i32* %12, align 4, !dbg !6098
  %14 = and i32 %13, -257, !dbg !6101
  %15 = icmp ugt i32 %14, %0, !dbg !6102
  br i1 %15, label %20, label %16, !dbg !6103

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 22282304 to [16 x i32]*), i32 0, i32 %6, !dbg !6104
  %18 = load volatile i32, i32* %17, align 4, !dbg !6104
  %19 = icmp ugt i32 %18, %0, !dbg !6105
  br i1 %19, label %23, label %20, !dbg !6106

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !6107
  call void @llvm.dbg.value(metadata i32 %21, metadata !6084, metadata !DIExpression()), !dbg !6085
  %22 = icmp eq i32 %21, 16, !dbg !6108
  br i1 %22, label %23, label %5, !dbg !6109, !llvm.loop !6110

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !6085
  ret i1 %24, !dbg !6112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_nvic_init() local_unnamed_addr #9 !dbg !6113 {
  ret i32 0, !dbg !6117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !6118 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6122, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i32 -1, metadata !6123, metadata !DIExpression()), !dbg !6124
  %2 = icmp ugt i32 %0, 95, !dbg !6125
  br i1 %2, label %4, label %3, !dbg !6125

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #16, !dbg !6127
  call void @llvm.dbg.value(metadata i32 0, metadata !6123, metadata !DIExpression()), !dbg !6124
  br label %4, !dbg !6129

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6124
  ret i32 %5, !dbg !6130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !6131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6135, metadata !DIExpression()), !dbg !6136
  %2 = and i32 %0, 31, !dbg !6137
  %3 = shl nuw i32 1, %2, !dbg !6138
  %4 = lshr i32 %0, 5, !dbg !6139
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6140
  store volatile i32 %3, i32* %5, align 4, !dbg !6141
  ret void, !dbg !6142
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !6143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6145, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata i32 -1, metadata !6146, metadata !DIExpression()), !dbg !6147
  %2 = icmp ugt i32 %0, 95, !dbg !6148
  br i1 %2, label %4, label %3, !dbg !6148

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #16, !dbg !6150
  call void @llvm.dbg.value(metadata i32 0, metadata !6146, metadata !DIExpression()), !dbg !6147
  br label %4, !dbg !6152

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6147
  ret i32 %5, !dbg !6153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #5 !dbg !6154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6156, metadata !DIExpression()), !dbg !6157
  %2 = and i32 %0, 31, !dbg !6158
  %3 = shl nuw i32 1, %2, !dbg !6159
  %4 = lshr i32 %0, 5, !dbg !6160
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6161
  store volatile i32 %3, i32* %5, align 4, !dbg !6162
  ret void, !dbg !6163
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #7 !dbg !6164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6168, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.value(metadata i32 255, metadata !6169, metadata !DIExpression()), !dbg !6170
  %2 = icmp ugt i32 %0, 95, !dbg !6171
  br i1 %2, label %5, label %3, !dbg !6171

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #16, !dbg !6173
  call void @llvm.dbg.value(metadata i32 %4, metadata !6169, metadata !DIExpression()), !dbg !6170
  br label %5, !dbg !6175

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !6170
  ret i32 %6, !dbg !6176
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #7 !dbg !6177 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6181, metadata !DIExpression()), !dbg !6182
  %2 = lshr i32 %0, 5, !dbg !6183
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !6184
  %4 = load volatile i32, i32* %3, align 4, !dbg !6184
  %5 = and i32 %0, 31, !dbg !6185
  %6 = lshr i32 %4, %5, !dbg !6186
  %7 = and i32 %6, 1, !dbg !6186
  ret i32 %7, !dbg !6187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !6188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6190, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.value(metadata i32 -1, metadata !6191, metadata !DIExpression()), !dbg !6192
  %2 = icmp ugt i32 %0, 95, !dbg !6193
  br i1 %2, label %4, label %3, !dbg !6193

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #16, !dbg !6195
  call void @llvm.dbg.value(metadata i32 0, metadata !6191, metadata !DIExpression()), !dbg !6192
  br label %4, !dbg !6197

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6192
  ret i32 %5, !dbg !6198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !6199 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6201, metadata !DIExpression()), !dbg !6202
  %2 = and i32 %0, 31, !dbg !6203
  %3 = shl nuw i32 1, %2, !dbg !6204
  %4 = lshr i32 %0, 5, !dbg !6205
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !6206
  store volatile i32 %3, i32* %5, align 4, !dbg !6207
  ret void, !dbg !6208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #5 !dbg !6209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6211, metadata !DIExpression()), !dbg !6213
  call void @llvm.dbg.value(metadata i32 -1, metadata !6212, metadata !DIExpression()), !dbg !6213
  %2 = icmp ugt i32 %0, 95, !dbg !6214
  br i1 %2, label %4, label %3, !dbg !6214

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #16, !dbg !6216
  call void @llvm.dbg.value(metadata i32 0, metadata !6212, metadata !DIExpression()), !dbg !6213
  br label %4, !dbg !6218

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6213
  ret i32 %5, !dbg !6219
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #5 !dbg !6220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6222, metadata !DIExpression()), !dbg !6223
  %2 = and i32 %0, 31, !dbg !6224
  %3 = shl nuw i32 1, %2, !dbg !6225
  %4 = lshr i32 %0, 5, !dbg !6226
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6227
  store volatile i32 %3, i32* %5, align 4, !dbg !6228
  ret void, !dbg !6229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6234, metadata !DIExpression()), !dbg !6237
  call void @llvm.dbg.value(metadata i32 %1, metadata !6235, metadata !DIExpression()), !dbg !6237
  call void @llvm.dbg.value(metadata i32 -1, metadata !6236, metadata !DIExpression()), !dbg !6237
  %3 = icmp ugt i32 %0, 95, !dbg !6238
  br i1 %3, label %5, label %4, !dbg !6238

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #16, !dbg !6240
  call void @llvm.dbg.value(metadata i32 0, metadata !6236, metadata !DIExpression()), !dbg !6237
  br label %5, !dbg !6242

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !6237
  ret i32 %6, !dbg !6243
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !6244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6248, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.value(metadata i32 %1, metadata !6249, metadata !DIExpression()), !dbg !6250
  %3 = trunc i32 %1 to i8, !dbg !6251
  %4 = shl i8 %3, 5, !dbg !6251
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6254
  store volatile i8 %4, i8* %5, align 1, !dbg !6255
  ret void, !dbg !6256
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #7 !dbg !6257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6259, metadata !DIExpression()), !dbg !6261
  call void @llvm.dbg.value(metadata i32 68, metadata !6260, metadata !DIExpression()), !dbg !6261
  %2 = icmp ugt i32 %0, 95, !dbg !6262
  br i1 %2, label %5, label %3, !dbg !6262

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #16, !dbg !6264
  call void @llvm.dbg.value(metadata i32 %4, metadata !6260, metadata !DIExpression()), !dbg !6261
  br label %5, !dbg !6266

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !6261
  ret i32 %6, !dbg !6267
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #7 !dbg !6268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6270, metadata !DIExpression()), !dbg !6271
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6272
  %3 = load volatile i8, i8* %2, align 1, !dbg !6272
  %4 = lshr i8 %3, 5, !dbg !6275
  %5 = zext i8 %4 to i32, !dbg !6275
  ret i32 %5, !dbg !6276
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".ramTEXT" !dbg !6277 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !6279, metadata !DIExpression()), !dbg !6281
  tail call void @Flash_ReturnReady() #14, !dbg !6282
  %1 = tail call fastcc i32 @get_current_irq() #16, !dbg !6283
  call void @llvm.dbg.value(metadata i32 %1, metadata !6280, metadata !DIExpression()), !dbg !6281
  %2 = icmp ugt i32 %1, 95, !dbg !6284
  br i1 %2, label %12, label %3, !dbg !6284

3:                                                ; preds = %0
  %4 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !6286
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !6286
  %6 = icmp eq void (i32)* %5, null, !dbg !6288
  br i1 %6, label %7, label %8, !dbg !6289

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !6279, metadata !DIExpression()), !dbg !6281
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 194, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.75, i32 0, i32 0)) #14, !dbg !6290
  br label %12, !dbg !6292

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #16, !dbg !6293
  %10 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !6295
  store i32 %9, i32* %10, align 4, !dbg !6296
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !6297
  tail call void %11(i32 noundef %1) #14, !dbg !6298
  call void @llvm.dbg.value(metadata i32 0, metadata !6279, metadata !DIExpression()), !dbg !6281
  br label %12, !dbg !6299

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !6281
  ret i32 %13, !dbg !6300
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #7 !dbg !6301 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6304
  %2 = and i32 %1, 511, !dbg !6305
  call void @llvm.dbg.value(metadata i32 %2, metadata !6303, metadata !DIExpression()), !dbg !6306
  %3 = add nsw i32 %2, -16, !dbg !6307
  ret i32 %3, !dbg !6308
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #7 !dbg !6309 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6310
  %2 = lshr i32 %1, 22, !dbg !6311
  %3 = and i32 %2, 1, !dbg !6311
  ret i32 %3, !dbg !6312
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !6313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6318, metadata !DIExpression()), !dbg !6321
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !6319, metadata !DIExpression()), !dbg !6321
  %3 = icmp ugt i32 %0, 95, !dbg !6322
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !6322
  br i1 %5, label %10, label %6, !dbg !6322

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %7, metadata !6320, metadata !DIExpression()), !dbg !6321
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #16, !dbg !6325
  %8 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !6326
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !6327
  %9 = getelementptr inbounds [96 x %struct.nvic_function_t], [96 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !6328
  store i32 0, i32* %9, align 4, !dbg !6329
  tail call void @restore_interrupt_mask(i32 noundef %7) #14, !dbg !6330
  br label %10, !dbg !6331

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !6321
  ret i32 %11, !dbg !6332
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !6333 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6337, metadata !DIExpression()), !dbg !6338
  %2 = tail call i32 @save_and_set_interrupt_mask() #14, !dbg !6339
  store i32 %2, i32* %0, align 4, !dbg !6340
  ret i32 0, !dbg !6341
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !6342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6346, metadata !DIExpression()), !dbg !6347
  tail call void @restore_interrupt_mask(i32 noundef %0) #14, !dbg !6348
  ret i32 0, !dbg !6349
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !6350 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6356, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.value(metadata i8 %1, metadata !6357, metadata !DIExpression()), !dbg !6359
  %3 = icmp ugt i32 %0, 60, !dbg !6360
  br i1 %3, label %11, label %4, !dbg !6362

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !6363
  br i1 %5, label %11, label %6, !dbg !6365

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !6366
  %8 = tail call i32 @pinmux_config(i32 noundef %0, i32 noundef %7) #14, !dbg !6367
  call void @llvm.dbg.value(metadata i32 %8, metadata !6358, metadata !DIExpression()), !dbg !6359
  %9 = icmp slt i32 %8, 0, !dbg !6368
  %10 = select i1 %9, i32 -3, i32 0, !dbg !6368
  br label %11, !dbg !6369

11:                                               ; preds = %4, %2, %6
  %12 = phi i32 [ %10, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !6359
  ret i32 %12, !dbg !6370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #9 !dbg !6371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6376, metadata !DIExpression()), !dbg !6377
  ret i32 0, !dbg !6378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #9 !dbg !6379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6381, metadata !DIExpression()), !dbg !6382
  ret i32 0, !dbg !6383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !6384 {
  %3 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6389, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata i32* %1, metadata !6390, metadata !DIExpression()), !dbg !6399
  %4 = icmp eq i32* %1, null, !dbg !6400
  br i1 %4, label %12, label %5, !dbg !6402

5:                                                ; preds = %2
  %6 = icmp ugt i32 %0, 60, !dbg !6403
  br i1 %6, label %12, label %7, !dbg !6405

7:                                                ; preds = %5
  %8 = bitcast %struct.gpio_status* %3 to i8*, !dbg !6406
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13, !dbg !6406
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %3, i32 noundef %0) #14, !dbg !6406
  %9 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %3, i32 0, i32 2, !dbg !6406
  %10 = load i8, i8* %9, align 1, !dbg !6406
  call void @llvm.dbg.value(metadata i8 %10, metadata !6391, metadata !DIExpression(DW_OP_LLVM_fragment, 40, 8)), !dbg !6399
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13, !dbg !6406
  %11 = zext i8 %10 to i32, !dbg !6407
  store i32 %11, i32* %1, align 4, !dbg !6408
  br label %12, !dbg !6409

12:                                               ; preds = %5, %2, %7
  %13 = phi i32 [ 0, %7 ], [ -1, %2 ], [ -2, %5 ], !dbg !6399
  ret i32 %13, !dbg !6410
}

; Function Attrs: optsize
declare dso_local void @gpio_get_status(%struct.gpio_status* sret(%struct.gpio_status) align 4, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6415, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.value(metadata i32 %1, metadata !6416, metadata !DIExpression()), !dbg !6418
  %3 = icmp ugt i32 %0, 60, !dbg !6419
  br i1 %3, label %9, label %4, !dbg !6421

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i8, !dbg !6422
  %6 = tail call i32 @gpio_write(i32 noundef %0, i8 noundef zeroext %5) #14, !dbg !6423
  call void @llvm.dbg.value(metadata i32 %6, metadata !6417, metadata !DIExpression()), !dbg !6418
  %7 = icmp slt i32 %6, 0, !dbg !6424
  %8 = select i1 %7, i32 -3, i32 0, !dbg !6424
  br label %9, !dbg !6425

9:                                                ; preds = %2, %4
  %10 = phi i32 [ %8, %4 ], [ -2, %2 ], !dbg !6418
  ret i32 %10, !dbg !6426
}

; Function Attrs: optsize
declare dso_local i32 @gpio_write(i32 noundef, i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !6427 {
  %3 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6429, metadata !DIExpression()), !dbg !6432
  call void @llvm.dbg.value(metadata i32* %1, metadata !6430, metadata !DIExpression()), !dbg !6432
  %4 = icmp ugt i32 %0, 60, !dbg !6433
  br i1 %4, label %12, label %5, !dbg !6435

5:                                                ; preds = %2
  %6 = icmp eq i32* %1, null, !dbg !6436
  br i1 %6, label %12, label %7, !dbg !6438

7:                                                ; preds = %5
  %8 = bitcast %struct.gpio_status* %3 to i8*, !dbg !6439
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13, !dbg !6439
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %3, i32 noundef %0) #14, !dbg !6439
  %9 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %3, i32 0, i32 3, !dbg !6439
  %10 = load i8, i8* %9, align 2, !dbg !6439
  call void @llvm.dbg.value(metadata i8 %10, metadata !6431, metadata !DIExpression(DW_OP_LLVM_fragment, 48, 8)), !dbg !6432
  call void @llvm.dbg.value(metadata i8 undef, metadata !6431, metadata !DIExpression(DW_OP_LLVM_fragment, 56, 8)), !dbg !6432
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13, !dbg !6439
  %11 = zext i8 %10 to i32, !dbg !6440
  store i32 %11, i32* %1, align 4, !dbg !6441
  br label %12, !dbg !6442

12:                                               ; preds = %5, %2, %7
  %13 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !6432
  ret i32 %13, !dbg !6443
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6444 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6449, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.value(metadata i32 %1, metadata !6450, metadata !DIExpression()), !dbg !6452
  %3 = icmp ugt i32 %0, 60, !dbg !6453
  br i1 %3, label %8, label %4, !dbg !6455

4:                                                ; preds = %2
  %5 = tail call i32 @gpio_direction(i32 noundef %0, i32 noundef %1) #14, !dbg !6456
  call void @llvm.dbg.value(metadata i32 %5, metadata !6451, metadata !DIExpression()), !dbg !6452
  %6 = icmp slt i32 %5, 0, !dbg !6457
  %7 = select i1 %6, i32 -3, i32 0, !dbg !6457
  br label %8, !dbg !6458

8:                                                ; preds = %2, %4
  %9 = phi i32 [ %7, %4 ], [ -2, %2 ], !dbg !6452
  ret i32 %9, !dbg !6459
}

; Function Attrs: optsize
declare dso_local i32 @gpio_direction(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #0 !dbg !6460 {
  %3 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6465, metadata !DIExpression()), !dbg !6468
  call void @llvm.dbg.value(metadata i32* %1, metadata !6466, metadata !DIExpression()), !dbg !6468
  %4 = icmp ugt i32 %0, 60, !dbg !6469
  br i1 %4, label %13, label %5, !dbg !6471

5:                                                ; preds = %2
  %6 = icmp eq i32* %1, null, !dbg !6472
  br i1 %6, label %13, label %7, !dbg !6474

7:                                                ; preds = %5
  %8 = bitcast %struct.gpio_status* %3 to i8*, !dbg !6475
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13, !dbg !6475
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %3, i32 noundef %0) #14, !dbg !6475
  call void @llvm.dbg.value(metadata i32 undef, metadata !6467, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6468
  %9 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %3, i32 0, i32 1, !dbg !6475
  %10 = load i8, i8* %9, align 4, !dbg !6475
  call void @llvm.dbg.value(metadata i8 %10, metadata !6467, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 8)), !dbg !6468
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13, !dbg !6475
  %11 = icmp ne i8 %10, 0, !dbg !6476
  %12 = zext i1 %11 to i32, !dbg !6476
  store i32 %12, i32* %1, align 4, !dbg !6477
  br label %13, !dbg !6478

13:                                               ; preds = %5, %2, %7
  %14 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !6468
  ret i32 %14, !dbg !6479
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #0 !dbg !6480 {
  %2 = alloca %struct.gpio_status, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6482, metadata !DIExpression()), !dbg !6484
  %3 = icmp ugt i32 %0, 60, !dbg !6485
  br i1 %3, label %11, label %4, !dbg !6487

4:                                                ; preds = %1
  %5 = bitcast %struct.gpio_status* %2 to i8*, !dbg !6488
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13, !dbg !6488
  call void @gpio_get_status(%struct.gpio_status* nonnull sret(%struct.gpio_status) align 4 %2, i32 noundef %0) #14, !dbg !6488
  %6 = getelementptr inbounds %struct.gpio_status, %struct.gpio_status* %2, i32 0, i32 3, !dbg !6488
  %7 = load i8, i8* %6, align 2, !dbg !6488
  call void @llvm.dbg.value(metadata i8 %7, metadata !6483, metadata !DIExpression(DW_OP_LLVM_fragment, 48, 8)), !dbg !6484
  call void @llvm.dbg.value(metadata i8 undef, metadata !6483, metadata !DIExpression(DW_OP_LLVM_fragment, 56, 8)), !dbg !6484
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13, !dbg !6488
  %8 = xor i8 %7, 1, !dbg !6489
  %9 = zext i8 %8 to i32, !dbg !6489
  %10 = call i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %9) #16, !dbg !6490
  br label %11, !dbg !6491

11:                                               ; preds = %1, %4
  %12 = phi i32 [ %10, %4 ], [ -2, %1 ], !dbg !6484
  ret i32 %12, !dbg !6492
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #0 !dbg !6493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6495, metadata !DIExpression()), !dbg !6497
  %2 = icmp ugt i32 %0, 60, !dbg !6498
  br i1 %2, label %10, label %3, !dbg !6500

3:                                                ; preds = %1
  %4 = tail call i32 @gpio_PullDisable(i32 noundef %0) #14, !dbg !6501
  call void @llvm.dbg.value(metadata i32 %4, metadata !6496, metadata !DIExpression()), !dbg !6497
  %5 = icmp slt i32 %4, 0, !dbg !6502
  br i1 %5, label %10, label %6, !dbg !6504

6:                                                ; preds = %3
  %7 = tail call i32 @gpio_PullUp(i32 noundef %0) #14, !dbg !6505
  call void @llvm.dbg.value(metadata i32 %7, metadata !6496, metadata !DIExpression()), !dbg !6497
  %8 = icmp slt i32 %7, 0, !dbg !6506
  %9 = select i1 %8, i32 -3, i32 0, !dbg !6506
  br label %10, !dbg !6507

10:                                               ; preds = %3, %1, %6
  %11 = phi i32 [ %9, %6 ], [ -2, %1 ], [ -3, %3 ], !dbg !6497
  ret i32 %11, !dbg !6508
}

; Function Attrs: optsize
declare dso_local i32 @gpio_PullDisable(i32 noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local i32 @gpio_PullUp(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #0 !dbg !6509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6511, metadata !DIExpression()), !dbg !6513
  %2 = icmp ugt i32 %0, 60, !dbg !6514
  br i1 %2, label %10, label %3, !dbg !6516

3:                                                ; preds = %1
  %4 = tail call i32 @gpio_PullDisable(i32 noundef %0) #14, !dbg !6517
  call void @llvm.dbg.value(metadata i32 %4, metadata !6512, metadata !DIExpression()), !dbg !6513
  %5 = icmp slt i32 %4, 0, !dbg !6518
  br i1 %5, label %10, label %6, !dbg !6520

6:                                                ; preds = %3
  %7 = tail call i32 @gpio_PullDown(i32 noundef %0) #14, !dbg !6521
  call void @llvm.dbg.value(metadata i32 %7, metadata !6512, metadata !DIExpression()), !dbg !6513
  %8 = icmp slt i32 %7, 0, !dbg !6522
  %9 = select i1 %8, i32 -3, i32 0, !dbg !6522
  br label %10, !dbg !6523

10:                                               ; preds = %3, %1, %6
  %11 = phi i32 [ %9, %6 ], [ -2, %1 ], [ -3, %3 ], !dbg !6513
  ret i32 %11, !dbg !6524
}

; Function Attrs: optsize
declare dso_local i32 @gpio_PullDown(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #0 !dbg !6525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6527, metadata !DIExpression()), !dbg !6529
  %2 = icmp ugt i32 %0, 60, !dbg !6530
  br i1 %2, label %7, label %3, !dbg !6532

3:                                                ; preds = %1
  %4 = tail call i32 @gpio_PullDisable(i32 noundef %0) #14, !dbg !6533
  call void @llvm.dbg.value(metadata i32 %4, metadata !6528, metadata !DIExpression()), !dbg !6529
  %5 = icmp slt i32 %4, 0, !dbg !6534
  %6 = select i1 %5, i32 -3, i32 0, !dbg !6534
  br label %7, !dbg !6535

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ -2, %1 ], !dbg !6529
  ret i32 %8, !dbg !6536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6541, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.value(metadata i32 %1, metadata !6542, metadata !DIExpression()), !dbg !6544
  %3 = icmp ugt i32 %0, 60, !dbg !6545
  br i1 %3, label %9, label %4, !dbg !6547

4:                                                ; preds = %2
  %5 = trunc i32 %1 to i8, !dbg !6548
  %6 = tail call i32 @gpio_SetDriving(i32 noundef %0, i8 noundef zeroext %5) #14, !dbg !6549
  call void @llvm.dbg.value(metadata i32 %6, metadata !6543, metadata !DIExpression()), !dbg !6544
  %7 = icmp slt i32 %6, 0, !dbg !6550
  %8 = select i1 %7, i32 -3, i32 0, !dbg !6550
  br label %9, !dbg !6551

9:                                                ; preds = %2, %4
  %10 = phi i32 [ %8, %4 ], [ -2, %2 ], !dbg !6544
  ret i32 %10, !dbg !6552
}

; Function Attrs: optsize
declare dso_local i32 @gpio_SetDriving(i32 noundef, i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !6553 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !6558, metadata !DIExpression()), !dbg !6562
  call void @llvm.dbg.value(metadata i32* %1, metadata !6559, metadata !DIExpression()), !dbg !6562
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #13, !dbg !6563
  %4 = icmp ugt i32 %0, 60, !dbg !6564
  br i1 %4, label %11, label %5, !dbg !6566

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %3, metadata !6561, metadata !DIExpression(DW_OP_deref)), !dbg !6562
  %6 = call i32 @gpio_GetDriving(i32 noundef %0, i8* noundef nonnull %3) #14, !dbg !6567
  call void @llvm.dbg.value(metadata i32 %6, metadata !6560, metadata !DIExpression()), !dbg !6562
  %7 = load i8, i8* %3, align 1, !dbg !6568
  call void @llvm.dbg.value(metadata i8 %7, metadata !6561, metadata !DIExpression()), !dbg !6562
  %8 = zext i8 %7 to i32, !dbg !6569
  store i32 %8, i32* %1, align 4, !dbg !6570
  %9 = icmp slt i32 %6, 0, !dbg !6571
  %10 = select i1 %9, i32 -3, i32 0, !dbg !6571
  br label %11, !dbg !6572

11:                                               ; preds = %2, %5
  %12 = phi i32 [ %10, %5 ], [ -2, %2 ], !dbg !6562
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #13, !dbg !6573
  ret i32 %12, !dbg !6573
}

; Function Attrs: optsize
declare dso_local i32 @gpio_GetDriving(i32 noundef, i8* noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !6574 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6579, metadata !DIExpression()), !dbg !6580
  %2 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !6581
  %3 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6583
  %4 = load i8, i8* %3, align 4, !dbg !6583, !range !1594
  %5 = icmp eq i8 %4, 0, !dbg !6583
  br i1 %5, label %6, label %12, !dbg !6584

6:                                                ; preds = %1
  %7 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #16, !dbg !6585
  br i1 %7, label %9, label %8, !dbg !6587

8:                                                ; preds = %6
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 89, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.82, i32 0, i32 0), i32 noundef %0) #14, !dbg !6588
  br label %12, !dbg !6590

9:                                                ; preds = %6
  %10 = bitcast %struct.hal_gpt_context_t* %2 to i8*, !dbg !6591
  %11 = tail call i8* @memset(i8* noundef nonnull %10, i32 noundef 0, i32 noundef 16) #14, !dbg !6592
  store i8 1, i8* %3, align 4, !dbg !6593
  br label %12, !dbg !6594

12:                                               ; preds = %1, %9, %8
  %13 = phi i32 [ -2, %8 ], [ 0, %9 ], [ -3, %1 ], !dbg !6580
  ret i32 %13, !dbg !6595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #9 !dbg !6596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6600, metadata !DIExpression()), !dbg !6601
  %2 = icmp ult i32 %0, 5, !dbg !6602
  %3 = icmp ne i32 %0, 2
  %4 = and i1 %2, %3, !dbg !6604
  ret i1 %4, !dbg !6605
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6608, metadata !DIExpression()), !dbg !6609
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #16, !dbg !6610
  br i1 %2, label %4, label %3, !dbg !6612

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 104, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.82, i32 0, i32 0), i32 noundef %0) #14, !dbg !6613
  br label %14, !dbg !6615

4:                                                ; preds = %1
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !6616
  %6 = getelementptr inbounds %struct.hal_gpt_context_t, %struct.hal_gpt_context_t* %5, i32 0, i32 0, !dbg !6618
  %7 = load i32, i32* %6, align 4, !dbg !6618
  %8 = icmp eq i32 %7, 0, !dbg !6619
  br i1 %8, label %10, label %9, !dbg !6620

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.hal_gpt_deinit, i32 0, i32 0), i32 noundef 109, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.83, i32 0, i32 0), i32 noundef %0) #14, !dbg !6621
  br label %14, !dbg !6623

10:                                               ; preds = %4
  %11 = bitcast %struct.hal_gpt_context_t* %5 to i8*, !dbg !6624
  %12 = tail call i8* @memset(i8* noundef nonnull %11, i32 noundef 0, i32 noundef 16) #14, !dbg !6625
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6626
  store i8 0, i8* %13, align 4, !dbg !6627
  br label %14, !dbg !6628

14:                                               ; preds = %10, %9, %3
  %15 = phi i32 [ -2, %3 ], [ -3, %9 ], [ 0, %10 ], !dbg !6609
  ret i32 %15, !dbg !6629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !6630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6635, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i32* %1, metadata !6636, metadata !DIExpression()), !dbg !6637
  switch i32 %0, label %24 [
    i32 0, label %3
    i32 1, label %9
    i32 2, label %18
  ], !dbg !6638

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6639
  %5 = icmp eq i32 %4, 1, !dbg !6643
  br i1 %5, label %7, label %6, !dbg !6644

6:                                                ; preds = %3
  tail call void @CM4_GPT2Init() #14, !dbg !6645
  br label %7, !dbg !6647

7:                                                ; preds = %6, %3
  %8 = tail call i32 @get_current_count() #14, !dbg !6648
  store i32 %8, i32* %1, align 4, !dbg !6649
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6650
  br label %25, !dbg !6651

9:                                                ; preds = %2
  %10 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6652
  %11 = icmp eq i32 %10, 1, !dbg !6656
  br i1 %11, label %13, label %12, !dbg !6657

12:                                               ; preds = %9
  tail call void @CM4_GPT4Init() #14, !dbg !6658
  br label %13, !dbg !6660

13:                                               ; preds = %12, %9
  %14 = tail call i32 @get_current_gpt4_count() #14, !dbg !6661
  %15 = tail call i32 @top_mcu_freq_get() #14, !dbg !6662
  %16 = udiv i32 %15, 1000000, !dbg !6663
  %17 = udiv i32 %14, %16, !dbg !6664
  store i32 %17, i32* %1, align 4, !dbg !6665
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6666
  br label %25, !dbg !6667

18:                                               ; preds = %2
  %19 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6668
  %20 = icmp eq i32 %19, 1, !dbg !6672
  br i1 %20, label %22, label %21, !dbg !6673

21:                                               ; preds = %18
  tail call void @CM4_GPT4Init() #14, !dbg !6674
  br label %22, !dbg !6676

22:                                               ; preds = %21, %18
  %23 = tail call i32 @get_current_gpt4_count() #14, !dbg !6677
  store i32 %23, i32* %1, align 4, !dbg !6678
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6679
  br label %25

24:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_free_run_count, i32 0, i32 0), i32 noundef 141, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.86, i32 0, i32 0), i32 noundef %0) #14, !dbg !6680
  br label %25, !dbg !6682

25:                                               ; preds = %7, %22, %13, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %13 ], [ 0, %22 ], [ 0, %7 ], !dbg !6637
  ret i32 %26, !dbg !6683
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #4 !dbg !6684 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6688, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata i32 %1, metadata !6689, metadata !DIExpression()), !dbg !6691
  call void @llvm.dbg.value(metadata i32* %2, metadata !6690, metadata !DIExpression()), !dbg !6691
  %4 = icmp eq i32* %2, null, !dbg !6692
  br i1 %4, label %7, label %5, !dbg !6694

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !6695
  store i32 %6, i32* %2, align 4, !dbg !6695
  br label %7, !dbg !6697

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !6691
  ret i32 %8, !dbg !6698
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !6699 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6704, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.value(metadata i32* %1, metadata !6705, metadata !DIExpression()), !dbg !6706
  %3 = icmp ugt i32 %0, 4, !dbg !6707
  br i1 %3, label %4, label %5, !dbg !6709

4:                                                ; preds = %2
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__FUNCTION__.hal_gpt_get_running_status, i32 0, i32 0), i32 noundef 167, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.87, i32 0, i32 0), i32 noundef %0) #14, !dbg !6710
  br label %8, !dbg !6712

5:                                                ; preds = %2
  %6 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6713
  %7 = load i32, i32* %6, align 4, !dbg !6713
  store i32 %7, i32* %1, align 4, !dbg !6714
  br label %8, !dbg !6715

8:                                                ; preds = %5, %4
  %9 = phi i32 [ -2, %4 ], [ 0, %5 ], !dbg !6706
  ret i32 %9, !dbg !6716
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6721, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !6722, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.value(metadata i8* %2, metadata !6723, metadata !DIExpression()), !dbg !6724
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #16, !dbg !6725
  br i1 %4, label %6, label %5, !dbg !6727

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.hal_gpt_register_callback, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.88, i32 0, i32 0), i32 noundef %0) #14, !dbg !6728
  br label %15, !dbg !6730

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6731
  %8 = load i8, i8* %7, align 4, !dbg !6731, !range !1594
  %9 = icmp eq i8 %8, 1, !dbg !6733
  br i1 %9, label %10, label %15, !dbg !6734

10:                                               ; preds = %6
  %11 = icmp eq void (i8*)* %1, null, !dbg !6735
  br i1 %11, label %15, label %12, !dbg !6737

12:                                               ; preds = %10
  %13 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !6738
  store void (i8*)* %1, void (i8*)** %13, align 4, !dbg !6739
  %14 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !6740
  store i8* %2, i8** %14, align 4, !dbg !6741
  br label %15, !dbg !6742

15:                                               ; preds = %10, %6, %12, %5
  %16 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !6724
  ret i32 %16, !dbg !6743
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6744 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6749, metadata !DIExpression()), !dbg !6752
  call void @llvm.dbg.value(metadata i32 %1, metadata !6750, metadata !DIExpression()), !dbg !6752
  call void @llvm.dbg.value(metadata i32 %2, metadata !6751, metadata !DIExpression()), !dbg !6752
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #16, !dbg !6753
  br i1 %4, label %6, label %5, !dbg !6755

5:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__FUNCTION__.hal_gpt_start_timer_ms, i32 0, i32 0), i32 noundef 221, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.88, i32 0, i32 0), i32 noundef %0) #14, !dbg !6756
  br label %17, !dbg !6758

6:                                                ; preds = %3
  %7 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !6759
  %8 = load i8, i8* %7, align 4, !dbg !6759, !range !1594
  %9 = icmp eq i8 %8, 1, !dbg !6761
  br i1 %9, label %10, label %17, !dbg !6762

10:                                               ; preds = %6
  %11 = icmp ugt i32 %1, 130150523, !dbg !6763
  br i1 %11, label %17, label %12, !dbg !6765

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %1) #16, !dbg !6766
  %14 = tail call fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %2) #16, !dbg !6767
  %15 = tail call fastcc void ()* @hal_gpt_map_callback(i32 noundef %0) #16, !dbg !6768
  tail call void @drvTMR_init(i32 noundef %0, i32 noundef %13, i1 noundef zeroext %14, void ()* noundef nonnull %15) #14, !dbg !6769
  tail call void @TMR_Start(i32 noundef %0) #14, !dbg !6770
  %16 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6771
  store i32 1, i32* %16, align 4, !dbg !6772
  br label %17, !dbg !6773

17:                                               ; preds = %10, %6, %12, %5
  %18 = phi i32 [ -2, %5 ], [ 0, %12 ], [ -3, %6 ], [ -1, %10 ], !dbg !6752
  ret i32 %18, !dbg !6774
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_gpt_translate_timeout_time(i32 noundef %0) unnamed_addr #9 !dbg !6775 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6779, metadata !DIExpression()), !dbg !6780
  %2 = shl i32 %0, 5, !dbg !6781
  %3 = mul i32 %0, 7, !dbg !6782
  %4 = udiv i32 %3, 10, !dbg !6783
  %5 = add i32 %4, %2, !dbg !6784
  %6 = mul i32 %0, 6, !dbg !6785
  %7 = udiv i32 %6, 100, !dbg !6786
  %8 = add i32 %5, %7, !dbg !6787
  %9 = shl i32 %0, 3, !dbg !6788
  %10 = udiv i32 %9, 1000, !dbg !6789
  %11 = add i32 %8, %10, !dbg !6790
  ret i32 %11, !dbg !6791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_gpt_translate_type(i32 noundef %0) unnamed_addr #9 !dbg !6792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6796, metadata !DIExpression()), !dbg !6797
  %2 = icmp eq i32 %0, 1, !dbg !6798
  ret i1 %2, !dbg !6799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull void ()* @hal_gpt_map_callback(i32 noundef %0) unnamed_addr #9 !dbg !6800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6805, metadata !DIExpression()), !dbg !6806
  %2 = icmp eq i32 %0, 0, !dbg !6807
  %3 = select i1 %2, void ()* @hal_gpt_callback0, void ()* @hal_gpt_callback1, !dbg !6808
  ret void ()* %3, !dbg !6809
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback0() #0 !dbg !6810 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 0), align 4, !dbg !6814
  %2 = icmp eq void (i8*)* %1, null, !dbg !6816
  br i1 %2, label %5, label %3, !dbg !6817

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 1, i32 1), align 4, !dbg !6818
  tail call void %1(i8* noundef %4) #14, !dbg !6820
  br label %5, !dbg !6821

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 0, i32 0), align 4, !dbg !6822
  ret void, !dbg !6823
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_gpt_callback1() #0 !dbg !6824 {
  %1 = load void (i8*)*, void (i8*)** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 0), align 4, !dbg !6827
  %2 = icmp eq void (i8*)* %1, null, !dbg !6829
  br i1 %2, label %5, label %3, !dbg !6830

3:                                                ; preds = %0
  %4 = load i8*, i8** getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 1, i32 1), align 4, !dbg !6831
  tail call void %1(i8* noundef %4) #14, !dbg !6833
  br label %5, !dbg !6834

5:                                                ; preds = %3, %0
  store i32 0, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 1, i32 0), align 4, !dbg !6835
  ret void, !dbg !6836
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !6837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6839, metadata !DIExpression()), !dbg !6840
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #16, !dbg !6841
  br i1 %2, label %4, label %3, !dbg !6843

3:                                                ; preds = %1
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_gpt_stop_timer, i32 0, i32 0), i32 noundef 245, i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.88, i32 0, i32 0), i32 noundef %0) #14, !dbg !6844
  br label %6, !dbg !6846

4:                                                ; preds = %1
  tail call void @TMR_Stop(i32 noundef %0) #14, !dbg !6847
  %5 = getelementptr inbounds [5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !6848
  store i32 0, i32* %5, align 4, !dbg !6849
  br label %6, !dbg !6850

6:                                                ; preds = %4, %3
  %7 = phi i32 [ -2, %3 ], [ 0, %4 ], !dbg !6840
  ret i32 %7, !dbg !6851
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !6852 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6856, metadata !DIExpression()), !dbg !6857
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6858
  %3 = icmp eq i32 %2, 1, !dbg !6860
  br i1 %3, label %5, label %4, !dbg !6861

4:                                                ; preds = %1
  tail call void @CM4_GPT2Init() #14, !dbg !6862
  br label %5, !dbg !6864

5:                                                ; preds = %4, %1
  tail call void @delay_ms(i32 noundef %0) #14, !dbg !6865
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 2, i32 0), align 4, !dbg !6866
  ret i32 0, !dbg !6867
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 !dbg !6868 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6870, metadata !DIExpression()), !dbg !6871
  %2 = load i32, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6872
  %3 = icmp eq i32 %2, 1, !dbg !6874
  br i1 %3, label %5, label %4, !dbg !6875

4:                                                ; preds = %1
  tail call void @CM4_GPT4Init() #14, !dbg !6876
  br label %5, !dbg !6878

5:                                                ; preds = %4, %1
  tail call void @delay_us(i32 noundef %0) #14, !dbg !6879
  store i32 1, i32* getelementptr inbounds ([5 x %struct.hal_gpt_context_t], [5 x %struct.hal_gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !6880
  ret i32 0, !dbg !6881
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !6882 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6884, metadata !DIExpression()), !dbg !6887
  %4 = bitcast i32* %2 to i8*, !dbg !6888
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #13, !dbg !6888
  %5 = bitcast i32* %3 to i8*, !dbg !6889
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #13, !dbg !6889
  %6 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6890
  %7 = load i8, i8* %6, align 1, !dbg !6890, !range !1594
  %8 = icmp eq i8 %7, 0, !dbg !6892
  br i1 %8, label %9, label %26, !dbg !6893

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32* %3, metadata !6886, metadata !DIExpression(DW_OP_deref)), !dbg !6887
  %10 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %3) #14, !dbg !6894
  call void @llvm.dbg.value(metadata i32* %2, metadata !6885, metadata !DIExpression(DW_OP_deref)), !dbg !6887
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %2) #14, !dbg !6896
  %11 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !6897
  %12 = load i32, i32* %11, align 4, !dbg !6897
  %13 = load i32, i32* %2, align 4, !dbg !6899
  call void @llvm.dbg.value(metadata i32 %13, metadata !6885, metadata !DIExpression()), !dbg !6887
  %14 = icmp eq i32 %12, %13, !dbg !6900
  br i1 %14, label %15, label %23, !dbg !6901

15:                                               ; preds = %9
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6902
  %17 = load i8, i8* %16, align 1, !dbg !6902, !range !1594
  %18 = icmp eq i8 %17, 0, !dbg !6902
  br i1 %18, label %23, label %19, !dbg !6905

19:                                               ; preds = %15
  %20 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6906
  %21 = load i8, i8* %20, align 1, !dbg !6906
  %22 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %21) #14, !dbg !6908
  store i8 0, i8* %16, align 1, !dbg !6909
  br label %23, !dbg !6910

23:                                               ; preds = %15, %19, %9
  %24 = load i32, i32* %3, align 4, !dbg !6911
  call void @llvm.dbg.value(metadata i32 %24, metadata !6886, metadata !DIExpression()), !dbg !6887
  %25 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %24) #14, !dbg !6912
  br label %27, !dbg !6913

26:                                               ; preds = %1
  store i8 0, i8* %6, align 1, !dbg !6914
  br label %27

27:                                               ; preds = %26, %23
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #13, !dbg !6916
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #13, !dbg !6916
  ret void, !dbg !6916
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6923, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6924, metadata !DIExpression()), !dbg !6925
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #16, !dbg !6926
  br i1 %3, label %4, label %24, !dbg !6928

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !6929
  %6 = load i8, i8* %5, align 4, !dbg !6929, !range !1594
  %7 = icmp eq i8 %6, 0, !dbg !6929
  br i1 %7, label %8, label %24, !dbg !6931

8:                                                ; preds = %4
  %9 = tail call i8* @memset(i8* noundef nonnull %5, i32 noundef 0, i32 noundef 64) #14, !dbg !6932
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !6933
  %11 = bitcast %struct.hal_uart_config_t* %10 to i8*, !dbg !6934
  %12 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !6935
  %13 = tail call i8* @memcpy(i8* noundef nonnull %11, i8* noundef %12, i32 noundef 16) #14, !dbg !6936
  store i8 1, i8* %5, align 4, !dbg !6937
  %14 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #16, !dbg !6938, !range !6939
  tail call void @uart_reset_default_value(i32 noundef %14) #14, !dbg !6940
  tail call void @halUART_HWInit(i32 noundef %14) #14, !dbg !6941
  %15 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #16, !dbg !6942
  %16 = icmp eq i32 %15, 0, !dbg !6944
  br i1 %16, label %17, label %24, !dbg !6945

17:                                               ; preds = %8
  tail call void @uart_set_sleep_mode(i32 noundef %14) #14, !dbg !6946
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !6947
  store i8 0, i8* %18, align 1, !dbg !6948
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !6949
  store i8 0, i8* %19, align 1, !dbg !6950
  %20 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([2 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !6951
  %21 = load i8*, i8** %20, align 4, !dbg !6951
  %22 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %21) #14, !dbg !6952
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !6953
  store i8 %22, i8* %23, align 1, !dbg !6954
  br label %24, !dbg !6955

24:                                               ; preds = %8, %4, %2, %17
  %25 = phi i32 [ 0, %17 ], [ -4, %2 ], [ -3, %4 ], [ -4, %8 ], !dbg !6925
  ret i32 %25, !dbg !6956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef readonly %1) unnamed_addr #8 !dbg !6957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6963, metadata !DIExpression()), !dbg !6965
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6964, metadata !DIExpression()), !dbg !6965
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !6966
  %4 = icmp ne %struct.hal_uart_config_t* %1, null
  %5 = and i1 %4, %3, !dbg !6968
  br i1 %5, label %6, label %22, !dbg !6968

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6969
  %8 = load i32, i32* %7, align 4, !dbg !6969
  %9 = icmp ugt i32 %8, 12, !dbg !6971
  br i1 %9, label %22, label %10, !dbg !6972

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6973
  %12 = load i32, i32* %11, align 4, !dbg !6973
  %13 = icmp ugt i32 %12, 2, !dbg !6974
  br i1 %13, label %22, label %14, !dbg !6975

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6976
  %16 = load i32, i32* %15, align 4, !dbg !6976
  %17 = icmp ugt i32 %16, 1, !dbg !6977
  br i1 %17, label %22, label %18, !dbg !6978

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6979
  %20 = load i32, i32* %19, align 4, !dbg !6979
  %21 = icmp ult i32 %20, 4, !dbg !6980
  br label %22, !dbg !6981

22:                                               ; preds = %18, %6, %10, %14, %2
  %23 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %10 ], [ false, %6 ], [ %21, %18 ], !dbg !6965
  ret i1 %23, !dbg !6982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_port(i32 noundef %0) unnamed_addr #9 !dbg !6983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6987, metadata !DIExpression()), !dbg !6988
  %2 = icmp ne i32 %0, 0, !dbg !6989
  %3 = zext i1 %2 to i32, !dbg !6990
  ret i32 %3, !dbg !6991
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6996, metadata !DIExpression()), !dbg !6998
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6997, metadata !DIExpression()), !dbg !6998
  %3 = tail call fastcc zeroext i1 @hal_uart_is_config_valid(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #16, !dbg !6999
  br i1 %3, label %4, label %22, !dbg !7001

4:                                                ; preds = %2
  %5 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !7002
  %6 = bitcast %struct.hal_uart_config_t* %5 to i8*, !dbg !7003
  %7 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !7004
  %8 = tail call i8* @memcpy(i8* noundef nonnull %6, i8* noundef %7, i32 noundef 16) #14, !dbg !7005
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #16, !dbg !7006
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !7007
  %11 = load i32, i32* %10, align 4, !dbg !7007
  %12 = tail call fastcc i32 @hal_uart_translate_baudrate(i32 noundef %11) #16, !dbg !7008
  %13 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !7009
  %14 = load i32, i32* %13, align 4, !dbg !7009
  %15 = tail call fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %14) #16, !dbg !7010
  %16 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !7011
  %17 = load i32, i32* %16, align 4, !dbg !7011
  %18 = tail call fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %17) #16, !dbg !7012
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !7013
  %20 = load i32, i32* %19, align 4, !dbg !7013
  %21 = tail call fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %20) #16, !dbg !7014
  tail call void @halUART_SetFormat(i32 noundef %9, i32 noundef %12, i16 noundef zeroext %15, i16 noundef zeroext %18, i16 noundef zeroext %21) #14, !dbg !7015
  br label %22, !dbg !7016

22:                                               ; preds = %2, %4
  %23 = phi i32 [ 0, %4 ], [ -4, %2 ], !dbg !6998
  ret i32 %23, !dbg !7017
}

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_uart_translate_baudrate(i32 noundef %0) unnamed_addr #9 !dbg !7018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7022, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.declare(metadata [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, metadata !7023, metadata !DIExpression()), !dbg !7026
  %2 = getelementptr inbounds [13 x i32], [13 x i32]* @__const.hal_uart_translate_baudrate.baudrate_tbl, i32 0, i32 %0, !dbg !7027
  %3 = load i32, i32* %2, align 4, !dbg !7027
  ret i32 %3, !dbg !7028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_word_length(i32 noundef %0) unnamed_addr #9 !dbg !7029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7033, metadata !DIExpression()), !dbg !7036
  call void @llvm.dbg.declare(metadata [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, metadata !7034, metadata !DIExpression()), !dbg !7037
  %2 = getelementptr inbounds [4 x i16], [4 x i16]* @__const.hal_uart_translate_word_length.databit_tbl, i32 0, i32 %0, !dbg !7038
  %3 = load i16, i16* %2, align 2, !dbg !7038
  ret i16 %3, !dbg !7039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_parity(i32 noundef %0) unnamed_addr #9 !dbg !7040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7044, metadata !DIExpression()), !dbg !7047
  call void @llvm.dbg.declare(metadata [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, metadata !7045, metadata !DIExpression()), !dbg !7048
  %2 = getelementptr inbounds [5 x i16], [5 x i16]* @__const.hal_uart_translate_parity.parity_tbl, i32 0, i32 %0, !dbg !7049
  %3 = load i16, i16* %2, align 2, !dbg !7049
  ret i16 %3, !dbg !7050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i16 @hal_uart_translate_stopbit(i32 noundef %0) unnamed_addr #9 !dbg !7051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7055, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.declare(metadata [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, metadata !7056, metadata !DIExpression()), !dbg !7059
  %2 = getelementptr inbounds [3 x i16], [3 x i16]* @__const.hal_uart_translate_stopbit.stopbit_tbl, i32 0, i32 %0, !dbg !7060
  %3 = load i16, i16* %2, align 2, !dbg !7060
  ret i16 %3, !dbg !7061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) unnamed_addr #9 !dbg !7062 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7066, metadata !DIExpression()), !dbg !7067
  %2 = icmp ult i32 %0, 2, !dbg !7068
  ret i1 %2, !dbg !7069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !7070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7074, metadata !DIExpression()), !dbg !7075
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7076
  br i1 %2, label %3, label %18, !dbg !7078

3:                                                ; preds = %1
  %4 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 0, !dbg !7079
  %5 = load i8, i8* %4, align 4, !dbg !7079, !range !1594
  %6 = icmp eq i8 %5, 0, !dbg !7081
  br i1 %6, label %18, label %7, !dbg !7082

7:                                                ; preds = %3
  %8 = tail call i8* @memset(i8* noundef nonnull %4, i32 noundef 0, i32 noundef 64) #14, !dbg !7083
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #16, !dbg !7084, !range !6939
  tail call void @uart_query_empty(i32 noundef %9) #14, !dbg !7085
  %10 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !7086
  %11 = load i32, i32* %10, align 4, !dbg !7086
  %12 = tail call i32 @hal_nvic_disable_irq(i32 noundef %11) #14, !dbg !7087
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !7088
  store i8 0, i8* %13, align 1, !dbg !7089
  %14 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !7090
  store i8 0, i8* %14, align 1, !dbg !7091
  tail call void @uart_mask_send_interrupt(i32 noundef %9) #14, !dbg !7092
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !7093
  %16 = load i8, i8* %15, align 1, !dbg !7093
  %17 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %16) #14, !dbg !7094
  tail call void @uart_reset_default_value(i32 noundef %9) #14, !dbg !7095
  br label %18, !dbg !7096

18:                                               ; preds = %3, %1, %7
  %19 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !7075
  ret i32 %19, !dbg !7097
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !7098 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7102, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.value(metadata i8 %1, metadata !7103, metadata !DIExpression()), !dbg !7105
  %3 = icmp eq i32 %0, 0, !dbg !7106
  %4 = icmp eq i32 %0, 1, !dbg !7106
  %5 = select i1 %4, i32 1, i32 2, !dbg !7106
  %6 = select i1 %3, i32 0, i32 %5, !dbg !7106
  call void @llvm.dbg.value(metadata i32 %6, metadata !7104, metadata !DIExpression()), !dbg !7105
  %7 = icmp eq i32 %6, 2, !dbg !7107
  br i1 %7, label %9, label %8, !dbg !7109

8:                                                ; preds = %2
  tail call void @uart_output_char(i32 noundef %6, i8 noundef zeroext %1) #14, !dbg !7110
  br label %9, !dbg !7112

9:                                                ; preds = %2, %8
  ret void, !dbg !7113
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !7114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7118, metadata !DIExpression()), !dbg !7123
  call void @llvm.dbg.value(metadata i8* %1, metadata !7119, metadata !DIExpression()), !dbg !7123
  call void @llvm.dbg.value(metadata i32 %2, metadata !7120, metadata !DIExpression()), !dbg !7123
  %4 = icmp eq i32 %0, 0, !dbg !7124
  %5 = icmp eq i32 %0, 1, !dbg !7124
  %6 = select i1 %5, i32 1, i32 2, !dbg !7124
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7124
  call void @llvm.dbg.value(metadata i32 %7, metadata !7121, metadata !DIExpression()), !dbg !7123
  %8 = icmp eq i8* %1, null, !dbg !7125
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !7127
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !7127
  call void @llvm.dbg.value(metadata i32 0, metadata !7122, metadata !DIExpression()), !dbg !7123
  br i1 %12, label %19, label %13, !dbg !7127

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !7122, metadata !DIExpression()), !dbg !7123
  %15 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !7128
  %16 = load i8, i8* %15, align 1, !dbg !7128
  tail call void @uart_output_char(i32 noundef %7, i8 noundef zeroext %16) #14, !dbg !7134
  %17 = add nuw i32 %14, 1, !dbg !7135
  call void @llvm.dbg.value(metadata i32 %17, metadata !7122, metadata !DIExpression()), !dbg !7123
  %18 = icmp eq i32 %17, %2, !dbg !7136
  br i1 %18, label %19, label %13, !dbg !7137, !llvm.loop !7138

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !7123
  ret i32 %20, !dbg !7140
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !7141 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7143, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata i8* %1, metadata !7144, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata i32 %2, metadata !7145, metadata !DIExpression()), !dbg !7151
  %6 = bitcast i32* %4 to i8*, !dbg !7152
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #13, !dbg !7152
  %7 = bitcast i32* %5 to i8*, !dbg !7153
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13, !dbg !7153
  %8 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7154
  br i1 %8, label %9, label %37, !dbg !7156

9:                                                ; preds = %3
  %10 = icmp eq i8* %1, null, !dbg !7157
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !7159
  br i1 %12, label %37, label %13, !dbg !7159

13:                                               ; preds = %9
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !7160
  %15 = load i8, i8* %14, align 4, !dbg !7160, !range !1594
  %16 = icmp eq i8 %15, 0, !dbg !7160
  br i1 %16, label %37, label %17, !dbg !7162

17:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32* %5, metadata !7150, metadata !DIExpression(DW_OP_deref)), !dbg !7151
  %18 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #14, !dbg !7163
  %19 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !7164
  %20 = load i8, i8* %19, align 1, !dbg !7164, !range !1594
  %21 = icmp eq i8 %20, 0, !dbg !7166
  br i1 %21, label %22, label %26, !dbg !7167

22:                                               ; preds = %17
  %23 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !7168
  %24 = load i8, i8* %23, align 1, !dbg !7168
  %25 = call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %24) #14, !dbg !7170
  store i8 1, i8* %19, align 1, !dbg !7171
  br label %26, !dbg !7172

26:                                               ; preds = %22, %17
  %27 = load i32, i32* %5, align 4, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %27, metadata !7150, metadata !DIExpression()), !dbg !7151
  %28 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %27) #14, !dbg !7174
  %29 = call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #16, !dbg !7175, !range !6939
  call void @llvm.dbg.value(metadata i32* %4, metadata !7146, metadata !DIExpression(DW_OP_deref)), !dbg !7151
  call void @halUART_Get_VFIFO_Length(i32 noundef %29, i32 noundef 0, i32* noundef nonnull %4) #14, !dbg !7176
  %30 = load i32, i32* %4, align 4, !dbg !7177
  call void @llvm.dbg.value(metadata i32 %30, metadata !7146, metadata !DIExpression()), !dbg !7151
  %31 = icmp ult i32 %30, %2, !dbg !7179
  %32 = select i1 %31, i32 %30, i32 %2
  call void @llvm.dbg.value(metadata i32 %32, metadata !7147, metadata !DIExpression()), !dbg !7151
  call void @halUART_Write_VFIFO_Data(i32 noundef %29, i8* noundef nonnull %1, i32 noundef %32) #14, !dbg !7180
  %33 = load i32, i32* %4, align 4, !dbg !7181
  call void @llvm.dbg.value(metadata i32 %33, metadata !7146, metadata !DIExpression()), !dbg !7151
  %34 = icmp eq i32 %32, %33, !dbg !7183
  br i1 %34, label %35, label %37, !dbg !7184

35:                                               ; preds = %26
  %36 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %29, i1 noundef zeroext false) #16, !dbg !7185, !range !7187
  call void @llvm.dbg.value(metadata i32 %36, metadata !7148, metadata !DIExpression()), !dbg !7151
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %36) #14, !dbg !7188
  br label %37, !dbg !7189

37:                                               ; preds = %26, %35, %13, %9, %3
  %38 = phi i32 [ 0, %3 ], [ 0, %9 ], [ 0, %13 ], [ %32, %35 ], [ %32, %26 ], !dbg !7151
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13, !dbg !7190
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #13, !dbg !7190
  ret i32 %38, !dbg !7190
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #9 !dbg !7191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7195, metadata !DIExpression()), !dbg !7198
  call void @llvm.dbg.value(metadata i1 %1, metadata !7196, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7198
  %3 = icmp eq i32 %0, 0, !dbg !7199
  %4 = select i1 %1, i32 15, i32 14, !dbg !7201
  %5 = select i1 %1, i32 17, i32 16, !dbg !7201
  %6 = select i1 %3, i32 %4, i32 %5, !dbg !7201
  call void @llvm.dbg.value(metadata i32 %6, metadata !7197, metadata !DIExpression()), !dbg !7198
  ret i32 %6, !dbg !7202
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_enable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !7203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7207, metadata !DIExpression()), !dbg !7209
  %2 = icmp eq i32 %0, 0, !dbg !7210
  %3 = icmp eq i32 %0, 1, !dbg !7210
  %4 = select i1 %3, i32 1, i32 2, !dbg !7210
  %5 = select i1 %2, i32 0, i32 %4, !dbg !7210
  call void @llvm.dbg.value(metadata i32 %5, metadata !7208, metadata !DIExpression()), !dbg !7209
  %6 = icmp ult i32 %5, 2, !dbg !7211
  br i1 %6, label %7, label %9, !dbg !7213

7:                                                ; preds = %1
  %8 = tail call zeroext i8 @uart_input_char(i32 noundef %5) #14, !dbg !7214
  br label %9, !dbg !7216

9:                                                ; preds = %1, %7
  %10 = phi i8 [ %8, %7 ], [ 0, %1 ], !dbg !7217
  ret i8 %10, !dbg !7218
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !7219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7223, metadata !DIExpression()), !dbg !7225
  %2 = icmp eq i32 %0, 0, !dbg !7226
  %3 = icmp eq i32 %0, 1, !dbg !7226
  %4 = select i1 %3, i32 1, i32 2, !dbg !7226
  %5 = select i1 %2, i32 0, i32 %4, !dbg !7226
  call void @llvm.dbg.value(metadata i32 %5, metadata !7224, metadata !DIExpression()), !dbg !7225
  %6 = icmp ult i32 %5, 2, !dbg !7227
  br i1 %6, label %7, label %9, !dbg !7229

7:                                                ; preds = %1
  %8 = tail call i32 @uart_input_char_unblocking(i32 noundef %5) #14, !dbg !7230
  br label %9, !dbg !7232

9:                                                ; preds = %1, %7
  %10 = phi i32 [ %8, %7 ], [ 0, %1 ], !dbg !7233
  ret i32 %10, !dbg !7234
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !7235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7239, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.value(metadata i8* %1, metadata !7240, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.value(metadata i32 %2, metadata !7241, metadata !DIExpression()), !dbg !7244
  %4 = icmp eq i32 %0, 0, !dbg !7245
  %5 = icmp eq i32 %0, 1, !dbg !7245
  %6 = select i1 %5, i32 1, i32 2, !dbg !7245
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7245
  call void @llvm.dbg.value(metadata i32 %7, metadata !7242, metadata !DIExpression()), !dbg !7244
  %8 = icmp eq i8* %1, null, !dbg !7246
  %9 = icmp ugt i32 %7, 1
  %10 = or i1 %8, %9, !dbg !7248
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !7248
  call void @llvm.dbg.value(metadata i32 0, metadata !7243, metadata !DIExpression()), !dbg !7244
  br i1 %12, label %19, label %13, !dbg !7248

13:                                               ; preds = %3, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !7243, metadata !DIExpression()), !dbg !7244
  %15 = tail call zeroext i8 @uart_input_char(i32 noundef %7) #14, !dbg !7249
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !7255
  store i8 %15, i8* %16, align 1, !dbg !7256
  %17 = add nuw i32 %14, 1, !dbg !7257
  call void @llvm.dbg.value(metadata i32 %17, metadata !7243, metadata !DIExpression()), !dbg !7244
  %18 = icmp eq i32 %17, %2, !dbg !7258
  br i1 %18, label %19, label %13, !dbg !7259, !llvm.loop !7260

19:                                               ; preds = %13, %3
  %20 = phi i32 [ 0, %3 ], [ %2, %13 ], !dbg !7244
  ret i32 %20, !dbg !7262
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !7263 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7265, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata i8* %1, metadata !7266, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata i32 %2, metadata !7267, metadata !DIExpression()), !dbg !7271
  %5 = bitcast i32* %4 to i8*, !dbg !7272
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #13, !dbg !7272
  %6 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7273
  br i1 %6, label %7, label %20, !dbg !7275

7:                                                ; preds = %3
  %8 = icmp eq i8* %1, null, !dbg !7276
  %9 = icmp eq i32 %2, 0
  %10 = or i1 %8, %9, !dbg !7278
  br i1 %10, label %20, label %11, !dbg !7278

11:                                               ; preds = %7
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #16, !dbg !7279, !range !6939
  call void @llvm.dbg.value(metadata i32* %4, metadata !7268, metadata !DIExpression(DW_OP_deref)), !dbg !7271
  call void @halUART_Get_VFIFO_Length(i32 noundef %12, i32 noundef 1, i32* noundef nonnull %4) #14, !dbg !7280
  %13 = load i32, i32* %4, align 4, !dbg !7281
  call void @llvm.dbg.value(metadata i32 %13, metadata !7268, metadata !DIExpression()), !dbg !7271
  %14 = icmp ult i32 %13, %2, !dbg !7283
  %15 = select i1 %14, i32 %13, i32 %2
  call void @llvm.dbg.value(metadata i32 %15, metadata !7269, metadata !DIExpression()), !dbg !7271
  call void @halUART_Read_VFIFO_Data(i32 noundef %12, i8* noundef nonnull %1, i32 noundef %15) #14, !dbg !7284
  %16 = load i32, i32* %4, align 4, !dbg !7285
  call void @llvm.dbg.value(metadata i32 %16, metadata !7268, metadata !DIExpression()), !dbg !7271
  %17 = icmp eq i32 %15, %16, !dbg !7287
  br i1 %17, label %18, label %20, !dbg !7288

18:                                               ; preds = %11
  %19 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %12, i1 noundef zeroext true) #16, !dbg !7289, !range !7187
  call void @llvm.dbg.value(metadata i32 %19, metadata !7270, metadata !DIExpression()), !dbg !7271
  call void @DMA_Vfifo_enable_interrupt(i32 noundef %19) #14, !dbg !7291
  br label %20, !dbg !7292

20:                                               ; preds = %11, %18, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %15, %18 ], [ %15, %11 ], !dbg !7271
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #13, !dbg !7293
  ret i32 %21, !dbg !7293
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !7294 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7296, metadata !DIExpression()), !dbg !7298
  %3 = bitcast i32* %2 to i8*, !dbg !7299
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #13, !dbg !7299
  call void @llvm.dbg.value(metadata i32 0, metadata !7297, metadata !DIExpression()), !dbg !7298
  store i32 0, i32* %2, align 4, !dbg !7300
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7301
  br i1 %4, label %5, label %8, !dbg !7303

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #16, !dbg !7304, !range !6939
  call void @llvm.dbg.value(metadata i32* %2, metadata !7297, metadata !DIExpression(DW_OP_deref)), !dbg !7298
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 0, i32* noundef nonnull %2) #14, !dbg !7305
  %7 = load i32, i32* %2, align 4, !dbg !7306
  call void @llvm.dbg.value(metadata i32 %7, metadata !7297, metadata !DIExpression()), !dbg !7298
  br label %8, !dbg !7307

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !7298
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #13, !dbg !7308
  ret i32 %9, !dbg !7308
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !7309 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7311, metadata !DIExpression()), !dbg !7313
  %3 = bitcast i32* %2 to i8*, !dbg !7314
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #13, !dbg !7314
  call void @llvm.dbg.value(metadata i32 0, metadata !7312, metadata !DIExpression()), !dbg !7313
  store i32 0, i32* %2, align 4, !dbg !7315
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7316
  br i1 %4, label %5, label %8, !dbg !7318

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #16, !dbg !7319, !range !6939
  call void @llvm.dbg.value(metadata i32* %2, metadata !7312, metadata !DIExpression(DW_OP_deref)), !dbg !7313
  call void @halUART_Get_VFIFO_Length(i32 noundef %6, i32 noundef 1, i32* noundef nonnull %2) #14, !dbg !7320
  %7 = load i32, i32* %2, align 4, !dbg !7321
  call void @llvm.dbg.value(metadata i32 %7, metadata !7312, metadata !DIExpression()), !dbg !7313
  br label %8, !dbg !7322

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ], !dbg !7313
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #13, !dbg !7323
  ret i32 %9, !dbg !7323
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !7324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7328, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7329, metadata !DIExpression()), !dbg !7332
  call void @llvm.dbg.value(metadata i8* %2, metadata !7330, metadata !DIExpression()), !dbg !7332
  %4 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7333
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !7335
  br i1 %6, label %7, label %24, !dbg !7335

7:                                                ; preds = %3
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 0, !dbg !7336
  store void (i32, i8*)* %1, void (i32, i8*)** %8, align 4, !dbg !7337
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 3, i32 1, !dbg !7338
  store i8* %2, i8** %9, align 4, !dbg !7339
  %10 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 2, !dbg !7340
  store i8 1, i8* %10, align 4, !dbg !7341
  %11 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #16, !dbg !7342
  %12 = tail call fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) #16, !dbg !7343
  tail call void @halUART_VDMA_Rx_Register_Callback(i32 noundef %11, void ()* noundef %12) #14, !dbg !7344
  tail call void @halUART_VDMA_Rx_Register_TO_Callback(i32 noundef %11, void ()* noundef %12) #14, !dbg !7345
  %13 = icmp eq i32 %11, 0, !dbg !7346
  br i1 %13, label %14, label %15, !dbg !7348

14:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 14, void ()* noundef nonnull @hal_uart_send_callback0) #14, !dbg !7349
  br label %16, !dbg !7351

15:                                               ; preds = %7
  tail call void @DMA_Vfifo_Register_Callback(i32 noundef 16, void ()* noundef nonnull @hal_uart_send_callback1) #14, !dbg !7352
  br label %16

16:                                               ; preds = %15, %14
  %17 = tail call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %11, i1 noundef zeroext false) #16, !dbg !7354, !range !7187
  call void @llvm.dbg.value(metadata i32 %17, metadata !7331, metadata !DIExpression()), !dbg !7332
  tail call void @DMA_Vfifo_enable_interrupt(i32 noundef %17) #14, !dbg !7355
  %18 = getelementptr inbounds [2 x i8], [2 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !7356
  store i8 1, i8* %18, align 1, !dbg !7357
  %19 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([2 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !7358
  %20 = load i32, i32* %19, align 4, !dbg !7358
  %21 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %20, void (i32)* noundef nonnull @uart_interrupt_handler) #14, !dbg !7359
  tail call void @uart_unmask_send_interrupt(i32 noundef %11) #14, !dbg !7360
  %22 = load i32, i32* %19, align 4, !dbg !7361
  %23 = tail call i32 @hal_nvic_enable_irq(i32 noundef %22) #14, !dbg !7362
  br label %24, !dbg !7363

24:                                               ; preds = %3, %16
  %25 = phi i32 [ 0, %16 ], [ -4, %3 ], !dbg !7332
  ret i32 %25, !dbg !7364
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc void ()* @hal_uart_map_receive_callback(i32 noundef %0) unnamed_addr #9 !dbg !777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !783, metadata !DIExpression()), !dbg !7365
  %2 = getelementptr inbounds [2 x void ()*], [2 x void ()*]* @hal_uart_map_receive_callback.func_tbl, i32 0, i32 %0, !dbg !7366
  %3 = load void ()*, void ()** %2, align 4, !dbg !7366
  ret void ()* %3, !dbg !7367
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback0() #0 !dbg !7368 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !7374, !range !1594
  %2 = icmp eq i8 %1, 0, !dbg !7374
  br i1 %2, label %8, label %3, !dbg !7375

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !7376
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !7378
  br i1 %5, label %8, label %6, !dbg !7379

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !7380
  tail call void %4(i32 noundef 2, i8* noundef %7) #14, !dbg !7382
  br label %8, !dbg !7383

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #16, !dbg !7384, !range !6939
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #16, !dbg !7385
  ret void, !dbg !7386
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_send_callback1() #0 !dbg !7387 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !7392, !range !1594
  %2 = icmp eq i8 %1, 0, !dbg !7392
  br i1 %2, label %8, label %3, !dbg !7393

3:                                                ; preds = %0
  %4 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !7394
  %5 = icmp eq void (i32, i8*)* %4, null, !dbg !7396
  br i1 %5, label %8, label %6, !dbg !7397

6:                                                ; preds = %3
  %7 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !7398
  tail call void %4(i32 noundef 2, i8* noundef %7) #14, !dbg !7400
  br label %8, !dbg !7401

8:                                                ; preds = %3, %6, %0
  %9 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #16, !dbg !7402, !range !6939
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %9, i1 noundef zeroext false) #16, !dbg !7403
  ret void, !dbg !7404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @hal_uart_check_irq_disable(i32 noundef %0, i1 noundef zeroext %1) unnamed_addr #0 !dbg !7405 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7409, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.value(metadata i1 %1, metadata !7410, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7416
  %5 = bitcast i32* %3 to i8*, !dbg !7417
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #13, !dbg !7417
  %6 = bitcast i32* %4 to i8*, !dbg !7417
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #13, !dbg !7417
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !7413, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !7416
  br i1 %1, label %7, label %12, !dbg !7418

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata !DIArgList([2 x %struct.uart_context_t]* @g_uart_context_table, i32 %0), metadata !7413, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 64, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 36, DW_OP_stack_value)), !dbg !7416
  call void @llvm.dbg.value(metadata i32* %3, metadata !7411, metadata !DIExpression(DW_OP_deref)), !dbg !7416
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 1, i32* noundef nonnull %3) #14, !dbg !7419
  %8 = load i32, i32* %3, align 4, !dbg !7422
  call void @llvm.dbg.value(metadata i32 %8, metadata !7411, metadata !DIExpression()), !dbg !7416
  %9 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 5, !dbg !7424
  %10 = load i32, i32* %9, align 4, !dbg !7424
  %11 = icmp ult i32 %8, %10, !dbg !7425
  br i1 %11, label %22, label %20, !dbg !7426

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32* %4, metadata !7412, metadata !DIExpression(DW_OP_deref)), !dbg !7416
  call void @halUART_Get_VFIFO_Length(i32 noundef %0, i32 noundef 0, i32* noundef nonnull %4) #14, !dbg !7427
  %13 = load i32, i32* %4, align 4, !dbg !7429
  call void @llvm.dbg.value(metadata i32 %13, metadata !7412, metadata !DIExpression()), !dbg !7416
  %14 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 1, !dbg !7431
  %15 = load i32, i32* %14, align 4, !dbg !7431
  %16 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, i32 2, !dbg !7432
  %17 = load i32, i32* %16, align 4, !dbg !7432
  %18 = sub i32 %15, %17, !dbg !7433
  %19 = icmp ult i32 %13, %18, !dbg !7434
  br i1 %19, label %22, label %20, !dbg !7435

20:                                               ; preds = %12, %7
  %21 = call fastcc i32 @uart_channel_to_dma_channel(i32 noundef %0, i1 noundef zeroext %1) #16, !dbg !7436, !range !7187
  call void @DMA_Vfifo_disable_interrupt(i32 noundef %21) #14, !dbg !7436
  br label %22, !dbg !7437

22:                                               ; preds = %20, %12, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #13, !dbg !7437
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #13, !dbg !7437
  ret void, !dbg !7437
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_disable_interrupt(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback0() #0 !dbg !7438 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 2), align 4, !dbg !7443, !range !1594
  %2 = icmp eq i8 %1, 0, !dbg !7443
  br i1 %2, label %11, label %3, !dbg !7444

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 0) #16, !dbg !7445
  %5 = icmp eq i32 %4, 0, !dbg !7446
  br i1 %5, label %11, label %6, !dbg !7447

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 0), align 4, !dbg !7448
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !7450
  br i1 %8, label %11, label %9, !dbg !7451

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 0, i32 3, i32 1), align 4, !dbg !7452
  tail call void %7(i32 noundef 1, i8* noundef %10) #14, !dbg !7454
  br label %11, !dbg !7455

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 0) #16, !dbg !7456, !range !6939
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #16, !dbg !7457
  ret void, !dbg !7458
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_uart_receive_callback1() #0 !dbg !7459 {
  %1 = load i8, i8* getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 2), align 4, !dbg !7464, !range !1594
  %2 = icmp eq i8 %1, 0, !dbg !7464
  br i1 %2, label %11, label %3, !dbg !7465

3:                                                ; preds = %0
  %4 = tail call i32 @hal_uart_get_available_receive_bytes(i32 noundef 1) #16, !dbg !7466
  %5 = icmp eq i32 %4, 0, !dbg !7467
  br i1 %5, label %11, label %6, !dbg !7468

6:                                                ; preds = %3
  %7 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 0), align 4, !dbg !7469
  %8 = icmp eq void (i32, i8*)* %7, null, !dbg !7471
  br i1 %8, label %11, label %9, !dbg !7472

9:                                                ; preds = %6
  %10 = load i8*, i8** getelementptr inbounds ([2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 1, i32 3, i32 1), align 4, !dbg !7473
  tail call void %7(i32 noundef 1, i8* noundef %10) #14, !dbg !7475
  br label %11, !dbg !7476

11:                                               ; preds = %6, %9, %3, %0
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef 1) #16, !dbg !7477, !range !6939
  tail call fastcc void @hal_uart_check_irq_disable(i32 noundef %12, i1 noundef zeroext true) #16, !dbg !7478
  ret void, !dbg !7479
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7480 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7484, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 %1, metadata !7485, metadata !DIExpression()), !dbg !7486
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7487
  %4 = icmp ult i32 %1, 13
  %5 = and i1 %4, %3, !dbg !7489
  br i1 %5, label %6, label %10, !dbg !7489

6:                                                ; preds = %2
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 1, !dbg !7490
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %7, i32 0, i32 0, !dbg !7491
  store i32 %1, i32* %8, align 4, !dbg !7492
  %9 = tail call i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* noundef nonnull %7) #16, !dbg !7493
  br label %10, !dbg !7494

10:                                               ; preds = %2, %6
  %11 = phi i32 [ %9, %6 ], [ -4, %2 ], !dbg !7486
  ret i32 %11, !dbg !7495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* noundef %1) local_unnamed_addr #0 !dbg !7496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7502, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !7503, metadata !DIExpression()), !dbg !7504
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7505
  br i1 %3, label %4, label %28, !dbg !7507

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef %1) #16, !dbg !7508
  br i1 %5, label %6, label %28, !dbg !7510

6:                                                ; preds = %4
  %7 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 4, !dbg !7511
  store i8 1, i8* %7, align 4, !dbg !7512
  %8 = getelementptr inbounds [2 x %struct.uart_context_t], [2 x %struct.uart_context_t]* @g_uart_context_table, i32 0, i32 %0, i32 5, !dbg !7513
  %9 = bitcast %struct.hal_uart_dma_config_t* %8 to i8*, !dbg !7514
  %10 = bitcast %struct.hal_uart_dma_config_t* %1 to i8*, !dbg !7515
  %11 = tail call i8* @memcpy(i8* noundef nonnull %9, i8* noundef %10, i32 noundef 28) #14, !dbg !7516
  tail call void @DMA_Init() #14, !dbg !7517
  tail call void @DMA_Vfifo_init() #14, !dbg !7518
  %12 = tail call fastcc i32 @hal_uart_translate_port(i32 noundef %0) #16, !dbg !7519
  %13 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !7520
  %14 = load i8*, i8** %13, align 4, !dbg !7520
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !7521
  %16 = load i32, i32* %15, align 4, !dbg !7521
  %17 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !7522
  %18 = load i32, i32* %17, align 4, !dbg !7522
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !7523
  %20 = load i32, i32* %19, align 4, !dbg !7523
  %21 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef 5000) #16, !dbg !7524
  tail call void @halUART_Rx_VFIFO_Initialize(i32 noundef %12, i8* noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %21) #14, !dbg !7525
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !7526
  %23 = load i8*, i8** %22, align 4, !dbg !7526
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !7527
  %25 = load i32, i32* %24, align 4, !dbg !7527
  %26 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !7528
  %27 = load i32, i32* %26, align 4, !dbg !7528
  tail call void @halUART_Tx_VFIFO_Initialize(i32 noundef %12, i8* noundef %23, i32 noundef %25, i32 noundef %27) #14, !dbg !7529
  br label %28, !dbg !7530

28:                                               ; preds = %4, %2, %6
  %29 = phi i32 [ 0, %6 ], [ -4, %2 ], [ -4, %4 ], !dbg !7504
  ret i32 %29, !dbg !7531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_uart_is_dma_config_valid(%struct.hal_uart_dma_config_t* noundef readonly %0) unnamed_addr #8 !dbg !7532 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %0, metadata !7536, metadata !DIExpression()), !dbg !7537
  %2 = icmp eq %struct.hal_uart_dma_config_t* %0, null, !dbg !7538
  br i1 %2, label %27, label %3, !dbg !7540

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 3, !dbg !7541
  %5 = load i8*, i8** %4, align 4, !dbg !7541
  %6 = icmp eq i8* %5, null, !dbg !7543
  br i1 %6, label %27, label %7, !dbg !7544

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 4, !dbg !7545
  %9 = load i32, i32* %8, align 4, !dbg !7545
  %10 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 5, !dbg !7547
  %11 = load i32, i32* %10, align 4, !dbg !7547
  %12 = icmp ult i32 %9, %11, !dbg !7548
  br i1 %12, label %27, label %13, !dbg !7549

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 6, !dbg !7550
  %15 = load i32, i32* %14, align 4, !dbg !7550
  %16 = icmp ult i32 %9, %15, !dbg !7552
  br i1 %16, label %27, label %17, !dbg !7553

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 0, !dbg !7554
  %19 = load i8*, i8** %18, align 4, !dbg !7554
  %20 = icmp eq i8* %19, null, !dbg !7556
  br i1 %20, label %27, label %21, !dbg !7557

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 1, !dbg !7558
  %23 = load i32, i32* %22, align 4, !dbg !7558
  %24 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %0, i32 0, i32 2, !dbg !7560
  %25 = load i32, i32* %24, align 4, !dbg !7560
  %26 = icmp uge i32 %23, %25, !dbg !7561
  br label %27, !dbg !7562

27:                                               ; preds = %21, %17, %13, %7, %3, %1
  %28 = phi i1 [ false, %1 ], [ false, %3 ], [ false, %7 ], [ false, %13 ], [ false, %17 ], [ %26, %21 ], !dbg !7537
  ret i1 %28, !dbg !7563
}

; Function Attrs: optsize
declare dso_local void @DMA_Init() local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_init() local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hal_uart_translate_timeout(i32 noundef %0) unnamed_addr #0 !dbg !7564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7566, metadata !DIExpression()), !dbg !7568
  %2 = tail call i32 @top_mcu_freq_get() #14, !dbg !7569
  %3 = udiv i32 %2, 1000000, !dbg !7570
  call void @llvm.dbg.value(metadata i32 %3, metadata !7567, metadata !DIExpression()), !dbg !7568
  %4 = mul i32 %3, %0, !dbg !7571
  ret i32 %4, !dbg !7572
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !7573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7575, metadata !DIExpression()), !dbg !7577
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7578
  br i1 %2, label %3, label %8, !dbg !7580

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !7581
  %5 = icmp eq i32 %0, 1, !dbg !7581
  %6 = select i1 %5, i32 1, i32 2, !dbg !7581
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7581
  call void @llvm.dbg.value(metadata i32 %7, metadata !7576, metadata !DIExpression()), !dbg !7577
  tail call void @uart_set_hardware_flowcontrol(i32 noundef %7) #14, !dbg !7582
  br label %8, !dbg !7583

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !7577
  ret i32 %9, !dbg !7584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !7585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7589, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.value(metadata i8 %1, metadata !7590, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.value(metadata i8 %2, metadata !7591, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.value(metadata i8 %3, metadata !7592, metadata !DIExpression()), !dbg !7594
  %5 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7595
  br i1 %5, label %6, label %11, !dbg !7597

6:                                                ; preds = %4
  %7 = icmp eq i32 %0, 0, !dbg !7598
  %8 = icmp eq i32 %0, 1, !dbg !7598
  %9 = select i1 %8, i32 1, i32 2, !dbg !7598
  %10 = select i1 %7, i32 0, i32 %9, !dbg !7598
  call void @llvm.dbg.value(metadata i32 %10, metadata !7593, metadata !DIExpression()), !dbg !7594
  tail call void @uart_set_software_flowcontrol(i32 noundef %10, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #14, !dbg !7599
  br label %11, !dbg !7600

11:                                               ; preds = %4, %6
  %12 = phi i32 [ 0, %6 ], [ -4, %4 ], !dbg !7594
  ret i32 %12, !dbg !7601
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !7602 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7604, metadata !DIExpression()), !dbg !7606
  %2 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7607
  br i1 %2, label %3, label %8, !dbg !7609

3:                                                ; preds = %1
  %4 = icmp eq i32 %0, 0, !dbg !7610
  %5 = icmp eq i32 %0, 1, !dbg !7610
  %6 = select i1 %5, i32 1, i32 2, !dbg !7610
  %7 = select i1 %4, i32 0, i32 %6, !dbg !7610
  call void @llvm.dbg.value(metadata i32 %7, metadata !7605, metadata !DIExpression()), !dbg !7606
  tail call void @uart_disable_flowcontrol(i32 noundef %7) #14, !dbg !7611
  br label %8, !dbg !7612

8:                                                ; preds = %1, %3
  %9 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !7606
  ret i32 %9, !dbg !7613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma_timeout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7618, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i32 %1, metadata !7619, metadata !DIExpression()), !dbg !7620
  %3 = tail call fastcc zeroext i1 @hal_uart_is_port_valid(i32 noundef %0) #16, !dbg !7621
  br i1 %3, label %4, label %8, !dbg !7623

4:                                                ; preds = %2
  %5 = icmp eq i32 %0, 0, !dbg !7624
  %6 = tail call fastcc i32 @hal_uart_translate_timeout(i32 noundef %1) #16, !dbg !7626
  %7 = select i1 %5, i32 15, i32 17
  tail call void @DMA_Vfifo_Set_timeout(i32 noundef %7, i32 noundef %6) #14, !dbg !7626
  br label %8, !dbg !7627

8:                                                ; preds = %4, %2
  %9 = phi i32 [ -4, %2 ], [ 0, %4 ], !dbg !7620
  ret i32 %9, !dbg !7627
}

; Function Attrs: optsize
declare dso_local void @DMA_Vfifo_Set_timeout(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_suspend_bit() local_unnamed_addr #9 !dbg !7628 {
  call void @llvm.dbg.value(metadata i8 5, metadata !7632, metadata !DIExpression()), !dbg !7633
  ret i8 5, !dbg !7634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spi_mode_command() local_unnamed_addr #9 !dbg !7635 {
  ret i8* getelementptr inbounds ([4 x i8], [4 x i8]* @cmdlist_switchspi_default, i32 0, i32 0), !dbg !7638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @customer_switch_spiq_mode_command() local_unnamed_addr #9 !dbg !7639 {
  ret i8* getelementptr inbounds ([9 x i8], [9 x i8]* @cmdlist_switchspiq_default, i32 0, i32 0), !dbg !7640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @customer_flash_read_SR2_comand() local_unnamed_addr #9 !dbg !7641 {
  call void @llvm.dbg.value(metadata i8 5, metadata !7643, metadata !DIExpression()), !dbg !7644
  ret i8 5, !dbg !7645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias %struct.flash_info_t* @customer_flash_register() local_unnamed_addr #9 !dbg !7646 {
  ret %struct.flash_info_t* null, !dbg !7649
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !7650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7652, metadata !DIExpression()), !dbg !7653
  %2 = trunc i32 %0 to i8, !dbg !7654
  tail call void @hal_uart_put_char(i32 noundef 0, i8 noundef zeroext %2) #14, !dbg !7655
  ret i32 %0, !dbg !7656
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #12 !dbg !7657 {
  tail call fastcc void @SystemClock_Config() #16, !dbg !7658
  tail call fastcc void @prvSetupHardware() #16, !dbg !7659
  tail call void asm sideeffect "cpsie i", "~{memory}"() #13, !dbg !7660, !srcloc !7663
  tail call void asm sideeffect "cpsie f", "~{memory}"() #13, !dbg !7664, !srcloc !7667
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0)) #14, !dbg !7668
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.102, i32 0, i32 0)) #14, !dbg !7669
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i32 0, i32 0)) #14, !dbg !7670
  tail call fastcc void @vTestTask() #16, !dbg !7671
  unreachable, !dbg !7672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !7673 {
  tail call void @top_xtal_init() #14, !dbg !7674
  ret void, !dbg !7675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !7676 {
  tail call fastcc void @plain_log_uart_init() #16, !dbg !7677
  ret void, !dbg !7678
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @vTestTask() unnamed_addr #12 !dbg !7679 {
  call void @llvm.dbg.value(metadata i32 3000, metadata !7681, metadata !DIExpression()), !dbg !7682
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.103, i32 0, i32 0)) #14, !dbg !7683
  br label %2, !dbg !7684

2:                                                ; preds = %2, %0
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.104, i32 0, i32 0)) #14, !dbg !7685
  %4 = tail call i32 @hal_sleep_manager_set_sleep_time(i32 noundef 3000) #14, !dbg !7687
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7688
  %6 = and i32 %5, -2, !dbg !7688
  store volatile i32 %6, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7688
  tail call void @hal_sleep_manager_enter_sleep_mode(i32 noundef 2) #14, !dbg !7689
  %7 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7690
  %8 = or i32 %7, 1, !dbg !7690
  store volatile i32 %8, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7690
  %9 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.105, i32 0, i32 0)) #14, !dbg !7691
  %10 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.106, i32 0, i32 0)) #14, !dbg !7692
  %11 = tail call i32 @hal_sleep_manager_set_sleep_time(i32 noundef 3000) #14, !dbg !7693
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7694
  %13 = and i32 %12, -2, !dbg !7694
  store volatile i32 %13, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7694
  tail call void @hal_sleep_manager_enter_sleep_mode(i32 noundef 3) #14, !dbg !7695
  %14 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7696
  %15 = or i32 %14, 1, !dbg !7696
  store volatile i32 %15, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7696
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.107, i32 0, i32 0)) #14, !dbg !7697
  br label %2, !dbg !7684, !llvm.loop !7698
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_set_sleep_time(i32 noundef) local_unnamed_addr #6

; Function Attrs: optsize
declare dso_local void @hal_sleep_manager_enter_sleep_mode(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !7700 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !7710
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #13, !dbg !7710
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !7702, metadata !DIExpression()), !dbg !7711
  %3 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 7) #14, !dbg !7712
  %4 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 7) #14, !dbg !7713
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 2, i8 noundef zeroext 7) #14, !dbg !7714
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 3, i8 noundef zeroext 7) #14, !dbg !7715
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !7716
  store i32 9, i32* %7, align 4, !dbg !7717
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !7718
  store i32 3, i32* %8, align 4, !dbg !7719
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !7720
  store i32 0, i32* %9, align 4, !dbg !7721
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !7722
  store i32 0, i32* %10, align 4, !dbg !7723
  %11 = call i32 @hal_uart_init(i32 noundef 0, %struct.hal_uart_config_t* noundef nonnull %1) #14, !dbg !7724
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #13, !dbg !7725
  ret void, !dbg !7725
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #5 !dbg !7726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7728, metadata !DIExpression()), !dbg !7730
  %2 = add i32 %0, -1, !dbg !7731
  %3 = icmp ugt i32 %2, 16777215, !dbg !7733
  br i1 %3, label %8, label %4, !dbg !7734

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7735
  call void @llvm.dbg.value(metadata i32 %5, metadata !7729, metadata !DIExpression()), !dbg !7730
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7736
  %7 = and i32 %6, -4, !dbg !7736
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7736
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !7737
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !7738
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !7739
  br label %8, !dbg !7740

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !7730
  ret i32 %9, !dbg !7741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #5 !dbg !7742 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !7743
  ret void, !dbg !7744
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #7 !dbg !7745 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !7746
  ret i32 %1, !dbg !7747
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #0 !dbg !7748 {
  %1 = tail call i32 @top_mcu_freq_get() #14, !dbg !7749
  store i32 %1, i32* @SystemCoreClock, align 4, !dbg !7750
  ret void, !dbg !7751
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #5 !dbg !7752 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7753
  %2 = or i32 %1, 15728640, !dbg !7753
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7753
  store volatile i32 536870912, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7754
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7755
  %4 = or i32 %3, 458752, !dbg !7755
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7755
  ret void, !dbg !7756
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #5 !dbg !7757 {
  store volatile i32 0, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7758
  store volatile i32 19, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7759
  store volatile i32 3, i32* inttoptr (i32 22216708 to i32*), align 4, !dbg !7760
  store volatile i32 268931328, i32* inttoptr (i32 22282240 to i32*), align 262144, !dbg !7761
  store volatile i32 269713408, i32* inttoptr (i32 22282304 to i32*), align 64, !dbg !7762
  store volatile i32 1, i32* inttoptr (i32 22216748 to i32*), align 4, !dbg !7763
  store volatile i32 781, i32* inttoptr (i32 22216704 to i32*), align 65536, !dbg !7764
  ret void, !dbg !7765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #9 !dbg !7766 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7768, metadata !DIExpression()), !dbg !7769
  ret i32 0, !dbg !7770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #9 !dbg !7771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7821, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !7822, metadata !DIExpression()), !dbg !7823
  ret i32 0, !dbg !7824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #9 !dbg !7825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7827, metadata !DIExpression()), !dbg !7828
  ret i32 1, !dbg !7829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !7830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7834, metadata !DIExpression()), !dbg !7837
  call void @llvm.dbg.value(metadata i32 %1, metadata !7835, metadata !DIExpression()), !dbg !7837
  call void @llvm.dbg.value(metadata i32 %2, metadata !7836, metadata !DIExpression()), !dbg !7837
  ret i32 0, !dbg !7838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #9 !dbg !7839 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7843, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i32 %1, metadata !7844, metadata !DIExpression()), !dbg !7846
  call void @llvm.dbg.value(metadata i32 %2, metadata !7845, metadata !DIExpression()), !dbg !7846
  ret i32 -1, !dbg !7847
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #9 !dbg !7848 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7852, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i8* %1, metadata !7853, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.value(metadata i32 %2, metadata !7854, metadata !DIExpression()), !dbg !7855
  ret i32 0, !dbg !7856
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !7857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7859, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i8* %1, metadata !7860, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i32 %2, metadata !7861, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i32 0, metadata !7862, metadata !DIExpression()), !dbg !7863
  %4 = icmp sgt i32 %2, 0, !dbg !7864
  br i1 %4, label %5, label %14, !dbg !7867

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7862, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.value(metadata i8* %7, metadata !7860, metadata !DIExpression()), !dbg !7863
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7868
  call void @llvm.dbg.value(metadata i8* %8, metadata !7860, metadata !DIExpression()), !dbg !7863
  %9 = load i8, i8* %7, align 1, !dbg !7870
  %10 = zext i8 %9 to i32, !dbg !7870
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #14, !dbg !7871
  %12 = add nuw nsw i32 %6, 1, !dbg !7872
  call void @llvm.dbg.value(metadata i32 %12, metadata !7862, metadata !DIExpression()), !dbg !7863
  %13 = icmp eq i32 %12, %2, !dbg !7864
  br i1 %13, label %14, label %5, !dbg !7867, !llvm.loop !7873

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !7875
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !874 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !1070, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.value(metadata i32 %1, metadata !1071, metadata !DIExpression()), !dbg !7876
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #13, !dbg !7877, !srcloc !7878
  call void @llvm.dbg.value(metadata i8* %3, metadata !1073, metadata !DIExpression()), !dbg !7876
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !7879
  %5 = icmp eq i8* %4, null, !dbg !7881
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !7882
  call void @llvm.dbg.value(metadata i8* %6, metadata !1072, metadata !DIExpression()), !dbg !7876
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !7883
  %8 = icmp ult i8* %3, %7, !dbg !7885
  %9 = xor i1 %8, true, !dbg !7886
  %10 = or i1 %5, %9, !dbg !7886
  br i1 %10, label %11, label %13, !dbg !7886

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !7887
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !7886
  br label %13, !dbg !7886

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !7887
  ret i8* %14, !dbg !7886
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @_exit(i32 noundef %0) local_unnamed_addr #12 !dbg !7888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7890, metadata !DIExpression()), !dbg !7891
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i32 0, i32 0)) #14, !dbg !7892
  br label %3, !dbg !7893

3:                                                ; preds = %1, %3
  br label %3, !dbg !7893, !llvm.loop !7894
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7896 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7900, metadata !DIExpression()), !dbg !7902
  call void @llvm.dbg.value(metadata i32 %1, metadata !7901, metadata !DIExpression()), !dbg !7902
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.115, i32 0, i32 0), i32 noundef %1) #14, !dbg !7903
  ret i32 -1, !dbg !7904
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_getpid() local_unnamed_addr #0 !dbg !7905 {
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.116, i32 0, i32 0)) #14, !dbg !7910
  ret i32 0, !dbg !7911
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree nosync nounwind willreturn }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nounwind }
attributes #14 = { nobuiltin nounwind optsize "no-builtins" }
attributes #15 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #16 = { nobuiltin optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !83, !1093, !164, !1102, !1183, !1228, !230, !247, !1262, !344, !356, !1265, !405, !488, !541, !1267, !633, !672, !788, !1338, !814, !1065, !1076}
!llvm.ident = !{!1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357, !1357}
!llvm.module.flags = !{!1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2, file: !3, line: 74, type: !69, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !50, globals: !63, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/flash_sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!4 = !{!5, !20, !28, !35, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 52, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/spi_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19}
!9 = !DIEnumerator(name: "SF_DRV_NOT_READY", value: -1)
!10 = !DIEnumerator(name: "SF_DRV_READY", value: 0)
!11 = !DIEnumerator(name: "SF_DRV_READING", value: 1)
!12 = !DIEnumerator(name: "SF_DRV_DIRECT_READING", value: 2)
!13 = !DIEnumerator(name: "SF_DRV_PROGRAMMING", value: 3)
!14 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE", value: 4)
!15 = !DIEnumerator(name: "SF_DRV_ERASE_WRITE_CRC", value: 5)
!16 = !DIEnumerator(name: "SF_DRV_SECTOR_4K_ERASING", value: 6)
!17 = !DIEnumerator(name: "SF_DRV_SECTOR_32K_ERASING", value: 7)
!18 = !DIEnumerator(name: "SF_DRV_SECTOR_64K_ERASING", value: 8)
!19 = !DIEnumerator(name: "SF_DRV_CHIP_ERASING", value: 9)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 387, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!24 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!25 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!26 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!27 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 666, baseType: !30, size: 32, elements: !31)
!29 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!30 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!33 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!34 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_BUS", value: 2)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 73, baseType: !30, size: 32, elements: !36)
!36 = !{!37, !38, !39, !40, !41, !42, !43}
!37 = !DIEnumerator(name: "SF_TYPE_NONE", value: 0)
!38 = !DIEnumerator(name: "SF_TYPE_MXIC", value: 194)
!39 = !DIEnumerator(name: "SF_TYPE_WINBOND", value: 239)
!40 = !DIEnumerator(name: "SF_TYPE_GD", value: 200)
!41 = !DIEnumerator(name: "SF_TYPE_MICRON", value: 32)
!42 = !DIEnumerator(name: "SF_TYPE_CUSTOMER", value: 255)
!43 = !DIEnumerator(name: "SF_TYPE_COUNT", value: 65535)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 123, baseType: !30, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!48 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!49 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!50 = !{!51, !52, !59}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 32)
!53 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !54)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !55, line: 24, baseType: !56)
!55 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !57, line: 43, baseType: !58)
!57 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!58 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !55, line: 48, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !57, line: 79, baseType: !30)
!63 = !{!64, !0, !67, !70, !72, !74, !76, !78}
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(name: "sf_drvier_status", scope: !2, file: !3, line: 72, type: !66, isLocal: false, isDefinition: true)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_DRV_STATE", file: !6, line: 64, baseType: !5)
!67 = !DIGlobalVariableExpression(var: !68, expr: !DIExpression())
!68 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2, file: !3, line: 75, type: !69, isLocal: false, isDefinition: true)
!69 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!70 = !DIGlobalVariableExpression(var: !71, expr: !DIExpression())
!71 = distinct !DIGlobalVariable(name: "gucFlashSFCMode", scope: !2, file: !3, line: 77, type: !61, isLocal: false, isDefinition: true)
!72 = !DIGlobalVariableExpression(var: !73, expr: !DIExpression())
!73 = distinct !DIGlobalVariable(name: "suspend_time", scope: !2, file: !3, line: 82, type: !61, isLocal: false, isDefinition: true)
!74 = !DIGlobalVariableExpression(var: !75, expr: !DIExpression())
!75 = distinct !DIGlobalVariable(name: "resume_suspend_on_ready", scope: !2, file: !3, line: 83, type: !61, isLocal: false, isDefinition: true)
!76 = !DIGlobalVariableExpression(var: !77, expr: !DIExpression())
!77 = distinct !DIGlobalVariable(name: "resume_suspend_on_checkready", scope: !2, file: !3, line: 84, type: !61, isLocal: false, isDefinition: true)
!78 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression())
!79 = distinct !DIGlobalVariable(name: "sf_Mutex", scope: !2, file: !3, line: 78, type: !7, isLocal: true, isDefinition: true)
!80 = !DIGlobalVariableExpression(var: !79, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!81 = !DIGlobalVariableExpression(var: !82, expr: !DIExpression())
!82 = distinct !DIGlobalVariable(name: "g_u4ClkCnt1ms", scope: !83, file: !84, line: 71, type: !158, isLocal: false, isDefinition: true)
!83 = distinct !DICompileUnit(language: DW_LANG_C99, file: !84, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !85, retainedTypes: !136, globals: !141, splitDebugInlining: false, nameTableKind: None)
!84 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!85 = !{!86, !91}
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 121, baseType: !30, size: 32, elements: !88)
!87 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/type_def.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!88 = !{!89, !90}
!89 = !DIEnumerator(name: "KAL_FALSE", value: 0)
!90 = !DIEnumerator(name: "KAL_TRUE", value: 1)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !92, line: 47, baseType: !7, size: 32, elements: !93)
!92 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!93 = !{!94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!94 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!95 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!96 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!97 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!98 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!99 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!100 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!101 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!102 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!103 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!104 = !DIEnumerator(name: "CM4_UART1_IRQ", value: 0)
!105 = !DIEnumerator(name: "CM4_DMA_IRQ", value: 1)
!106 = !DIEnumerator(name: "CM4_HIF_IRQ", value: 2)
!107 = !DIEnumerator(name: "CM4_I2C1_IRQ", value: 3)
!108 = !DIEnumerator(name: "CM4_I2C2_IRQ", value: 4)
!109 = !DIEnumerator(name: "CM4_UART2_IRQ", value: 5)
!110 = !DIEnumerator(name: "CM4_MTK_CRYPTO_IRQ", value: 6)
!111 = !DIEnumerator(name: "CM4_SF_IRQ", value: 7)
!112 = !DIEnumerator(name: "CM4_EINT_IRQ", value: 8)
!113 = !DIEnumerator(name: "CM4_BTIF_IRQ", value: 9)
!114 = !DIEnumerator(name: "CM4_WDT_IRQ", value: 10)
!115 = !DIEnumerator(name: "CM4_AHB_MON_IRQ", value: 11)
!116 = !DIEnumerator(name: "CM4_SPI_SLAVE_IRQ", value: 12)
!117 = !DIEnumerator(name: "CM4_N9_WDT_IRQ", value: 13)
!118 = !DIEnumerator(name: "CM4_ADC_IRQ", value: 14)
!119 = !DIEnumerator(name: "CM4_IRDA_TX_IRQ", value: 15)
!120 = !DIEnumerator(name: "CM4_IRDA_RX_IRQ", value: 16)
!121 = !DIEnumerator(name: "CM4_USB_VBUS_ON_IRQ", value: 17)
!122 = !DIEnumerator(name: "CM4_USB_VBUS_OFF_IRQ", value: 18)
!123 = !DIEnumerator(name: "CM4_SPIS_CS_WAKEUP_IRQ", value: 19)
!124 = !DIEnumerator(name: "CM4_GPT3_IRQ", value: 20)
!125 = !DIEnumerator(name: "CM4_IRQ21_IRQ", value: 21)
!126 = !DIEnumerator(name: "CM4_AUDIO_IRQ", value: 22)
!127 = !DIEnumerator(name: "CM4_HIF_DMA_IRQ", value: 23)
!128 = !DIEnumerator(name: "CM4_GPT_IRQ", value: 24)
!129 = !DIEnumerator(name: "CM4_ADC_COMP_IRQ", value: 25)
!130 = !DIEnumerator(name: "CM4_AUDIO_WAKE_IRQ", value: 26)
!131 = !DIEnumerator(name: "CM4_SPIM_IRQ", value: 27)
!132 = !DIEnumerator(name: "CM4_USB_IRQ", value: 28)
!133 = !DIEnumerator(name: "CM4_UDMA_IRQ", value: 29)
!134 = !DIEnumerator(name: "CM4_TRNG_IRQ", value: 30)
!135 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 96)
!136 = !{!137, !140}
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !139)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint32", file: !87, line: 116, baseType: !30)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !92, line: 95, baseType: !91)
!141 = !{!81, !142}
!142 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression())
!143 = distinct !DIGlobalVariable(name: "GPTTimer", scope: !83, file: !84, line: 67, type: !144, isLocal: true, isDefinition: true)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPTStruct", file: !145, line: 111, baseType: !146)
!145 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 109, size: 96, elements: !147)
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_FUNC", scope: !146, file: !145, line: 110, baseType: !149, size: 96)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_func", file: !145, line: 106, baseType: !150)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !145, line: 102, size: 96, elements: !151)
!151 = !{!152, !156, !157}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "gpt0_func", scope: !150, file: !145, line: 103, baseType: !153, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 32)
!154 = !DISubroutineType(types: !155)
!155 = !{null}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "gpt1_func", scope: !150, file: !145, line: 104, baseType: !153, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "gpt3_func", scope: !150, file: !145, line: 105, baseType: !153, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT32", file: !87, line: 62, baseType: !30)
!160 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 0, 32))
!161 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression(DW_OP_LLVM_fragment, 32, 32))
!162 = !DIGlobalVariableExpression(var: !163, expr: !DIExpression())
!163 = distinct !DIGlobalVariable(name: "ptr_lp_connsys_get_own_enable_int", scope: !164, file: !165, line: 86, type: !214, isLocal: false, isDefinition: true)
!164 = distinct !DICompileUnit(language: DW_LANG_C99, file: !165, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !166, retainedTypes: !175, globals: !211, splitDebugInlining: false, nameTableKind: None)
!165 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/hal_lp.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!166 = !{!167, !91}
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 75, baseType: !30, size: 32, elements: !169)
!168 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_lp.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!169 = !{!170, !171, !172, !173, !174}
!170 = !DIEnumerator(name: "LHAL_LP_CM4_HCLK_XTAL", value: 0)
!171 = !DIEnumerator(name: "LHAL_LP_CM4_HCLK_F32K", value: 1)
!172 = !DIEnumerator(name: "LHAL_LP_CM4_HCLK_PLL1_64M", value: 2)
!173 = !DIEnumerator(name: "LHAL_LP_CM4_HCLK_PLL_CK", value: 3)
!174 = !DIEnumerator(name: "LHAL_LP_CM4_HCLK_NUM", value: 4)
!175 = !{!51, !176, !159, !208, !210}
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "P_IOT_CM4_RGU_MEM_CTRL_TypeDef", file: !177, line: 951, baseType: !178)
!177 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/mt7687_cm4_hw_memmap.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IOT_CM4_RGU_MEM_CTRL_TypeDef", file: !177, line: 923, size: 864, elements: !180)
!180 = !{!181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_FPGA_RGU_DUMMY_CR", scope: !179, file: !177, line: 924, baseType: !158, size: 32)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_POS_S_EN", scope: !179, file: !177, line: 925, baseType: !158, size: 32, offset: 32)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_PWR_ACK_ST", scope: !179, file: !177, line: 926, baseType: !158, size: 32, offset: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM_DLY_CTL", scope: !179, file: !177, line: 927, baseType: !158, size: 32, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_RESV0", scope: !179, file: !177, line: 928, baseType: !158, size: 32, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM0_PDN_EN", scope: !179, file: !177, line: 929, baseType: !158, size: 32, offset: 160)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM1_PDN_EN", scope: !179, file: !177, line: 930, baseType: !158, size: 32, offset: 192)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM0_SLP_EN", scope: !179, file: !177, line: 931, baseType: !158, size: 32, offset: 224)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM1_SLP_EN", scope: !179, file: !177, line: 932, baseType: !158, size: 32, offset: 256)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM0_PDN", scope: !179, file: !177, line: 933, baseType: !158, size: 32, offset: 288)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM1_PDN", scope: !179, file: !177, line: 934, baseType: !158, size: 32, offset: 320)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM0_SLP", scope: !179, file: !177, line: 935, baseType: !158, size: 32, offset: 352)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM1_SLP", scope: !179, file: !177, line: 936, baseType: !158, size: 32, offset: 384)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM0_ISO", scope: !179, file: !177, line: 937, baseType: !158, size: 32, offset: 416)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM1_ISO", scope: !179, file: !177, line: 938, baseType: !158, size: 32, offset: 448)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_RESV1", scope: !179, file: !177, line: 939, baseType: !158, size: 32, offset: 480)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_RESV2", scope: !179, file: !177, line: 940, baseType: !158, size: 32, offset: 512)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_ROM_PD_EN", scope: !179, file: !177, line: 941, baseType: !158, size: 32, offset: 544)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_ROM_PD", scope: !179, file: !177, line: 942, baseType: !158, size: 32, offset: 576)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_ROM_RSTB", scope: !179, file: !177, line: 943, baseType: !158, size: 32, offset: 608)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_RESV3", scope: !179, file: !177, line: 944, baseType: !158, size: 32, offset: 640)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM0_PDN_STAT", scope: !179, file: !177, line: 945, baseType: !158, size: 32, offset: 672)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM1_PDN_STAT", scope: !179, file: !177, line: 946, baseType: !158, size: 32, offset: 704)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM0_SLP_STAT", scope: !179, file: !177, line: 947, baseType: !158, size: 32, offset: 736)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM1_SLP_STAT", scope: !179, file: !177, line: 948, baseType: !158, size: 32, offset: 768)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM0_ISO_STAT", scope: !179, file: !177, line: 949, baseType: !158, size: 32, offset: 800)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "CM4_MEM1_ISO_STAT", scope: !179, file: !177, line: 950, baseType: !158, size: 32, offset: 832)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 32)
!209 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !30)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !92, line: 97, baseType: !140)
!211 = !{!162, !212, !220, !225}
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "ptr_lp_connsys_give_n9_own", scope: !164, file: !165, line: 87, type: !214, isLocal: false, isDefinition: true)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 32)
!215 = !DISubroutineType(types: !216)
!216 = !{!217}
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !55, line: 20, baseType: !218)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !57, line: 41, baseType: !219)
!219 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!220 = !DIGlobalVariableExpression(var: !221, expr: !DIExpression())
!221 = distinct !DIGlobalVariable(name: "ptr_connsys_get_ownership", scope: !164, file: !165, line: 88, type: !222, isLocal: false, isDefinition: true)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!223 = !DISubroutineType(types: !224)
!224 = !{!54}
!225 = !DIGlobalVariableExpression(var: !226, expr: !DIExpression())
!226 = distinct !DIGlobalVariable(name: "hal_lp_wic_wakeup", scope: !164, file: !165, line: 71, type: !54, isLocal: true, isDefinition: true)
!227 = !DIGlobalVariableExpression(var: !226, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!228 = !DIGlobalVariableExpression(var: !229, expr: !DIExpression())
!229 = distinct !DIGlobalVariable(name: "g_sfc_security_enable", scope: !230, file: !231, line: 58, type: !30, isLocal: false, isDefinition: true)
!230 = distinct !DICompileUnit(language: DW_LANG_C99, file: !231, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !232, retainedTypes: !239, globals: !244, splitDebugInlining: false, nameTableKind: None)
!231 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/sfc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!232 = !{!233}
!233 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 45, baseType: !30, size: 32, elements: !234)
!234 = !{!235, !236, !237, !238}
!235 = !DIEnumerator(name: "SF_UNDEF", value: 0)
!236 = !DIEnumerator(name: "SPI", value: 1)
!237 = !DIEnumerator(name: "SPIQ", value: 2)
!238 = !DIEnumerator(name: "QPI", value: 3)
!239 = !{!137, !240, !30, !208, !241, !242}
!240 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !58)
!244 = !{!228}
!245 = !DIGlobalVariableExpression(var: !246, expr: !DIExpression())
!246 = distinct !DIGlobalVariable(name: "gSFC_max_data_size", scope: !247, file: !248, line: 67, type: !30, isLocal: false, isDefinition: true)
!247 = distinct !DICompileUnit(language: DW_LANG_C99, file: !248, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !249, retainedTypes: !256, globals: !275, splitDebugInlining: false, nameTableKind: None)
!248 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/spi_flash.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!249 = !{!35, !5, !233, !250}
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 66, baseType: !7, size: 32, elements: !251)
!251 = !{!252, !253, !254, !255}
!252 = !DIEnumerator(name: "FLASH_NOT_READY", value: -1)
!253 = !DIEnumerator(name: "FLASH_READY", value: 0)
!254 = !DIEnumerator(name: "FLASH_PROGRAMMING", value: 1)
!255 = !DIEnumerator(name: "FLASH_ERASING", value: 2)
!256 = !{!257, !259, !260, !30, !51, !274, !61, !139}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !58)
!259 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !262)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chip_info", file: !6, line: 137, size: 192, elements: !263)
!263 = !{!264, !267, !268, !269, !270, !271, !272, !273}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !262, file: !6, line: 138, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 32)
!266 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !262, file: !6, line: 139, baseType: !58, size: 8, offset: 32)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !262, file: !6, line: 140, baseType: !259, size: 32, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !262, file: !6, line: 141, baseType: !259, size: 32, offset: 96)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !262, file: !6, line: 142, baseType: !30, size: 32, offset: 128)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !262, file: !6, line: 144, baseType: !58, size: 8, offset: 160)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !262, file: !6, line: 145, baseType: !58, size: 8, offset: 168)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !262, file: !6, line: 146, baseType: !58, size: 8, offset: 176)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 32)
!275 = !{!245, !276, !281, !286, !291, !294, !296, !301, !303, !305, !307, !309, !311, !313, !315, !317, !319, !321, !323, !328, !330, !332, !334, !337}
!276 = !DIGlobalVariableExpression(var: !277, expr: !DIExpression())
!277 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_winbond", scope: !247, file: !248, line: 70, type: !278, isLocal: false, isDefinition: true)
!278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 96, elements: !279)
!279 = !{!280}
!280 = !DISubrange(count: 12)
!281 = !DIGlobalVariableExpression(var: !282, expr: !DIExpression())
!282 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_winbond", scope: !247, file: !248, line: 73, type: !283, isLocal: false, isDefinition: true)
!283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 32, elements: !284)
!284 = !{!285}
!285 = !DISubrange(count: 4)
!286 = !DIGlobalVariableExpression(var: !287, expr: !DIExpression())
!287 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_winbond", scope: !247, file: !248, line: 76, type: !288, isLocal: false, isDefinition: true)
!288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 72, elements: !289)
!289 = !{!290}
!290 = !DISubrange(count: 9)
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(name: "cmdlist_suspend_winbond", scope: !247, file: !248, line: 79, type: !293, isLocal: false, isDefinition: true)
!293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32, elements: !284)
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "cmdlist_resume_winbond", scope: !247, file: !248, line: 82, type: !293, isLocal: false, isDefinition: true)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_mxic", scope: !247, file: !248, line: 87, type: !298, isLocal: false, isDefinition: true)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 64, elements: !299)
!299 = !{!300}
!300 = !DISubrange(count: 8)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_mxic", scope: !247, file: !248, line: 91, type: !298, isLocal: false, isDefinition: true)
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_mxic", scope: !247, file: !248, line: 95, type: !298, isLocal: false, isDefinition: true)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd", scope: !247, file: !248, line: 100, type: !288, isLocal: false, isDefinition: true)
!307 = !DIGlobalVariableExpression(var: !308, expr: !DIExpression())
!308 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd", scope: !247, file: !248, line: 104, type: !288, isLocal: false, isDefinition: true)
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression())
!310 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd", scope: !247, file: !248, line: 108, type: !288, isLocal: false, isDefinition: true)
!311 = !DIGlobalVariableExpression(var: !312, expr: !DIExpression())
!312 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_gd25q32c", scope: !247, file: !248, line: 112, type: !298, isLocal: false, isDefinition: true)
!313 = !DIGlobalVariableExpression(var: !314, expr: !DIExpression())
!314 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_gd25q32c", scope: !247, file: !248, line: 115, type: !298, isLocal: false, isDefinition: true)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_gd25q32c", scope: !247, file: !248, line: 119, type: !298, isLocal: false, isDefinition: true)
!317 = !DIGlobalVariableExpression(var: !318, expr: !DIExpression())
!318 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_micron", scope: !247, file: !248, line: 123, type: !298, isLocal: false, isDefinition: true)
!319 = !DIGlobalVariableExpression(var: !320, expr: !DIExpression())
!320 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_micron", scope: !247, file: !248, line: 126, type: !298, isLocal: false, isDefinition: true)
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_micron", scope: !247, file: !248, line: 130, type: !298, isLocal: false, isDefinition: true)
!323 = !DIGlobalVariableExpression(var: !324, expr: !DIExpression())
!324 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_spimode", scope: !247, file: !248, line: 135, type: !325, isLocal: false, isDefinition: true)
!325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 56, elements: !326)
!326 = !{!327}
!327 = !DISubrange(count: 7)
!328 = !DIGlobalVariableExpression(var: !329, expr: !DIExpression())
!329 = distinct !DIGlobalVariable(name: "cmdlist_flash_reset_qpimode", scope: !247, file: !248, line: 138, type: !325, isLocal: false, isDefinition: true)
!330 = !DIGlobalVariableExpression(var: !331, expr: !DIExpression())
!331 = distinct !DIGlobalVariable(name: "spi_chip_info", scope: !247, file: !248, line: 142, type: !260, isLocal: false, isDefinition: true)
!332 = !DIGlobalVariableExpression(var: !333, expr: !DIExpression())
!333 = distinct !DIGlobalVariable(name: "gd_write_sr2_1", scope: !247, file: !248, line: 161, type: !7, isLocal: false, isDefinition: true)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "support_flash_id", scope: !247, file: !248, line: 162, type: !336, isLocal: false, isDefinition: true)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_TYPT", file: !6, line: 81, baseType: !35)
!337 = !DIGlobalVariableExpression(var: !338, expr: !DIExpression())
!338 = distinct !DIGlobalVariable(name: "chips_data", scope: !247, file: !248, line: 144, type: !339, isLocal: true, isDefinition: true)
!339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 2496, elements: !340)
!340 = !{!341}
!341 = !DISubrange(count: 13)
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "gXtalFreq", scope: !344, file: !345, line: 43, type: !61, isLocal: true, isDefinition: true)
!344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !345, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !346, globals: !351, splitDebugInlining: false, nameTableKind: None)
!345 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/top.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!346 = !{!208, !159, !59, !347, !348, !350}
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 32)
!349 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "u_int32", file: !87, line: 133, baseType: !30)
!351 = !{!342, !352}
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "gCpuFrequency", scope: !344, file: !345, line: 44, type: !61, isLocal: true, isDefinition: true)
!354 = !DIGlobalVariableExpression(var: !355, expr: !DIExpression())
!355 = distinct !DIGlobalVariable(name: "gUartClkFreq", scope: !356, file: !357, line: 54, type: !61, isLocal: false, isDefinition: true)
!356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !357, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !358, retainedTypes: !382, globals: !390, splitDebugInlining: false, nameTableKind: None)
!357 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!358 = !{!91, !359, !365}
!359 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 71, baseType: !30, size: 32, elements: !361)
!360 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!361 = !{!362, !363, !364}
!362 = !DIEnumerator(name: "UART_PORT0", value: 0)
!363 = !DIEnumerator(name: "UART_PORT1", value: 1)
!364 = !DIEnumerator(name: "UART_MAX_PORT", value: 2)
!365 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !366, line: 129, baseType: !30, size: 32, elements: !367)
!366 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/dma_sw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!367 = !{!368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381}
!368 = !DIEnumerator(name: "VDMA_I2S_TX_CH", value: 12)
!369 = !DIEnumerator(name: "VDMA_I2S_RX_CH", value: 13)
!370 = !DIEnumerator(name: "VDMA_UART1TX_CH", value: 14)
!371 = !DIEnumerator(name: "VDMA_UART1RX_CH", value: 15)
!372 = !DIEnumerator(name: "VDMA_UART2TX_CH", value: 16)
!373 = !DIEnumerator(name: "VDMA_UART2RX_CH", value: 17)
!374 = !DIEnumerator(name: "VDMA_BTIF_TX_CH", value: 18)
!375 = !DIEnumerator(name: "VDMA_BTIF_RX_CH", value: 19)
!376 = !DIEnumerator(name: "VDMA_USB_EP2O_CH", value: 20)
!377 = !DIEnumerator(name: "VDMA_USB_EP3I_CH", value: 21)
!378 = !DIEnumerator(name: "VDMA_USB_EP3O_CH", value: 22)
!379 = !DIEnumerator(name: "VDMA_USB_EP4I_CH", value: 23)
!380 = !DIEnumerator(name: "VDMA_USB_EP4O_CH", value: 24)
!381 = !DIEnumerator(name: "VDMA_ADC_RX_CH", value: 25)
!382 = !{!208, !61, !383, !385, !387, !388, !159}
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !385)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_uint16", file: !87, line: 113, baseType: !386)
!386 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT8", file: !87, line: 59, baseType: !58)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !387)
!390 = !{!391, !399, !354}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !356, file: !357, line: 57, type: !393, isLocal: false, isDefinition: true)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 64, elements: !397)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !395)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 32)
!396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !266)
!397 = !{!398}
!398 = !DISubrange(count: 2)
!399 = !DIGlobalVariableExpression(var: !400, expr: !DIExpression())
!400 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !356, file: !357, line: 58, type: !401, isLocal: false, isDefinition: true)
!401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 64, elements: !397)
!402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !210)
!403 = !DIGlobalVariableExpression(var: !404, expr: !DIExpression())
!404 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !405, file: !406, line: 51, type: !485, isLocal: false, isDefinition: true)
!405 = distinct !DICompileUnit(language: DW_LANG_C99, file: !406, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !407, retainedTypes: !454, globals: !484, splitDebugInlining: false, nameTableKind: None)
!406 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!407 = !{!408, !419, !438, !445}
!408 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !409, line: 163, baseType: !7, size: 32, elements: !410)
!409 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!410 = !{!411, !412, !413, !414, !415, !416, !417, !418}
!411 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!412 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!413 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!414 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!415 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!416 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!417 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!418 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!419 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !409, line: 186, baseType: !30, size: 32, elements: !420)
!420 = !{!421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437}
!421 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!422 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!423 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!424 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!425 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!426 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!427 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!428 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!429 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!430 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!431 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!432 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!433 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!434 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!435 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!436 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!437 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!438 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !409, line: 176, baseType: !30, size: 32, elements: !439)
!439 = !{!440, !441, !442, !443, !444}
!440 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!441 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!442 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!443 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!444 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!445 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !446, line: 99, baseType: !30, size: 32, elements: !447)
!446 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!447 = !{!448, !449, !450, !451, !452, !453}
!448 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!449 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!450 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!451 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!452 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!453 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!454 = !{!455, !51}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !457, line: 72, baseType: !458)
!457 = !DIFile(filename: "../../../../../driver/chip/mt7687/inc/hal_cache_hw.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 56, size: 525312, elements: !459)
!459 = !{!460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !474, !475, !479, !483}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !458, file: !457, line: 57, baseType: !60, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !458, file: !457, line: 58, baseType: !60, size: 32, offset: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !458, file: !457, line: 59, baseType: !60, size: 32, offset: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !458, file: !457, line: 60, baseType: !60, size: 32, offset: 96)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !458, file: !457, line: 61, baseType: !60, size: 32, offset: 128)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !458, file: !457, line: 62, baseType: !60, size: 32, offset: 160)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !458, file: !457, line: 63, baseType: !60, size: 32, offset: 192)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !458, file: !457, line: 64, baseType: !60, size: 32, offset: 224)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !458, file: !457, line: 65, baseType: !60, size: 32, offset: 256)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !458, file: !457, line: 66, baseType: !60, size: 32, offset: 288)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !458, file: !457, line: 67, baseType: !471, size: 32, offset: 320)
!471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !472)
!472 = !{!473}
!473 = !DISubrange(count: 1)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !458, file: !457, line: 68, baseType: !60, size: 32, offset: 352)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !458, file: !457, line: 69, baseType: !476, size: 523904, offset: 384)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !477)
!477 = !{!478}
!478 = !DISubrange(count: 16372)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !458, file: !457, line: 70, baseType: !480, size: 512, offset: 524288)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !481)
!481 = !{!482}
!482 = !DISubrange(count: 16)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !458, file: !457, line: 71, baseType: !480, size: 512, offset: 524800)
!484 = !{!403}
!485 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !69)
!486 = !DIGlobalVariableExpression(var: !487, expr: !DIExpression())
!487 = distinct !DIGlobalVariable(name: "g_cache_con", scope: !488, file: !489, line: 48, type: !523, isLocal: false, isDefinition: true)
!488 = distinct !DICompileUnit(language: DW_LANG_C99, file: !489, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !490, splitDebugInlining: false, nameTableKind: None)
!489 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_cache_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!490 = !{!486, !491, !494}
!491 = !DIGlobalVariableExpression(var: !492, expr: !DIExpression())
!492 = distinct !DIGlobalVariable(name: "g_cache_region_en", scope: !488, file: !489, line: 49, type: !493, isLocal: false, isDefinition: true)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGION_EN_Type", file: !446, line: 66, baseType: !61)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "g_cache_entry", scope: !488, file: !489, line: 50, type: !496, isLocal: false, isDefinition: true)
!496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !497, size: 1024, elements: !481)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_Type", file: !446, line: 90, baseType: !498)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !446, line: 87, size: 64, elements: !499)
!499 = !{!500, !513}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "cache_entry_n", scope: !498, file: !446, line: 88, baseType: !501, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_ENTRY_N_Type", file: !446, line: 77, baseType: !502)
!502 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !446, line: 68, size: 32, elements: !503)
!503 = !{!504, !512}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !502, file: !446, line: 75, baseType: !505, size: 32)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !502, file: !446, line: 69, size: 32, elements: !506)
!506 = !{!507, !508, !509, !510, !511}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !505, file: !446, line: 70, baseType: !61, size: 5, flags: DIFlagBitField, extraData: i64 0)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "ATTR", scope: !505, file: !446, line: 71, baseType: !61, size: 3, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "C", scope: !505, file: !446, line: 72, baseType: !61, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !505, file: !446, line: 73, baseType: !61, size: 3, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !505, file: !446, line: 74, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !502, file: !446, line: 76, baseType: !61, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "cache_end_entry_n", scope: !498, file: !446, line: 89, baseType: !514, size: 32, offset: 32)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_END_ENTRY_N_Type", file: !446, line: 85, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !446, line: 79, size: 32, elements: !516)
!516 = !{!517, !522}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !515, file: !446, line: 83, baseType: !518, size: 32)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !515, file: !446, line: 80, size: 32, elements: !519)
!519 = !{!520, !521}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !518, file: !446, line: 81, baseType: !61, size: 12, flags: DIFlagBitField, extraData: i64 0)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "BASEADDR", scope: !518, file: !446, line: 82, baseType: !61, size: 20, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !515, file: !446, line: 84, baseType: !61, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_CON_Type", file: !446, line: 64, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !446, line: 51, size: 32, elements: !525)
!525 = !{!526, !538}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !524, file: !446, line: 62, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !524, file: !446, line: 52, size: 32, elements: !528)
!528 = !{!529, !530, !531, !532, !533, !534, !535, !536, !537}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "MCEN", scope: !527, file: !446, line: 53, baseType: !61, size: 1, flags: DIFlagBitField, extraData: i64 0)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "MPEN", scope: !527, file: !446, line: 54, baseType: !61, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN0", scope: !527, file: !446, line: 55, baseType: !61, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "CNTEN1", scope: !527, file: !446, line: 56, baseType: !61, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "MPDEFEN", scope: !527, file: !446, line: 57, baseType: !61, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved0", scope: !527, file: !446, line: 58, baseType: !61, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "MDRF", scope: !527, file: !446, line: 59, baseType: !61, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "CACHESIZE", scope: !527, file: !446, line: 60, baseType: !61, size: 2, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "_reserved1", scope: !527, file: !446, line: 61, baseType: !61, size: 22, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !524, file: !446, line: 63, baseType: !61, size: 32)
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !541, file: !542, line: 53, type: !620, isLocal: false, isDefinition: true)
!541 = distinct !DICompileUnit(language: DW_LANG_C99, file: !542, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !543, retainedTypes: !552, globals: !619, splitDebugInlining: false, nameTableKind: None)
!542 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!543 = !{!544, !91}
!544 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !545, line: 152, baseType: !7, size: 32, elements: !546)
!545 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!546 = !{!547, !548, !549, !550, !551}
!547 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!548 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!549 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!550 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!551 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!552 = !{!210, !51, !61, !553, !555, !586}
!553 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !55, line: 44, baseType: !554)
!554 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !57, line: 77, baseType: !7)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !557, line: 378, baseType: !558)
!557 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 363, size: 28704, elements: !559)
!559 = !{!560, !562, !566, !567, !568, !569, !570, !571, !572, !573, !577, !581, !585}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !558, file: !557, line: 365, baseType: !561, size: 256)
!561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !299)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !558, file: !557, line: 366, baseType: !563, size: 768, offset: 256)
!563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !564)
!564 = !{!565}
!565 = !DISubrange(count: 24)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !558, file: !557, line: 367, baseType: !561, size: 256, offset: 1024)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !558, file: !557, line: 368, baseType: !563, size: 768, offset: 1280)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !558, file: !557, line: 369, baseType: !561, size: 256, offset: 2048)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !558, file: !557, line: 370, baseType: !563, size: 768, offset: 2304)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !558, file: !557, line: 371, baseType: !561, size: 256, offset: 3072)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !558, file: !557, line: 372, baseType: !563, size: 768, offset: 3328)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !558, file: !557, line: 373, baseType: !561, size: 256, offset: 4096)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !558, file: !557, line: 374, baseType: !574, size: 1792, offset: 4352)
!574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !575)
!575 = !{!576}
!576 = !DISubrange(count: 56)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !558, file: !557, line: 375, baseType: !578, size: 1920, offset: 6144)
!578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 1920, elements: !579)
!579 = !{!580}
!580 = !DISubrange(count: 240)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !558, file: !557, line: 376, baseType: !582, size: 20608, offset: 8064)
!582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !583)
!583 = !{!584}
!584 = !DISubrange(count: 644)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !558, file: !557, line: 377, baseType: !60, size: 32, offset: 28672)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !557, line: 418, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 395, size: 1120, elements: !589)
!589 = !{!590, !592, !593, !594, !595, !596, !597, !599, !600, !601, !602, !603, !604, !605, !606, !608, !609, !610, !612, !616, !618}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !588, file: !557, line: 397, baseType: !591, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !588, file: !557, line: 398, baseType: !60, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !588, file: !557, line: 399, baseType: !60, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !588, file: !557, line: 400, baseType: !60, size: 32, offset: 96)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !588, file: !557, line: 401, baseType: !60, size: 32, offset: 128)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !588, file: !557, line: 402, baseType: !60, size: 32, offset: 160)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !588, file: !557, line: 403, baseType: !598, size: 96, offset: 192)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !53, size: 96, elements: !279)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !588, file: !557, line: 404, baseType: !60, size: 32, offset: 288)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !588, file: !557, line: 405, baseType: !60, size: 32, offset: 320)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !588, file: !557, line: 406, baseType: !60, size: 32, offset: 352)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !588, file: !557, line: 407, baseType: !60, size: 32, offset: 384)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !588, file: !557, line: 408, baseType: !60, size: 32, offset: 416)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !588, file: !557, line: 409, baseType: !60, size: 32, offset: 448)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !588, file: !557, line: 410, baseType: !60, size: 32, offset: 480)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !588, file: !557, line: 411, baseType: !607, size: 64, offset: 512)
!607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 64, elements: !397)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !588, file: !557, line: 412, baseType: !591, size: 32, offset: 576)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !588, file: !557, line: 413, baseType: !591, size: 32, offset: 608)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !588, file: !557, line: 414, baseType: !611, size: 128, offset: 640)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 128, elements: !284)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !588, file: !557, line: 415, baseType: !613, size: 160, offset: 768)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 160, elements: !614)
!614 = !{!615}
!615 = !DISubrange(count: 5)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !588, file: !557, line: 416, baseType: !617, size: 160, offset: 928)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !614)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !588, file: !557, line: 417, baseType: !60, size: 32, offset: 1088)
!619 = !{!539}
!620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !621, size: 6144, elements: !629)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !542, line: 50, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !542, line: 47, size: 64, elements: !623)
!623 = !{!624, !628}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !622, file: !542, line: 48, baseType: !625, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!626 = !DISubroutineType(types: !627)
!627 = !{null, !210}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !622, file: !542, line: 49, baseType: !61, size: 32, offset: 32)
!629 = !{!630}
!630 = !DISubrange(count: 96)
!631 = !DIGlobalVariableExpression(var: !632, expr: !DIExpression())
!632 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !633, file: !634, line: 61, type: !653, isLocal: true, isDefinition: true)
!633 = distinct !DICompileUnit(language: DW_LANG_C99, file: !634, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !635, retainedTypes: !651, globals: !652, splitDebugInlining: false, nameTableKind: None)
!634 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!635 = !{!20, !636, !643, !28, !647}
!636 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 657, baseType: !30, size: 32, elements: !637)
!637 = !{!638, !639, !640, !641, !642}
!638 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!639 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!640 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!641 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!642 = !DIEnumerator(name: "HAL_GPT_MAX", value: 5)
!643 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 397, baseType: !30, size: 32, elements: !644)
!644 = !{!645, !646}
!645 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!646 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!647 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !21, line: 380, baseType: !30, size: 32, elements: !648)
!648 = !{!649, !650}
!649 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!650 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!651 = !{!51, !61}
!652 = !{!631}
!653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !654, size: 640, elements: !614)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_context_t", file: !634, line: 55, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !634, line: 51, size: 128, elements: !656)
!656 = !{!657, !659, !669}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !655, file: !634, line: 52, baseType: !658, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !21, line: 400, baseType: !643)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !655, file: !634, line: 53, baseType: !660, size: 64, offset: 32)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_context", file: !634, line: 49, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !634, line: 46, size: 64, elements: !662)
!662 = !{!663, !668}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !661, file: !634, line: 47, baseType: !664, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !21, line: 371, baseType: !665)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 32)
!666 = !DISubroutineType(types: !667)
!667 = !{null, !51}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !661, file: !634, line: 48, baseType: !51, size: 32, offset: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "has_initlized", scope: !655, file: !634, line: 54, baseType: !69, size: 8, offset: 96)
!670 = !DIGlobalVariableExpression(var: !671, expr: !DIExpression())
!671 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !672, file: !673, line: 80, type: !774, isLocal: true, isDefinition: true)
!672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !673, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !674, retainedTypes: !724, globals: !725, splitDebugInlining: false, nameTableKind: None)
!673 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!674 = !{!359, !675, !683, !688, !704, !710, !714, !365, !719}
!675 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !676, line: 345, baseType: !7, size: 32, elements: !677)
!676 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!677 = !{!678, !679, !680, !681, !682}
!678 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!679 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!680 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!681 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!682 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!683 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 109, baseType: !30, size: 32, elements: !684)
!684 = !{!685, !686, !687}
!685 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!686 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!687 = !DIEnumerator(name: "HAL_UART_MAX", value: 2)
!688 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !676, line: 302, baseType: !30, size: 32, elements: !689)
!689 = !{!690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703}
!690 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!691 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!692 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!693 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!694 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!695 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!696 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!697 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!698 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!699 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!700 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!701 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!702 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!703 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!704 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !676, line: 321, baseType: !30, size: 32, elements: !705)
!705 = !{!706, !707, !708, !709}
!706 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!707 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!708 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!709 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!710 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !676, line: 330, baseType: !30, size: 32, elements: !711)
!711 = !{!712, !713}
!712 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!713 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!714 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !676, line: 337, baseType: !30, size: 32, elements: !715)
!715 = !{!716, !717, !718}
!716 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!717 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!718 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!719 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !676, line: 355, baseType: !7, size: 32, elements: !720)
!720 = !{!721, !722, !723}
!721 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!722 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!723 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!724 = !{!265, !30, !51, !58, !266, !54}
!725 = !{!726, !769, !670, !772, !775}
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "g_uart_context_table", scope: !672, file: !673, line: 77, type: !728, isLocal: true, isDefinition: true)
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 1024, elements: !397)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_context_t", file: !673, line: 75, baseType: !730)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !673, line: 68, size: 512, elements: !731)
!731 = !{!732, !733, !745, !746, !757, !758}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config_present", scope: !730, file: !673, line: 69, baseType: !69, size: 8)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "basic_config", scope: !730, file: !673, line: 70, baseType: !734, size: 128, offset: 32)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !676, line: 378, baseType: !735)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !676, line: 373, size: 128, elements: !736)
!736 = !{!737, !739, !741, !743}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !735, file: !676, line: 374, baseType: !738, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !676, line: 317, baseType: !688)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !735, file: !676, line: 375, baseType: !740, size: 32, offset: 32)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !676, line: 326, baseType: !704)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !735, file: !676, line: 376, baseType: !742, size: 32, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !676, line: 333, baseType: !710)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !735, file: !676, line: 377, baseType: !744, size: 32, offset: 96)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !676, line: 341, baseType: !714)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "callback_present", scope: !730, file: !673, line: 71, baseType: !69, size: 8, offset: 160)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "callback_config", scope: !730, file: !673, line: 72, baseType: !747, size: 64, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_config_t", file: !673, line: 66, baseType: !748)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !673, line: 63, size: 64, elements: !749)
!749 = !{!750, !756}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !748, file: !673, line: 64, baseType: !751, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !676, line: 410, baseType: !752)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 32)
!753 = !DISubroutineType(types: !754)
!754 = !{null, !755, !51}
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !676, line: 359, baseType: !719)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !748, file: !673, line: 65, baseType: !51, size: 32, offset: 32)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config_present", scope: !730, file: !673, line: 73, baseType: !69, size: 8, offset: 256)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "dma_config", scope: !730, file: !673, line: 74, baseType: !759, size: 224, offset: 288)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !676, line: 390, baseType: !760)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !676, line: 382, size: 224, elements: !761)
!761 = !{!762, !763, !764, !765, !766, !767, !768}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !760, file: !676, line: 383, baseType: !274, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !760, file: !676, line: 384, baseType: !61, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !760, file: !676, line: 385, baseType: !61, size: 32, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !760, file: !676, line: 386, baseType: !274, size: 32, offset: 96)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !760, file: !676, line: 387, baseType: !61, size: 32, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !760, file: !676, line: 388, baseType: !61, size: 32, offset: 160)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !760, file: !676, line: 389, baseType: !61, size: 32, offset: 192)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !672, file: !673, line: 82, type: !771, isLocal: true, isDefinition: true)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 16, elements: !397)
!772 = !DIGlobalVariableExpression(var: !773, expr: !DIExpression())
!773 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !672, file: !673, line: 81, type: !774, isLocal: true, isDefinition: true)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 16, elements: !397)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "func_tbl", scope: !777, file: !673, line: 536, type: !784, isLocal: true, isDefinition: true)
!777 = distinct !DISubprogram(name: "hal_uart_map_receive_callback", scope: !673, file: !673, line: 534, type: !778, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !782)
!778 = !DISubroutineType(types: !779)
!779 = !{!780, !781}
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "VOID_FUNC", file: !366, line: 197, baseType: !153)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !29, line: 113, baseType: !683)
!782 = !{!783}
!783 = !DILocalVariable(name: "uart_port", arg: 1, scope: !777, file: !673, line: 534, type: !781)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !785, size: 64, elements: !397)
!785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !780)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "cmdlist_switchqpi_default", scope: !788, file: !789, line: 164, type: !278, isLocal: false, isDefinition: true)
!788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !789, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !790, globals: !805, splitDebugInlining: false, nameTableKind: None)
!789 = !DIFile(filename: "../../../../../driver/board/linkit7697_hdk/external_flash/src/bsp_flash_config.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!790 = !{!791, !51}
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 32)
!792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !793)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "flash_info_t", file: !794, line: 48, baseType: !795)
!794 = !DIFile(filename: "../../../../../driver/board/linkit7697_hdk/external_flash/inc/bsp_flash_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 38, size: 192, elements: !796)
!796 = !{!797, !798, !799, !800, !801, !802, !803, !804}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !795, file: !794, line: 39, baseType: !265, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !795, file: !794, line: 40, baseType: !58, size: 8, offset: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "jedec_id", scope: !795, file: !794, line: 41, baseType: !259, size: 32, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !795, file: !794, line: 42, baseType: !259, size: 32, offset: 96)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !795, file: !794, line: 43, baseType: !30, size: 32, offset: 128)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "quad_program_cmd", scope: !795, file: !794, line: 45, baseType: !58, size: 8, offset: 160)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "quad_read_cmd", scope: !795, file: !794, line: 46, baseType: !58, size: 8, offset: 168)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "qpi_read_cmd", scope: !795, file: !794, line: 47, baseType: !58, size: 8, offset: 176)
!805 = !{!786, !806, !808, !810}
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "cmdlist_switchspi_default", scope: !788, file: !789, line: 167, type: !283, isLocal: false, isDefinition: true)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "cmdlist_switchspiq_default", scope: !788, file: !789, line: 170, type: !288, isLocal: false, isDefinition: true)
!810 = !DIGlobalVariableExpression(var: !811, expr: !DIExpression())
!811 = distinct !DIGlobalVariable(name: "customer_flash_info", scope: !788, file: !789, line: 174, type: !792, isLocal: false, isDefinition: true)
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !814, file: !815, line: 59, type: !61, isLocal: false, isDefinition: true)
!814 = distinct !DICompileUnit(language: DW_LANG_C99, file: !815, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !816, globals: !869, splitDebugInlining: false, nameTableKind: None)
!815 = !DIFile(filename: "../../../../../project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/src/system_mt7687.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!816 = !{!817, !825, !850}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !557, line: 656, baseType: !819)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 650, size: 128, elements: !820)
!820 = !{!821, !822, !823, !824}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !819, file: !557, line: 652, baseType: !60, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !819, file: !557, line: 653, baseType: !60, size: 32, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !819, file: !557, line: 654, baseType: !60, size: 32, offset: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !819, file: !557, line: 655, baseType: !591, size: 32, offset: 96)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 32)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !557, line: 418, baseType: !827)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 395, size: 1120, elements: !828)
!828 = !{!829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !827, file: !557, line: 397, baseType: !591, size: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !827, file: !557, line: 398, baseType: !60, size: 32, offset: 32)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !827, file: !557, line: 399, baseType: !60, size: 32, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !827, file: !557, line: 400, baseType: !60, size: 32, offset: 96)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !827, file: !557, line: 401, baseType: !60, size: 32, offset: 128)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !827, file: !557, line: 402, baseType: !60, size: 32, offset: 160)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !827, file: !557, line: 403, baseType: !598, size: 96, offset: 192)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !827, file: !557, line: 404, baseType: !60, size: 32, offset: 288)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !827, file: !557, line: 405, baseType: !60, size: 32, offset: 320)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !827, file: !557, line: 406, baseType: !60, size: 32, offset: 352)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !827, file: !557, line: 407, baseType: !60, size: 32, offset: 384)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !827, file: !557, line: 408, baseType: !60, size: 32, offset: 416)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !827, file: !557, line: 409, baseType: !60, size: 32, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !827, file: !557, line: 410, baseType: !60, size: 32, offset: 480)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !827, file: !557, line: 411, baseType: !607, size: 64, offset: 512)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !827, file: !557, line: 412, baseType: !591, size: 32, offset: 576)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !827, file: !557, line: 413, baseType: !591, size: 32, offset: 608)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !827, file: !557, line: 414, baseType: !611, size: 128, offset: 640)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !827, file: !557, line: 415, baseType: !613, size: 160, offset: 768)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !827, file: !557, line: 416, baseType: !617, size: 160, offset: 928)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !827, file: !557, line: 417, baseType: !60, size: 32, offset: 1088)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 32)
!851 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !457, line: 72, baseType: !852)
!852 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 56, size: 525312, elements: !853)
!853 = !{!854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !852, file: !457, line: 57, baseType: !60, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !852, file: !457, line: 58, baseType: !60, size: 32, offset: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !852, file: !457, line: 59, baseType: !60, size: 32, offset: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !852, file: !457, line: 60, baseType: !60, size: 32, offset: 96)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !852, file: !457, line: 61, baseType: !60, size: 32, offset: 128)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !852, file: !457, line: 62, baseType: !60, size: 32, offset: 160)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !852, file: !457, line: 63, baseType: !60, size: 32, offset: 192)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !852, file: !457, line: 64, baseType: !60, size: 32, offset: 224)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !852, file: !457, line: 65, baseType: !60, size: 32, offset: 256)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !852, file: !457, line: 66, baseType: !60, size: 32, offset: 288)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !852, file: !457, line: 67, baseType: !471, size: 32, offset: 320)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !852, file: !457, line: 68, baseType: !60, size: 32, offset: 352)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !852, file: !457, line: 69, baseType: !476, size: 523904, offset: 384)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !852, file: !457, line: 70, baseType: !480, size: 512, offset: 524288)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !852, file: !457, line: 71, baseType: !480, size: 512, offset: 524800)
!869 = !{!812, !870}
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !814, file: !815, line: 61, type: !60, isLocal: true, isDefinition: true)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "heap_end", scope: !874, file: !875, line: 101, type: !265, isLocal: true, isDefinition: true)
!874 = distinct !DISubprogram(name: "_sbrk_r", scope: !875, file: !875, line: 98, type: !876, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1065, retainedNodes: !1069)
!875 = !DIFile(filename: "../../../../../project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!876 = !DISubroutineType(types: !877)
!877 = !{!878, !880, !1064}
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !879, line: 123, baseType: !265)
!879 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !882, line: 377, size: 1920, elements: !883)
!882 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!883 = !{!884, !885, !954, !955, !956, !957, !958, !959, !960, !963, !983, !987, !988, !989, !990, !1000, !1013, !1014, !1019, !1038, !1039, !1046, !1047, !1063}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !881, file: !882, line: 381, baseType: !7, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !881, file: !882, line: 386, baseType: !886, size: 32, offset: 32)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !882, line: 292, baseType: !888)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !882, line: 186, size: 832, elements: !889)
!889 = !{!890, !891, !892, !893, !895, !896, !901, !902, !903, !904, !908, !912, !918, !922, !923, !924, !925, !929, !931, !932, !933, !935, !941, !953}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !888, file: !882, line: 187, baseType: !241, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !888, file: !882, line: 188, baseType: !7, size: 32, offset: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !888, file: !882, line: 189, baseType: !7, size: 32, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !888, file: !882, line: 190, baseType: !894, size: 16, offset: 96)
!894 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !888, file: !882, line: 191, baseType: !894, size: 16, offset: 112)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !888, file: !882, line: 192, baseType: !897, size: 64, offset: 128)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !882, line: 122, size: 64, elements: !898)
!898 = !{!899, !900}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !897, file: !882, line: 123, baseType: !241, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !897, file: !882, line: 124, baseType: !7, size: 32, offset: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !888, file: !882, line: 193, baseType: !7, size: 32, offset: 192)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !888, file: !882, line: 196, baseType: !880, size: 32, offset: 224)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !888, file: !882, line: 200, baseType: !51, size: 32, offset: 256)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !888, file: !882, line: 202, baseType: !905, size: 32, offset: 288)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{!7, !880, !51, !265, !7}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !888, file: !882, line: 204, baseType: !909, size: 32, offset: 320)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 32)
!910 = !DISubroutineType(types: !911)
!911 = !{!7, !880, !51, !395, !7}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !888, file: !882, line: 207, baseType: !913, size: 32, offset: 352)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!914 = !DISubroutineType(types: !915)
!915 = !{!916, !880, !51, !916, !7}
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !917, line: 116, baseType: !240)
!917 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!918 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !888, file: !882, line: 208, baseType: !919, size: 32, offset: 384)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!7, !880, !51}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !888, file: !882, line: 211, baseType: !897, size: 64, offset: 416)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !888, file: !882, line: 212, baseType: !241, size: 32, offset: 480)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !888, file: !882, line: 213, baseType: !7, size: 32, offset: 512)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !888, file: !882, line: 216, baseType: !926, size: 24, offset: 544)
!926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 24, elements: !927)
!927 = !{!928}
!928 = !DISubrange(count: 3)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !888, file: !882, line: 217, baseType: !930, size: 8, offset: 568)
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 8, elements: !472)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !888, file: !882, line: 220, baseType: !897, size: 64, offset: 576)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !888, file: !882, line: 223, baseType: !7, size: 32, offset: 640)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !888, file: !882, line: 224, baseType: !934, size: 32, offset: 672)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !917, line: 46, baseType: !240)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !888, file: !882, line: 231, baseType: !936, size: 32, offset: 704)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !882, line: 35, baseType: !937)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !938, line: 34, baseType: !939)
!938 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !938, line: 33, flags: DIFlagFwdDecl)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !888, file: !882, line: 233, baseType: !942, size: 64, offset: 736)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !917, line: 170, baseType: !943)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !917, line: 162, size: 64, elements: !944)
!944 = !{!945, !946}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !943, file: !917, line: 164, baseType: !7, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !943, file: !917, line: 169, baseType: !947, size: 32, offset: 32)
!947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !943, file: !917, line: 165, size: 32, elements: !948)
!948 = !{!949, !952}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !947, file: !917, line: 167, baseType: !950, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !951, line: 116, baseType: !7)
!951 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!952 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !947, file: !917, line: 168, baseType: !293, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !888, file: !882, line: 234, baseType: !7, size: 32, offset: 800)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !881, file: !882, line: 386, baseType: !886, size: 32, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !881, file: !882, line: 386, baseType: !886, size: 32, offset: 96)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !881, file: !882, line: 388, baseType: !7, size: 32, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !881, file: !882, line: 390, baseType: !265, size: 32, offset: 160)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !881, file: !882, line: 392, baseType: !7, size: 32, offset: 192)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !881, file: !882, line: 394, baseType: !7, size: 32, offset: 224)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !881, file: !882, line: 395, baseType: !961, size: 32, offset: 256)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!962 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !882, line: 45, flags: DIFlagFwdDecl)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !881, file: !882, line: 397, baseType: !964, size: 32, offset: 288)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 32)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !882, line: 349, size: 128, elements: !966)
!966 = !{!967, !979, !980, !981}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !965, file: !882, line: 352, baseType: !968, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !882, line: 52, size: 192, elements: !970)
!970 = !{!971, !972, !973, !974, !975, !976}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !969, file: !882, line: 54, baseType: !968, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !969, file: !882, line: 55, baseType: !7, size: 32, offset: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !969, file: !882, line: 55, baseType: !7, size: 32, offset: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !969, file: !882, line: 55, baseType: !7, size: 32, offset: 96)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !969, file: !882, line: 55, baseType: !7, size: 32, offset: 128)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !969, file: !882, line: 56, baseType: !977, size: 32, offset: 160)
!977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !978, size: 32, elements: !472)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !882, line: 22, baseType: !259)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !965, file: !882, line: 353, baseType: !7, size: 32, offset: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !965, file: !882, line: 354, baseType: !968, size: 32, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !965, file: !882, line: 355, baseType: !982, size: 32, offset: 96)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !881, file: !882, line: 399, baseType: !984, size: 32, offset: 320)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = !DISubroutineType(types: !986)
!986 = !{null, !880}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !881, file: !882, line: 401, baseType: !7, size: 32, offset: 352)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !881, file: !882, line: 404, baseType: !7, size: 32, offset: 384)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !881, file: !882, line: 405, baseType: !265, size: 32, offset: 416)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !881, file: !882, line: 407, baseType: !991, size: 32, offset: 448)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !882, line: 324, size: 192, elements: !993)
!993 = !{!994, !996, !997, !998}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !992, file: !882, line: 325, baseType: !995, size: 48)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !386, size: 48, elements: !927)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !992, file: !882, line: 326, baseType: !995, size: 48, offset: 48)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !992, file: !882, line: 327, baseType: !386, size: 16, offset: 96)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !992, file: !882, line: 330, baseType: !999, size: 64, offset: 128)
!999 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !881, file: !882, line: 408, baseType: !1001, size: 32, offset: 480)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 32)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !882, line: 60, size: 288, elements: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !1002, file: !882, line: 62, baseType: !7, size: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !1002, file: !882, line: 63, baseType: !7, size: 32, offset: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !1002, file: !882, line: 64, baseType: !7, size: 32, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !1002, file: !882, line: 65, baseType: !7, size: 32, offset: 96)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !1002, file: !882, line: 66, baseType: !7, size: 32, offset: 128)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !1002, file: !882, line: 67, baseType: !7, size: 32, offset: 160)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !1002, file: !882, line: 68, baseType: !7, size: 32, offset: 192)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !1002, file: !882, line: 69, baseType: !7, size: 32, offset: 224)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !1002, file: !882, line: 70, baseType: !7, size: 32, offset: 256)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !881, file: !882, line: 409, baseType: !265, size: 32, offset: 512)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !881, file: !882, line: 412, baseType: !1015, size: 32, offset: 544)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{null, !7}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !881, file: !882, line: 416, baseType: !1020, size: 32, offset: 576)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 32)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !882, line: 90, size: 1120, elements: !1022)
!1022 = !{!1023, !1024, !1025, !1029}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1021, file: !882, line: 91, baseType: !1020, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !1021, file: !882, line: 92, baseType: !7, size: 32, offset: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !1021, file: !882, line: 93, baseType: !1026, size: 1024, offset: 64)
!1026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 1024, elements: !1027)
!1027 = !{!1028}
!1028 = !DISubrange(count: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !1021, file: !882, line: 94, baseType: !1030, size: 32, offset: 1088)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 32)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !882, line: 79, size: 2112, elements: !1032)
!1032 = !{!1033, !1035, !1036, !1037}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !1031, file: !882, line: 80, baseType: !1034, size: 1024)
!1034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !51, size: 1024, elements: !1027)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !1031, file: !882, line: 81, baseType: !1034, size: 1024, offset: 1024)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !1031, file: !882, line: 83, baseType: !978, size: 32, offset: 2048)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !1031, file: !882, line: 86, baseType: !978, size: 32, offset: 2080)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !881, file: !882, line: 417, baseType: !1021, size: 1120, offset: 608)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !881, file: !882, line: 420, baseType: !1040, size: 96, offset: 1728)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !882, line: 296, size: 96, elements: !1041)
!1041 = !{!1042, !1044, !1045}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1040, file: !882, line: 298, baseType: !1043, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !1040, file: !882, line: 299, baseType: !7, size: 32, offset: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !1040, file: !882, line: 300, baseType: !886, size: 32, offset: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !881, file: !882, line: 421, baseType: !886, size: 32, offset: 1824)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !881, file: !882, line: 422, baseType: !1048, size: 32, offset: 1856)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !882, line: 359, size: 640, elements: !1050)
!1050 = !{!1051, !1052, !1053, !1054, !1055, !1057, !1058, !1059, !1060, !1061, !1062}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !1049, file: !882, line: 362, baseType: !265, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !1049, file: !882, line: 363, baseType: !942, size: 64, offset: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !1049, file: !882, line: 364, baseType: !942, size: 64, offset: 96)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !1049, file: !882, line: 365, baseType: !942, size: 64, offset: 160)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !1049, file: !882, line: 366, baseType: !1056, size: 64, offset: 224)
!1056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 64, elements: !299)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !1049, file: !882, line: 367, baseType: !7, size: 32, offset: 288)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !1049, file: !882, line: 368, baseType: !942, size: 64, offset: 320)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !1049, file: !882, line: 369, baseType: !942, size: 64, offset: 384)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !1049, file: !882, line: 370, baseType: !942, size: 64, offset: 448)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !1049, file: !882, line: 371, baseType: !942, size: 64, offset: 512)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !1049, file: !882, line: 372, baseType: !942, size: 64, offset: 576)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !881, file: !882, line: 423, baseType: !265, size: 32, offset: 1888)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !951, line: 46, baseType: !30)
!1065 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1066, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1067, globals: !1068, splitDebugInlining: false, nameTableKind: None)
!1066 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1067 = !{!265, !878}
!1068 = !{!872}
!1069 = !{!1070, !1071, !1072, !1073}
!1070 = !DILocalVariable(name: "r", arg: 1, scope: !874, file: !875, line: 98, type: !880)
!1071 = !DILocalVariable(name: "nbytes", arg: 2, scope: !874, file: !875, line: 98, type: !1064)
!1072 = !DILocalVariable(name: "prev_heap_end", scope: !874, file: !875, line: 102, type: !265)
!1073 = !DILocalVariable(name: "stack", scope: !874, file: !875, line: 103, type: !265)
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !1076, file: !1081, line: 4, type: !1090, isLocal: false, isDefinition: true)
!1076 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1077, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1078, splitDebugInlining: false, nameTableKind: None)
!1077 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1078 = !{!1074, !1079, !1085}
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !1076, file: !1081, line: 5, type: !1082, isLocal: false, isDefinition: true)
!1081 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 88, elements: !1083)
!1083 = !{!1084}
!1084 = !DISubrange(count: 11)
!1085 = !DIGlobalVariableExpression(var: !1086, expr: !DIExpression())
!1086 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !1076, file: !1081, line: 6, type: !1087, isLocal: false, isDefinition: true)
!1087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 120, elements: !1088)
!1088 = !{!1089}
!1089 = !DISubrange(count: 15)
!1090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 248, elements: !1091)
!1091 = !{!1092}
!1092 = !DISubrange(count: 31)
!1093 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1094, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1095, retainedTypes: !1101, splitDebugInlining: false, nameTableKind: None)
!1094 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/hal_gpio_7687.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1095 = !{!1096}
!1096 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1097, line: 1209, baseType: !30, size: 32, elements: !1098)
!1097 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/hal_gpio_7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1098 = !{!1099, !1100}
!1099 = !DIEnumerator(name: "ePAD_CONTROL_BY_N9", value: 0)
!1100 = !DIEnumerator(name: "ePAD_CONTROL_BY_CM4", value: 1)
!1101 = !{!137, !139}
!1102 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1103, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1104, retainedTypes: !1182, splitDebugInlining: false, nameTableKind: None)
!1103 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/hal_pinmux.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1104 = !{!1105}
!1105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1106, line: 150, baseType: !30, size: 32, elements: !1107)
!1106 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/hal_pinmux.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1107 = !{!1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181}
!1108 = !DIEnumerator(name: "ePAD_ANTSEL0", value: 0)
!1109 = !DIEnumerator(name: "ePAD_ANTSEL1", value: 1)
!1110 = !DIEnumerator(name: "ePAD_ANTSEL2", value: 2)
!1111 = !DIEnumerator(name: "ePAD_ANTSEL3", value: 3)
!1112 = !DIEnumerator(name: "ePAD_ANTSEL4", value: 4)
!1113 = !DIEnumerator(name: "ePAD_ANTSEL5", value: 5)
!1114 = !DIEnumerator(name: "ePAD_ANTSEL6", value: 6)
!1115 = !DIEnumerator(name: "ePAD_ANTSEL7", value: 7)
!1116 = !DIEnumerator(name: "ePAD_IN_GPIO8", value: 8)
!1117 = !DIEnumerator(name: "ePAD_IN_GPIO9", value: 9)
!1118 = !DIEnumerator(name: "ePAD_IN_GPIO10", value: 10)
!1119 = !DIEnumerator(name: "ePAD_IN_GPIO11", value: 11)
!1120 = !DIEnumerator(name: "ePAD_IN_GPIO12", value: 12)
!1121 = !DIEnumerator(name: "ePAD_IN_GPIO13", value: 13)
!1122 = !DIEnumerator(name: "ePAD_IN_GPIO14", value: 14)
!1123 = !DIEnumerator(name: "ePAD_IN_GPIO15", value: 15)
!1124 = !DIEnumerator(name: "ePAD_IN_GPIO16", value: 16)
!1125 = !DIEnumerator(name: "ePAD_IN_GPIO17", value: 17)
!1126 = !DIEnumerator(name: "ePAD_IN_GPIO18", value: 18)
!1127 = !DIEnumerator(name: "ePAD_IN_GPIO19", value: 19)
!1128 = !DIEnumerator(name: "ePAD_IN_GPIO20", value: 20)
!1129 = !DIEnumerator(name: "ePAD_IN_GPIO21", value: 21)
!1130 = !DIEnumerator(name: "ePAD_IN_GPIO22", value: 22)
!1131 = !DIEnumerator(name: "ePAD_IN_UART0_TXD", value: 23)
!1132 = !DIEnumerator(name: "ePAD_PERST_N", value: 24)
!1133 = !DIEnumerator(name: "ePAD_WAKE_N", value: 25)
!1134 = !DIEnumerator(name: "ePAD_CLK_REQ_N", value: 26)
!1135 = !DIEnumerator(name: "ePAD_SDIO_CLK", value: 27)
!1136 = !DIEnumerator(name: "ePAD_SDIO_CMD", value: 28)
!1137 = !DIEnumerator(name: "ePAD_SDIO_DAT3", value: 29)
!1138 = !DIEnumerator(name: "ePAD_SDIO_DAT2", value: 30)
!1139 = !DIEnumerator(name: "ePAD_SDIO_DAT1", value: 31)
!1140 = !DIEnumerator(name: "ePAD_SDIO_DAT0", value: 32)
!1141 = !DIEnumerator(name: "ePAD_GPIO0", value: 33)
!1142 = !DIEnumerator(name: "ePAD_GPIO1", value: 34)
!1143 = !DIEnumerator(name: "ePAD_UART_DBG", value: 35)
!1144 = !DIEnumerator(name: "ePAD_UART_RX", value: 36)
!1145 = !DIEnumerator(name: "ePAD_UART_TX", value: 37)
!1146 = !DIEnumerator(name: "ePAD_UART_RTS", value: 38)
!1147 = !DIEnumerator(name: "ePAD_UART_CTS", value: 39)
!1148 = !DIEnumerator(name: "ePAD_IN_GPIO44", value: 40)
!1149 = !DIEnumerator(name: "ePAD_IN_GPIO45", value: 41)
!1150 = !DIEnumerator(name: "ePAD_IN_GPIO46", value: 42)
!1151 = !DIEnumerator(name: "ePAD_IN_GPIO47", value: 43)
!1152 = !DIEnumerator(name: "ePAD_IN_GPIO48", value: 44)
!1153 = !DIEnumerator(name: "ePAD_IN_GPIO49", value: 45)
!1154 = !DIEnumerator(name: "ePAD_IN_GPIO50", value: 46)
!1155 = !DIEnumerator(name: "ePAD_IN_GPIO51", value: 47)
!1156 = !DIEnumerator(name: "ePAD_IN_GPIO52", value: 48)
!1157 = !DIEnumerator(name: "ePAD_IN_GPIO53", value: 49)
!1158 = !DIEnumerator(name: "ePAD_IN_GPIO54", value: 50)
!1159 = !DIEnumerator(name: "ePAD_IN_PWM2", value: 51)
!1160 = !DIEnumerator(name: "ePAD_IN_PWM3", value: 52)
!1161 = !DIEnumerator(name: "ePAD_IN_PWM4", value: 53)
!1162 = !DIEnumerator(name: "ePAD_IN_PWM5", value: 54)
!1163 = !DIEnumerator(name: "ePAD_IN_PWM6", value: 55)
!1164 = !DIEnumerator(name: "ePAD_IN_PWM7", value: 56)
!1165 = !DIEnumerator(name: "ePAD_WF_RF_DIS_B", value: 57)
!1166 = !DIEnumerator(name: "ePAD_BT_RF_DIS_B", value: 58)
!1167 = !DIEnumerator(name: "ePAD_WF_LED_B", value: 59)
!1168 = !DIEnumerator(name: "ePAD_BT_LED_B", value: 60)
!1169 = !DIEnumerator(name: "ePAD_IN_ADC4", value: 61)
!1170 = !DIEnumerator(name: "ePAD_IN_ADC5", value: 62)
!1171 = !DIEnumerator(name: "ePAD_IN_ADC6", value: 63)
!1172 = !DIEnumerator(name: "ePAD_IN_ADC7", value: 64)
!1173 = !DIEnumerator(name: "ePAD_IN_ADC8", value: 65)
!1174 = !DIEnumerator(name: "ePAD_IN_ADC9", value: 66)
!1175 = !DIEnumerator(name: "ePAD_IN_ADC10", value: 67)
!1176 = !DIEnumerator(name: "ePAD_IN_ADC11", value: 68)
!1177 = !DIEnumerator(name: "ePAD_IN_ADC12", value: 69)
!1178 = !DIEnumerator(name: "ePAD_IN_ADC13", value: 70)
!1179 = !DIEnumerator(name: "ePAD_IN_ADC14", value: 71)
!1180 = !DIEnumerator(name: "ePAD_IN_ADC15", value: 72)
!1181 = !DIEnumerator(name: "ePAD_NUM", value: 73)
!1182 = !{!137, !159}
!1183 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1184, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1185, splitDebugInlining: false, nameTableKind: None)
!1184 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1185 = !{!1186, !1211}
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !557, line: 418, baseType: !1188)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 395, size: 1120, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1188, file: !557, line: 397, baseType: !591, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1188, file: !557, line: 398, baseType: !60, size: 32, offset: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1188, file: !557, line: 399, baseType: !60, size: 32, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1188, file: !557, line: 400, baseType: !60, size: 32, offset: 96)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1188, file: !557, line: 401, baseType: !60, size: 32, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1188, file: !557, line: 402, baseType: !60, size: 32, offset: 160)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1188, file: !557, line: 403, baseType: !598, size: 96, offset: 192)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1188, file: !557, line: 404, baseType: !60, size: 32, offset: 288)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1188, file: !557, line: 405, baseType: !60, size: 32, offset: 320)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1188, file: !557, line: 406, baseType: !60, size: 32, offset: 352)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1188, file: !557, line: 407, baseType: !60, size: 32, offset: 384)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1188, file: !557, line: 408, baseType: !60, size: 32, offset: 416)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1188, file: !557, line: 409, baseType: !60, size: 32, offset: 448)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1188, file: !557, line: 410, baseType: !60, size: 32, offset: 480)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1188, file: !557, line: 411, baseType: !607, size: 64, offset: 512)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1188, file: !557, line: 412, baseType: !591, size: 32, offset: 576)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1188, file: !557, line: 413, baseType: !591, size: 32, offset: 608)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1188, file: !557, line: 414, baseType: !611, size: 128, offset: 640)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1188, file: !557, line: 415, baseType: !613, size: 160, offset: 768)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1188, file: !557, line: 416, baseType: !617, size: 160, offset: 928)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1188, file: !557, line: 417, baseType: !60, size: 32, offset: 1088)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !557, line: 378, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 363, size: 28704, elements: !1214)
!1214 = !{!1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1213, file: !557, line: 365, baseType: !561, size: 256)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1213, file: !557, line: 366, baseType: !563, size: 768, offset: 256)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1213, file: !557, line: 367, baseType: !561, size: 256, offset: 1024)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1213, file: !557, line: 368, baseType: !563, size: 768, offset: 1280)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1213, file: !557, line: 369, baseType: !561, size: 256, offset: 2048)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1213, file: !557, line: 370, baseType: !563, size: 768, offset: 2304)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1213, file: !557, line: 371, baseType: !561, size: 256, offset: 3072)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1213, file: !557, line: 372, baseType: !563, size: 768, offset: 3328)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1213, file: !557, line: 373, baseType: !561, size: 256, offset: 4096)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1213, file: !557, line: 374, baseType: !574, size: 1792, offset: 4352)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1213, file: !557, line: 375, baseType: !578, size: 1920, offset: 6144)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1213, file: !557, line: 376, baseType: !582, size: 20608, offset: 8064)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1213, file: !557, line: 377, baseType: !60, size: 32, offset: 28672)
!1228 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1229, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1230, splitDebugInlining: false, nameTableKind: None)
!1229 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/pinmux.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1230 = !{!1231, !1105}
!1231 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1232, line: 55, baseType: !30, size: 32, elements: !1233)
!1232 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/pinmux.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1233 = !{!1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261}
!1234 = !DIEnumerator(name: "eIOT_GPIO_IDX_0", value: 0)
!1235 = !DIEnumerator(name: "eIOT_GPIO_IDX_1", value: 1)
!1236 = !DIEnumerator(name: "eIOT_GPIO_IDX_2", value: 2)
!1237 = !DIEnumerator(name: "eIOT_GPIO_IDX_3", value: 3)
!1238 = !DIEnumerator(name: "eIOT_GPIO_IDX_4", value: 4)
!1239 = !DIEnumerator(name: "eIOT_GPIO_IDX_5", value: 5)
!1240 = !DIEnumerator(name: "eIOT_GPIO_IDX_6", value: 6)
!1241 = !DIEnumerator(name: "eIOT_GPIO_IDX_7", value: 7)
!1242 = !DIEnumerator(name: "eIOT_GPIO_IDX_24", value: 24)
!1243 = !DIEnumerator(name: "eIOT_GPIO_IDX_25", value: 25)
!1244 = !DIEnumerator(name: "eIOT_GPIO_IDX_26", value: 26)
!1245 = !DIEnumerator(name: "eIOT_GPIO_IDX_27", value: 27)
!1246 = !DIEnumerator(name: "eIOT_GPIO_IDX_28", value: 28)
!1247 = !DIEnumerator(name: "eIOT_GPIO_IDX_29", value: 29)
!1248 = !DIEnumerator(name: "eIOT_GPIO_IDX_30", value: 30)
!1249 = !DIEnumerator(name: "eIOT_GPIO_IDX_31", value: 31)
!1250 = !DIEnumerator(name: "eIOT_GPIO_IDX_32", value: 32)
!1251 = !DIEnumerator(name: "eIOT_GPIO_IDX_33", value: 33)
!1252 = !DIEnumerator(name: "eIOT_GPIO_IDX_34", value: 34)
!1253 = !DIEnumerator(name: "eIOT_GPIO_IDX_35", value: 35)
!1254 = !DIEnumerator(name: "eIOT_GPIO_IDX_36", value: 36)
!1255 = !DIEnumerator(name: "eIOT_GPIO_IDX_37", value: 37)
!1256 = !DIEnumerator(name: "eIOT_GPIO_IDX_38", value: 38)
!1257 = !DIEnumerator(name: "eIOT_GPIO_IDX_39", value: 39)
!1258 = !DIEnumerator(name: "eIOT_GPIO_IDX_57", value: 57)
!1259 = !DIEnumerator(name: "eIOT_GPIO_IDX_58", value: 58)
!1260 = !DIEnumerator(name: "eIOT_GPIO_IDX_59", value: 59)
!1261 = !DIEnumerator(name: "eIOT_GPIO_IDX_60", value: 60)
!1262 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1263, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1264, splitDebugInlining: false, nameTableKind: None)
!1263 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/timer.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1264 = !{!240, !137}
!1265 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1266, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1266 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1267 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1268, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1269, retainedTypes: !1333, splitDebugInlining: false, nameTableKind: None)
!1268 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1269 = !{!1270, !1277, !1231, !1308, !1314, !1318, !1322, !1328}
!1270 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1271, line: 233, baseType: !7, size: 32, elements: !1272)
!1271 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1272 = !{!1273, !1274, !1275, !1276}
!1273 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!1274 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!1275 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!1276 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!1277 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 249, baseType: !30, size: 32, elements: !1278)
!1278 = !{!1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307}
!1279 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!1280 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!1281 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!1282 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!1283 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!1284 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!1285 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!1286 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!1287 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!1288 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!1289 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!1290 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!1291 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!1292 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!1293 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!1294 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!1295 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!1296 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!1297 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!1298 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!1299 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!1300 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!1301 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!1302 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!1303 = !DIEnumerator(name: "HAL_GPIO_57", value: 57)
!1304 = !DIEnumerator(name: "HAL_GPIO_58", value: 58)
!1305 = !DIEnumerator(name: "HAL_GPIO_59", value: 59)
!1306 = !DIEnumerator(name: "HAL_GPIO_60", value: 60)
!1307 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 61)
!1308 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1271, line: 224, baseType: !7, size: 32, elements: !1309)
!1309 = !{!1310, !1311, !1312, !1313}
!1310 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!1311 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!1312 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!1313 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!1314 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1271, line: 217, baseType: !30, size: 32, elements: !1315)
!1315 = !{!1316, !1317}
!1316 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!1317 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!1318 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1271, line: 210, baseType: !30, size: 32, elements: !1319)
!1319 = !{!1320, !1321}
!1320 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!1321 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!1322 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1271, line: 242, baseType: !30, size: 32, elements: !1323)
!1323 = !{!1324, !1325, !1326, !1327}
!1324 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!1325 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!1326 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!1327 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!1328 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1329, line: 57, baseType: !30, size: 32, elements: !1330)
!1329 = !DIFile(filename: "../../../../../driver/chip/mt7687/src/common/include/low_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1330 = !{!1331, !1332}
!1331 = !DIEnumerator(name: "eDirection_IN", value: 0)
!1332 = !DIEnumerator(name: "eDirection_OUT", value: 1)
!1333 = !{!1334, !51, !1335, !54, !1336, !1337}
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_IOT_GPIO_NAME_T", file: !1232, line: 87, baseType: !1231)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !1271, line: 220, baseType: !1314)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !1271, line: 247, baseType: !1322)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_DIR_T", file: !1329, line: 60, baseType: !1328)
!1338 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1339, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1340, retainedTypes: !1348, splitDebugInlining: false, nameTableKind: None)
!1339 = !DIFile(filename: "../../../../../project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!1340 = !{!683, !688, !704, !710, !714, !1277, !1341}
!1341 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !29, line: 879, baseType: !30, size: 32, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346, !1347}
!1343 = !DIEnumerator(name: "HAL_SLEEP_MODE_NONE", value: 0)
!1344 = !DIEnumerator(name: "HAL_SLEEP_MODE_IDLE", value: 1)
!1345 = !DIEnumerator(name: "HAL_SLEEP_MODE_SLEEP", value: 2)
!1346 = !DIEnumerator(name: "HAL_SLEEP_MODE_LEGACY_SLEEP", value: 3)
!1347 = !DIEnumerator(name: "HAL_SLEEP_MODE_NUMBER", value: 4)
!1348 = !{!1349}
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !557, line: 656, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 650, size: 128, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1351, file: !557, line: 652, baseType: !60, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1351, file: !557, line: 653, baseType: !60, size: 32, offset: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1351, file: !557, line: 654, baseType: !60, size: 32, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1351, file: !557, line: 655, baseType: !591, size: 32, offset: 96)
!1357 = !{!"Ubuntu clang version 14.0.6"}
!1358 = !{i32 7, !"Dwarf Version", i32 2}
!1359 = !{i32 2, !"Debug Info Version", i32 3}
!1360 = !{i32 1, !"wchar_size", i32 4}
!1361 = !{i32 1, !"min_enum_size", i32 4}
!1362 = !{i32 1, !"branch-target-enforcement", i32 0}
!1363 = !{i32 1, !"sign-return-address", i32 0}
!1364 = !{i32 1, !"sign-return-address-all", i32 0}
!1365 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!1366 = !{i32 7, !"frame-pointer", i32 2}
!1367 = distinct !DISubprogram(name: "gpt_get_current_time", scope: !3, file: !3, line: 86, type: !1368, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1370)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!61}
!1370 = !{!1371, !1372}
!1371 = !DILocalVariable(name: "counter", scope: !1367, file: !3, line: 88, type: !61)
!1372 = !DILocalVariable(name: "ret", scope: !1367, file: !3, line: 89, type: !1373)
!1373 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !21, line: 393, baseType: !20)
!1374 = !DILocation(line: 88, column: 5, scope: !1367)
!1375 = !DILocation(line: 0, scope: !1367)
!1376 = !DILocation(line: 88, column: 14, scope: !1367)
!1377 = !DILocation(line: 90, column: 11, scope: !1367)
!1378 = !DILocation(line: 91, column: 13, scope: !1379)
!1379 = distinct !DILexicalBlock(scope: !1367, file: !3, line: 91, column: 9)
!1380 = !DILocation(line: 91, column: 9, scope: !1367)
!1381 = !DILocation(line: 92, column: 9, scope: !1382)
!1382 = distinct !DILexicalBlock(scope: !1379, file: !3, line: 91, column: 35)
!1383 = !DILocation(line: 94, column: 12, scope: !1367)
!1384 = !DILocation(line: 95, column: 1, scope: !1367)
!1385 = !DILocation(line: 94, column: 5, scope: !1367)
!1386 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !3, file: !3, line: 97, type: !154, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1387)
!1387 = !{}
!1388 = !DILocation(line: 99, column: 20, scope: !1386)
!1389 = !DILocation(line: 100, column: 1, scope: !1386)
!1390 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !3, file: !3, line: 101, type: !154, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1387)
!1391 = !DILocation(line: 103, column: 20, scope: !1390)
!1392 = !DILocation(line: 104, column: 1, scope: !1390)
!1393 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !3, file: !3, line: 105, type: !154, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1387)
!1394 = !DILocation(line: 107, column: 25, scope: !1393)
!1395 = !DILocation(line: 108, column: 1, scope: !1393)
!1396 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !3, file: !3, line: 109, type: !154, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1387)
!1397 = !DILocation(line: 111, column: 25, scope: !1396)
!1398 = !DILocation(line: 112, column: 1, scope: !1396)
!1399 = distinct !DISubprogram(name: "get_sf_lock", scope: !3, file: !3, line: 114, type: !1400, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1402)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!553}
!1402 = !{!1403}
!1403 = !DILocalVariable(name: "savedMask", scope: !1399, file: !3, line: 116, type: !61)
!1404 = !DILocation(line: 117, column: 17, scope: !1399)
!1405 = !DILocation(line: 0, scope: !1399)
!1406 = !DILocation(line: 118, column: 9, scope: !1407)
!1407 = distinct !DILexicalBlock(scope: !1399, file: !3, line: 118, column: 9)
!1408 = !DILocation(line: 118, column: 9, scope: !1399)
!1409 = !DILocation(line: 119, column: 17, scope: !1410)
!1410 = distinct !DILexicalBlock(scope: !1407, file: !3, line: 118, column: 24)
!1411 = !DILocation(line: 121, column: 9, scope: !1410)
!1412 = !DILocation(line: 0, scope: !1407)
!1413 = !DILocation(line: 130, column: 1, scope: !1399)
!1414 = distinct !DISubprogram(name: "free_sf_lock", scope: !3, file: !3, line: 132, type: !154, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1415)
!1415 = !{!1416}
!1416 = !DILocalVariable(name: "savedMask", scope: !1414, file: !3, line: 134, type: !61)
!1417 = !DILocation(line: 135, column: 17, scope: !1414)
!1418 = !DILocation(line: 0, scope: !1414)
!1419 = !DILocation(line: 136, column: 9, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1414, file: !3, line: 136, column: 9)
!1421 = !DILocation(line: 136, column: 9, scope: !1414)
!1422 = !DILocation(line: 137, column: 17, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1420, file: !3, line: 136, column: 24)
!1424 = !DILocation(line: 138, column: 9, scope: !1423)
!1425 = !DILocation(line: 143, column: 1, scope: !1414)
!1426 = !DILocation(line: 140, column: 9, scope: !1427)
!1427 = distinct !DILexicalBlock(scope: !1420, file: !3, line: 139, column: 12)
!1428 = !DILocation(line: 141, column: 9, scope: !1427)
!1429 = distinct !DISubprogram(name: "retrieve_sf_lock", scope: !3, file: !3, line: 145, type: !154, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1430)
!1430 = !{!1431}
!1431 = !DILocalVariable(name: "Result", scope: !1429, file: !3, line: 147, type: !553)
!1432 = !DILocation(line: 148, column: 5, scope: !1429)
!1433 = !DILocation(line: 149, column: 18, scope: !1434)
!1434 = distinct !DILexicalBlock(scope: !1429, file: !3, line: 148, column: 8)
!1435 = !DILocation(line: 0, scope: !1429)
!1436 = !DILocation(line: 150, column: 21, scope: !1429)
!1437 = !DILocation(line: 150, column: 5, scope: !1434)
!1438 = distinct !{!1438, !1432, !1439}
!1439 = !DILocation(line: 150, column: 25, scope: !1429)
!1440 = !DILocation(line: 151, column: 1, scope: !1429)
!1441 = distinct !DISubprogram(name: "release_sf_lock", scope: !3, file: !3, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1387)
!1442 = !DILocation(line: 160, column: 5, scope: !1441)
!1443 = !DILocation(line: 161, column: 1, scope: !1441)
!1444 = distinct !DISubprogram(name: "flash_sfc_config", scope: !3, file: !3, line: 186, type: !1445, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1447)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!553, !54}
!1447 = !{!1448, !1449}
!1448 = !DILocalVariable(name: "mode", arg: 1, scope: !1444, file: !3, line: 186, type: !54)
!1449 = !DILocalVariable(name: "ret", scope: !1444, file: !3, line: 188, type: !1450)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT32", file: !87, line: 56, baseType: !7)
!1451 = !DILocation(line: 0, scope: !1444)
!1452 = !DILocation(line: 189, column: 5, scope: !1444)
!1453 = !DILocation(line: 190, column: 5, scope: !1444)
!1454 = !DILocation(line: 191, column: 9, scope: !1455)
!1455 = distinct !DILexicalBlock(scope: !1444, file: !3, line: 191, column: 9)
!1456 = !DILocation(line: 191, column: 35, scope: !1455)
!1457 = !DILocation(line: 191, column: 9, scope: !1444)
!1458 = !DILocation(line: 193, column: 26, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !1455, file: !3, line: 191, column: 44)
!1460 = !DILocation(line: 194, column: 5, scope: !1459)
!1461 = !DILocation(line: 195, column: 5, scope: !1444)
!1462 = !DILocation(line: 197, column: 5, scope: !1444)
!1463 = distinct !DISubprogram(name: "sfc_pad_config", scope: !3, file: !3, line: 163, type: !154, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1464)
!1464 = !{!1465}
!1465 = !DILocalVariable(name: "pad_io_setting", scope: !1463, file: !3, line: 173, type: !61)
!1466 = !DILocation(line: 0, scope: !1463)
!1467 = !DILocation(line: 181, column: 22, scope: !1463)
!1468 = !DILocation(line: 182, column: 20, scope: !1463)
!1469 = !DILocation(line: 183, column: 39, scope: !1463)
!1470 = !DILocation(line: 185, column: 1, scope: !1463)
!1471 = distinct !DISubprogram(name: "hal_flash_direct_read", scope: !3, file: !3, line: 200, type: !1472, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1474)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{null, !51, !274, !61}
!1474 = !{!1475, !1476, !1477}
!1475 = !DILocalVariable(name: "absolute_address", arg: 1, scope: !1471, file: !3, line: 200, type: !51)
!1476 = !DILocalVariable(name: "buffer", arg: 2, scope: !1471, file: !3, line: 200, type: !274)
!1477 = !DILocalVariable(name: "length", arg: 3, scope: !1471, file: !3, line: 200, type: !61)
!1478 = !DILocation(line: 0, scope: !1471)
!1479 = !DILocation(line: 202, column: 5, scope: !1471)
!1480 = !DILocation(line: 203, column: 5, scope: !1471)
!1481 = !DILocation(line: 204, column: 5, scope: !1471)
!1482 = !DILocation(line: 205, column: 1, scope: !1471)
!1483 = distinct !DISubprogram(name: "flash_sfc_read", scope: !3, file: !3, line: 207, type: !1484, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1486)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!553, !61, !61, !274}
!1486 = !{!1487, !1488, !1489, !1490, !1491, !1492}
!1487 = !DILocalVariable(name: "address", arg: 1, scope: !1483, file: !3, line: 207, type: !61)
!1488 = !DILocalVariable(name: "length", arg: 2, scope: !1483, file: !3, line: 207, type: !61)
!1489 = !DILocalVariable(name: "buffer", arg: 3, scope: !1483, file: !3, line: 207, type: !274)
!1490 = !DILocalVariable(name: "ret", scope: !1483, file: !3, line: 209, type: !1450)
!1491 = !DILocalVariable(name: "u4Redidual", scope: !1483, file: !3, line: 210, type: !159)
!1492 = !DILocalVariable(name: "u4ReadLen", scope: !1483, file: !3, line: 211, type: !159)
!1493 = !DILocation(line: 0, scope: !1483)
!1494 = !DILocation(line: 213, column: 5, scope: !1483)
!1495 = !DILocation(line: 214, column: 31, scope: !1483)
!1496 = !DILocation(line: 214, column: 5, scope: !1483)
!1497 = !DILocation(line: 216, column: 31, scope: !1498)
!1498 = distinct !DILexicalBlock(scope: !1499, file: !3, line: 216, column: 13)
!1499 = distinct !DILexicalBlock(scope: !1483, file: !3, line: 214, column: 46)
!1500 = !DILocation(line: 216, column: 13, scope: !1499)
!1501 = !DILocation(line: 217, column: 13, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1498, file: !3, line: 216, column: 48)
!1503 = !DILocation(line: 218, column: 9, scope: !1502)
!1504 = !DILocation(line: 219, column: 13, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1506, file: !3, line: 218, column: 55)
!1506 = distinct !DILexicalBlock(scope: !1498, file: !3, line: 218, column: 20)
!1507 = !DILocation(line: 220, column: 9, scope: !1505)
!1508 = !DILocation(line: 222, column: 25, scope: !1499)
!1509 = !DILocation(line: 223, column: 27, scope: !1499)
!1510 = !DILocation(line: 224, column: 33, scope: !1499)
!1511 = distinct !{!1511, !1496, !1512}
!1512 = !DILocation(line: 225, column: 5, scope: !1483)
!1513 = !DILocation(line: 227, column: 27, scope: !1514)
!1514 = distinct !DILexicalBlock(scope: !1483, file: !3, line: 227, column: 9)
!1515 = !DILocation(line: 227, column: 9, scope: !1483)
!1516 = !DILocation(line: 228, column: 9, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1514, file: !3, line: 227, column: 44)
!1518 = !DILocation(line: 229, column: 5, scope: !1517)
!1519 = !DILocation(line: 230, column: 9, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1521, file: !3, line: 229, column: 51)
!1521 = distinct !DILexicalBlock(scope: !1514, file: !3, line: 229, column: 16)
!1522 = !DILocation(line: 231, column: 5, scope: !1520)
!1523 = !DILocation(line: 232, column: 22, scope: !1483)
!1524 = !DILocation(line: 233, column: 5, scope: !1483)
!1525 = !DILocation(line: 234, column: 5, scope: !1483)
!1526 = distinct !DISubprogram(name: "flash_sfc_write", scope: !3, file: !3, line: 238, type: !1527, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1531)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!553, !61, !61, !1529}
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !54)
!1531 = !{!1532, !1533, !1534, !1535}
!1532 = !DILocalVariable(name: "address", arg: 1, scope: !1526, file: !3, line: 238, type: !61)
!1533 = !DILocalVariable(name: "length", arg: 2, scope: !1526, file: !3, line: 238, type: !61)
!1534 = !DILocalVariable(name: "buffer", arg: 3, scope: !1526, file: !3, line: 238, type: !1529)
!1535 = !DILocalVariable(name: "ret", scope: !1526, file: !3, line: 240, type: !1450)
!1536 = !DILocation(line: 0, scope: !1526)
!1537 = !DILocation(line: 242, column: 5, scope: !1526)
!1538 = !DILocation(line: 244, column: 5, scope: !1526)
!1539 = !DILocation(line: 245, column: 5, scope: !1526)
!1540 = !DILocation(line: 247, column: 11, scope: !1526)
!1541 = !DILocation(line: 248, column: 22, scope: !1526)
!1542 = !DILocation(line: 250, column: 5, scope: !1526)
!1543 = !DILocation(line: 252, column: 5, scope: !1526)
!1544 = !DILocation(line: 253, column: 5, scope: !1526)
!1545 = distinct !DISubprogram(name: "flash_sfc_erase", scope: !3, file: !3, line: 256, type: !1546, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1548)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!553, !61, !61}
!1548 = !{!1549, !1550, !1551}
!1549 = !DILocalVariable(name: "address", arg: 1, scope: !1545, file: !3, line: 256, type: !61)
!1550 = !DILocalVariable(name: "type", arg: 2, scope: !1545, file: !3, line: 256, type: !61)
!1551 = !DILocalVariable(name: "ret", scope: !1545, file: !3, line: 258, type: !1450)
!1552 = !DILocation(line: 0, scope: !1545)
!1553 = !DILocation(line: 259, column: 5, scope: !1545)
!1554 = !DILocation(line: 261, column: 5, scope: !1545)
!1555 = !DILocation(line: 262, column: 5, scope: !1545)
!1556 = !DILocation(line: 264, column: 5, scope: !1545)
!1557 = !DILocation(line: 265, column: 5, scope: !1545)
!1558 = !DILocation(line: 267, column: 9, scope: !1545)
!1559 = !DILocation(line: 268, column: 22, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !1561, file: !3, line: 268, column: 13)
!1561 = distinct !DILexicalBlock(scope: !1562, file: !3, line: 267, column: 37)
!1562 = distinct !DILexicalBlock(scope: !1545, file: !3, line: 267, column: 9)
!1563 = !DILocation(line: 268, column: 31, scope: !1560)
!1564 = !DILocation(line: 268, column: 13, scope: !1561)
!1565 = !DILocation(line: 275, column: 15, scope: !1561)
!1566 = !DILocation(line: 276, column: 5, scope: !1561)
!1567 = !DILocation(line: 277, column: 22, scope: !1568)
!1568 = distinct !DILexicalBlock(scope: !1569, file: !3, line: 277, column: 13)
!1569 = distinct !DILexicalBlock(scope: !1570, file: !3, line: 276, column: 45)
!1570 = distinct !DILexicalBlock(scope: !1562, file: !3, line: 276, column: 16)
!1571 = !DILocation(line: 277, column: 32, scope: !1568)
!1572 = !DILocation(line: 277, column: 13, scope: !1569)
!1573 = !DILocation(line: 284, column: 15, scope: !1569)
!1574 = !DILocation(line: 285, column: 5, scope: !1569)
!1575 = !DILocation(line: 286, column: 22, scope: !1576)
!1576 = distinct !DILexicalBlock(scope: !1577, file: !3, line: 286, column: 13)
!1577 = distinct !DILexicalBlock(scope: !1578, file: !3, line: 285, column: 45)
!1578 = distinct !DILexicalBlock(scope: !1570, file: !3, line: 285, column: 16)
!1579 = !DILocation(line: 286, column: 32, scope: !1576)
!1580 = !DILocation(line: 286, column: 13, scope: !1577)
!1581 = !DILocation(line: 293, column: 15, scope: !1577)
!1582 = !DILocation(line: 294, column: 5, scope: !1577)
!1583 = !DILocation(line: 301, column: 1, scope: !1545)
!1584 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !3, file: !3, line: 304, type: !154, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1585)
!1585 = !{!1586, !1587}
!1586 = !DILocalVariable(name: "sr", scope: !1584, file: !3, line: 306, type: !54)
!1587 = !DILocalVariable(name: "savedMask", scope: !1584, file: !3, line: 307, type: !61)
!1588 = !DILocation(line: 306, column: 5, scope: !1584)
!1589 = !DILocation(line: 0, scope: !1584)
!1590 = !DILocation(line: 306, column: 13, scope: !1584)
!1591 = !DILocation(line: 329, column: 17, scope: !1584)
!1592 = !DILocation(line: 330, column: 11, scope: !1593)
!1593 = distinct !DILexicalBlock(scope: !1584, file: !3, line: 330, column: 9)
!1594 = !{i8 0, i8 2}
!1595 = !DILocation(line: 330, column: 30, scope: !1593)
!1596 = !DILocation(line: 331, column: 13, scope: !1597)
!1597 = distinct !DILexicalBlock(scope: !1598, file: !3, line: 331, column: 13)
!1598 = distinct !DILexicalBlock(scope: !1593, file: !3, line: 330, column: 53)
!1599 = !DILocation(line: 331, column: 32, scope: !1597)
!1600 = !DILocation(line: 331, column: 13, scope: !1598)
!1601 = !DILocation(line: 333, column: 13, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1597, file: !3, line: 331, column: 37)
!1603 = !DILocation(line: 337, column: 19, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !1598, file: !3, line: 337, column: 13)
!1605 = !DILocation(line: 337, column: 22, scope: !1604)
!1606 = !DILocation(line: 337, column: 15, scope: !1604)
!1607 = !DILocation(line: 337, column: 13, scope: !1598)
!1608 = !DILocation(line: 339, column: 13, scope: !1609)
!1609 = distinct !DILexicalBlock(scope: !1604, file: !3, line: 337, column: 44)
!1610 = !DILocation(line: 341, column: 13, scope: !1609)
!1611 = !DILocation(line: 342, column: 21, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 342, column: 21)
!1613 = distinct !DILexicalBlock(scope: !1609, file: !3, line: 341, column: 23)
!1614 = !DILocation(line: 342, column: 40, scope: !1612)
!1615 = !DILocation(line: 342, column: 21, scope: !1613)
!1616 = !DILocation(line: 344, column: 21, scope: !1617)
!1617 = distinct !DILexicalBlock(scope: !1612, file: !3, line: 342, column: 45)
!1618 = !DILocation(line: 346, column: 27, scope: !1619)
!1619 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 346, column: 21)
!1620 = !DILocation(line: 346, column: 30, scope: !1619)
!1621 = !DILocation(line: 346, column: 23, scope: !1619)
!1622 = !DILocation(line: 346, column: 21, scope: !1613)
!1623 = distinct !{!1623, !1610, !1624}
!1624 = !DILocation(line: 349, column: 13, scope: !1609)
!1625 = !DILocation(line: 350, column: 13, scope: !1609)
!1626 = !DILocation(line: 352, column: 9, scope: !1609)
!1627 = !DILocation(line: 353, column: 13, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1604, file: !3, line: 352, column: 16)
!1629 = !DILocation(line: 356, column: 5, scope: !1584)
!1630 = !DILocation(line: 357, column: 1, scope: !1584)
!1631 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !3, file: !3, line: 359, type: !1632, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1634)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!553, !51, !61}
!1634 = !{!1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643}
!1635 = !DILocalVariable(name: "MTDData", arg: 1, scope: !1631, file: !3, line: 359, type: !51)
!1636 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !1631, file: !3, line: 359, type: !61)
!1637 = !DILocalVariable(name: "result", scope: !1631, file: !3, line: 361, type: !553)
!1638 = !DILocalVariable(name: "savedMask", scope: !1631, file: !3, line: 362, type: !61)
!1639 = !DILocalVariable(name: "status_busy", scope: !1631, file: !3, line: 363, type: !54)
!1640 = !DILocalVariable(name: "status_suspend", scope: !1631, file: !3, line: 363, type: !54)
!1641 = !DILocalVariable(name: "sr", scope: !1631, file: !3, line: 364, type: !54)
!1642 = !DILocalVariable(name: "sr1", scope: !1631, file: !3, line: 365, type: !54)
!1643 = !DILocalVariable(name: "check_status", scope: !1644, file: !3, line: 383, type: !54)
!1644 = distinct !DILexicalBlock(scope: !1645, file: !3, line: 382, column: 49)
!1645 = distinct !DILexicalBlock(scope: !1631, file: !3, line: 382, column: 9)
!1646 = !DILocation(line: 0, scope: !1631)
!1647 = !DILocation(line: 364, column: 5, scope: !1631)
!1648 = !DILocation(line: 364, column: 13, scope: !1631)
!1649 = !DILocation(line: 365, column: 5, scope: !1631)
!1650 = !DILocation(line: 365, column: 13, scope: !1631)
!1651 = !DILocation(line: 367, column: 9, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1631, file: !3, line: 367, column: 9)
!1653 = !DILocation(line: 367, column: 28, scope: !1652)
!1654 = !DILocation(line: 367, column: 9, scope: !1631)
!1655 = !DILocation(line: 368, column: 9, scope: !1656)
!1656 = distinct !DILexicalBlock(scope: !1652, file: !3, line: 367, column: 33)
!1657 = !DILocation(line: 370, column: 23, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1652, file: !3, line: 369, column: 12)
!1659 = !DILocation(line: 373, column: 9, scope: !1660)
!1660 = distinct !DILexicalBlock(scope: !1631, file: !3, line: 373, column: 9)
!1661 = !DILocation(line: 373, column: 30, scope: !1660)
!1662 = !DILocation(line: 373, column: 9, scope: !1631)
!1663 = !DILocation(line: 374, column: 9, scope: !1664)
!1664 = distinct !DILexicalBlock(scope: !1660, file: !3, line: 373, column: 35)
!1665 = !DILocation(line: 376, column: 26, scope: !1666)
!1666 = distinct !DILexicalBlock(scope: !1660, file: !3, line: 375, column: 12)
!1667 = !DILocation(line: 380, column: 17, scope: !1631)
!1668 = !DILocation(line: 382, column: 27, scope: !1645)
!1669 = !DILocation(line: 382, column: 11, scope: !1645)
!1670 = !DILocation(line: 382, column: 9, scope: !1631)
!1671 = !DILocation(line: 0, scope: !1644)
!1672 = !DILocation(line: 385, column: 13, scope: !1673)
!1673 = distinct !DILexicalBlock(scope: !1644, file: !3, line: 385, column: 13)
!1674 = !DILocation(line: 385, column: 49, scope: !1673)
!1675 = !DILocation(line: 388, column: 17, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1677, file: !3, line: 388, column: 17)
!1677 = distinct !DILexicalBlock(scope: !1673, file: !3, line: 385, column: 84)
!1678 = !DILocation(line: 388, column: 32, scope: !1676)
!1679 = !DILocation(line: 388, column: 17, scope: !1677)
!1680 = !DILocation(line: 399, column: 9, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1682, file: !3, line: 396, column: 56)
!1682 = distinct !DILexicalBlock(scope: !1683, file: !3, line: 396, column: 20)
!1683 = distinct !DILexicalBlock(scope: !1673, file: !3, line: 393, column: 20)
!1684 = !DILocation(line: 401, column: 28, scope: !1685)
!1685 = distinct !DILexicalBlock(scope: !1686, file: !3, line: 399, column: 58)
!1686 = distinct !DILexicalBlock(scope: !1682, file: !3, line: 399, column: 20)
!1687 = !DILocation(line: 402, column: 9, scope: !1685)
!1688 = !DILocation(line: 405, column: 20, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !1644, file: !3, line: 405, column: 13)
!1690 = !DILocation(line: 405, column: 35, scope: !1689)
!1691 = !DILocation(line: 405, column: 16, scope: !1689)
!1692 = !DILocation(line: 405, column: 52, scope: !1689)
!1693 = !DILocation(line: 406, column: 21, scope: !1689)
!1694 = !DILocation(line: 406, column: 38, scope: !1689)
!1695 = !DILocation(line: 407, column: 13, scope: !1696)
!1696 = distinct !DILexicalBlock(scope: !1689, file: !3, line: 406, column: 61)
!1697 = !DILocation(line: 410, column: 13, scope: !1696)
!1698 = !DILocation(line: 413, column: 9, scope: !1696)
!1699 = !DILocation(line: 414, column: 13, scope: !1700)
!1700 = distinct !DILexicalBlock(scope: !1689, file: !3, line: 413, column: 16)
!1701 = !DILocation(line: 0, scope: !1689)
!1702 = !DILocation(line: 434, column: 5, scope: !1631)
!1703 = !DILocation(line: 0, scope: !1645)
!1704 = !DILocation(line: 436, column: 1, scope: !1631)
!1705 = !DILocation(line: 435, column: 5, scope: !1631)
!1706 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !3, file: !3, line: 439, type: !1707, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1709)
!1707 = !DISubroutineType(types: !1708)
!1708 = !{!553, !51, !61, !54}
!1709 = !{!1710, !1711, !1712, !1713, !1714, !1715, !1716, !1719}
!1710 = !DILocalVariable(name: "MTDData", arg: 1, scope: !1706, file: !3, line: 439, type: !51)
!1711 = !DILocalVariable(name: "addr", arg: 2, scope: !1706, file: !3, line: 439, type: !61)
!1712 = !DILocalVariable(name: "data", arg: 3, scope: !1706, file: !3, line: 439, type: !54)
!1713 = !DILocalVariable(name: "savedMask", scope: !1706, file: !3, line: 441, type: !61)
!1714 = !DILocalVariable(name: "result", scope: !1706, file: !3, line: 442, type: !553)
!1715 = !DILocalVariable(name: "check_data", scope: !1706, file: !3, line: 443, type: !54)
!1716 = !DILocalVariable(name: "status_busy", scope: !1706, file: !3, line: 444, type: !1717)
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !55, line: 36, baseType: !1718)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !57, line: 57, baseType: !386)
!1719 = !DILocalVariable(name: "sr", scope: !1706, file: !3, line: 445, type: !54)
!1720 = !DILocation(line: 0, scope: !1706)
!1721 = !DILocation(line: 445, column: 5, scope: !1706)
!1722 = !DILocation(line: 445, column: 23, scope: !1706)
!1723 = !DILocation(line: 448, column: 9, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1706, file: !3, line: 448, column: 9)
!1725 = !DILocation(line: 448, column: 28, scope: !1724)
!1726 = !DILocation(line: 448, column: 9, scope: !1706)
!1727 = !DILocation(line: 449, column: 9, scope: !1728)
!1728 = distinct !DILexicalBlock(scope: !1724, file: !3, line: 448, column: 33)
!1729 = !DILocation(line: 451, column: 23, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1724, file: !3, line: 450, column: 12)
!1731 = !DILocation(line: 454, column: 17, scope: !1706)
!1732 = !DILocation(line: 457, column: 9, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1706, file: !3, line: 457, column: 9)
!1734 = !DILocation(line: 457, column: 9, scope: !1706)
!1735 = !DILocation(line: 458, column: 9, scope: !1736)
!1736 = distinct !DILexicalBlock(scope: !1733, file: !3, line: 457, column: 28)
!1737 = !DILocation(line: 459, column: 9, scope: !1736)
!1738 = !DILocation(line: 460, column: 9, scope: !1736)
!1739 = !DILocation(line: 461, column: 9, scope: !1736)
!1740 = !DILocation(line: 462, column: 5, scope: !1736)
!1741 = !DILocation(line: 464, column: 33, scope: !1742)
!1742 = distinct !DILexicalBlock(scope: !1733, file: !3, line: 464, column: 15)
!1743 = !DILocation(line: 464, column: 17, scope: !1742)
!1744 = !DILocation(line: 464, column: 15, scope: !1733)
!1745 = !DILocation(line: 465, column: 9, scope: !1746)
!1746 = distinct !DILexicalBlock(scope: !1742, file: !3, line: 464, column: 55)
!1747 = !DILocation(line: 467, column: 23, scope: !1746)
!1748 = !DILocation(line: 467, column: 22, scope: !1746)
!1749 = !DILocation(line: 468, column: 24, scope: !1750)
!1750 = distinct !DILexicalBlock(scope: !1746, file: !3, line: 468, column: 13)
!1751 = !DILocation(line: 474, column: 5, scope: !1706)
!1752 = !DILocation(line: 477, column: 1, scope: !1706)
!1753 = !DILocation(line: 476, column: 5, scope: !1706)
!1754 = distinct !DISubprogram(name: "GPT_ResetTimer", scope: !84, file: !84, line: 73, type: !1755, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1757)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{null, !139, !139, !69}
!1757 = !{!1758, !1759, !1760}
!1758 = !DILocalVariable(name: "timerNum", arg: 1, scope: !1754, file: !84, line: 73, type: !139)
!1759 = !DILocalVariable(name: "countValue", arg: 2, scope: !1754, file: !84, line: 73, type: !139)
!1760 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !1754, file: !84, line: 73, type: !69)
!1761 = !DILocation(line: 0, scope: !1754)
!1762 = !DILocation(line: 75, column: 5, scope: !1763)
!1763 = distinct !DILexicalBlock(scope: !1754, file: !84, line: 75, column: 5)
!1764 = !DILocation(line: 75, column: 5, scope: !1754)
!1765 = !DILocation(line: 75, column: 5, scope: !1766)
!1766 = distinct !DILexicalBlock(scope: !1763, file: !84, line: 75, column: 5)
!1767 = distinct !{!1767, !1765, !1765}
!1768 = !DILocation(line: 77, column: 9, scope: !1754)
!1769 = !DILocation(line: 78, column: 30, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1771, file: !84, line: 77, column: 24)
!1771 = distinct !DILexicalBlock(scope: !1754, file: !84, line: 77, column: 9)
!1772 = !DILocation(line: 0, scope: !1773)
!1773 = distinct !DILexicalBlock(scope: !1770, file: !84, line: 79, column: 13)
!1774 = !DILocation(line: 79, column: 13, scope: !1770)
!1775 = !DILocation(line: 80, column: 34, scope: !1776)
!1776 = distinct !DILexicalBlock(scope: !1773, file: !84, line: 79, column: 37)
!1777 = !DILocation(line: 81, column: 9, scope: !1776)
!1778 = !DILocation(line: 82, column: 34, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1773, file: !84, line: 81, column: 16)
!1780 = !DILocation(line: 85, column: 30, scope: !1781)
!1781 = distinct !DILexicalBlock(scope: !1782, file: !84, line: 84, column: 31)
!1782 = distinct !DILexicalBlock(scope: !1771, file: !84, line: 84, column: 16)
!1783 = !DILocation(line: 0, scope: !1784)
!1784 = distinct !DILexicalBlock(scope: !1781, file: !84, line: 86, column: 13)
!1785 = !DILocation(line: 86, column: 13, scope: !1781)
!1786 = !DILocation(line: 87, column: 34, scope: !1787)
!1787 = distinct !DILexicalBlock(scope: !1784, file: !84, line: 86, column: 37)
!1788 = !DILocation(line: 88, column: 9, scope: !1787)
!1789 = !DILocation(line: 89, column: 34, scope: !1790)
!1790 = distinct !DILexicalBlock(scope: !1784, file: !84, line: 88, column: 16)
!1791 = !DILocation(line: 92, column: 1, scope: !1754)
!1792 = distinct !DISubprogram(name: "GPT_Start", scope: !84, file: !84, line: 94, type: !1793, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1795)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{null, !139}
!1795 = !{!1796}
!1796 = !DILocalVariable(name: "timerNum", arg: 1, scope: !1792, file: !84, line: 94, type: !139)
!1797 = !DILocation(line: 0, scope: !1792)
!1798 = !DILocation(line: 96, column: 5, scope: !1792)
!1799 = !DILocation(line: 96, column: 5, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1801, file: !84, line: 96, column: 5)
!1801 = distinct !DILexicalBlock(scope: !1792, file: !84, line: 96, column: 5)
!1802 = distinct !{!1802, !1799, !1799}
!1803 = !DILocation(line: 99, column: 30, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1805, file: !84, line: 98, column: 24)
!1805 = distinct !DILexicalBlock(scope: !1792, file: !84, line: 98, column: 9)
!1806 = !DILocation(line: 100, column: 9, scope: !1804)
!1807 = !DILocation(line: 101, column: 5, scope: !1804)
!1808 = !DILocation(line: 102, column: 30, scope: !1809)
!1809 = distinct !DILexicalBlock(scope: !1810, file: !84, line: 101, column: 31)
!1810 = distinct !DILexicalBlock(scope: !1805, file: !84, line: 101, column: 16)
!1811 = !DILocation(line: 103, column: 9, scope: !1809)
!1812 = !DILocation(line: 104, column: 5, scope: !1809)
!1813 = !DILocation(line: 105, column: 30, scope: !1814)
!1814 = distinct !DILexicalBlock(scope: !1815, file: !84, line: 104, column: 31)
!1815 = distinct !DILexicalBlock(scope: !1810, file: !84, line: 104, column: 16)
!1816 = !DILocation(line: 106, column: 5, scope: !1814)
!1817 = !DILocation(line: 108, column: 1, scope: !1792)
!1818 = distinct !DISubprogram(name: "GPT_Stop", scope: !84, file: !84, line: 110, type: !1793, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1819)
!1819 = !{!1820}
!1820 = !DILocalVariable(name: "timerNum", arg: 1, scope: !1818, file: !84, line: 110, type: !139)
!1821 = !DILocation(line: 0, scope: !1818)
!1822 = !DILocation(line: 112, column: 9, scope: !1818)
!1823 = !DILocation(line: 113, column: 30, scope: !1824)
!1824 = distinct !DILexicalBlock(scope: !1825, file: !84, line: 112, column: 24)
!1825 = distinct !DILexicalBlock(scope: !1818, file: !84, line: 112, column: 9)
!1826 = !DILocation(line: 114, column: 30, scope: !1824)
!1827 = !DILocation(line: 115, column: 31, scope: !1824)
!1828 = !DILocation(line: 117, column: 5, scope: !1824)
!1829 = !DILocation(line: 118, column: 30, scope: !1830)
!1830 = distinct !DILexicalBlock(scope: !1831, file: !84, line: 117, column: 31)
!1831 = distinct !DILexicalBlock(scope: !1825, file: !84, line: 117, column: 16)
!1832 = !DILocation(line: 119, column: 30, scope: !1830)
!1833 = !DILocation(line: 120, column: 31, scope: !1830)
!1834 = !DILocation(line: 121, column: 5, scope: !1830)
!1835 = !DILocation(line: 122, column: 30, scope: !1836)
!1836 = distinct !DILexicalBlock(scope: !1837, file: !84, line: 121, column: 31)
!1837 = distinct !DILexicalBlock(scope: !1831, file: !84, line: 121, column: 16)
!1838 = !DILocation(line: 123, column: 5, scope: !1836)
!1839 = !DILocation(line: 124, column: 30, scope: !1840)
!1840 = distinct !DILexicalBlock(scope: !1841, file: !84, line: 123, column: 31)
!1841 = distinct !DILexicalBlock(scope: !1837, file: !84, line: 123, column: 16)
!1842 = !DILocation(line: 125, column: 5, scope: !1840)
!1843 = !DILocation(line: 128, column: 1, scope: !1818)
!1844 = distinct !DISubprogram(name: "GPT_INT_Handler", scope: !84, file: !84, line: 130, type: !626, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1845)
!1845 = !{!1846, !1847}
!1846 = !DILocalVariable(name: "irq_number", arg: 1, scope: !1844, file: !84, line: 130, type: !210)
!1847 = !DILocalVariable(name: "GPT_Status", scope: !1844, file: !84, line: 132, type: !385)
!1848 = !DILocation(line: 0, scope: !1844)
!1849 = !DILocation(line: 135, column: 18, scope: !1844)
!1850 = !DILocation(line: 136, column: 26, scope: !1844)
!1851 = !DILocation(line: 136, column: 24, scope: !1844)
!1852 = !DILocation(line: 138, column: 20, scope: !1853)
!1853 = distinct !DILexicalBlock(scope: !1844, file: !84, line: 138, column: 9)
!1854 = !DILocation(line: 138, column: 9, scope: !1844)
!1855 = !DILocation(line: 141, column: 27, scope: !1856)
!1856 = distinct !DILexicalBlock(scope: !1853, file: !84, line: 141, column: 16)
!1857 = !DILocation(line: 141, column: 16, scope: !1853)
!1858 = !DILocation(line: 0, scope: !1853)
!1859 = !DILocation(line: 145, column: 1, scope: !1844)
!1860 = distinct !DISubprogram(name: "GPT_init", scope: !84, file: !84, line: 147, type: !1861, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1863)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{null, !139, !139, !153}
!1863 = !{!1864, !1865, !1866}
!1864 = !DILocalVariable(name: "timerNum", arg: 1, scope: !1860, file: !84, line: 147, type: !139)
!1865 = !DILocalVariable(name: "speed_32us", arg: 2, scope: !1860, file: !84, line: 147, type: !139)
!1866 = !DILocalVariable(name: "GPT_Callback", arg: 3, scope: !1860, file: !84, line: 147, type: !153)
!1867 = !DILocation(line: 0, scope: !1860)
!1868 = !DILocation(line: 149, column: 5, scope: !1860)
!1869 = !DILocation(line: 149, column: 5, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !1871, file: !84, line: 149, column: 5)
!1871 = distinct !DILexicalBlock(scope: !1860, file: !84, line: 149, column: 5)
!1872 = distinct !{!1872, !1869, !1869}
!1873 = !DILocation(line: 149, column: 5, scope: !1871)
!1874 = !DILocation(line: 151, column: 23, scope: !1875)
!1875 = distinct !DILexicalBlock(scope: !1860, file: !84, line: 151, column: 9)
!1876 = !DILocation(line: 152, column: 9, scope: !1877)
!1877 = distinct !DILexicalBlock(scope: !1875, file: !84, line: 151, column: 41)
!1878 = !DILocation(line: 153, column: 9, scope: !1877)
!1879 = !DILocation(line: 154, column: 9, scope: !1877)
!1880 = !DILocation(line: 155, column: 5, scope: !1877)
!1881 = !DILocation(line: 157, column: 9, scope: !1860)
!1882 = !DILocation(line: 158, column: 37, scope: !1883)
!1883 = distinct !DILexicalBlock(scope: !1884, file: !84, line: 157, column: 24)
!1884 = distinct !DILexicalBlock(scope: !1860, file: !84, line: 157, column: 9)
!1885 = !DILocation(line: 159, column: 30, scope: !1883)
!1886 = !DILocation(line: 160, column: 45, scope: !1883)
!1887 = !DILocation(line: 160, column: 30, scope: !1883)
!1888 = !DILocation(line: 161, column: 5, scope: !1883)
!1889 = !DILocation(line: 162, column: 37, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1891, file: !84, line: 161, column: 31)
!1891 = distinct !DILexicalBlock(scope: !1884, file: !84, line: 161, column: 16)
!1892 = !DILocation(line: 163, column: 30, scope: !1890)
!1893 = !DILocation(line: 164, column: 45, scope: !1890)
!1894 = !DILocation(line: 164, column: 30, scope: !1890)
!1895 = !DILocation(line: 165, column: 5, scope: !1890)
!1896 = !DILocation(line: 166, column: 59, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !1898, file: !84, line: 165, column: 31)
!1898 = distinct !DILexicalBlock(scope: !1891, file: !84, line: 165, column: 16)
!1899 = !DILocation(line: 166, column: 45, scope: !1897)
!1900 = !DILocation(line: 166, column: 30, scope: !1897)
!1901 = !DILocation(line: 167, column: 5, scope: !1897)
!1902 = !DILocation(line: 168, column: 59, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1904, file: !84, line: 167, column: 31)
!1904 = distinct !DILexicalBlock(scope: !1898, file: !84, line: 167, column: 16)
!1905 = !DILocation(line: 168, column: 45, scope: !1903)
!1906 = !DILocation(line: 168, column: 30, scope: !1903)
!1907 = !DILocation(line: 169, column: 30, scope: !1903)
!1908 = !DILocation(line: 170, column: 5, scope: !1903)
!1909 = !DILocation(line: 171, column: 1, scope: !1860)
!1910 = distinct !DISubprogram(name: "GPT_return_current_count", scope: !84, file: !84, line: 173, type: !1911, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1913)
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!139, !139}
!1913 = !{!1914, !1915}
!1914 = !DILocalVariable(name: "timerNum", arg: 1, scope: !1910, file: !84, line: 173, type: !139)
!1915 = !DILocalVariable(name: "current_count", scope: !1910, file: !84, line: 175, type: !139)
!1916 = !DILocation(line: 0, scope: !1910)
!1917 = !DILocation(line: 177, column: 5, scope: !1910)
!1918 = !DILocation(line: 177, column: 5, scope: !1919)
!1919 = distinct !DILexicalBlock(scope: !1920, file: !84, line: 177, column: 5)
!1920 = distinct !DILexicalBlock(scope: !1910, file: !84, line: 177, column: 5)
!1921 = distinct !{!1921, !1918, !1918}
!1922 = !DILocation(line: 183, column: 5, scope: !1923)
!1923 = distinct !DILexicalBlock(scope: !1924, file: !84, line: 181, column: 31)
!1924 = distinct !DILexicalBlock(scope: !1925, file: !84, line: 181, column: 16)
!1925 = distinct !DILexicalBlock(scope: !1910, file: !84, line: 179, column: 9)
!1926 = !DILocation(line: 185, column: 5, scope: !1927)
!1927 = distinct !DILexicalBlock(scope: !1928, file: !84, line: 183, column: 31)
!1928 = distinct !DILexicalBlock(scope: !1924, file: !84, line: 183, column: 16)
!1929 = !DILocation(line: 187, column: 5, scope: !1930)
!1930 = distinct !DILexicalBlock(scope: !1931, file: !84, line: 185, column: 31)
!1931 = distinct !DILexicalBlock(scope: !1928, file: !84, line: 185, column: 16)
!1932 = !DILocation(line: 0, scope: !1925)
!1933 = !DILocation(line: 189, column: 5, scope: !1910)
!1934 = distinct !DISubprogram(name: "CM4_GPT2Init", scope: !84, file: !84, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1387)
!1935 = !DILocation(line: 195, column: 5, scope: !1934)
!1936 = !DILocation(line: 196, column: 1, scope: !1934)
!1937 = distinct !DISubprogram(name: "CM4_GPT4Init", scope: !84, file: !84, line: 198, type: !154, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !83, retainedNodes: !1387)
!1938 = !DILocation(line: 200, column: 5, scope: !1937)
!1939 = !DILocation(line: 201, column: 1, scope: !1937)
!1940 = distinct !DISubprogram(name: "halGPIO_ConfDirection", scope: !1094, file: !1094, line: 54, type: !1941, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !1943)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!1450, !159, !387}
!1943 = !{!1944, !1945, !1946, !1948}
!1944 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !1940, file: !1094, line: 54, type: !159)
!1945 = !DILocalVariable(name: "outEnable", arg: 2, scope: !1940, file: !1094, line: 54, type: !387)
!1946 = !DILocalVariable(name: "no", scope: !1940, file: !1094, line: 57, type: !1947)
!1947 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT16", file: !87, line: 60, baseType: !386)
!1948 = !DILocalVariable(name: "remainder", scope: !1940, file: !1094, line: 58, type: !1947)
!1949 = !DILocation(line: 0, scope: !1940)
!1950 = !DILocation(line: 59, column: 19, scope: !1940)
!1951 = !DILocation(line: 60, column: 17, scope: !1940)
!1952 = !DILocation(line: 61, column: 5, scope: !1940)
!1953 = !DILocation(line: 65, column: 27, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1955, file: !1094, line: 65, column: 17)
!1955 = distinct !DILexicalBlock(scope: !1940, file: !1094, line: 61, column: 17)
!1956 = !DILocation(line: 0, scope: !1954)
!1957 = !DILocation(line: 65, column: 17, scope: !1955)
!1958 = !DILocation(line: 66, column: 21, scope: !1959)
!1959 = distinct !DILexicalBlock(scope: !1954, file: !1094, line: 65, column: 33)
!1960 = !DILocation(line: 67, column: 73, scope: !1961)
!1961 = distinct !DILexicalBlock(scope: !1962, file: !1094, line: 66, column: 38)
!1962 = distinct !DILexicalBlock(scope: !1959, file: !1094, line: 66, column: 21)
!1963 = !DILocation(line: 67, column: 69, scope: !1961)
!1964 = !DILocation(line: 67, column: 66, scope: !1961)
!1965 = !DILocation(line: 68, column: 17, scope: !1961)
!1966 = !DILocation(line: 68, column: 28, scope: !1962)
!1967 = !DILocation(line: 69, column: 77, scope: !1968)
!1968 = distinct !DILexicalBlock(scope: !1969, file: !1094, line: 68, column: 45)
!1969 = distinct !DILexicalBlock(scope: !1962, file: !1094, line: 68, column: 28)
!1970 = !DILocation(line: 70, column: 77, scope: !1968)
!1971 = !DILocation(line: 71, column: 17, scope: !1968)
!1972 = !DILocation(line: 72, column: 77, scope: !1973)
!1973 = distinct !DILexicalBlock(scope: !1974, file: !1094, line: 71, column: 45)
!1974 = distinct !DILexicalBlock(scope: !1969, file: !1094, line: 71, column: 28)
!1975 = !DILocation(line: 73, column: 77, scope: !1973)
!1976 = !DILocation(line: 74, column: 17, scope: !1973)
!1977 = !DILocation(line: 75, column: 79, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1979, file: !1094, line: 74, column: 45)
!1979 = distinct !DILexicalBlock(scope: !1974, file: !1094, line: 74, column: 28)
!1980 = !DILocation(line: 76, column: 79, scope: !1978)
!1981 = !DILocation(line: 77, column: 17, scope: !1978)
!1982 = !DILocation(line: 78, column: 79, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1984, file: !1094, line: 77, column: 45)
!1984 = distinct !DILexicalBlock(scope: !1979, file: !1094, line: 77, column: 28)
!1985 = !DILocation(line: 79, column: 79, scope: !1983)
!1986 = !DILocation(line: 80, column: 17, scope: !1983)
!1987 = !DILocation(line: 81, column: 79, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1989, file: !1094, line: 80, column: 45)
!1989 = distinct !DILexicalBlock(scope: !1984, file: !1094, line: 80, column: 28)
!1990 = !DILocation(line: 82, column: 79, scope: !1988)
!1991 = !DILocation(line: 83, column: 17, scope: !1988)
!1992 = !DILocation(line: 85, column: 17, scope: !1959)
!1993 = !DILocation(line: 86, column: 13, scope: !1959)
!1994 = !DILocation(line: 88, column: 21, scope: !1995)
!1995 = distinct !DILexicalBlock(scope: !1954, file: !1094, line: 86, column: 20)
!1996 = !DILocation(line: 89, column: 72, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1998, file: !1094, line: 88, column: 38)
!1998 = distinct !DILexicalBlock(scope: !1995, file: !1094, line: 88, column: 21)
!1999 = !DILocation(line: 89, column: 66, scope: !1997)
!2000 = !DILocation(line: 90, column: 17, scope: !1997)
!2001 = !DILocation(line: 90, column: 28, scope: !1998)
!2002 = !DILocation(line: 91, column: 77, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !2004, file: !1094, line: 90, column: 45)
!2004 = distinct !DILexicalBlock(scope: !1998, file: !1094, line: 90, column: 28)
!2005 = !DILocation(line: 92, column: 17, scope: !2003)
!2006 = !DILocation(line: 93, column: 77, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !2008, file: !1094, line: 92, column: 45)
!2008 = distinct !DILexicalBlock(scope: !2004, file: !1094, line: 92, column: 28)
!2009 = !DILocation(line: 94, column: 17, scope: !2007)
!2010 = !DILocation(line: 95, column: 79, scope: !2011)
!2011 = distinct !DILexicalBlock(scope: !2012, file: !1094, line: 94, column: 45)
!2012 = distinct !DILexicalBlock(scope: !2008, file: !1094, line: 94, column: 28)
!2013 = !DILocation(line: 96, column: 17, scope: !2011)
!2014 = !DILocation(line: 97, column: 79, scope: !2015)
!2015 = distinct !DILexicalBlock(scope: !2016, file: !1094, line: 96, column: 45)
!2016 = distinct !DILexicalBlock(scope: !2012, file: !1094, line: 96, column: 28)
!2017 = !DILocation(line: 98, column: 17, scope: !2015)
!2018 = !DILocation(line: 99, column: 79, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !2020, file: !1094, line: 98, column: 45)
!2020 = distinct !DILexicalBlock(scope: !2016, file: !1094, line: 98, column: 28)
!2021 = !DILocation(line: 100, column: 17, scope: !2019)
!2022 = !DILocation(line: 103, column: 17, scope: !1995)
!2023 = !DILocation(line: 109, column: 27, scope: !2024)
!2024 = distinct !DILexicalBlock(scope: !1955, file: !1094, line: 109, column: 17)
!2025 = !DILocation(line: 0, scope: !2024)
!2026 = !DILocation(line: 109, column: 17, scope: !1955)
!2027 = !DILocation(line: 110, column: 21, scope: !2028)
!2028 = distinct !DILexicalBlock(scope: !2024, file: !1094, line: 109, column: 33)
!2029 = !DILocation(line: 111, column: 73, scope: !2030)
!2030 = distinct !DILexicalBlock(scope: !2031, file: !1094, line: 110, column: 36)
!2031 = distinct !DILexicalBlock(scope: !2028, file: !1094, line: 110, column: 21)
!2032 = !DILocation(line: 111, column: 69, scope: !2030)
!2033 = !DILocation(line: 111, column: 66, scope: !2030)
!2034 = !DILocation(line: 112, column: 17, scope: !2030)
!2035 = !DILocation(line: 113, column: 79, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !2031, file: !1094, line: 112, column: 24)
!2037 = !DILocation(line: 114, column: 79, scope: !2036)
!2038 = !DILocation(line: 117, column: 17, scope: !2028)
!2039 = !DILocation(line: 118, column: 13, scope: !2028)
!2040 = !DILocation(line: 120, column: 21, scope: !2041)
!2041 = distinct !DILexicalBlock(scope: !2024, file: !1094, line: 118, column: 20)
!2042 = !DILocation(line: 121, column: 72, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !2044, file: !1094, line: 120, column: 36)
!2044 = distinct !DILexicalBlock(scope: !2041, file: !1094, line: 120, column: 21)
!2045 = !DILocation(line: 121, column: 66, scope: !2043)
!2046 = !DILocation(line: 122, column: 17, scope: !2043)
!2047 = !DILocation(line: 123, column: 79, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !2044, file: !1094, line: 122, column: 24)
!2049 = !DILocation(line: 126, column: 17, scope: !2041)
!2050 = !DILocation(line: 133, column: 1, scope: !1940)
!2051 = distinct !DISubprogram(name: "halGPO_Write", scope: !1094, file: !1094, line: 136, type: !1941, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !2052)
!2052 = !{!2053, !2054, !2055, !2056}
!2053 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2051, file: !1094, line: 136, type: !159)
!2054 = !DILocalVariable(name: "writeValue", arg: 2, scope: !2051, file: !1094, line: 136, type: !387)
!2055 = !DILocalVariable(name: "no", scope: !2051, file: !1094, line: 138, type: !1947)
!2056 = !DILocalVariable(name: "remainder", scope: !2051, file: !1094, line: 139, type: !1947)
!2057 = !DILocation(line: 0, scope: !2051)
!2058 = !DILocation(line: 140, column: 19, scope: !2051)
!2059 = !DILocation(line: 141, column: 17, scope: !2051)
!2060 = !DILocation(line: 142, column: 5, scope: !2051)
!2061 = !DILocation(line: 145, column: 17, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !2063, file: !1094, line: 145, column: 17)
!2063 = distinct !DILexicalBlock(scope: !2051, file: !1094, line: 142, column: 17)
!2064 = !DILocation(line: 0, scope: !2062)
!2065 = !DILocation(line: 145, column: 17, scope: !2063)
!2066 = !DILocation(line: 146, column: 17, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2062, file: !1094, line: 145, column: 29)
!2068 = !DILocation(line: 147, column: 13, scope: !2067)
!2069 = !DILocation(line: 148, column: 17, scope: !2070)
!2070 = distinct !DILexicalBlock(scope: !2062, file: !1094, line: 147, column: 20)
!2071 = !DILocation(line: 153, column: 17, scope: !2072)
!2072 = distinct !DILexicalBlock(scope: !2063, file: !1094, line: 153, column: 17)
!2073 = !DILocation(line: 0, scope: !2072)
!2074 = !DILocation(line: 153, column: 17, scope: !2063)
!2075 = !DILocation(line: 154, column: 17, scope: !2076)
!2076 = distinct !DILexicalBlock(scope: !2072, file: !1094, line: 153, column: 29)
!2077 = !DILocation(line: 155, column: 13, scope: !2076)
!2078 = !DILocation(line: 156, column: 17, scope: !2079)
!2079 = distinct !DILexicalBlock(scope: !2072, file: !1094, line: 155, column: 20)
!2080 = !DILocation(line: 163, column: 1, scope: !2051)
!2081 = distinct !DISubprogram(name: "halgetGPIO_DOUT", scope: !1094, file: !1094, line: 169, type: !2082, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !2084)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{!387, !159}
!2084 = !{!2085, !2086, !2087, !2088}
!2085 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2081, file: !1094, line: 169, type: !159)
!2086 = !DILocalVariable(name: "no", scope: !2081, file: !1094, line: 171, type: !1947)
!2087 = !DILocalVariable(name: "remainder", scope: !2081, file: !1094, line: 172, type: !1947)
!2088 = !DILocalVariable(name: "dout", scope: !2081, file: !1094, line: 175, type: !387)
!2089 = !DILocation(line: 0, scope: !2081)
!2090 = !DILocation(line: 173, column: 19, scope: !2081)
!2091 = !DILocation(line: 174, column: 17, scope: !2081)
!2092 = !DILocation(line: 177, column: 5, scope: !2081)
!2093 = !DILocation(line: 183, column: 13, scope: !2094)
!2094 = distinct !DILexicalBlock(scope: !2081, file: !1094, line: 177, column: 17)
!2095 = !DILocation(line: 0, scope: !2094)
!2096 = !DILocation(line: 187, column: 5, scope: !2081)
!2097 = !DILocation(line: 188, column: 1, scope: !2081)
!2098 = distinct !DISubprogram(name: "halgetGPIO_DIN", scope: !1094, file: !1094, line: 189, type: !2082, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !2099)
!2099 = !{!2100, !2101, !2102, !2103}
!2100 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2098, file: !1094, line: 189, type: !159)
!2101 = !DILocalVariable(name: "no", scope: !2098, file: !1094, line: 191, type: !1947)
!2102 = !DILocalVariable(name: "remainder", scope: !2098, file: !1094, line: 192, type: !1947)
!2103 = !DILocalVariable(name: "din", scope: !2098, file: !1094, line: 195, type: !387)
!2104 = !DILocation(line: 0, scope: !2098)
!2105 = !DILocation(line: 193, column: 19, scope: !2098)
!2106 = !DILocation(line: 194, column: 17, scope: !2098)
!2107 = !DILocation(line: 196, column: 5, scope: !2098)
!2108 = !DILocation(line: 203, column: 13, scope: !2109)
!2109 = distinct !DILexicalBlock(scope: !2098, file: !1094, line: 196, column: 17)
!2110 = !DILocation(line: 0, scope: !2109)
!2111 = !DILocation(line: 208, column: 5, scope: !2098)
!2112 = !DILocation(line: 209, column: 1, scope: !2098)
!2113 = distinct !DISubprogram(name: "halgetGPIO_OutEnable", scope: !1094, file: !1094, line: 210, type: !2082, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !2114)
!2114 = !{!2115, !2116, !2117, !2118}
!2115 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2113, file: !1094, line: 210, type: !159)
!2116 = !DILocalVariable(name: "no", scope: !2113, file: !1094, line: 212, type: !1947)
!2117 = !DILocalVariable(name: "remainder", scope: !2113, file: !1094, line: 213, type: !1947)
!2118 = !DILocalVariable(name: "outEnable", scope: !2113, file: !1094, line: 216, type: !387)
!2119 = !DILocation(line: 0, scope: !2113)
!2120 = !DILocation(line: 214, column: 19, scope: !2113)
!2121 = !DILocation(line: 215, column: 17, scope: !2113)
!2122 = !DILocation(line: 218, column: 5, scope: !2113)
!2123 = !DILocation(line: 224, column: 13, scope: !2124)
!2124 = distinct !DILexicalBlock(scope: !2113, file: !1094, line: 218, column: 17)
!2125 = !DILocation(line: 0, scope: !2124)
!2126 = !DILocation(line: 228, column: 5, scope: !2113)
!2127 = !DILocation(line: 229, column: 1, scope: !2113)
!2128 = distinct !DISubprogram(name: "halGPIO_PullUp_SET", scope: !1094, file: !1094, line: 232, type: !2129, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !2131)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{!1450, !159}
!2131 = !{!2132, !2133, !2134}
!2132 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2128, file: !1094, line: 232, type: !159)
!2133 = !DILocalVariable(name: "no", scope: !2128, file: !1094, line: 234, type: !1947)
!2134 = !DILocalVariable(name: "remainder", scope: !2128, file: !1094, line: 235, type: !1947)
!2135 = !DILocation(line: 0, scope: !2128)
!2136 = !DILocation(line: 236, column: 19, scope: !2128)
!2137 = !DILocation(line: 237, column: 17, scope: !2128)
!2138 = !DILocation(line: 238, column: 5, scope: !2128)
!2139 = !DILocation(line: 239, column: 5, scope: !2128)
!2140 = !DILocation(line: 241, column: 27, scope: !2141)
!2141 = distinct !DILexicalBlock(scope: !2142, file: !1094, line: 241, column: 17)
!2142 = distinct !DILexicalBlock(scope: !2128, file: !1094, line: 239, column: 17)
!2143 = !DILocation(line: 241, column: 17, scope: !2142)
!2144 = !DILocation(line: 241, column: 17, scope: !2141)
!2145 = !DILocation(line: 242, column: 17, scope: !2146)
!2146 = distinct !DILexicalBlock(scope: !2141, file: !1094, line: 241, column: 34)
!2147 = !DILocation(line: 243, column: 13, scope: !2146)
!2148 = !DILocation(line: 243, column: 24, scope: !2141)
!2149 = !DILocation(line: 244, column: 73, scope: !2150)
!2150 = distinct !DILexicalBlock(scope: !2151, file: !1094, line: 243, column: 41)
!2151 = distinct !DILexicalBlock(scope: !2141, file: !1094, line: 243, column: 24)
!2152 = !DILocation(line: 245, column: 73, scope: !2150)
!2153 = !DILocation(line: 246, column: 13, scope: !2150)
!2154 = !DILocation(line: 247, column: 73, scope: !2155)
!2155 = distinct !DILexicalBlock(scope: !2156, file: !1094, line: 246, column: 41)
!2156 = distinct !DILexicalBlock(scope: !2151, file: !1094, line: 246, column: 24)
!2157 = !DILocation(line: 248, column: 73, scope: !2155)
!2158 = !DILocation(line: 249, column: 13, scope: !2155)
!2159 = !DILocation(line: 250, column: 75, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !2161, file: !1094, line: 249, column: 41)
!2161 = distinct !DILexicalBlock(scope: !2156, file: !1094, line: 249, column: 24)
!2162 = !DILocation(line: 251, column: 75, scope: !2160)
!2163 = !DILocation(line: 252, column: 13, scope: !2160)
!2164 = !DILocation(line: 253, column: 75, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2166, file: !1094, line: 252, column: 41)
!2166 = distinct !DILexicalBlock(scope: !2161, file: !1094, line: 252, column: 24)
!2167 = !DILocation(line: 254, column: 75, scope: !2165)
!2168 = !DILocation(line: 255, column: 13, scope: !2165)
!2169 = !DILocation(line: 256, column: 75, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2171, file: !1094, line: 255, column: 41)
!2171 = distinct !DILexicalBlock(scope: !2166, file: !1094, line: 255, column: 24)
!2172 = !DILocation(line: 257, column: 75, scope: !2170)
!2173 = !DILocation(line: 258, column: 13, scope: !2170)
!2174 = !DILocation(line: 261, column: 18, scope: !2175)
!2175 = distinct !DILexicalBlock(scope: !2142, file: !1094, line: 261, column: 17)
!2176 = !DILocation(line: 261, column: 17, scope: !2142)
!2177 = !DILocation(line: 262, column: 75, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2175, file: !1094, line: 261, column: 29)
!2179 = !DILocation(line: 263, column: 75, scope: !2178)
!2180 = !DILocation(line: 264, column: 13, scope: !2178)
!2181 = !DILocation(line: 265, column: 17, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !2175, file: !1094, line: 264, column: 20)
!2183 = !DILocation(line: 272, column: 1, scope: !2128)
!2184 = distinct !DISubprogram(name: "halGPIO_PullDown_RESET", scope: !1094, file: !1094, line: 359, type: !2129, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !2185)
!2185 = !{!2186, !2187, !2188}
!2186 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2184, file: !1094, line: 359, type: !159)
!2187 = !DILocalVariable(name: "no", scope: !2184, file: !1094, line: 362, type: !1947)
!2188 = !DILocalVariable(name: "remainder", scope: !2184, file: !1094, line: 363, type: !1947)
!2189 = !DILocation(line: 0, scope: !2184)
!2190 = !DILocation(line: 364, column: 19, scope: !2184)
!2191 = !DILocation(line: 365, column: 17, scope: !2184)
!2192 = !DILocation(line: 367, column: 5, scope: !2184)
!2193 = !DILocation(line: 369, column: 27, scope: !2194)
!2194 = distinct !DILexicalBlock(scope: !2195, file: !1094, line: 369, column: 17)
!2195 = distinct !DILexicalBlock(scope: !2184, file: !1094, line: 367, column: 17)
!2196 = !DILocation(line: 369, column: 17, scope: !2195)
!2197 = !DILocation(line: 369, column: 17, scope: !2194)
!2198 = !DILocation(line: 370, column: 17, scope: !2199)
!2199 = distinct !DILexicalBlock(scope: !2194, file: !1094, line: 369, column: 34)
!2200 = !DILocation(line: 371, column: 13, scope: !2199)
!2201 = !DILocation(line: 371, column: 24, scope: !2194)
!2202 = !DILocation(line: 372, column: 73, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2204, file: !1094, line: 371, column: 41)
!2204 = distinct !DILexicalBlock(scope: !2194, file: !1094, line: 371, column: 24)
!2205 = !DILocation(line: 373, column: 73, scope: !2203)
!2206 = !DILocation(line: 374, column: 13, scope: !2203)
!2207 = !DILocation(line: 375, column: 73, scope: !2208)
!2208 = distinct !DILexicalBlock(scope: !2209, file: !1094, line: 374, column: 41)
!2209 = distinct !DILexicalBlock(scope: !2204, file: !1094, line: 374, column: 24)
!2210 = !DILocation(line: 376, column: 73, scope: !2208)
!2211 = !DILocation(line: 377, column: 13, scope: !2208)
!2212 = !DILocation(line: 378, column: 75, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2214, file: !1094, line: 377, column: 41)
!2214 = distinct !DILexicalBlock(scope: !2209, file: !1094, line: 377, column: 24)
!2215 = !DILocation(line: 379, column: 75, scope: !2213)
!2216 = !DILocation(line: 380, column: 13, scope: !2213)
!2217 = !DILocation(line: 381, column: 75, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !2219, file: !1094, line: 380, column: 41)
!2219 = distinct !DILexicalBlock(scope: !2214, file: !1094, line: 380, column: 24)
!2220 = !DILocation(line: 382, column: 75, scope: !2218)
!2221 = !DILocation(line: 383, column: 13, scope: !2218)
!2222 = !DILocation(line: 384, column: 75, scope: !2223)
!2223 = distinct !DILexicalBlock(scope: !2224, file: !1094, line: 383, column: 41)
!2224 = distinct !DILexicalBlock(scope: !2219, file: !1094, line: 383, column: 24)
!2225 = !DILocation(line: 385, column: 75, scope: !2223)
!2226 = !DILocation(line: 386, column: 13, scope: !2223)
!2227 = !DILocation(line: 389, column: 18, scope: !2228)
!2228 = distinct !DILexicalBlock(scope: !2195, file: !1094, line: 389, column: 17)
!2229 = !DILocation(line: 389, column: 17, scope: !2195)
!2230 = !DILocation(line: 390, column: 75, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2228, file: !1094, line: 389, column: 29)
!2232 = !DILocation(line: 391, column: 75, scope: !2231)
!2233 = !DILocation(line: 392, column: 13, scope: !2231)
!2234 = !DILocation(line: 393, column: 17, scope: !2235)
!2235 = distinct !DILexicalBlock(scope: !2228, file: !1094, line: 392, column: 20)
!2236 = !DILocation(line: 401, column: 1, scope: !2184)
!2237 = distinct !DISubprogram(name: "halGPIO_PullUp_RESET", scope: !1094, file: !1094, line: 274, type: !2129, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !2238)
!2238 = !{!2239, !2240, !2241}
!2239 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2237, file: !1094, line: 274, type: !159)
!2240 = !DILocalVariable(name: "no", scope: !2237, file: !1094, line: 276, type: !1947)
!2241 = !DILocalVariable(name: "remainder", scope: !2237, file: !1094, line: 277, type: !1947)
!2242 = !DILocation(line: 0, scope: !2237)
!2243 = !DILocation(line: 278, column: 19, scope: !2237)
!2244 = !DILocation(line: 279, column: 17, scope: !2237)
!2245 = !DILocation(line: 281, column: 5, scope: !2237)
!2246 = !DILocation(line: 283, column: 27, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2248, file: !1094, line: 283, column: 17)
!2248 = distinct !DILexicalBlock(scope: !2237, file: !1094, line: 281, column: 17)
!2249 = !DILocation(line: 283, column: 17, scope: !2248)
!2250 = !DILocation(line: 283, column: 17, scope: !2247)
!2251 = !DILocation(line: 284, column: 17, scope: !2252)
!2252 = distinct !DILexicalBlock(scope: !2247, file: !1094, line: 283, column: 34)
!2253 = !DILocation(line: 285, column: 13, scope: !2252)
!2254 = !DILocation(line: 285, column: 24, scope: !2247)
!2255 = !DILocation(line: 286, column: 73, scope: !2256)
!2256 = distinct !DILexicalBlock(scope: !2257, file: !1094, line: 285, column: 41)
!2257 = distinct !DILexicalBlock(scope: !2247, file: !1094, line: 285, column: 24)
!2258 = !DILocation(line: 287, column: 73, scope: !2256)
!2259 = !DILocation(line: 288, column: 13, scope: !2256)
!2260 = !DILocation(line: 289, column: 73, scope: !2261)
!2261 = distinct !DILexicalBlock(scope: !2262, file: !1094, line: 288, column: 41)
!2262 = distinct !DILexicalBlock(scope: !2257, file: !1094, line: 288, column: 24)
!2263 = !DILocation(line: 290, column: 73, scope: !2261)
!2264 = !DILocation(line: 291, column: 13, scope: !2261)
!2265 = !DILocation(line: 292, column: 75, scope: !2266)
!2266 = distinct !DILexicalBlock(scope: !2267, file: !1094, line: 291, column: 41)
!2267 = distinct !DILexicalBlock(scope: !2262, file: !1094, line: 291, column: 24)
!2268 = !DILocation(line: 293, column: 75, scope: !2266)
!2269 = !DILocation(line: 294, column: 13, scope: !2266)
!2270 = !DILocation(line: 295, column: 75, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !2272, file: !1094, line: 294, column: 41)
!2272 = distinct !DILexicalBlock(scope: !2267, file: !1094, line: 294, column: 24)
!2273 = !DILocation(line: 296, column: 75, scope: !2271)
!2274 = !DILocation(line: 297, column: 13, scope: !2271)
!2275 = !DILocation(line: 298, column: 75, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2277, file: !1094, line: 297, column: 41)
!2277 = distinct !DILexicalBlock(scope: !2272, file: !1094, line: 297, column: 24)
!2278 = !DILocation(line: 299, column: 75, scope: !2276)
!2279 = !DILocation(line: 300, column: 13, scope: !2276)
!2280 = !DILocation(line: 303, column: 18, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2248, file: !1094, line: 303, column: 17)
!2282 = !DILocation(line: 303, column: 17, scope: !2248)
!2283 = !DILocation(line: 304, column: 75, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2281, file: !1094, line: 303, column: 29)
!2285 = !DILocation(line: 305, column: 75, scope: !2284)
!2286 = !DILocation(line: 306, column: 13, scope: !2284)
!2287 = !DILocation(line: 307, column: 17, scope: !2288)
!2288 = distinct !DILexicalBlock(scope: !2281, file: !1094, line: 306, column: 20)
!2289 = !DILocation(line: 314, column: 1, scope: !2237)
!2290 = distinct !DISubprogram(name: "halGPIO_PullDown_SET", scope: !1094, file: !1094, line: 316, type: !2129, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !2291)
!2291 = !{!2292, !2293, !2294}
!2292 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2290, file: !1094, line: 316, type: !159)
!2293 = !DILocalVariable(name: "no", scope: !2290, file: !1094, line: 318, type: !1947)
!2294 = !DILocalVariable(name: "remainder", scope: !2290, file: !1094, line: 319, type: !1947)
!2295 = !DILocation(line: 0, scope: !2290)
!2296 = !DILocation(line: 320, column: 19, scope: !2290)
!2297 = !DILocation(line: 321, column: 17, scope: !2290)
!2298 = !DILocation(line: 322, column: 5, scope: !2290)
!2299 = !DILocation(line: 323, column: 5, scope: !2290)
!2300 = !DILocation(line: 325, column: 27, scope: !2301)
!2301 = distinct !DILexicalBlock(scope: !2302, file: !1094, line: 325, column: 17)
!2302 = distinct !DILexicalBlock(scope: !2290, file: !1094, line: 323, column: 17)
!2303 = !DILocation(line: 325, column: 17, scope: !2302)
!2304 = !DILocation(line: 325, column: 17, scope: !2301)
!2305 = !DILocation(line: 326, column: 17, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2301, file: !1094, line: 325, column: 34)
!2307 = !DILocation(line: 327, column: 13, scope: !2306)
!2308 = !DILocation(line: 327, column: 24, scope: !2301)
!2309 = !DILocation(line: 328, column: 73, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2311, file: !1094, line: 327, column: 41)
!2311 = distinct !DILexicalBlock(scope: !2301, file: !1094, line: 327, column: 24)
!2312 = !DILocation(line: 329, column: 73, scope: !2310)
!2313 = !DILocation(line: 330, column: 13, scope: !2310)
!2314 = !DILocation(line: 331, column: 73, scope: !2315)
!2315 = distinct !DILexicalBlock(scope: !2316, file: !1094, line: 330, column: 41)
!2316 = distinct !DILexicalBlock(scope: !2311, file: !1094, line: 330, column: 24)
!2317 = !DILocation(line: 332, column: 73, scope: !2315)
!2318 = !DILocation(line: 333, column: 13, scope: !2315)
!2319 = !DILocation(line: 334, column: 75, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2321, file: !1094, line: 333, column: 41)
!2321 = distinct !DILexicalBlock(scope: !2316, file: !1094, line: 333, column: 24)
!2322 = !DILocation(line: 335, column: 75, scope: !2320)
!2323 = !DILocation(line: 336, column: 13, scope: !2320)
!2324 = !DILocation(line: 337, column: 75, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2326, file: !1094, line: 336, column: 41)
!2326 = distinct !DILexicalBlock(scope: !2321, file: !1094, line: 336, column: 24)
!2327 = !DILocation(line: 338, column: 75, scope: !2325)
!2328 = !DILocation(line: 339, column: 13, scope: !2325)
!2329 = !DILocation(line: 340, column: 75, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2331, file: !1094, line: 339, column: 41)
!2331 = distinct !DILexicalBlock(scope: !2326, file: !1094, line: 339, column: 24)
!2332 = !DILocation(line: 341, column: 75, scope: !2330)
!2333 = !DILocation(line: 342, column: 13, scope: !2330)
!2334 = !DILocation(line: 345, column: 18, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2302, file: !1094, line: 345, column: 17)
!2336 = !DILocation(line: 345, column: 17, scope: !2302)
!2337 = !DILocation(line: 346, column: 75, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2335, file: !1094, line: 345, column: 29)
!2339 = !DILocation(line: 347, column: 75, scope: !2338)
!2340 = !DILocation(line: 348, column: 13, scope: !2338)
!2341 = !DILocation(line: 349, column: 17, scope: !2342)
!2342 = distinct !DILexicalBlock(scope: !2335, file: !1094, line: 348, column: 20)
!2343 = !DILocation(line: 357, column: 1, scope: !2290)
!2344 = distinct !DISubprogram(name: "halGPIO_SetDriving", scope: !1094, file: !1094, line: 404, type: !1941, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !2345)
!2345 = !{!2346, !2347, !2348, !2349}
!2346 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2344, file: !1094, line: 404, type: !159)
!2347 = !DILocalVariable(name: "GPIO_driving", arg: 2, scope: !2344, file: !1094, line: 404, type: !387)
!2348 = !DILocalVariable(name: "no", scope: !2344, file: !1094, line: 406, type: !1947)
!2349 = !DILocalVariable(name: "remainder", scope: !2344, file: !1094, line: 407, type: !1947)
!2350 = !DILocation(line: 0, scope: !2344)
!2351 = !DILocation(line: 408, column: 19, scope: !2344)
!2352 = !DILocation(line: 409, column: 17, scope: !2344)
!2353 = !DILocation(line: 411, column: 5, scope: !2344)
!2354 = !DILocation(line: 413, column: 84, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2344, file: !1094, line: 411, column: 17)
!2356 = !DILocation(line: 413, column: 70, scope: !2355)
!2357 = !DILocation(line: 413, column: 64, scope: !2355)
!2358 = !DILocation(line: 413, column: 61, scope: !2355)
!2359 = !DILocation(line: 414, column: 79, scope: !2355)
!2360 = !DILocation(line: 414, column: 83, scope: !2355)
!2361 = !DILocation(line: 414, column: 88, scope: !2355)
!2362 = !DILocation(line: 414, column: 61, scope: !2355)
!2363 = !DILocation(line: 415, column: 13, scope: !2355)
!2364 = !DILocation(line: 417, column: 27, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2355, file: !1094, line: 417, column: 17)
!2366 = !DILocation(line: 417, column: 17, scope: !2355)
!2367 = !DILocation(line: 418, column: 88, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2365, file: !1094, line: 417, column: 33)
!2369 = !DILocation(line: 418, column: 74, scope: !2368)
!2370 = !DILocation(line: 418, column: 68, scope: !2368)
!2371 = !DILocation(line: 418, column: 65, scope: !2368)
!2372 = !DILocation(line: 419, column: 83, scope: !2368)
!2373 = !DILocation(line: 419, column: 87, scope: !2368)
!2374 = !DILocation(line: 419, column: 92, scope: !2368)
!2375 = !DILocation(line: 419, column: 65, scope: !2368)
!2376 = !DILocation(line: 420, column: 13, scope: !2368)
!2377 = !DILocation(line: 420, column: 24, scope: !2365)
!2378 = !DILocation(line: 421, column: 73, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2380, file: !1094, line: 420, column: 41)
!2380 = distinct !DILexicalBlock(scope: !2365, file: !1094, line: 420, column: 24)
!2381 = !DILocation(line: 422, column: 91, scope: !2379)
!2382 = !DILocation(line: 422, column: 100, scope: !2379)
!2383 = !DILocation(line: 422, column: 73, scope: !2379)
!2384 = !DILocation(line: 423, column: 73, scope: !2379)
!2385 = !DILocation(line: 424, column: 13, scope: !2379)
!2386 = !DILocation(line: 425, column: 73, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2388, file: !1094, line: 424, column: 41)
!2388 = distinct !DILexicalBlock(scope: !2380, file: !1094, line: 424, column: 24)
!2389 = !DILocation(line: 426, column: 91, scope: !2387)
!2390 = !DILocation(line: 426, column: 100, scope: !2387)
!2391 = !DILocation(line: 426, column: 73, scope: !2387)
!2392 = !DILocation(line: 427, column: 73, scope: !2387)
!2393 = !DILocation(line: 428, column: 13, scope: !2387)
!2394 = !DILocation(line: 429, column: 75, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2396, file: !1094, line: 428, column: 41)
!2396 = distinct !DILexicalBlock(scope: !2388, file: !1094, line: 428, column: 24)
!2397 = !DILocation(line: 430, column: 93, scope: !2395)
!2398 = !DILocation(line: 430, column: 102, scope: !2395)
!2399 = !DILocation(line: 430, column: 75, scope: !2395)
!2400 = !DILocation(line: 431, column: 75, scope: !2395)
!2401 = !DILocation(line: 432, column: 13, scope: !2395)
!2402 = !DILocation(line: 433, column: 75, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2404, file: !1094, line: 432, column: 41)
!2404 = distinct !DILexicalBlock(scope: !2396, file: !1094, line: 432, column: 24)
!2405 = !DILocation(line: 434, column: 93, scope: !2403)
!2406 = !DILocation(line: 434, column: 102, scope: !2403)
!2407 = !DILocation(line: 434, column: 75, scope: !2403)
!2408 = !DILocation(line: 435, column: 75, scope: !2403)
!2409 = !DILocation(line: 436, column: 13, scope: !2403)
!2410 = !DILocation(line: 437, column: 75, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2412, file: !1094, line: 436, column: 41)
!2412 = distinct !DILexicalBlock(scope: !2404, file: !1094, line: 436, column: 24)
!2413 = !DILocation(line: 438, column: 93, scope: !2411)
!2414 = !DILocation(line: 438, column: 102, scope: !2411)
!2415 = !DILocation(line: 438, column: 75, scope: !2411)
!2416 = !DILocation(line: 439, column: 75, scope: !2411)
!2417 = !DILocation(line: 440, column: 13, scope: !2411)
!2418 = !DILocation(line: 443, column: 18, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2355, file: !1094, line: 443, column: 17)
!2420 = !DILocation(line: 443, column: 17, scope: !2355)
!2421 = !DILocation(line: 444, column: 75, scope: !2422)
!2422 = distinct !DILexicalBlock(scope: !2419, file: !1094, line: 443, column: 29)
!2423 = !DILocation(line: 445, column: 93, scope: !2422)
!2424 = !DILocation(line: 445, column: 102, scope: !2422)
!2425 = !DILocation(line: 445, column: 75, scope: !2422)
!2426 = !DILocation(line: 446, column: 75, scope: !2422)
!2427 = !DILocation(line: 447, column: 13, scope: !2422)
!2428 = !DILocation(line: 448, column: 88, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2419, file: !1094, line: 447, column: 20)
!2430 = !DILocation(line: 448, column: 74, scope: !2429)
!2431 = !DILocation(line: 448, column: 68, scope: !2429)
!2432 = !DILocation(line: 448, column: 65, scope: !2429)
!2433 = !DILocation(line: 449, column: 83, scope: !2429)
!2434 = !DILocation(line: 449, column: 87, scope: !2429)
!2435 = !DILocation(line: 449, column: 92, scope: !2429)
!2436 = !DILocation(line: 449, column: 65, scope: !2429)
!2437 = !DILocation(line: 453, column: 84, scope: !2355)
!2438 = !DILocation(line: 453, column: 70, scope: !2355)
!2439 = !DILocation(line: 453, column: 64, scope: !2355)
!2440 = !DILocation(line: 453, column: 61, scope: !2355)
!2441 = !DILocation(line: 454, column: 79, scope: !2355)
!2442 = !DILocation(line: 454, column: 83, scope: !2355)
!2443 = !DILocation(line: 454, column: 88, scope: !2355)
!2444 = !DILocation(line: 454, column: 61, scope: !2355)
!2445 = !DILocation(line: 455, column: 13, scope: !2355)
!2446 = !DILocation(line: 460, column: 1, scope: !2344)
!2447 = distinct !DISubprogram(name: "halGPIO_GetDriving", scope: !1094, file: !1094, line: 463, type: !2448, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !2451)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{!1450, !159, !2450}
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 32)
!2451 = !{!2452, !2453, !2454, !2455, !2456}
!2452 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2447, file: !1094, line: 463, type: !159)
!2453 = !DILocalVariable(name: "GPIO_driving", arg: 2, scope: !2447, file: !1094, line: 463, type: !2450)
!2454 = !DILocalVariable(name: "no", scope: !2447, file: !1094, line: 465, type: !1947)
!2455 = !DILocalVariable(name: "remainder", scope: !2447, file: !1094, line: 466, type: !1947)
!2456 = !DILocalVariable(name: "temp", scope: !2447, file: !1094, line: 467, type: !159)
!2457 = !DILocation(line: 0, scope: !2447)
!2458 = !DILocation(line: 468, column: 19, scope: !2447)
!2459 = !DILocation(line: 469, column: 17, scope: !2447)
!2460 = !DILocation(line: 471, column: 5, scope: !2447)
!2461 = !DILocation(line: 473, column: 20, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2447, file: !1094, line: 471, column: 17)
!2463 = !DILocation(line: 474, column: 40, scope: !2462)
!2464 = !DILocation(line: 474, column: 26, scope: !2462)
!2465 = !DILocation(line: 474, column: 18, scope: !2462)
!2466 = !DILocation(line: 475, column: 40, scope: !2462)
!2467 = !DILocation(line: 475, column: 29, scope: !2462)
!2468 = !DILocation(line: 476, column: 13, scope: !2462)
!2469 = !DILocation(line: 478, column: 27, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2462, file: !1094, line: 478, column: 17)
!2471 = !DILocation(line: 478, column: 17, scope: !2462)
!2472 = !DILocation(line: 479, column: 24, scope: !2473)
!2473 = distinct !DILexicalBlock(scope: !2470, file: !1094, line: 478, column: 33)
!2474 = !DILocation(line: 480, column: 44, scope: !2473)
!2475 = !DILocation(line: 480, column: 30, scope: !2473)
!2476 = !DILocation(line: 480, column: 22, scope: !2473)
!2477 = !DILocation(line: 481, column: 44, scope: !2473)
!2478 = !DILocation(line: 481, column: 33, scope: !2473)
!2479 = !DILocation(line: 482, column: 13, scope: !2473)
!2480 = !DILocation(line: 482, column: 24, scope: !2470)
!2481 = !DILocation(line: 483, column: 24, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2483, file: !1094, line: 482, column: 41)
!2483 = distinct !DILexicalBlock(scope: !2470, file: !1094, line: 482, column: 24)
!2484 = !DILocation(line: 485, column: 53, scope: !2482)
!2485 = !DILocation(line: 485, column: 33, scope: !2482)
!2486 = !DILocation(line: 486, column: 13, scope: !2482)
!2487 = !DILocation(line: 487, column: 24, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2489, file: !1094, line: 486, column: 41)
!2489 = distinct !DILexicalBlock(scope: !2483, file: !1094, line: 486, column: 24)
!2490 = !DILocation(line: 489, column: 53, scope: !2488)
!2491 = !DILocation(line: 489, column: 33, scope: !2488)
!2492 = !DILocation(line: 490, column: 13, scope: !2488)
!2493 = !DILocation(line: 491, column: 24, scope: !2494)
!2494 = distinct !DILexicalBlock(scope: !2495, file: !1094, line: 490, column: 41)
!2495 = distinct !DILexicalBlock(scope: !2489, file: !1094, line: 490, column: 24)
!2496 = !DILocation(line: 493, column: 53, scope: !2494)
!2497 = !DILocation(line: 493, column: 33, scope: !2494)
!2498 = !DILocation(line: 494, column: 13, scope: !2494)
!2499 = !DILocation(line: 495, column: 24, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2501, file: !1094, line: 494, column: 41)
!2501 = distinct !DILexicalBlock(scope: !2495, file: !1094, line: 494, column: 24)
!2502 = !DILocation(line: 497, column: 53, scope: !2500)
!2503 = !DILocation(line: 497, column: 33, scope: !2500)
!2504 = !DILocation(line: 498, column: 13, scope: !2500)
!2505 = !DILocation(line: 499, column: 24, scope: !2506)
!2506 = distinct !DILexicalBlock(scope: !2507, file: !1094, line: 498, column: 41)
!2507 = distinct !DILexicalBlock(scope: !2501, file: !1094, line: 498, column: 24)
!2508 = !DILocation(line: 501, column: 53, scope: !2506)
!2509 = !DILocation(line: 501, column: 33, scope: !2506)
!2510 = !DILocation(line: 502, column: 13, scope: !2506)
!2511 = !DILocation(line: 505, column: 18, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2462, file: !1094, line: 505, column: 17)
!2513 = !DILocation(line: 505, column: 17, scope: !2462)
!2514 = !DILocation(line: 506, column: 24, scope: !2515)
!2515 = distinct !DILexicalBlock(scope: !2512, file: !1094, line: 505, column: 29)
!2516 = !DILocation(line: 508, column: 53, scope: !2515)
!2517 = !DILocation(line: 508, column: 33, scope: !2515)
!2518 = !DILocation(line: 509, column: 13, scope: !2515)
!2519 = !DILocation(line: 510, column: 24, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2512, file: !1094, line: 509, column: 20)
!2521 = !DILocation(line: 511, column: 44, scope: !2520)
!2522 = !DILocation(line: 511, column: 30, scope: !2520)
!2523 = !DILocation(line: 511, column: 22, scope: !2520)
!2524 = !DILocation(line: 512, column: 44, scope: !2520)
!2525 = !DILocation(line: 512, column: 33, scope: !2520)
!2526 = !DILocation(line: 516, column: 20, scope: !2462)
!2527 = !DILocation(line: 517, column: 40, scope: !2462)
!2528 = !DILocation(line: 517, column: 26, scope: !2462)
!2529 = !DILocation(line: 517, column: 18, scope: !2462)
!2530 = !DILocation(line: 518, column: 40, scope: !2462)
!2531 = !DILocation(line: 518, column: 29, scope: !2462)
!2532 = !DILocation(line: 519, column: 13, scope: !2462)
!2533 = !DILocation(line: 0, scope: !2462)
!2534 = !DILocation(line: 524, column: 1, scope: !2447)
!2535 = distinct !DISubprogram(name: "topPAD_Control_GPIO", scope: !1094, file: !1094, line: 526, type: !2536, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1093, retainedNodes: !2539)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{null, !159, !2538}
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_TOP_PAD_CONTROL_T", file: !1097, line: 1212, baseType: !1096)
!2539 = !{!2540, !2541, !2542, !2543}
!2540 = !DILocalVariable(name: "GPIO_pin", arg: 1, scope: !2535, file: !1094, line: 526, type: !159)
!2541 = !DILocalVariable(name: "ePadControl", arg: 2, scope: !2535, file: !1094, line: 526, type: !2538)
!2542 = !DILocalVariable(name: "no", scope: !2535, file: !1094, line: 529, type: !1947)
!2543 = !DILocalVariable(name: "remainder", scope: !2535, file: !1094, line: 530, type: !1947)
!2544 = !DILocation(line: 0, scope: !2535)
!2545 = !DILocation(line: 531, column: 19, scope: !2535)
!2546 = !DILocation(line: 532, column: 17, scope: !2535)
!2547 = !DILocation(line: 534, column: 9, scope: !2535)
!2548 = !DILocation(line: 536, column: 9, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2550, file: !1094, line: 534, column: 45)
!2550 = distinct !DILexicalBlock(scope: !2535, file: !1094, line: 534, column: 9)
!2551 = !DILocation(line: 538, column: 56, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2549, file: !1094, line: 536, column: 21)
!2553 = !DILocation(line: 538, column: 53, scope: !2552)
!2554 = !DILocation(line: 538, column: 47, scope: !2552)
!2555 = !DILocation(line: 539, column: 17, scope: !2552)
!2556 = !DILocation(line: 541, column: 56, scope: !2552)
!2557 = !DILocation(line: 541, column: 53, scope: !2552)
!2558 = !DILocation(line: 541, column: 47, scope: !2552)
!2559 = !DILocation(line: 542, column: 17, scope: !2552)
!2560 = !DILocation(line: 548, column: 9, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2562, file: !1094, line: 547, column: 51)
!2562 = distinct !DILexicalBlock(scope: !2550, file: !1094, line: 547, column: 16)
!2563 = !DILocation(line: 550, column: 57, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2561, file: !1094, line: 548, column: 21)
!2565 = !DILocation(line: 550, column: 54, scope: !2564)
!2566 = !DILocation(line: 550, column: 50, scope: !2564)
!2567 = !DILocation(line: 550, column: 47, scope: !2564)
!2568 = !DILocation(line: 551, column: 17, scope: !2564)
!2569 = !DILocation(line: 553, column: 57, scope: !2564)
!2570 = !DILocation(line: 553, column: 54, scope: !2564)
!2571 = !DILocation(line: 553, column: 50, scope: !2564)
!2572 = !DILocation(line: 553, column: 47, scope: !2564)
!2573 = !DILocation(line: 554, column: 17, scope: !2564)
!2574 = !DILocation(line: 560, column: 1, scope: !2535)
!2575 = distinct !DISubprogram(name: "hal_lp_connsys_get_own_enable_int", scope: !165, file: !165, line: 124, type: !215, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1387)
!2576 = !DILocation(line: 126, column: 9, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2575, file: !165, line: 126, column: 9)
!2578 = !DILocation(line: 126, column: 43, scope: !2577)
!2579 = !DILocation(line: 126, column: 9, scope: !2575)
!2580 = !DILocation(line: 127, column: 16, scope: !2581)
!2581 = distinct !DILexicalBlock(scope: !2577, file: !165, line: 126, column: 52)
!2582 = !DILocation(line: 127, column: 9, scope: !2581)
!2583 = !DILocation(line: 0, scope: !2575)
!2584 = !DILocation(line: 131, column: 1, scope: !2575)
!2585 = distinct !DISubprogram(name: "hal_lp_connsys_give_n9_own", scope: !165, file: !165, line: 134, type: !215, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1387)
!2586 = !DILocation(line: 136, column: 9, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2585, file: !165, line: 136, column: 9)
!2588 = !DILocation(line: 136, column: 36, scope: !2587)
!2589 = !DILocation(line: 136, column: 9, scope: !2585)
!2590 = !DILocation(line: 137, column: 16, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2587, file: !165, line: 136, column: 45)
!2592 = !DILocation(line: 137, column: 9, scope: !2591)
!2593 = !DILocation(line: 0, scope: !2585)
!2594 = !DILocation(line: 141, column: 1, scope: !2585)
!2595 = distinct !DISubprogram(name: "hal_lp_connsys_get_ownership", scope: !165, file: !165, line: 144, type: !215, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1387)
!2596 = !DILocation(line: 146, column: 9, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2595, file: !165, line: 146, column: 9)
!2598 = !DILocation(line: 146, column: 35, scope: !2597)
!2599 = !DILocation(line: 146, column: 9, scope: !2595)
!2600 = !DILocation(line: 147, column: 16, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2597, file: !165, line: 146, column: 44)
!2602 = !DILocation(line: 147, column: 9, scope: !2601)
!2603 = !DILocation(line: 0, scope: !2595)
!2604 = !DILocation(line: 151, column: 1, scope: !2595)
!2605 = distinct !DISubprogram(name: "hal_lp_deep_sleep_set_rgu", scope: !165, file: !165, line: 153, type: !154, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2606)
!2606 = !{!2607}
!2607 = !DILocalVariable(name: "pIOTCM4RGUMemCtrlTypeDef", scope: !2605, file: !165, line: 163, type: !176)
!2608 = !DILocation(line: 0, scope: !2605)
!2609 = !DILocation(line: 168, column: 47, scope: !2605)
!2610 = !DILocation(line: 187, column: 49, scope: !2605)
!2611 = !DILocation(line: 188, column: 49, scope: !2605)
!2612 = !DILocation(line: 191, column: 49, scope: !2605)
!2613 = !DILocation(line: 192, column: 49, scope: !2605)
!2614 = !DILocation(line: 194, column: 1, scope: !2605)
!2615 = distinct !DISubprogram(name: "hal_lp_legacy_sleep_set_rgu", scope: !165, file: !165, line: 196, type: !154, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2616)
!2616 = !{!2617}
!2617 = !DILocalVariable(name: "pIOTCM4RGUMemCtrlTypeDef", scope: !2615, file: !165, line: 206, type: !176)
!2618 = !DILocation(line: 0, scope: !2615)
!2619 = !DILocation(line: 212, column: 47, scope: !2615)
!2620 = !DILocation(line: 232, column: 49, scope: !2615)
!2621 = !DILocation(line: 233, column: 49, scope: !2615)
!2622 = !DILocation(line: 236, column: 49, scope: !2615)
!2623 = !DILocation(line: 237, column: 49, scope: !2615)
!2624 = !DILocation(line: 239, column: 1, scope: !2615)
!2625 = distinct !DISubprogram(name: "hal_lp_deep_sleep", scope: !165, file: !165, line: 241, type: !154, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2626)
!2626 = !{!2627}
!2627 = !DILocalVariable(name: "pIOTCM4RGUMemCtrlTypeDef", scope: !2625, file: !165, line: 243, type: !176)
!2628 = !DILocation(line: 0, scope: !2625)
!2629 = !DILocation(line: 246, column: 46, scope: !2625)
!2630 = !DILocation(line: 248, column: 5, scope: !2625)
!2631 = !DILocation(line: 249, column: 5, scope: !2625)
!2632 = !DILocation(line: 252, column: 44, scope: !2625)
!2633 = !DILocation(line: 259, column: 43, scope: !2625)
!2634 = !DILocation(line: 268, column: 5, scope: !2625)
!2635 = !{i64 10867}
!2636 = !DILocation(line: 270, column: 5, scope: !2625)
!2637 = !{i64 10895}
!2638 = !DILocation(line: 271, column: 5, scope: !2625)
!2639 = !{i64 10922}
!2640 = !DILocation(line: 272, column: 5, scope: !2625)
!2641 = !{i64 10949}
!2642 = !DILocation(line: 273, column: 5, scope: !2625)
!2643 = !{i64 10976}
!2644 = !DILocation(line: 274, column: 5, scope: !2625)
!2645 = !{i64 11003}
!2646 = !DILocation(line: 275, column: 5, scope: !2625)
!2647 = !{i64 11030}
!2648 = !DILocation(line: 276, column: 5, scope: !2625)
!2649 = !{i64 11057}
!2650 = !DILocation(line: 277, column: 5, scope: !2625)
!2651 = !{i64 11084}
!2652 = !DILocation(line: 278, column: 5, scope: !2625)
!2653 = !{i64 11111}
!2654 = !DILocation(line: 279, column: 5, scope: !2625)
!2655 = !{i64 11138}
!2656 = !DILocation(line: 280, column: 5, scope: !2625)
!2657 = !{i64 11165}
!2658 = !DILocation(line: 281, column: 5, scope: !2625)
!2659 = !{i64 11192}
!2660 = !DILocation(line: 282, column: 5, scope: !2625)
!2661 = !{i64 11219}
!2662 = !DILocation(line: 283, column: 5, scope: !2625)
!2663 = !{i64 11246}
!2664 = !DILocation(line: 284, column: 5, scope: !2625)
!2665 = !{i64 11273}
!2666 = !DILocation(line: 285, column: 5, scope: !2625)
!2667 = !{i64 11300}
!2668 = !DILocation(line: 286, column: 5, scope: !2625)
!2669 = !{i64 11327}
!2670 = !DILocation(line: 287, column: 5, scope: !2625)
!2671 = !{i64 11354}
!2672 = !DILocation(line: 288, column: 5, scope: !2625)
!2673 = !{i64 11381}
!2674 = !DILocation(line: 289, column: 5, scope: !2625)
!2675 = !{i64 11408}
!2676 = !DILocation(line: 290, column: 5, scope: !2625)
!2677 = !{i64 11435}
!2678 = !DILocation(line: 291, column: 5, scope: !2625)
!2679 = !{i64 11462}
!2680 = !DILocation(line: 292, column: 5, scope: !2625)
!2681 = !{i64 11489}
!2682 = !DILocation(line: 293, column: 5, scope: !2625)
!2683 = !{i64 11516}
!2684 = !DILocation(line: 294, column: 5, scope: !2625)
!2685 = !{i64 11543}
!2686 = !DILocation(line: 295, column: 5, scope: !2625)
!2687 = !{i64 11570}
!2688 = !DILocation(line: 296, column: 5, scope: !2625)
!2689 = !{i64 11597}
!2690 = !DILocation(line: 297, column: 5, scope: !2625)
!2691 = !{i64 11624}
!2692 = !DILocation(line: 298, column: 5, scope: !2625)
!2693 = !{i64 11651}
!2694 = !DILocation(line: 299, column: 5, scope: !2625)
!2695 = !{i64 11678}
!2696 = !DILocation(line: 300, column: 5, scope: !2625)
!2697 = !{i64 11705}
!2698 = !DILocation(line: 301, column: 5, scope: !2625)
!2699 = !{i64 11732}
!2700 = !DILocation(line: 303, column: 5, scope: !2625)
!2701 = !{i64 11760}
!2702 = !DILocation(line: 305, column: 5, scope: !2625)
!2703 = !{i64 11788}
!2704 = !DILocation(line: 306, column: 5, scope: !2625)
!2705 = !{i64 11815}
!2706 = !DILocation(line: 307, column: 5, scope: !2625)
!2707 = !{i64 11842}
!2708 = !DILocation(line: 308, column: 5, scope: !2625)
!2709 = !{i64 11869}
!2710 = !DILocation(line: 309, column: 5, scope: !2625)
!2711 = !{i64 11896}
!2712 = !DILocation(line: 310, column: 5, scope: !2625)
!2713 = !{i64 11923}
!2714 = !DILocation(line: 311, column: 5, scope: !2625)
!2715 = !{i64 11950}
!2716 = !DILocation(line: 312, column: 5, scope: !2625)
!2717 = !{i64 11977}
!2718 = !DILocation(line: 313, column: 5, scope: !2625)
!2719 = !{i64 12004}
!2720 = !DILocation(line: 314, column: 5, scope: !2625)
!2721 = !{i64 12031}
!2722 = !DILocation(line: 315, column: 5, scope: !2625)
!2723 = !{i64 12058}
!2724 = !DILocation(line: 316, column: 5, scope: !2625)
!2725 = !{i64 12085}
!2726 = !DILocation(line: 317, column: 5, scope: !2625)
!2727 = !{i64 12112}
!2728 = !DILocation(line: 318, column: 5, scope: !2625)
!2729 = !{i64 12139}
!2730 = !DILocation(line: 319, column: 5, scope: !2625)
!2731 = !{i64 12166}
!2732 = !DILocation(line: 320, column: 5, scope: !2625)
!2733 = !{i64 12193}
!2734 = !DILocation(line: 321, column: 5, scope: !2625)
!2735 = !{i64 12220}
!2736 = !DILocation(line: 322, column: 5, scope: !2625)
!2737 = !{i64 12247}
!2738 = !DILocation(line: 323, column: 5, scope: !2625)
!2739 = !{i64 12274}
!2740 = !DILocation(line: 324, column: 5, scope: !2625)
!2741 = !{i64 12301}
!2742 = !DILocation(line: 325, column: 5, scope: !2625)
!2743 = !{i64 12328}
!2744 = !DILocation(line: 326, column: 5, scope: !2625)
!2745 = !{i64 12355}
!2746 = !DILocation(line: 327, column: 5, scope: !2625)
!2747 = !{i64 12382}
!2748 = !DILocation(line: 328, column: 5, scope: !2625)
!2749 = !{i64 12409}
!2750 = !DILocation(line: 329, column: 5, scope: !2625)
!2751 = !{i64 12436}
!2752 = !DILocation(line: 330, column: 5, scope: !2625)
!2753 = !{i64 12463}
!2754 = !DILocation(line: 331, column: 5, scope: !2625)
!2755 = !{i64 12490}
!2756 = !DILocation(line: 332, column: 5, scope: !2625)
!2757 = !{i64 12517}
!2758 = !DILocation(line: 333, column: 5, scope: !2625)
!2759 = !{i64 12544}
!2760 = !DILocation(line: 334, column: 5, scope: !2625)
!2761 = !{i64 12571}
!2762 = !DILocation(line: 335, column: 5, scope: !2625)
!2763 = !{i64 12598}
!2764 = !DILocation(line: 336, column: 5, scope: !2625)
!2765 = !{i64 12625}
!2766 = !DILocation(line: 338, column: 5, scope: !2625)
!2767 = !{i64 12653}
!2768 = !DILocation(line: 344, column: 43, scope: !2625)
!2769 = !DILocation(line: 345, column: 43, scope: !2625)
!2770 = !DILocation(line: 350, column: 1, scope: !2625)
!2771 = distinct !DISubprogram(name: "hal_lp_cm4_hclk_switch", scope: !165, file: !165, line: 90, type: !2772, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2775)
!2772 = !DISubroutineType(types: !2773)
!2773 = !{null, !2774}
!2774 = !DIDerivedType(tag: DW_TAG_typedef, name: "lhal_lp_cm4_hclk_t", file: !168, line: 81, baseType: !167)
!2775 = !{!2776, !2777, !2778}
!2776 = !DILocalVariable(name: "cm4_hclk", arg: 1, scope: !2771, file: !165, line: 90, type: !2774)
!2777 = !DILocalVariable(name: "cr_value", scope: !2771, file: !165, line: 92, type: !159)
!2778 = !DILocalVariable(name: "set_value", scope: !2771, file: !165, line: 93, type: !387)
!2779 = !DILocation(line: 0, scope: !2771)
!2780 = !DILocation(line: 118, column: 16, scope: !2771)
!2781 = !DILocation(line: 118, column: 47, scope: !2771)
!2782 = !DILocation(line: 120, column: 36, scope: !2771)
!2783 = !DILocation(line: 121, column: 1, scope: !2771)
!2784 = distinct !DISubprogram(name: "hal_lp_legacy_sleep", scope: !165, file: !165, line: 353, type: !154, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2785)
!2785 = !{!2786}
!2786 = !DILocalVariable(name: "pIOTCM4RGUMemCtrlTypeDef", scope: !2784, file: !165, line: 355, type: !176)
!2787 = !DILocation(line: 0, scope: !2784)
!2788 = !DILocation(line: 358, column: 46, scope: !2784)
!2789 = !DILocation(line: 360, column: 5, scope: !2784)
!2790 = !DILocation(line: 361, column: 5, scope: !2784)
!2791 = !DILocation(line: 364, column: 44, scope: !2784)
!2792 = !DILocation(line: 371, column: 43, scope: !2784)
!2793 = !DILocation(line: 375, column: 5, scope: !2784)
!2794 = !{i64 13960}
!2795 = !DILocation(line: 377, column: 5, scope: !2784)
!2796 = !{i64 13988}
!2797 = !DILocation(line: 378, column: 5, scope: !2784)
!2798 = !{i64 14015}
!2799 = !DILocation(line: 379, column: 5, scope: !2784)
!2800 = !{i64 14042}
!2801 = !DILocation(line: 380, column: 5, scope: !2784)
!2802 = !{i64 14069}
!2803 = !DILocation(line: 381, column: 5, scope: !2784)
!2804 = !{i64 14096}
!2805 = !DILocation(line: 382, column: 5, scope: !2784)
!2806 = !{i64 14123}
!2807 = !DILocation(line: 383, column: 5, scope: !2784)
!2808 = !{i64 14150}
!2809 = !DILocation(line: 384, column: 5, scope: !2784)
!2810 = !{i64 14177}
!2811 = !DILocation(line: 385, column: 5, scope: !2784)
!2812 = !{i64 14204}
!2813 = !DILocation(line: 386, column: 5, scope: !2784)
!2814 = !{i64 14231}
!2815 = !DILocation(line: 387, column: 5, scope: !2784)
!2816 = !{i64 14258}
!2817 = !DILocation(line: 388, column: 5, scope: !2784)
!2818 = !{i64 14285}
!2819 = !DILocation(line: 389, column: 5, scope: !2784)
!2820 = !{i64 14312}
!2821 = !DILocation(line: 390, column: 5, scope: !2784)
!2822 = !{i64 14339}
!2823 = !DILocation(line: 391, column: 5, scope: !2784)
!2824 = !{i64 14366}
!2825 = !DILocation(line: 392, column: 5, scope: !2784)
!2826 = !{i64 14393}
!2827 = !DILocation(line: 393, column: 5, scope: !2784)
!2828 = !{i64 14420}
!2829 = !DILocation(line: 394, column: 5, scope: !2784)
!2830 = !{i64 14447}
!2831 = !DILocation(line: 395, column: 5, scope: !2784)
!2832 = !{i64 14474}
!2833 = !DILocation(line: 396, column: 5, scope: !2784)
!2834 = !{i64 14501}
!2835 = !DILocation(line: 397, column: 5, scope: !2784)
!2836 = !{i64 14528}
!2837 = !DILocation(line: 398, column: 5, scope: !2784)
!2838 = !{i64 14555}
!2839 = !DILocation(line: 399, column: 5, scope: !2784)
!2840 = !{i64 14582}
!2841 = !DILocation(line: 400, column: 5, scope: !2784)
!2842 = !{i64 14609}
!2843 = !DILocation(line: 401, column: 5, scope: !2784)
!2844 = !{i64 14636}
!2845 = !DILocation(line: 402, column: 5, scope: !2784)
!2846 = !{i64 14663}
!2847 = !DILocation(line: 403, column: 5, scope: !2784)
!2848 = !{i64 14690}
!2849 = !DILocation(line: 404, column: 5, scope: !2784)
!2850 = !{i64 14717}
!2851 = !DILocation(line: 405, column: 5, scope: !2784)
!2852 = !{i64 14744}
!2853 = !DILocation(line: 406, column: 5, scope: !2784)
!2854 = !{i64 14771}
!2855 = !DILocation(line: 407, column: 5, scope: !2784)
!2856 = !{i64 14798}
!2857 = !DILocation(line: 408, column: 5, scope: !2784)
!2858 = !{i64 14825}
!2859 = !DILocation(line: 410, column: 5, scope: !2784)
!2860 = !{i64 14853}
!2861 = !DILocation(line: 412, column: 5, scope: !2784)
!2862 = !{i64 14881}
!2863 = !DILocation(line: 413, column: 5, scope: !2784)
!2864 = !{i64 14908}
!2865 = !DILocation(line: 414, column: 5, scope: !2784)
!2866 = !{i64 14935}
!2867 = !DILocation(line: 415, column: 5, scope: !2784)
!2868 = !{i64 14962}
!2869 = !DILocation(line: 416, column: 5, scope: !2784)
!2870 = !{i64 14989}
!2871 = !DILocation(line: 417, column: 5, scope: !2784)
!2872 = !{i64 15016}
!2873 = !DILocation(line: 418, column: 5, scope: !2784)
!2874 = !{i64 15043}
!2875 = !DILocation(line: 419, column: 5, scope: !2784)
!2876 = !{i64 15070}
!2877 = !DILocation(line: 420, column: 5, scope: !2784)
!2878 = !{i64 15097}
!2879 = !DILocation(line: 421, column: 5, scope: !2784)
!2880 = !{i64 15124}
!2881 = !DILocation(line: 422, column: 5, scope: !2784)
!2882 = !{i64 15151}
!2883 = !DILocation(line: 423, column: 5, scope: !2784)
!2884 = !{i64 15178}
!2885 = !DILocation(line: 424, column: 5, scope: !2784)
!2886 = !{i64 15205}
!2887 = !DILocation(line: 425, column: 5, scope: !2784)
!2888 = !{i64 15232}
!2889 = !DILocation(line: 426, column: 5, scope: !2784)
!2890 = !{i64 15259}
!2891 = !DILocation(line: 427, column: 5, scope: !2784)
!2892 = !{i64 15286}
!2893 = !DILocation(line: 428, column: 5, scope: !2784)
!2894 = !{i64 15313}
!2895 = !DILocation(line: 429, column: 5, scope: !2784)
!2896 = !{i64 15340}
!2897 = !DILocation(line: 430, column: 5, scope: !2784)
!2898 = !{i64 15367}
!2899 = !DILocation(line: 431, column: 5, scope: !2784)
!2900 = !{i64 15394}
!2901 = !DILocation(line: 432, column: 5, scope: !2784)
!2902 = !{i64 15421}
!2903 = !DILocation(line: 433, column: 5, scope: !2784)
!2904 = !{i64 15448}
!2905 = !DILocation(line: 434, column: 5, scope: !2784)
!2906 = !{i64 15475}
!2907 = !DILocation(line: 435, column: 5, scope: !2784)
!2908 = !{i64 15502}
!2909 = !DILocation(line: 436, column: 5, scope: !2784)
!2910 = !{i64 15529}
!2911 = !DILocation(line: 437, column: 5, scope: !2784)
!2912 = !{i64 15556}
!2913 = !DILocation(line: 438, column: 5, scope: !2784)
!2914 = !{i64 15583}
!2915 = !DILocation(line: 439, column: 5, scope: !2784)
!2916 = !{i64 15610}
!2917 = !DILocation(line: 440, column: 5, scope: !2784)
!2918 = !{i64 15637}
!2919 = !DILocation(line: 441, column: 5, scope: !2784)
!2920 = !{i64 15664}
!2921 = !DILocation(line: 442, column: 5, scope: !2784)
!2922 = !{i64 15691}
!2923 = !DILocation(line: 443, column: 5, scope: !2784)
!2924 = !{i64 15718}
!2925 = !DILocation(line: 445, column: 5, scope: !2784)
!2926 = !{i64 15746}
!2927 = !DILocation(line: 447, column: 43, scope: !2784)
!2928 = !DILocation(line: 448, column: 43, scope: !2784)
!2929 = !DILocation(line: 449, column: 1, scope: !2784)
!2930 = distinct !DISubprogram(name: "hal_lp_handle_intr", scope: !165, file: !165, line: 459, type: !154, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1387)
!2931 = !DILocation(line: 461, column: 5, scope: !2930)
!2932 = !DILocation(line: 462, column: 5, scope: !2930)
!2933 = !DILocation(line: 463, column: 5, scope: !2930)
!2934 = !DILocation(line: 464, column: 1, scope: !2930)
!2935 = distinct !DISubprogram(name: "hal_lp_wic_isr", scope: !165, file: !165, line: 451, type: !626, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !2936)
!2936 = !{!2937}
!2937 = !DILocalVariable(name: "irq_number", arg: 1, scope: !2935, file: !165, line: 451, type: !210)
!2938 = !DILocation(line: 0, scope: !2935)
!2939 = !DILocation(line: 454, column: 37, scope: !2935)
!2940 = !DILocation(line: 456, column: 23, scope: !2935)
!2941 = !DILocation(line: 457, column: 1, scope: !2935)
!2942 = distinct !DISubprogram(name: "hal_lp_get_wic_wakeup", scope: !165, file: !165, line: 466, type: !223, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1387)
!2943 = !DILocation(line: 468, column: 12, scope: !2942)
!2944 = !DILocation(line: 468, column: 5, scope: !2942)
!2945 = distinct !DISubprogram(name: "hal_lp_get_wic_status", scope: !165, file: !165, line: 471, type: !1368, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !164, retainedNodes: !1387)
!2946 = !DILocation(line: 473, column: 13, scope: !2945)
!2947 = !DILocation(line: 473, column: 48, scope: !2945)
!2948 = !DILocation(line: 473, column: 5, scope: !2945)
!2949 = distinct !DISubprogram(name: "halPinmuxTopOnPadFunc", scope: !1103, file: !1103, line: 85, type: !2950, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1102, retainedNodes: !2954)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!2952, !2953, !387}
!2952 = !DIDerivedType(tag: DW_TAG_typedef, name: "VOID", file: !87, line: 79, baseType: null)
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENUM_PAD_NAME_T", file: !1106, line: 225, baseType: !1105)
!2954 = !{!2955, !2956, !2957}
!2955 = !DILocalVariable(name: "ePadIndex", arg: 1, scope: !2949, file: !1103, line: 85, type: !2953)
!2956 = !DILocalVariable(name: "ucFunc", arg: 2, scope: !2949, file: !1103, line: 85, type: !387)
!2957 = !DILocalVariable(name: "temp", scope: !2949, file: !1103, line: 87, type: !61)
!2958 = !DILocation(line: 0, scope: !2949)
!2959 = !DILocation(line: 88, column: 5, scope: !2949)
!2960 = !DILocation(line: 91, column: 20, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2949, file: !1103, line: 88, column: 24)
!2962 = !DILocation(line: 92, column: 18, scope: !2961)
!2963 = !DILocation(line: 93, column: 66, scope: !2961)
!2964 = !DILocation(line: 93, column: 63, scope: !2961)
!2965 = !DILocation(line: 93, column: 56, scope: !2961)
!2966 = !DILocation(line: 94, column: 13, scope: !2961)
!2967 = !DILocation(line: 97, column: 20, scope: !2961)
!2968 = !DILocation(line: 98, column: 18, scope: !2961)
!2969 = !DILocation(line: 99, column: 67, scope: !2961)
!2970 = !DILocation(line: 99, column: 74, scope: !2961)
!2971 = !DILocation(line: 99, column: 64, scope: !2961)
!2972 = !DILocation(line: 99, column: 56, scope: !2961)
!2973 = !DILocation(line: 100, column: 13, scope: !2961)
!2974 = !DILocation(line: 103, column: 20, scope: !2961)
!2975 = !DILocation(line: 104, column: 18, scope: !2961)
!2976 = !DILocation(line: 105, column: 67, scope: !2961)
!2977 = !DILocation(line: 105, column: 74, scope: !2961)
!2978 = !DILocation(line: 105, column: 64, scope: !2961)
!2979 = !DILocation(line: 105, column: 56, scope: !2961)
!2980 = !DILocation(line: 106, column: 13, scope: !2961)
!2981 = !DILocation(line: 109, column: 20, scope: !2961)
!2982 = !DILocation(line: 110, column: 18, scope: !2961)
!2983 = !DILocation(line: 111, column: 67, scope: !2961)
!2984 = !DILocation(line: 111, column: 74, scope: !2961)
!2985 = !DILocation(line: 111, column: 64, scope: !2961)
!2986 = !DILocation(line: 111, column: 56, scope: !2961)
!2987 = !DILocation(line: 112, column: 13, scope: !2961)
!2988 = !DILocation(line: 115, column: 20, scope: !2961)
!2989 = !DILocation(line: 116, column: 18, scope: !2961)
!2990 = !DILocation(line: 117, column: 67, scope: !2961)
!2991 = !DILocation(line: 117, column: 74, scope: !2961)
!2992 = !DILocation(line: 117, column: 64, scope: !2961)
!2993 = !DILocation(line: 117, column: 56, scope: !2961)
!2994 = !DILocation(line: 118, column: 13, scope: !2961)
!2995 = !DILocation(line: 121, column: 20, scope: !2961)
!2996 = !DILocation(line: 122, column: 18, scope: !2961)
!2997 = !DILocation(line: 123, column: 67, scope: !2961)
!2998 = !DILocation(line: 123, column: 74, scope: !2961)
!2999 = !DILocation(line: 123, column: 64, scope: !2961)
!3000 = !DILocation(line: 123, column: 56, scope: !2961)
!3001 = !DILocation(line: 124, column: 13, scope: !2961)
!3002 = !DILocation(line: 127, column: 20, scope: !2961)
!3003 = !DILocation(line: 128, column: 18, scope: !2961)
!3004 = !DILocation(line: 129, column: 67, scope: !2961)
!3005 = !DILocation(line: 129, column: 74, scope: !2961)
!3006 = !DILocation(line: 129, column: 64, scope: !2961)
!3007 = !DILocation(line: 129, column: 56, scope: !2961)
!3008 = !DILocation(line: 130, column: 13, scope: !2961)
!3009 = !DILocation(line: 133, column: 20, scope: !2961)
!3010 = !DILocation(line: 134, column: 18, scope: !2961)
!3011 = !DILocation(line: 135, column: 67, scope: !2961)
!3012 = !DILocation(line: 135, column: 74, scope: !2961)
!3013 = !DILocation(line: 135, column: 64, scope: !2961)
!3014 = !DILocation(line: 135, column: 56, scope: !2961)
!3015 = !DILocation(line: 136, column: 13, scope: !2961)
!3016 = !DILocation(line: 139, column: 20, scope: !2961)
!3017 = !DILocation(line: 140, column: 18, scope: !2961)
!3018 = !DILocation(line: 141, column: 67, scope: !2961)
!3019 = !DILocation(line: 141, column: 64, scope: !2961)
!3020 = !DILocation(line: 141, column: 56, scope: !2961)
!3021 = !DILocation(line: 142, column: 13, scope: !2961)
!3022 = !DILocation(line: 145, column: 20, scope: !2961)
!3023 = !DILocation(line: 146, column: 18, scope: !2961)
!3024 = !DILocation(line: 147, column: 67, scope: !2961)
!3025 = !DILocation(line: 147, column: 74, scope: !2961)
!3026 = !DILocation(line: 147, column: 64, scope: !2961)
!3027 = !DILocation(line: 147, column: 56, scope: !2961)
!3028 = !DILocation(line: 148, column: 13, scope: !2961)
!3029 = !DILocation(line: 151, column: 20, scope: !2961)
!3030 = !DILocation(line: 152, column: 18, scope: !2961)
!3031 = !DILocation(line: 153, column: 67, scope: !2961)
!3032 = !DILocation(line: 153, column: 74, scope: !2961)
!3033 = !DILocation(line: 153, column: 64, scope: !2961)
!3034 = !DILocation(line: 153, column: 56, scope: !2961)
!3035 = !DILocation(line: 154, column: 13, scope: !2961)
!3036 = !DILocation(line: 157, column: 20, scope: !2961)
!3037 = !DILocation(line: 158, column: 18, scope: !2961)
!3038 = !DILocation(line: 159, column: 67, scope: !2961)
!3039 = !DILocation(line: 159, column: 74, scope: !2961)
!3040 = !DILocation(line: 159, column: 64, scope: !2961)
!3041 = !DILocation(line: 159, column: 56, scope: !2961)
!3042 = !DILocation(line: 160, column: 29, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !2961, file: !1103, line: 160, column: 17)
!3044 = !DILocation(line: 161, column: 17, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3043, file: !1103, line: 160, column: 60)
!3046 = !DILocation(line: 162, column: 13, scope: !3045)
!3047 = !DILocation(line: 166, column: 20, scope: !2961)
!3048 = !DILocation(line: 167, column: 18, scope: !2961)
!3049 = !DILocation(line: 168, column: 67, scope: !2961)
!3050 = !DILocation(line: 168, column: 74, scope: !2961)
!3051 = !DILocation(line: 168, column: 64, scope: !2961)
!3052 = !DILocation(line: 168, column: 56, scope: !2961)
!3053 = !DILocation(line: 169, column: 29, scope: !3054)
!3054 = distinct !DILexicalBlock(scope: !2961, file: !1103, line: 169, column: 17)
!3055 = !DILocation(line: 170, column: 17, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3054, file: !1103, line: 169, column: 45)
!3057 = !DILocation(line: 171, column: 13, scope: !3056)
!3058 = !DILocation(line: 175, column: 20, scope: !2961)
!3059 = !DILocation(line: 176, column: 18, scope: !2961)
!3060 = !DILocation(line: 177, column: 67, scope: !2961)
!3061 = !DILocation(line: 177, column: 74, scope: !2961)
!3062 = !DILocation(line: 177, column: 64, scope: !2961)
!3063 = !DILocation(line: 177, column: 56, scope: !2961)
!3064 = !DILocation(line: 178, column: 19, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !2961, file: !1103, line: 178, column: 17)
!3066 = !DILocation(line: 178, column: 17, scope: !2961)
!3067 = !DILocation(line: 179, column: 17, scope: !3068)
!3068 = distinct !DILexicalBlock(scope: !3065, file: !1103, line: 178, column: 30)
!3069 = !DILocation(line: 180, column: 13, scope: !3068)
!3070 = !DILocation(line: 184, column: 20, scope: !2961)
!3071 = !DILocation(line: 185, column: 18, scope: !2961)
!3072 = !DILocation(line: 186, column: 67, scope: !2961)
!3073 = !DILocation(line: 186, column: 74, scope: !2961)
!3074 = !DILocation(line: 186, column: 64, scope: !2961)
!3075 = !DILocation(line: 186, column: 56, scope: !2961)
!3076 = !DILocation(line: 187, column: 29, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !2961, file: !1103, line: 187, column: 17)
!3078 = !DILocation(line: 188, column: 17, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3077, file: !1103, line: 187, column: 45)
!3080 = !DILocation(line: 189, column: 13, scope: !3079)
!3081 = !DILocation(line: 193, column: 20, scope: !2961)
!3082 = !DILocation(line: 194, column: 18, scope: !2961)
!3083 = !DILocation(line: 195, column: 67, scope: !2961)
!3084 = !DILocation(line: 195, column: 74, scope: !2961)
!3085 = !DILocation(line: 195, column: 64, scope: !2961)
!3086 = !DILocation(line: 195, column: 56, scope: !2961)
!3087 = !DILocation(line: 196, column: 29, scope: !3088)
!3088 = distinct !DILexicalBlock(scope: !2961, file: !1103, line: 196, column: 17)
!3089 = !DILocation(line: 197, column: 17, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3088, file: !1103, line: 196, column: 45)
!3091 = !DILocation(line: 198, column: 13, scope: !3090)
!3092 = !DILocation(line: 202, column: 20, scope: !2961)
!3093 = !DILocation(line: 203, column: 18, scope: !2961)
!3094 = !DILocation(line: 204, column: 67, scope: !2961)
!3095 = !DILocation(line: 204, column: 64, scope: !2961)
!3096 = !DILocation(line: 204, column: 56, scope: !2961)
!3097 = !DILocation(line: 205, column: 29, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !2961, file: !1103, line: 205, column: 17)
!3099 = !DILocation(line: 206, column: 17, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3098, file: !1103, line: 205, column: 45)
!3101 = !DILocation(line: 207, column: 13, scope: !3100)
!3102 = !DILocation(line: 211, column: 20, scope: !2961)
!3103 = !DILocation(line: 212, column: 18, scope: !2961)
!3104 = !DILocation(line: 213, column: 67, scope: !2961)
!3105 = !DILocation(line: 213, column: 74, scope: !2961)
!3106 = !DILocation(line: 213, column: 64, scope: !2961)
!3107 = !DILocation(line: 213, column: 56, scope: !2961)
!3108 = !DILocation(line: 214, column: 13, scope: !2961)
!3109 = !DILocation(line: 217, column: 20, scope: !2961)
!3110 = !DILocation(line: 218, column: 18, scope: !2961)
!3111 = !DILocation(line: 219, column: 67, scope: !2961)
!3112 = !DILocation(line: 219, column: 74, scope: !2961)
!3113 = !DILocation(line: 219, column: 64, scope: !2961)
!3114 = !DILocation(line: 219, column: 56, scope: !2961)
!3115 = !DILocation(line: 220, column: 13, scope: !2961)
!3116 = !DILocation(line: 223, column: 20, scope: !2961)
!3117 = !DILocation(line: 224, column: 18, scope: !2961)
!3118 = !DILocation(line: 225, column: 67, scope: !2961)
!3119 = !DILocation(line: 225, column: 74, scope: !2961)
!3120 = !DILocation(line: 225, column: 64, scope: !2961)
!3121 = !DILocation(line: 225, column: 56, scope: !2961)
!3122 = !DILocation(line: 226, column: 13, scope: !2961)
!3123 = !DILocation(line: 229, column: 20, scope: !2961)
!3124 = !DILocation(line: 230, column: 18, scope: !2961)
!3125 = !DILocation(line: 231, column: 67, scope: !2961)
!3126 = !DILocation(line: 231, column: 74, scope: !2961)
!3127 = !DILocation(line: 231, column: 64, scope: !2961)
!3128 = !DILocation(line: 231, column: 56, scope: !2961)
!3129 = !DILocation(line: 232, column: 13, scope: !2961)
!3130 = !DILocation(line: 235, column: 20, scope: !2961)
!3131 = !DILocation(line: 236, column: 18, scope: !2961)
!3132 = !DILocation(line: 237, column: 66, scope: !2961)
!3133 = !DILocation(line: 237, column: 73, scope: !2961)
!3134 = !DILocation(line: 237, column: 63, scope: !2961)
!3135 = !DILocation(line: 237, column: 56, scope: !2961)
!3136 = !DILocation(line: 238, column: 13, scope: !2961)
!3137 = !DILocation(line: 241, column: 20, scope: !2961)
!3138 = !DILocation(line: 242, column: 18, scope: !2961)
!3139 = !DILocation(line: 243, column: 67, scope: !2961)
!3140 = !DILocation(line: 243, column: 74, scope: !2961)
!3141 = !DILocation(line: 243, column: 64, scope: !2961)
!3142 = !DILocation(line: 243, column: 56, scope: !2961)
!3143 = !DILocation(line: 244, column: 13, scope: !2961)
!3144 = !DILocation(line: 247, column: 20, scope: !2961)
!3145 = !DILocation(line: 248, column: 18, scope: !2961)
!3146 = !DILocation(line: 249, column: 67, scope: !2961)
!3147 = !DILocation(line: 249, column: 74, scope: !2961)
!3148 = !DILocation(line: 249, column: 64, scope: !2961)
!3149 = !DILocation(line: 249, column: 56, scope: !2961)
!3150 = !DILocation(line: 250, column: 13, scope: !2961)
!3151 = !DILocation(line: 253, column: 20, scope: !2961)
!3152 = !DILocation(line: 254, column: 18, scope: !2961)
!3153 = !DILocation(line: 255, column: 67, scope: !2961)
!3154 = !DILocation(line: 255, column: 74, scope: !2961)
!3155 = !DILocation(line: 255, column: 64, scope: !2961)
!3156 = !DILocation(line: 255, column: 56, scope: !2961)
!3157 = !DILocation(line: 256, column: 13, scope: !2961)
!3158 = !DILocation(line: 259, column: 20, scope: !2961)
!3159 = !DILocation(line: 260, column: 18, scope: !2961)
!3160 = !DILocation(line: 261, column: 67, scope: !2961)
!3161 = !DILocation(line: 261, column: 74, scope: !2961)
!3162 = !DILocation(line: 261, column: 64, scope: !2961)
!3163 = !DILocation(line: 261, column: 56, scope: !2961)
!3164 = !DILocation(line: 262, column: 13, scope: !2961)
!3165 = !DILocation(line: 265, column: 20, scope: !2961)
!3166 = !DILocation(line: 266, column: 18, scope: !2961)
!3167 = !DILocation(line: 267, column: 67, scope: !2961)
!3168 = !DILocation(line: 267, column: 74, scope: !2961)
!3169 = !DILocation(line: 267, column: 64, scope: !2961)
!3170 = !DILocation(line: 267, column: 56, scope: !2961)
!3171 = !DILocation(line: 268, column: 13, scope: !2961)
!3172 = !DILocation(line: 271, column: 20, scope: !2961)
!3173 = !DILocation(line: 272, column: 18, scope: !2961)
!3174 = !DILocation(line: 273, column: 67, scope: !2961)
!3175 = !DILocation(line: 273, column: 74, scope: !2961)
!3176 = !DILocation(line: 273, column: 64, scope: !2961)
!3177 = !DILocation(line: 273, column: 56, scope: !2961)
!3178 = !DILocation(line: 274, column: 13, scope: !2961)
!3179 = !DILocation(line: 278, column: 1, scope: !2949)
!3180 = distinct !DISubprogram(name: "NVIC_SetupVectorTable", scope: !1184, file: !1184, line: 47, type: !3181, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !3183)
!3181 = !DISubroutineType(types: !3182)
!3182 = !{null, !61}
!3183 = !{!3184}
!3184 = !DILocalVariable(name: "addr", arg: 1, scope: !3180, file: !1184, line: 47, type: !61)
!3185 = !DILocation(line: 0, scope: !3180)
!3186 = !DILocation(line: 49, column: 15, scope: !3180)
!3187 = !DILocation(line: 51, column: 5, scope: !3180)
!3188 = !{i64 2624}
!3189 = !DILocation(line: 52, column: 5, scope: !3180)
!3190 = !{i64 2651}
!3191 = !DILocation(line: 53, column: 1, scope: !3180)
!3192 = distinct !DISubprogram(name: "NVIC_SWInt", scope: !1184, file: !1184, line: 56, type: !3193, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !3195)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{null, !30}
!3195 = !{!3196}
!3196 = !DILocalVariable(name: "source", arg: 1, scope: !3192, file: !1184, line: 56, type: !30)
!3197 = !DILocation(line: 0, scope: !3192)
!3198 = !DILocation(line: 58, column: 16, scope: !3192)
!3199 = !DILocation(line: 59, column: 1, scope: !3192)
!3200 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !1184, file: !1184, line: 61, type: !1368, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !3201)
!3201 = !{!3202}
!3202 = !DILocalVariable(name: "mask", scope: !3200, file: !1184, line: 63, type: !61)
!3203 = !DILocation(line: 470, column: 3, scope: !3204, inlinedAt: !3208)
!3204 = distinct !DISubprogram(name: "__get_PRIMASK", scope: !3205, file: !3205, line: 466, type: !1368, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !3206)
!3205 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!3206 = !{!3207}
!3207 = !DILocalVariable(name: "result", scope: !3204, file: !3205, line: 468, type: !61)
!3208 = distinct !DILocation(line: 64, column: 5, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3200, file: !1184, line: 64, column: 5)
!3210 = !{i64 302170}
!3211 = !DILocation(line: 0, scope: !3204, inlinedAt: !3208)
!3212 = !DILocation(line: 0, scope: !3200)
!3213 = !DILocation(line: 330, column: 3, scope: !3214, inlinedAt: !3215)
!3214 = distinct !DISubprogram(name: "__disable_irq", scope: !3205, file: !3205, line: 328, type: !154, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !1387)
!3215 = distinct !DILocation(line: 64, column: 5, scope: !3209)
!3216 = !{i64 298834}
!3217 = !DILocation(line: 65, column: 5, scope: !3200)
!3218 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !1184, file: !1184, line: 68, type: !3181, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !3219)
!3219 = !{!3220}
!3220 = !DILocalVariable(name: "mask", arg: 1, scope: !3218, file: !1184, line: 68, type: !61)
!3221 = !DILocation(line: 0, scope: !3218)
!3222 = !DILocalVariable(name: "priMask", arg: 1, scope: !3223, file: !3205, line: 481, type: !61)
!3223 = distinct !DISubprogram(name: "__set_PRIMASK", scope: !3205, file: !3205, line: 481, type: !3181, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1183, retainedNodes: !3224)
!3224 = !{!3222}
!3225 = !DILocation(line: 0, scope: !3223, inlinedAt: !3226)
!3226 = distinct !DILocation(line: 70, column: 5, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3218, file: !1184, line: 70, column: 5)
!3228 = !DILocation(line: 483, column: 3, scope: !3223, inlinedAt: !3226)
!3229 = !{i64 302488}
!3230 = !DILocation(line: 71, column: 1, scope: !3218)
!3231 = distinct !DISubprogram(name: "pinmux_config", scope: !1229, file: !1229, line: 54, type: !3232, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1228, retainedNodes: !3234)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{!553, !1334, !61}
!3234 = !{!3235, !3236, !3237}
!3235 = !DILocalVariable(name: "gpio_index", arg: 1, scope: !3231, file: !1229, line: 54, type: !1334)
!3236 = !DILocalVariable(name: "function", arg: 2, scope: !3231, file: !1229, line: 54, type: !61)
!3237 = !DILocalVariable(name: "ePadIndex", scope: !3231, file: !1229, line: 56, type: !2953)
!3238 = !DILocation(line: 0, scope: !3231)
!3239 = !DILocation(line: 60, column: 5, scope: !3231)
!3240 = !DILocation(line: 205, column: 38, scope: !3231)
!3241 = !DILocation(line: 205, column: 5, scope: !3231)
!3242 = !DILocation(line: 207, column: 5, scope: !3231)
!3243 = !DILocation(line: 208, column: 1, scope: !3231)
!3244 = distinct !DISubprogram(name: "sfc_GPT_return_current_count", scope: !231, file: !231, line: 60, type: !3245, scopeLine: 61, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3247)
!3245 = !DISubroutineType(types: !3246)
!3246 = !{!139}
!3247 = !{!3248}
!3248 = !DILocalVariable(name: "current_count", scope: !3244, file: !231, line: 62, type: !139)
!3249 = !DILocation(line: 64, column: 21, scope: !3244)
!3250 = !DILocation(line: 0, scope: !3244)
!3251 = !DILocation(line: 66, column: 5, scope: !3244)
!3252 = distinct !DISubprogram(name: "sfc_get_systime", scope: !231, file: !231, line: 69, type: !3245, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !1387)
!3253 = !DILocation(line: 71, column: 12, scope: !3252)
!3254 = !DILocation(line: 71, column: 5, scope: !3252)
!3255 = distinct !DISubprogram(name: "sfc_delay_time", scope: !231, file: !231, line: 74, type: !1793, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3256)
!3256 = !{!3257, !3258, !3259}
!3257 = !DILocalVariable(name: "count", arg: 1, scope: !3255, file: !231, line: 74, type: !139)
!3258 = !DILocalVariable(name: "end_count", scope: !3255, file: !231, line: 76, type: !139)
!3259 = !DILocalVariable(name: "current", scope: !3255, file: !231, line: 76, type: !139)
!3260 = !DILocation(line: 0, scope: !3255)
!3261 = !DILocation(line: 78, column: 17, scope: !3255)
!3262 = !DILocation(line: 78, column: 35, scope: !3255)
!3263 = !DILocation(line: 78, column: 43, scope: !3255)
!3264 = !DILocation(line: 79, column: 15, scope: !3255)
!3265 = !DILocation(line: 80, column: 12, scope: !3255)
!3266 = !DILocation(line: 80, column: 5, scope: !3255)
!3267 = !DILocation(line: 81, column: 19, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3255, file: !231, line: 80, column: 49)
!3269 = distinct !{!3269, !3266, !3270}
!3270 = !DILocation(line: 82, column: 5, scope: !3255)
!3271 = !DILocation(line: 83, column: 1, scope: !3255)
!3272 = distinct !DISubprogram(name: "sfc_delay_ms", scope: !231, file: !231, line: 85, type: !3193, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3273)
!3273 = !{!3274}
!3274 = !DILocalVariable(name: "ms", arg: 1, scope: !3272, file: !231, line: 85, type: !30)
!3275 = !DILocation(line: 0, scope: !3272)
!3276 = !DILocation(line: 87, column: 23, scope: !3272)
!3277 = !DILocation(line: 87, column: 5, scope: !3272)
!3278 = !DILocation(line: 88, column: 1, scope: !3272)
!3279 = distinct !DISubprogram(name: "sfc_getMaxGPRamSize", scope: !231, file: !231, line: 90, type: !3280, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !1387)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!7}
!3282 = !DILocation(line: 92, column: 5, scope: !3279)
!3283 = distinct !DISubprogram(name: "sfc_Init", scope: !231, file: !231, line: 121, type: !1017, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3284)
!3284 = !{!3285, !3286}
!3285 = !DILocalVariable(name: "security_enable", arg: 1, scope: !3283, file: !231, line: 121, type: !7)
!3286 = !DILocalVariable(name: "reg", scope: !3283, file: !231, line: 123, type: !30)
!3287 = !DILocation(line: 0, scope: !3283)
!3288 = !DILocation(line: 125, column: 27, scope: !3283)
!3289 = !DILocation(line: 141, column: 5, scope: !3283)
!3290 = !DILocation(line: 142, column: 5, scope: !3283)
!3291 = !DILocation(line: 143, column: 5, scope: !3283)
!3292 = !DILocation(line: 144, column: 5, scope: !3283)
!3293 = !DILocation(line: 145, column: 5, scope: !3283)
!3294 = !DILocation(line: 147, column: 5, scope: !3283)
!3295 = !DILocation(line: 150, column: 11, scope: !3283)
!3296 = !DILocation(line: 151, column: 9, scope: !3283)
!3297 = !DILocation(line: 152, column: 5, scope: !3283)
!3298 = !DILocation(line: 153, column: 5, scope: !3283)
!3299 = !DILocation(line: 155, column: 11, scope: !3283)
!3300 = !DILocation(line: 156, column: 9, scope: !3283)
!3301 = !DILocation(line: 157, column: 5, scope: !3283)
!3302 = !DILocation(line: 158, column: 5, scope: !3283)
!3303 = !DILocation(line: 160, column: 11, scope: !3283)
!3304 = !DILocation(line: 161, column: 9, scope: !3283)
!3305 = !DILocation(line: 162, column: 5, scope: !3283)
!3306 = !DILocation(line: 163, column: 5, scope: !3283)
!3307 = !DILocation(line: 165, column: 11, scope: !3283)
!3308 = !DILocation(line: 166, column: 9, scope: !3283)
!3309 = !DILocation(line: 167, column: 5, scope: !3283)
!3310 = !DILocation(line: 168, column: 5, scope: !3283)
!3311 = !DILocation(line: 173, column: 9, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3283, file: !231, line: 173, column: 9)
!3313 = !DILocation(line: 173, column: 9, scope: !3283)
!3314 = !DILocation(line: 174, column: 31, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3312, file: !231, line: 173, column: 26)
!3316 = !DILocation(line: 184, column: 9, scope: !3315)
!3317 = !DILocation(line: 185, column: 9, scope: !3315)
!3318 = !DILocation(line: 187, column: 9, scope: !3315)
!3319 = !DILocation(line: 188, column: 9, scope: !3315)
!3320 = !DILocation(line: 189, column: 9, scope: !3315)
!3321 = !DILocation(line: 190, column: 9, scope: !3315)
!3322 = !DILocation(line: 192, column: 9, scope: !3315)
!3323 = !DILocation(line: 193, column: 5, scope: !3315)
!3324 = !DILocation(line: 194, column: 1, scope: !3283)
!3325 = distinct !DISubprogram(name: "sfc_GetDirectMode", scope: !231, file: !231, line: 196, type: !3280, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3326)
!3326 = !{!3327, !3328}
!3327 = !DILocalVariable(name: "qpi_en", scope: !3325, file: !231, line: 198, type: !259)
!3328 = !DILocalVariable(name: "sfc_read_mode", scope: !3325, file: !231, line: 199, type: !259)
!3329 = !DILocation(line: 198, column: 29, scope: !3325)
!3330 = !DILocation(line: 0, scope: !3325)
!3331 = !DILocation(line: 199, column: 36, scope: !3325)
!3332 = !DILocation(line: 199, column: 89, scope: !3325)
!3333 = !DILocation(line: 204, column: 23, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3325, file: !231, line: 204, column: 9)
!3335 = !DILocation(line: 204, column: 9, scope: !3325)
!3336 = !DILocation(line: 218, column: 1, scope: !3325)
!3337 = distinct !DISubprogram(name: "sfc_direct_read_setup", scope: !231, file: !231, line: 221, type: !3338, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3340)
!3338 = !DISubroutineType(types: !3339)
!3339 = !{null, !259, !7}
!3340 = !{!3341, !3342, !3343}
!3341 = !DILocalVariable(name: "reg", arg: 1, scope: !3337, file: !231, line: 221, type: !259)
!3342 = !DILocalVariable(name: "mode", arg: 2, scope: !3337, file: !231, line: 221, type: !7)
!3343 = !DILocalVariable(name: "tmp", scope: !3337, file: !231, line: 223, type: !259)
!3344 = !DILocation(line: 0, scope: !3337)
!3345 = !DILocation(line: 224, column: 5, scope: !3337)
!3346 = !DILocation(line: 236, column: 9, scope: !3337)
!3347 = !DILocation(line: 237, column: 5, scope: !3337)
!3348 = !DILocation(line: 238, column: 1, scope: !3337)
!3349 = distinct !DISubprogram(name: "sfc_Command_List", scope: !231, file: !231, line: 296, type: !3350, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3352)
!3350 = !DISubroutineType(types: !3351)
!3351 = !{null, !257}
!3352 = !{!3353, !3354, !3355, !3356}
!3353 = !DILocalVariable(name: "cmdlist", arg: 1, scope: !3349, file: !231, line: 296, type: !257)
!3354 = !DILocalVariable(name: "i", scope: !3349, file: !231, line: 298, type: !30)
!3355 = !DILocalVariable(name: "val", scope: !3349, file: !231, line: 299, type: !30)
!3356 = !DILocalVariable(name: "force_qpi", scope: !3349, file: !231, line: 299, type: !30)
!3357 = !DILocation(line: 0, scope: !3349)
!3358 = !DILocation(line: 301, column: 10, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3349, file: !231, line: 301, column: 9)
!3360 = !DILocation(line: 301, column: 9, scope: !3349)
!3361 = !DILocation(line: 305, column: 11, scope: !3349)
!3362 = !DILocation(line: 310, column: 5, scope: !3349)
!3363 = !DILocation(line: 311, column: 17, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3349, file: !231, line: 310, column: 17)
!3365 = !DILocation(line: 311, column: 9, scope: !3364)
!3366 = !DILocation(line: 319, column: 17, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3364, file: !231, line: 311, column: 29)
!3368 = !DILocation(line: 321, column: 17, scope: !3367)
!3369 = !DILocation(line: 322, column: 17, scope: !3367)
!3370 = !DILocation(line: 325, column: 33, scope: !3364)
!3371 = !DILocation(line: 325, column: 23, scope: !3364)
!3372 = !DILocation(line: 325, column: 49, scope: !3364)
!3373 = !DILocation(line: 325, column: 39, scope: !3364)
!3374 = !DILocation(line: 325, column: 9, scope: !3364)
!3375 = !DILocation(line: 327, column: 15, scope: !3364)
!3376 = !DILocation(line: 327, column: 11, scope: !3364)
!3377 = !DILocation(line: 329, column: 9, scope: !3364)
!3378 = distinct !{!3378, !3362, !3379}
!3379 = !DILocation(line: 330, column: 5, scope: !3349)
!3380 = !DILocation(line: 331, column: 1, scope: !3349)
!3381 = distinct !DISubprogram(name: "sfc_transfer", scope: !231, file: !231, line: 417, type: !3382, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3385)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{!7, !257, !3384, !241, !3384, !30}
!3384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!3385 = !{!3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396}
!3386 = !DILocalVariable(name: "cmd", arg: 1, scope: !3381, file: !231, line: 417, type: !257)
!3387 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3381, file: !231, line: 417, type: !3384)
!3388 = !DILocalVariable(name: "data", arg: 3, scope: !3381, file: !231, line: 417, type: !241)
!3389 = !DILocalVariable(name: "data_len", arg: 4, scope: !3381, file: !231, line: 417, type: !3384)
!3390 = !DILocalVariable(name: "force_qpi", arg: 5, scope: !3381, file: !231, line: 417, type: !30)
!3391 = !DILocalVariable(name: "tmp", scope: !3381, file: !231, line: 419, type: !30)
!3392 = !DILocalVariable(name: "i", scope: !3381, file: !231, line: 419, type: !30)
!3393 = !DILocalVariable(name: "j", scope: !3381, file: !231, line: 419, type: !30)
!3394 = !DILocalVariable(name: "p_data", scope: !3381, file: !231, line: 420, type: !241)
!3395 = !DILocalVariable(name: "p_tmp", scope: !3381, file: !231, line: 420, type: !241)
!3396 = !DILocalVariable(name: "savedMask", scope: !3381, file: !231, line: 421, type: !30)
!3397 = !DILocation(line: 0, scope: !3381)
!3398 = !DILocation(line: 419, column: 5, scope: !3381)
!3399 = !DILocation(line: 423, column: 18, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3381, file: !231, line: 423, column: 9)
!3401 = !DILocation(line: 423, column: 30, scope: !3400)
!3402 = !DILocation(line: 423, column: 9, scope: !3381)
!3403 = !DILocation(line: 430, column: 19, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3405, file: !231, line: 430, column: 5)
!3405 = distinct !DILexicalBlock(scope: !3381, file: !231, line: 430, column: 5)
!3406 = !DILocation(line: 430, column: 5, scope: !3405)
!3407 = !DILocation(line: 431, column: 25, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3409, file: !231, line: 431, column: 9)
!3409 = distinct !DILexicalBlock(scope: !3404, file: !231, line: 430, column: 43)
!3410 = !DILocation(line: 431, column: 32, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3408, file: !231, line: 431, column: 9)
!3412 = !DILocation(line: 431, column: 9, scope: !3408)
!3413 = !DILocation(line: 432, column: 24, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3411, file: !231, line: 431, column: 62)
!3415 = !DILocation(line: 432, column: 13, scope: !3414)
!3416 = !DILocation(line: 432, column: 22, scope: !3414)
!3417 = !DILocation(line: 431, column: 53, scope: !3411)
!3418 = !DILocation(line: 431, column: 58, scope: !3411)
!3419 = !DILocation(line: 431, column: 42, scope: !3411)
!3420 = distinct !{!3420, !3412, !3421}
!3421 = !DILocation(line: 433, column: 9, scope: !3408)
!3422 = !DILocation(line: 434, column: 9, scope: !3409)
!3423 = !DILocation(line: 0, scope: !3405)
!3424 = !DILocation(line: 436, column: 15, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3409, file: !231, line: 436, column: 13)
!3426 = !DILocation(line: 436, column: 20, scope: !3425)
!3427 = !DILocation(line: 437, column: 13, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3425, file: !231, line: 436, column: 46)
!3429 = !DILocation(line: 438, column: 13, scope: !3428)
!3430 = !DILocation(line: 440, column: 9, scope: !3428)
!3431 = !DILocation(line: 430, column: 37, scope: !3404)
!3432 = distinct !{!3432, !3406, !3433}
!3433 = !DILocation(line: 441, column: 5, scope: !3405)
!3434 = !DILocation(line: 443, column: 17, scope: !3381)
!3435 = !DILocation(line: 444, column: 9, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3381, file: !231, line: 444, column: 9)
!3437 = !DILocation(line: 444, column: 9, scope: !3381)
!3438 = !DILocation(line: 445, column: 9, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3436, file: !231, line: 444, column: 32)
!3440 = !DILocation(line: 446, column: 9, scope: !3439)
!3441 = !DILocation(line: 447, column: 5, scope: !3439)
!3442 = !DILocation(line: 449, column: 5, scope: !3381)
!3443 = !DILocation(line: 450, column: 5, scope: !3381)
!3444 = !DILocation(line: 452, column: 5, scope: !3381)
!3445 = !DILocation(line: 453, column: 5, scope: !3381)
!3446 = !DILocation(line: 454, column: 5, scope: !3381)
!3447 = !DILocation(line: 456, column: 76, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !231, line: 456, column: 5)
!3449 = distinct !DILexicalBlock(scope: !3381, file: !231, line: 456, column: 5)
!3450 = !DILocation(line: 456, column: 5, scope: !3449)
!3451 = !DILocation(line: 456, column: 62, scope: !3449)
!3452 = !DILocation(line: 457, column: 17, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3448, file: !231, line: 456, column: 111)
!3454 = !DILocation(line: 457, column: 15, scope: !3453)
!3455 = !DILocation(line: 456, column: 88, scope: !3448)
!3456 = !DILocation(line: 456, column: 93, scope: !3448)
!3457 = !DILocation(line: 456, column: 101, scope: !3448)
!3458 = distinct !{!3458, !3450, !3459}
!3459 = !DILocation(line: 458, column: 5, scope: !3449)
!3460 = !DILocation(line: 461, column: 1, scope: !3381)
!3461 = distinct !DISubprogram(name: "sfc_MacEnable", scope: !231, file: !231, line: 402, type: !1017, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3462)
!3462 = !{!3463, !3464}
!3463 = !DILocalVariable(name: "force_qpi", arg: 1, scope: !3461, file: !231, line: 402, type: !7)
!3464 = !DILocalVariable(name: "val", scope: !3461, file: !231, line: 404, type: !259)
!3465 = !DILocation(line: 0, scope: !3461)
!3466 = !DILocation(line: 406, column: 11, scope: !3461)
!3467 = !DILocation(line: 408, column: 9, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3461, file: !231, line: 408, column: 9)
!3469 = !DILocation(line: 408, column: 25, scope: !3468)
!3470 = !DILocation(line: 412, column: 9, scope: !3461)
!3471 = !DILocation(line: 414, column: 5, scope: !3461)
!3472 = !DILocation(line: 415, column: 1, scope: !3461)
!3473 = distinct !DISubprogram(name: "sfc_MacWaitReady", scope: !231, file: !231, line: 384, type: !154, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !1387)
!3474 = !DILocation(line: 396, column: 5, scope: !3473)
!3475 = !DILocation(line: 397, column: 5, scope: !3473)
!3476 = !DILocation(line: 399, column: 1, scope: !3473)
!3477 = distinct !DISubprogram(name: "sfc_MacTrigger", scope: !231, file: !231, line: 339, type: !3478, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3480)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!259}
!3480 = !{!3481, !3482}
!3481 = !DILocalVariable(name: "val", scope: !3477, file: !231, line: 341, type: !259)
!3482 = !DILocalVariable(name: "misc_ctl", scope: !3477, file: !231, line: 342, type: !259)
!3483 = !DILocation(line: 0, scope: !3477)
!3484 = !DILocation(line: 344, column: 11, scope: !3477)
!3485 = !DILocation(line: 347, column: 9, scope: !3477)
!3486 = !DILocation(line: 349, column: 5, scope: !3477)
!3487 = !DILocation(line: 352, column: 5, scope: !3477)
!3488 = !DILocation(line: 352, column: 14, scope: !3477)
!3489 = !DILocation(line: 352, column: 44, scope: !3477)
!3490 = !DILocation(line: 352, column: 12, scope: !3477)
!3491 = distinct !{!3491, !3487, !3492}
!3492 = !DILocation(line: 353, column: 9, scope: !3477)
!3493 = !DILocation(line: 354, column: 13, scope: !3477)
!3494 = !DILocation(line: 354, column: 43, scope: !3477)
!3495 = !DILocation(line: 354, column: 5, scope: !3477)
!3496 = distinct !{!3496, !3495, !3497}
!3497 = !DILocation(line: 355, column: 9, scope: !3477)
!3498 = !DILocation(line: 357, column: 5, scope: !3477)
!3499 = distinct !DISubprogram(name: "sfc_MacLeave", scope: !231, file: !231, line: 366, type: !154, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3500)
!3500 = !{!3501}
!3501 = !DILocalVariable(name: "val", scope: !3499, file: !231, line: 368, type: !259)
!3502 = !DILocation(line: 371, column: 11, scope: !3499)
!3503 = !DILocation(line: 0, scope: !3499)
!3504 = !DILocation(line: 372, column: 9, scope: !3499)
!3505 = !DILocation(line: 373, column: 5, scope: !3499)
!3506 = !DILocation(line: 378, column: 11, scope: !3499)
!3507 = !DILocation(line: 379, column: 9, scope: !3499)
!3508 = !DILocation(line: 380, column: 5, scope: !3499)
!3509 = !DILocation(line: 381, column: 1, scope: !3499)
!3510 = distinct !DISubprogram(name: "sfc_clear_gpram", scope: !231, file: !231, line: 463, type: !154, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3511)
!3511 = !{!3512, !3513}
!3512 = !DILocalVariable(name: "i", scope: !3510, file: !231, line: 465, type: !30)
!3513 = !DILocalVariable(name: "p_data", scope: !3510, file: !231, line: 466, type: !241)
!3514 = !DILocation(line: 0, scope: !3510)
!3515 = !DILocation(line: 470, column: 5, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3510, file: !231, line: 470, column: 5)
!3517 = !DILocation(line: 471, column: 9, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !231, line: 470, column: 63)
!3519 = distinct !DILexicalBlock(scope: !3516, file: !231, line: 470, column: 5)
!3520 = !DILocation(line: 470, column: 52, scope: !3519)
!3521 = !DILocation(line: 470, column: 59, scope: !3519)
!3522 = !DILocation(line: 470, column: 19, scope: !3519)
!3523 = distinct !{!3523, !3515, !3524}
!3524 = !DILocation(line: 472, column: 5, scope: !3516)
!3525 = !DILocation(line: 475, column: 1, scope: !3510)
!3526 = distinct !DISubprogram(name: "sfc_read", scope: !231, file: !231, line: 478, type: !3527, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3529)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{!7, !257, !3384, !241, !3384}
!3529 = !{!3530, !3531, !3532, !3533}
!3530 = !DILocalVariable(name: "cmd", arg: 1, scope: !3526, file: !231, line: 478, type: !257)
!3531 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3526, file: !231, line: 478, type: !3384)
!3532 = !DILocalVariable(name: "data", arg: 3, scope: !3526, file: !231, line: 478, type: !241)
!3533 = !DILocalVariable(name: "data_len", arg: 4, scope: !3526, file: !231, line: 478, type: !3384)
!3534 = !DILocation(line: 0, scope: !3526)
!3535 = !DILocation(line: 480, column: 12, scope: !3526)
!3536 = !DILocation(line: 480, column: 5, scope: !3526)
!3537 = distinct !DISubprogram(name: "sfc_write", scope: !231, file: !231, line: 490, type: !3538, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3540)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!7, !257, !3384, !257, !3384}
!3540 = !{!3541, !3542, !3543, !3544, !3545, !3549}
!3541 = !DILocalVariable(name: "cmd", arg: 1, scope: !3537, file: !231, line: 490, type: !257)
!3542 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3537, file: !231, line: 490, type: !3384)
!3543 = !DILocalVariable(name: "data", arg: 3, scope: !3537, file: !231, line: 490, type: !257)
!3544 = !DILocalVariable(name: "data_len", arg: 4, scope: !3537, file: !231, line: 490, type: !3384)
!3545 = !DILocalVariable(name: "tmp", scope: !3537, file: !231, line: 492, type: !3546)
!3546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 1280, elements: !3547)
!3547 = !{!3548}
!3548 = !DISubrange(count: 160)
!3549 = !DILocalVariable(name: "total", scope: !3537, file: !231, line: 493, type: !7)
!3550 = !DILocation(line: 0, scope: !3537)
!3551 = !DILocation(line: 492, column: 5, scope: !3537)
!3552 = !DILocation(line: 492, column: 19, scope: !3537)
!3553 = !DILocation(line: 493, column: 25, scope: !3537)
!3554 = !DILocation(line: 495, column: 15, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3537, file: !231, line: 495, column: 9)
!3556 = !DILocation(line: 495, column: 9, scope: !3537)
!3557 = !DILocation(line: 496, column: 9, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !231, line: 496, column: 9)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !231, line: 496, column: 9)
!3560 = distinct !DILexicalBlock(scope: !3555, file: !231, line: 495, column: 31)
!3561 = distinct !{!3561, !3557, !3557}
!3562 = !DILocation(line: 498, column: 5, scope: !3537)
!3563 = !DILocation(line: 500, column: 9, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3537, file: !231, line: 500, column: 9)
!3565 = !DILocation(line: 500, column: 14, scope: !3564)
!3566 = !DILocation(line: 501, column: 17, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3564, file: !231, line: 500, column: 27)
!3568 = !DILocation(line: 501, column: 9, scope: !3567)
!3569 = !DILocation(line: 502, column: 5, scope: !3567)
!3570 = !DILocation(line: 503, column: 12, scope: !3537)
!3571 = !DILocation(line: 504, column: 1, scope: !3537)
!3572 = !DILocation(line: 503, column: 5, scope: !3537)
!3573 = distinct !DISubprogram(name: "sfc_security_write_crc", scope: !231, file: !231, line: 506, type: !3574, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3576)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!7, !257, !3384}
!3576 = !{!3577, !3578, !3579, !3580, !3581}
!3577 = !DILocalVariable(name: "cmd", arg: 1, scope: !3573, file: !231, line: 506, type: !257)
!3578 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3573, file: !231, line: 506, type: !3384)
!3579 = !DILocalVariable(name: "tmp", scope: !3573, file: !231, line: 508, type: !3546)
!3580 = !DILocalVariable(name: "crc", scope: !3573, file: !231, line: 509, type: !259)
!3581 = !DILocalVariable(name: "total", scope: !3573, file: !231, line: 510, type: !7)
!3582 = !DILocation(line: 0, scope: !3573)
!3583 = !DILocation(line: 508, column: 5, scope: !3573)
!3584 = !DILocation(line: 508, column: 19, scope: !3573)
!3585 = !DILocation(line: 509, column: 5, scope: !3573)
!3586 = !DILocation(line: 509, column: 25, scope: !3573)
!3587 = !DILocation(line: 509, column: 19, scope: !3573)
!3588 = !DILocation(line: 510, column: 25, scope: !3573)
!3589 = !DILocation(line: 514, column: 5, scope: !3573)
!3590 = !DILocation(line: 515, column: 13, scope: !3573)
!3591 = !DILocation(line: 515, column: 5, scope: !3573)
!3592 = !DILocation(line: 517, column: 12, scope: !3573)
!3593 = !DILocation(line: 518, column: 1, scope: !3573)
!3594 = !DILocation(line: 517, column: 5, scope: !3573)
!3595 = distinct !DISubprogram(name: "__sfc_write", scope: !231, file: !231, line: 538, type: !3382, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !230, retainedNodes: !3596)
!3596 = !{!3597, !3598, !3599, !3600, !3601, !3602, !3603}
!3597 = !DILocalVariable(name: "cmd", arg: 1, scope: !3595, file: !231, line: 538, type: !257)
!3598 = !DILocalVariable(name: "cmd_len", arg: 2, scope: !3595, file: !231, line: 538, type: !3384)
!3599 = !DILocalVariable(name: "data", arg: 3, scope: !3595, file: !231, line: 538, type: !241)
!3600 = !DILocalVariable(name: "data_len", arg: 4, scope: !3595, file: !231, line: 538, type: !3384)
!3601 = !DILocalVariable(name: "security_enable", arg: 5, scope: !3595, file: !231, line: 538, type: !30)
!3602 = !DILocalVariable(name: "tmp", scope: !3595, file: !231, line: 540, type: !3546)
!3603 = !DILocalVariable(name: "total", scope: !3595, file: !231, line: 541, type: !7)
!3604 = !DILocation(line: 0, scope: !3595)
!3605 = !DILocation(line: 540, column: 5, scope: !3595)
!3606 = !DILocation(line: 540, column: 19, scope: !3595)
!3607 = !DILocation(line: 541, column: 25, scope: !3595)
!3608 = !DILocation(line: 543, column: 15, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3595, file: !231, line: 543, column: 9)
!3610 = !DILocation(line: 543, column: 9, scope: !3595)
!3611 = !DILocation(line: 544, column: 9, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !231, line: 544, column: 9)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !231, line: 544, column: 9)
!3614 = distinct !DILexicalBlock(scope: !3609, file: !231, line: 543, column: 30)
!3615 = distinct !{!3615, !3611, !3611}
!3616 = !DILocation(line: 546, column: 5, scope: !3595)
!3617 = !DILocation(line: 548, column: 9, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3595, file: !231, line: 548, column: 9)
!3619 = !DILocation(line: 548, column: 14, scope: !3618)
!3620 = !DILocation(line: 549, column: 17, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3618, file: !231, line: 548, column: 27)
!3622 = !DILocation(line: 549, column: 9, scope: !3621)
!3623 = !DILocation(line: 550, column: 5, scope: !3621)
!3624 = !DILocation(line: 551, column: 12, scope: !3595)
!3625 = !DILocation(line: 552, column: 1, scope: !3595)
!3626 = !DILocation(line: 551, column: 5, scope: !3595)
!3627 = distinct !DISubprogram(name: "flash_suspend_Winbond", scope: !248, file: !248, line: 186, type: !154, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !1387)
!3628 = !DILocation(line: 188, column: 5, scope: !3627)
!3629 = !DILocation(line: 189, column: 5, scope: !3627)
!3630 = distinct !DISubprogram(name: "flash_resume_Winbond", scope: !248, file: !248, line: 195, type: !154, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !1387)
!3631 = !DILocation(line: 197, column: 5, scope: !3630)
!3632 = !DILocation(line: 198, column: 5, scope: !3630)
!3633 = distinct !DISubprogram(name: "flash_check_device", scope: !248, file: !248, line: 276, type: !3280, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !3634)
!3634 = !{!3635, !3636, !3637, !3639}
!3635 = !DILocalVariable(name: "i", scope: !3633, file: !248, line: 278, type: !7)
!3636 = !DILocalVariable(name: "jedec", scope: !3633, file: !248, line: 279, type: !259)
!3637 = !DILocalVariable(name: "buf", scope: !3633, file: !248, line: 280, type: !3638)
!3638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 40, elements: !614)
!3639 = !DILocalVariable(name: "info", scope: !3633, file: !248, line: 281, type: !260)
!3640 = !DILocation(line: 280, column: 5, scope: !3633)
!3641 = !DILocation(line: 280, column: 19, scope: !3633)
!3642 = !DILocation(line: 283, column: 5, scope: !3633)
!3643 = !DILocation(line: 284, column: 45, scope: !3633)
!3644 = !DILocation(line: 284, column: 30, scope: !3633)
!3645 = !DILocation(line: 284, column: 52, scope: !3633)
!3646 = !DILocation(line: 284, column: 77, scope: !3633)
!3647 = !DILocation(line: 284, column: 62, scope: !3633)
!3648 = !DILocation(line: 284, column: 84, scope: !3633)
!3649 = !DILocation(line: 284, column: 59, scope: !3633)
!3650 = !DILocation(line: 0, scope: !3633)
!3651 = !DILocation(line: 286, column: 23, scope: !3633)
!3652 = !DILocation(line: 286, column: 21, scope: !3633)
!3653 = !DILocation(line: 288, column: 5, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3633, file: !248, line: 288, column: 5)
!3655 = !DILocation(line: 290, column: 19, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3657, file: !248, line: 290, column: 13)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !248, line: 288, column: 70)
!3658 = distinct !DILexicalBlock(scope: !3654, file: !248, line: 288, column: 5)
!3659 = !DILocation(line: 290, column: 22, scope: !3656)
!3660 = !DILocation(line: 290, column: 32, scope: !3656)
!3661 = !DILocation(line: 290, column: 41, scope: !3656)
!3662 = !DILocation(line: 290, column: 50, scope: !3656)
!3663 = !DILocation(line: 290, column: 13, scope: !3657)
!3664 = !DILocation(line: 289, column: 17, scope: !3657)
!3665 = !DILocation(line: 291, column: 27, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3656, file: !248, line: 290, column: 60)
!3667 = !DILocation(line: 292, column: 26, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3666, file: !248, line: 292, column: 17)
!3669 = !DILocation(line: 292, column: 17, scope: !3666)
!3670 = !DILocation(line: 294, column: 33, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3668, file: !248, line: 294, column: 24)
!3672 = !DILocation(line: 294, column: 24, scope: !3668)
!3673 = !DILocation(line: 296, column: 33, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3671, file: !248, line: 296, column: 24)
!3675 = !DILocation(line: 296, column: 24, scope: !3671)
!3676 = !DILocation(line: 298, column: 31, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !248, line: 298, column: 20)
!3678 = distinct !DILexicalBlock(scope: !3674, file: !248, line: 296, column: 48)
!3679 = !DILocation(line: 298, column: 49, scope: !3677)
!3680 = !DILocation(line: 0, scope: !3677)
!3681 = !DILocation(line: 303, column: 13, scope: !3678)
!3682 = !DILocation(line: 303, column: 33, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3674, file: !248, line: 303, column: 24)
!3684 = !DILocation(line: 303, column: 24, scope: !3674)
!3685 = !DILocation(line: 0, scope: !3668)
!3686 = !DILocation(line: 308, column: 30, scope: !3666)
!3687 = !DILocation(line: 288, column: 66, scope: !3658)
!3688 = !DILocation(line: 288, column: 19, scope: !3658)
!3689 = distinct !{!3689, !3653, !3690}
!3690 = !DILocation(line: 311, column: 5, scope: !3654)
!3691 = !DILocation(line: 313, column: 19, scope: !3633)
!3692 = !DILocation(line: 315, column: 9, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3633, file: !248, line: 315, column: 9)
!3694 = !DILocation(line: 315, column: 26, scope: !3693)
!3695 = !DILocation(line: 315, column: 9, scope: !3633)
!3696 = !DILocation(line: 316, column: 51, scope: !3697)
!3697 = distinct !DILexicalBlock(scope: !3693, file: !248, line: 315, column: 47)
!3698 = !DILocation(line: 316, column: 23, scope: !3697)
!3699 = !DILocation(line: 318, column: 19, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3697, file: !248, line: 318, column: 13)
!3701 = !DILocation(line: 318, column: 25, scope: !3700)
!3702 = !DILocation(line: 318, column: 22, scope: !3700)
!3703 = !DILocation(line: 318, column: 32, scope: !3700)
!3704 = !DILocation(line: 318, column: 41, scope: !3700)
!3705 = !DILocation(line: 318, column: 50, scope: !3700)
!3706 = !DILocation(line: 318, column: 13, scope: !3697)
!3707 = !DILocation(line: 322, column: 13, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3700, file: !248, line: 321, column: 16)
!3709 = !DILocation(line: 323, column: 13, scope: !3708)
!3710 = !DILocation(line: 325, column: 5, scope: !3697)
!3711 = !DILocation(line: 329, column: 1, scope: !3633)
!3712 = distinct !DISubprogram(name: "flash_read_jedec_id", scope: !248, file: !248, line: 495, type: !3713, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !3715)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!7, !241, !7}
!3715 = !{!3716, !3717, !3718, !3719}
!3716 = !DILocalVariable(name: "buf", arg: 1, scope: !3712, file: !248, line: 495, type: !241)
!3717 = !DILocalVariable(name: "buf_size", arg: 2, scope: !3712, file: !248, line: 495, type: !7)
!3718 = !DILocalVariable(name: "code", scope: !3712, file: !248, line: 497, type: !58)
!3719 = !DILocalVariable(name: "rc", scope: !3712, file: !248, line: 498, type: !7)
!3720 = !DILocation(line: 0, scope: !3712)
!3721 = !DILocation(line: 497, column: 5, scope: !3712)
!3722 = !DILocation(line: 499, column: 10, scope: !3712)
!3723 = !DILocation(line: 500, column: 10, scope: !3712)
!3724 = !DILocation(line: 503, column: 1, scope: !3712)
!3725 = !DILocation(line: 502, column: 5, scope: !3712)
!3726 = distinct !DISubprogram(name: "flash_switch_mode", scope: !248, file: !248, line: 331, type: !3727, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !3729)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{null, !259}
!3729 = !{!3730}
!3730 = !DILocalVariable(name: "mode", arg: 1, scope: !3726, file: !248, line: 331, type: !259)
!3731 = !DILocation(line: 0, scope: !3726)
!3732 = !DILocation(line: 333, column: 9, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3726, file: !248, line: 333, column: 9)
!3734 = !DILocation(line: 333, column: 34, scope: !3733)
!3735 = !DILocation(line: 333, column: 9, scope: !3726)
!3736 = !DILocation(line: 335, column: 26, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3733, file: !248, line: 333, column: 43)
!3738 = !DILocation(line: 336, column: 5, scope: !3737)
!3739 = !DILocation(line: 338, column: 5, scope: !3726)
!3740 = !DILocation(line: 339, column: 5, scope: !3726)
!3741 = !DILocation(line: 341, column: 9, scope: !3726)
!3742 = !DILocation(line: 342, column: 9, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3744, file: !248, line: 341, column: 22)
!3744 = distinct !DILexicalBlock(scope: !3726, file: !248, line: 341, column: 9)
!3745 = !DILocation(line: 343, column: 5, scope: !3743)
!3746 = !DILocation(line: 344, column: 12, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !248, line: 344, column: 12)
!3748 = distinct !DILexicalBlock(scope: !3749, file: !248, line: 343, column: 30)
!3749 = distinct !DILexicalBlock(scope: !3744, file: !248, line: 343, column: 16)
!3750 = !DILocation(line: 344, column: 29, scope: !3747)
!3751 = !DILocation(line: 344, column: 12, scope: !3748)
!3752 = !DILocation(line: 345, column: 13, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3747, file: !248, line: 344, column: 48)
!3754 = !DILocation(line: 346, column: 9, scope: !3753)
!3755 = !DILocation(line: 347, column: 13, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3747, file: !248, line: 346, column: 16)
!3757 = !DILocation(line: 350, column: 9, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3759, file: !248, line: 349, column: 29)
!3759 = distinct !DILexicalBlock(scope: !3749, file: !248, line: 349, column: 16)
!3760 = !DILocation(line: 352, column: 9, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !248, line: 352, column: 9)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !248, line: 352, column: 9)
!3763 = distinct !DILexicalBlock(scope: !3759, file: !248, line: 351, column: 12)
!3764 = distinct !{!3764, !3760, !3760}
!3765 = !DILocation(line: 354, column: 21, scope: !3726)
!3766 = !DILocation(line: 355, column: 1, scope: !3726)
!3767 = distinct !DISubprogram(name: "flash_Switch_Device_Mode", scope: !248, file: !248, line: 215, type: !3181, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !3768)
!3768 = !{!3769, !3770}
!3769 = !DILocalVariable(name: "mode", arg: 1, scope: !3767, file: !248, line: 215, type: !61)
!3770 = !DILocalVariable(name: "ptr", scope: !3767, file: !248, line: 217, type: !257)
!3771 = !DILocation(line: 0, scope: !3767)
!3772 = !DILocation(line: 220, column: 5, scope: !3767)
!3773 = !DILocation(line: 223, column: 17, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !248, line: 223, column: 17)
!3775 = distinct !DILexicalBlock(scope: !3767, file: !248, line: 220, column: 19)
!3776 = !DILocation(line: 223, column: 17, scope: !3775)
!3777 = !DILocation(line: 227, column: 22, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !248, line: 227, column: 22)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !248, line: 225, column: 55)
!3780 = distinct !DILexicalBlock(scope: !3774, file: !248, line: 225, column: 23)
!3781 = !DILocation(line: 227, column: 37, scope: !3778)
!3782 = !DILocation(line: 227, column: 22, scope: !3779)
!3783 = !DILocation(line: 230, column: 13, scope: !3779)
!3784 = !DILocation(line: 232, column: 13, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !248, line: 230, column: 59)
!3786 = distinct !DILexicalBlock(scope: !3780, file: !248, line: 230, column: 24)
!3787 = !DILocation(line: 233, column: 23, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !248, line: 232, column: 61)
!3789 = distinct !DILexicalBlock(scope: !3786, file: !248, line: 232, column: 24)
!3790 = !DILocation(line: 234, column: 13, scope: !3788)
!3791 = !DILocation(line: 239, column: 17, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3775, file: !248, line: 239, column: 17)
!3793 = !DILocation(line: 239, column: 17, scope: !3775)
!3794 = !DILocation(line: 243, column: 22, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !248, line: 243, column: 22)
!3796 = distinct !DILexicalBlock(scope: !3797, file: !248, line: 241, column: 55)
!3797 = distinct !DILexicalBlock(scope: !3792, file: !248, line: 241, column: 23)
!3798 = !DILocation(line: 243, column: 37, scope: !3795)
!3799 = !DILocation(line: 243, column: 22, scope: !3796)
!3800 = !DILocation(line: 246, column: 13, scope: !3796)
!3801 = !DILocation(line: 248, column: 13, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3803, file: !248, line: 246, column: 59)
!3803 = distinct !DILexicalBlock(scope: !3797, file: !248, line: 246, column: 24)
!3804 = !DILocation(line: 249, column: 23, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3806, file: !248, line: 248, column: 61)
!3806 = distinct !DILexicalBlock(scope: !3803, file: !248, line: 248, column: 24)
!3807 = !DILocation(line: 250, column: 13, scope: !3805)
!3808 = !DILocation(line: 254, column: 17, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3775, file: !248, line: 254, column: 17)
!3810 = !DILocation(line: 254, column: 17, scope: !3775)
!3811 = !DILocation(line: 258, column: 22, scope: !3812)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !248, line: 258, column: 22)
!3813 = distinct !DILexicalBlock(scope: !3814, file: !248, line: 256, column: 55)
!3814 = distinct !DILexicalBlock(scope: !3809, file: !248, line: 256, column: 23)
!3815 = !DILocation(line: 258, column: 37, scope: !3812)
!3816 = !DILocation(line: 258, column: 22, scope: !3813)
!3817 = !DILocation(line: 261, column: 13, scope: !3813)
!3818 = !DILocation(line: 263, column: 13, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !248, line: 261, column: 59)
!3820 = distinct !DILexicalBlock(scope: !3814, file: !248, line: 261, column: 24)
!3821 = !DILocation(line: 264, column: 23, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !248, line: 263, column: 61)
!3823 = distinct !DILexicalBlock(scope: !3820, file: !248, line: 263, column: 24)
!3824 = !DILocation(line: 265, column: 13, scope: !3822)
!3825 = !DILocation(line: 268, column: 13, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !248, line: 268, column: 13)
!3827 = distinct !DILexicalBlock(scope: !3775, file: !248, line: 268, column: 13)
!3828 = distinct !{!3828, !3825, !3825}
!3829 = !DILocation(line: 272, column: 5, scope: !3767)
!3830 = !DILocation(line: 0, scope: !3775)
!3831 = !DILocation(line: 273, column: 1, scope: !3767)
!3832 = distinct !DISubprogram(name: "flash_config", scope: !248, file: !248, line: 357, type: !154, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !3833)
!3833 = !{!3834, !3835, !3836, !3837}
!3834 = !DILocalVariable(name: "i", scope: !3832, file: !248, line: 360, type: !7)
!3835 = !DILocalVariable(name: "jedec", scope: !3832, file: !248, line: 361, type: !259)
!3836 = !DILocalVariable(name: "buf", scope: !3832, file: !248, line: 362, type: !3638)
!3837 = !DILocalVariable(name: "info", scope: !3832, file: !248, line: 363, type: !260)
!3838 = !DILocation(line: 362, column: 5, scope: !3832)
!3839 = !DILocation(line: 362, column: 19, scope: !3832)
!3840 = !DILocation(line: 377, column: 26, scope: !3832)
!3841 = !DILocation(line: 377, column: 24, scope: !3832)
!3842 = !DILocation(line: 380, column: 19, scope: !3832)
!3843 = !DILocation(line: 382, column: 5, scope: !3832)
!3844 = !DILocation(line: 383, column: 45, scope: !3832)
!3845 = !DILocation(line: 383, column: 30, scope: !3832)
!3846 = !DILocation(line: 383, column: 52, scope: !3832)
!3847 = !DILocation(line: 383, column: 77, scope: !3832)
!3848 = !DILocation(line: 383, column: 62, scope: !3832)
!3849 = !DILocation(line: 383, column: 84, scope: !3832)
!3850 = !DILocation(line: 383, column: 59, scope: !3832)
!3851 = !DILocation(line: 0, scope: !3832)
!3852 = !DILocation(line: 385, column: 5, scope: !3832)
!3853 = !DILocation(line: 387, column: 5, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3832, file: !248, line: 387, column: 5)
!3855 = !DILocation(line: 388, column: 17, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3857, file: !248, line: 387, column: 70)
!3857 = distinct !DILexicalBlock(scope: !3854, file: !248, line: 387, column: 5)
!3858 = !DILocation(line: 389, column: 19, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3856, file: !248, line: 389, column: 13)
!3860 = !DILocation(line: 389, column: 25, scope: !3859)
!3861 = !DILocation(line: 389, column: 22, scope: !3859)
!3862 = !DILocation(line: 389, column: 32, scope: !3859)
!3863 = !DILocation(line: 389, column: 41, scope: !3859)
!3864 = !DILocation(line: 389, column: 50, scope: !3859)
!3865 = !DILocation(line: 389, column: 13, scope: !3856)
!3866 = !DILocation(line: 390, column: 13, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3859, file: !248, line: 389, column: 60)
!3868 = !DILocation(line: 391, column: 27, scope: !3867)
!3869 = !DILocation(line: 392, column: 26, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3867, file: !248, line: 392, column: 17)
!3871 = !DILocation(line: 392, column: 17, scope: !3867)
!3872 = !DILocation(line: 394, column: 33, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3870, file: !248, line: 394, column: 24)
!3874 = !DILocation(line: 394, column: 24, scope: !3870)
!3875 = !DILocation(line: 396, column: 33, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3873, file: !248, line: 396, column: 24)
!3877 = !DILocation(line: 396, column: 24, scope: !3873)
!3878 = !DILocation(line: 398, column: 33, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3876, file: !248, line: 398, column: 24)
!3880 = !DILocation(line: 398, column: 24, scope: !3876)
!3881 = !DILocation(line: 399, column: 34, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3879, file: !248, line: 398, column: 52)
!3883 = !DILocation(line: 404, column: 9, scope: !3832)
!3884 = !DILocation(line: 0, scope: !3870)
!3885 = !DILocation(line: 387, column: 66, scope: !3857)
!3886 = !DILocation(line: 387, column: 19, scope: !3857)
!3887 = distinct !{!3887, !3853, !3888}
!3888 = !DILocation(line: 402, column: 5, scope: !3854)
!3889 = !DILocation(line: 404, column: 9, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3832, file: !248, line: 404, column: 9)
!3891 = !DILocation(line: 404, column: 26, scope: !3890)
!3892 = !DILocation(line: 405, column: 51, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3890, file: !248, line: 404, column: 47)
!3894 = !DILocation(line: 405, column: 23, scope: !3893)
!3895 = !DILocation(line: 407, column: 19, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3893, file: !248, line: 407, column: 13)
!3897 = !DILocation(line: 407, column: 25, scope: !3896)
!3898 = !DILocation(line: 407, column: 22, scope: !3896)
!3899 = !DILocation(line: 407, column: 32, scope: !3896)
!3900 = !DILocation(line: 407, column: 41, scope: !3896)
!3901 = !DILocation(line: 407, column: 50, scope: !3896)
!3902 = !DILocation(line: 407, column: 13, scope: !3893)
!3903 = !DILocation(line: 411, column: 13, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3896, file: !248, line: 410, column: 16)
!3905 = !DILocation(line: 412, column: 13, scope: !3904)
!3906 = !DILocation(line: 414, column: 5, scope: !3893)
!3907 = !DILocation(line: 416, column: 10, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3832, file: !248, line: 416, column: 9)
!3909 = !DILocation(line: 416, column: 9, scope: !3832)
!3910 = !DILocation(line: 417, column: 9, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3908, file: !248, line: 416, column: 25)
!3912 = !DILocation(line: 419, column: 23, scope: !3911)
!3913 = !DILocation(line: 420, column: 5, scope: !3911)
!3914 = !DILocation(line: 422, column: 1, scope: !3832)
!3915 = distinct !DISubprogram(name: "flash_init", scope: !248, file: !248, line: 425, type: !1017, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !3916)
!3916 = !{!3917, !3918, !3919, !3920, !3921}
!3917 = !DILocalVariable(name: "security_enable", arg: 1, scope: !3915, file: !248, line: 425, type: !7)
!3918 = !DILocalVariable(name: "i", scope: !3915, file: !248, line: 427, type: !7)
!3919 = !DILocalVariable(name: "jedec", scope: !3915, file: !248, line: 428, type: !259)
!3920 = !DILocalVariable(name: "buf", scope: !3915, file: !248, line: 429, type: !3638)
!3921 = !DILocalVariable(name: "info", scope: !3915, file: !248, line: 430, type: !260)
!3922 = !DILocation(line: 0, scope: !3915)
!3923 = !DILocation(line: 429, column: 5, scope: !3915)
!3924 = !DILocation(line: 429, column: 19, scope: !3915)
!3925 = !DILocation(line: 436, column: 5, scope: !3915)
!3926 = !DILocation(line: 438, column: 26, scope: !3915)
!3927 = !DILocation(line: 438, column: 24, scope: !3915)
!3928 = !DILocation(line: 440, column: 5, scope: !3915)
!3929 = !DILocation(line: 442, column: 19, scope: !3915)
!3930 = !DILocation(line: 444, column: 5, scope: !3915)
!3931 = !DILocation(line: 445, column: 45, scope: !3915)
!3932 = !DILocation(line: 445, column: 30, scope: !3915)
!3933 = !DILocation(line: 445, column: 52, scope: !3915)
!3934 = !DILocation(line: 445, column: 77, scope: !3915)
!3935 = !DILocation(line: 445, column: 62, scope: !3915)
!3936 = !DILocation(line: 445, column: 84, scope: !3915)
!3937 = !DILocation(line: 445, column: 59, scope: !3915)
!3938 = !DILocation(line: 447, column: 5, scope: !3915)
!3939 = !DILocation(line: 449, column: 5, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3915, file: !248, line: 449, column: 5)
!3941 = !DILocation(line: 450, column: 17, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !248, line: 449, column: 70)
!3943 = distinct !DILexicalBlock(scope: !3940, file: !248, line: 449, column: 5)
!3944 = !DILocation(line: 451, column: 19, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3942, file: !248, line: 451, column: 13)
!3946 = !DILocation(line: 451, column: 25, scope: !3945)
!3947 = !DILocation(line: 451, column: 22, scope: !3945)
!3948 = !DILocation(line: 451, column: 32, scope: !3945)
!3949 = !DILocation(line: 451, column: 41, scope: !3945)
!3950 = !DILocation(line: 451, column: 50, scope: !3945)
!3951 = !DILocation(line: 451, column: 13, scope: !3942)
!3952 = !DILocation(line: 452, column: 13, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3945, file: !248, line: 451, column: 60)
!3954 = !DILocation(line: 453, column: 27, scope: !3953)
!3955 = !DILocation(line: 454, column: 9, scope: !3953)
!3956 = !DILocation(line: 449, column: 66, scope: !3943)
!3957 = !DILocation(line: 449, column: 19, scope: !3943)
!3958 = distinct !{!3958, !3939, !3959}
!3959 = !DILocation(line: 455, column: 5, scope: !3940)
!3960 = !DILocation(line: 457, column: 10, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3915, file: !248, line: 457, column: 9)
!3962 = !DILocation(line: 457, column: 9, scope: !3915)
!3963 = !DILocation(line: 458, column: 9, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3961, file: !248, line: 457, column: 25)
!3965 = !DILocation(line: 460, column: 23, scope: !3964)
!3966 = !DILocation(line: 461, column: 5, scope: !3964)
!3967 = !DILocation(line: 462, column: 1, scope: !3915)
!3968 = distinct !DISubprogram(name: "flash_reset", scope: !248, file: !248, line: 170, type: !154, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !1387)
!3969 = !DILocation(line: 172, column: 5, scope: !3968)
!3970 = !DILocation(line: 173, column: 5, scope: !3968)
!3971 = !DILocation(line: 176, column: 5, scope: !3968)
!3972 = !DILocation(line: 177, column: 5, scope: !3968)
!3973 = !DILocation(line: 179, column: 5, scope: !3968)
!3974 = distinct !DISubprogram(name: "flash_wait_ready", scope: !248, file: !248, line: 469, type: !3975, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !3977)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!7, !7}
!3977 = !{!3978, !3979, !3980}
!3978 = !DILocalVariable(name: "sleep_ms", arg: 1, scope: !3974, file: !248, line: 469, type: !7)
!3979 = !DILocalVariable(name: "count", scope: !3974, file: !248, line: 471, type: !7)
!3980 = !DILocalVariable(name: "sr", scope: !3974, file: !248, line: 472, type: !58)
!3981 = !DILocation(line: 0, scope: !3974)
!3982 = !DILocation(line: 472, column: 5, scope: !3974)
!3983 = !DILocation(line: 472, column: 19, scope: !3974)
!3984 = !DILocation(line: 479, column: 28, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !248, line: 479, column: 5)
!3986 = distinct !DILexicalBlock(scope: !3974, file: !248, line: 479, column: 5)
!3987 = !DILocation(line: 479, column: 5, scope: !3986)
!3988 = !DILocation(line: 480, column: 14, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !248, line: 480, column: 13)
!3990 = distinct !DILexicalBlock(scope: !3985, file: !248, line: 479, column: 64)
!3991 = !DILocation(line: 480, column: 34, scope: !3989)
!3992 = !DILocation(line: 480, column: 13, scope: !3990)
!3993 = !DILocation(line: 482, column: 22, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3989, file: !248, line: 482, column: 20)
!3995 = !DILocation(line: 482, column: 25, scope: !3994)
!3996 = !DILocation(line: 482, column: 20, scope: !3989)
!3997 = !DILocation(line: 493, column: 1, scope: !3974)
!3998 = !DILocation(line: 483, column: 13, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3994, file: !248, line: 482, column: 36)
!4000 = !DILocation(line: 486, column: 9, scope: !3990)
!4001 = !DILocation(line: 479, column: 60, scope: !3985)
!4002 = distinct !{!4002, !3987, !4003}
!4003 = !DILocation(line: 488, column: 5, scope: !3986)
!4004 = !DILocation(line: 491, column: 5, scope: !3974)
!4005 = distinct !DISubprogram(name: "flash_read_sr", scope: !248, file: !248, line: 623, type: !4006, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4008)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{!7, !241}
!4008 = !{!4009, !4010, !4011}
!4009 = !DILocalVariable(name: "val", arg: 1, scope: !4005, file: !248, line: 623, type: !241)
!4010 = !DILocalVariable(name: "retval", scope: !4005, file: !248, line: 625, type: !7)
!4011 = !DILocalVariable(name: "code", scope: !4005, file: !248, line: 626, type: !58)
!4012 = !DILocation(line: 0, scope: !4005)
!4013 = !DILocation(line: 626, column: 5, scope: !4005)
!4014 = !DILocation(line: 626, column: 19, scope: !4005)
!4015 = !DILocation(line: 628, column: 14, scope: !4005)
!4016 = !DILocation(line: 629, column: 16, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4005, file: !248, line: 629, column: 9)
!4018 = !DILocation(line: 634, column: 1, scope: !4005)
!4019 = distinct !DISubprogram(name: "flash_read_manu_id", scope: !248, file: !248, line: 505, type: !3713, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4020)
!4020 = !{!4021, !4022, !4023, !4024}
!4021 = !DILocalVariable(name: "buf", arg: 1, scope: !4019, file: !248, line: 505, type: !241)
!4022 = !DILocalVariable(name: "buf_size", arg: 2, scope: !4019, file: !248, line: 505, type: !7)
!4023 = !DILocalVariable(name: "code", scope: !4019, file: !248, line: 507, type: !293)
!4024 = !DILocalVariable(name: "rc", scope: !4019, file: !248, line: 508, type: !7)
!4025 = !DILocation(line: 0, scope: !4019)
!4026 = !DILocation(line: 507, column: 5, scope: !4019)
!4027 = !DILocation(line: 507, column: 19, scope: !4019)
!4028 = !DILocation(line: 510, column: 10, scope: !4019)
!4029 = !DILocation(line: 513, column: 1, scope: !4019)
!4030 = !DILocation(line: 512, column: 5, scope: !4019)
!4031 = distinct !DISubprogram(name: "flash_read_manu_id_quad", scope: !248, file: !248, line: 515, type: !3713, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4032)
!4032 = !{!4033, !4034, !4035, !4036}
!4033 = !DILocalVariable(name: "buf", arg: 1, scope: !4031, file: !248, line: 515, type: !241)
!4034 = !DILocalVariable(name: "buf_size", arg: 2, scope: !4031, file: !248, line: 515, type: !7)
!4035 = !DILocalVariable(name: "code", scope: !4031, file: !248, line: 517, type: !293)
!4036 = !DILocalVariable(name: "rc", scope: !4031, file: !248, line: 518, type: !7)
!4037 = !DILocation(line: 0, scope: !4031)
!4038 = !DILocation(line: 517, column: 5, scope: !4031)
!4039 = !DILocation(line: 517, column: 19, scope: !4031)
!4040 = !DILocation(line: 520, column: 10, scope: !4031)
!4041 = !DILocation(line: 523, column: 1, scope: !4031)
!4042 = !DILocation(line: 522, column: 5, scope: !4031)
!4043 = distinct !DISubprogram(name: "flash_read", scope: !248, file: !248, line: 526, type: !4044, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4046)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{!7, !241, !30, !7}
!4046 = !{!4047, !4048, !4049, !4050, !4051}
!4047 = !DILocalVariable(name: "buf", arg: 1, scope: !4043, file: !248, line: 526, type: !241)
!4048 = !DILocalVariable(name: "from", arg: 2, scope: !4043, file: !248, line: 526, type: !30)
!4049 = !DILocalVariable(name: "len", arg: 3, scope: !4043, file: !248, line: 526, type: !7)
!4050 = !DILocalVariable(name: "cmd", scope: !4043, file: !248, line: 528, type: !293)
!4051 = !DILocalVariable(name: "rdlen", scope: !4043, file: !248, line: 529, type: !7)
!4052 = !DILocation(line: 0, scope: !4043)
!4053 = !DILocation(line: 528, column: 5, scope: !4043)
!4054 = !DILocation(line: 528, column: 19, scope: !4043)
!4055 = !DILocation(line: 532, column: 13, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4043, file: !248, line: 532, column: 9)
!4057 = !DILocation(line: 532, column: 9, scope: !4043)
!4058 = !DILocation(line: 537, column: 9, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4043, file: !248, line: 537, column: 9)
!4060 = !DILocation(line: 542, column: 22, scope: !4043)
!4061 = !DILocation(line: 543, column: 12, scope: !4043)
!4062 = !DILocation(line: 544, column: 19, scope: !4043)
!4063 = !DILocation(line: 544, column: 14, scope: !4043)
!4064 = !DILocation(line: 544, column: 5, scope: !4043)
!4065 = !DILocation(line: 544, column: 12, scope: !4043)
!4066 = !DILocation(line: 545, column: 19, scope: !4043)
!4067 = !DILocation(line: 545, column: 14, scope: !4043)
!4068 = !DILocation(line: 545, column: 5, scope: !4043)
!4069 = !DILocation(line: 545, column: 12, scope: !4043)
!4070 = !DILocation(line: 546, column: 14, scope: !4043)
!4071 = !DILocation(line: 546, column: 5, scope: !4043)
!4072 = !DILocation(line: 546, column: 12, scope: !4043)
!4073 = !DILocation(line: 548, column: 13, scope: !4043)
!4074 = !DILocation(line: 553, column: 5, scope: !4043)
!4075 = !DILocation(line: 554, column: 1, scope: !4043)
!4076 = distinct !DISubprogram(name: "flash_fast_read", scope: !248, file: !248, line: 557, type: !4077, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4079)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!7, !241, !30, !7, !7}
!4079 = !{!4080, !4081, !4082, !4083, !4084, !4086, !4087, !4088}
!4080 = !DILocalVariable(name: "buf", arg: 1, scope: !4076, file: !248, line: 557, type: !241)
!4081 = !DILocalVariable(name: "from", arg: 2, scope: !4076, file: !248, line: 557, type: !30)
!4082 = !DILocalVariable(name: "len", arg: 3, scope: !4076, file: !248, line: 557, type: !7)
!4083 = !DILocalVariable(name: "dummy_cycle", arg: 4, scope: !4076, file: !248, line: 557, type: !7)
!4084 = !DILocalVariable(name: "cmd", scope: !4076, file: !248, line: 559, type: !4085)
!4085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 256, elements: !1027)
!4086 = !DILocalVariable(name: "cmd_len", scope: !4076, file: !248, line: 560, type: !7)
!4087 = !DILocalVariable(name: "rdlen", scope: !4076, file: !248, line: 561, type: !7)
!4088 = !DILocalVariable(name: "i", scope: !4076, file: !248, line: 561, type: !7)
!4089 = !DILocation(line: 0, scope: !4076)
!4090 = !DILocation(line: 559, column: 5, scope: !4076)
!4091 = !DILocation(line: 559, column: 19, scope: !4076)
!4092 = !DILocation(line: 564, column: 13, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4076, file: !248, line: 564, column: 9)
!4094 = !DILocation(line: 564, column: 9, scope: !4076)
!4095 = !DILocation(line: 569, column: 9, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4076, file: !248, line: 569, column: 9)
!4097 = !DILocation(line: 574, column: 12, scope: !4076)
!4098 = !DILocation(line: 575, column: 19, scope: !4076)
!4099 = !DILocation(line: 575, column: 14, scope: !4076)
!4100 = !DILocation(line: 575, column: 5, scope: !4076)
!4101 = !DILocation(line: 575, column: 12, scope: !4076)
!4102 = !DILocation(line: 576, column: 19, scope: !4076)
!4103 = !DILocation(line: 576, column: 14, scope: !4076)
!4104 = !DILocation(line: 576, column: 5, scope: !4076)
!4105 = !DILocation(line: 576, column: 12, scope: !4076)
!4106 = !DILocation(line: 577, column: 14, scope: !4076)
!4107 = !DILocation(line: 577, column: 5, scope: !4076)
!4108 = !DILocation(line: 577, column: 12, scope: !4076)
!4109 = !DILocation(line: 580, column: 19, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !248, line: 580, column: 5)
!4111 = distinct !DILexicalBlock(scope: !4076, file: !248, line: 580, column: 5)
!4112 = !DILocation(line: 580, column: 5, scope: !4111)
!4113 = !DILocation(line: 581, column: 15, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4110, file: !248, line: 580, column: 62)
!4115 = !DILocation(line: 581, column: 9, scope: !4114)
!4116 = !DILocation(line: 581, column: 20, scope: !4114)
!4117 = !DILocation(line: 580, column: 58, scope: !4110)
!4118 = !DILocation(line: 580, column: 33, scope: !4110)
!4119 = distinct !{!4119, !4112, !4120}
!4120 = !DILocation(line: 583, column: 5, scope: !4111)
!4121 = !DILocation(line: 585, column: 13, scope: !4076)
!4122 = !DILocation(line: 590, column: 5, scope: !4076)
!4123 = !DILocation(line: 591, column: 1, scope: !4076)
!4124 = distinct !DISubprogram(name: "flash_read_sr2", scope: !248, file: !248, line: 636, type: !4006, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4125)
!4125 = !{!4126, !4127, !4128}
!4126 = !DILocalVariable(name: "val", arg: 1, scope: !4124, file: !248, line: 636, type: !241)
!4127 = !DILocalVariable(name: "retval", scope: !4124, file: !248, line: 638, type: !7)
!4128 = !DILocalVariable(name: "code", scope: !4124, file: !248, line: 639, type: !58)
!4129 = !DILocation(line: 0, scope: !4124)
!4130 = !DILocation(line: 639, column: 5, scope: !4124)
!4131 = !DILocation(line: 641, column: 9, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4124, file: !248, line: 641, column: 9)
!4133 = !DILocation(line: 641, column: 45, scope: !4132)
!4134 = !DILocation(line: 643, column: 14, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4132, file: !248, line: 641, column: 80)
!4136 = !DILocation(line: 644, column: 5, scope: !4135)
!4137 = !DILocation(line: 646, column: 14, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !248, line: 644, column: 50)
!4139 = distinct !DILexicalBlock(scope: !4132, file: !248, line: 644, column: 16)
!4140 = !DILocation(line: 647, column: 5, scope: !4138)
!4141 = !DILocation(line: 649, column: 14, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !248, line: 647, column: 52)
!4143 = distinct !DILexicalBlock(scope: !4139, file: !248, line: 647, column: 16)
!4144 = !DILocation(line: 650, column: 5, scope: !4142)
!4145 = !DILocation(line: 652, column: 16, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4147, file: !248, line: 650, column: 54)
!4147 = distinct !DILexicalBlock(scope: !4143, file: !248, line: 650, column: 16)
!4148 = !DILocation(line: 652, column: 14, scope: !4146)
!4149 = !DILocation(line: 653, column: 5, scope: !4146)
!4150 = !DILocation(line: 655, column: 9, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4147, file: !248, line: 654, column: 10)
!4152 = !DILocation(line: 656, column: 14, scope: !4151)
!4153 = !DILocation(line: 659, column: 14, scope: !4124)
!4154 = !DILocation(line: 660, column: 16, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4124, file: !248, line: 660, column: 9)
!4156 = !DILocation(line: 665, column: 1, scope: !4124)
!4157 = distinct !DISubprogram(name: "flash_unprotect", scope: !248, file: !248, line: 667, type: !3280, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4158)
!4158 = !{!4159}
!4159 = !DILocalVariable(name: "sr", scope: !4157, file: !248, line: 669, type: !58)
!4160 = !DILocation(line: 669, column: 5, scope: !4157)
!4161 = !DILocation(line: 0, scope: !4157)
!4162 = !DILocation(line: 669, column: 19, scope: !4157)
!4163 = !DILocation(line: 671, column: 9, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4157, file: !248, line: 671, column: 9)
!4165 = !DILocation(line: 671, column: 28, scope: !4164)
!4166 = !DILocation(line: 671, column: 9, scope: !4157)
!4167 = !DILocation(line: 676, column: 10, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4157, file: !248, line: 676, column: 9)
!4169 = !DILocation(line: 676, column: 13, scope: !4168)
!4170 = !DILocation(line: 676, column: 43, scope: !4168)
!4171 = !DILocation(line: 676, column: 9, scope: !4157)
!4172 = !DILocation(line: 677, column: 12, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4168, file: !248, line: 676, column: 49)
!4174 = !DILocation(line: 678, column: 9, scope: !4173)
!4175 = !DILocation(line: 679, column: 5, scope: !4173)
!4176 = !DILocation(line: 681, column: 1, scope: !4157)
!4177 = distinct !DISubprogram(name: "flash_write_sr", scope: !248, file: !248, line: 609, type: !4006, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4178)
!4178 = !{!4179, !4180, !4181}
!4179 = !DILocalVariable(name: "val", arg: 1, scope: !4177, file: !248, line: 609, type: !241)
!4180 = !DILocalVariable(name: "retval", scope: !4177, file: !248, line: 611, type: !7)
!4181 = !DILocalVariable(name: "code", scope: !4177, file: !248, line: 612, type: !58)
!4182 = !DILocation(line: 0, scope: !4177)
!4183 = !DILocation(line: 612, column: 5, scope: !4177)
!4184 = !DILocation(line: 612, column: 20, scope: !4177)
!4185 = !DILocation(line: 614, column: 14, scope: !4177)
!4186 = !DILocation(line: 621, column: 1, scope: !4177)
!4187 = distinct !DISubprogram(name: "flash_protect", scope: !248, file: !248, line: 686, type: !3280, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4188)
!4188 = !{!4189}
!4189 = !DILocalVariable(name: "sr", scope: !4187, file: !248, line: 688, type: !58)
!4190 = !DILocation(line: 688, column: 5, scope: !4187)
!4191 = !DILocation(line: 0, scope: !4187)
!4192 = !DILocation(line: 688, column: 19, scope: !4187)
!4193 = !DILocation(line: 690, column: 9, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !4187, file: !248, line: 690, column: 9)
!4195 = !DILocation(line: 690, column: 28, scope: !4194)
!4196 = !DILocation(line: 690, column: 9, scope: !4187)
!4197 = !DILocation(line: 695, column: 8, scope: !4187)
!4198 = !DILocation(line: 696, column: 5, scope: !4187)
!4199 = !DILocation(line: 697, column: 5, scope: !4187)
!4200 = !DILocation(line: 698, column: 1, scope: !4187)
!4201 = distinct !DISubprogram(name: "flash_write_enable", scope: !248, file: !248, line: 701, type: !3280, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4202)
!4202 = !{!4203}
!4203 = !DILocalVariable(name: "code", scope: !4201, file: !248, line: 703, type: !58)
!4204 = !DILocation(line: 703, column: 5, scope: !4201)
!4205 = !DILocation(line: 0, scope: !4201)
!4206 = !DILocation(line: 703, column: 19, scope: !4201)
!4207 = !DILocation(line: 704, column: 12, scope: !4201)
!4208 = !DILocation(line: 705, column: 1, scope: !4201)
!4209 = !DILocation(line: 704, column: 5, scope: !4201)
!4210 = distinct !DISubprogram(name: "flash_write_disable", scope: !248, file: !248, line: 707, type: !3280, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4211)
!4211 = !{!4212}
!4212 = !DILocalVariable(name: "code", scope: !4210, file: !248, line: 709, type: !58)
!4213 = !DILocation(line: 709, column: 5, scope: !4210)
!4214 = !DILocation(line: 0, scope: !4210)
!4215 = !DILocation(line: 709, column: 19, scope: !4210)
!4216 = !DILocation(line: 710, column: 12, scope: !4210)
!4217 = !DILocation(line: 711, column: 1, scope: !4210)
!4218 = !DILocation(line: 710, column: 5, scope: !4210)
!4219 = distinct !DISubprogram(name: "flash_erase_sector", scope: !248, file: !248, line: 713, type: !4220, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4222)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!7, !30}
!4222 = !{!4223, !4224, !4225, !4226}
!4223 = !DILocalVariable(name: "offset", arg: 1, scope: !4219, file: !248, line: 713, type: !30)
!4224 = !DILocalVariable(name: "buf", scope: !4219, file: !248, line: 715, type: !3638)
!4225 = !DILocalVariable(name: "savedMask", scope: !4219, file: !248, line: 716, type: !61)
!4226 = !DILocalVariable(name: "result", scope: !4219, file: !248, line: 717, type: !553)
!4227 = !DILocation(line: 0, scope: !4219)
!4228 = !DILocation(line: 715, column: 5, scope: !4219)
!4229 = !DILocation(line: 715, column: 19, scope: !4219)
!4230 = !DILocation(line: 720, column: 9, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4219, file: !248, line: 720, column: 9)
!4232 = !DILocation(line: 724, column: 22, scope: !4219)
!4233 = !DILocation(line: 725, column: 5, scope: !4219)
!4234 = !DILocation(line: 726, column: 18, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4219, file: !248, line: 725, column: 8)
!4236 = !DILocation(line: 727, column: 19, scope: !4219)
!4237 = !DILocation(line: 727, column: 5, scope: !4235)
!4238 = distinct !{!4238, !4233, !4239}
!4239 = !DILocation(line: 727, column: 28, scope: !4219)
!4240 = !DILocation(line: 729, column: 17, scope: !4219)
!4241 = !DILocation(line: 732, column: 12, scope: !4219)
!4242 = !DILocation(line: 733, column: 21, scope: !4219)
!4243 = !DILocation(line: 733, column: 14, scope: !4219)
!4244 = !DILocation(line: 733, column: 5, scope: !4219)
!4245 = !DILocation(line: 733, column: 12, scope: !4219)
!4246 = !DILocation(line: 734, column: 21, scope: !4219)
!4247 = !DILocation(line: 734, column: 14, scope: !4219)
!4248 = !DILocation(line: 734, column: 5, scope: !4219)
!4249 = !DILocation(line: 734, column: 12, scope: !4219)
!4250 = !DILocation(line: 735, column: 14, scope: !4219)
!4251 = !DILocation(line: 735, column: 5, scope: !4219)
!4252 = !DILocation(line: 735, column: 12, scope: !4219)
!4253 = !DILocation(line: 736, column: 5, scope: !4219)
!4254 = !DILocation(line: 737, column: 5, scope: !4219)
!4255 = !DILocation(line: 738, column: 5, scope: !4219)
!4256 = !DILocation(line: 740, column: 5, scope: !4219)
!4257 = !DILocation(line: 741, column: 18, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4219, file: !248, line: 740, column: 8)
!4259 = !DILocation(line: 742, column: 19, scope: !4219)
!4260 = !DILocation(line: 742, column: 5, scope: !4258)
!4261 = distinct !{!4261, !4256, !4262}
!4262 = !DILocation(line: 742, column: 28, scope: !4219)
!4263 = !DILocation(line: 744, column: 5, scope: !4219)
!4264 = !DILocation(line: 746, column: 1, scope: !4219)
!4265 = distinct !DISubprogram(name: "flash_erase_sector_32k", scope: !248, file: !248, line: 748, type: !4220, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4266)
!4266 = !{!4267, !4268, !4269, !4270}
!4267 = !DILocalVariable(name: "offset", arg: 1, scope: !4265, file: !248, line: 748, type: !30)
!4268 = !DILocalVariable(name: "buf", scope: !4265, file: !248, line: 750, type: !3638)
!4269 = !DILocalVariable(name: "savedMask", scope: !4265, file: !248, line: 751, type: !61)
!4270 = !DILocalVariable(name: "result", scope: !4265, file: !248, line: 752, type: !553)
!4271 = !DILocation(line: 0, scope: !4265)
!4272 = !DILocation(line: 750, column: 5, scope: !4265)
!4273 = !DILocation(line: 750, column: 19, scope: !4265)
!4274 = !DILocation(line: 755, column: 9, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4265, file: !248, line: 755, column: 9)
!4276 = !DILocation(line: 759, column: 22, scope: !4265)
!4277 = !DILocation(line: 760, column: 5, scope: !4265)
!4278 = !DILocation(line: 761, column: 18, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4265, file: !248, line: 760, column: 8)
!4280 = !DILocation(line: 762, column: 19, scope: !4265)
!4281 = !DILocation(line: 762, column: 5, scope: !4279)
!4282 = distinct !{!4282, !4277, !4283}
!4283 = !DILocation(line: 762, column: 28, scope: !4265)
!4284 = !DILocation(line: 764, column: 17, scope: !4265)
!4285 = !DILocation(line: 765, column: 12, scope: !4265)
!4286 = !DILocation(line: 766, column: 21, scope: !4265)
!4287 = !DILocation(line: 766, column: 14, scope: !4265)
!4288 = !DILocation(line: 766, column: 5, scope: !4265)
!4289 = !DILocation(line: 766, column: 12, scope: !4265)
!4290 = !DILocation(line: 767, column: 21, scope: !4265)
!4291 = !DILocation(line: 767, column: 14, scope: !4265)
!4292 = !DILocation(line: 767, column: 5, scope: !4265)
!4293 = !DILocation(line: 767, column: 12, scope: !4265)
!4294 = !DILocation(line: 768, column: 14, scope: !4265)
!4295 = !DILocation(line: 768, column: 5, scope: !4265)
!4296 = !DILocation(line: 768, column: 12, scope: !4265)
!4297 = !DILocation(line: 769, column: 5, scope: !4265)
!4298 = !DILocation(line: 770, column: 5, scope: !4265)
!4299 = !DILocation(line: 771, column: 5, scope: !4265)
!4300 = !DILocation(line: 772, column: 18, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4265, file: !248, line: 771, column: 8)
!4302 = !DILocation(line: 773, column: 19, scope: !4265)
!4303 = !DILocation(line: 773, column: 5, scope: !4301)
!4304 = distinct !{!4304, !4299, !4305}
!4305 = !DILocation(line: 773, column: 28, scope: !4265)
!4306 = !DILocation(line: 775, column: 5, scope: !4265)
!4307 = !DILocation(line: 777, column: 5, scope: !4265)
!4308 = !DILocation(line: 779, column: 1, scope: !4265)
!4309 = distinct !DISubprogram(name: "flash_erase_page", scope: !248, file: !248, line: 781, type: !4220, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4310)
!4310 = !{!4311, !4312, !4313, !4314}
!4311 = !DILocalVariable(name: "offset", arg: 1, scope: !4309, file: !248, line: 781, type: !30)
!4312 = !DILocalVariable(name: "buf", scope: !4309, file: !248, line: 783, type: !3638)
!4313 = !DILocalVariable(name: "savedMask", scope: !4309, file: !248, line: 784, type: !61)
!4314 = !DILocalVariable(name: "result", scope: !4309, file: !248, line: 785, type: !553)
!4315 = !DILocation(line: 0, scope: !4309)
!4316 = !DILocation(line: 783, column: 5, scope: !4309)
!4317 = !DILocation(line: 783, column: 19, scope: !4309)
!4318 = !DILocation(line: 788, column: 9, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4309, file: !248, line: 788, column: 9)
!4320 = !DILocation(line: 792, column: 22, scope: !4309)
!4321 = !DILocation(line: 793, column: 5, scope: !4309)
!4322 = !DILocation(line: 794, column: 18, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4309, file: !248, line: 793, column: 8)
!4324 = !DILocation(line: 795, column: 19, scope: !4309)
!4325 = !DILocation(line: 795, column: 5, scope: !4323)
!4326 = distinct !{!4326, !4321, !4327}
!4327 = !DILocation(line: 795, column: 28, scope: !4309)
!4328 = !DILocation(line: 798, column: 17, scope: !4309)
!4329 = !DILocation(line: 799, column: 12, scope: !4309)
!4330 = !DILocation(line: 800, column: 21, scope: !4309)
!4331 = !DILocation(line: 800, column: 14, scope: !4309)
!4332 = !DILocation(line: 800, column: 5, scope: !4309)
!4333 = !DILocation(line: 800, column: 12, scope: !4309)
!4334 = !DILocation(line: 801, column: 21, scope: !4309)
!4335 = !DILocation(line: 801, column: 14, scope: !4309)
!4336 = !DILocation(line: 801, column: 5, scope: !4309)
!4337 = !DILocation(line: 801, column: 12, scope: !4309)
!4338 = !DILocation(line: 802, column: 14, scope: !4309)
!4339 = !DILocation(line: 802, column: 5, scope: !4309)
!4340 = !DILocation(line: 802, column: 12, scope: !4309)
!4341 = !DILocation(line: 803, column: 5, scope: !4309)
!4342 = !DILocation(line: 805, column: 5, scope: !4309)
!4343 = !DILocation(line: 806, column: 5, scope: !4309)
!4344 = !DILocation(line: 808, column: 5, scope: !4309)
!4345 = !DILocation(line: 809, column: 18, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4309, file: !248, line: 808, column: 8)
!4347 = !DILocation(line: 810, column: 19, scope: !4309)
!4348 = !DILocation(line: 810, column: 5, scope: !4346)
!4349 = distinct !{!4349, !4344, !4350}
!4350 = !DILocation(line: 810, column: 28, scope: !4309)
!4351 = !DILocation(line: 812, column: 5, scope: !4309)
!4352 = !DILocation(line: 814, column: 1, scope: !4309)
!4353 = distinct !DISubprogram(name: "flash_erase_chip", scope: !248, file: !248, line: 816, type: !3280, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4354)
!4354 = !{!4355}
!4355 = !DILocalVariable(name: "buf", scope: !4353, file: !248, line: 818, type: !3638)
!4356 = !DILocation(line: 818, column: 5, scope: !4353)
!4357 = !DILocation(line: 818, column: 19, scope: !4353)
!4358 = !DILocation(line: 821, column: 9, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4353, file: !248, line: 821, column: 9)
!4360 = !DILocation(line: 825, column: 22, scope: !4353)
!4361 = !DILocation(line: 827, column: 5, scope: !4353)
!4362 = !DILocation(line: 828, column: 5, scope: !4353)
!4363 = !DILocation(line: 830, column: 12, scope: !4353)
!4364 = !DILocation(line: 832, column: 5, scope: !4353)
!4365 = !DILocation(line: 834, column: 9, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4353, file: !248, line: 834, column: 9)
!4367 = !DILocation(line: 838, column: 5, scope: !4353)
!4368 = !DILocation(line: 839, column: 22, scope: !4353)
!4369 = !DILocation(line: 841, column: 1, scope: !4353)
!4370 = distinct !DISubprogram(name: "flash_erase", scope: !248, file: !248, line: 844, type: !4371, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4373)
!4371 = !DISubroutineType(types: !4372)
!4372 = !{!7, !30, !7}
!4373 = !{!4374, !4375}
!4374 = !DILocalVariable(name: "offs", arg: 1, scope: !4370, file: !248, line: 844, type: !30)
!4375 = !DILocalVariable(name: "len", arg: 2, scope: !4370, file: !248, line: 844, type: !7)
!4376 = !DILocation(line: 0, scope: !4370)
!4377 = !DILocation(line: 849, column: 9, scope: !4370)
!4378 = !DILocation(line: 855, column: 13, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !248, line: 855, column: 13)
!4380 = distinct !DILexicalBlock(scope: !4370, file: !248, line: 854, column: 21)
!4381 = !DILocation(line: 859, column: 17, scope: !4380)
!4382 = !DILocation(line: 859, column: 32, scope: !4380)
!4383 = !DILocation(line: 859, column: 14, scope: !4380)
!4384 = !DILocation(line: 860, column: 13, scope: !4380)
!4385 = !DILocation(line: 854, column: 16, scope: !4370)
!4386 = !DILocation(line: 854, column: 5, scope: !4370)
!4387 = distinct !{!4387, !4386, !4388}
!4388 = !DILocation(line: 861, column: 5, scope: !4370)
!4389 = !DILocation(line: 864, column: 1, scope: !4370)
!4390 = distinct !DISubprogram(name: "flash_write", scope: !248, file: !248, line: 868, type: !4391, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4393)
!4391 = !DISubroutineType(types: !4392)
!4392 = !{!7, !257, !30, !7}
!4393 = !{!4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407}
!4394 = !DILocalVariable(name: "buf", arg: 1, scope: !4390, file: !248, line: 868, type: !257)
!4395 = !DILocalVariable(name: "to", arg: 2, scope: !4390, file: !248, line: 868, type: !30)
!4396 = !DILocalVariable(name: "len", arg: 3, scope: !4390, file: !248, line: 868, type: !7)
!4397 = !DILocalVariable(name: "page_offset", scope: !4390, file: !248, line: 870, type: !259)
!4398 = !DILocalVariable(name: "page_size", scope: !4390, file: !248, line: 870, type: !259)
!4399 = !DILocalVariable(name: "rc", scope: !4390, file: !248, line: 871, type: !7)
!4400 = !DILocalVariable(name: "retlen", scope: !4390, file: !248, line: 871, type: !7)
!4401 = !DILocalVariable(name: "mode", scope: !4390, file: !248, line: 872, type: !7)
!4402 = !DILocalVariable(name: "cmd", scope: !4390, file: !248, line: 873, type: !3638)
!4403 = !DILocalVariable(name: "result", scope: !4390, file: !248, line: 874, type: !553)
!4404 = !DILocalVariable(name: "savedMask", scope: !4390, file: !248, line: 875, type: !61)
!4405 = !DILocalVariable(name: "To", scope: !4390, file: !248, line: 877, type: !61)
!4406 = !DILocalVariable(name: "Buf", scope: !4390, file: !248, line: 878, type: !1529)
!4407 = !DILocalVariable(name: "p_data_first", scope: !4390, file: !248, line: 879, type: !1529)
!4408 = !DILocation(line: 0, scope: !4390)
!4409 = !DILocation(line: 873, column: 5, scope: !4390)
!4410 = !DILocation(line: 873, column: 19, scope: !4390)
!4411 = !DILocation(line: 882, column: 13, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4390, file: !248, line: 882, column: 9)
!4413 = !DILocation(line: 882, column: 9, scope: !4390)
!4414 = !DILocation(line: 886, column: 12, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4390, file: !248, line: 886, column: 9)
!4416 = !DILocation(line: 886, column: 20, scope: !4415)
!4417 = !DILocation(line: 886, column: 35, scope: !4415)
!4418 = !DILocation(line: 886, column: 62, scope: !4415)
!4419 = !DILocation(line: 886, column: 45, scope: !4415)
!4420 = !DILocation(line: 886, column: 18, scope: !4415)
!4421 = !DILocation(line: 886, column: 9, scope: !4390)
!4422 = !DILocation(line: 891, column: 9, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4390, file: !248, line: 891, column: 9)
!4424 = !DILocation(line: 896, column: 18, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4390, file: !248, line: 895, column: 8)
!4426 = !DILocation(line: 897, column: 19, scope: !4390)
!4427 = !DILocation(line: 897, column: 5, scope: !4425)
!4428 = distinct !{!4428, !4429, !4430}
!4429 = !DILocation(line: 895, column: 5, scope: !4390)
!4430 = !DILocation(line: 897, column: 28, scope: !4390)
!4431 = !DILocation(line: 899, column: 22, scope: !4390)
!4432 = !DILocation(line: 901, column: 12, scope: !4390)
!4433 = !DILocation(line: 903, column: 15, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4390, file: !248, line: 903, column: 9)
!4435 = !DILocation(line: 903, column: 24, scope: !4434)
!4436 = !DILocation(line: 903, column: 27, scope: !4434)
!4437 = !DILocation(line: 903, column: 43, scope: !4434)
!4438 = !DILocation(line: 903, column: 9, scope: !4390)
!4439 = !DILocation(line: 0, scope: !4434)
!4440 = !DILocation(line: 913, column: 16, scope: !4390)
!4441 = !DILocation(line: 913, column: 5, scope: !4390)
!4442 = !DILocation(line: 910, column: 24, scope: !4390)
!4443 = !DILocation(line: 910, column: 22, scope: !4390)
!4444 = !DILocation(line: 952, column: 5, scope: !4390)
!4445 = !DILocation(line: 914, column: 21, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4390, file: !248, line: 913, column: 21)
!4447 = !DILocation(line: 919, column: 21, scope: !4446)
!4448 = !DILocation(line: 919, column: 18, scope: !4446)
!4449 = !DILocation(line: 919, column: 16, scope: !4446)
!4450 = !DILocation(line: 920, column: 21, scope: !4446)
!4451 = !DILocation(line: 920, column: 18, scope: !4446)
!4452 = !DILocation(line: 920, column: 16, scope: !4446)
!4453 = !DILocation(line: 921, column: 18, scope: !4446)
!4454 = !DILocation(line: 921, column: 16, scope: !4446)
!4455 = !DILocation(line: 923, column: 13, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4446, file: !248, line: 923, column: 13)
!4457 = !DILocation(line: 927, column: 9, scope: !4446)
!4458 = !DILocation(line: 928, column: 21, scope: !4446)
!4459 = !DILocation(line: 929, column: 9, scope: !4446)
!4460 = !DILocation(line: 930, column: 14, scope: !4446)
!4461 = !DILocation(line: 931, column: 9, scope: !4446)
!4462 = !DILocation(line: 933, column: 9, scope: !4446)
!4463 = !DILocation(line: 934, column: 86, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4446, file: !248, line: 933, column: 12)
!4465 = !DILocation(line: 934, column: 22, scope: !4464)
!4466 = !DILocation(line: 935, column: 20, scope: !4446)
!4467 = !DILocation(line: 935, column: 9, scope: !4464)
!4468 = distinct !{!4468, !4462, !4469}
!4469 = !DILocation(line: 935, column: 29, scope: !4446)
!4470 = !DILocation(line: 937, column: 16, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4446, file: !248, line: 937, column: 13)
!4472 = !DILocation(line: 937, column: 13, scope: !4446)
!4473 = !DILocation(line: 938, column: 20, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4471, file: !248, line: 937, column: 21)
!4475 = !DILocation(line: 939, column: 20, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4474, file: !248, line: 939, column: 17)
!4477 = !DILocation(line: 939, column: 17, scope: !4474)
!4478 = !DILocation(line: 941, column: 17, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4476, file: !248, line: 939, column: 33)
!4480 = !DILocation(line: 942, column: 17, scope: !4479)
!4481 = !DILocation(line: 947, column: 13, scope: !4446)
!4482 = distinct !{!4482, !4441, !4483}
!4483 = !DILocation(line: 950, column: 5, scope: !4390)
!4484 = !DILocation(line: 949, column: 13, scope: !4446)
!4485 = !DILocation(line: 948, column: 12, scope: !4446)
!4486 = !DILocation(line: 953, column: 18, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4390, file: !248, line: 952, column: 8)
!4488 = !DILocation(line: 954, column: 19, scope: !4390)
!4489 = !DILocation(line: 954, column: 5, scope: !4487)
!4490 = distinct !{!4490, !4444, !4491}
!4491 = !DILocation(line: 954, column: 28, scope: !4390)
!4492 = !DILocation(line: 956, column: 5, scope: !4390)
!4493 = !DILocation(line: 957, column: 5, scope: !4390)
!4494 = !DILocation(line: 958, column: 1, scope: !4390)
!4495 = distinct !DISubprogram(name: "flash_erase_write_security_crc", scope: !248, file: !248, line: 963, type: !4220, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4496)
!4496 = !{!4497, !4498, !4499, !4500}
!4497 = !DILocalVariable(name: "to", arg: 1, scope: !4495, file: !248, line: 963, type: !30)
!4498 = !DILocalVariable(name: "len", scope: !4495, file: !248, line: 965, type: !7)
!4499 = !DILocalVariable(name: "rc", scope: !4495, file: !248, line: 965, type: !7)
!4500 = !DILocalVariable(name: "cmd", scope: !4495, file: !248, line: 966, type: !3638)
!4501 = !DILocation(line: 0, scope: !4495)
!4502 = !DILocation(line: 966, column: 5, scope: !4495)
!4503 = !DILocation(line: 966, column: 19, scope: !4495)
!4504 = !DILocation(line: 968, column: 12, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4495, file: !248, line: 968, column: 9)
!4506 = !DILocation(line: 968, column: 9, scope: !4495)
!4507 = !DILocation(line: 972, column: 12, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4495, file: !248, line: 972, column: 9)
!4509 = !DILocation(line: 972, column: 20, scope: !4508)
!4510 = !DILocation(line: 972, column: 35, scope: !4508)
!4511 = !DILocation(line: 972, column: 62, scope: !4508)
!4512 = !DILocation(line: 972, column: 45, scope: !4508)
!4513 = !DILocation(line: 972, column: 18, scope: !4508)
!4514 = !DILocation(line: 972, column: 9, scope: !4495)
!4515 = !DILocation(line: 976, column: 22, scope: !4495)
!4516 = !DILocation(line: 979, column: 9, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4495, file: !248, line: 979, column: 9)
!4518 = !DILocation(line: 983, column: 5, scope: !4495)
!4519 = !DILocation(line: 985, column: 12, scope: !4495)
!4520 = !DILocation(line: 986, column: 17, scope: !4495)
!4521 = !DILocation(line: 986, column: 14, scope: !4495)
!4522 = !DILocation(line: 986, column: 5, scope: !4495)
!4523 = !DILocation(line: 986, column: 12, scope: !4495)
!4524 = !DILocation(line: 987, column: 17, scope: !4495)
!4525 = !DILocation(line: 987, column: 14, scope: !4495)
!4526 = !DILocation(line: 987, column: 5, scope: !4495)
!4527 = !DILocation(line: 987, column: 12, scope: !4495)
!4528 = !DILocation(line: 988, column: 14, scope: !4495)
!4529 = !DILocation(line: 988, column: 5, scope: !4495)
!4530 = !DILocation(line: 988, column: 12, scope: !4495)
!4531 = !DILocation(line: 990, column: 5, scope: !4495)
!4532 = !DILocation(line: 991, column: 5, scope: !4495)
!4533 = !DILocation(line: 993, column: 10, scope: !4495)
!4534 = !DILocation(line: 994, column: 22, scope: !4495)
!4535 = !DILocation(line: 995, column: 5, scope: !4495)
!4536 = !DILocation(line: 996, column: 1, scope: !4495)
!4537 = distinct !DISubprogram(name: "flash_erase_write", scope: !248, file: !248, line: 998, type: !4391, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !4538)
!4538 = !{!4539, !4540, !4541, !4542, !4546, !4547, !4548, !4552, !4553, !4554}
!4539 = !DILocalVariable(name: "buf", arg: 1, scope: !4537, file: !248, line: 998, type: !257)
!4540 = !DILocalVariable(name: "offs", arg: 2, scope: !4537, file: !248, line: 998, type: !30)
!4541 = !DILocalVariable(name: "count", arg: 3, scope: !4537, file: !248, line: 998, type: !7)
!4542 = !DILocalVariable(name: "block", scope: !4537, file: !248, line: 1000, type: !4543)
!4543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 32768, elements: !4544)
!4544 = !{!4545}
!4545 = !DISubrange(count: 4096)
!4546 = !DILocalVariable(name: "blocksize", scope: !4537, file: !248, line: 1002, type: !7)
!4547 = !DILocalVariable(name: "blockmask", scope: !4537, file: !248, line: 1003, type: !7)
!4548 = !DILocalVariable(name: "piece", scope: !4549, file: !248, line: 1008, type: !30)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !248, line: 1007, column: 56)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !248, line: 1007, column: 13)
!4551 = distinct !DILexicalBlock(scope: !4537, file: !248, line: 1005, column: 23)
!4552 = !DILocalVariable(name: "blockaddr", scope: !4549, file: !248, line: 1008, type: !30)
!4553 = !DILocalVariable(name: "piece_size", scope: !4549, file: !248, line: 1009, type: !7)
!4554 = !DILocalVariable(name: "aligned_size", scope: !4555, file: !248, line: 1034, type: !30)
!4555 = distinct !DILexicalBlock(scope: !4550, file: !248, line: 1033, column: 16)
!4556 = !DILocation(line: 0, scope: !4537)
!4557 = !DILocation(line: 1000, column: 5, scope: !4537)
!4558 = !DILocation(line: 1000, column: 19, scope: !4537)
!4559 = !DILocation(line: 1005, column: 18, scope: !4537)
!4560 = !DILocation(line: 1005, column: 5, scope: !4537)
!4561 = !DILocation(line: 1007, column: 13, scope: !4550)
!4562 = !DILocation(line: 1007, column: 32, scope: !4550)
!4563 = !DILocation(line: 1011, column: 30, scope: !4549)
!4564 = !DILocation(line: 0, scope: !4549)
!4565 = !DILocation(line: 1013, column: 17, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4549, file: !248, line: 1013, column: 17)
!4567 = !DILocation(line: 1013, column: 72, scope: !4566)
!4568 = !DILocation(line: 1013, column: 17, scope: !4549)
!4569 = !DILocation(line: 1017, column: 30, scope: !4549)
!4570 = !DILocation(line: 1019, column: 26, scope: !4549)
!4571 = !DILocation(line: 1020, column: 26, scope: !4549)
!4572 = !DILocation(line: 1020, column: 13, scope: !4549)
!4573 = !DILocation(line: 1022, column: 17, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4549, file: !248, line: 1022, column: 17)
!4575 = !DILocation(line: 1026, column: 17, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4549, file: !248, line: 1026, column: 17)
!4577 = !DILocation(line: 1026, column: 58, scope: !4576)
!4578 = !DILocation(line: 1026, column: 17, scope: !4549)
!4579 = !DILocation(line: 1032, column: 19, scope: !4549)
!4580 = !DILocation(line: 1034, column: 47, scope: !4555)
!4581 = !DILocation(line: 0, scope: !4555)
!4582 = !DILocation(line: 1036, column: 17, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4555, file: !248, line: 1036, column: 17)
!4584 = !DILocation(line: 1040, column: 17, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4555, file: !248, line: 1040, column: 17)
!4586 = !DILocation(line: 1040, column: 54, scope: !4585)
!4587 = !DILocation(line: 1040, column: 17, scope: !4555)
!4588 = !DILocation(line: 1047, column: 19, scope: !4555)
!4589 = !DILocation(line: 0, scope: !4550)
!4590 = distinct !{!4590, !4560, !4591}
!4591 = !DILocation(line: 1049, column: 5, scope: !4537)
!4592 = !DILocation(line: 1052, column: 1, scope: !4537)
!4593 = distinct !DISubprogram(name: "query_spi_flash_status", scope: !248, file: !248, line: 1055, type: !4594, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !247, retainedNodes: !1387)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!4596}
!4596 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_DRV_STATE", file: !6, line: 71, baseType: !250)
!4597 = !DILocation(line: 1057, column: 9, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4593, file: !248, line: 1057, column: 9)
!4599 = !DILocation(line: 1057, column: 9, scope: !4593)
!4600 = !DILocation(line: 1062, column: 9, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4602, file: !248, line: 1061, column: 43)
!4602 = distinct !DILexicalBlock(scope: !4593, file: !248, line: 1061, column: 9)
!4603 = !DILocation(line: 1065, column: 48, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4593, file: !248, line: 1065, column: 9)
!4605 = !DILocation(line: 0, scope: !4604)
!4606 = !DILocation(line: 0, scope: !4593)
!4607 = !DILocation(line: 1072, column: 1, scope: !4593)
!4608 = distinct !DISubprogram(name: "get_current_count", scope: !1263, file: !1263, line: 56, type: !1368, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !1387)
!4609 = !DILocation(line: 58, column: 12, scope: !4608)
!4610 = !DILocation(line: 58, column: 5, scope: !4608)
!4611 = distinct !DISubprogram(name: "delay_time", scope: !1263, file: !1263, line: 62, type: !1793, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !4612)
!4612 = !{!4613, !4614, !4615}
!4613 = !DILocalVariable(name: "count", arg: 1, scope: !4611, file: !1263, line: 62, type: !139)
!4614 = !DILocalVariable(name: "end_count", scope: !4611, file: !1263, line: 64, type: !139)
!4615 = !DILocalVariable(name: "current", scope: !4611, file: !1263, line: 64, type: !139)
!4616 = !DILocation(line: 0, scope: !4611)
!4617 = !DILocation(line: 66, column: 17, scope: !4611)
!4618 = !DILocation(line: 66, column: 37, scope: !4611)
!4619 = !DILocation(line: 66, column: 45, scope: !4611)
!4620 = !DILocation(line: 67, column: 15, scope: !4611)
!4621 = !DILocation(line: 68, column: 12, scope: !4611)
!4622 = !DILocation(line: 68, column: 5, scope: !4611)
!4623 = !DILocation(line: 69, column: 19, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4611, file: !1263, line: 68, column: 45)
!4625 = distinct !{!4625, !4622, !4626}
!4626 = !DILocation(line: 70, column: 5, scope: !4611)
!4627 = !DILocation(line: 72, column: 1, scope: !4611)
!4628 = distinct !DISubprogram(name: "delay_time_for_gpt4", scope: !1263, file: !1263, line: 75, type: !1793, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !4629)
!4629 = !{!4630, !4631, !4632}
!4630 = !DILocalVariable(name: "count", arg: 1, scope: !4628, file: !1263, line: 75, type: !139)
!4631 = !DILocalVariable(name: "end_count", scope: !4628, file: !1263, line: 77, type: !139)
!4632 = !DILocalVariable(name: "current", scope: !4628, file: !1263, line: 77, type: !139)
!4633 = !DILocation(line: 0, scope: !4628)
!4634 = !DILocation(line: 79, column: 17, scope: !4628)
!4635 = !DILocation(line: 79, column: 42, scope: !4628)
!4636 = !DILocation(line: 79, column: 50, scope: !4628)
!4637 = !DILocation(line: 80, column: 15, scope: !4628)
!4638 = !DILocation(line: 81, column: 12, scope: !4628)
!4639 = !DILocation(line: 81, column: 5, scope: !4628)
!4640 = !DILocation(line: 82, column: 19, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4628, file: !1263, line: 81, column: 45)
!4642 = distinct !{!4642, !4639, !4643}
!4643 = !DILocation(line: 83, column: 5, scope: !4628)
!4644 = !DILocation(line: 85, column: 1, scope: !4628)
!4645 = distinct !DISubprogram(name: "get_current_gpt4_count", scope: !1263, file: !1263, line: 95, type: !1368, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !1387)
!4646 = !DILocation(line: 97, column: 13, scope: !4645)
!4647 = !DILocation(line: 97, column: 5, scope: !4645)
!4648 = distinct !DISubprogram(name: "delay_ms", scope: !1263, file: !1263, line: 107, type: !3181, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !4649)
!4649 = !{!4650, !4651}
!4650 = !DILocalVariable(name: "ms", arg: 1, scope: !4648, file: !1263, line: 107, type: !61)
!4651 = !DILocalVariable(name: "count", scope: !4648, file: !1263, line: 109, type: !61)
!4652 = !DILocation(line: 0, scope: !4648)
!4653 = !DILocation(line: 111, column: 17, scope: !4648)
!4654 = !DILocation(line: 112, column: 17, scope: !4648)
!4655 = !DILocation(line: 112, column: 23, scope: !4648)
!4656 = !DILocation(line: 112, column: 11, scope: !4648)
!4657 = !DILocation(line: 113, column: 17, scope: !4648)
!4658 = !DILocation(line: 113, column: 23, scope: !4648)
!4659 = !DILocation(line: 113, column: 11, scope: !4648)
!4660 = !DILocation(line: 114, column: 17, scope: !4648)
!4661 = !DILocation(line: 114, column: 23, scope: !4648)
!4662 = !DILocation(line: 114, column: 11, scope: !4648)
!4663 = !DILocation(line: 115, column: 5, scope: !4648)
!4664 = !DILocation(line: 116, column: 1, scope: !4648)
!4665 = distinct !DISubprogram(name: "delay_us", scope: !1263, file: !1263, line: 120, type: !3181, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !4666)
!4666 = !{!4667, !4668, !4669}
!4667 = !DILocalVariable(name: "us", arg: 1, scope: !4665, file: !1263, line: 120, type: !61)
!4668 = !DILocalVariable(name: "count", scope: !4665, file: !1263, line: 122, type: !61)
!4669 = !DILocalVariable(name: "ticks_per_us", scope: !4665, file: !1263, line: 123, type: !61)
!4670 = !DILocation(line: 0, scope: !4665)
!4671 = !DILocation(line: 125, column: 20, scope: !4665)
!4672 = !DILocation(line: 125, column: 39, scope: !4665)
!4673 = !DILocation(line: 126, column: 26, scope: !4665)
!4674 = !DILocation(line: 128, column: 5, scope: !4665)
!4675 = !DILocation(line: 129, column: 1, scope: !4665)
!4676 = distinct !DISubprogram(name: "drvTMR_init", scope: !1263, file: !1263, line: 133, type: !4677, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !4679)
!4677 = !DISubroutineType(types: !4678)
!4678 = !{null, !61, !61, !69, !153}
!4679 = !{!4680, !4681, !4682, !4683}
!4680 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4676, file: !1263, line: 133, type: !61)
!4681 = !DILocalVariable(name: "countValue", arg: 2, scope: !4676, file: !1263, line: 133, type: !61)
!4682 = !DILocalVariable(name: "autoRepeat", arg: 3, scope: !4676, file: !1263, line: 133, type: !69)
!4683 = !DILocalVariable(name: "TMR_Callback", arg: 4, scope: !4676, file: !1263, line: 133, type: !153)
!4684 = !DILocation(line: 0, scope: !4676)
!4685 = !DILocation(line: 136, column: 5, scope: !4676)
!4686 = !DILocation(line: 138, column: 18, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4676, file: !1263, line: 138, column: 9)
!4688 = !DILocation(line: 138, column: 9, scope: !4676)
!4689 = !DILocation(line: 139, column: 30, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4687, file: !1263, line: 138, column: 27)
!4691 = !DILocation(line: 141, column: 5, scope: !4690)
!4692 = !DILocation(line: 142, column: 30, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4687, file: !1263, line: 141, column: 12)
!4694 = !DILocation(line: 0, scope: !4687)
!4695 = !DILocation(line: 146, column: 5, scope: !4676)
!4696 = !DILocation(line: 147, column: 1, scope: !4676)
!4697 = distinct !DISubprogram(name: "TMR_Start", scope: !1263, file: !1263, line: 149, type: !3181, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !4698)
!4698 = !{!4699}
!4699 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4697, file: !1263, line: 149, type: !61)
!4700 = !DILocation(line: 0, scope: !4697)
!4701 = !DILocation(line: 151, column: 5, scope: !4697)
!4702 = !DILocation(line: 152, column: 1, scope: !4697)
!4703 = distinct !DISubprogram(name: "TMR_Stop", scope: !1263, file: !1263, line: 154, type: !3181, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !4704)
!4704 = !{!4705}
!4705 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4703, file: !1263, line: 154, type: !61)
!4706 = !DILocation(line: 0, scope: !4703)
!4707 = !DILocation(line: 156, column: 5, scope: !4703)
!4708 = !DILocation(line: 157, column: 1, scope: !4703)
!4709 = distinct !DISubprogram(name: "drvGPT2Init", scope: !1263, file: !1263, line: 160, type: !154, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !1387)
!4710 = !DILocation(line: 162, column: 5, scope: !4709)
!4711 = !DILocation(line: 163, column: 1, scope: !4709)
!4712 = distinct !DISubprogram(name: "drvGPT4Init", scope: !1263, file: !1263, line: 165, type: !154, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !1387)
!4713 = !DILocation(line: 167, column: 5, scope: !4712)
!4714 = !DILocation(line: 168, column: 1, scope: !4712)
!4715 = distinct !DISubprogram(name: "clear_TMR_INT_status_bit", scope: !1263, file: !1263, line: 170, type: !3181, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1262, retainedNodes: !4716)
!4716 = !{!4717}
!4717 = !DILocalVariable(name: "timerNum", arg: 1, scope: !4715, file: !1263, line: 170, type: !61)
!4718 = !DILocation(line: 0, scope: !4715)
!4719 = !DILocation(line: 172, column: 9, scope: !4715)
!4720 = !DILocation(line: 177, column: 5, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !1263, line: 175, column: 27)
!4722 = distinct !DILexicalBlock(scope: !4715, file: !1263, line: 175, column: 9)
!4723 = !DILocation(line: 178, column: 1, scope: !4715)
!4724 = distinct !DISubprogram(name: "top_xtal_init", scope: !345, file: !345, line: 52, type: !154, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !4725)
!4725 = !{!4726, !4727}
!4726 = !DILocalVariable(name: "u4RegVal", scope: !4724, file: !345, line: 54, type: !61)
!4727 = !DILocalVariable(name: "reg", scope: !4724, file: !345, line: 55, type: !259)
!4728 = !DILocation(line: 0, scope: !4724)
!4729 = !DILocation(line: 55, column: 25, scope: !4724)
!4730 = !DILocation(line: 56, column: 16, scope: !4724)
!4731 = !DILocation(line: 56, column: 23, scope: !4724)
!4732 = !DILocation(line: 58, column: 16, scope: !4724)
!4733 = !DILocation(line: 61, column: 5, scope: !4724)
!4734 = !DILocation(line: 59, column: 14, scope: !4724)
!4735 = !DILocation(line: 0, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4724, file: !345, line: 61, column: 18)
!4737 = !DILocation(line: 87, column: 38, scope: !4724)
!4738 = !DILocation(line: 88, column: 21, scope: !4724)
!4739 = !DILocation(line: 88, column: 19, scope: !4724)
!4740 = !DILocation(line: 89, column: 5, scope: !4724)
!4741 = !DILocation(line: 90, column: 17, scope: !4724)
!4742 = !DILocation(line: 90, column: 33, scope: !4724)
!4743 = !DILocation(line: 90, column: 5, scope: !4724)
!4744 = !DILocation(line: 91, column: 1, scope: !4724)
!4745 = distinct !DISubprogram(name: "top_xtal_freq_get", scope: !345, file: !345, line: 98, type: !1368, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !1387)
!4746 = !DILocation(line: 100, column: 12, scope: !4745)
!4747 = !DILocation(line: 100, column: 5, scope: !4745)
!4748 = distinct !DISubprogram(name: "top_mcu_freq_get", scope: !345, file: !345, line: 108, type: !1368, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !1387)
!4749 = !DILocation(line: 110, column: 12, scope: !4748)
!4750 = !DILocation(line: 110, column: 5, scope: !4748)
!4751 = distinct !DISubprogram(name: "cmnPLL1ON", scope: !345, file: !345, line: 118, type: !154, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !4752)
!4752 = !{!4753, !4754}
!4753 = !DILocalVariable(name: "reg", scope: !4751, file: !345, line: 120, type: !60)
!4754 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4751, file: !345, line: 121, type: !59)
!4755 = !DILocation(line: 120, column: 5, scope: !4751)
!4756 = !DILocation(line: 120, column: 23, scope: !4751)
!4757 = !DILocation(line: 0, scope: !4751)
!4758 = !DILocation(line: 123, column: 11, scope: !4751)
!4759 = !DILocation(line: 123, column: 9, scope: !4751)
!4760 = !DILocation(line: 124, column: 12, scope: !4751)
!4761 = !DILocation(line: 124, column: 16, scope: !4751)
!4762 = !DILocation(line: 124, column: 39, scope: !4751)
!4763 = !DILocation(line: 124, column: 9, scope: !4751)
!4764 = !DILocation(line: 126, column: 9, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4751, file: !345, line: 126, column: 9)
!4766 = !DILocation(line: 126, column: 13, scope: !4765)
!4767 = !DILocation(line: 126, column: 9, scope: !4751)
!4768 = !DILocation(line: 127, column: 15, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4765, file: !345, line: 126, column: 47)
!4770 = !DILocation(line: 127, column: 13, scope: !4769)
!4771 = !DILocation(line: 128, column: 15, scope: !4769)
!4772 = !DILocation(line: 128, column: 19, scope: !4769)
!4773 = !DILocation(line: 128, column: 13, scope: !4769)
!4774 = !DILocation(line: 129, column: 15, scope: !4769)
!4775 = !DILocation(line: 129, column: 19, scope: !4769)
!4776 = !DILocation(line: 129, column: 13, scope: !4769)
!4777 = !DILocation(line: 130, column: 46, scope: !4769)
!4778 = !DILocation(line: 130, column: 9, scope: !4769)
!4779 = !DILocation(line: 132, column: 9, scope: !4769)
!4780 = !DILocation(line: 133, column: 19, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4769, file: !345, line: 132, column: 12)
!4782 = !DILocation(line: 133, column: 17, scope: !4781)
!4783 = !DILocation(line: 134, column: 19, scope: !4781)
!4784 = !DILocation(line: 134, column: 23, scope: !4781)
!4785 = !DILocation(line: 134, column: 17, scope: !4781)
!4786 = !DILocation(line: 135, column: 19, scope: !4769)
!4787 = !DILocation(line: 135, column: 18, scope: !4769)
!4788 = !DILocation(line: 135, column: 9, scope: !4781)
!4789 = distinct !{!4789, !4779, !4790}
!4790 = !DILocation(line: 135, column: 22, scope: !4769)
!4791 = !DILocation(line: 138, column: 1, scope: !4751)
!4792 = distinct !DISubprogram(name: "cmnReadRegister32", scope: !4793, file: !4793, line: 176, type: !4794, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !4798)
!4793 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt7687/Include/system_mt7687.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!4794 = !DISubroutineType(types: !4795)
!4795 = !{!61, !4796}
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 32)
!4797 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!4798 = !{!4799}
!4799 = !DILocalVariable(name: "Register", arg: 1, scope: !4792, file: !4793, line: 176, type: !4796)
!4800 = !DILocation(line: 0, scope: !4792)
!4801 = !DILocation(line: 178, column: 13, scope: !4792)
!4802 = !DILocation(line: 178, column: 12, scope: !4792)
!4803 = !DILocation(line: 178, column: 5, scope: !4792)
!4804 = distinct !DISubprogram(name: "cmnWriteRegister32", scope: !4793, file: !4793, line: 171, type: !4805, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !4807)
!4805 = !DISubroutineType(types: !4806)
!4806 = !{null, !4796, !61}
!4807 = !{!4808, !4809}
!4808 = !DILocalVariable(name: "Register", arg: 1, scope: !4804, file: !4793, line: 171, type: !4796)
!4809 = !DILocalVariable(name: "Value", arg: 2, scope: !4804, file: !4793, line: 171, type: !61)
!4810 = !DILocation(line: 0, scope: !4804)
!4811 = !DILocation(line: 173, column: 6, scope: !4804)
!4812 = !DILocation(line: 173, column: 36, scope: !4804)
!4813 = !DILocation(line: 174, column: 1, scope: !4804)
!4814 = distinct !DISubprogram(name: "cmnPLL1ON_PLL2ON", scope: !345, file: !345, line: 145, type: !4815, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !4817)
!4815 = !DISubroutineType(types: !4816)
!4816 = !{null, !54}
!4817 = !{!4818, !4819, !4820}
!4818 = !DILocalVariable(name: "fg960M", arg: 1, scope: !4814, file: !345, line: 145, type: !54)
!4819 = !DILocalVariable(name: "reg", scope: !4814, file: !345, line: 147, type: !60)
!4820 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4814, file: !345, line: 148, type: !59)
!4821 = !DILocation(line: 0, scope: !4814)
!4822 = !DILocation(line: 147, column: 5, scope: !4814)
!4823 = !DILocation(line: 147, column: 23, scope: !4814)
!4824 = !DILocation(line: 150, column: 11, scope: !4814)
!4825 = !DILocation(line: 150, column: 9, scope: !4814)
!4826 = !DILocation(line: 151, column: 12, scope: !4814)
!4827 = !DILocation(line: 151, column: 16, scope: !4814)
!4828 = !DILocation(line: 151, column: 39, scope: !4814)
!4829 = !DILocation(line: 151, column: 9, scope: !4814)
!4830 = !DILocation(line: 153, column: 9, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4814, file: !345, line: 153, column: 9)
!4832 = !DILocation(line: 153, column: 13, scope: !4831)
!4833 = !DILocation(line: 153, column: 9, scope: !4814)
!4834 = !DILocation(line: 154, column: 15, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4831, file: !345, line: 153, column: 45)
!4836 = !DILocation(line: 154, column: 13, scope: !4835)
!4837 = !DILocation(line: 155, column: 15, scope: !4835)
!4838 = !DILocation(line: 155, column: 19, scope: !4835)
!4839 = !DILocation(line: 155, column: 13, scope: !4835)
!4840 = !DILocation(line: 156, column: 15, scope: !4835)
!4841 = !DILocation(line: 156, column: 19, scope: !4835)
!4842 = !DILocation(line: 156, column: 13, scope: !4835)
!4843 = !DILocation(line: 157, column: 15, scope: !4835)
!4844 = !DILocation(line: 157, column: 13, scope: !4835)
!4845 = !DILocation(line: 158, column: 46, scope: !4835)
!4846 = !DILocation(line: 158, column: 9, scope: !4835)
!4847 = !DILocation(line: 160, column: 15, scope: !4835)
!4848 = !DILocation(line: 160, column: 13, scope: !4835)
!4849 = !DILocation(line: 161, column: 15, scope: !4835)
!4850 = !DILocation(line: 161, column: 19, scope: !4835)
!4851 = !DILocation(line: 161, column: 13, scope: !4835)
!4852 = !DILocation(line: 162, column: 15, scope: !4835)
!4853 = !DILocation(line: 162, column: 19, scope: !4835)
!4854 = !DILocation(line: 162, column: 13, scope: !4835)
!4855 = !DILocation(line: 163, column: 15, scope: !4835)
!4856 = !DILocation(line: 163, column: 19, scope: !4835)
!4857 = !DILocation(line: 163, column: 13, scope: !4835)
!4858 = !DILocation(line: 164, column: 46, scope: !4835)
!4859 = !DILocation(line: 164, column: 9, scope: !4835)
!4860 = !DILocation(line: 166, column: 9, scope: !4835)
!4861 = !DILocation(line: 167, column: 19, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4835, file: !345, line: 166, column: 12)
!4863 = !DILocation(line: 167, column: 17, scope: !4862)
!4864 = !DILocation(line: 168, column: 19, scope: !4862)
!4865 = !DILocation(line: 168, column: 23, scope: !4862)
!4866 = !DILocation(line: 168, column: 17, scope: !4862)
!4867 = !DILocation(line: 169, column: 19, scope: !4835)
!4868 = !DILocation(line: 169, column: 18, scope: !4835)
!4869 = !DILocation(line: 169, column: 9, scope: !4862)
!4870 = distinct !{!4870, !4860, !4871}
!4871 = !DILocation(line: 169, column: 22, scope: !4835)
!4872 = !DILocation(line: 171, column: 15, scope: !4835)
!4873 = !DILocation(line: 171, column: 13, scope: !4835)
!4874 = !DILocation(line: 172, column: 15, scope: !4835)
!4875 = !DILocation(line: 172, column: 19, scope: !4835)
!4876 = !DILocation(line: 172, column: 13, scope: !4835)
!4877 = !DILocation(line: 173, column: 15, scope: !4835)
!4878 = !DILocation(line: 173, column: 19, scope: !4835)
!4879 = !DILocation(line: 173, column: 13, scope: !4835)
!4880 = !DILocation(line: 174, column: 5, scope: !4835)
!4881 = !DILocation(line: 176, column: 11, scope: !4814)
!4882 = !DILocation(line: 176, column: 9, scope: !4814)
!4883 = !DILocation(line: 177, column: 9, scope: !4884)
!4884 = distinct !DILexicalBlock(scope: !4814, file: !345, line: 177, column: 9)
!4885 = !DILocation(line: 0, scope: !4884)
!4886 = !DILocation(line: 177, column: 9, scope: !4814)
!4887 = !DILocation(line: 178, column: 19, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4884, file: !345, line: 177, column: 17)
!4889 = !DILocation(line: 178, column: 13, scope: !4888)
!4890 = !DILocation(line: 179, column: 5, scope: !4888)
!4891 = !DILocation(line: 180, column: 13, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4884, file: !345, line: 179, column: 12)
!4893 = !DILocation(line: 182, column: 42, scope: !4814)
!4894 = !DILocation(line: 182, column: 5, scope: !4814)
!4895 = !DILocation(line: 184, column: 1, scope: !4814)
!4896 = distinct !DISubprogram(name: "cmnPLL1OFF_PLL2OFF", scope: !345, file: !345, line: 191, type: !154, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !4897)
!4897 = !{!4898, !4899}
!4898 = !DILocalVariable(name: "reg", scope: !4896, file: !345, line: 193, type: !60)
!4899 = !DILocalVariable(name: "pTopCfgCM4PWRCtl", scope: !4896, file: !345, line: 194, type: !59)
!4900 = !DILocation(line: 193, column: 5, scope: !4896)
!4901 = !DILocation(line: 193, column: 23, scope: !4896)
!4902 = !DILocation(line: 0, scope: !4896)
!4903 = !DILocation(line: 196, column: 11, scope: !4896)
!4904 = !DILocation(line: 196, column: 9, scope: !4896)
!4905 = !DILocation(line: 197, column: 11, scope: !4896)
!4906 = !DILocation(line: 197, column: 15, scope: !4896)
!4907 = !DILocation(line: 197, column: 9, scope: !4896)
!4908 = !DILocation(line: 198, column: 11, scope: !4896)
!4909 = !DILocation(line: 198, column: 15, scope: !4896)
!4910 = !DILocation(line: 198, column: 9, scope: !4896)
!4911 = !DILocation(line: 199, column: 11, scope: !4896)
!4912 = !DILocation(line: 199, column: 9, scope: !4896)
!4913 = !DILocation(line: 200, column: 42, scope: !4896)
!4914 = !DILocation(line: 200, column: 5, scope: !4896)
!4915 = !DILocation(line: 202, column: 11, scope: !4896)
!4916 = !DILocation(line: 202, column: 9, scope: !4896)
!4917 = !DILocation(line: 203, column: 11, scope: !4896)
!4918 = !DILocation(line: 203, column: 15, scope: !4896)
!4919 = !DILocation(line: 203, column: 9, scope: !4896)
!4920 = !DILocation(line: 204, column: 11, scope: !4896)
!4921 = !DILocation(line: 204, column: 15, scope: !4896)
!4922 = !DILocation(line: 204, column: 9, scope: !4896)
!4923 = !DILocation(line: 205, column: 11, scope: !4896)
!4924 = !DILocation(line: 205, column: 9, scope: !4896)
!4925 = !DILocation(line: 206, column: 42, scope: !4896)
!4926 = !DILocation(line: 206, column: 5, scope: !4896)
!4927 = !DILocation(line: 209, column: 1, scope: !4896)
!4928 = distinct !DISubprogram(name: "cmnCpuClkConfigureToXtal", scope: !345, file: !345, line: 216, type: !154, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !4929)
!4929 = !{!4930, !4931}
!4930 = !DILocalVariable(name: "reg", scope: !4928, file: !345, line: 218, type: !60)
!4931 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4928, file: !345, line: 219, type: !59)
!4932 = !DILocation(line: 218, column: 5, scope: !4928)
!4933 = !DILocation(line: 218, column: 23, scope: !4928)
!4934 = !DILocation(line: 0, scope: !4928)
!4935 = !DILocation(line: 222, column: 11, scope: !4928)
!4936 = !DILocation(line: 222, column: 9, scope: !4928)
!4937 = !DILocation(line: 223, column: 11, scope: !4928)
!4938 = !DILocation(line: 223, column: 15, scope: !4928)
!4939 = !DILocation(line: 223, column: 9, scope: !4928)
!4940 = !DILocation(line: 224, column: 11, scope: !4928)
!4941 = !DILocation(line: 224, column: 9, scope: !4928)
!4942 = !DILocation(line: 225, column: 39, scope: !4928)
!4943 = !DILocation(line: 225, column: 5, scope: !4928)
!4944 = !DILocation(line: 228, column: 11, scope: !4928)
!4945 = !DILocation(line: 228, column: 9, scope: !4928)
!4946 = !DILocation(line: 229, column: 11, scope: !4928)
!4947 = !DILocation(line: 229, column: 15, scope: !4928)
!4948 = !DILocation(line: 229, column: 9, scope: !4928)
!4949 = !DILocation(line: 230, column: 11, scope: !4928)
!4950 = !DILocation(line: 230, column: 9, scope: !4928)
!4951 = !DILocation(line: 231, column: 39, scope: !4928)
!4952 = !DILocation(line: 231, column: 5, scope: !4928)
!4953 = !DILocation(line: 233, column: 5, scope: !4928)
!4954 = !DILocation(line: 233, column: 12, scope: !4928)
!4955 = !DILocation(line: 233, column: 19, scope: !4928)
!4956 = !DILocation(line: 233, column: 16, scope: !4928)
!4957 = distinct !{!4957, !4953, !4958}
!4958 = !DILocation(line: 233, column: 52, scope: !4928)
!4959 = !DILocation(line: 235, column: 21, scope: !4928)
!4960 = !DILocation(line: 235, column: 19, scope: !4928)
!4961 = !DILocation(line: 236, column: 5, scope: !4928)
!4962 = !DILocation(line: 237, column: 17, scope: !4928)
!4963 = !DILocation(line: 237, column: 33, scope: !4928)
!4964 = !DILocation(line: 237, column: 5, scope: !4928)
!4965 = !DILocation(line: 239, column: 1, scope: !4928)
!4966 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo192M", scope: !345, file: !345, line: 246, type: !154, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !4967)
!4967 = !{!4968, !4969}
!4968 = !DILocalVariable(name: "reg", scope: !4966, file: !345, line: 248, type: !60)
!4969 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !4966, file: !345, line: 249, type: !59)
!4970 = !DILocation(line: 248, column: 5, scope: !4966)
!4971 = !DILocation(line: 248, column: 23, scope: !4966)
!4972 = !DILocation(line: 0, scope: !4966)
!4973 = !DILocation(line: 252, column: 5, scope: !4966)
!4974 = !DILocation(line: 255, column: 11, scope: !4966)
!4975 = !DILocation(line: 255, column: 9, scope: !4966)
!4976 = !DILocation(line: 256, column: 11, scope: !4966)
!4977 = !DILocation(line: 256, column: 15, scope: !4966)
!4978 = !DILocation(line: 256, column: 9, scope: !4966)
!4979 = !DILocation(line: 257, column: 11, scope: !4966)
!4980 = !DILocation(line: 257, column: 15, scope: !4966)
!4981 = !DILocation(line: 257, column: 9, scope: !4966)
!4982 = !DILocation(line: 258, column: 39, scope: !4966)
!4983 = !DILocation(line: 258, column: 5, scope: !4966)
!4984 = !DILocation(line: 260, column: 5, scope: !4966)
!4985 = !DILocation(line: 260, column: 12, scope: !4966)
!4986 = !DILocation(line: 260, column: 19, scope: !4966)
!4987 = !DILocation(line: 260, column: 16, scope: !4966)
!4988 = distinct !{!4988, !4984, !4989}
!4989 = !DILocation(line: 260, column: 52, scope: !4966)
!4990 = !DILocation(line: 263, column: 11, scope: !4966)
!4991 = !DILocation(line: 263, column: 9, scope: !4966)
!4992 = !DILocation(line: 264, column: 11, scope: !4966)
!4993 = !DILocation(line: 264, column: 15, scope: !4966)
!4994 = !DILocation(line: 264, column: 9, scope: !4966)
!4995 = !DILocation(line: 265, column: 11, scope: !4966)
!4996 = !DILocation(line: 265, column: 15, scope: !4966)
!4997 = !DILocation(line: 265, column: 9, scope: !4966)
!4998 = !DILocation(line: 266, column: 39, scope: !4966)
!4999 = !DILocation(line: 266, column: 5, scope: !4966)
!5000 = !DILocation(line: 269, column: 11, scope: !4966)
!5001 = !DILocation(line: 269, column: 9, scope: !4966)
!5002 = !DILocation(line: 270, column: 11, scope: !4966)
!5003 = !DILocation(line: 270, column: 15, scope: !4966)
!5004 = !DILocation(line: 270, column: 9, scope: !4966)
!5005 = !DILocation(line: 271, column: 11, scope: !4966)
!5006 = !DILocation(line: 271, column: 15, scope: !4966)
!5007 = !DILocation(line: 271, column: 9, scope: !4966)
!5008 = !DILocation(line: 272, column: 39, scope: !4966)
!5009 = !DILocation(line: 272, column: 5, scope: !4966)
!5010 = !DILocation(line: 273, column: 19, scope: !4966)
!5011 = !DILocation(line: 274, column: 5, scope: !4966)
!5012 = !DILocation(line: 275, column: 17, scope: !4966)
!5013 = !DILocation(line: 275, column: 33, scope: !4966)
!5014 = !DILocation(line: 275, column: 5, scope: !4966)
!5015 = !DILocation(line: 277, column: 1, scope: !4966)
!5016 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo160M", scope: !345, file: !345, line: 284, type: !154, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !5017)
!5017 = !{!5018, !5019}
!5018 = !DILocalVariable(name: "reg", scope: !5016, file: !345, line: 286, type: !60)
!5019 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !5016, file: !345, line: 287, type: !59)
!5020 = !DILocation(line: 286, column: 5, scope: !5016)
!5021 = !DILocation(line: 286, column: 23, scope: !5016)
!5022 = !DILocation(line: 0, scope: !5016)
!5023 = !DILocation(line: 290, column: 5, scope: !5016)
!5024 = !DILocation(line: 293, column: 11, scope: !5016)
!5025 = !DILocation(line: 293, column: 9, scope: !5016)
!5026 = !DILocation(line: 294, column: 11, scope: !5016)
!5027 = !DILocation(line: 294, column: 15, scope: !5016)
!5028 = !DILocation(line: 294, column: 9, scope: !5016)
!5029 = !DILocation(line: 295, column: 11, scope: !5016)
!5030 = !DILocation(line: 295, column: 15, scope: !5016)
!5031 = !DILocation(line: 295, column: 9, scope: !5016)
!5032 = !DILocation(line: 296, column: 39, scope: !5016)
!5033 = !DILocation(line: 296, column: 5, scope: !5016)
!5034 = !DILocation(line: 298, column: 5, scope: !5016)
!5035 = !DILocation(line: 298, column: 12, scope: !5016)
!5036 = !DILocation(line: 298, column: 19, scope: !5016)
!5037 = !DILocation(line: 298, column: 16, scope: !5016)
!5038 = distinct !{!5038, !5034, !5039}
!5039 = !DILocation(line: 298, column: 52, scope: !5016)
!5040 = !DILocation(line: 301, column: 11, scope: !5016)
!5041 = !DILocation(line: 301, column: 9, scope: !5016)
!5042 = !DILocation(line: 302, column: 11, scope: !5016)
!5043 = !DILocation(line: 302, column: 15, scope: !5016)
!5044 = !DILocation(line: 302, column: 9, scope: !5016)
!5045 = !DILocation(line: 303, column: 11, scope: !5016)
!5046 = !DILocation(line: 303, column: 15, scope: !5016)
!5047 = !DILocation(line: 303, column: 9, scope: !5016)
!5048 = !DILocation(line: 304, column: 39, scope: !5016)
!5049 = !DILocation(line: 304, column: 5, scope: !5016)
!5050 = !DILocation(line: 307, column: 11, scope: !5016)
!5051 = !DILocation(line: 307, column: 9, scope: !5016)
!5052 = !DILocation(line: 308, column: 11, scope: !5016)
!5053 = !DILocation(line: 308, column: 15, scope: !5016)
!5054 = !DILocation(line: 308, column: 9, scope: !5016)
!5055 = !DILocation(line: 309, column: 11, scope: !5016)
!5056 = !DILocation(line: 309, column: 15, scope: !5016)
!5057 = !DILocation(line: 309, column: 9, scope: !5016)
!5058 = !DILocation(line: 310, column: 39, scope: !5016)
!5059 = !DILocation(line: 310, column: 5, scope: !5016)
!5060 = !DILocation(line: 311, column: 19, scope: !5016)
!5061 = !DILocation(line: 312, column: 5, scope: !5016)
!5062 = !DILocation(line: 313, column: 17, scope: !5016)
!5063 = !DILocation(line: 313, column: 33, scope: !5016)
!5064 = !DILocation(line: 313, column: 5, scope: !5016)
!5065 = !DILocation(line: 315, column: 1, scope: !5016)
!5066 = distinct !DISubprogram(name: "cmnCpuClkConfigureTo64M", scope: !345, file: !345, line: 323, type: !154, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !5067)
!5067 = !{!5068, !5069}
!5068 = !DILocalVariable(name: "reg", scope: !5066, file: !345, line: 325, type: !60)
!5069 = !DILocalVariable(name: "pTopCfgCM4CKG", scope: !5066, file: !345, line: 326, type: !59)
!5070 = !DILocation(line: 325, column: 5, scope: !5066)
!5071 = !DILocation(line: 325, column: 23, scope: !5066)
!5072 = !DILocation(line: 0, scope: !5066)
!5073 = !DILocation(line: 329, column: 5, scope: !5066)
!5074 = !DILocation(line: 332, column: 11, scope: !5066)
!5075 = !DILocation(line: 332, column: 9, scope: !5066)
!5076 = !DILocation(line: 333, column: 11, scope: !5066)
!5077 = !DILocation(line: 333, column: 15, scope: !5066)
!5078 = !DILocation(line: 333, column: 9, scope: !5066)
!5079 = !DILocation(line: 334, column: 11, scope: !5066)
!5080 = !DILocation(line: 334, column: 9, scope: !5066)
!5081 = !DILocation(line: 335, column: 39, scope: !5066)
!5082 = !DILocation(line: 335, column: 5, scope: !5066)
!5083 = !DILocation(line: 337, column: 5, scope: !5066)
!5084 = !DILocation(line: 337, column: 12, scope: !5066)
!5085 = !DILocation(line: 337, column: 19, scope: !5066)
!5086 = !DILocation(line: 337, column: 16, scope: !5066)
!5087 = distinct !{!5087, !5083, !5088}
!5088 = !DILocation(line: 337, column: 52, scope: !5066)
!5089 = !DILocation(line: 340, column: 11, scope: !5066)
!5090 = !DILocation(line: 340, column: 9, scope: !5066)
!5091 = !DILocation(line: 341, column: 11, scope: !5066)
!5092 = !DILocation(line: 341, column: 15, scope: !5066)
!5093 = !DILocation(line: 341, column: 9, scope: !5066)
!5094 = !DILocation(line: 342, column: 11, scope: !5066)
!5095 = !DILocation(line: 342, column: 15, scope: !5066)
!5096 = !DILocation(line: 342, column: 9, scope: !5066)
!5097 = !DILocation(line: 343, column: 39, scope: !5066)
!5098 = !DILocation(line: 343, column: 5, scope: !5066)
!5099 = !DILocation(line: 344, column: 19, scope: !5066)
!5100 = !DILocation(line: 345, column: 5, scope: !5066)
!5101 = !DILocation(line: 346, column: 17, scope: !5066)
!5102 = !DILocation(line: 346, column: 33, scope: !5066)
!5103 = !DILocation(line: 346, column: 5, scope: !5066)
!5104 = !DILocation(line: 348, column: 1, scope: !5066)
!5105 = distinct !DISubprogram(name: "cmnSerialFlashClkConfToXtal", scope: !345, file: !345, line: 353, type: !154, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !5106)
!5106 = !{!5107, !5108}
!5107 = !DILocalVariable(name: "reg", scope: !5105, file: !345, line: 355, type: !158)
!5108 = !DILocalVariable(name: "pTopCfgHclk", scope: !5105, file: !345, line: 356, type: !347)
!5109 = !DILocation(line: 355, column: 5, scope: !5105)
!5110 = !DILocation(line: 355, column: 21, scope: !5105)
!5111 = !DILocation(line: 0, scope: !5105)
!5112 = !DILocation(line: 358, column: 11, scope: !5105)
!5113 = !DILocation(line: 358, column: 9, scope: !5105)
!5114 = !DILocation(line: 359, column: 11, scope: !5105)
!5115 = !DILocation(line: 359, column: 15, scope: !5105)
!5116 = !DILocation(line: 359, column: 9, scope: !5105)
!5117 = !DILocation(line: 360, column: 11, scope: !5105)
!5118 = !DILocation(line: 360, column: 9, scope: !5105)
!5119 = !DILocation(line: 361, column: 37, scope: !5105)
!5120 = !DILocation(line: 361, column: 5, scope: !5105)
!5121 = !DILocation(line: 362, column: 1, scope: !5105)
!5122 = distinct !DISubprogram(name: "cmnSerialFlashClkConfTo64M", scope: !345, file: !345, line: 368, type: !154, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !5123)
!5123 = !{!5124, !5125, !5126, !5128, !5130}
!5124 = !DILocalVariable(name: "reg", scope: !5122, file: !345, line: 370, type: !158)
!5125 = !DILocalVariable(name: "pTopCfgHclk", scope: !5122, file: !345, line: 371, type: !347)
!5126 = !DILocalVariable(name: "addr", scope: !5127, file: !345, line: 383, type: !348)
!5127 = distinct !DILexicalBlock(scope: !5122, file: !345, line: 383, column: 5)
!5128 = !DILocalVariable(name: "addr", scope: !5129, file: !345, line: 384, type: !348)
!5129 = distinct !DILexicalBlock(scope: !5122, file: !345, line: 384, column: 5)
!5130 = !DILocalVariable(name: "addr", scope: !5131, file: !345, line: 385, type: !348)
!5131 = distinct !DILexicalBlock(scope: !5122, file: !345, line: 385, column: 5)
!5132 = !DILocation(line: 370, column: 5, scope: !5122)
!5133 = !DILocation(line: 370, column: 21, scope: !5122)
!5134 = !DILocation(line: 0, scope: !5122)
!5135 = !DILocation(line: 374, column: 5, scope: !5122)
!5136 = !DILocation(line: 377, column: 11, scope: !5122)
!5137 = !DILocation(line: 377, column: 9, scope: !5122)
!5138 = !DILocation(line: 378, column: 11, scope: !5122)
!5139 = !DILocation(line: 378, column: 15, scope: !5122)
!5140 = !DILocation(line: 378, column: 9, scope: !5122)
!5141 = !DILocation(line: 379, column: 11, scope: !5122)
!5142 = !DILocation(line: 379, column: 15, scope: !5122)
!5143 = !DILocation(line: 379, column: 9, scope: !5122)
!5144 = !DILocation(line: 380, column: 37, scope: !5122)
!5145 = !DILocation(line: 380, column: 5, scope: !5122)
!5146 = !DILocation(line: 0, scope: !5127)
!5147 = !DILocation(line: 383, column: 5, scope: !5127)
!5148 = !DILocation(line: 0, scope: !5129)
!5149 = !DILocation(line: 384, column: 5, scope: !5129)
!5150 = !DILocation(line: 0, scope: !5131)
!5151 = !DILocation(line: 385, column: 5, scope: !5131)
!5152 = !DILocation(line: 388, column: 1, scope: !5122)
!5153 = distinct !DISubprogram(name: "getc", scope: !357, file: !357, line: 68, type: !3280, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5154)
!5154 = !{!5155}
!5155 = !DILocalVariable(name: "rc", scope: !5153, file: !357, line: 71, type: !7)
!5156 = !DILocation(line: 71, column: 14, scope: !5153)
!5157 = !DILocation(line: 0, scope: !5153)
!5158 = !DILocation(line: 72, column: 5, scope: !5153)
!5159 = distinct !DISubprogram(name: "getc_nowait", scope: !357, file: !357, line: 80, type: !3280, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5160)
!5160 = !{!5161}
!5161 = !DILocalVariable(name: "c", scope: !5159, file: !357, line: 82, type: !266)
!5162 = !DILocation(line: 84, column: 9, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5159, file: !357, line: 84, column: 9)
!5164 = !DILocation(line: 84, column: 40, scope: !5163)
!5165 = !DILocation(line: 84, column: 9, scope: !5159)
!5166 = !DILocation(line: 85, column: 13, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !357, line: 84, column: 47)
!5168 = !DILocation(line: 86, column: 16, scope: !5167)
!5169 = !DILocation(line: 0, scope: !5159)
!5170 = !DILocation(line: 86, column: 9, scope: !5167)
!5171 = !DILocation(line: 0, scope: !5163)
!5172 = !DILocation(line: 90, column: 1, scope: !5159)
!5173 = distinct !DISubprogram(name: "uart_output_char", scope: !357, file: !357, line: 93, type: !5174, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5177)
!5174 = !DISubroutineType(types: !5175)
!5175 = !{null, !5176, !58}
!5176 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_PORT", file: !360, line: 75, baseType: !359)
!5177 = !{!5178, !5179, !5180}
!5178 = !DILocalVariable(name: "port_no", arg: 1, scope: !5173, file: !357, line: 93, type: !5176)
!5179 = !DILocalVariable(name: "c", arg: 2, scope: !5173, file: !357, line: 93, type: !58)
!5180 = !DILocalVariable(name: "base", scope: !5173, file: !357, line: 95, type: !30)
!5181 = !DILocation(line: 0, scope: !5173)
!5182 = !DILocation(line: 95, column: 25, scope: !5173)
!5183 = !DILocation(line: 97, column: 5, scope: !5173)
!5184 = !DILocation(line: 97, column: 14, scope: !5173)
!5185 = !DILocation(line: 97, column: 42, scope: !5173)
!5186 = !DILocation(line: 97, column: 12, scope: !5173)
!5187 = distinct !{!5187, !5183, !5188}
!5188 = !DILocation(line: 98, column: 9, scope: !5173)
!5189 = !DILocation(line: 99, column: 35, scope: !5173)
!5190 = !DILocation(line: 99, column: 5, scope: !5173)
!5191 = !DILocation(line: 99, column: 33, scope: !5173)
!5192 = !DILocation(line: 102, column: 1, scope: !5173)
!5193 = distinct !DISubprogram(name: "uart_input_char", scope: !357, file: !357, line: 106, type: !5194, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5196)
!5194 = !DISubroutineType(types: !5195)
!5195 = !{!54, !5176}
!5196 = !{!5197, !5198, !5199}
!5197 = !DILocalVariable(name: "port_no", arg: 1, scope: !5193, file: !357, line: 106, type: !5176)
!5198 = !DILocalVariable(name: "base", scope: !5193, file: !357, line: 108, type: !30)
!5199 = !DILocalVariable(name: "c", scope: !5193, file: !357, line: 109, type: !266)
!5200 = !DILocation(line: 0, scope: !5193)
!5201 = !DILocation(line: 108, column: 25, scope: !5193)
!5202 = !DILocation(line: 111, column: 5, scope: !5193)
!5203 = !DILocation(line: 111, column: 14, scope: !5193)
!5204 = !DILocation(line: 111, column: 42, scope: !5193)
!5205 = !DILocation(line: 111, column: 12, scope: !5193)
!5206 = distinct !{!5206, !5202, !5207}
!5207 = !DILocation(line: 112, column: 9, scope: !5193)
!5208 = !DILocation(line: 114, column: 9, scope: !5193)
!5209 = !DILocation(line: 116, column: 5, scope: !5193)
!5210 = distinct !DISubprogram(name: "uart_input_char_unblocking", scope: !357, file: !357, line: 120, type: !5211, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5213)
!5211 = !DISubroutineType(types: !5212)
!5212 = !{!61, !5176}
!5213 = !{!5214, !5215, !5216}
!5214 = !DILocalVariable(name: "port_no", arg: 1, scope: !5210, file: !357, line: 120, type: !5176)
!5215 = !DILocalVariable(name: "base", scope: !5210, file: !357, line: 122, type: !30)
!5216 = !DILocalVariable(name: "c", scope: !5210, file: !357, line: 123, type: !266)
!5217 = !DILocation(line: 0, scope: !5210)
!5218 = !DILocation(line: 122, column: 25, scope: !5210)
!5219 = !DILocation(line: 125, column: 9, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5210, file: !357, line: 125, column: 9)
!5221 = !DILocation(line: 125, column: 37, scope: !5220)
!5222 = !DILocation(line: 125, column: 9, scope: !5210)
!5223 = !DILocation(line: 126, column: 13, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5220, file: !357, line: 125, column: 44)
!5225 = !DILocation(line: 127, column: 16, scope: !5224)
!5226 = !DILocation(line: 127, column: 9, scope: !5224)
!5227 = !DILocation(line: 0, scope: !5220)
!5228 = !DILocation(line: 131, column: 1, scope: !5210)
!5229 = distinct !DISubprogram(name: "halUART_HWInit", scope: !357, file: !357, line: 136, type: !5230, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5232)
!5230 = !DISubroutineType(types: !5231)
!5231 = !{null, !5176}
!5232 = !{!5233}
!5233 = !DILocalVariable(name: "u_port", arg: 1, scope: !5229, file: !357, line: 136, type: !5176)
!5234 = !DILocation(line: 0, scope: !5229)
!5235 = !DILocation(line: 139, column: 5, scope: !5229)
!5236 = !DILocation(line: 140, column: 9, scope: !5229)
!5237 = !DILocation(line: 153, column: 5, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5239, file: !357, line: 147, column: 38)
!5239 = distinct !DILexicalBlock(scope: !5240, file: !357, line: 147, column: 16)
!5240 = distinct !DILexicalBlock(scope: !5229, file: !357, line: 140, column: 9)
!5241 = !DILocation(line: 0, scope: !5240)
!5242 = !DILocation(line: 155, column: 1, scope: !5229)
!5243 = distinct !DISubprogram(name: "halUART_SetFormat", scope: !357, file: !357, line: 158, type: !5244, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5246)
!5244 = !DISubroutineType(types: !5245)
!5245 = !{null, !5176, !61, !1717, !1717, !1717}
!5246 = !{!5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5262, !5263}
!5247 = !DILocalVariable(name: "u_port", arg: 1, scope: !5243, file: !357, line: 158, type: !5176)
!5248 = !DILocalVariable(name: "baudrate", arg: 2, scope: !5243, file: !357, line: 158, type: !61)
!5249 = !DILocalVariable(name: "databit", arg: 3, scope: !5243, file: !357, line: 158, type: !1717)
!5250 = !DILocalVariable(name: "parity", arg: 4, scope: !5243, file: !357, line: 158, type: !1717)
!5251 = !DILocalVariable(name: "stopbit", arg: 5, scope: !5243, file: !357, line: 158, type: !1717)
!5252 = !DILocalVariable(name: "control_word", scope: !5243, file: !357, line: 160, type: !1717)
!5253 = !DILocalVariable(name: "UART_BASE", scope: !5243, file: !357, line: 161, type: !61)
!5254 = !DILocalVariable(name: "data", scope: !5243, file: !357, line: 162, type: !61)
!5255 = !DILocalVariable(name: "uart_lcr", scope: !5243, file: !357, line: 162, type: !61)
!5256 = !DILocalVariable(name: "high_speed_div", scope: !5243, file: !357, line: 162, type: !61)
!5257 = !DILocalVariable(name: "sample_count", scope: !5243, file: !357, line: 162, type: !61)
!5258 = !DILocalVariable(name: "sample_point", scope: !5243, file: !357, line: 162, type: !61)
!5259 = !DILocalVariable(name: "fraction", scope: !5243, file: !357, line: 162, type: !61)
!5260 = !DILocalVariable(name: "fraction_L_mapping", scope: !5243, file: !357, line: 163, type: !5261)
!5261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1717, size: 176, elements: !1083)
!5262 = !DILocalVariable(name: "fraction_M_mapping", scope: !5243, file: !357, line: 164, type: !5261)
!5263 = !DILocalVariable(name: "status", scope: !5243, file: !357, line: 165, type: !553)
!5264 = !DILocation(line: 0, scope: !5243)
!5265 = !DILocation(line: 163, column: 15, scope: !5243)
!5266 = !DILocation(line: 164, column: 15, scope: !5243)
!5267 = !DILocation(line: 166, column: 20, scope: !5243)
!5268 = !DILocation(line: 166, column: 18, scope: !5243)
!5269 = !DILocation(line: 168, column: 9, scope: !5243)
!5270 = !DILocation(line: 176, column: 5, scope: !5243)
!5271 = !DILocation(line: 176, column: 44, scope: !5243)
!5272 = !DILocation(line: 177, column: 16, scope: !5243)
!5273 = !DILocation(line: 178, column: 50, scope: !5243)
!5274 = !DILocation(line: 178, column: 38, scope: !5243)
!5275 = !DILocation(line: 179, column: 12, scope: !5243)
!5276 = !DILocation(line: 179, column: 25, scope: !5243)
!5277 = !DILocation(line: 180, column: 28, scope: !5243)
!5278 = !DILocation(line: 180, column: 34, scope: !5243)
!5279 = !DILocation(line: 182, column: 29, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5243, file: !357, line: 181, column: 5)
!5281 = !DILocation(line: 182, column: 46, scope: !5280)
!5282 = !DILocation(line: 183, column: 26, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5280, file: !357, line: 183, column: 13)
!5284 = !DILocation(line: 183, column: 13, scope: !5280)
!5285 = !DILocation(line: 192, column: 30, scope: !5243)
!5286 = !DILocation(line: 192, column: 35, scope: !5243)
!5287 = !DILocation(line: 192, column: 46, scope: !5243)
!5288 = !DILocation(line: 192, column: 74, scope: !5243)
!5289 = !DILocation(line: 192, column: 53, scope: !5243)
!5290 = !DILocation(line: 192, column: 80, scope: !5243)
!5291 = !DILocation(line: 193, column: 56, scope: !5243)
!5292 = !DILocation(line: 193, column: 5, scope: !5243)
!5293 = !DILocation(line: 193, column: 38, scope: !5243)
!5294 = !DILocation(line: 194, column: 57, scope: !5243)
!5295 = !DILocation(line: 194, column: 63, scope: !5243)
!5296 = !DILocation(line: 194, column: 5, scope: !5243)
!5297 = !DILocation(line: 194, column: 38, scope: !5243)
!5298 = !DILocation(line: 195, column: 5, scope: !5243)
!5299 = !DILocation(line: 195, column: 45, scope: !5243)
!5300 = !DILocation(line: 196, column: 5, scope: !5243)
!5301 = !DILocation(line: 196, column: 47, scope: !5243)
!5302 = !DILocation(line: 197, column: 46, scope: !5243)
!5303 = !DILocation(line: 197, column: 5, scope: !5243)
!5304 = !DILocation(line: 197, column: 44, scope: !5243)
!5305 = !DILocation(line: 198, column: 46, scope: !5243)
!5306 = !DILocation(line: 198, column: 5, scope: !5243)
!5307 = !DILocation(line: 198, column: 44, scope: !5243)
!5308 = !DILocation(line: 199, column: 38, scope: !5243)
!5309 = !DILocation(line: 200, column: 5, scope: !5243)
!5310 = !DILocation(line: 200, column: 38, scope: !5243)
!5311 = !DILocation(line: 202, column: 20, scope: !5243)
!5312 = !DILocation(line: 203, column: 18, scope: !5243)
!5313 = !DILocation(line: 205, column: 18, scope: !5243)
!5314 = !DILocation(line: 207, column: 18, scope: !5243)
!5315 = !DILocation(line: 208, column: 18, scope: !5243)
!5316 = !DILocation(line: 209, column: 5, scope: !5243)
!5317 = !DILocation(line: 213, column: 1, scope: !5243)
!5318 = distinct !DISubprogram(name: "halUART_Get_VFIFO_Length", scope: !357, file: !357, line: 215, type: !5319, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5322)
!5319 = !DISubroutineType(types: !5320)
!5320 = !{null, !5176, !553, !5321}
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!5322 = !{!5323, !5324, !5325}
!5323 = !DILocalVariable(name: "u_port", arg: 1, scope: !5318, file: !357, line: 215, type: !5176)
!5324 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5318, file: !357, line: 215, type: !553)
!5325 = !DILocalVariable(name: "length", arg: 3, scope: !5318, file: !357, line: 215, type: !5321)
!5326 = !DILocation(line: 0, scope: !5318)
!5327 = !DILocation(line: 217, column: 16, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5318, file: !357, line: 217, column: 9)
!5329 = !DILocation(line: 0, scope: !5328)
!5330 = !DILocation(line: 217, column: 9, scope: !5318)
!5331 = !DILocation(line: 218, column: 13, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5328, file: !357, line: 217, column: 31)
!5333 = !DILocation(line: 219, column: 23, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5335, file: !357, line: 218, column: 20)
!5335 = distinct !DILexicalBlock(scope: !5332, file: !357, line: 218, column: 13)
!5336 = !DILocation(line: 220, column: 9, scope: !5334)
!5337 = !DILocation(line: 221, column: 23, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5335, file: !357, line: 220, column: 16)
!5339 = !DILocation(line: 221, column: 21, scope: !5338)
!5340 = !DILocation(line: 222, column: 24, scope: !5338)
!5341 = !DILocation(line: 222, column: 21, scope: !5338)
!5342 = !DILocation(line: 225, column: 13, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5328, file: !357, line: 224, column: 12)
!5344 = !DILocation(line: 226, column: 23, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5346, file: !357, line: 225, column: 20)
!5346 = distinct !DILexicalBlock(scope: !5343, file: !357, line: 225, column: 13)
!5347 = !DILocation(line: 227, column: 9, scope: !5345)
!5348 = !DILocation(line: 228, column: 23, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5346, file: !357, line: 227, column: 16)
!5350 = !DILocation(line: 228, column: 21, scope: !5349)
!5351 = !DILocation(line: 229, column: 24, scope: !5349)
!5352 = !DILocation(line: 229, column: 21, scope: !5349)
!5353 = !DILocation(line: 233, column: 5, scope: !5318)
!5354 = distinct !DISubprogram(name: "halUART_Read_VFIFO_Data", scope: !357, file: !357, line: 236, type: !5355, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5357)
!5355 = !DISubroutineType(types: !5356)
!5356 = !{null, !5176, !274, !61}
!5357 = !{!5358, !5359, !5360, !5361}
!5358 = !DILocalVariable(name: "u_port", arg: 1, scope: !5354, file: !357, line: 236, type: !5176)
!5359 = !DILocalVariable(name: "data", arg: 2, scope: !5354, file: !357, line: 236, type: !274)
!5360 = !DILocalVariable(name: "length", arg: 3, scope: !5354, file: !357, line: 236, type: !61)
!5361 = !DILocalVariable(name: "idx", scope: !5354, file: !357, line: 238, type: !159)
!5362 = !DILocation(line: 0, scope: !5354)
!5363 = !DILocation(line: 239, column: 23, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5365, file: !357, line: 239, column: 5)
!5365 = distinct !DILexicalBlock(scope: !5354, file: !357, line: 239, column: 5)
!5366 = !DILocation(line: 239, column: 5, scope: !5365)
!5367 = !DILocation(line: 240, column: 13, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5364, file: !357, line: 239, column: 40)
!5369 = !DILocation(line: 244, column: 9, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5371, file: !357, line: 242, column: 42)
!5371 = distinct !DILexicalBlock(scope: !5372, file: !357, line: 242, column: 20)
!5372 = distinct !DILexicalBlock(scope: !5368, file: !357, line: 240, column: 13)
!5373 = !DILocation(line: 0, scope: !5372)
!5374 = !DILocation(line: 239, column: 36, scope: !5364)
!5375 = distinct !{!5375, !5366, !5376}
!5376 = !DILocation(line: 246, column: 5, scope: !5365)
!5377 = !DILocation(line: 249, column: 1, scope: !5354)
!5378 = distinct !DISubprogram(name: "halUART_Write_VFIFO_Data", scope: !357, file: !357, line: 251, type: !5379, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5381)
!5379 = !DISubroutineType(types: !5380)
!5380 = !{null, !5176, !1529, !61}
!5381 = !{!5382, !5383, !5384, !5385}
!5382 = !DILocalVariable(name: "u_port", arg: 1, scope: !5378, file: !357, line: 251, type: !5176)
!5383 = !DILocalVariable(name: "data", arg: 2, scope: !5378, file: !357, line: 251, type: !1529)
!5384 = !DILocalVariable(name: "length", arg: 3, scope: !5378, file: !357, line: 251, type: !61)
!5385 = !DILocalVariable(name: "idx", scope: !5378, file: !357, line: 253, type: !159)
!5386 = !DILocation(line: 0, scope: !5378)
!5387 = !DILocation(line: 254, column: 23, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5389, file: !357, line: 254, column: 5)
!5389 = distinct !DILexicalBlock(scope: !5378, file: !357, line: 254, column: 5)
!5390 = !DILocation(line: 254, column: 5, scope: !5389)
!5391 = !DILocation(line: 255, column: 13, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5388, file: !357, line: 254, column: 40)
!5393 = !DILocation(line: 256, column: 61, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5395, file: !357, line: 255, column: 35)
!5395 = distinct !DILexicalBlock(scope: !5392, file: !357, line: 255, column: 13)
!5396 = !DILocation(line: 256, column: 59, scope: !5394)
!5397 = !DILocation(line: 257, column: 9, scope: !5394)
!5398 = !DILocation(line: 258, column: 61, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5400, file: !357, line: 257, column: 42)
!5400 = distinct !DILexicalBlock(scope: !5395, file: !357, line: 257, column: 20)
!5401 = !DILocation(line: 258, column: 59, scope: !5399)
!5402 = !DILocation(line: 259, column: 9, scope: !5399)
!5403 = !DILocation(line: 254, column: 36, scope: !5388)
!5404 = distinct !{!5404, !5390, !5405}
!5405 = !DILocation(line: 261, column: 5, scope: !5389)
!5406 = !DILocation(line: 264, column: 1, scope: !5378)
!5407 = distinct !DISubprogram(name: "halUART_Tx_VFIFO_Initialize", scope: !357, file: !357, line: 266, type: !5408, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5410)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{null, !5176, !274, !61, !61}
!5410 = !{!5411, !5412, !5413, !5414}
!5411 = !DILocalVariable(name: "u_port", arg: 1, scope: !5407, file: !357, line: 266, type: !5176)
!5412 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !5407, file: !357, line: 266, type: !274)
!5413 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !5407, file: !357, line: 266, type: !61)
!5414 = !DILocalVariable(name: "threshold", arg: 4, scope: !5407, file: !357, line: 266, type: !61)
!5415 = !DILocation(line: 0, scope: !5407)
!5416 = !DILocation(line: 268, column: 9, scope: !5407)
!5417 = !DILocation(line: 274, column: 5, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5419, file: !357, line: 271, column: 38)
!5419 = distinct !DILexicalBlock(scope: !5420, file: !357, line: 271, column: 16)
!5420 = distinct !DILexicalBlock(scope: !5407, file: !357, line: 268, column: 9)
!5421 = !DILocation(line: 0, scope: !5420)
!5422 = !DILocation(line: 276, column: 1, scope: !5407)
!5423 = distinct !DISubprogram(name: "halUART_Rx_VFIFO_Initialize", scope: !357, file: !357, line: 278, type: !5424, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5426)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{null, !5176, !274, !61, !61, !61, !61}
!5426 = !{!5427, !5428, !5429, !5430, !5431, !5432}
!5427 = !DILocalVariable(name: "u_port", arg: 1, scope: !5423, file: !357, line: 278, type: !5176)
!5428 = !DILocalVariable(name: "vfifo_buffer", arg: 2, scope: !5423, file: !357, line: 278, type: !274)
!5429 = !DILocalVariable(name: "buffer_length", arg: 3, scope: !5423, file: !357, line: 278, type: !61)
!5430 = !DILocalVariable(name: "alert_length", arg: 4, scope: !5423, file: !357, line: 278, type: !61)
!5431 = !DILocalVariable(name: "threshold", arg: 5, scope: !5423, file: !357, line: 278, type: !61)
!5432 = !DILocalVariable(name: "timeout", arg: 6, scope: !5423, file: !357, line: 278, type: !61)
!5433 = !DILocation(line: 0, scope: !5423)
!5434 = !DILocation(line: 280, column: 9, scope: !5423)
!5435 = !DILocation(line: 286, column: 5, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5437, file: !357, line: 283, column: 38)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !357, line: 283, column: 16)
!5438 = distinct !DILexicalBlock(scope: !5423, file: !357, line: 280, column: 9)
!5439 = !DILocation(line: 0, scope: !5438)
!5440 = !DILocation(line: 288, column: 1, scope: !5423)
!5441 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_Callback", scope: !357, file: !357, line: 290, type: !5442, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5444)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{null, !5176, !780}
!5444 = !{!5445, !5446}
!5445 = !DILocalVariable(name: "u_port", arg: 1, scope: !5441, file: !357, line: 290, type: !5176)
!5446 = !DILocalVariable(name: "func", arg: 2, scope: !5441, file: !357, line: 290, type: !780)
!5447 = !DILocation(line: 0, scope: !5441)
!5448 = !DILocation(line: 292, column: 9, scope: !5441)
!5449 = !DILocation(line: 296, column: 5, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5451, file: !357, line: 294, column: 38)
!5451 = distinct !DILexicalBlock(scope: !5452, file: !357, line: 294, column: 16)
!5452 = distinct !DILexicalBlock(scope: !5441, file: !357, line: 292, column: 9)
!5453 = !DILocation(line: 0, scope: !5452)
!5454 = !DILocation(line: 298, column: 1, scope: !5441)
!5455 = distinct !DISubprogram(name: "halUART_VDMA_Rx_Register_TO_Callback", scope: !357, file: !357, line: 300, type: !5442, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5456)
!5456 = !{!5457, !5458}
!5457 = !DILocalVariable(name: "u_port", arg: 1, scope: !5455, file: !357, line: 300, type: !5176)
!5458 = !DILocalVariable(name: "func", arg: 2, scope: !5455, file: !357, line: 300, type: !780)
!5459 = !DILocation(line: 0, scope: !5455)
!5460 = !DILocation(line: 302, column: 9, scope: !5455)
!5461 = !DILocation(line: 306, column: 5, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !357, line: 304, column: 38)
!5463 = distinct !DILexicalBlock(scope: !5464, file: !357, line: 304, column: 16)
!5464 = distinct !DILexicalBlock(scope: !5455, file: !357, line: 302, column: 9)
!5465 = !DILocation(line: 0, scope: !5464)
!5466 = !DILocation(line: 308, column: 1, scope: !5455)
!5467 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !357, file: !357, line: 310, type: !5230, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5468)
!5468 = !{!5469, !5470, !5471, !5472}
!5469 = !DILocalVariable(name: "u_port", arg: 1, scope: !5467, file: !357, line: 310, type: !5176)
!5470 = !DILocalVariable(name: "base", scope: !5467, file: !357, line: 312, type: !30)
!5471 = !DILocalVariable(name: "EFR", scope: !5467, file: !357, line: 313, type: !1717)
!5472 = !DILocalVariable(name: "LCR", scope: !5467, file: !357, line: 313, type: !1717)
!5473 = !DILocation(line: 0, scope: !5467)
!5474 = !DILocation(line: 312, column: 25, scope: !5467)
!5475 = !DILocation(line: 315, column: 11, scope: !5467)
!5476 = !DILocation(line: 317, column: 33, scope: !5467)
!5477 = !DILocation(line: 318, column: 11, scope: !5467)
!5478 = !DILocation(line: 320, column: 35, scope: !5467)
!5479 = !DILocation(line: 320, column: 33, scope: !5467)
!5480 = !DILocation(line: 322, column: 5, scope: !5467)
!5481 = !DILocation(line: 322, column: 39, scope: !5467)
!5482 = !DILocation(line: 324, column: 33, scope: !5467)
!5483 = !DILocation(line: 325, column: 5, scope: !5467)
!5484 = !DILocation(line: 325, column: 33, scope: !5467)
!5485 = !DILocation(line: 327, column: 35, scope: !5467)
!5486 = !DILocation(line: 327, column: 33, scope: !5467)
!5487 = !DILocation(line: 328, column: 1, scope: !5467)
!5488 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !357, file: !357, line: 330, type: !5489, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5491)
!5489 = !DISubroutineType(types: !5490)
!5490 = !{null, !5176, !54, !54, !54}
!5491 = !{!5492, !5493, !5494, !5495, !5496, !5497, !5498}
!5492 = !DILocalVariable(name: "u_port", arg: 1, scope: !5488, file: !357, line: 330, type: !5176)
!5493 = !DILocalVariable(name: "xon", arg: 2, scope: !5488, file: !357, line: 330, type: !54)
!5494 = !DILocalVariable(name: "xoff", arg: 3, scope: !5488, file: !357, line: 330, type: !54)
!5495 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5488, file: !357, line: 330, type: !54)
!5496 = !DILocalVariable(name: "base", scope: !5488, file: !357, line: 332, type: !30)
!5497 = !DILocalVariable(name: "EFR", scope: !5488, file: !357, line: 333, type: !1717)
!5498 = !DILocalVariable(name: "LCR", scope: !5488, file: !357, line: 333, type: !1717)
!5499 = !DILocation(line: 0, scope: !5488)
!5500 = !DILocation(line: 332, column: 25, scope: !5488)
!5501 = !DILocation(line: 335, column: 11, scope: !5488)
!5502 = !DILocation(line: 337, column: 33, scope: !5488)
!5503 = !DILocation(line: 338, column: 36, scope: !5488)
!5504 = !DILocation(line: 338, column: 5, scope: !5488)
!5505 = !DILocation(line: 338, column: 34, scope: !5488)
!5506 = !DILocation(line: 339, column: 5, scope: !5488)
!5507 = !DILocation(line: 339, column: 34, scope: !5488)
!5508 = !DILocation(line: 340, column: 37, scope: !5488)
!5509 = !DILocation(line: 340, column: 5, scope: !5488)
!5510 = !DILocation(line: 340, column: 35, scope: !5488)
!5511 = !DILocation(line: 341, column: 5, scope: !5488)
!5512 = !DILocation(line: 341, column: 35, scope: !5488)
!5513 = !DILocation(line: 343, column: 11, scope: !5488)
!5514 = !DILocation(line: 345, column: 35, scope: !5488)
!5515 = !DILocation(line: 345, column: 33, scope: !5488)
!5516 = !DILocation(line: 347, column: 35, scope: !5488)
!5517 = !DILocation(line: 347, column: 33, scope: !5488)
!5518 = !DILocation(line: 349, column: 43, scope: !5488)
!5519 = !DILocation(line: 349, column: 5, scope: !5488)
!5520 = !DILocation(line: 349, column: 41, scope: !5488)
!5521 = !DILocation(line: 350, column: 5, scope: !5488)
!5522 = !DILocation(line: 350, column: 39, scope: !5488)
!5523 = !DILocation(line: 351, column: 1, scope: !5488)
!5524 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !357, file: !357, line: 353, type: !5230, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5525)
!5525 = !{!5526, !5527, !5528}
!5526 = !DILocalVariable(name: "u_port", arg: 1, scope: !5524, file: !357, line: 353, type: !5176)
!5527 = !DILocalVariable(name: "base", scope: !5524, file: !357, line: 355, type: !30)
!5528 = !DILocalVariable(name: "LCR", scope: !5524, file: !357, line: 356, type: !1717)
!5529 = !DILocation(line: 0, scope: !5524)
!5530 = !DILocation(line: 355, column: 25, scope: !5524)
!5531 = !DILocation(line: 358, column: 11, scope: !5524)
!5532 = !DILocation(line: 360, column: 33, scope: !5524)
!5533 = !DILocation(line: 362, column: 5, scope: !5524)
!5534 = !DILocation(line: 362, column: 33, scope: !5524)
!5535 = !DILocation(line: 364, column: 33, scope: !5524)
!5536 = !DILocation(line: 366, column: 35, scope: !5524)
!5537 = !DILocation(line: 366, column: 33, scope: !5524)
!5538 = !DILocation(line: 367, column: 1, scope: !5524)
!5539 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !357, file: !357, line: 370, type: !5230, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5540)
!5540 = !{!5541, !5542}
!5541 = !DILocalVariable(name: "u_port", arg: 1, scope: !5539, file: !357, line: 370, type: !5176)
!5542 = !DILocalVariable(name: "base", scope: !5539, file: !357, line: 372, type: !30)
!5543 = !DILocation(line: 0, scope: !5539)
!5544 = !DILocation(line: 372, column: 25, scope: !5539)
!5545 = !DILocation(line: 374, column: 5, scope: !5539)
!5546 = !DILocation(line: 374, column: 38, scope: !5539)
!5547 = !DILocation(line: 375, column: 1, scope: !5539)
!5548 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !357, file: !357, line: 377, type: !5230, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5549)
!5549 = !{!5550, !5551, !5552, !5553}
!5550 = !DILocalVariable(name: "u_port", arg: 1, scope: !5548, file: !357, line: 377, type: !5176)
!5551 = !DILocalVariable(name: "base", scope: !5548, file: !357, line: 379, type: !30)
!5552 = !DILocalVariable(name: "IER", scope: !5548, file: !357, line: 380, type: !1717)
!5553 = !DILocalVariable(name: "LCR", scope: !5548, file: !357, line: 380, type: !1717)
!5554 = !DILocation(line: 0, scope: !5548)
!5555 = !DILocation(line: 379, column: 25, scope: !5548)
!5556 = !DILocation(line: 382, column: 11, scope: !5548)
!5557 = !DILocation(line: 383, column: 33, scope: !5548)
!5558 = !DILocation(line: 385, column: 11, scope: !5548)
!5559 = !DILocation(line: 387, column: 35, scope: !5548)
!5560 = !DILocation(line: 387, column: 33, scope: !5548)
!5561 = !DILocation(line: 389, column: 35, scope: !5548)
!5562 = !DILocation(line: 389, column: 33, scope: !5548)
!5563 = !DILocation(line: 391, column: 5, scope: !5548)
!5564 = !DILocation(line: 391, column: 38, scope: !5548)
!5565 = !DILocation(line: 392, column: 1, scope: !5548)
!5566 = distinct !DISubprogram(name: "uart_mask_send_interrupt", scope: !357, file: !357, line: 394, type: !5230, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5567)
!5567 = !{!5568, !5569, !5570, !5571}
!5568 = !DILocalVariable(name: "u_port", arg: 1, scope: !5566, file: !357, line: 394, type: !5176)
!5569 = !DILocalVariable(name: "base", scope: !5566, file: !357, line: 396, type: !30)
!5570 = !DILocalVariable(name: "IER", scope: !5566, file: !357, line: 397, type: !1717)
!5571 = !DILocalVariable(name: "LCR", scope: !5566, file: !357, line: 397, type: !1717)
!5572 = !DILocation(line: 0, scope: !5566)
!5573 = !DILocation(line: 396, column: 25, scope: !5566)
!5574 = !DILocation(line: 399, column: 11, scope: !5566)
!5575 = !DILocation(line: 400, column: 33, scope: !5566)
!5576 = !DILocation(line: 402, column: 11, scope: !5566)
!5577 = !DILocation(line: 403, column: 9, scope: !5566)
!5578 = !DILocation(line: 404, column: 33, scope: !5566)
!5579 = !DILocation(line: 406, column: 35, scope: !5566)
!5580 = !DILocation(line: 406, column: 33, scope: !5566)
!5581 = !DILocation(line: 408, column: 5, scope: !5566)
!5582 = !DILocation(line: 408, column: 38, scope: !5566)
!5583 = !DILocation(line: 409, column: 1, scope: !5566)
!5584 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !357, file: !357, line: 411, type: !626, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5585)
!5585 = !{!5586, !5587, !5588, !5589}
!5586 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5584, file: !357, line: 411, type: !210)
!5587 = !DILocalVariable(name: "u_port", scope: !5584, file: !357, line: 413, type: !5176)
!5588 = !DILocalVariable(name: "base", scope: !5584, file: !357, line: 414, type: !30)
!5589 = !DILocalVariable(name: "IIR", scope: !5584, file: !357, line: 415, type: !1717)
!5590 = !DILocation(line: 0, scope: !5584)
!5591 = !DILocation(line: 417, column: 20, scope: !5592)
!5592 = distinct !DILexicalBlock(scope: !5584, file: !357, line: 417, column: 9)
!5593 = !DILocation(line: 425, column: 11, scope: !5584)
!5594 = !DILocation(line: 426, column: 17, scope: !5584)
!5595 = !DILocation(line: 426, column: 5, scope: !5584)
!5596 = !DILocation(line: 428, column: 13, scope: !5597)
!5597 = distinct !DILexicalBlock(scope: !5584, file: !357, line: 426, column: 25)
!5598 = !DILocation(line: 429, column: 13, scope: !5597)
!5599 = !DILocation(line: 433, column: 1, scope: !5584)
!5600 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !357, file: !357, line: 436, type: !5230, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5601)
!5601 = !{!5602, !5603}
!5602 = !DILocalVariable(name: "u_port", arg: 1, scope: !5600, file: !357, line: 436, type: !5176)
!5603 = !DILocalVariable(name: "base", scope: !5600, file: !357, line: 438, type: !30)
!5604 = !DILocation(line: 0, scope: !5600)
!5605 = !DILocation(line: 438, column: 25, scope: !5600)
!5606 = !DILocation(line: 440, column: 5, scope: !5600)
!5607 = !DILocation(line: 440, column: 33, scope: !5600)
!5608 = !DILocation(line: 441, column: 5, scope: !5600)
!5609 = !DILocation(line: 441, column: 33, scope: !5600)
!5610 = !DILocation(line: 442, column: 5, scope: !5600)
!5611 = !DILocation(line: 442, column: 34, scope: !5600)
!5612 = !DILocation(line: 443, column: 5, scope: !5600)
!5613 = !DILocation(line: 443, column: 35, scope: !5600)
!5614 = !DILocation(line: 445, column: 33, scope: !5600)
!5615 = !DILocation(line: 446, column: 5, scope: !5600)
!5616 = !DILocation(line: 446, column: 33, scope: !5600)
!5617 = !DILocation(line: 447, column: 5, scope: !5600)
!5618 = !DILocation(line: 447, column: 33, scope: !5600)
!5619 = !DILocation(line: 449, column: 33, scope: !5600)
!5620 = !DILocation(line: 450, column: 33, scope: !5600)
!5621 = !DILocation(line: 451, column: 33, scope: !5600)
!5622 = !DILocation(line: 453, column: 33, scope: !5600)
!5623 = !DILocation(line: 454, column: 33, scope: !5600)
!5624 = !DILocation(line: 455, column: 33, scope: !5600)
!5625 = !DILocation(line: 457, column: 33, scope: !5600)
!5626 = !DILocation(line: 458, column: 5, scope: !5600)
!5627 = !DILocation(line: 458, column: 33, scope: !5600)
!5628 = !DILocation(line: 459, column: 5, scope: !5600)
!5629 = !DILocation(line: 459, column: 39, scope: !5600)
!5630 = !DILocation(line: 460, column: 5, scope: !5600)
!5631 = !DILocation(line: 460, column: 40, scope: !5600)
!5632 = !DILocation(line: 461, column: 5, scope: !5600)
!5633 = !DILocation(line: 461, column: 42, scope: !5600)
!5634 = !DILocation(line: 462, column: 5, scope: !5600)
!5635 = !DILocation(line: 462, column: 42, scope: !5600)
!5636 = !DILocation(line: 463, column: 5, scope: !5600)
!5637 = !DILocation(line: 463, column: 35, scope: !5600)
!5638 = !DILocation(line: 464, column: 5, scope: !5600)
!5639 = !DILocation(line: 464, column: 41, scope: !5600)
!5640 = !DILocation(line: 465, column: 5, scope: !5600)
!5641 = !DILocation(line: 465, column: 39, scope: !5600)
!5642 = !DILocation(line: 466, column: 5, scope: !5600)
!5643 = !DILocation(line: 466, column: 38, scope: !5600)
!5644 = !DILocation(line: 467, column: 5, scope: !5600)
!5645 = !DILocation(line: 467, column: 42, scope: !5600)
!5646 = !DILocation(line: 468, column: 5, scope: !5600)
!5647 = !DILocation(line: 468, column: 45, scope: !5600)
!5648 = !DILocation(line: 469, column: 5, scope: !5600)
!5649 = !DILocation(line: 469, column: 39, scope: !5600)
!5650 = !DILocation(line: 470, column: 5, scope: !5600)
!5651 = !DILocation(line: 470, column: 39, scope: !5600)
!5652 = !DILocation(line: 471, column: 5, scope: !5600)
!5653 = !DILocation(line: 471, column: 42, scope: !5600)
!5654 = !DILocation(line: 472, column: 1, scope: !5600)
!5655 = distinct !DISubprogram(name: "uart_query_empty", scope: !357, file: !357, line: 474, type: !5230, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !356, retainedNodes: !5656)
!5656 = !{!5657, !5658}
!5657 = !DILocalVariable(name: "u_port", arg: 1, scope: !5655, file: !357, line: 474, type: !5176)
!5658 = !DILocalVariable(name: "base", scope: !5655, file: !357, line: 476, type: !30)
!5659 = !DILocation(line: 0, scope: !5655)
!5660 = !DILocation(line: 476, column: 25, scope: !5655)
!5661 = !DILocation(line: 478, column: 5, scope: !5655)
!5662 = !DILocation(line: 478, column: 14, scope: !5655)
!5663 = !DILocation(line: 478, column: 42, scope: !5655)
!5664 = !DILocation(line: 478, column: 12, scope: !5655)
!5665 = distinct !{!5665, !5661, !5666}
!5666 = !DILocation(line: 478, column: 50, scope: !5655)
!5667 = !DILocation(line: 479, column: 1, scope: !5655)
!5668 = distinct !DISubprogram(name: "log_hal_fatal_internal", scope: !1266, file: !1266, line: 64, type: !5669, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !5671)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{null, !395, !7, !395, null}
!5671 = !{!5672, !5673, !5674, !5675, !5684}
!5672 = !DILocalVariable(name: "func", arg: 1, scope: !5668, file: !1266, line: 64, type: !395)
!5673 = !DILocalVariable(name: "line", arg: 2, scope: !5668, file: !1266, line: 64, type: !7)
!5674 = !DILocalVariable(name: "message", arg: 3, scope: !5668, file: !1266, line: 64, type: !395)
!5675 = !DILocalVariable(name: "ap", scope: !5668, file: !1266, line: 66, type: !5676)
!5676 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5677, line: 46, baseType: !5678)
!5677 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!5678 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5679, line: 32, baseType: !5680)
!5679 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!5680 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1266, baseType: !5681)
!5681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5682)
!5682 = !{!5683}
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5681, file: !1266, line: 66, baseType: !51, size: 32)
!5684 = !DILocalVariable(name: "mask", scope: !5668, file: !1266, line: 68, type: !61)
!5685 = !DILocation(line: 0, scope: !5668)
!5686 = !DILocation(line: 66, column: 5, scope: !5668)
!5687 = !DILocation(line: 66, column: 13, scope: !5668)
!5688 = !DILocation(line: 68, column: 5, scope: !5668)
!5689 = !DILocation(line: 69, column: 5, scope: !5668)
!5690 = !DILocation(line: 71, column: 5, scope: !5668)
!5691 = !DILocation(line: 72, column: 5, scope: !5668)
!5692 = !DILocation(line: 73, column: 5, scope: !5668)
!5693 = !DILocation(line: 75, column: 37, scope: !5668)
!5694 = !DILocation(line: 75, column: 5, scope: !5668)
!5695 = !DILocation(line: 77, column: 1, scope: !5668)
!5696 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !1266, file: !1266, line: 78, type: !5669, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !5697)
!5697 = !{!5698, !5699, !5700, !5701, !5702}
!5698 = !DILocalVariable(name: "func", arg: 1, scope: !5696, file: !1266, line: 78, type: !395)
!5699 = !DILocalVariable(name: "line", arg: 2, scope: !5696, file: !1266, line: 78, type: !7)
!5700 = !DILocalVariable(name: "message", arg: 3, scope: !5696, file: !1266, line: 78, type: !395)
!5701 = !DILocalVariable(name: "ap", scope: !5696, file: !1266, line: 80, type: !5676)
!5702 = !DILocalVariable(name: "mask", scope: !5696, file: !1266, line: 82, type: !61)
!5703 = !DILocation(line: 0, scope: !5696)
!5704 = !DILocation(line: 80, column: 5, scope: !5696)
!5705 = !DILocation(line: 80, column: 13, scope: !5696)
!5706 = !DILocation(line: 82, column: 5, scope: !5696)
!5707 = !DILocation(line: 83, column: 5, scope: !5696)
!5708 = !DILocation(line: 85, column: 5, scope: !5696)
!5709 = !DILocation(line: 86, column: 5, scope: !5696)
!5710 = !DILocation(line: 87, column: 5, scope: !5696)
!5711 = !DILocation(line: 89, column: 37, scope: !5696)
!5712 = !DILocation(line: 89, column: 5, scope: !5696)
!5713 = !DILocation(line: 91, column: 1, scope: !5696)
!5714 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !1266, file: !1266, line: 92, type: !5669, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !5715)
!5715 = !{!5716, !5717, !5718, !5719, !5720}
!5716 = !DILocalVariable(name: "func", arg: 1, scope: !5714, file: !1266, line: 92, type: !395)
!5717 = !DILocalVariable(name: "line", arg: 2, scope: !5714, file: !1266, line: 92, type: !7)
!5718 = !DILocalVariable(name: "message", arg: 3, scope: !5714, file: !1266, line: 92, type: !395)
!5719 = !DILocalVariable(name: "ap", scope: !5714, file: !1266, line: 94, type: !5676)
!5720 = !DILocalVariable(name: "mask", scope: !5714, file: !1266, line: 96, type: !61)
!5721 = !DILocation(line: 0, scope: !5714)
!5722 = !DILocation(line: 94, column: 5, scope: !5714)
!5723 = !DILocation(line: 94, column: 13, scope: !5714)
!5724 = !DILocation(line: 96, column: 5, scope: !5714)
!5725 = !DILocation(line: 97, column: 5, scope: !5714)
!5726 = !DILocation(line: 99, column: 5, scope: !5714)
!5727 = !DILocation(line: 100, column: 5, scope: !5714)
!5728 = !DILocation(line: 101, column: 5, scope: !5714)
!5729 = !DILocation(line: 103, column: 37, scope: !5714)
!5730 = !DILocation(line: 103, column: 5, scope: !5714)
!5731 = !DILocation(line: 105, column: 1, scope: !5714)
!5732 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !1266, file: !1266, line: 106, type: !5669, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !5733)
!5733 = !{!5734, !5735, !5736, !5737, !5738}
!5734 = !DILocalVariable(name: "func", arg: 1, scope: !5732, file: !1266, line: 106, type: !395)
!5735 = !DILocalVariable(name: "line", arg: 2, scope: !5732, file: !1266, line: 106, type: !7)
!5736 = !DILocalVariable(name: "message", arg: 3, scope: !5732, file: !1266, line: 106, type: !395)
!5737 = !DILocalVariable(name: "ap", scope: !5732, file: !1266, line: 108, type: !5676)
!5738 = !DILocalVariable(name: "mask", scope: !5732, file: !1266, line: 110, type: !61)
!5739 = !DILocation(line: 0, scope: !5732)
!5740 = !DILocation(line: 108, column: 5, scope: !5732)
!5741 = !DILocation(line: 108, column: 13, scope: !5732)
!5742 = !DILocation(line: 110, column: 5, scope: !5732)
!5743 = !DILocation(line: 111, column: 5, scope: !5732)
!5744 = !DILocation(line: 113, column: 5, scope: !5732)
!5745 = !DILocation(line: 114, column: 5, scope: !5732)
!5746 = !DILocation(line: 115, column: 5, scope: !5732)
!5747 = !DILocation(line: 117, column: 37, scope: !5732)
!5748 = !DILocation(line: 117, column: 5, scope: !5732)
!5749 = !DILocation(line: 119, column: 1, scope: !5732)
!5750 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !1266, file: !1266, line: 121, type: !5751, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1265, retainedNodes: !5755)
!5751 = !DISubroutineType(types: !5752)
!5752 = !{null, !395, !7, !395, !5753, !7, null}
!5753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5754, size: 32)
!5754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!5755 = !{!5756, !5757, !5758, !5759, !5760}
!5756 = !DILocalVariable(name: "func", arg: 1, scope: !5750, file: !1266, line: 121, type: !395)
!5757 = !DILocalVariable(name: "line", arg: 2, scope: !5750, file: !1266, line: 121, type: !7)
!5758 = !DILocalVariable(name: "message", arg: 3, scope: !5750, file: !1266, line: 121, type: !395)
!5759 = !DILocalVariable(name: "data", arg: 4, scope: !5750, file: !1266, line: 121, type: !5753)
!5760 = !DILocalVariable(name: "length", arg: 5, scope: !5750, file: !1266, line: 121, type: !7)
!5761 = !DILocation(line: 0, scope: !5750)
!5762 = !DILocation(line: 123, column: 1, scope: !5750)
!5763 = distinct !DISubprogram(name: "hal_cache_init", scope: !406, file: !406, line: 53, type: !5764, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !5767)
!5764 = !DISubroutineType(types: !5765)
!5765 = !{!5766}
!5766 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !409, line: 172, baseType: !408)
!5767 = !{!5768, !5770}
!5768 = !DILocalVariable(name: "region", scope: !5763, file: !406, line: 55, type: !5769)
!5769 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !409, line: 204, baseType: !419)
!5770 = !DILocalVariable(name: "irq_flag", scope: !5763, file: !406, line: 56, type: !61)
!5771 = !DILocation(line: 59, column: 16, scope: !5763)
!5772 = !DILocation(line: 0, scope: !5763)
!5773 = !DILocation(line: 62, column: 9, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5763, file: !406, line: 62, column: 9)
!5775 = !DILocation(line: 62, column: 9, scope: !5763)
!5776 = !DILocation(line: 64, column: 9, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5774, file: !406, line: 62, column: 39)
!5778 = !DILocation(line: 66, column: 9, scope: !5777)
!5779 = !DILocation(line: 69, column: 24, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5774, file: !406, line: 67, column: 12)
!5781 = !DILocation(line: 72, column: 9, scope: !5780)
!5782 = !DILocation(line: 77, column: 5, scope: !5763)
!5783 = !DILocation(line: 80, column: 22, scope: !5763)
!5784 = !DILocation(line: 81, column: 28, scope: !5763)
!5785 = !DILocation(line: 84, column: 19, scope: !5763)
!5786 = !DILocation(line: 85, column: 23, scope: !5763)
!5787 = !DILocation(line: 88, column: 5, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5763, file: !406, line: 88, column: 5)
!5789 = !DILocation(line: 90, column: 9, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5791, file: !406, line: 88, column: 81)
!5791 = distinct !DILexicalBlock(scope: !5788, file: !406, line: 88, column: 5)
!5792 = !DILocation(line: 90, column: 38, scope: !5790)
!5793 = !DILocation(line: 91, column: 9, scope: !5790)
!5794 = !DILocation(line: 91, column: 42, scope: !5790)
!5795 = !DILocation(line: 94, column: 45, scope: !5790)
!5796 = !DILocation(line: 94, column: 47, scope: !5790)
!5797 = !DILocation(line: 95, column: 49, scope: !5790)
!5798 = !DILocation(line: 95, column: 51, scope: !5790)
!5799 = !DILocation(line: 88, column: 77, scope: !5791)
!5800 = !DILocation(line: 88, column: 46, scope: !5791)
!5801 = distinct !{!5801, !5787, !5802}
!5802 = !DILocation(line: 96, column: 5, scope: !5788)
!5803 = !DILocation(line: 99, column: 1, scope: !5763)
!5804 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !406, file: !406, line: 327, type: !5764, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !5805)
!5805 = !{!5806}
!5806 = !DILocalVariable(name: "irq_flag", scope: !5804, file: !406, line: 329, type: !61)
!5807 = !DILocation(line: 332, column: 16, scope: !5804)
!5808 = !DILocation(line: 0, scope: !5804)
!5809 = !DILocation(line: 335, column: 21, scope: !5804)
!5810 = !DILocation(line: 336, column: 21, scope: !5804)
!5811 = !DILocation(line: 339, column: 21, scope: !5804)
!5812 = !DILocation(line: 340, column: 21, scope: !5804)
!5813 = !DILocation(line: 434, column: 3, scope: !5814, inlinedAt: !5816)
!5814 = distinct !DISubprogram(name: "__ISB", scope: !5815, file: !5815, line: 432, type: !154, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !1387)
!5815 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/linkit7697_hdk/hal_examples/sleep_manager_power_mode/GCC")
!5816 = distinct !DILocation(line: 343, column: 5, scope: !5804)
!5817 = !{i64 296583}
!5818 = !DILocation(line: 346, column: 5, scope: !5804)
!5819 = !DILocation(line: 348, column: 5, scope: !5804)
!5820 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !406, file: !406, line: 101, type: !5764, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !5821)
!5821 = !{!5822}
!5822 = !DILocalVariable(name: "region", scope: !5820, file: !406, line: 103, type: !5769)
!5823 = !DILocation(line: 107, column: 5, scope: !5820)
!5824 = !DILocation(line: 110, column: 22, scope: !5820)
!5825 = !DILocation(line: 111, column: 28, scope: !5820)
!5826 = !DILocation(line: 114, column: 19, scope: !5820)
!5827 = !DILocation(line: 115, column: 23, scope: !5820)
!5828 = !DILocation(line: 0, scope: !5820)
!5829 = !DILocation(line: 118, column: 5, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5820, file: !406, line: 118, column: 5)
!5831 = !DILocation(line: 120, column: 9, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5833, file: !406, line: 118, column: 81)
!5833 = distinct !DILexicalBlock(scope: !5830, file: !406, line: 118, column: 5)
!5834 = !DILocation(line: 120, column: 38, scope: !5832)
!5835 = !DILocation(line: 121, column: 9, scope: !5832)
!5836 = !DILocation(line: 121, column: 42, scope: !5832)
!5837 = !DILocation(line: 124, column: 45, scope: !5832)
!5838 = !DILocation(line: 124, column: 47, scope: !5832)
!5839 = !DILocation(line: 125, column: 49, scope: !5832)
!5840 = !DILocation(line: 125, column: 51, scope: !5832)
!5841 = !DILocation(line: 118, column: 77, scope: !5833)
!5842 = !DILocation(line: 118, column: 46, scope: !5833)
!5843 = distinct !{!5843, !5829, !5844}
!5844 = !DILocation(line: 126, column: 5, scope: !5830)
!5845 = !DILocation(line: 129, column: 20, scope: !5820)
!5846 = !DILocation(line: 131, column: 5, scope: !5820)
!5847 = distinct !DISubprogram(name: "hal_cache_enable", scope: !406, file: !406, line: 134, type: !5764, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !1387)
!5848 = !DILocation(line: 137, column: 45, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5847, file: !406, line: 137, column: 9)
!5850 = !DILocation(line: 137, column: 28, scope: !5849)
!5851 = !DILocation(line: 137, column: 9, scope: !5847)
!5852 = !DILocation(line: 142, column: 22, scope: !5847)
!5853 = !DILocation(line: 145, column: 28, scope: !5847)
!5854 = !DILocation(line: 145, column: 19, scope: !5847)
!5855 = !DILocation(line: 147, column: 5, scope: !5847)
!5856 = !DILocation(line: 0, scope: !5847)
!5857 = !DILocation(line: 148, column: 1, scope: !5847)
!5858 = distinct !DISubprogram(name: "hal_cache_disable", scope: !406, file: !406, line: 150, type: !5764, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !5859)
!5859 = !{!5860}
!5860 = !DILocalVariable(name: "irq_flag", scope: !5858, file: !406, line: 152, type: !61)
!5861 = !DILocation(line: 155, column: 16, scope: !5858)
!5862 = !DILocation(line: 0, scope: !5858)
!5863 = !DILocation(line: 158, column: 16, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5858, file: !406, line: 158, column: 9)
!5865 = !DILocation(line: 158, column: 26, scope: !5864)
!5866 = !DILocation(line: 158, column: 9, scope: !5858)
!5867 = !DILocation(line: 160, column: 9, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5864, file: !406, line: 158, column: 49)
!5869 = !DILocation(line: 161, column: 5, scope: !5868)
!5870 = !DILocation(line: 164, column: 22, scope: !5858)
!5871 = !DILocation(line: 167, column: 28, scope: !5858)
!5872 = !DILocation(line: 167, column: 19, scope: !5858)
!5873 = !DILocation(line: 170, column: 5, scope: !5858)
!5874 = !DILocation(line: 172, column: 5, scope: !5858)
!5875 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !406, file: !406, line: 175, type: !5876, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !5878)
!5876 = !DISubroutineType(types: !5877)
!5877 = !{!5766, !5769}
!5878 = !{!5879}
!5879 = !DILocalVariable(name: "region", arg: 1, scope: !5875, file: !406, line: 175, type: !5769)
!5880 = !DILocation(line: 0, scope: !5875)
!5881 = !DILocation(line: 178, column: 16, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5875, file: !406, line: 178, column: 9)
!5883 = !DILocation(line: 178, column: 9, scope: !5875)
!5884 = !DILocation(line: 183, column: 9, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !5875, file: !406, line: 183, column: 9)
!5886 = !DILocation(line: 183, column: 38, scope: !5885)
!5887 = !DILocation(line: 183, column: 9, scope: !5875)
!5888 = !DILocation(line: 184, column: 38, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5885, file: !406, line: 183, column: 62)
!5890 = !DILocation(line: 184, column: 32, scope: !5889)
!5891 = !DILocation(line: 190, column: 32, scope: !5875)
!5892 = !DILocation(line: 190, column: 23, scope: !5875)
!5893 = !DILocation(line: 192, column: 5, scope: !5875)
!5894 = !DILocation(line: 193, column: 1, scope: !5875)
!5895 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !406, file: !406, line: 195, type: !5876, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !5896)
!5896 = !{!5897}
!5897 = !DILocalVariable(name: "region", arg: 1, scope: !5895, file: !406, line: 195, type: !5769)
!5898 = !DILocation(line: 0, scope: !5895)
!5899 = !DILocation(line: 198, column: 16, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5895, file: !406, line: 198, column: 9)
!5901 = !DILocation(line: 198, column: 9, scope: !5895)
!5902 = !DILocation(line: 203, column: 35, scope: !5895)
!5903 = !DILocation(line: 203, column: 31, scope: !5895)
!5904 = !DILocation(line: 203, column: 28, scope: !5895)
!5905 = !DILocation(line: 206, column: 32, scope: !5895)
!5906 = !DILocation(line: 206, column: 23, scope: !5895)
!5907 = !DILocation(line: 209, column: 41, scope: !5895)
!5908 = !DILocation(line: 209, column: 43, scope: !5895)
!5909 = !DILocation(line: 210, column: 45, scope: !5895)
!5910 = !DILocation(line: 210, column: 47, scope: !5895)
!5911 = !DILocation(line: 212, column: 5, scope: !5895)
!5912 = !DILocation(line: 213, column: 1, scope: !5895)
!5913 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !406, file: !406, line: 215, type: !5914, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !5917)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!5766, !5916}
!5916 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !409, line: 182, baseType: !438)
!5917 = !{!5918}
!5918 = !DILocalVariable(name: "cache_size", arg: 1, scope: !5913, file: !406, line: 215, type: !5916)
!5919 = !DILocation(line: 0, scope: !5913)
!5920 = !DILocation(line: 218, column: 20, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5913, file: !406, line: 218, column: 9)
!5922 = !DILocation(line: 218, column: 9, scope: !5913)
!5923 = !DILocation(line: 223, column: 22, scope: !5913)
!5924 = !DILocation(line: 224, column: 37, scope: !5913)
!5925 = !DILocation(line: 224, column: 22, scope: !5913)
!5926 = !DILocation(line: 227, column: 20, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5913, file: !406, line: 227, column: 9)
!5928 = !DILocation(line: 227, column: 9, scope: !5913)
!5929 = !DILocation(line: 228, column: 26, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5927, file: !406, line: 227, column: 43)
!5931 = !DILocation(line: 229, column: 5, scope: !5930)
!5932 = !DILocation(line: 232, column: 28, scope: !5913)
!5933 = !DILocation(line: 232, column: 19, scope: !5913)
!5934 = !DILocation(line: 234, column: 5, scope: !5913)
!5935 = !DILocation(line: 235, column: 1, scope: !5913)
!5936 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !406, file: !406, line: 237, type: !5937, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !5946)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{!5766, !5769, !5939}
!5939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5940, size: 32)
!5940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5941)
!5941 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !409, line: 222, baseType: !5942)
!5942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !409, line: 219, size: 64, elements: !5943)
!5943 = !{!5944, !5945}
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !5942, file: !409, line: 220, baseType: !61, size: 32)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !5942, file: !409, line: 221, baseType: !61, size: 32, offset: 32)
!5946 = !{!5947, !5948}
!5947 = !DILocalVariable(name: "region", arg: 1, scope: !5936, file: !406, line: 237, type: !5769)
!5948 = !DILocalVariable(name: "region_config", arg: 2, scope: !5936, file: !406, line: 237, type: !5939)
!5949 = !DILocation(line: 0, scope: !5936)
!5950 = !DILocation(line: 240, column: 16, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5936, file: !406, line: 240, column: 9)
!5952 = !DILocation(line: 240, column: 9, scope: !5936)
!5953 = !DILocation(line: 245, column: 23, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5936, file: !406, line: 245, column: 9)
!5955 = !DILocation(line: 245, column: 9, scope: !5936)
!5956 = !DILocation(line: 250, column: 24, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5936, file: !406, line: 250, column: 9)
!5958 = !DILocation(line: 250, column: 45, scope: !5957)
!5959 = !DILocation(line: 250, column: 9, scope: !5936)
!5960 = !DILocation(line: 251, column: 9, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5957, file: !406, line: 250, column: 81)
!5962 = !DILocation(line: 256, column: 24, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5936, file: !406, line: 256, column: 9)
!5964 = !DILocation(line: 256, column: 42, scope: !5963)
!5965 = !DILocation(line: 256, column: 9, scope: !5936)
!5966 = !DILocation(line: 257, column: 9, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5963, file: !406, line: 256, column: 78)
!5968 = !DILocation(line: 262, column: 5, scope: !5936)
!5969 = !DILocation(line: 262, column: 34, scope: !5936)
!5970 = !DILocation(line: 263, column: 55, scope: !5936)
!5971 = !DILocation(line: 263, column: 93, scope: !5936)
!5972 = !DILocation(line: 263, column: 76, scope: !5936)
!5973 = !DILocation(line: 263, column: 5, scope: !5936)
!5974 = !DILocation(line: 263, column: 38, scope: !5936)
!5975 = !DILocation(line: 266, column: 34, scope: !5936)
!5976 = !DILocation(line: 269, column: 45, scope: !5936)
!5977 = !DILocation(line: 269, column: 41, scope: !5936)
!5978 = !DILocation(line: 269, column: 43, scope: !5936)
!5979 = !DILocation(line: 270, column: 49, scope: !5936)
!5980 = !DILocation(line: 270, column: 45, scope: !5936)
!5981 = !DILocation(line: 270, column: 47, scope: !5936)
!5982 = !DILocation(line: 272, column: 5, scope: !5936)
!5983 = !DILocation(line: 273, column: 1, scope: !5936)
!5984 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !406, file: !406, line: 275, type: !5985, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !5987)
!5985 = !DISubroutineType(types: !5986)
!5986 = !{!5766, !61}
!5987 = !{!5988, !5989}
!5988 = !DILocalVariable(name: "address", arg: 1, scope: !5984, file: !406, line: 275, type: !61)
!5989 = !DILocalVariable(name: "irq_flag", scope: !5984, file: !406, line: 277, type: !61)
!5990 = !DILocation(line: 0, scope: !5984)
!5991 = !DILocation(line: 280, column: 17, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5984, file: !406, line: 280, column: 9)
!5993 = !DILocation(line: 280, column: 9, scope: !5984)
!5994 = !DILocation(line: 284, column: 16, scope: !5984)
!5995 = !DILocation(line: 287, column: 32, scope: !5984)
!5996 = !DILocation(line: 287, column: 21, scope: !5984)
!5997 = !DILocation(line: 288, column: 21, scope: !5984)
!5998 = !DILocation(line: 434, column: 3, scope: !5814, inlinedAt: !5999)
!5999 = distinct !DILocation(line: 291, column: 5, scope: !5984)
!6000 = !DILocation(line: 294, column: 5, scope: !5984)
!6001 = !DILocation(line: 296, column: 5, scope: !5984)
!6002 = !DILocation(line: 297, column: 1, scope: !5984)
!6003 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !406, file: !406, line: 299, type: !6004, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !6006)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{!5766, !61, !61}
!6006 = !{!6007, !6008, !6009, !6010}
!6007 = !DILocalVariable(name: "address", arg: 1, scope: !6003, file: !406, line: 299, type: !61)
!6008 = !DILocalVariable(name: "length", arg: 2, scope: !6003, file: !406, line: 299, type: !61)
!6009 = !DILocalVariable(name: "irq_flag", scope: !6003, file: !406, line: 301, type: !61)
!6010 = !DILocalVariable(name: "end_address", scope: !6003, file: !406, line: 302, type: !61)
!6011 = !DILocation(line: 0, scope: !6003)
!6012 = !DILocation(line: 302, column: 36, scope: !6003)
!6013 = !DILocation(line: 305, column: 47, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !6003, file: !406, line: 305, column: 9)
!6015 = !DILocation(line: 310, column: 16, scope: !6003)
!6016 = !DILocation(line: 313, column: 20, scope: !6003)
!6017 = !DILocation(line: 313, column: 5, scope: !6003)
!6018 = !DILocation(line: 314, column: 9, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6003, file: !406, line: 313, column: 35)
!6020 = !DILocation(line: 315, column: 17, scope: !6019)
!6021 = distinct !{!6021, !6017, !6022}
!6022 = !DILocation(line: 316, column: 5, scope: !6003)
!6023 = !DILocation(line: 434, column: 3, scope: !5814, inlinedAt: !6024)
!6024 = distinct !DILocation(line: 319, column: 5, scope: !6003)
!6025 = !DILocation(line: 322, column: 5, scope: !6003)
!6026 = !DILocation(line: 324, column: 5, scope: !6003)
!6027 = !DILocation(line: 325, column: 1, scope: !6003)
!6028 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !406, file: !406, line: 351, type: !5985, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !6029)
!6029 = !{!6030, !6031}
!6030 = !DILocalVariable(name: "address", arg: 1, scope: !6028, file: !406, line: 351, type: !61)
!6031 = !DILocalVariable(name: "irq_flag", scope: !6028, file: !406, line: 353, type: !61)
!6032 = !DILocation(line: 0, scope: !6028)
!6033 = !DILocation(line: 356, column: 17, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6028, file: !406, line: 356, column: 9)
!6035 = !DILocation(line: 356, column: 9, scope: !6028)
!6036 = !DILocation(line: 361, column: 16, scope: !6028)
!6037 = !DILocation(line: 364, column: 32, scope: !6028)
!6038 = !DILocation(line: 364, column: 21, scope: !6028)
!6039 = !DILocation(line: 365, column: 21, scope: !6028)
!6040 = !DILocation(line: 434, column: 3, scope: !5814, inlinedAt: !6041)
!6041 = distinct !DILocation(line: 368, column: 5, scope: !6028)
!6042 = !DILocation(line: 371, column: 5, scope: !6028)
!6043 = !DILocation(line: 373, column: 5, scope: !6028)
!6044 = !DILocation(line: 374, column: 1, scope: !6028)
!6045 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !406, file: !406, line: 376, type: !6004, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !6046)
!6046 = !{!6047, !6048, !6049, !6050}
!6047 = !DILocalVariable(name: "address", arg: 1, scope: !6045, file: !406, line: 376, type: !61)
!6048 = !DILocalVariable(name: "length", arg: 2, scope: !6045, file: !406, line: 376, type: !61)
!6049 = !DILocalVariable(name: "irq_flag", scope: !6045, file: !406, line: 378, type: !61)
!6050 = !DILocalVariable(name: "end_address", scope: !6045, file: !406, line: 379, type: !61)
!6051 = !DILocation(line: 0, scope: !6045)
!6052 = !DILocation(line: 379, column: 36, scope: !6045)
!6053 = !DILocation(line: 382, column: 47, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6045, file: !406, line: 382, column: 9)
!6055 = !DILocation(line: 387, column: 16, scope: !6045)
!6056 = !DILocation(line: 390, column: 20, scope: !6045)
!6057 = !DILocation(line: 390, column: 5, scope: !6045)
!6058 = !DILocation(line: 391, column: 9, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6045, file: !406, line: 390, column: 35)
!6060 = !DILocation(line: 392, column: 17, scope: !6059)
!6061 = distinct !{!6061, !6057, !6062}
!6062 = !DILocation(line: 393, column: 5, scope: !6045)
!6063 = !DILocation(line: 434, column: 3, scope: !5814, inlinedAt: !6064)
!6064 = distinct !DILocation(line: 396, column: 5, scope: !6045)
!6065 = !DILocation(line: 399, column: 5, scope: !6045)
!6066 = !DILocation(line: 401, column: 5, scope: !6045)
!6067 = !DILocation(line: 402, column: 1, scope: !6045)
!6068 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !406, file: !406, line: 404, type: !5764, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !6069)
!6069 = !{!6070}
!6070 = !DILocalVariable(name: "irq_flag", scope: !6068, file: !406, line: 406, type: !61)
!6071 = !DILocation(line: 409, column: 16, scope: !6068)
!6072 = !DILocation(line: 0, scope: !6068)
!6073 = !DILocation(line: 412, column: 21, scope: !6068)
!6074 = !DILocation(line: 413, column: 21, scope: !6068)
!6075 = !DILocation(line: 434, column: 3, scope: !5814, inlinedAt: !6076)
!6076 = distinct !DILocation(line: 416, column: 5, scope: !6068)
!6077 = !DILocation(line: 419, column: 5, scope: !6068)
!6078 = !DILocation(line: 421, column: 5, scope: !6068)
!6079 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !406, file: !406, line: 424, type: !6080, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !405, retainedNodes: !6082)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{!69, !61}
!6082 = !{!6083, !6084}
!6083 = !DILocalVariable(name: "address", arg: 1, scope: !6079, file: !406, line: 424, type: !61)
!6084 = !DILocalVariable(name: "region", scope: !6079, file: !406, line: 426, type: !5769)
!6085 = !DILocation(line: 0, scope: !6079)
!6086 = !DILocation(line: 429, column: 18, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6079, file: !406, line: 429, column: 9)
!6088 = !DILocation(line: 429, column: 28, scope: !6087)
!6089 = !DILocation(line: 429, column: 9, scope: !6079)
!6090 = !DILocation(line: 435, column: 20, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !406, line: 435, column: 13)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !406, line: 433, column: 81)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !406, line: 433, column: 5)
!6094 = distinct !DILexicalBlock(scope: !6079, file: !406, line: 433, column: 5)
!6095 = !DILocation(line: 435, column: 41, scope: !6091)
!6096 = !DILocation(line: 435, column: 36, scope: !6091)
!6097 = !DILocation(line: 435, column: 13, scope: !6092)
!6098 = !DILocation(line: 436, column: 30, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6100, file: !406, line: 436, column: 17)
!6100 = distinct !DILexicalBlock(scope: !6091, file: !406, line: 435, column: 53)
!6101 = !DILocation(line: 436, column: 59, scope: !6099)
!6102 = !DILocation(line: 436, column: 26, scope: !6099)
!6103 = !DILocation(line: 436, column: 85, scope: !6099)
!6104 = !DILocation(line: 436, column: 99, scope: !6099)
!6105 = !DILocation(line: 436, column: 97, scope: !6099)
!6106 = !DILocation(line: 436, column: 17, scope: !6100)
!6107 = !DILocation(line: 433, column: 77, scope: !6093)
!6108 = !DILocation(line: 433, column: 46, scope: !6093)
!6109 = !DILocation(line: 433, column: 5, scope: !6094)
!6110 = distinct !{!6110, !6109, !6111}
!6111 = !DILocation(line: 440, column: 5, scope: !6094)
!6112 = !DILocation(line: 442, column: 1, scope: !6079)
!6113 = distinct !DISubprogram(name: "hal_nvic_init", scope: !542, file: !542, line: 60, type: !6114, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !1387)
!6114 = !DISubroutineType(types: !6115)
!6115 = !{!6116}
!6116 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !545, line: 158, baseType: !544)
!6117 = !DILocation(line: 62, column: 5, scope: !6113)
!6118 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !542, file: !542, line: 65, type: !6119, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6121)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!6116, !210}
!6121 = !{!6122, !6123}
!6122 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6118, file: !542, line: 65, type: !210)
!6123 = !DILocalVariable(name: "status", scope: !6118, file: !542, line: 67, type: !6116)
!6124 = !DILocation(line: 0, scope: !6118)
!6125 = !DILocation(line: 69, column: 40, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6118, file: !542, line: 69, column: 9)
!6127 = !DILocation(line: 73, column: 9, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6126, file: !542, line: 72, column: 12)
!6129 = !DILocation(line: 77, column: 5, scope: !6118)
!6130 = !DILocation(line: 78, column: 1, scope: !6118)
!6131 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !557, file: !557, line: 1494, type: !6132, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6134)
!6132 = !DISubroutineType(types: !6133)
!6133 = !{null, !140}
!6134 = !{!6135}
!6135 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6131, file: !557, line: 1494, type: !140)
!6136 = !DILocation(line: 0, scope: !6131)
!6137 = !DILocation(line: 1497, column: 91, scope: !6131)
!6138 = !DILocation(line: 1497, column: 61, scope: !6131)
!6139 = !DILocation(line: 1497, column: 40, scope: !6131)
!6140 = !DILocation(line: 1497, column: 3, scope: !6131)
!6141 = !DILocation(line: 1497, column: 46, scope: !6131)
!6142 = !DILocation(line: 1498, column: 1, scope: !6131)
!6143 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !542, file: !542, line: 80, type: !6119, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6144)
!6144 = !{!6145, !6146}
!6145 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6143, file: !542, line: 80, type: !210)
!6146 = !DILocalVariable(name: "status", scope: !6143, file: !542, line: 82, type: !6116)
!6147 = !DILocation(line: 0, scope: !6143)
!6148 = !DILocation(line: 84, column: 40, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6143, file: !542, line: 84, column: 9)
!6150 = !DILocation(line: 88, column: 9, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6149, file: !542, line: 87, column: 12)
!6152 = !DILocation(line: 92, column: 5, scope: !6143)
!6153 = !DILocation(line: 93, column: 1, scope: !6143)
!6154 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !557, file: !557, line: 1507, type: !6132, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6155)
!6155 = !{!6156}
!6156 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6154, file: !557, line: 1507, type: !140)
!6157 = !DILocation(line: 0, scope: !6154)
!6158 = !DILocation(line: 1509, column: 65, scope: !6154)
!6159 = !DILocation(line: 1509, column: 44, scope: !6154)
!6160 = !DILocation(line: 1509, column: 32, scope: !6154)
!6161 = !DILocation(line: 1509, column: 3, scope: !6154)
!6162 = !DILocation(line: 1509, column: 39, scope: !6154)
!6163 = !DILocation(line: 1510, column: 1, scope: !6154)
!6164 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !542, file: !542, line: 95, type: !6165, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6167)
!6165 = !DISubroutineType(types: !6166)
!6166 = !{!61, !210}
!6167 = !{!6168, !6169}
!6168 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6164, file: !542, line: 95, type: !210)
!6169 = !DILocalVariable(name: "ret", scope: !6164, file: !542, line: 97, type: !61)
!6170 = !DILocation(line: 0, scope: !6164)
!6171 = !DILocation(line: 99, column: 40, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6164, file: !542, line: 99, column: 9)
!6173 = !DILocation(line: 102, column: 15, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6172, file: !542, line: 101, column: 12)
!6175 = !DILocation(line: 105, column: 5, scope: !6164)
!6176 = !DILocation(line: 106, column: 1, scope: !6164)
!6177 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !557, file: !557, line: 1523, type: !6178, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6180)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{!61, !140}
!6180 = !{!6181}
!6181 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6177, file: !557, line: 1523, type: !140)
!6182 = !DILocation(line: 0, scope: !6177)
!6183 = !DILocation(line: 1525, column: 51, scope: !6177)
!6184 = !DILocation(line: 1525, column: 23, scope: !6177)
!6185 = !DILocation(line: 1525, column: 83, scope: !6177)
!6186 = !DILocation(line: 1525, column: 22, scope: !6177)
!6187 = !DILocation(line: 1525, column: 3, scope: !6177)
!6188 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !542, file: !542, line: 108, type: !6119, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6189)
!6189 = !{!6190, !6191}
!6190 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6188, file: !542, line: 108, type: !210)
!6191 = !DILocalVariable(name: "status", scope: !6188, file: !542, line: 110, type: !6116)
!6192 = !DILocation(line: 0, scope: !6188)
!6193 = !DILocation(line: 112, column: 40, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6188, file: !542, line: 112, column: 9)
!6195 = !DILocation(line: 116, column: 9, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6194, file: !542, line: 115, column: 12)
!6197 = !DILocation(line: 120, column: 5, scope: !6188)
!6198 = !DILocation(line: 121, column: 1, scope: !6188)
!6199 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !557, file: !557, line: 1535, type: !6132, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6200)
!6200 = !{!6201}
!6201 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6199, file: !557, line: 1535, type: !140)
!6202 = !DILocation(line: 0, scope: !6199)
!6203 = !DILocation(line: 1537, column: 65, scope: !6199)
!6204 = !DILocation(line: 1537, column: 44, scope: !6199)
!6205 = !DILocation(line: 1537, column: 32, scope: !6199)
!6206 = !DILocation(line: 1537, column: 3, scope: !6199)
!6207 = !DILocation(line: 1537, column: 39, scope: !6199)
!6208 = !DILocation(line: 1538, column: 1, scope: !6199)
!6209 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !542, file: !542, line: 123, type: !6119, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6210)
!6210 = !{!6211, !6212}
!6211 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6209, file: !542, line: 123, type: !210)
!6212 = !DILocalVariable(name: "status", scope: !6209, file: !542, line: 125, type: !6116)
!6213 = !DILocation(line: 0, scope: !6209)
!6214 = !DILocation(line: 127, column: 40, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6209, file: !542, line: 127, column: 9)
!6216 = !DILocation(line: 131, column: 9, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6215, file: !542, line: 130, column: 12)
!6218 = !DILocation(line: 135, column: 5, scope: !6209)
!6219 = !DILocation(line: 136, column: 1, scope: !6209)
!6220 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !557, file: !557, line: 1547, type: !6132, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6221)
!6221 = !{!6222}
!6222 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6220, file: !557, line: 1547, type: !140)
!6223 = !DILocation(line: 0, scope: !6220)
!6224 = !DILocation(line: 1549, column: 65, scope: !6220)
!6225 = !DILocation(line: 1549, column: 44, scope: !6220)
!6226 = !DILocation(line: 1549, column: 32, scope: !6220)
!6227 = !DILocation(line: 1549, column: 3, scope: !6220)
!6228 = !DILocation(line: 1549, column: 39, scope: !6220)
!6229 = !DILocation(line: 1550, column: 1, scope: !6220)
!6230 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !542, file: !542, line: 138, type: !6231, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6233)
!6231 = !DISubroutineType(types: !6232)
!6232 = !{!6116, !210, !61}
!6233 = !{!6234, !6235, !6236}
!6234 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6230, file: !542, line: 138, type: !210)
!6235 = !DILocalVariable(name: "priority", arg: 2, scope: !6230, file: !542, line: 138, type: !61)
!6236 = !DILocalVariable(name: "status", scope: !6230, file: !542, line: 140, type: !6116)
!6237 = !DILocation(line: 0, scope: !6230)
!6238 = !DILocation(line: 142, column: 40, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6230, file: !542, line: 142, column: 9)
!6240 = !DILocation(line: 146, column: 9, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6239, file: !542, line: 145, column: 12)
!6242 = !DILocation(line: 150, column: 5, scope: !6230)
!6243 = !DILocation(line: 151, column: 1, scope: !6230)
!6244 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !557, file: !557, line: 1577, type: !6245, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6247)
!6245 = !DISubroutineType(types: !6246)
!6246 = !{null, !140, !61}
!6247 = !{!6248, !6249}
!6248 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6244, file: !557, line: 1577, type: !140)
!6249 = !DILocalVariable(name: "priority", arg: 2, scope: !6244, file: !557, line: 1577, type: !61)
!6250 = !DILocation(line: 0, scope: !6244)
!6251 = !DILocation(line: 1582, column: 34, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !557, line: 1581, column: 8)
!6253 = distinct !DILexicalBlock(scope: !6244, file: !557, line: 1579, column: 6)
!6254 = !DILocation(line: 1582, column: 5, scope: !6252)
!6255 = !DILocation(line: 1582, column: 32, scope: !6252)
!6256 = !DILocation(line: 1583, column: 1, scope: !6244)
!6257 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !542, file: !542, line: 153, type: !6165, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6258)
!6258 = !{!6259, !6260}
!6259 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6257, file: !542, line: 153, type: !210)
!6260 = !DILocalVariable(name: "ret", scope: !6257, file: !542, line: 155, type: !61)
!6261 = !DILocation(line: 0, scope: !6257)
!6262 = !DILocation(line: 157, column: 40, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6257, file: !542, line: 157, column: 9)
!6264 = !DILocation(line: 160, column: 15, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6263, file: !542, line: 159, column: 12)
!6266 = !DILocation(line: 163, column: 5, scope: !6257)
!6267 = !DILocation(line: 164, column: 1, scope: !6257)
!6268 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !557, file: !557, line: 1597, type: !6178, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6269)
!6269 = !{!6270}
!6270 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6268, file: !557, line: 1597, type: !140)
!6271 = !DILocation(line: 0, scope: !6268)
!6272 = !DILocation(line: 1603, column: 23, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6274, file: !557, line: 1602, column: 8)
!6274 = distinct !DILexicalBlock(scope: !6268, file: !557, line: 1600, column: 6)
!6275 = !DILocation(line: 1603, column: 60, scope: !6273)
!6276 = !DILocation(line: 1604, column: 1, scope: !6268)
!6277 = distinct !DISubprogram(name: "isrC_main", scope: !542, file: !542, line: 178, type: !6114, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6278)
!6278 = !{!6279, !6280}
!6279 = !DILocalVariable(name: "status", scope: !6277, file: !542, line: 180, type: !6116)
!6280 = !DILocalVariable(name: "irq_number", scope: !6277, file: !542, line: 181, type: !210)
!6281 = !DILocation(line: 0, scope: !6277)
!6282 = !DILocation(line: 185, column: 5, scope: !6277)
!6283 = !DILocation(line: 188, column: 34, scope: !6277)
!6284 = !DILocation(line: 189, column: 24, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6277, file: !542, line: 189, column: 9)
!6286 = !DILocation(line: 192, column: 48, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6285, file: !542, line: 192, column: 16)
!6288 = !DILocation(line: 192, column: 62, scope: !6287)
!6289 = !DILocation(line: 192, column: 16, scope: !6285)
!6290 = !DILocation(line: 194, column: 9, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6287, file: !542, line: 192, column: 71)
!6292 = !DILocation(line: 195, column: 9, scope: !6291)
!6293 = !DILocation(line: 197, column: 55, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6287, file: !542, line: 196, column: 12)
!6295 = !DILocation(line: 197, column: 41, scope: !6294)
!6296 = !DILocation(line: 197, column: 53, scope: !6294)
!6297 = !DILocation(line: 198, column: 41, scope: !6294)
!6298 = !DILocation(line: 198, column: 9, scope: !6294)
!6299 = !DILocation(line: 202, column: 5, scope: !6277)
!6300 = !DILocation(line: 203, column: 1, scope: !6277)
!6301 = distinct !DISubprogram(name: "get_current_irq", scope: !542, file: !542, line: 166, type: !1368, scopeLine: 167, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6302)
!6302 = !{!6303}
!6303 = !DILocalVariable(name: "irq_num", scope: !6301, file: !542, line: 168, type: !61)
!6304 = !DILocation(line: 168, column: 31, scope: !6301)
!6305 = !DILocation(line: 168, column: 36, scope: !6301)
!6306 = !DILocation(line: 0, scope: !6301)
!6307 = !DILocation(line: 169, column: 21, scope: !6301)
!6308 = !DILocation(line: 169, column: 5, scope: !6301)
!6309 = distinct !DISubprogram(name: "get_pending_irq", scope: !542, file: !542, line: 55, type: !1368, scopeLine: 56, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !1387)
!6310 = !DILocation(line: 57, column: 19, scope: !6309)
!6311 = !DILocation(line: 57, column: 51, scope: !6309)
!6312 = !DILocation(line: 57, column: 5, scope: !6309)
!6313 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !542, file: !542, line: 205, type: !6314, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6317)
!6314 = !DISubroutineType(types: !6315)
!6315 = !{!6116, !210, !6316}
!6316 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !545, line: 175, baseType: !625)
!6317 = !{!6318, !6319, !6320}
!6318 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6313, file: !542, line: 205, type: !210)
!6319 = !DILocalVariable(name: "callback", arg: 2, scope: !6313, file: !542, line: 205, type: !6316)
!6320 = !DILocalVariable(name: "mask", scope: !6313, file: !542, line: 207, type: !61)
!6321 = !DILocation(line: 0, scope: !6313)
!6322 = !DILocation(line: 209, column: 24, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6313, file: !542, line: 209, column: 9)
!6324 = !DILocation(line: 213, column: 12, scope: !6313)
!6325 = !DILocation(line: 214, column: 5, scope: !6313)
!6326 = !DILocation(line: 215, column: 37, scope: !6313)
!6327 = !DILocation(line: 215, column: 51, scope: !6313)
!6328 = !DILocation(line: 216, column: 37, scope: !6313)
!6329 = !DILocation(line: 216, column: 49, scope: !6313)
!6330 = !DILocation(line: 217, column: 5, scope: !6313)
!6331 = !DILocation(line: 219, column: 5, scope: !6313)
!6332 = !DILocation(line: 220, column: 1, scope: !6313)
!6333 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !542, file: !542, line: 222, type: !6334, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6336)
!6334 = !DISubroutineType(types: !6335)
!6335 = !{!6116, !5321}
!6336 = !{!6337}
!6337 = !DILocalVariable(name: "mask", arg: 1, scope: !6333, file: !542, line: 222, type: !5321)
!6338 = !DILocation(line: 0, scope: !6333)
!6339 = !DILocation(line: 224, column: 13, scope: !6333)
!6340 = !DILocation(line: 224, column: 11, scope: !6333)
!6341 = !DILocation(line: 225, column: 5, scope: !6333)
!6342 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !542, file: !542, line: 228, type: !6343, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !541, retainedNodes: !6345)
!6343 = !DISubroutineType(types: !6344)
!6344 = !{!6116, !61}
!6345 = !{!6346}
!6346 = !DILocalVariable(name: "mask", arg: 1, scope: !6342, file: !542, line: 228, type: !61)
!6347 = !DILocation(line: 0, scope: !6342)
!6348 = !DILocation(line: 230, column: 5, scope: !6342)
!6349 = !DILocation(line: 231, column: 5, scope: !6342)
!6350 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !1268, file: !1268, line: 50, type: !6351, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6355)
!6351 = !DISubroutineType(types: !6352)
!6352 = !{!6353, !6354, !54}
!6353 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !1271, line: 238, baseType: !1270)
!6354 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !29, line: 281, baseType: !1277)
!6355 = !{!6356, !6357, !6358}
!6356 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6350, file: !1268, line: 50, type: !6354)
!6357 = !DILocalVariable(name: "function_index", arg: 2, scope: !6350, file: !1268, line: 50, type: !54)
!6358 = !DILocalVariable(name: "ret_value", scope: !6350, file: !1268, line: 52, type: !553)
!6359 = !DILocation(line: 0, scope: !6350)
!6360 = !DILocation(line: 53, column: 18, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6350, file: !1268, line: 53, column: 9)
!6362 = !DILocation(line: 53, column: 9, scope: !6350)
!6363 = !DILocation(line: 57, column: 24, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6350, file: !1268, line: 57, column: 9)
!6365 = !DILocation(line: 57, column: 9, scope: !6350)
!6366 = !DILocation(line: 57, column: 9, scope: !6364)
!6367 = !DILocation(line: 60, column: 17, scope: !6350)
!6368 = !DILocation(line: 61, column: 12, scope: !6350)
!6369 = !DILocation(line: 61, column: 5, scope: !6350)
!6370 = !DILocation(line: 62, column: 1, scope: !6350)
!6371 = distinct !DISubprogram(name: "hal_gpio_init", scope: !1268, file: !1268, line: 64, type: !6372, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6375)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!6374, !6354}
!6374 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !1271, line: 229, baseType: !1308)
!6375 = !{!6376}
!6376 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6371, file: !1268, line: 64, type: !6354)
!6377 = !DILocation(line: 0, scope: !6371)
!6378 = !DILocation(line: 66, column: 5, scope: !6371)
!6379 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !1268, file: !1268, line: 69, type: !6372, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6380)
!6380 = !{!6381}
!6381 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6379, file: !1268, line: 69, type: !6354)
!6382 = !DILocation(line: 0, scope: !6379)
!6383 = !DILocation(line: 71, column: 5, scope: !6379)
!6384 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !1268, file: !1268, line: 74, type: !6385, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6388)
!6385 = !DISubroutineType(types: !6386)
!6386 = !{!6374, !6354, !6387}
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 32)
!6388 = !{!6389, !6390, !6391}
!6389 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6384, file: !1268, line: 74, type: !6354)
!6390 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !6384, file: !1268, line: 74, type: !6387)
!6391 = !DILocalVariable(name: "status", scope: !6384, file: !1268, line: 76, type: !6392)
!6392 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_status", file: !1329, line: 67, baseType: !6393)
!6393 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1329, line: 62, size: 64, elements: !6394)
!6394 = !{!6395, !6396, !6397, !6398}
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PIN", scope: !6393, file: !1329, line: 63, baseType: !61, size: 32)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OUTEN", scope: !6393, file: !1329, line: 64, baseType: !54, size: 8, offset: 32)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "GPI_DIN", scope: !6393, file: !1329, line: 65, baseType: !54, size: 8, offset: 40)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "GPO_DOUT", scope: !6393, file: !1329, line: 66, baseType: !54, size: 8, offset: 48)
!6399 = !DILocation(line: 0, scope: !6384)
!6400 = !DILocation(line: 77, column: 14, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6384, file: !1268, line: 77, column: 9)
!6402 = !DILocation(line: 77, column: 9, scope: !6384)
!6403 = !DILocation(line: 81, column: 18, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6384, file: !1268, line: 81, column: 9)
!6405 = !DILocation(line: 81, column: 9, scope: !6384)
!6406 = !DILocation(line: 85, column: 14, scope: !6384)
!6407 = !DILocation(line: 86, column: 18, scope: !6384)
!6408 = !DILocation(line: 86, column: 16, scope: !6384)
!6409 = !DILocation(line: 87, column: 5, scope: !6384)
!6410 = !DILocation(line: 88, column: 1, scope: !6384)
!6411 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !1268, file: !1268, line: 90, type: !6412, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6414)
!6412 = !DISubroutineType(types: !6413)
!6413 = !{!6374, !6354, !1335}
!6414 = !{!6415, !6416, !6417}
!6415 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6411, file: !1268, line: 90, type: !6354)
!6416 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !6411, file: !1268, line: 90, type: !1335)
!6417 = !DILocalVariable(name: "ret_value", scope: !6411, file: !1268, line: 92, type: !553)
!6418 = !DILocation(line: 0, scope: !6411)
!6419 = !DILocation(line: 93, column: 18, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6411, file: !1268, line: 93, column: 9)
!6421 = !DILocation(line: 93, column: 9, scope: !6411)
!6422 = !DILocation(line: 97, column: 60, scope: !6411)
!6423 = !DILocation(line: 97, column: 17, scope: !6411)
!6424 = !DILocation(line: 98, column: 12, scope: !6411)
!6425 = !DILocation(line: 98, column: 5, scope: !6411)
!6426 = !DILocation(line: 99, column: 1, scope: !6411)
!6427 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !1268, file: !1268, line: 101, type: !6385, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6428)
!6428 = !{!6429, !6430, !6431}
!6429 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6427, file: !1268, line: 101, type: !6354)
!6430 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !6427, file: !1268, line: 101, type: !6387)
!6431 = !DILocalVariable(name: "status", scope: !6427, file: !1268, line: 103, type: !6392)
!6432 = !DILocation(line: 0, scope: !6427)
!6433 = !DILocation(line: 104, column: 18, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6427, file: !1268, line: 104, column: 9)
!6435 = !DILocation(line: 104, column: 9, scope: !6427)
!6436 = !DILocation(line: 108, column: 14, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6427, file: !1268, line: 108, column: 9)
!6438 = !DILocation(line: 108, column: 9, scope: !6427)
!6439 = !DILocation(line: 112, column: 14, scope: !6427)
!6440 = !DILocation(line: 113, column: 18, scope: !6427)
!6441 = !DILocation(line: 113, column: 16, scope: !6427)
!6442 = !DILocation(line: 114, column: 5, scope: !6427)
!6443 = !DILocation(line: 115, column: 1, scope: !6427)
!6444 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !1268, file: !1268, line: 117, type: !6445, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6448)
!6445 = !DISubroutineType(types: !6446)
!6446 = !{!6374, !6354, !6447}
!6447 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !1271, line: 213, baseType: !1318)
!6448 = !{!6449, !6450, !6451}
!6449 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6444, file: !1268, line: 117, type: !6354)
!6450 = !DILocalVariable(name: "direction", arg: 2, scope: !6444, file: !1268, line: 117, type: !6447)
!6451 = !DILocalVariable(name: "ret_value", scope: !6444, file: !1268, line: 119, type: !553)
!6452 = !DILocation(line: 0, scope: !6444)
!6453 = !DILocation(line: 120, column: 18, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6444, file: !1268, line: 120, column: 9)
!6455 = !DILocation(line: 120, column: 9, scope: !6444)
!6456 = !DILocation(line: 123, column: 17, scope: !6444)
!6457 = !DILocation(line: 125, column: 12, scope: !6444)
!6458 = !DILocation(line: 125, column: 5, scope: !6444)
!6459 = !DILocation(line: 126, column: 1, scope: !6444)
!6460 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !1268, file: !1268, line: 128, type: !6461, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6464)
!6461 = !DISubroutineType(types: !6462)
!6462 = !{!6374, !6354, !6463}
!6463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6447, size: 32)
!6464 = !{!6465, !6466, !6467}
!6465 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6460, file: !1268, line: 128, type: !6354)
!6466 = !DILocalVariable(name: "direction", arg: 2, scope: !6460, file: !1268, line: 128, type: !6463)
!6467 = !DILocalVariable(name: "status", scope: !6460, file: !1268, line: 131, type: !6392)
!6468 = !DILocation(line: 0, scope: !6460)
!6469 = !DILocation(line: 132, column: 18, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6460, file: !1268, line: 132, column: 9)
!6471 = !DILocation(line: 132, column: 9, scope: !6460)
!6472 = !DILocation(line: 136, column: 14, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6460, file: !1268, line: 136, column: 9)
!6474 = !DILocation(line: 136, column: 9, scope: !6460)
!6475 = !DILocation(line: 140, column: 14, scope: !6460)
!6476 = !DILocation(line: 141, column: 18, scope: !6460)
!6477 = !DILocation(line: 141, column: 16, scope: !6460)
!6478 = !DILocation(line: 142, column: 5, scope: !6460)
!6479 = !DILocation(line: 143, column: 1, scope: !6460)
!6480 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !1268, file: !1268, line: 146, type: !6372, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6481)
!6481 = !{!6482, !6483}
!6482 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6480, file: !1268, line: 146, type: !6354)
!6483 = !DILocalVariable(name: "status", scope: !6480, file: !1268, line: 148, type: !6392)
!6484 = !DILocation(line: 0, scope: !6480)
!6485 = !DILocation(line: 149, column: 18, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6480, file: !1268, line: 149, column: 9)
!6487 = !DILocation(line: 149, column: 9, scope: !6480)
!6488 = !DILocation(line: 153, column: 14, scope: !6480)
!6489 = !DILocation(line: 154, column: 76, scope: !6480)
!6490 = !DILocation(line: 154, column: 12, scope: !6480)
!6491 = !DILocation(line: 154, column: 5, scope: !6480)
!6492 = !DILocation(line: 155, column: 1, scope: !6480)
!6493 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !1268, file: !1268, line: 157, type: !6372, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6494)
!6494 = !{!6495, !6496}
!6495 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6493, file: !1268, line: 157, type: !6354)
!6496 = !DILocalVariable(name: "ret_value", scope: !6493, file: !1268, line: 159, type: !553)
!6497 = !DILocation(line: 0, scope: !6493)
!6498 = !DILocation(line: 160, column: 18, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6493, file: !1268, line: 160, column: 9)
!6500 = !DILocation(line: 160, column: 9, scope: !6493)
!6501 = !DILocation(line: 164, column: 17, scope: !6493)
!6502 = !DILocation(line: 165, column: 19, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6493, file: !1268, line: 165, column: 9)
!6504 = !DILocation(line: 165, column: 9, scope: !6493)
!6505 = !DILocation(line: 168, column: 17, scope: !6493)
!6506 = !DILocation(line: 169, column: 12, scope: !6493)
!6507 = !DILocation(line: 169, column: 5, scope: !6493)
!6508 = !DILocation(line: 170, column: 1, scope: !6493)
!6509 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !1268, file: !1268, line: 172, type: !6372, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6510)
!6510 = !{!6511, !6512}
!6511 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6509, file: !1268, line: 172, type: !6354)
!6512 = !DILocalVariable(name: "ret_value", scope: !6509, file: !1268, line: 174, type: !553)
!6513 = !DILocation(line: 0, scope: !6509)
!6514 = !DILocation(line: 175, column: 18, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6509, file: !1268, line: 175, column: 9)
!6516 = !DILocation(line: 175, column: 9, scope: !6509)
!6517 = !DILocation(line: 179, column: 17, scope: !6509)
!6518 = !DILocation(line: 180, column: 19, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6509, file: !1268, line: 180, column: 9)
!6520 = !DILocation(line: 180, column: 9, scope: !6509)
!6521 = !DILocation(line: 183, column: 17, scope: !6509)
!6522 = !DILocation(line: 184, column: 12, scope: !6509)
!6523 = !DILocation(line: 184, column: 5, scope: !6509)
!6524 = !DILocation(line: 185, column: 1, scope: !6509)
!6525 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !1268, file: !1268, line: 187, type: !6372, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6526)
!6526 = !{!6527, !6528}
!6527 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6525, file: !1268, line: 187, type: !6354)
!6528 = !DILocalVariable(name: "ret_value", scope: !6525, file: !1268, line: 189, type: !553)
!6529 = !DILocation(line: 0, scope: !6525)
!6530 = !DILocation(line: 191, column: 18, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6525, file: !1268, line: 191, column: 9)
!6532 = !DILocation(line: 191, column: 9, scope: !6525)
!6533 = !DILocation(line: 195, column: 17, scope: !6525)
!6534 = !DILocation(line: 196, column: 12, scope: !6525)
!6535 = !DILocation(line: 196, column: 5, scope: !6525)
!6536 = !DILocation(line: 197, column: 1, scope: !6525)
!6537 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !1268, file: !1268, line: 200, type: !6538, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6540)
!6538 = !DISubroutineType(types: !6539)
!6539 = !{!6374, !6354, !1336}
!6540 = !{!6541, !6542, !6543}
!6541 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6537, file: !1268, line: 200, type: !6354)
!6542 = !DILocalVariable(name: "driving", arg: 2, scope: !6537, file: !1268, line: 200, type: !1336)
!6543 = !DILocalVariable(name: "ret_value", scope: !6537, file: !1268, line: 202, type: !553)
!6544 = !DILocation(line: 0, scope: !6537)
!6545 = !DILocation(line: 204, column: 18, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6537, file: !1268, line: 204, column: 9)
!6547 = !DILocation(line: 204, column: 9, scope: !6537)
!6548 = !DILocation(line: 208, column: 64, scope: !6537)
!6549 = !DILocation(line: 208, column: 17, scope: !6537)
!6550 = !DILocation(line: 210, column: 12, scope: !6537)
!6551 = !DILocation(line: 210, column: 5, scope: !6537)
!6552 = !DILocation(line: 211, column: 1, scope: !6537)
!6553 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !1268, file: !1268, line: 214, type: !6554, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1267, retainedNodes: !6557)
!6554 = !DISubroutineType(types: !6555)
!6555 = !{!6374, !6354, !6556}
!6556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!6557 = !{!6558, !6559, !6560, !6561}
!6558 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !6553, file: !1268, line: 214, type: !6354)
!6559 = !DILocalVariable(name: "driving", arg: 2, scope: !6553, file: !1268, line: 214, type: !6556)
!6560 = !DILocalVariable(name: "ret_value", scope: !6553, file: !1268, line: 216, type: !553)
!6561 = !DILocalVariable(name: "value", scope: !6553, file: !1268, line: 217, type: !54)
!6562 = !DILocation(line: 0, scope: !6553)
!6563 = !DILocation(line: 217, column: 5, scope: !6553)
!6564 = !DILocation(line: 219, column: 18, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6553, file: !1268, line: 219, column: 9)
!6566 = !DILocation(line: 219, column: 9, scope: !6553)
!6567 = !DILocation(line: 223, column: 17, scope: !6553)
!6568 = !DILocation(line: 225, column: 44, scope: !6553)
!6569 = !DILocation(line: 225, column: 16, scope: !6553)
!6570 = !DILocation(line: 225, column: 14, scope: !6553)
!6571 = !DILocation(line: 227, column: 12, scope: !6553)
!6572 = !DILocation(line: 227, column: 5, scope: !6553)
!6573 = !DILocation(line: 228, column: 1, scope: !6553)
!6574 = distinct !DISubprogram(name: "hal_gpt_init", scope: !634, file: !634, line: 82, type: !6575, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6578)
!6575 = !DISubroutineType(types: !6576)
!6576 = !{!1373, !6577}
!6577 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !29, line: 663, baseType: !636)
!6578 = !{!6579}
!6579 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6574, file: !634, line: 82, type: !6577)
!6580 = !DILocation(line: 0, scope: !6574)
!6581 = !DILocation(line: 84, column: 9, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6574, file: !634, line: 84, column: 9)
!6583 = !DILocation(line: 84, column: 33, scope: !6582)
!6584 = !DILocation(line: 84, column: 9, scope: !6574)
!6585 = !DILocation(line: 88, column: 9, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6574, file: !634, line: 88, column: 9)
!6587 = !DILocation(line: 88, column: 9, scope: !6574)
!6588 = !DILocation(line: 89, column: 9, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6586, file: !634, line: 88, column: 50)
!6590 = !DILocation(line: 90, column: 9, scope: !6589)
!6591 = !DILocation(line: 92, column: 12, scope: !6574)
!6592 = !DILocation(line: 92, column: 5, scope: !6574)
!6593 = !DILocation(line: 96, column: 43, scope: !6574)
!6594 = !DILocation(line: 98, column: 5, scope: !6574)
!6595 = !DILocation(line: 99, column: 1, scope: !6574)
!6596 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !634, file: !634, line: 63, type: !6597, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6599)
!6597 = !DISubroutineType(types: !6598)
!6598 = !{!69, !6577}
!6599 = !{!6600}
!6600 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6596, file: !634, line: 63, type: !6577)
!6601 = !DILocation(line: 0, scope: !6596)
!6602 = !DILocation(line: 65, column: 19, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6596, file: !634, line: 65, column: 9)
!6604 = !DILocation(line: 65, column: 34, scope: !6603)
!6605 = !DILocation(line: 70, column: 1, scope: !6596)
!6606 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !634, file: !634, line: 101, type: !6575, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6607)
!6607 = !{!6608}
!6608 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6606, file: !634, line: 101, type: !6577)
!6609 = !DILocation(line: 0, scope: !6606)
!6610 = !DILocation(line: 103, column: 9, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6606, file: !634, line: 103, column: 9)
!6612 = !DILocation(line: 103, column: 9, scope: !6606)
!6613 = !DILocation(line: 104, column: 9, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6611, file: !634, line: 103, column: 50)
!6615 = !DILocation(line: 105, column: 9, scope: !6614)
!6616 = !DILocation(line: 108, column: 9, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6606, file: !634, line: 108, column: 9)
!6618 = !DILocation(line: 108, column: 33, scope: !6617)
!6619 = !DILocation(line: 108, column: 48, scope: !6617)
!6620 = !DILocation(line: 108, column: 9, scope: !6606)
!6621 = !DILocation(line: 109, column: 9, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6617, file: !634, line: 108, column: 68)
!6623 = !DILocation(line: 110, column: 9, scope: !6622)
!6624 = !DILocation(line: 113, column: 12, scope: !6606)
!6625 = !DILocation(line: 113, column: 5, scope: !6606)
!6626 = !DILocation(line: 116, column: 29, scope: !6606)
!6627 = !DILocation(line: 116, column: 43, scope: !6606)
!6628 = !DILocation(line: 117, column: 5, scope: !6606)
!6629 = !DILocation(line: 118, column: 1, scope: !6606)
!6630 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !634, file: !634, line: 120, type: !6631, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6634)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{!1373, !6633, !5321}
!6633 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !29, line: 674, baseType: !28)
!6634 = !{!6635, !6636}
!6635 = !DILocalVariable(name: "clock_source", arg: 1, scope: !6630, file: !634, line: 120, type: !6633)
!6636 = !DILocalVariable(name: "count", arg: 2, scope: !6630, file: !634, line: 120, type: !5321)
!6637 = !DILocation(line: 0, scope: !6630)
!6638 = !DILocation(line: 122, column: 9, scope: !6630)
!6639 = !DILocation(line: 123, column: 50, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6641, file: !634, line: 123, column: 13)
!6641 = distinct !DILexicalBlock(scope: !6642, file: !634, line: 122, column: 51)
!6642 = distinct !DILexicalBlock(scope: !6630, file: !634, line: 122, column: 9)
!6643 = !DILocation(line: 123, column: 65, scope: !6640)
!6644 = !DILocation(line: 123, column: 13, scope: !6641)
!6645 = !DILocation(line: 124, column: 13, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6640, file: !634, line: 123, column: 86)
!6647 = !DILocation(line: 125, column: 9, scope: !6646)
!6648 = !DILocation(line: 126, column: 18, scope: !6641)
!6649 = !DILocation(line: 126, column: 16, scope: !6641)
!6650 = !DILocation(line: 127, column: 49, scope: !6641)
!6651 = !DILocation(line: 128, column: 5, scope: !6641)
!6652 = !DILocation(line: 129, column: 50, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !634, line: 129, column: 13)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !634, line: 128, column: 57)
!6655 = distinct !DILexicalBlock(scope: !6642, file: !634, line: 128, column: 16)
!6656 = !DILocation(line: 129, column: 65, scope: !6653)
!6657 = !DILocation(line: 129, column: 13, scope: !6654)
!6658 = !DILocation(line: 130, column: 13, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6653, file: !634, line: 129, column: 86)
!6660 = !DILocation(line: 131, column: 9, scope: !6659)
!6661 = !DILocation(line: 132, column: 18, scope: !6654)
!6662 = !DILocation(line: 132, column: 46, scope: !6654)
!6663 = !DILocation(line: 132, column: 65, scope: !6654)
!6664 = !DILocation(line: 132, column: 43, scope: !6654)
!6665 = !DILocation(line: 132, column: 16, scope: !6654)
!6666 = !DILocation(line: 133, column: 49, scope: !6654)
!6667 = !DILocation(line: 134, column: 5, scope: !6654)
!6668 = !DILocation(line: 135, column: 50, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !634, line: 135, column: 13)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !634, line: 134, column: 58)
!6671 = distinct !DILexicalBlock(scope: !6655, file: !634, line: 134, column: 16)
!6672 = !DILocation(line: 135, column: 65, scope: !6669)
!6673 = !DILocation(line: 135, column: 13, scope: !6670)
!6674 = !DILocation(line: 136, column: 13, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6669, file: !634, line: 135, column: 86)
!6676 = !DILocation(line: 137, column: 9, scope: !6675)
!6677 = !DILocation(line: 138, column: 18, scope: !6670)
!6678 = !DILocation(line: 138, column: 16, scope: !6670)
!6679 = !DILocation(line: 139, column: 49, scope: !6670)
!6680 = !DILocation(line: 141, column: 9, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6671, file: !634, line: 140, column: 11)
!6682 = !DILocation(line: 142, column: 9, scope: !6681)
!6683 = !DILocation(line: 146, column: 1, scope: !6630)
!6684 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !634, file: !634, line: 148, type: !6685, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6687)
!6685 = !DISubroutineType(types: !6686)
!6686 = !{!1373, !61, !61, !5321}
!6687 = !{!6688, !6689, !6690}
!6688 = !DILocalVariable(name: "start_count", arg: 1, scope: !6684, file: !634, line: 148, type: !61)
!6689 = !DILocalVariable(name: "end_count", arg: 2, scope: !6684, file: !634, line: 148, type: !61)
!6690 = !DILocalVariable(name: "duration_count", arg: 3, scope: !6684, file: !634, line: 148, type: !5321)
!6691 = !DILocation(line: 0, scope: !6684)
!6692 = !DILocation(line: 150, column: 24, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6684, file: !634, line: 150, column: 9)
!6694 = !DILocation(line: 150, column: 9, scope: !6684)
!6695 = !DILocation(line: 0, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6684, file: !634, line: 154, column: 9)
!6697 = !DILocation(line: 160, column: 5, scope: !6684)
!6698 = !DILocation(line: 161, column: 1, scope: !6684)
!6699 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !634, file: !634, line: 163, type: !6700, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6703)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{!1373, !6577, !6702}
!6702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 32)
!6703 = !{!6704, !6705}
!6704 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6699, file: !634, line: 163, type: !6577)
!6705 = !DILocalVariable(name: "running_status", arg: 2, scope: !6699, file: !634, line: 164, type: !6702)
!6706 = !DILocation(line: 0, scope: !6699)
!6707 = !DILocation(line: 166, column: 18, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6699, file: !634, line: 166, column: 9)
!6709 = !DILocation(line: 166, column: 9, scope: !6699)
!6710 = !DILocation(line: 167, column: 9, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6708, file: !634, line: 166, column: 34)
!6712 = !DILocation(line: 168, column: 9, scope: !6711)
!6713 = !DILocation(line: 170, column: 47, scope: !6699)
!6714 = !DILocation(line: 170, column: 21, scope: !6699)
!6715 = !DILocation(line: 171, column: 5, scope: !6699)
!6716 = !DILocation(line: 172, column: 1, scope: !6699)
!6717 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !634, file: !634, line: 174, type: !6718, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6720)
!6718 = !DISubroutineType(types: !6719)
!6719 = !{!1373, !6577, !664, !51}
!6720 = !{!6721, !6722, !6723}
!6721 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6717, file: !634, line: 174, type: !6577)
!6722 = !DILocalVariable(name: "callback", arg: 2, scope: !6717, file: !634, line: 175, type: !664)
!6723 = !DILocalVariable(name: "user_data", arg: 3, scope: !6717, file: !634, line: 176, type: !51)
!6724 = !DILocation(line: 0, scope: !6717)
!6725 = !DILocation(line: 178, column: 9, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6717, file: !634, line: 178, column: 9)
!6727 = !DILocation(line: 178, column: 9, scope: !6717)
!6728 = !DILocation(line: 179, column: 9, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6726, file: !634, line: 178, column: 50)
!6730 = !DILocation(line: 180, column: 9, scope: !6729)
!6731 = !DILocation(line: 182, column: 33, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6717, file: !634, line: 182, column: 9)
!6733 = !DILocation(line: 182, column: 47, scope: !6732)
!6734 = !DILocation(line: 182, column: 9, scope: !6717)
!6735 = !DILocation(line: 185, column: 18, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6717, file: !634, line: 185, column: 9)
!6737 = !DILocation(line: 185, column: 9, scope: !6717)
!6738 = !DILocation(line: 188, column: 46, scope: !6717)
!6739 = !DILocation(line: 188, column: 56, scope: !6717)
!6740 = !DILocation(line: 189, column: 46, scope: !6717)
!6741 = !DILocation(line: 189, column: 56, scope: !6717)
!6742 = !DILocation(line: 190, column: 5, scope: !6717)
!6743 = !DILocation(line: 191, column: 1, scope: !6717)
!6744 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !634, file: !634, line: 218, type: !6745, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6748)
!6745 = !DISubroutineType(types: !6746)
!6746 = !{!1373, !6577, !61, !6747}
!6747 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !21, line: 383, baseType: !647)
!6748 = !{!6749, !6750, !6751}
!6749 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6744, file: !634, line: 218, type: !6577)
!6750 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !6744, file: !634, line: 218, type: !61)
!6751 = !DILocalVariable(name: "timer_type", arg: 3, scope: !6744, file: !634, line: 218, type: !6747)
!6752 = !DILocation(line: 0, scope: !6744)
!6753 = !DILocation(line: 220, column: 9, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6744, file: !634, line: 220, column: 9)
!6755 = !DILocation(line: 220, column: 9, scope: !6744)
!6756 = !DILocation(line: 221, column: 9, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6754, file: !634, line: 220, column: 50)
!6758 = !DILocation(line: 222, column: 9, scope: !6757)
!6759 = !DILocation(line: 225, column: 33, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6744, file: !634, line: 225, column: 9)
!6761 = !DILocation(line: 225, column: 47, scope: !6760)
!6762 = !DILocation(line: 225, column: 9, scope: !6744)
!6763 = !DILocation(line: 229, column: 25, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6744, file: !634, line: 229, column: 9)
!6765 = !DILocation(line: 229, column: 9, scope: !6744)
!6766 = !DILocation(line: 234, column: 17, scope: !6744)
!6767 = !DILocation(line: 235, column: 17, scope: !6744)
!6768 = !DILocation(line: 236, column: 17, scope: !6744)
!6769 = !DILocation(line: 233, column: 5, scope: !6744)
!6770 = !DILocation(line: 237, column: 5, scope: !6744)
!6771 = !DILocation(line: 238, column: 29, scope: !6744)
!6772 = !DILocation(line: 238, column: 44, scope: !6744)
!6773 = !DILocation(line: 239, column: 5, scope: !6744)
!6774 = !DILocation(line: 240, column: 1, scope: !6744)
!6775 = distinct !DISubprogram(name: "hal_gpt_translate_timeout_time", scope: !634, file: !634, line: 72, type: !6776, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6778)
!6776 = !DISubroutineType(types: !6777)
!6777 = !{!61, !61}
!6778 = !{!6779}
!6779 = !DILocalVariable(name: "mili_seconds", arg: 1, scope: !6775, file: !634, line: 72, type: !61)
!6780 = !DILocation(line: 0, scope: !6775)
!6781 = !DILocation(line: 74, column: 37, scope: !6775)
!6782 = !DILocation(line: 74, column: 47, scope: !6775)
!6783 = !DILocation(line: 74, column: 63, scope: !6775)
!6784 = !DILocation(line: 74, column: 42, scope: !6775)
!6785 = !DILocation(line: 74, column: 73, scope: !6775)
!6786 = !DILocation(line: 74, column: 89, scope: !6775)
!6787 = !DILocation(line: 74, column: 68, scope: !6775)
!6788 = !DILocation(line: 74, column: 100, scope: !6775)
!6789 = !DILocation(line: 74, column: 116, scope: !6775)
!6790 = !DILocation(line: 74, column: 95, scope: !6775)
!6791 = !DILocation(line: 74, column: 5, scope: !6775)
!6792 = distinct !DISubprogram(name: "hal_gpt_translate_type", scope: !634, file: !634, line: 77, type: !6793, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6795)
!6793 = !DISubroutineType(types: !6794)
!6794 = !{!69, !6747}
!6795 = !{!6796}
!6796 = !DILocalVariable(name: "type", arg: 1, scope: !6792, file: !634, line: 77, type: !6747)
!6797 = !DILocation(line: 0, scope: !6792)
!6798 = !DILocation(line: 79, column: 38, scope: !6792)
!6799 = !DILocation(line: 79, column: 5, scope: !6792)
!6800 = distinct !DISubprogram(name: "hal_gpt_map_callback", scope: !634, file: !634, line: 213, type: !6801, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6804)
!6801 = !DISubroutineType(types: !6802)
!6802 = !{!6803, !6577}
!6803 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_internal_callback_t", file: !634, line: 211, baseType: !153)
!6804 = !{!6805}
!6805 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6800, file: !634, line: 213, type: !6577)
!6806 = !DILocation(line: 0, scope: !6800)
!6807 = !DILocation(line: 215, column: 23, scope: !6800)
!6808 = !DILocation(line: 215, column: 12, scope: !6800)
!6809 = !DILocation(line: 215, column: 5, scope: !6800)
!6810 = distinct !DISubprogram(name: "hal_gpt_callback0", scope: !634, file: !634, line: 193, type: !154, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6811)
!6811 = !{!6812}
!6812 = !DILocalVariable(name: "context", scope: !6810, file: !634, line: 195, type: !6813)
!6813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 32)
!6814 = !DILocation(line: 196, column: 26, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6810, file: !634, line: 196, column: 9)
!6816 = !DILocation(line: 196, column: 14, scope: !6815)
!6817 = !DILocation(line: 196, column: 9, scope: !6810)
!6818 = !DILocation(line: 197, column: 36, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6815, file: !634, line: 196, column: 36)
!6820 = !DILocation(line: 197, column: 9, scope: !6819)
!6821 = !DILocation(line: 198, column: 5, scope: !6819)
!6822 = !DILocation(line: 199, column: 45, scope: !6810)
!6823 = !DILocation(line: 200, column: 1, scope: !6810)
!6824 = distinct !DISubprogram(name: "hal_gpt_callback1", scope: !634, file: !634, line: 202, type: !154, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6825)
!6825 = !{!6826}
!6826 = !DILocalVariable(name: "context", scope: !6824, file: !634, line: 204, type: !6813)
!6827 = !DILocation(line: 205, column: 26, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6824, file: !634, line: 205, column: 9)
!6829 = !DILocation(line: 205, column: 14, scope: !6828)
!6830 = !DILocation(line: 205, column: 9, scope: !6824)
!6831 = !DILocation(line: 206, column: 36, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6828, file: !634, line: 205, column: 36)
!6833 = !DILocation(line: 206, column: 9, scope: !6832)
!6834 = !DILocation(line: 207, column: 5, scope: !6832)
!6835 = !DILocation(line: 208, column: 45, scope: !6824)
!6836 = !DILocation(line: 209, column: 1, scope: !6824)
!6837 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !634, file: !634, line: 242, type: !6575, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6838)
!6838 = !{!6839}
!6839 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !6837, file: !634, line: 242, type: !6577)
!6840 = !DILocation(line: 0, scope: !6837)
!6841 = !DILocation(line: 244, column: 9, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6837, file: !634, line: 244, column: 9)
!6843 = !DILocation(line: 244, column: 9, scope: !6837)
!6844 = !DILocation(line: 245, column: 9, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6842, file: !634, line: 244, column: 50)
!6846 = !DILocation(line: 246, column: 9, scope: !6845)
!6847 = !DILocation(line: 248, column: 5, scope: !6837)
!6848 = !DILocation(line: 249, column: 29, scope: !6837)
!6849 = !DILocation(line: 249, column: 44, scope: !6837)
!6850 = !DILocation(line: 250, column: 5, scope: !6837)
!6851 = !DILocation(line: 251, column: 1, scope: !6837)
!6852 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !634, file: !634, line: 253, type: !6853, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6855)
!6853 = !DISubroutineType(types: !6854)
!6854 = !{!1373, !61}
!6855 = !{!6856}
!6856 = !DILocalVariable(name: "ms", arg: 1, scope: !6852, file: !634, line: 253, type: !61)
!6857 = !DILocation(line: 0, scope: !6852)
!6858 = !DILocation(line: 255, column: 46, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6852, file: !634, line: 255, column: 9)
!6860 = !DILocation(line: 255, column: 61, scope: !6859)
!6861 = !DILocation(line: 255, column: 9, scope: !6852)
!6862 = !DILocation(line: 256, column: 9, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6859, file: !634, line: 255, column: 82)
!6864 = !DILocation(line: 257, column: 5, scope: !6863)
!6865 = !DILocation(line: 258, column: 5, scope: !6852)
!6866 = !DILocation(line: 259, column: 57, scope: !6852)
!6867 = !DILocation(line: 260, column: 5, scope: !6852)
!6868 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !634, file: !634, line: 264, type: !6853, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !633, retainedNodes: !6869)
!6869 = !{!6870}
!6870 = !DILocalVariable(name: "us", arg: 1, scope: !6868, file: !634, line: 264, type: !61)
!6871 = !DILocation(line: 0, scope: !6868)
!6872 = !DILocation(line: 266, column: 46, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6868, file: !634, line: 266, column: 9)
!6874 = !DILocation(line: 266, column: 61, scope: !6873)
!6875 = !DILocation(line: 266, column: 9, scope: !6868)
!6876 = !DILocation(line: 267, column: 9, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6873, file: !634, line: 266, column: 82)
!6878 = !DILocation(line: 268, column: 5, scope: !6877)
!6879 = !DILocation(line: 269, column: 5, scope: !6868)
!6880 = !DILocation(line: 270, column: 57, scope: !6868)
!6881 = !DILocation(line: 271, column: 5, scope: !6868)
!6882 = distinct !DISubprogram(name: "uart_send_handler", scope: !673, file: !673, line: 213, type: !5230, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !6883)
!6883 = !{!6884, !6885, !6886}
!6884 = !DILocalVariable(name: "u_port", arg: 1, scope: !6882, file: !673, line: 213, type: !5176)
!6885 = !DILocalVariable(name: "length", scope: !6882, file: !673, line: 215, type: !61)
!6886 = !DILocalVariable(name: "irq_status", scope: !6882, file: !673, line: 216, type: !61)
!6887 = !DILocation(line: 0, scope: !6882)
!6888 = !DILocation(line: 215, column: 5, scope: !6882)
!6889 = !DILocation(line: 216, column: 5, scope: !6882)
!6890 = !DILocation(line: 218, column: 9, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6882, file: !673, line: 218, column: 9)
!6892 = !DILocation(line: 218, column: 54, scope: !6891)
!6893 = !DILocation(line: 218, column: 9, scope: !6882)
!6894 = !DILocation(line: 219, column: 9, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6891, file: !673, line: 218, column: 64)
!6896 = !DILocation(line: 220, column: 9, scope: !6895)
!6897 = !DILocation(line: 221, column: 53, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6895, file: !673, line: 221, column: 13)
!6899 = !DILocation(line: 221, column: 78, scope: !6898)
!6900 = !DILocation(line: 221, column: 85, scope: !6898)
!6901 = !DILocation(line: 221, column: 13, scope: !6895)
!6902 = !DILocation(line: 222, column: 17, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !673, line: 222, column: 17)
!6904 = distinct !DILexicalBlock(scope: !6898, file: !673, line: 221, column: 91)
!6905 = !DILocation(line: 222, column: 17, scope: !6904)
!6906 = !DILocation(line: 223, column: 48, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6903, file: !673, line: 222, column: 58)
!6908 = !DILocation(line: 223, column: 17, scope: !6907)
!6909 = !DILocation(line: 224, column: 49, scope: !6907)
!6910 = !DILocation(line: 225, column: 13, scope: !6907)
!6911 = !DILocation(line: 227, column: 41, scope: !6895)
!6912 = !DILocation(line: 227, column: 9, scope: !6895)
!6913 = !DILocation(line: 228, column: 5, scope: !6895)
!6914 = !DILocation(line: 229, column: 54, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6891, file: !673, line: 228, column: 12)
!6916 = !DILocation(line: 231, column: 1, scope: !6882)
!6917 = distinct !DISubprogram(name: "hal_uart_init", scope: !673, file: !673, line: 234, type: !6918, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !6922)
!6918 = !DISubroutineType(types: !6919)
!6919 = !{!6920, !781, !6921}
!6920 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !676, line: 351, baseType: !675)
!6921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 32)
!6922 = !{!6923, !6924}
!6923 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6917, file: !673, line: 234, type: !781)
!6924 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6917, file: !673, line: 234, type: !6921)
!6925 = !DILocation(line: 0, scope: !6917)
!6926 = !DILocation(line: 236, column: 10, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6917, file: !673, line: 236, column: 9)
!6928 = !DILocation(line: 236, column: 9, scope: !6917)
!6929 = !DILocation(line: 239, column: 41, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6917, file: !673, line: 239, column: 9)
!6931 = !DILocation(line: 239, column: 9, scope: !6917)
!6932 = !DILocation(line: 242, column: 5, scope: !6917)
!6933 = !DILocation(line: 243, column: 45, scope: !6917)
!6934 = !DILocation(line: 243, column: 12, scope: !6917)
!6935 = !DILocation(line: 244, column: 12, scope: !6917)
!6936 = !DILocation(line: 243, column: 5, scope: !6917)
!6937 = !DILocation(line: 245, column: 58, scope: !6917)
!6938 = !DILocation(line: 246, column: 30, scope: !6917)
!6939 = !{i32 0, i32 2}
!6940 = !DILocation(line: 246, column: 5, scope: !6917)
!6941 = !DILocation(line: 247, column: 5, scope: !6917)
!6942 = !DILocation(line: 249, column: 31, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6917, file: !673, line: 249, column: 9)
!6944 = !DILocation(line: 249, column: 28, scope: !6943)
!6945 = !DILocation(line: 249, column: 9, scope: !6917)
!6946 = !DILocation(line: 254, column: 5, scope: !6917)
!6947 = !DILocation(line: 255, column: 5, scope: !6917)
!6948 = !DILocation(line: 255, column: 53, scope: !6917)
!6949 = !DILocation(line: 256, column: 5, scope: !6917)
!6950 = !DILocation(line: 256, column: 40, scope: !6917)
!6951 = !DILocation(line: 257, column: 82, scope: !6917)
!6952 = !DILocation(line: 257, column: 39, scope: !6917)
!6953 = !DILocation(line: 257, column: 5, scope: !6917)
!6954 = !DILocation(line: 257, column: 37, scope: !6917)
!6955 = !DILocation(line: 260, column: 5, scope: !6917)
!6956 = !DILocation(line: 261, column: 1, scope: !6917)
!6957 = distinct !DISubprogram(name: "hal_uart_is_config_valid", scope: !673, file: !673, line: 93, type: !6958, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !6962)
!6958 = !DISubroutineType(types: !6959)
!6959 = !{!69, !781, !6960}
!6960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6961, size: 32)
!6961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!6962 = !{!6963, !6964}
!6963 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6957, file: !673, line: 93, type: !781)
!6964 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6957, file: !673, line: 93, type: !6960)
!6965 = !DILocation(line: 0, scope: !6957)
!6966 = !DILocation(line: 95, column: 10, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6957, file: !673, line: 95, column: 9)
!6968 = !DILocation(line: 95, column: 9, scope: !6957)
!6969 = !DILocation(line: 101, column: 23, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6957, file: !673, line: 101, column: 9)
!6971 = !DILocation(line: 101, column: 32, scope: !6970)
!6972 = !DILocation(line: 101, column: 60, scope: !6970)
!6973 = !DILocation(line: 102, column: 27, scope: !6970)
!6974 = !DILocation(line: 102, column: 34, scope: !6970)
!6975 = !DILocation(line: 102, column: 58, scope: !6970)
!6976 = !DILocation(line: 103, column: 27, scope: !6970)
!6977 = !DILocation(line: 103, column: 36, scope: !6970)
!6978 = !DILocation(line: 103, column: 59, scope: !6970)
!6979 = !DILocation(line: 104, column: 27, scope: !6970)
!6980 = !DILocation(line: 104, column: 39, scope: !6970)
!6981 = !DILocation(line: 101, column: 9, scope: !6957)
!6982 = !DILocation(line: 109, column: 1, scope: !6957)
!6983 = distinct !DISubprogram(name: "hal_uart_translate_port", scope: !673, file: !673, line: 139, type: !6984, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !6986)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{!5176, !781}
!6986 = !{!6987}
!6987 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6983, file: !673, line: 139, type: !781)
!6988 = !DILocation(line: 0, scope: !6983)
!6989 = !DILocation(line: 141, column: 24, scope: !6983)
!6990 = !DILocation(line: 141, column: 12, scope: !6983)
!6991 = !DILocation(line: 141, column: 5, scope: !6983)
!6992 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !673, file: !673, line: 593, type: !6993, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !6995)
!6993 = !DISubroutineType(types: !6994)
!6994 = !{!6920, !781, !6960}
!6995 = !{!6996, !6997}
!6996 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6992, file: !673, line: 593, type: !781)
!6997 = !DILocalVariable(name: "config", arg: 2, scope: !6992, file: !673, line: 593, type: !6960)
!6998 = !DILocation(line: 0, scope: !6992)
!6999 = !DILocation(line: 595, column: 10, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6992, file: !673, line: 595, column: 9)
!7001 = !DILocation(line: 595, column: 9, scope: !6992)
!7002 = !DILocation(line: 598, column: 45, scope: !6992)
!7003 = !DILocation(line: 598, column: 12, scope: !6992)
!7004 = !DILocation(line: 598, column: 59, scope: !6992)
!7005 = !DILocation(line: 598, column: 5, scope: !6992)
!7006 = !DILocation(line: 599, column: 23, scope: !6992)
!7007 = !DILocation(line: 600, column: 59, scope: !6992)
!7008 = !DILocation(line: 600, column: 23, scope: !6992)
!7009 = !DILocation(line: 601, column: 62, scope: !6992)
!7010 = !DILocation(line: 601, column: 23, scope: !6992)
!7011 = !DILocation(line: 602, column: 57, scope: !6992)
!7012 = !DILocation(line: 602, column: 23, scope: !6992)
!7013 = !DILocation(line: 603, column: 58, scope: !6992)
!7014 = !DILocation(line: 603, column: 23, scope: !6992)
!7015 = !DILocation(line: 599, column: 5, scope: !6992)
!7016 = !DILocation(line: 604, column: 5, scope: !6992)
!7017 = !DILocation(line: 605, column: 1, scope: !6992)
!7018 = distinct !DISubprogram(name: "hal_uart_translate_baudrate", scope: !673, file: !673, line: 145, type: !7019, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7021)
!7019 = !DISubroutineType(types: !7020)
!7020 = !{!61, !738}
!7021 = !{!7022, !7023}
!7022 = !DILocalVariable(name: "bandrate", arg: 1, scope: !7018, file: !673, line: 145, type: !738)
!7023 = !DILocalVariable(name: "baudrate_tbl", scope: !7018, file: !673, line: 147, type: !7024)
!7024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 416, elements: !340)
!7025 = !DILocation(line: 0, scope: !7018)
!7026 = !DILocation(line: 147, column: 14, scope: !7018)
!7027 = !DILocation(line: 151, column: 12, scope: !7018)
!7028 = !DILocation(line: 151, column: 5, scope: !7018)
!7029 = distinct !DISubprogram(name: "hal_uart_translate_word_length", scope: !673, file: !673, line: 155, type: !7030, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7032)
!7030 = !DISubroutineType(types: !7031)
!7031 = !{!1717, !740}
!7032 = !{!7033, !7034}
!7033 = !DILocalVariable(name: "word_length", arg: 1, scope: !7029, file: !673, line: 155, type: !740)
!7034 = !DILocalVariable(name: "databit_tbl", scope: !7029, file: !673, line: 157, type: !7035)
!7035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1717, size: 64, elements: !284)
!7036 = !DILocation(line: 0, scope: !7029)
!7037 = !DILocation(line: 157, column: 14, scope: !7029)
!7038 = !DILocation(line: 160, column: 12, scope: !7029)
!7039 = !DILocation(line: 160, column: 5, scope: !7029)
!7040 = distinct !DISubprogram(name: "hal_uart_translate_parity", scope: !673, file: !673, line: 164, type: !7041, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7043)
!7041 = !DISubroutineType(types: !7042)
!7042 = !{!1717, !744}
!7043 = !{!7044, !7045}
!7044 = !DILocalVariable(name: "parity", arg: 1, scope: !7040, file: !673, line: 164, type: !744)
!7045 = !DILocalVariable(name: "parity_tbl", scope: !7040, file: !673, line: 166, type: !7046)
!7046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1717, size: 80, elements: !614)
!7047 = !DILocation(line: 0, scope: !7040)
!7048 = !DILocation(line: 166, column: 14, scope: !7040)
!7049 = !DILocation(line: 169, column: 12, scope: !7040)
!7050 = !DILocation(line: 169, column: 5, scope: !7040)
!7051 = distinct !DISubprogram(name: "hal_uart_translate_stopbit", scope: !673, file: !673, line: 173, type: !7052, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7054)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{!1717, !742}
!7054 = !{!7055, !7056}
!7055 = !DILocalVariable(name: "stopbit", arg: 1, scope: !7051, file: !673, line: 173, type: !742)
!7056 = !DILocalVariable(name: "stopbit_tbl", scope: !7051, file: !673, line: 175, type: !7057)
!7057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1717, size: 48, elements: !927)
!7058 = !DILocation(line: 0, scope: !7051)
!7059 = !DILocation(line: 175, column: 14, scope: !7051)
!7060 = !DILocation(line: 178, column: 12, scope: !7051)
!7061 = !DILocation(line: 178, column: 5, scope: !7051)
!7062 = distinct !DISubprogram(name: "hal_uart_is_port_valid", scope: !673, file: !673, line: 87, type: !7063, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7065)
!7063 = !DISubroutineType(types: !7064)
!7064 = !{!69, !781}
!7065 = !{!7066}
!7066 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7062, file: !673, line: 87, type: !781)
!7067 = !DILocation(line: 0, scope: !7062)
!7068 = !DILocation(line: 89, column: 23, scope: !7062)
!7069 = !DILocation(line: 89, column: 5, scope: !7062)
!7070 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !673, file: !673, line: 264, type: !7071, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7073)
!7071 = !DISubroutineType(types: !7072)
!7072 = !{!6920, !781}
!7073 = !{!7074}
!7074 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7070, file: !673, line: 264, type: !781)
!7075 = !DILocation(line: 0, scope: !7070)
!7076 = !DILocation(line: 266, column: 10, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7070, file: !673, line: 266, column: 9)
!7078 = !DILocation(line: 266, column: 9, scope: !7070)
!7079 = !DILocation(line: 269, column: 41, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7070, file: !673, line: 269, column: 9)
!7081 = !DILocation(line: 269, column: 62, scope: !7080)
!7082 = !DILocation(line: 269, column: 9, scope: !7070)
!7083 = !DILocation(line: 272, column: 5, scope: !7070)
!7084 = !DILocation(line: 275, column: 22, scope: !7070)
!7085 = !DILocation(line: 275, column: 5, scope: !7070)
!7086 = !DILocation(line: 278, column: 26, scope: !7070)
!7087 = !DILocation(line: 278, column: 5, scope: !7070)
!7088 = !DILocation(line: 279, column: 5, scope: !7070)
!7089 = !DILocation(line: 279, column: 53, scope: !7070)
!7090 = !DILocation(line: 280, column: 5, scope: !7070)
!7091 = !DILocation(line: 280, column: 40, scope: !7070)
!7092 = !DILocation(line: 281, column: 5, scope: !7070)
!7093 = !DILocation(line: 282, column: 44, scope: !7070)
!7094 = !DILocation(line: 282, column: 5, scope: !7070)
!7095 = !DILocation(line: 284, column: 5, scope: !7070)
!7096 = !DILocation(line: 286, column: 5, scope: !7070)
!7097 = !DILocation(line: 287, column: 1, scope: !7070)
!7098 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !673, file: !673, line: 290, type: !7099, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7101)
!7099 = !DISubroutineType(types: !7100)
!7100 = !{null, !781, !266}
!7101 = !{!7102, !7103, !7104}
!7102 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7098, file: !673, line: 290, type: !781)
!7103 = !DILocalVariable(name: "byte", arg: 2, scope: !7098, file: !673, line: 290, type: !266)
!7104 = !DILocalVariable(name: "int_no", scope: !7098, file: !673, line: 292, type: !5176)
!7105 = !DILocation(line: 0, scope: !7098)
!7106 = !DILocation(line: 292, column: 26, scope: !7098)
!7107 = !DILocation(line: 294, column: 16, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7098, file: !673, line: 294, column: 9)
!7109 = !DILocation(line: 294, column: 9, scope: !7098)
!7110 = !DILocation(line: 295, column: 9, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7108, file: !673, line: 294, column: 34)
!7112 = !DILocation(line: 296, column: 5, scope: !7111)
!7113 = !DILocation(line: 299, column: 1, scope: !7098)
!7114 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !673, file: !673, line: 302, type: !7115, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7117)
!7115 = !DISubroutineType(types: !7116)
!7116 = !{!61, !781, !1529, !61}
!7117 = !{!7118, !7119, !7120, !7121, !7122}
!7118 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7114, file: !673, line: 302, type: !781)
!7119 = !DILocalVariable(name: "data", arg: 2, scope: !7114, file: !673, line: 302, type: !1529)
!7120 = !DILocalVariable(name: "size", arg: 3, scope: !7114, file: !673, line: 302, type: !61)
!7121 = !DILocalVariable(name: "int_no", scope: !7114, file: !673, line: 304, type: !5176)
!7122 = !DILocalVariable(name: "index", scope: !7114, file: !673, line: 305, type: !61)
!7123 = !DILocation(line: 0, scope: !7114)
!7124 = !DILocation(line: 304, column: 26, scope: !7114)
!7125 = !DILocation(line: 307, column: 14, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7114, file: !673, line: 307, column: 9)
!7127 = !DILocation(line: 307, column: 9, scope: !7114)
!7128 = !DILocation(line: 313, column: 53, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !673, line: 312, column: 48)
!7130 = distinct !DILexicalBlock(scope: !7131, file: !673, line: 312, column: 9)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !673, line: 312, column: 9)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !673, line: 311, column: 33)
!7133 = distinct !DILexicalBlock(scope: !7114, file: !673, line: 311, column: 9)
!7134 = !DILocation(line: 313, column: 13, scope: !7129)
!7135 = !DILocation(line: 312, column: 44, scope: !7130)
!7136 = !DILocation(line: 312, column: 31, scope: !7130)
!7137 = !DILocation(line: 312, column: 9, scope: !7131)
!7138 = distinct !{!7138, !7137, !7139}
!7139 = !DILocation(line: 314, column: 9, scope: !7131)
!7140 = !DILocation(line: 318, column: 1, scope: !7114)
!7141 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !673, file: !673, line: 320, type: !7115, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7142)
!7142 = !{!7143, !7144, !7145, !7146, !7147, !7148, !7150}
!7143 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7141, file: !673, line: 320, type: !781)
!7144 = !DILocalVariable(name: "data", arg: 2, scope: !7141, file: !673, line: 320, type: !1529)
!7145 = !DILocalVariable(name: "size", arg: 3, scope: !7141, file: !673, line: 320, type: !61)
!7146 = !DILocalVariable(name: "actual_space", scope: !7141, file: !673, line: 322, type: !61)
!7147 = !DILocalVariable(name: "send_size", scope: !7141, file: !673, line: 322, type: !61)
!7148 = !DILocalVariable(name: "ch", scope: !7141, file: !673, line: 323, type: !7149)
!7149 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMA_VFIFO_CHANNEL", file: !366, line: 144, baseType: !365)
!7150 = !DILocalVariable(name: "irq_status", scope: !7141, file: !673, line: 325, type: !61)
!7151 = !DILocation(line: 0, scope: !7141)
!7152 = !DILocation(line: 322, column: 5, scope: !7141)
!7153 = !DILocation(line: 325, column: 5, scope: !7141)
!7154 = !DILocation(line: 328, column: 10, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7141, file: !673, line: 328, column: 9)
!7156 = !DILocation(line: 328, column: 9, scope: !7141)
!7157 = !DILocation(line: 332, column: 15, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7141, file: !673, line: 332, column: 9)
!7159 = !DILocation(line: 332, column: 24, scope: !7158)
!7160 = !DILocation(line: 335, column: 42, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7141, file: !673, line: 335, column: 9)
!7162 = !DILocation(line: 335, column: 9, scope: !7141)
!7163 = !DILocation(line: 341, column: 5, scope: !7141)
!7164 = !DILocation(line: 342, column: 9, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7141, file: !673, line: 342, column: 9)
!7166 = !DILocation(line: 342, column: 44, scope: !7165)
!7167 = !DILocation(line: 342, column: 9, scope: !7141)
!7168 = !DILocation(line: 343, column: 38, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7165, file: !673, line: 342, column: 54)
!7170 = !DILocation(line: 343, column: 9, scope: !7169)
!7171 = !DILocation(line: 344, column: 44, scope: !7169)
!7172 = !DILocation(line: 345, column: 5, scope: !7169)
!7173 = !DILocation(line: 346, column: 37, scope: !7141)
!7174 = !DILocation(line: 346, column: 5, scope: !7141)
!7175 = !DILocation(line: 349, column: 30, scope: !7141)
!7176 = !DILocation(line: 349, column: 5, scope: !7141)
!7177 = !DILocation(line: 350, column: 9, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7141, file: !673, line: 350, column: 9)
!7179 = !DILocation(line: 350, column: 22, scope: !7178)
!7180 = !DILocation(line: 355, column: 5, scope: !7141)
!7181 = !DILocation(line: 357, column: 22, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7141, file: !673, line: 357, column: 9)
!7183 = !DILocation(line: 357, column: 19, scope: !7182)
!7184 = !DILocation(line: 357, column: 9, scope: !7141)
!7185 = !DILocation(line: 358, column: 14, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7182, file: !673, line: 357, column: 36)
!7187 = !{i32 14, i32 18}
!7188 = !DILocation(line: 359, column: 9, scope: !7186)
!7189 = !DILocation(line: 360, column: 5, scope: !7186)
!7190 = !DILocation(line: 362, column: 1, scope: !7141)
!7191 = distinct !DISubprogram(name: "uart_channel_to_dma_channel", scope: !673, file: !673, line: 191, type: !7192, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7194)
!7192 = !DISubroutineType(types: !7193)
!7193 = !{!7149, !5176, !69}
!7194 = !{!7195, !7196, !7197}
!7195 = !DILocalVariable(name: "port", arg: 1, scope: !7191, file: !673, line: 191, type: !5176)
!7196 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7191, file: !673, line: 191, type: !69)
!7197 = !DILocalVariable(name: "ch", scope: !7191, file: !673, line: 193, type: !7149)
!7198 = !DILocation(line: 0, scope: !7191)
!7199 = !DILocation(line: 195, column: 14, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7191, file: !673, line: 195, column: 9)
!7201 = !DILocation(line: 195, column: 9, scope: !7191)
!7202 = !DILocation(line: 209, column: 5, scope: !7191)
!7203 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !673, file: !673, line: 365, type: !7204, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7206)
!7204 = !DISubroutineType(types: !7205)
!7205 = !{!266, !781}
!7206 = !{!7207, !7208}
!7207 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7203, file: !673, line: 365, type: !781)
!7208 = !DILocalVariable(name: "int_no", scope: !7203, file: !673, line: 367, type: !5176)
!7209 = !DILocation(line: 0, scope: !7203)
!7210 = !DILocation(line: 367, column: 26, scope: !7203)
!7211 = !DILocation(line: 369, column: 16, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7203, file: !673, line: 369, column: 9)
!7213 = !DILocation(line: 369, column: 9, scope: !7203)
!7214 = !DILocation(line: 370, column: 22, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7212, file: !673, line: 369, column: 33)
!7216 = !DILocation(line: 370, column: 9, scope: !7215)
!7217 = !DILocation(line: 0, scope: !7212)
!7218 = !DILocation(line: 375, column: 1, scope: !7203)
!7219 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !673, file: !673, line: 377, type: !7220, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7222)
!7220 = !DISubroutineType(types: !7221)
!7221 = !{!61, !781}
!7222 = !{!7223, !7224}
!7223 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7219, file: !673, line: 377, type: !781)
!7224 = !DILocalVariable(name: "int_no", scope: !7219, file: !673, line: 379, type: !5176)
!7225 = !DILocation(line: 0, scope: !7219)
!7226 = !DILocation(line: 379, column: 26, scope: !7219)
!7227 = !DILocation(line: 381, column: 16, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7219, file: !673, line: 381, column: 9)
!7229 = !DILocation(line: 381, column: 9, scope: !7219)
!7230 = !DILocation(line: 382, column: 16, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7228, file: !673, line: 381, column: 33)
!7232 = !DILocation(line: 382, column: 9, scope: !7231)
!7233 = !DILocation(line: 0, scope: !7228)
!7234 = !DILocation(line: 387, column: 1, scope: !7219)
!7235 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !673, file: !673, line: 390, type: !7236, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7238)
!7236 = !DISubroutineType(types: !7237)
!7237 = !{!61, !781, !274, !61}
!7238 = !{!7239, !7240, !7241, !7242, !7243}
!7239 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7235, file: !673, line: 390, type: !781)
!7240 = !DILocalVariable(name: "buffer", arg: 2, scope: !7235, file: !673, line: 390, type: !274)
!7241 = !DILocalVariable(name: "size", arg: 3, scope: !7235, file: !673, line: 390, type: !61)
!7242 = !DILocalVariable(name: "int_no", scope: !7235, file: !673, line: 392, type: !5176)
!7243 = !DILocalVariable(name: "index", scope: !7235, file: !673, line: 393, type: !61)
!7244 = !DILocation(line: 0, scope: !7235)
!7245 = !DILocation(line: 392, column: 26, scope: !7235)
!7246 = !DILocation(line: 395, column: 16, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7235, file: !673, line: 395, column: 9)
!7248 = !DILocation(line: 395, column: 9, scope: !7235)
!7249 = !DILocation(line: 401, column: 38, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7251, file: !673, line: 400, column: 48)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !673, line: 400, column: 9)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !673, line: 400, column: 9)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !673, line: 399, column: 33)
!7254 = distinct !DILexicalBlock(scope: !7235, file: !673, line: 399, column: 9)
!7255 = !DILocation(line: 401, column: 13, scope: !7250)
!7256 = !DILocation(line: 401, column: 27, scope: !7250)
!7257 = !DILocation(line: 400, column: 44, scope: !7251)
!7258 = !DILocation(line: 400, column: 31, scope: !7251)
!7259 = !DILocation(line: 400, column: 9, scope: !7252)
!7260 = distinct !{!7260, !7259, !7261}
!7261 = !DILocation(line: 402, column: 9, scope: !7252)
!7262 = !DILocation(line: 406, column: 1, scope: !7235)
!7263 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !673, file: !673, line: 408, type: !7236, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7264)
!7264 = !{!7265, !7266, !7267, !7268, !7269, !7270}
!7265 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7263, file: !673, line: 408, type: !781)
!7266 = !DILocalVariable(name: "buffer", arg: 2, scope: !7263, file: !673, line: 408, type: !274)
!7267 = !DILocalVariable(name: "size", arg: 3, scope: !7263, file: !673, line: 408, type: !61)
!7268 = !DILocalVariable(name: "actual_size", scope: !7263, file: !673, line: 410, type: !61)
!7269 = !DILocalVariable(name: "receive_size", scope: !7263, file: !673, line: 410, type: !61)
!7270 = !DILocalVariable(name: "ch", scope: !7263, file: !673, line: 411, type: !7149)
!7271 = !DILocation(line: 0, scope: !7263)
!7272 = !DILocation(line: 410, column: 5, scope: !7263)
!7273 = !DILocation(line: 413, column: 10, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7263, file: !673, line: 413, column: 9)
!7275 = !DILocation(line: 413, column: 9, scope: !7263)
!7276 = !DILocation(line: 417, column: 17, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7263, file: !673, line: 417, column: 9)
!7278 = !DILocation(line: 417, column: 26, scope: !7277)
!7279 = !DILocation(line: 421, column: 30, scope: !7263)
!7280 = !DILocation(line: 421, column: 5, scope: !7263)
!7281 = !DILocation(line: 422, column: 9, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7263, file: !673, line: 422, column: 9)
!7283 = !DILocation(line: 422, column: 21, scope: !7282)
!7284 = !DILocation(line: 427, column: 5, scope: !7263)
!7285 = !DILocation(line: 429, column: 25, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7263, file: !673, line: 429, column: 9)
!7287 = !DILocation(line: 429, column: 22, scope: !7286)
!7288 = !DILocation(line: 429, column: 9, scope: !7263)
!7289 = !DILocation(line: 430, column: 14, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7286, file: !673, line: 429, column: 38)
!7291 = !DILocation(line: 431, column: 9, scope: !7290)
!7292 = !DILocation(line: 432, column: 5, scope: !7290)
!7293 = !DILocation(line: 435, column: 1, scope: !7263)
!7294 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !673, file: !673, line: 438, type: !7220, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7295)
!7295 = !{!7296, !7297}
!7296 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7294, file: !673, line: 438, type: !781)
!7297 = !DILocalVariable(name: "length", scope: !7294, file: !673, line: 440, type: !61)
!7298 = !DILocation(line: 0, scope: !7294)
!7299 = !DILocation(line: 440, column: 5, scope: !7294)
!7300 = !DILocation(line: 440, column: 14, scope: !7294)
!7301 = !DILocation(line: 442, column: 10, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7294, file: !673, line: 442, column: 9)
!7303 = !DILocation(line: 442, column: 9, scope: !7294)
!7304 = !DILocation(line: 446, column: 30, scope: !7294)
!7305 = !DILocation(line: 446, column: 5, scope: !7294)
!7306 = !DILocation(line: 447, column: 12, scope: !7294)
!7307 = !DILocation(line: 447, column: 5, scope: !7294)
!7308 = !DILocation(line: 448, column: 1, scope: !7294)
!7309 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !673, file: !673, line: 451, type: !7220, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7310)
!7310 = !{!7311, !7312}
!7311 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7309, file: !673, line: 451, type: !781)
!7312 = !DILocalVariable(name: "length", scope: !7309, file: !673, line: 453, type: !61)
!7313 = !DILocation(line: 0, scope: !7309)
!7314 = !DILocation(line: 453, column: 5, scope: !7309)
!7315 = !DILocation(line: 453, column: 14, scope: !7309)
!7316 = !DILocation(line: 455, column: 10, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7309, file: !673, line: 455, column: 9)
!7318 = !DILocation(line: 455, column: 9, scope: !7309)
!7319 = !DILocation(line: 459, column: 30, scope: !7309)
!7320 = !DILocation(line: 459, column: 5, scope: !7309)
!7321 = !DILocation(line: 461, column: 12, scope: !7309)
!7322 = !DILocation(line: 461, column: 5, scope: !7309)
!7323 = !DILocation(line: 462, column: 1, scope: !7309)
!7324 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !673, file: !673, line: 543, type: !7325, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7327)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{!6920, !781, !751, !51}
!7327 = !{!7328, !7329, !7330, !7331}
!7328 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7324, file: !673, line: 543, type: !781)
!7329 = !DILocalVariable(name: "user_callback", arg: 2, scope: !7324, file: !673, line: 544, type: !751)
!7330 = !DILocalVariable(name: "user_data", arg: 3, scope: !7324, file: !673, line: 545, type: !51)
!7331 = !DILocalVariable(name: "ch", scope: !7324, file: !673, line: 547, type: !7149)
!7332 = !DILocation(line: 0, scope: !7324)
!7333 = !DILocation(line: 549, column: 10, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7324, file: !673, line: 549, column: 9)
!7335 = !DILocation(line: 549, column: 9, scope: !7324)
!7336 = !DILocation(line: 556, column: 53, scope: !7324)
!7337 = !DILocation(line: 556, column: 62, scope: !7324)
!7338 = !DILocation(line: 557, column: 53, scope: !7324)
!7339 = !DILocation(line: 557, column: 63, scope: !7324)
!7340 = !DILocation(line: 558, column: 37, scope: !7324)
!7341 = !DILocation(line: 558, column: 54, scope: !7324)
!7342 = !DILocation(line: 560, column: 39, scope: !7324)
!7343 = !DILocation(line: 561, column: 39, scope: !7324)
!7344 = !DILocation(line: 560, column: 5, scope: !7324)
!7345 = !DILocation(line: 562, column: 5, scope: !7324)
!7346 = !DILocation(line: 564, column: 44, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7324, file: !673, line: 564, column: 9)
!7348 = !DILocation(line: 564, column: 9, scope: !7324)
!7349 = !DILocation(line: 565, column: 9, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7347, file: !673, line: 564, column: 59)
!7351 = !DILocation(line: 566, column: 5, scope: !7350)
!7352 = !DILocation(line: 567, column: 9, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7347, file: !673, line: 566, column: 12)
!7354 = !DILocation(line: 569, column: 10, scope: !7324)
!7355 = !DILocation(line: 570, column: 5, scope: !7324)
!7356 = !DILocation(line: 572, column: 5, scope: !7324)
!7357 = !DILocation(line: 572, column: 53, scope: !7324)
!7358 = !DILocation(line: 573, column: 35, scope: !7324)
!7359 = !DILocation(line: 573, column: 5, scope: !7324)
!7360 = !DILocation(line: 574, column: 5, scope: !7324)
!7361 = !DILocation(line: 575, column: 25, scope: !7324)
!7362 = !DILocation(line: 575, column: 5, scope: !7324)
!7363 = !DILocation(line: 578, column: 5, scope: !7324)
!7364 = !DILocation(line: 579, column: 1, scope: !7324)
!7365 = !DILocation(line: 0, scope: !777)
!7366 = !DILocation(line: 539, column: 12, scope: !777)
!7367 = !DILocation(line: 539, column: 5, scope: !777)
!7368 = distinct !DISubprogram(name: "hal_uart_send_callback0", scope: !673, file: !673, line: 511, type: !154, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7369)
!7369 = !{!7370}
!7370 = !DILocalVariable(name: "callback_context", scope: !7371, file: !673, line: 514, type: !7373)
!7371 = distinct !DILexicalBlock(scope: !7372, file: !673, line: 513, column: 60)
!7372 = distinct !DILexicalBlock(scope: !7368, file: !673, line: 513, column: 9)
!7373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 32)
!7374 = !DILocation(line: 513, column: 42, scope: !7372)
!7375 = !DILocation(line: 513, column: 9, scope: !7368)
!7376 = !DILocation(line: 515, column: 39, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7371, file: !673, line: 515, column: 13)
!7378 = !DILocation(line: 515, column: 18, scope: !7377)
!7379 = !DILocation(line: 515, column: 13, scope: !7371)
!7380 = !DILocation(line: 516, column: 89, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7377, file: !673, line: 515, column: 49)
!7382 = !DILocation(line: 516, column: 13, scope: !7381)
!7383 = !DILocation(line: 517, column: 9, scope: !7381)
!7384 = !DILocation(line: 519, column: 32, scope: !7368)
!7385 = !DILocation(line: 519, column: 5, scope: !7368)
!7386 = !DILocation(line: 520, column: 1, scope: !7368)
!7387 = distinct !DISubprogram(name: "hal_uart_send_callback1", scope: !673, file: !673, line: 523, type: !154, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7388)
!7388 = !{!7389}
!7389 = !DILocalVariable(name: "callback_context", scope: !7390, file: !673, line: 526, type: !7373)
!7390 = distinct !DILexicalBlock(scope: !7391, file: !673, line: 525, column: 60)
!7391 = distinct !DILexicalBlock(scope: !7387, file: !673, line: 525, column: 9)
!7392 = !DILocation(line: 525, column: 42, scope: !7391)
!7393 = !DILocation(line: 525, column: 9, scope: !7387)
!7394 = !DILocation(line: 527, column: 39, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7390, file: !673, line: 527, column: 13)
!7396 = !DILocation(line: 527, column: 18, scope: !7395)
!7397 = !DILocation(line: 527, column: 13, scope: !7390)
!7398 = !DILocation(line: 528, column: 89, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7395, file: !673, line: 527, column: 49)
!7400 = !DILocation(line: 528, column: 13, scope: !7399)
!7401 = !DILocation(line: 529, column: 9, scope: !7399)
!7402 = !DILocation(line: 531, column: 32, scope: !7387)
!7403 = !DILocation(line: 531, column: 5, scope: !7387)
!7404 = !DILocation(line: 532, column: 1, scope: !7387)
!7405 = distinct !DISubprogram(name: "hal_uart_check_irq_disable", scope: !673, file: !673, line: 464, type: !7406, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7408)
!7406 = !DISubroutineType(types: !7407)
!7407 = !{null, !5176, !69}
!7408 = !{!7409, !7410, !7411, !7412, !7413, !7415}
!7409 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7405, file: !673, line: 464, type: !5176)
!7410 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7405, file: !673, line: 464, type: !69)
!7411 = !DILocalVariable(name: "avail_size", scope: !7405, file: !673, line: 466, type: !61)
!7412 = !DILocalVariable(name: "avail_space", scope: !7405, file: !673, line: 466, type: !61)
!7413 = !DILocalVariable(name: "dma_config", scope: !7405, file: !673, line: 467, type: !7414)
!7414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 32)
!7415 = !DILocalVariable(name: "ch", scope: !7405, file: !673, line: 468, type: !7149)
!7416 = !DILocation(line: 0, scope: !7405)
!7417 = !DILocation(line: 466, column: 5, scope: !7405)
!7418 = !DILocation(line: 471, column: 9, scope: !7405)
!7419 = !DILocation(line: 472, column: 9, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7421, file: !673, line: 471, column: 16)
!7421 = distinct !DILexicalBlock(scope: !7405, file: !673, line: 471, column: 9)
!7422 = !DILocation(line: 473, column: 13, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7420, file: !673, line: 473, column: 13)
!7424 = !DILocation(line: 473, column: 39, scope: !7423)
!7425 = !DILocation(line: 473, column: 24, scope: !7423)
!7426 = !DILocation(line: 473, column: 13, scope: !7420)
!7427 = !DILocation(line: 478, column: 9, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7421, file: !673, line: 477, column: 12)
!7429 = !DILocation(line: 479, column: 13, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7428, file: !673, line: 479, column: 13)
!7431 = !DILocation(line: 479, column: 40, scope: !7430)
!7432 = !DILocation(line: 479, column: 77, scope: !7430)
!7433 = !DILocation(line: 479, column: 63, scope: !7430)
!7434 = !DILocation(line: 479, column: 25, scope: !7430)
!7435 = !DILocation(line: 479, column: 13, scope: !7428)
!7436 = !DILocation(line: 0, scope: !7421)
!7437 = !DILocation(line: 484, column: 1, scope: !7405)
!7438 = distinct !DISubprogram(name: "hal_uart_receive_callback0", scope: !673, file: !673, line: 486, type: !154, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7439)
!7439 = !{!7440}
!7440 = !DILocalVariable(name: "callback_context", scope: !7441, file: !673, line: 490, type: !7373)
!7441 = distinct !DILexicalBlock(scope: !7442, file: !673, line: 489, column: 70)
!7442 = distinct !DILexicalBlock(scope: !7438, file: !673, line: 488, column: 9)
!7443 = !DILocation(line: 488, column: 43, scope: !7442)
!7444 = !DILocation(line: 488, column: 61, scope: !7442)
!7445 = !DILocation(line: 489, column: 14, scope: !7442)
!7446 = !DILocation(line: 489, column: 63, scope: !7442)
!7447 = !DILocation(line: 488, column: 9, scope: !7438)
!7448 = !DILocation(line: 491, column: 39, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7441, file: !673, line: 491, column: 13)
!7450 = !DILocation(line: 491, column: 18, scope: !7449)
!7451 = !DILocation(line: 491, column: 13, scope: !7441)
!7452 = !DILocation(line: 492, column: 88, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7449, file: !673, line: 491, column: 49)
!7454 = !DILocation(line: 492, column: 13, scope: !7453)
!7455 = !DILocation(line: 493, column: 9, scope: !7453)
!7456 = !DILocation(line: 495, column: 32, scope: !7438)
!7457 = !DILocation(line: 495, column: 5, scope: !7438)
!7458 = !DILocation(line: 496, column: 1, scope: !7438)
!7459 = distinct !DISubprogram(name: "hal_uart_receive_callback1", scope: !673, file: !673, line: 499, type: !154, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7460)
!7460 = !{!7461}
!7461 = !DILocalVariable(name: "callback_context", scope: !7462, file: !673, line: 503, type: !7373)
!7462 = distinct !DILexicalBlock(scope: !7463, file: !673, line: 502, column: 70)
!7463 = distinct !DILexicalBlock(scope: !7459, file: !673, line: 501, column: 9)
!7464 = !DILocation(line: 501, column: 43, scope: !7463)
!7465 = !DILocation(line: 501, column: 61, scope: !7463)
!7466 = !DILocation(line: 502, column: 14, scope: !7463)
!7467 = !DILocation(line: 502, column: 63, scope: !7463)
!7468 = !DILocation(line: 501, column: 9, scope: !7459)
!7469 = !DILocation(line: 504, column: 39, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7462, file: !673, line: 504, column: 13)
!7471 = !DILocation(line: 504, column: 18, scope: !7470)
!7472 = !DILocation(line: 504, column: 13, scope: !7462)
!7473 = !DILocation(line: 505, column: 88, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7470, file: !673, line: 504, column: 49)
!7475 = !DILocation(line: 505, column: 13, scope: !7474)
!7476 = !DILocation(line: 506, column: 9, scope: !7474)
!7477 = !DILocation(line: 508, column: 32, scope: !7459)
!7478 = !DILocation(line: 508, column: 5, scope: !7459)
!7479 = !DILocation(line: 509, column: 1, scope: !7459)
!7480 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !673, file: !673, line: 582, type: !7481, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7483)
!7481 = !DISubroutineType(types: !7482)
!7482 = !{!6920, !781, !738}
!7483 = !{!7484, !7485}
!7484 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7480, file: !673, line: 582, type: !781)
!7485 = !DILocalVariable(name: "baudrate", arg: 2, scope: !7480, file: !673, line: 582, type: !738)
!7486 = !DILocation(line: 0, scope: !7480)
!7487 = !DILocation(line: 584, column: 11, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7480, file: !673, line: 584, column: 9)
!7489 = !DILocation(line: 584, column: 46, scope: !7488)
!7490 = !DILocation(line: 588, column: 37, scope: !7480)
!7491 = !DILocation(line: 588, column: 50, scope: !7480)
!7492 = !DILocation(line: 588, column: 59, scope: !7480)
!7493 = !DILocation(line: 589, column: 12, scope: !7480)
!7494 = !DILocation(line: 589, column: 5, scope: !7480)
!7495 = !DILocation(line: 590, column: 1, scope: !7480)
!7496 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !673, file: !673, line: 608, type: !7497, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7501)
!7497 = !DISubroutineType(types: !7498)
!7498 = !{!6920, !781, !7499}
!7499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7500, size: 32)
!7500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !759)
!7501 = !{!7502, !7503}
!7502 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7496, file: !673, line: 608, type: !781)
!7503 = !DILocalVariable(name: "uart_dma_config", arg: 2, scope: !7496, file: !673, line: 608, type: !7499)
!7504 = !DILocation(line: 0, scope: !7496)
!7505 = !DILocation(line: 610, column: 10, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7496, file: !673, line: 610, column: 9)
!7507 = !DILocation(line: 610, column: 9, scope: !7496)
!7508 = !DILocation(line: 614, column: 10, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7496, file: !673, line: 614, column: 9)
!7510 = !DILocation(line: 614, column: 9, scope: !7496)
!7511 = !DILocation(line: 618, column: 37, scope: !7496)
!7512 = !DILocation(line: 618, column: 56, scope: !7496)
!7513 = !DILocation(line: 619, column: 45, scope: !7496)
!7514 = !DILocation(line: 619, column: 12, scope: !7496)
!7515 = !DILocation(line: 620, column: 12, scope: !7496)
!7516 = !DILocation(line: 619, column: 5, scope: !7496)
!7517 = !DILocation(line: 621, column: 5, scope: !7496)
!7518 = !DILocation(line: 622, column: 5, scope: !7496)
!7519 = !DILocation(line: 623, column: 33, scope: !7496)
!7520 = !DILocation(line: 624, column: 50, scope: !7496)
!7521 = !DILocation(line: 625, column: 50, scope: !7496)
!7522 = !DILocation(line: 626, column: 50, scope: !7496)
!7523 = !DILocation(line: 627, column: 50, scope: !7496)
!7524 = !DILocation(line: 628, column: 33, scope: !7496)
!7525 = !DILocation(line: 623, column: 5, scope: !7496)
!7526 = !DILocation(line: 630, column: 50, scope: !7496)
!7527 = !DILocation(line: 631, column: 50, scope: !7496)
!7528 = !DILocation(line: 632, column: 50, scope: !7496)
!7529 = !DILocation(line: 629, column: 5, scope: !7496)
!7530 = !DILocation(line: 634, column: 5, scope: !7496)
!7531 = !DILocation(line: 635, column: 1, scope: !7496)
!7532 = distinct !DISubprogram(name: "hal_uart_is_dma_config_valid", scope: !673, file: !673, line: 112, type: !7533, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7535)
!7533 = !DISubroutineType(types: !7534)
!7534 = !{!69, !7499}
!7535 = !{!7536}
!7536 = !DILocalVariable(name: "dma_config", arg: 1, scope: !7532, file: !673, line: 112, type: !7499)
!7537 = !DILocation(line: 0, scope: !7532)
!7538 = !DILocation(line: 114, column: 14, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7532, file: !673, line: 114, column: 9)
!7540 = !DILocation(line: 114, column: 9, scope: !7532)
!7541 = !DILocation(line: 117, column: 29, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7532, file: !673, line: 117, column: 9)
!7543 = !DILocation(line: 117, column: 14, scope: !7542)
!7544 = !DILocation(line: 117, column: 9, scope: !7532)
!7545 = !DILocation(line: 120, column: 21, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7532, file: !673, line: 120, column: 9)
!7547 = !DILocation(line: 120, column: 61, scope: !7546)
!7548 = !DILocation(line: 120, column: 47, scope: !7546)
!7549 = !DILocation(line: 120, column: 9, scope: !7532)
!7550 = !DILocation(line: 123, column: 61, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7532, file: !673, line: 123, column: 9)
!7552 = !DILocation(line: 123, column: 47, scope: !7551)
!7553 = !DILocation(line: 123, column: 9, scope: !7532)
!7554 = !DILocation(line: 126, column: 29, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7532, file: !673, line: 126, column: 9)
!7556 = !DILocation(line: 126, column: 14, scope: !7555)
!7557 = !DILocation(line: 126, column: 9, scope: !7532)
!7558 = !DILocation(line: 129, column: 21, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7532, file: !673, line: 129, column: 9)
!7560 = !DILocation(line: 129, column: 58, scope: !7559)
!7561 = !DILocation(line: 129, column: 44, scope: !7559)
!7562 = !DILocation(line: 129, column: 9, scope: !7532)
!7563 = !DILocation(line: 136, column: 1, scope: !7532)
!7564 = distinct !DISubprogram(name: "hal_uart_translate_timeout", scope: !673, file: !673, line: 182, type: !6776, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7565)
!7565 = !{!7566, !7567}
!7566 = !DILocalVariable(name: "timeout_us", arg: 1, scope: !7564, file: !673, line: 182, type: !61)
!7567 = !DILocalVariable(name: "ticks_per_us", scope: !7564, file: !673, line: 184, type: !61)
!7568 = !DILocation(line: 0, scope: !7564)
!7569 = !DILocation(line: 186, column: 20, scope: !7564)
!7570 = !DILocation(line: 186, column: 39, scope: !7564)
!7571 = !DILocation(line: 188, column: 25, scope: !7564)
!7572 = !DILocation(line: 188, column: 5, scope: !7564)
!7573 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !673, file: !673, line: 637, type: !7071, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7574)
!7574 = !{!7575, !7576}
!7575 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7573, file: !673, line: 637, type: !781)
!7576 = !DILocalVariable(name: "int_no", scope: !7573, file: !673, line: 639, type: !5176)
!7577 = !DILocation(line: 0, scope: !7573)
!7578 = !DILocation(line: 641, column: 10, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7573, file: !673, line: 641, column: 9)
!7580 = !DILocation(line: 641, column: 9, scope: !7573)
!7581 = !DILocation(line: 645, column: 14, scope: !7573)
!7582 = !DILocation(line: 646, column: 5, scope: !7573)
!7583 = !DILocation(line: 648, column: 5, scope: !7573)
!7584 = !DILocation(line: 649, column: 1, scope: !7573)
!7585 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !673, file: !673, line: 651, type: !7586, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7588)
!7586 = !DISubroutineType(types: !7587)
!7587 = !{!6920, !781, !54, !54, !54}
!7588 = !{!7589, !7590, !7591, !7592, !7593}
!7589 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7585, file: !673, line: 651, type: !781)
!7590 = !DILocalVariable(name: "xon", arg: 2, scope: !7585, file: !673, line: 652, type: !54)
!7591 = !DILocalVariable(name: "xoff", arg: 3, scope: !7585, file: !673, line: 653, type: !54)
!7592 = !DILocalVariable(name: "escape_character", arg: 4, scope: !7585, file: !673, line: 654, type: !54)
!7593 = !DILocalVariable(name: "int_no", scope: !7585, file: !673, line: 656, type: !5176)
!7594 = !DILocation(line: 0, scope: !7585)
!7595 = !DILocation(line: 658, column: 10, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7585, file: !673, line: 658, column: 9)
!7597 = !DILocation(line: 658, column: 9, scope: !7585)
!7598 = !DILocation(line: 662, column: 14, scope: !7585)
!7599 = !DILocation(line: 663, column: 5, scope: !7585)
!7600 = !DILocation(line: 665, column: 5, scope: !7585)
!7601 = !DILocation(line: 666, column: 1, scope: !7585)
!7602 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !673, file: !673, line: 668, type: !7071, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7603)
!7603 = !{!7604, !7605}
!7604 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7602, file: !673, line: 668, type: !781)
!7605 = !DILocalVariable(name: "int_no", scope: !7602, file: !673, line: 670, type: !5176)
!7606 = !DILocation(line: 0, scope: !7602)
!7607 = !DILocation(line: 672, column: 10, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7602, file: !673, line: 672, column: 9)
!7609 = !DILocation(line: 672, column: 9, scope: !7602)
!7610 = !DILocation(line: 676, column: 14, scope: !7602)
!7611 = !DILocation(line: 677, column: 5, scope: !7602)
!7612 = !DILocation(line: 679, column: 5, scope: !7602)
!7613 = !DILocation(line: 680, column: 1, scope: !7602)
!7614 = distinct !DISubprogram(name: "hal_uart_set_dma_timeout", scope: !673, file: !673, line: 683, type: !7615, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !672, retainedNodes: !7617)
!7615 = !DISubroutineType(types: !7616)
!7616 = !{!6920, !781, !61}
!7617 = !{!7618, !7619}
!7618 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7614, file: !673, line: 683, type: !781)
!7619 = !DILocalVariable(name: "timeout", arg: 2, scope: !7614, file: !673, line: 683, type: !61)
!7620 = !DILocation(line: 0, scope: !7614)
!7621 = !DILocation(line: 685, column: 10, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7614, file: !673, line: 685, column: 9)
!7623 = !DILocation(line: 685, column: 9, scope: !7614)
!7624 = !DILocation(line: 689, column: 19, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7614, file: !673, line: 689, column: 9)
!7626 = !DILocation(line: 0, scope: !7625)
!7627 = !DILocation(line: 696, column: 1, scope: !7614)
!7628 = distinct !DISubprogram(name: "customer_flash_suspend_bit", scope: !789, file: !789, line: 178, type: !7629, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !7631)
!7629 = !DISubroutineType(types: !7630)
!7630 = !{!58}
!7631 = !{!7632}
!7632 = !DILocalVariable(name: "suspend_bit", scope: !7628, file: !789, line: 181, type: !58)
!7633 = !DILocation(line: 0, scope: !7628)
!7634 = !DILocation(line: 182, column: 5, scope: !7628)
!7635 = distinct !DISubprogram(name: "customer_switch_spi_mode_command", scope: !789, file: !789, line: 185, type: !7636, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !1387)
!7636 = !DISubroutineType(types: !7637)
!7637 = !{!257}
!7638 = !DILocation(line: 188, column: 4, scope: !7635)
!7639 = distinct !DISubprogram(name: "customer_switch_spiq_mode_command", scope: !789, file: !789, line: 191, type: !7636, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !1387)
!7640 = !DILocation(line: 194, column: 5, scope: !7639)
!7641 = distinct !DISubprogram(name: "customer_flash_read_SR2_comand", scope: !789, file: !789, line: 197, type: !7629, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !7642)
!7642 = !{!7643}
!7643 = !DILocalVariable(name: "cmd", scope: !7641, file: !789, line: 201, type: !58)
!7644 = !DILocation(line: 0, scope: !7641)
!7645 = !DILocation(line: 202, column: 5, scope: !7641)
!7646 = distinct !DISubprogram(name: "customer_flash_register", scope: !789, file: !789, line: 207, type: !7647, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !1387)
!7647 = !DISubroutineType(types: !7648)
!7648 = !{!791}
!7649 = !DILocation(line: 209, column: 5, scope: !7646)
!7650 = distinct !DISubprogram(name: "__io_putchar", scope: !1339, file: !1339, line: 58, type: !3975, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1338, retainedNodes: !7651)
!7651 = !{!7652}
!7652 = !DILocalVariable(name: "ch", arg: 1, scope: !7650, file: !1339, line: 58, type: !7)
!7653 = !DILocation(line: 0, scope: !7650)
!7654 = !DILocation(line: 65, column: 35, scope: !7650)
!7655 = !DILocation(line: 65, column: 5, scope: !7650)
!7656 = !DILocation(line: 66, column: 5, scope: !7650)
!7657 = distinct !DISubprogram(name: "main", scope: !1339, file: !1339, line: 148, type: !3280, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1338, retainedNodes: !1387)
!7658 = !DILocation(line: 151, column: 5, scope: !7657)
!7659 = !DILocation(line: 154, column: 5, scope: !7657)
!7660 = !DILocation(line: 319, column: 3, scope: !7661, inlinedAt: !7662)
!7661 = distinct !DISubprogram(name: "__enable_irq", scope: !3205, file: !3205, line: 317, type: !154, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1338, retainedNodes: !1387)
!7662 = distinct !DILocation(line: 157, column: 5, scope: !7657)
!7663 = !{i64 501050}
!7664 = !DILocation(line: 496, column: 3, scope: !7665, inlinedAt: !7666)
!7665 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !3205, file: !3205, line: 494, type: !154, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1338, retainedNodes: !1387)
!7666 = distinct !DILocation(line: 158, column: 5, scope: !7657)
!7667 = !{i64 505325}
!7668 = !DILocation(line: 161, column: 5, scope: !7657)
!7669 = !DILocation(line: 163, column: 5, scope: !7657)
!7670 = !DILocation(line: 164, column: 5, scope: !7657)
!7671 = !DILocation(line: 166, column: 5, scope: !7657)
!7672 = !DILocation(line: 168, column: 5, scope: !7657)
!7673 = distinct !DISubprogram(name: "SystemClock_Config", scope: !1339, file: !1339, line: 95, type: !154, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1338, retainedNodes: !1387)
!7674 = !DILocation(line: 97, column: 5, scope: !7673)
!7675 = !DILocation(line: 98, column: 1, scope: !7673)
!7676 = distinct !DISubprogram(name: "prvSetupHardware", scope: !1339, file: !1339, line: 105, type: !154, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1338, retainedNodes: !1387)
!7677 = !DILocation(line: 108, column: 5, scope: !7676)
!7678 = !DILocation(line: 109, column: 1, scope: !7676)
!7679 = distinct !DISubprogram(name: "vTestTask", scope: !1339, file: !1339, line: 116, type: !154, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1338, retainedNodes: !7680)
!7680 = !{!7681}
!7681 = !DILocalVariable(name: "sleep_time_ms", scope: !7679, file: !1339, line: 118, type: !61)
!7682 = !DILocation(line: 0, scope: !7679)
!7683 = !DILocation(line: 119, column: 5, scope: !7679)
!7684 = !DILocation(line: 121, column: 5, scope: !7679)
!7685 = !DILocation(line: 122, column: 9, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7679, file: !1339, line: 121, column: 15)
!7687 = !DILocation(line: 123, column: 9, scope: !7686)
!7688 = !DILocation(line: 128, column: 23, scope: !7686)
!7689 = !DILocation(line: 129, column: 9, scope: !7686)
!7690 = !DILocation(line: 131, column: 23, scope: !7686)
!7691 = !DILocation(line: 132, column: 9, scope: !7686)
!7692 = !DILocation(line: 134, column: 9, scope: !7686)
!7693 = !DILocation(line: 135, column: 9, scope: !7686)
!7694 = !DILocation(line: 136, column: 23, scope: !7686)
!7695 = !DILocation(line: 137, column: 9, scope: !7686)
!7696 = !DILocation(line: 138, column: 23, scope: !7686)
!7697 = !DILocation(line: 139, column: 9, scope: !7686)
!7698 = distinct !{!7698, !7684, !7699}
!7699 = !DILocation(line: 140, column: 5, scope: !7679)
!7700 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !1339, file: !1339, line: 74, type: !154, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1338, retainedNodes: !7701)
!7701 = !{!7702}
!7702 = !DILocalVariable(name: "uart_config", scope: !7700, file: !1339, line: 76, type: !7703)
!7703 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !676, line: 378, baseType: !7704)
!7704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !676, line: 373, size: 128, elements: !7705)
!7705 = !{!7706, !7707, !7708, !7709}
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !7704, file: !676, line: 374, baseType: !738, size: 32)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !7704, file: !676, line: 375, baseType: !740, size: 32, offset: 32)
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !7704, file: !676, line: 376, baseType: !742, size: 32, offset: 64)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7704, file: !676, line: 377, baseType: !744, size: 32, offset: 96)
!7710 = !DILocation(line: 76, column: 5, scope: !7700)
!7711 = !DILocation(line: 76, column: 23, scope: !7700)
!7712 = !DILocation(line: 78, column: 5, scope: !7700)
!7713 = !DILocation(line: 79, column: 5, scope: !7700)
!7714 = !DILocation(line: 80, column: 5, scope: !7700)
!7715 = !DILocation(line: 81, column: 5, scope: !7700)
!7716 = !DILocation(line: 84, column: 17, scope: !7700)
!7717 = !DILocation(line: 84, column: 26, scope: !7700)
!7718 = !DILocation(line: 85, column: 17, scope: !7700)
!7719 = !DILocation(line: 85, column: 29, scope: !7700)
!7720 = !DILocation(line: 86, column: 17, scope: !7700)
!7721 = !DILocation(line: 86, column: 26, scope: !7700)
!7722 = !DILocation(line: 87, column: 17, scope: !7700)
!7723 = !DILocation(line: 87, column: 24, scope: !7700)
!7724 = !DILocation(line: 88, column: 5, scope: !7700)
!7725 = !DILocation(line: 89, column: 1, scope: !7700)
!7726 = distinct !DISubprogram(name: "SysTick_Set", scope: !815, file: !815, line: 70, type: !6776, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !814, retainedNodes: !7727)
!7727 = !{!7728, !7729}
!7728 = !DILocalVariable(name: "ticks", arg: 1, scope: !7726, file: !815, line: 70, type: !61)
!7729 = !DILocalVariable(name: "val", scope: !7726, file: !815, line: 72, type: !61)
!7730 = !DILocation(line: 0, scope: !7726)
!7731 = !DILocation(line: 74, column: 16, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7726, file: !815, line: 74, column: 9)
!7733 = !DILocation(line: 74, column: 21, scope: !7732)
!7734 = !DILocation(line: 74, column: 9, scope: !7726)
!7735 = !DILocation(line: 78, column: 20, scope: !7726)
!7736 = !DILocation(line: 80, column: 19, scope: !7726)
!7737 = !DILocation(line: 83, column: 20, scope: !7726)
!7738 = !DILocation(line: 84, column: 20, scope: !7726)
!7739 = !DILocation(line: 86, column: 19, scope: !7726)
!7740 = !DILocation(line: 88, column: 5, scope: !7726)
!7741 = !DILocation(line: 89, column: 1, scope: !7726)
!7742 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !815, file: !815, line: 98, type: !154, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !814, retainedNodes: !1387)
!7743 = !DILocation(line: 100, column: 28, scope: !7742)
!7744 = !DILocation(line: 101, column: 1, scope: !7742)
!7745 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !815, file: !815, line: 110, type: !1368, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !814, retainedNodes: !1387)
!7746 = !DILocation(line: 112, column: 12, scope: !7745)
!7747 = !DILocation(line: 112, column: 5, scope: !7745)
!7748 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !815, file: !815, line: 122, type: !154, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !814, retainedNodes: !1387)
!7749 = !DILocation(line: 124, column: 23, scope: !7748)
!7750 = !DILocation(line: 124, column: 21, scope: !7748)
!7751 = !DILocation(line: 125, column: 1, scope: !7748)
!7752 = distinct !DISubprogram(name: "SystemInit", scope: !815, file: !815, line: 136, type: !154, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !814, retainedNodes: !1387)
!7753 = !DILocation(line: 140, column: 16, scope: !7752)
!7754 = !DILocation(line: 144, column: 16, scope: !7752)
!7755 = !DILocation(line: 147, column: 16, scope: !7752)
!7756 = !DILocation(line: 150, column: 1, scope: !7752)
!7757 = distinct !DISubprogram(name: "CachePreInit", scope: !815, file: !815, line: 158, type: !154, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !814, retainedNodes: !1387)
!7758 = !DILocation(line: 161, column: 22, scope: !7757)
!7759 = !DILocation(line: 164, column: 21, scope: !7757)
!7760 = !DILocation(line: 167, column: 21, scope: !7757)
!7761 = !DILocation(line: 170, column: 29, scope: !7757)
!7762 = !DILocation(line: 171, column: 33, scope: !7757)
!7763 = !DILocation(line: 173, column: 28, scope: !7757)
!7764 = !DILocation(line: 178, column: 30, scope: !7757)
!7765 = !DILocation(line: 192, column: 1, scope: !7757)
!7766 = distinct !DISubprogram(name: "_close", scope: !875, file: !875, line: 45, type: !3975, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1065, retainedNodes: !7767)
!7767 = !{!7768}
!7768 = !DILocalVariable(name: "file", arg: 1, scope: !7766, file: !875, line: 45, type: !7)
!7769 = !DILocation(line: 0, scope: !7766)
!7770 = !DILocation(line: 47, column: 5, scope: !7766)
!7771 = distinct !DISubprogram(name: "_fstat", scope: !875, file: !875, line: 50, type: !7772, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1065, retainedNodes: !7820)
!7772 = !DISubroutineType(types: !7773)
!7773 = !{!7, !7, !7774}
!7774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7775, size: 32)
!7775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !7776, line: 27, size: 704, elements: !7777)
!7776 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!7777 = !{!7778, !7781, !7784, !7787, !7790, !7793, !7796, !7797, !7800, !7810, !7811, !7812, !7815, !7818}
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !7775, file: !7776, line: 29, baseType: !7779, size: 16)
!7779 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !879, line: 161, baseType: !7780)
!7780 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !917, line: 56, baseType: !894)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !7775, file: !7776, line: 30, baseType: !7782, size: 16, offset: 16)
!7782 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !879, line: 139, baseType: !7783)
!7783 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !917, line: 75, baseType: !386)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !7775, file: !7776, line: 31, baseType: !7785, size: 32, offset: 32)
!7785 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !879, line: 189, baseType: !7786)
!7786 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !917, line: 90, baseType: !62)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !7775, file: !7776, line: 32, baseType: !7788, size: 16, offset: 64)
!7788 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !879, line: 194, baseType: !7789)
!7789 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !917, line: 209, baseType: !386)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !7775, file: !7776, line: 33, baseType: !7791, size: 16, offset: 80)
!7791 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !879, line: 165, baseType: !7792)
!7792 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !917, line: 60, baseType: !386)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !7775, file: !7776, line: 34, baseType: !7794, size: 16, offset: 96)
!7794 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !879, line: 169, baseType: !7795)
!7795 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !917, line: 63, baseType: !386)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !7775, file: !7776, line: 35, baseType: !7779, size: 16, offset: 112)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !7775, file: !7776, line: 36, baseType: !7798, size: 32, offset: 128)
!7798 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !879, line: 157, baseType: !7799)
!7799 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !917, line: 102, baseType: !934)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !7775, file: !7776, line: 42, baseType: !7801, size: 128, offset: 192)
!7801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !7802, line: 47, size: 128, elements: !7803)
!7802 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!7803 = !{!7804, !7809}
!7804 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !7801, file: !7802, line: 48, baseType: !7805, size: 64)
!7805 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !7806, line: 42, baseType: !7807)
!7806 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!7807 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !57, line: 200, baseType: !7808)
!7808 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !7801, file: !7802, line: 49, baseType: !240, size: 32, offset: 64)
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !7775, file: !7776, line: 43, baseType: !7801, size: 128, offset: 320)
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !7775, file: !7776, line: 44, baseType: !7801, size: 128, offset: 448)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !7775, file: !7776, line: 45, baseType: !7813, size: 32, offset: 576)
!7813 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !879, line: 102, baseType: !7814)
!7814 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !917, line: 34, baseType: !240)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !7775, file: !7776, line: 46, baseType: !7816, size: 32, offset: 608)
!7816 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !879, line: 97, baseType: !7817)
!7817 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !917, line: 30, baseType: !240)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !7775, file: !7776, line: 48, baseType: !7819, size: 64, offset: 640)
!7819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 64, elements: !397)
!7820 = !{!7821, !7822}
!7821 = !DILocalVariable(name: "file", arg: 1, scope: !7771, file: !875, line: 50, type: !7)
!7822 = !DILocalVariable(name: "st", arg: 2, scope: !7771, file: !875, line: 50, type: !7774)
!7823 = !DILocation(line: 0, scope: !7771)
!7824 = !DILocation(line: 52, column: 5, scope: !7771)
!7825 = distinct !DISubprogram(name: "_isatty", scope: !875, file: !875, line: 56, type: !3975, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1065, retainedNodes: !7826)
!7826 = !{!7827}
!7827 = !DILocalVariable(name: "file", arg: 1, scope: !7825, file: !875, line: 56, type: !7)
!7828 = !DILocation(line: 0, scope: !7825)
!7829 = !DILocation(line: 58, column: 5, scope: !7825)
!7830 = distinct !DISubprogram(name: "_lseek", scope: !875, file: !875, line: 61, type: !7831, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1065, retainedNodes: !7833)
!7831 = !DISubroutineType(types: !7832)
!7832 = !{!7, !7, !7, !7}
!7833 = !{!7834, !7835, !7836}
!7834 = !DILocalVariable(name: "file", arg: 1, scope: !7830, file: !875, line: 61, type: !7)
!7835 = !DILocalVariable(name: "ptr", arg: 2, scope: !7830, file: !875, line: 61, type: !7)
!7836 = !DILocalVariable(name: "dir", arg: 3, scope: !7830, file: !875, line: 61, type: !7)
!7837 = !DILocation(line: 0, scope: !7830)
!7838 = !DILocation(line: 63, column: 5, scope: !7830)
!7839 = distinct !DISubprogram(name: "_open", scope: !875, file: !875, line: 66, type: !7840, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1065, retainedNodes: !7842)
!7840 = !DISubroutineType(types: !7841)
!7841 = !{!7, !395, !7, !7}
!7842 = !{!7843, !7844, !7845}
!7843 = !DILocalVariable(name: "name", arg: 1, scope: !7839, file: !875, line: 66, type: !395)
!7844 = !DILocalVariable(name: "flags", arg: 2, scope: !7839, file: !875, line: 66, type: !7)
!7845 = !DILocalVariable(name: "mode", arg: 3, scope: !7839, file: !875, line: 66, type: !7)
!7846 = !DILocation(line: 0, scope: !7839)
!7847 = !DILocation(line: 68, column: 5, scope: !7839)
!7848 = distinct !DISubprogram(name: "_read", scope: !875, file: !875, line: 71, type: !7849, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1065, retainedNodes: !7851)
!7849 = !DISubroutineType(types: !7850)
!7850 = !{!7, !7, !265, !7}
!7851 = !{!7852, !7853, !7854}
!7852 = !DILocalVariable(name: "file", arg: 1, scope: !7848, file: !875, line: 71, type: !7)
!7853 = !DILocalVariable(name: "ptr", arg: 2, scope: !7848, file: !875, line: 71, type: !265)
!7854 = !DILocalVariable(name: "len", arg: 3, scope: !7848, file: !875, line: 71, type: !7)
!7855 = !DILocation(line: 0, scope: !7848)
!7856 = !DILocation(line: 73, column: 5, scope: !7848)
!7857 = distinct !DISubprogram(name: "_write", scope: !875, file: !875, line: 86, type: !7849, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1065, retainedNodes: !7858)
!7858 = !{!7859, !7860, !7861, !7862}
!7859 = !DILocalVariable(name: "file", arg: 1, scope: !7857, file: !875, line: 86, type: !7)
!7860 = !DILocalVariable(name: "ptr", arg: 2, scope: !7857, file: !875, line: 86, type: !265)
!7861 = !DILocalVariable(name: "len", arg: 3, scope: !7857, file: !875, line: 86, type: !7)
!7862 = !DILocalVariable(name: "i", scope: !7857, file: !875, line: 88, type: !7)
!7863 = !DILocation(line: 0, scope: !7857)
!7864 = !DILocation(line: 90, column: 19, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7866, file: !875, line: 90, column: 5)
!7866 = distinct !DILexicalBlock(scope: !7857, file: !875, line: 90, column: 5)
!7867 = !DILocation(line: 90, column: 5, scope: !7866)
!7868 = !DILocation(line: 91, column: 26, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7865, file: !875, line: 90, column: 31)
!7870 = !DILocation(line: 91, column: 22, scope: !7869)
!7871 = !DILocation(line: 91, column: 9, scope: !7869)
!7872 = !DILocation(line: 90, column: 27, scope: !7865)
!7873 = distinct !{!7873, !7867, !7874}
!7874 = !DILocation(line: 92, column: 5, scope: !7866)
!7875 = !DILocation(line: 94, column: 5, scope: !7857)
!7876 = !DILocation(line: 0, scope: !874)
!7877 = !DILocation(line: 105, column: 5, scope: !874)
!7878 = !{i64 3455}
!7879 = !DILocation(line: 107, column: 14, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !874, file: !875, line: 107, column: 9)
!7881 = !DILocation(line: 107, column: 11, scope: !7880)
!7882 = !DILocation(line: 107, column: 9, scope: !874)
!7883 = !DILocation(line: 113, column: 32, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !874, file: !875, line: 113, column: 9)
!7885 = !DILocation(line: 113, column: 15, scope: !7884)
!7886 = !DILocation(line: 124, column: 1, scope: !874)
!7887 = !DILocation(line: 113, column: 9, scope: !874)
!7888 = distinct !DISubprogram(name: "_exit", scope: !875, file: !875, line: 126, type: !1017, scopeLine: 127, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1065, retainedNodes: !7889)
!7889 = !{!7890}
!7890 = !DILocalVariable(name: "__status", arg: 1, scope: !7888, file: !875, line: 126, type: !7)
!7891 = !DILocation(line: 0, scope: !7888)
!7892 = !DILocation(line: 128, column: 5, scope: !7888)
!7893 = !DILocation(line: 129, column: 5, scope: !7888)
!7894 = distinct !{!7894, !7893, !7895}
!7895 = !DILocation(line: 131, column: 5, scope: !7888)
!7896 = distinct !DISubprogram(name: "_kill", scope: !875, file: !875, line: 135, type: !7897, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1065, retainedNodes: !7899)
!7897 = !DISubroutineType(types: !7898)
!7898 = !{!7, !7, !7}
!7899 = !{!7900, !7901}
!7900 = !DILocalVariable(name: "pid", arg: 1, scope: !7896, file: !875, line: 135, type: !7)
!7901 = !DILocalVariable(name: "sig", arg: 2, scope: !7896, file: !875, line: 135, type: !7)
!7902 = !DILocation(line: 0, scope: !7896)
!7903 = !DILocation(line: 137, column: 5, scope: !7896)
!7904 = !DILocation(line: 138, column: 5, scope: !7896)
!7905 = distinct !DISubprogram(name: "_getpid", scope: !875, file: !875, line: 142, type: !7906, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1065, retainedNodes: !1387)
!7906 = !DISubroutineType(types: !7907)
!7907 = !{!7908}
!7908 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !879, line: 174, baseType: !7909)
!7909 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !917, line: 52, baseType: !7)
!7910 = !DILocation(line: 144, column: 5, scope: !7905)
!7911 = !DILocation(line: 145, column: 5, scope: !7905)
